-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-devicefarmZSamazonka-devicefarm
@version 1.6.1


module Network.AWS.DeviceFarm.Types.ArtifactCategory
newtype ArtifactCategory
ArtifactCategory' :: Text -> ArtifactCategory
[fromArtifactCategory] :: ArtifactCategory -> Text
pattern ArtifactCategory_FILE :: ArtifactCategory
pattern ArtifactCategory_LOG :: ArtifactCategory
pattern ArtifactCategory_SCREENSHOT :: ArtifactCategory
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ArtifactCategory.ArtifactCategory


module Network.AWS.DeviceFarm.Types.ArtifactType
newtype ArtifactType
ArtifactType' :: Text -> ArtifactType
[fromArtifactType] :: ArtifactType -> Text
pattern ArtifactType_APPIUM_JAVA_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_JAVA_XML_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_PYTHON_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_PYTHON_XML_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_SERVER_OUTPUT :: ArtifactType
pattern ArtifactType_APPLICATION_CRASH_REPORT :: ArtifactType
pattern ArtifactType_AUTOMATION_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_JAVA_XML_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_JSON_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_PRETTY_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_STANDARD_OUTPUT :: ArtifactType
pattern ArtifactType_CUSTOMER_ARTIFACT :: ArtifactType
pattern ArtifactType_CUSTOMER_ARTIFACT_LOG :: ArtifactType
pattern ArtifactType_DEVICE_LOG :: ArtifactType
pattern ArtifactType_EXERCISER_MONKEY_OUTPUT :: ArtifactType
pattern ArtifactType_EXPLORER_EVENT_LOG :: ArtifactType
pattern ArtifactType_EXPLORER_SUMMARY_LOG :: ArtifactType
pattern ArtifactType_INSTRUMENTATION_OUTPUT :: ArtifactType
pattern ArtifactType_MESSAGE_LOG :: ArtifactType
pattern ArtifactType_RESULT_LOG :: ArtifactType
pattern ArtifactType_SCREENSHOT :: ArtifactType
pattern ArtifactType_SERVICE_LOG :: ArtifactType
pattern ArtifactType_TESTSPEC_OUTPUT :: ArtifactType
pattern ArtifactType_UNKNOWN :: ArtifactType
pattern ArtifactType_VIDEO :: ArtifactType
pattern ArtifactType_VIDEO_LOG :: ArtifactType
pattern ArtifactType_WEBKIT_LOG :: ArtifactType
pattern ArtifactType_XCTEST_LOG :: ArtifactType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ArtifactType.ArtifactType


module Network.AWS.DeviceFarm.Types.Artifact

-- | Represents the output of a test. Examples of artifacts include logs
--   and screenshots.
--   
--   <i>See:</i> <a>newArtifact</a> smart constructor.
data Artifact
Artifact' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ArtifactType -> Artifact

-- | The artifact's ARN.
[$sel:arn:Artifact'] :: Artifact -> Maybe Text

-- | The artifact's name.
[$sel:name:Artifact'] :: Artifact -> Maybe Text

-- | The artifact's file extension.
[$sel:extension:Artifact'] :: Artifact -> Maybe Text

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the artifact's file.
[$sel:url:Artifact'] :: Artifact -> Maybe Text

-- | The artifact's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>UNKNOWN</li>
--   <li>SCREENSHOT</li>
--   <li>DEVICE_LOG</li>
--   <li>MESSAGE_LOG</li>
--   <li>VIDEO_LOG</li>
--   <li>RESULT_LOG</li>
--   <li>SERVICE_LOG</li>
--   <li>WEBKIT_LOG</li>
--   <li>INSTRUMENTATION_OUTPUT</li>
--   <li>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an
--   Android fuzz test.</li>
--   <li>CALABASH_JSON_OUTPUT</li>
--   <li>CALABASH_PRETTY_OUTPUT</li>
--   <li>CALABASH_STANDARD_OUTPUT</li>
--   <li>CALABASH_JAVA_XML_OUTPUT</li>
--   <li>AUTOMATION_OUTPUT</li>
--   <li>APPIUM_SERVER_OUTPUT</li>
--   <li>APPIUM_JAVA_OUTPUT</li>
--   <li>APPIUM_JAVA_XML_OUTPUT</li>
--   <li>APPIUM_PYTHON_OUTPUT</li>
--   <li>APPIUM_PYTHON_XML_OUTPUT</li>
--   <li>EXPLORER_EVENT_LOG</li>
--   <li>EXPLORER_SUMMARY_LOG</li>
--   <li>APPLICATION_CRASH_REPORT</li>
--   <li>XCTEST_LOG</li>
--   <li>VIDEO</li>
--   <li>CUSTOMER_ARTIFACT</li>
--   <li>CUSTOMER_ARTIFACT_LOG</li>
--   <li>TESTSPEC_OUTPUT</li>
--   </ul>
[$sel:type':Artifact'] :: Artifact -> Maybe ArtifactType

-- | Create a value of <a>Artifact</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Artifact'</a>, <a>artifact_arn</a> - The artifact's ARN.
--   
--   <a>$sel:name:Artifact'</a>, <a>artifact_name</a> - The artifact's
--   name.
--   
--   <a>$sel:extension:Artifact'</a>, <a>artifact_extension</a> - The
--   artifact's file extension.
--   
--   <a>$sel:url:Artifact'</a>, <a>artifact_url</a> - The presigned Amazon
--   S3 URL that can be used with a GET request to download the artifact's
--   file.
--   
--   <a>$sel:type':Artifact'</a>, <a>artifact_type</a> - The artifact's
--   type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>UNKNOWN</li>
--   <li>SCREENSHOT</li>
--   <li>DEVICE_LOG</li>
--   <li>MESSAGE_LOG</li>
--   <li>VIDEO_LOG</li>
--   <li>RESULT_LOG</li>
--   <li>SERVICE_LOG</li>
--   <li>WEBKIT_LOG</li>
--   <li>INSTRUMENTATION_OUTPUT</li>
--   <li>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an
--   Android fuzz test.</li>
--   <li>CALABASH_JSON_OUTPUT</li>
--   <li>CALABASH_PRETTY_OUTPUT</li>
--   <li>CALABASH_STANDARD_OUTPUT</li>
--   <li>CALABASH_JAVA_XML_OUTPUT</li>
--   <li>AUTOMATION_OUTPUT</li>
--   <li>APPIUM_SERVER_OUTPUT</li>
--   <li>APPIUM_JAVA_OUTPUT</li>
--   <li>APPIUM_JAVA_XML_OUTPUT</li>
--   <li>APPIUM_PYTHON_OUTPUT</li>
--   <li>APPIUM_PYTHON_XML_OUTPUT</li>
--   <li>EXPLORER_EVENT_LOG</li>
--   <li>EXPLORER_SUMMARY_LOG</li>
--   <li>APPLICATION_CRASH_REPORT</li>
--   <li>XCTEST_LOG</li>
--   <li>VIDEO</li>
--   <li>CUSTOMER_ARTIFACT</li>
--   <li>CUSTOMER_ARTIFACT_LOG</li>
--   <li>TESTSPEC_OUTPUT</li>
--   </ul>
newArtifact :: Artifact

-- | The artifact's ARN.
artifact_arn :: Lens' Artifact (Maybe Text)

-- | The artifact's name.
artifact_name :: Lens' Artifact (Maybe Text)

-- | The artifact's file extension.
artifact_extension :: Lens' Artifact (Maybe Text)

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the artifact's file.
artifact_url :: Lens' Artifact (Maybe Text)

-- | The artifact's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>UNKNOWN</li>
--   <li>SCREENSHOT</li>
--   <li>DEVICE_LOG</li>
--   <li>MESSAGE_LOG</li>
--   <li>VIDEO_LOG</li>
--   <li>RESULT_LOG</li>
--   <li>SERVICE_LOG</li>
--   <li>WEBKIT_LOG</li>
--   <li>INSTRUMENTATION_OUTPUT</li>
--   <li>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an
--   Android fuzz test.</li>
--   <li>CALABASH_JSON_OUTPUT</li>
--   <li>CALABASH_PRETTY_OUTPUT</li>
--   <li>CALABASH_STANDARD_OUTPUT</li>
--   <li>CALABASH_JAVA_XML_OUTPUT</li>
--   <li>AUTOMATION_OUTPUT</li>
--   <li>APPIUM_SERVER_OUTPUT</li>
--   <li>APPIUM_JAVA_OUTPUT</li>
--   <li>APPIUM_JAVA_XML_OUTPUT</li>
--   <li>APPIUM_PYTHON_OUTPUT</li>
--   <li>APPIUM_PYTHON_XML_OUTPUT</li>
--   <li>EXPLORER_EVENT_LOG</li>
--   <li>EXPLORER_SUMMARY_LOG</li>
--   <li>APPLICATION_CRASH_REPORT</li>
--   <li>XCTEST_LOG</li>
--   <li>VIDEO</li>
--   <li>CUSTOMER_ARTIFACT</li>
--   <li>CUSTOMER_ARTIFACT_LOG</li>
--   <li>TESTSPEC_OUTPUT</li>
--   </ul>
artifact_type :: Lens' Artifact (Maybe ArtifactType)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Artifact.Artifact
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Artifact.Artifact
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Artifact.Artifact
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Artifact.Artifact
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Artifact.Artifact
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Artifact.Artifact
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Artifact.Artifact


module Network.AWS.DeviceFarm.Types.BillingMethod
newtype BillingMethod
BillingMethod' :: Text -> BillingMethod
[fromBillingMethod] :: BillingMethod -> Text
pattern BillingMethod_METERED :: BillingMethod
pattern BillingMethod_UNMETERED :: BillingMethod
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.BillingMethod.BillingMethod


module Network.AWS.DeviceFarm.Types.CPU

-- | Represents the amount of CPU that an app is using on a physical
--   device. Does not represent system-wide CPU usage.
--   
--   <i>See:</i> <a>newCPU</a> smart constructor.
data CPU
CPU' :: Maybe Text -> Maybe Text -> Maybe Double -> CPU

-- | The CPU's architecture (for example, x86 or ARM).
[$sel:architecture:CPU'] :: CPU -> Maybe Text

-- | The CPU's frequency.
[$sel:frequency:CPU'] :: CPU -> Maybe Text

-- | The clock speed of the device's CPU, expressed in hertz (Hz). For
--   example, a 1.2 GHz CPU is expressed as 1200000000.
[$sel:clock:CPU'] :: CPU -> Maybe Double

-- | Create a value of <a>CPU</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:architecture:CPU'</a>, <a>cpu_architecture</a> - The CPU's
--   architecture (for example, x86 or ARM).
--   
--   <a>$sel:frequency:CPU'</a>, <a>cpu_frequency</a> - The CPU's
--   frequency.
--   
--   <a>$sel:clock:CPU'</a>, <a>cpu_clock</a> - The clock speed of the
--   device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is
--   expressed as 1200000000.
newCPU :: CPU

-- | The CPU's architecture (for example, x86 or ARM).
cpu_architecture :: Lens' CPU (Maybe Text)

-- | The CPU's frequency.
cpu_frequency :: Lens' CPU (Maybe Text)

-- | The clock speed of the device's CPU, expressed in hertz (Hz). For
--   example, a 1.2 GHz CPU is expressed as 1200000000.
cpu_clock :: Lens' CPU (Maybe Double)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.CPU.CPU
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.CPU.CPU
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.CPU.CPU
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.CPU.CPU
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.CPU.CPU
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.CPU.CPU
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.CPU.CPU


module Network.AWS.DeviceFarm.Types.Counters

-- | Represents entity counters.
--   
--   <i>See:</i> <a>newCounters</a> smart constructor.
data Counters
Counters' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Counters

-- | The number of errored entities.
[$sel:errored:Counters'] :: Counters -> Maybe Int

-- | The number of warned entities.
[$sel:warned:Counters'] :: Counters -> Maybe Int

-- | The number of passed entities.
[$sel:passed:Counters'] :: Counters -> Maybe Int

-- | The total number of entities.
[$sel:total:Counters'] :: Counters -> Maybe Int

-- | The number of stopped entities.
[$sel:stopped:Counters'] :: Counters -> Maybe Int

-- | The number of failed entities.
[$sel:failed:Counters'] :: Counters -> Maybe Int

-- | The number of skipped entities.
[$sel:skipped:Counters'] :: Counters -> Maybe Int

-- | Create a value of <a>Counters</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errored:Counters'</a>, <a>counters_errored</a> - The number of
--   errored entities.
--   
--   <a>$sel:warned:Counters'</a>, <a>counters_warned</a> - The number of
--   warned entities.
--   
--   <a>$sel:passed:Counters'</a>, <a>counters_passed</a> - The number of
--   passed entities.
--   
--   <a>$sel:total:Counters'</a>, <a>counters_total</a> - The total number
--   of entities.
--   
--   <a>$sel:stopped:Counters'</a>, <a>counters_stopped</a> - The number of
--   stopped entities.
--   
--   <a>$sel:failed:Counters'</a>, <a>counters_failed</a> - The number of
--   failed entities.
--   
--   <a>$sel:skipped:Counters'</a>, <a>counters_skipped</a> - The number of
--   skipped entities.
newCounters :: Counters

-- | The number of errored entities.
counters_errored :: Lens' Counters (Maybe Int)

-- | The number of warned entities.
counters_warned :: Lens' Counters (Maybe Int)

-- | The number of passed entities.
counters_passed :: Lens' Counters (Maybe Int)

-- | The total number of entities.
counters_total :: Lens' Counters (Maybe Int)

-- | The number of stopped entities.
counters_stopped :: Lens' Counters (Maybe Int)

-- | The number of failed entities.
counters_failed :: Lens' Counters (Maybe Int)

-- | The number of skipped entities.
counters_skipped :: Lens' Counters (Maybe Int)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Counters.Counters
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Counters.Counters
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Counters.Counters
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Counters.Counters
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Counters.Counters
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Counters.Counters
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Counters.Counters


module Network.AWS.DeviceFarm.Types.CreateRemoteAccessSessionConfiguration

-- | Configuration settings for a remote access session, including billing
--   method.
--   
--   <i>See:</i> <a>newCreateRemoteAccessSessionConfiguration</a> smart
--   constructor.
data CreateRemoteAccessSessionConfiguration
CreateRemoteAccessSessionConfiguration' :: Maybe BillingMethod -> Maybe [Text] -> CreateRemoteAccessSessionConfiguration

-- | The billing method for the remote access session.
[$sel:billingMethod:CreateRemoteAccessSessionConfiguration'] :: CreateRemoteAccessSessionConfiguration -> Maybe BillingMethod

-- | An array of ARNs included in the VPC endpoint configuration.
[$sel:vpceConfigurationArns:CreateRemoteAccessSessionConfiguration'] :: CreateRemoteAccessSessionConfiguration -> Maybe [Text]

-- | Create a value of <a>CreateRemoteAccessSessionConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:billingMethod:CreateRemoteAccessSessionConfiguration'</a>,
--   <a>createRemoteAccessSessionConfiguration_billingMethod</a> - The
--   billing method for the remote access session.
--   
--   
--   <a>$sel:vpceConfigurationArns:CreateRemoteAccessSessionConfiguration'</a>,
--   <a>createRemoteAccessSessionConfiguration_vpceConfigurationArns</a> -
--   An array of ARNs included in the VPC endpoint configuration.
newCreateRemoteAccessSessionConfiguration :: CreateRemoteAccessSessionConfiguration

-- | The billing method for the remote access session.
createRemoteAccessSessionConfiguration_billingMethod :: Lens' CreateRemoteAccessSessionConfiguration (Maybe BillingMethod)

-- | An array of ARNs included in the VPC endpoint configuration.
createRemoteAccessSessionConfiguration_vpceConfigurationArns :: Lens' CreateRemoteAccessSessionConfiguration (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.CreateRemoteAccessSessionConfiguration.CreateRemoteAccessSessionConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.CreateRemoteAccessSessionConfiguration.CreateRemoteAccessSessionConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.CreateRemoteAccessSessionConfiguration.CreateRemoteAccessSessionConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.CreateRemoteAccessSessionConfiguration.CreateRemoteAccessSessionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.CreateRemoteAccessSessionConfiguration.CreateRemoteAccessSessionConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.CreateRemoteAccessSessionConfiguration.CreateRemoteAccessSessionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.CreateRemoteAccessSessionConfiguration.CreateRemoteAccessSessionConfiguration


module Network.AWS.DeviceFarm.Types.CurrencyCode
newtype CurrencyCode
CurrencyCode' :: Text -> CurrencyCode
[fromCurrencyCode] :: CurrencyCode -> Text
pattern CurrencyCode_USD :: CurrencyCode
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.CurrencyCode.CurrencyCode


module Network.AWS.DeviceFarm.Types.CustomerArtifactPaths

-- | A JSON object that specifies the paths where the artifacts generated
--   by the customer's tests, on the device or in the test environment, are
--   pulled from.
--   
--   Specify <tt>deviceHostPaths</tt> and optionally specify either
--   <tt>iosPaths</tt> or <tt>androidPaths</tt>.
--   
--   For web app tests, you can specify both <tt>iosPaths</tt> and
--   <tt>androidPaths</tt>.
--   
--   <i>See:</i> <a>newCustomerArtifactPaths</a> smart constructor.
data CustomerArtifactPaths
CustomerArtifactPaths' :: Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> CustomerArtifactPaths

-- | Comma-separated list of paths in the test execution environment where
--   the artifacts generated by the customer's tests are pulled from.
[$sel:deviceHostPaths:CustomerArtifactPaths'] :: CustomerArtifactPaths -> Maybe [Text]

-- | Comma-separated list of paths on the iOS device where the artifacts
--   generated by the customer's tests are pulled from.
[$sel:iosPaths:CustomerArtifactPaths'] :: CustomerArtifactPaths -> Maybe [Text]

-- | Comma-separated list of paths on the Android device where the
--   artifacts generated by the customer's tests are pulled from.
[$sel:androidPaths:CustomerArtifactPaths'] :: CustomerArtifactPaths -> Maybe [Text]

-- | Create a value of <a>CustomerArtifactPaths</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceHostPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_deviceHostPaths</a> - Comma-separated list of
--   paths in the test execution environment where the artifacts generated
--   by the customer's tests are pulled from.
--   
--   <a>$sel:iosPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_iosPaths</a> - Comma-separated list of paths
--   on the iOS device where the artifacts generated by the customer's
--   tests are pulled from.
--   
--   <a>$sel:androidPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_androidPaths</a> - Comma-separated list of
--   paths on the Android device where the artifacts generated by the
--   customer's tests are pulled from.
newCustomerArtifactPaths :: CustomerArtifactPaths

-- | Comma-separated list of paths in the test execution environment where
--   the artifacts generated by the customer's tests are pulled from.
customerArtifactPaths_deviceHostPaths :: Lens' CustomerArtifactPaths (Maybe [Text])

-- | Comma-separated list of paths on the iOS device where the artifacts
--   generated by the customer's tests are pulled from.
customerArtifactPaths_iosPaths :: Lens' CustomerArtifactPaths (Maybe [Text])

-- | Comma-separated list of paths on the Android device where the
--   artifacts generated by the customer's tests are pulled from.
customerArtifactPaths_androidPaths :: Lens' CustomerArtifactPaths (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.CustomerArtifactPaths.CustomerArtifactPaths
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.CustomerArtifactPaths.CustomerArtifactPaths
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.CustomerArtifactPaths.CustomerArtifactPaths
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.CustomerArtifactPaths.CustomerArtifactPaths
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.CustomerArtifactPaths.CustomerArtifactPaths
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.CustomerArtifactPaths.CustomerArtifactPaths
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.CustomerArtifactPaths.CustomerArtifactPaths
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.CustomerArtifactPaths.CustomerArtifactPaths


module Network.AWS.DeviceFarm.Types.DeviceAttribute
newtype DeviceAttribute
DeviceAttribute' :: Text -> DeviceAttribute
[fromDeviceAttribute] :: DeviceAttribute -> Text
pattern DeviceAttribute_APPIUM_VERSION :: DeviceAttribute
pattern DeviceAttribute_ARN :: DeviceAttribute
pattern DeviceAttribute_AVAILABILITY :: DeviceAttribute
pattern DeviceAttribute_FLEET_TYPE :: DeviceAttribute
pattern DeviceAttribute_FORM_FACTOR :: DeviceAttribute
pattern DeviceAttribute_INSTANCE_ARN :: DeviceAttribute
pattern DeviceAttribute_INSTANCE_LABELS :: DeviceAttribute
pattern DeviceAttribute_MANUFACTURER :: DeviceAttribute
pattern DeviceAttribute_MODEL :: DeviceAttribute
pattern DeviceAttribute_OS_VERSION :: DeviceAttribute
pattern DeviceAttribute_PLATFORM :: DeviceAttribute
pattern DeviceAttribute_REMOTE_ACCESS_ENABLED :: DeviceAttribute
pattern DeviceAttribute_REMOTE_DEBUG_ENABLED :: DeviceAttribute
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceAttribute.DeviceAttribute


module Network.AWS.DeviceFarm.Types.DeviceAvailability
newtype DeviceAvailability
DeviceAvailability' :: Text -> DeviceAvailability
[fromDeviceAvailability] :: DeviceAvailability -> Text
pattern DeviceAvailability_AVAILABLE :: DeviceAvailability
pattern DeviceAvailability_BUSY :: DeviceAvailability
pattern DeviceAvailability_HIGHLY_AVAILABLE :: DeviceAvailability
pattern DeviceAvailability_TEMPORARY_NOT_AVAILABLE :: DeviceAvailability
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceAvailability.DeviceAvailability


module Network.AWS.DeviceFarm.Types.DeviceFilterAttribute
newtype DeviceFilterAttribute
DeviceFilterAttribute' :: Text -> DeviceFilterAttribute
[fromDeviceFilterAttribute] :: DeviceFilterAttribute -> Text
pattern DeviceFilterAttribute_ARN :: DeviceFilterAttribute
pattern DeviceFilterAttribute_AVAILABILITY :: DeviceFilterAttribute
pattern DeviceFilterAttribute_FLEET_TYPE :: DeviceFilterAttribute
pattern DeviceFilterAttribute_FORM_FACTOR :: DeviceFilterAttribute
pattern DeviceFilterAttribute_INSTANCE_ARN :: DeviceFilterAttribute
pattern DeviceFilterAttribute_INSTANCE_LABELS :: DeviceFilterAttribute
pattern DeviceFilterAttribute_MANUFACTURER :: DeviceFilterAttribute
pattern DeviceFilterAttribute_MODEL :: DeviceFilterAttribute
pattern DeviceFilterAttribute_OS_VERSION :: DeviceFilterAttribute
pattern DeviceFilterAttribute_PLATFORM :: DeviceFilterAttribute
pattern DeviceFilterAttribute_REMOTE_ACCESS_ENABLED :: DeviceFilterAttribute
pattern DeviceFilterAttribute_REMOTE_DEBUG_ENABLED :: DeviceFilterAttribute
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceFilterAttribute.DeviceFilterAttribute


module Network.AWS.DeviceFarm.Types.DeviceFormFactor
newtype DeviceFormFactor
DeviceFormFactor' :: Text -> DeviceFormFactor
[fromDeviceFormFactor] :: DeviceFormFactor -> Text
pattern DeviceFormFactor_PHONE :: DeviceFormFactor
pattern DeviceFormFactor_TABLET :: DeviceFormFactor
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceFormFactor.DeviceFormFactor


module Network.AWS.DeviceFarm.Types.DeviceMinutes

-- | Represents the total (metered or unmetered) minutes used by the
--   resource to run tests. Contains the sum of minutes consumed by all
--   children.
--   
--   <i>See:</i> <a>newDeviceMinutes</a> smart constructor.
data DeviceMinutes
DeviceMinutes' :: Maybe Double -> Maybe Double -> Maybe Double -> DeviceMinutes

-- | When specified, represents only the sum of unmetered minutes used by
--   the resource to run tests.
[$sel:unmetered:DeviceMinutes'] :: DeviceMinutes -> Maybe Double

-- | When specified, represents only the sum of metered minutes used by the
--   resource to run tests.
[$sel:metered:DeviceMinutes'] :: DeviceMinutes -> Maybe Double

-- | When specified, represents the total minutes used by the resource to
--   run tests.
[$sel:total:DeviceMinutes'] :: DeviceMinutes -> Maybe Double

-- | Create a value of <a>DeviceMinutes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unmetered:DeviceMinutes'</a>, <a>deviceMinutes_unmetered</a> -
--   When specified, represents only the sum of unmetered minutes used by
--   the resource to run tests.
--   
--   <a>$sel:metered:DeviceMinutes'</a>, <a>deviceMinutes_metered</a> -
--   When specified, represents only the sum of metered minutes used by the
--   resource to run tests.
--   
--   <a>$sel:total:DeviceMinutes'</a>, <a>deviceMinutes_total</a> - When
--   specified, represents the total minutes used by the resource to run
--   tests.
newDeviceMinutes :: DeviceMinutes

-- | When specified, represents only the sum of unmetered minutes used by
--   the resource to run tests.
deviceMinutes_unmetered :: Lens' DeviceMinutes (Maybe Double)

-- | When specified, represents only the sum of metered minutes used by the
--   resource to run tests.
deviceMinutes_metered :: Lens' DeviceMinutes (Maybe Double)

-- | When specified, represents the total minutes used by the resource to
--   run tests.
deviceMinutes_total :: Lens' DeviceMinutes (Maybe Double)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceMinutes.DeviceMinutes
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceMinutes.DeviceMinutes
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceMinutes.DeviceMinutes
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceMinutes.DeviceMinutes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DeviceMinutes.DeviceMinutes
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceMinutes.DeviceMinutes
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceMinutes.DeviceMinutes


module Network.AWS.DeviceFarm.Types.DevicePlatform
newtype DevicePlatform
DevicePlatform' :: Text -> DevicePlatform
[fromDevicePlatform] :: DevicePlatform -> Text
pattern DevicePlatform_ANDROID :: DevicePlatform
pattern DevicePlatform_IOS :: DevicePlatform
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DevicePlatform.DevicePlatform


module Network.AWS.DeviceFarm.Types.DevicePoolType
newtype DevicePoolType
DevicePoolType' :: Text -> DevicePoolType
[fromDevicePoolType] :: DevicePoolType -> Text
pattern DevicePoolType_CURATED :: DevicePoolType
pattern DevicePoolType_PRIVATE :: DevicePoolType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DevicePoolType.DevicePoolType


module Network.AWS.DeviceFarm.Types.ExecutionConfiguration

-- | Represents configuration information about a test run, such as the
--   execution timeout (in minutes).
--   
--   <i>See:</i> <a>newExecutionConfiguration</a> smart constructor.
data ExecutionConfiguration
ExecutionConfiguration' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Bool -> ExecutionConfiguration

-- | True if app package cleanup is enabled at the beginning of the test.
--   Otherwise, false.
[$sel:appPackagesCleanup:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Bool

-- | Set to true to enable video capture. Otherwise, set to false. The
--   default is true.
[$sel:videoCapture:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Bool

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
[$sel:skipAppResign:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Bool

-- | The number of minutes a test run executes before it times out.
[$sel:jobTimeoutMinutes:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Int

-- | True if account cleanup is enabled at the beginning of the test.
--   Otherwise, false.
[$sel:accountsCleanup:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Bool

-- | Create a value of <a>ExecutionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appPackagesCleanup:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_appPackagesCleanup</a> - True if app package
--   cleanup is enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:videoCapture:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_videoCapture</a> - Set to true to enable
--   video capture. Otherwise, set to false. The default is true.
--   
--   <a>$sel:skipAppResign:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_skipAppResign</a> - When set to
--   <tt>true</tt>, for private devices, Device Farm does not sign your app
--   again. For public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:jobTimeoutMinutes:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_jobTimeoutMinutes</a> - The number of
--   minutes a test run executes before it times out.
--   
--   <a>$sel:accountsCleanup:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_accountsCleanup</a> - True if account
--   cleanup is enabled at the beginning of the test. Otherwise, false.
newExecutionConfiguration :: ExecutionConfiguration

-- | True if app package cleanup is enabled at the beginning of the test.
--   Otherwise, false.
executionConfiguration_appPackagesCleanup :: Lens' ExecutionConfiguration (Maybe Bool)

-- | Set to true to enable video capture. Otherwise, set to false. The
--   default is true.
executionConfiguration_videoCapture :: Lens' ExecutionConfiguration (Maybe Bool)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
executionConfiguration_skipAppResign :: Lens' ExecutionConfiguration (Maybe Bool)

-- | The number of minutes a test run executes before it times out.
executionConfiguration_jobTimeoutMinutes :: Lens' ExecutionConfiguration (Maybe Int)

-- | True if account cleanup is enabled at the beginning of the test.
--   Otherwise, false.
executionConfiguration_accountsCleanup :: Lens' ExecutionConfiguration (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ExecutionConfiguration.ExecutionConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ExecutionConfiguration.ExecutionConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ExecutionConfiguration.ExecutionConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ExecutionConfiguration.ExecutionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ExecutionConfiguration.ExecutionConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ExecutionConfiguration.ExecutionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.ExecutionConfiguration.ExecutionConfiguration


module Network.AWS.DeviceFarm.Types.ExecutionResult
newtype ExecutionResult
ExecutionResult' :: Text -> ExecutionResult
[fromExecutionResult] :: ExecutionResult -> Text
pattern ExecutionResult_ERRORED :: ExecutionResult
pattern ExecutionResult_FAILED :: ExecutionResult
pattern ExecutionResult_PASSED :: ExecutionResult
pattern ExecutionResult_PENDING :: ExecutionResult
pattern ExecutionResult_SKIPPED :: ExecutionResult
pattern ExecutionResult_STOPPED :: ExecutionResult
pattern ExecutionResult_WARNED :: ExecutionResult
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ExecutionResult.ExecutionResult


module Network.AWS.DeviceFarm.Types.ExecutionResultCode
newtype ExecutionResultCode
ExecutionResultCode' :: Text -> ExecutionResultCode
[fromExecutionResultCode] :: ExecutionResultCode -> Text
pattern ExecutionResultCode_PARSING_FAILED :: ExecutionResultCode
pattern ExecutionResultCode_VPC_ENDPOINT_SETUP_FAILED :: ExecutionResultCode
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ExecutionResultCode.ExecutionResultCode


module Network.AWS.DeviceFarm.Types.ExecutionStatus
newtype ExecutionStatus
ExecutionStatus' :: Text -> ExecutionStatus
[fromExecutionStatus] :: ExecutionStatus -> Text
pattern ExecutionStatus_COMPLETED :: ExecutionStatus
pattern ExecutionStatus_PENDING :: ExecutionStatus
pattern ExecutionStatus_PENDING_CONCURRENCY :: ExecutionStatus
pattern ExecutionStatus_PENDING_DEVICE :: ExecutionStatus
pattern ExecutionStatus_PREPARING :: ExecutionStatus
pattern ExecutionStatus_PROCESSING :: ExecutionStatus
pattern ExecutionStatus_RUNNING :: ExecutionStatus
pattern ExecutionStatus_SCHEDULING :: ExecutionStatus
pattern ExecutionStatus_STOPPING :: ExecutionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ExecutionStatus.ExecutionStatus


module Network.AWS.DeviceFarm.Types.IncompatibilityMessage

-- | Represents information about incompatibility.
--   
--   <i>See:</i> <a>newIncompatibilityMessage</a> smart constructor.
data IncompatibilityMessage
IncompatibilityMessage' :: Maybe Text -> Maybe DeviceAttribute -> IncompatibilityMessage

-- | A message about the incompatibility.
[$sel:message:IncompatibilityMessage'] :: IncompatibilityMessage -> Maybe Text

-- | The type of incompatibility.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ARN</li>
--   <li>FORM_FACTOR (for example, phone or tablet)</li>
--   <li>MANUFACTURER</li>
--   <li>PLATFORM (for example, Android or iOS)</li>
--   <li>REMOTE_ACCESS_ENABLED</li>
--   <li>APPIUM_VERSION</li>
--   </ul>
[$sel:type':IncompatibilityMessage'] :: IncompatibilityMessage -> Maybe DeviceAttribute

-- | Create a value of <a>IncompatibilityMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:IncompatibilityMessage'</a>,
--   <a>incompatibilityMessage_message</a> - A message about the
--   incompatibility.
--   
--   <a>$sel:type':IncompatibilityMessage'</a>,
--   <a>incompatibilityMessage_type</a> - The type of incompatibility.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ARN</li>
--   <li>FORM_FACTOR (for example, phone or tablet)</li>
--   <li>MANUFACTURER</li>
--   <li>PLATFORM (for example, Android or iOS)</li>
--   <li>REMOTE_ACCESS_ENABLED</li>
--   <li>APPIUM_VERSION</li>
--   </ul>
newIncompatibilityMessage :: IncompatibilityMessage

-- | A message about the incompatibility.
incompatibilityMessage_message :: Lens' IncompatibilityMessage (Maybe Text)

-- | The type of incompatibility.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ARN</li>
--   <li>FORM_FACTOR (for example, phone or tablet)</li>
--   <li>MANUFACTURER</li>
--   <li>PLATFORM (for example, Android or iOS)</li>
--   <li>REMOTE_ACCESS_ENABLED</li>
--   <li>APPIUM_VERSION</li>
--   </ul>
incompatibilityMessage_type :: Lens' IncompatibilityMessage (Maybe DeviceAttribute)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.IncompatibilityMessage.IncompatibilityMessage
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.IncompatibilityMessage.IncompatibilityMessage
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.IncompatibilityMessage.IncompatibilityMessage
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.IncompatibilityMessage.IncompatibilityMessage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.IncompatibilityMessage.IncompatibilityMessage
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.IncompatibilityMessage.IncompatibilityMessage
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.IncompatibilityMessage.IncompatibilityMessage


module Network.AWS.DeviceFarm.Types.InstanceProfile

-- | Represents the instance profile.
--   
--   <i>See:</i> <a>newInstanceProfile</a> smart constructor.
data InstanceProfile
InstanceProfile' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> InstanceProfile

-- | An array of strings containing the list of app packages that should
--   not be cleaned up from the device after a test run completes.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
[$sel:excludeAppPackagesFromCleanup:InstanceProfile'] :: InstanceProfile -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the instance profile.
[$sel:arn:InstanceProfile'] :: InstanceProfile -> Maybe Text

-- | The name of the instance profile.
[$sel:name:InstanceProfile'] :: InstanceProfile -> Maybe Text

-- | The description of the instance profile.
[$sel:description:InstanceProfile'] :: InstanceProfile -> Maybe Text

-- | When set to <tt>true</tt>, Device Farm reboots the instance after a
--   test run. The default value is <tt>true</tt>.
[$sel:rebootAfterUse:InstanceProfile'] :: InstanceProfile -> Maybe Bool

-- | When set to <tt>true</tt>, Device Farm removes app packages after a
--   test run. The default value is <tt>false</tt> for private devices.
[$sel:packageCleanup:InstanceProfile'] :: InstanceProfile -> Maybe Bool

-- | Create a value of <a>InstanceProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeAppPackagesFromCleanup:InstanceProfile'</a>,
--   <a>instanceProfile_excludeAppPackagesFromCleanup</a> - An array of
--   strings containing the list of app packages that should not be cleaned
--   up from the device after a test run completes.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
--   
--   <a>$sel:arn:InstanceProfile'</a>, <a>instanceProfile_arn</a> - The
--   Amazon Resource Name (ARN) of the instance profile.
--   
--   <a>$sel:name:InstanceProfile'</a>, <a>instanceProfile_name</a> - The
--   name of the instance profile.
--   
--   <a>$sel:description:InstanceProfile'</a>,
--   <a>instanceProfile_description</a> - The description of the instance
--   profile.
--   
--   <a>$sel:rebootAfterUse:InstanceProfile'</a>,
--   <a>instanceProfile_rebootAfterUse</a> - When set to <tt>true</tt>,
--   Device Farm reboots the instance after a test run. The default value
--   is <tt>true</tt>.
--   
--   <a>$sel:packageCleanup:InstanceProfile'</a>,
--   <a>instanceProfile_packageCleanup</a> - When set to <tt>true</tt>,
--   Device Farm removes app packages after a test run. The default value
--   is <tt>false</tt> for private devices.
newInstanceProfile :: InstanceProfile

-- | An array of strings containing the list of app packages that should
--   not be cleaned up from the device after a test run completes.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
instanceProfile_excludeAppPackagesFromCleanup :: Lens' InstanceProfile (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the instance profile.
instanceProfile_arn :: Lens' InstanceProfile (Maybe Text)

-- | The name of the instance profile.
instanceProfile_name :: Lens' InstanceProfile (Maybe Text)

-- | The description of the instance profile.
instanceProfile_description :: Lens' InstanceProfile (Maybe Text)

-- | When set to <tt>true</tt>, Device Farm reboots the instance after a
--   test run. The default value is <tt>true</tt>.
instanceProfile_rebootAfterUse :: Lens' InstanceProfile (Maybe Bool)

-- | When set to <tt>true</tt>, Device Farm removes app packages after a
--   test run. The default value is <tt>false</tt> for private devices.
instanceProfile_packageCleanup :: Lens' InstanceProfile (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.InstanceProfile.InstanceProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.InstanceProfile.InstanceProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.InstanceProfile.InstanceProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.InstanceProfile.InstanceProfile
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.InstanceProfile.InstanceProfile
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.InstanceProfile.InstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.InstanceProfile.InstanceProfile


module Network.AWS.DeviceFarm.Types.InstanceStatus
newtype InstanceStatus
InstanceStatus' :: Text -> InstanceStatus
[fromInstanceStatus] :: InstanceStatus -> Text
pattern InstanceStatus_AVAILABLE :: InstanceStatus
pattern InstanceStatus_IN_USE :: InstanceStatus
pattern InstanceStatus_NOT_AVAILABLE :: InstanceStatus
pattern InstanceStatus_PREPARING :: InstanceStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.InstanceStatus.InstanceStatus


module Network.AWS.DeviceFarm.Types.DeviceInstance

-- | Represents the device instance.
--   
--   <i>See:</i> <a>newDeviceInstance</a> smart constructor.
data DeviceInstance
DeviceInstance' :: Maybe InstanceStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe InstanceProfile -> DeviceInstance

-- | The status of the device instance. Valid values are listed here.
[$sel:status:DeviceInstance'] :: DeviceInstance -> Maybe InstanceStatus

-- | Unique device identifier for the device instance.
[$sel:udid:DeviceInstance'] :: DeviceInstance -> Maybe Text

-- | The ARN of the device.
[$sel:deviceArn:DeviceInstance'] :: DeviceInstance -> Maybe Text

-- | The Amazon Resource Name (ARN) of the device instance.
[$sel:arn:DeviceInstance'] :: DeviceInstance -> Maybe Text

-- | An array of strings that describe the device instance.
[$sel:labels:DeviceInstance'] :: DeviceInstance -> Maybe [Text]

-- | A object that contains information about the instance profile.
[$sel:instanceProfile:DeviceInstance'] :: DeviceInstance -> Maybe InstanceProfile

-- | Create a value of <a>DeviceInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeviceInstance'</a>, <a>deviceInstance_status</a> - The
--   status of the device instance. Valid values are listed here.
--   
--   <a>$sel:udid:DeviceInstance'</a>, <a>deviceInstance_udid</a> - Unique
--   device identifier for the device instance.
--   
--   <a>$sel:deviceArn:DeviceInstance'</a>, <a>deviceInstance_deviceArn</a>
--   - The ARN of the device.
--   
--   <a>$sel:arn:DeviceInstance'</a>, <a>deviceInstance_arn</a> - The
--   Amazon Resource Name (ARN) of the device instance.
--   
--   <a>$sel:labels:DeviceInstance'</a>, <a>deviceInstance_labels</a> - An
--   array of strings that describe the device instance.
--   
--   <a>$sel:instanceProfile:DeviceInstance'</a>,
--   <a>deviceInstance_instanceProfile</a> - A object that contains
--   information about the instance profile.
newDeviceInstance :: DeviceInstance

-- | The status of the device instance. Valid values are listed here.
deviceInstance_status :: Lens' DeviceInstance (Maybe InstanceStatus)

-- | Unique device identifier for the device instance.
deviceInstance_udid :: Lens' DeviceInstance (Maybe Text)

-- | The ARN of the device.
deviceInstance_deviceArn :: Lens' DeviceInstance (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device instance.
deviceInstance_arn :: Lens' DeviceInstance (Maybe Text)

-- | An array of strings that describe the device instance.
deviceInstance_labels :: Lens' DeviceInstance (Maybe [Text])

-- | A object that contains information about the instance profile.
deviceInstance_instanceProfile :: Lens' DeviceInstance (Maybe InstanceProfile)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceInstance.DeviceInstance
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceInstance.DeviceInstance
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceInstance.DeviceInstance
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceInstance.DeviceInstance
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DeviceInstance.DeviceInstance
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceInstance.DeviceInstance
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceInstance.DeviceInstance


module Network.AWS.DeviceFarm.Types.InteractionMode
newtype InteractionMode
InteractionMode' :: Text -> InteractionMode
[fromInteractionMode] :: InteractionMode -> Text
pattern InteractionMode_INTERACTIVE :: InteractionMode
pattern InteractionMode_NO_VIDEO :: InteractionMode
pattern InteractionMode_VIDEO_ONLY :: InteractionMode
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.InteractionMode.InteractionMode


module Network.AWS.DeviceFarm.Types.Location

-- | Represents a latitude and longitude pair, expressed in geographic
--   coordinate system degrees (for example, 47.6204, -122.3491).
--   
--   Elevation is currently not supported.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Double -> Double -> Location

-- | The latitude.
[$sel:latitude:Location'] :: Location -> Double

-- | The longitude.
[$sel:longitude:Location'] :: Location -> Double

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:latitude:Location'</a>, <a>location_latitude</a> - The
--   latitude.
--   
--   <a>$sel:longitude:Location'</a>, <a>location_longitude</a> - The
--   longitude.
newLocation :: Double -> Double -> Location

-- | The latitude.
location_latitude :: Lens' Location Double

-- | The longitude.
location_longitude :: Lens' Location Double
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Location.Location
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Location.Location
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Location.Location
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Location.Location
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Location.Location
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Location.Location
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Location.Location
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.Location.Location


module Network.AWS.DeviceFarm.Types.MonetaryAmount

-- | A number that represents the monetary amount for an offering or
--   transaction.
--   
--   <i>See:</i> <a>newMonetaryAmount</a> smart constructor.
data MonetaryAmount
MonetaryAmount' :: Maybe Double -> Maybe CurrencyCode -> MonetaryAmount

-- | The numerical amount of an offering or transaction.
[$sel:amount:MonetaryAmount'] :: MonetaryAmount -> Maybe Double

-- | The currency code of a monetary amount. For example, <tt>USD</tt>
--   means U.S. dollars.
[$sel:currencyCode:MonetaryAmount'] :: MonetaryAmount -> Maybe CurrencyCode

-- | Create a value of <a>MonetaryAmount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amount:MonetaryAmount'</a>, <a>monetaryAmount_amount</a> - The
--   numerical amount of an offering or transaction.
--   
--   <a>$sel:currencyCode:MonetaryAmount'</a>,
--   <a>monetaryAmount_currencyCode</a> - The currency code of a monetary
--   amount. For example, <tt>USD</tt> means U.S. dollars.
newMonetaryAmount :: MonetaryAmount

-- | The numerical amount of an offering or transaction.
monetaryAmount_amount :: Lens' MonetaryAmount (Maybe Double)

-- | The currency code of a monetary amount. For example, <tt>USD</tt>
--   means U.S. dollars.
monetaryAmount_currencyCode :: Lens' MonetaryAmount (Maybe CurrencyCode)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.MonetaryAmount.MonetaryAmount
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.MonetaryAmount.MonetaryAmount
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.MonetaryAmount.MonetaryAmount
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.MonetaryAmount.MonetaryAmount
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.MonetaryAmount.MonetaryAmount
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.MonetaryAmount.MonetaryAmount
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.MonetaryAmount.MonetaryAmount


module Network.AWS.DeviceFarm.Types.NetworkProfileType
newtype NetworkProfileType
NetworkProfileType' :: Text -> NetworkProfileType
[fromNetworkProfileType] :: NetworkProfileType -> Text
pattern NetworkProfileType_CURATED :: NetworkProfileType
pattern NetworkProfileType_PRIVATE :: NetworkProfileType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.NetworkProfileType.NetworkProfileType


module Network.AWS.DeviceFarm.Types.NetworkProfile

-- | An array of settings that describes characteristics of a network
--   profile.
--   
--   <i>See:</i> <a>newNetworkProfile</a> smart constructor.
data NetworkProfile
NetworkProfile' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe NetworkProfileType -> NetworkProfile

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
[$sel:uplinkJitterMs:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
[$sel:downlinkBandwidthBits:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
[$sel:downlinkDelayMs:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
[$sel:downlinkJitterMs:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
[$sel:uplinkLossPercent:NetworkProfile'] :: NetworkProfile -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the network profile.
[$sel:arn:NetworkProfile'] :: NetworkProfile -> Maybe Text

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
[$sel:downlinkLossPercent:NetworkProfile'] :: NetworkProfile -> Maybe Natural

-- | The name of the network profile.
[$sel:name:NetworkProfile'] :: NetworkProfile -> Maybe Text

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
[$sel:uplinkBandwidthBits:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
[$sel:uplinkDelayMs:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | The description of the network profile.
[$sel:description:NetworkProfile'] :: NetworkProfile -> Maybe Text

-- | The type of network profile. Valid values are listed here.
[$sel:type':NetworkProfile'] :: NetworkProfile -> Maybe NetworkProfileType

-- | Create a value of <a>NetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uplinkJitterMs:NetworkProfile'</a>,
--   <a>networkProfile_uplinkJitterMs</a> - Time variation in the delay of
--   received packets in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkBandwidthBits:NetworkProfile'</a>,
--   <a>networkProfile_downlinkBandwidthBits</a> - The data throughput rate
--   in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:downlinkDelayMs:NetworkProfile'</a>,
--   <a>networkProfile_downlinkDelayMs</a> - Delay time for all packets to
--   destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkJitterMs:NetworkProfile'</a>,
--   <a>networkProfile_downlinkJitterMs</a> - Time variation in the delay
--   of received packets in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:uplinkLossPercent:NetworkProfile'</a>,
--   <a>networkProfile_uplinkLossPercent</a> - Proportion of transmitted
--   packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:arn:NetworkProfile'</a>, <a>networkProfile_arn</a> - The
--   Amazon Resource Name (ARN) of the network profile.
--   
--   <a>$sel:downlinkLossPercent:NetworkProfile'</a>,
--   <a>networkProfile_downlinkLossPercent</a> - Proportion of received
--   packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:name:NetworkProfile'</a>, <a>networkProfile_name</a> - The
--   name of the network profile.
--   
--   <a>$sel:uplinkBandwidthBits:NetworkProfile'</a>,
--   <a>networkProfile_uplinkBandwidthBits</a> - The data throughput rate
--   in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:uplinkDelayMs:NetworkProfile'</a>,
--   <a>networkProfile_uplinkDelayMs</a> - Delay time for all packets to
--   destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:description:NetworkProfile'</a>,
--   <a>networkProfile_description</a> - The description of the network
--   profile.
--   
--   <a>$sel:type':NetworkProfile'</a>, <a>networkProfile_type</a> - The
--   type of network profile. Valid values are listed here.
newNetworkProfile :: NetworkProfile

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
networkProfile_uplinkJitterMs :: Lens' NetworkProfile (Maybe Integer)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
networkProfile_downlinkBandwidthBits :: Lens' NetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
networkProfile_downlinkDelayMs :: Lens' NetworkProfile (Maybe Integer)

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
networkProfile_downlinkJitterMs :: Lens' NetworkProfile (Maybe Integer)

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
networkProfile_uplinkLossPercent :: Lens' NetworkProfile (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the network profile.
networkProfile_arn :: Lens' NetworkProfile (Maybe Text)

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
networkProfile_downlinkLossPercent :: Lens' NetworkProfile (Maybe Natural)

-- | The name of the network profile.
networkProfile_name :: Lens' NetworkProfile (Maybe Text)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
networkProfile_uplinkBandwidthBits :: Lens' NetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
networkProfile_uplinkDelayMs :: Lens' NetworkProfile (Maybe Integer)

-- | The description of the network profile.
networkProfile_description :: Lens' NetworkProfile (Maybe Text)

-- | The type of network profile. Valid values are listed here.
networkProfile_type :: Lens' NetworkProfile (Maybe NetworkProfileType)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.NetworkProfile.NetworkProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.NetworkProfile.NetworkProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.NetworkProfile.NetworkProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.NetworkProfile.NetworkProfile
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.NetworkProfile.NetworkProfile
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.NetworkProfile.NetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.NetworkProfile.NetworkProfile


module Network.AWS.DeviceFarm.Types.OfferingPromotion

-- | Represents information about an offering promotion.
--   
--   <i>See:</i> <a>newOfferingPromotion</a> smart constructor.
data OfferingPromotion
OfferingPromotion' :: Maybe Text -> Maybe Text -> OfferingPromotion

-- | The ID of the offering promotion.
[$sel:id:OfferingPromotion'] :: OfferingPromotion -> Maybe Text

-- | A string that describes the offering promotion.
[$sel:description:OfferingPromotion'] :: OfferingPromotion -> Maybe Text

-- | Create a value of <a>OfferingPromotion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:OfferingPromotion'</a>, <a>offeringPromotion_id</a> - The
--   ID of the offering promotion.
--   
--   <a>$sel:description:OfferingPromotion'</a>,
--   <a>offeringPromotion_description</a> - A string that describes the
--   offering promotion.
newOfferingPromotion :: OfferingPromotion

-- | The ID of the offering promotion.
offeringPromotion_id :: Lens' OfferingPromotion (Maybe Text)

-- | A string that describes the offering promotion.
offeringPromotion_description :: Lens' OfferingPromotion (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.OfferingPromotion.OfferingPromotion
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.OfferingPromotion.OfferingPromotion
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.OfferingPromotion.OfferingPromotion
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.OfferingPromotion.OfferingPromotion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.OfferingPromotion.OfferingPromotion
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.OfferingPromotion.OfferingPromotion
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.OfferingPromotion.OfferingPromotion


module Network.AWS.DeviceFarm.Types.OfferingTransactionType
newtype OfferingTransactionType
OfferingTransactionType' :: Text -> OfferingTransactionType
[fromOfferingTransactionType] :: OfferingTransactionType -> Text
pattern OfferingTransactionType_PURCHASE :: OfferingTransactionType
pattern OfferingTransactionType_RENEW :: OfferingTransactionType
pattern OfferingTransactionType_SYSTEM :: OfferingTransactionType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.OfferingTransactionType.OfferingTransactionType


module Network.AWS.DeviceFarm.Types.OfferingType
newtype OfferingType
OfferingType' :: Text -> OfferingType
[fromOfferingType] :: OfferingType -> Text
pattern OfferingType_RECURRING :: OfferingType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.OfferingType.OfferingType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.OfferingType.OfferingType


module Network.AWS.DeviceFarm.Types.ProblemDetail

-- | Information about a problem detail.
--   
--   <i>See:</i> <a>newProblemDetail</a> smart constructor.
data ProblemDetail
ProblemDetail' :: Maybe Text -> Maybe Text -> ProblemDetail

-- | The problem detail's ARN.
[$sel:arn:ProblemDetail'] :: ProblemDetail -> Maybe Text

-- | The problem detail's name.
[$sel:name:ProblemDetail'] :: ProblemDetail -> Maybe Text

-- | Create a value of <a>ProblemDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProblemDetail'</a>, <a>problemDetail_arn</a> - The problem
--   detail's ARN.
--   
--   <a>$sel:name:ProblemDetail'</a>, <a>problemDetail_name</a> - The
--   problem detail's name.
newProblemDetail :: ProblemDetail

-- | The problem detail's ARN.
problemDetail_arn :: Lens' ProblemDetail (Maybe Text)

-- | The problem detail's name.
problemDetail_name :: Lens' ProblemDetail (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ProblemDetail.ProblemDetail
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ProblemDetail.ProblemDetail
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ProblemDetail.ProblemDetail
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ProblemDetail.ProblemDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.ProblemDetail.ProblemDetail
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ProblemDetail.ProblemDetail
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ProblemDetail.ProblemDetail


module Network.AWS.DeviceFarm.Types.Project

-- | Represents an operating-system neutral workspace for running and
--   managing tests.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Project

-- | The project's ARN.
[$sel:arn:Project'] :: Project -> Maybe Text

-- | The project's name.
[$sel:name:Project'] :: Project -> Maybe Text

-- | When the project was created.
[$sel:created:Project'] :: Project -> Maybe POSIX

-- | The default number of minutes (at the project level) a test run
--   executes before it times out. The default value is 150 minutes.
[$sel:defaultJobTimeoutMinutes:Project'] :: Project -> Maybe Int

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Project'</a>, <a>project_arn</a> - The project's ARN.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The project's name.
--   
--   <a>$sel:created:Project'</a>, <a>project_created</a> - When the
--   project was created.
--   
--   <a>$sel:defaultJobTimeoutMinutes:Project'</a>,
--   <a>project_defaultJobTimeoutMinutes</a> - The default number of
--   minutes (at the project level) a test run executes before it times
--   out. The default value is 150 minutes.
newProject :: Project

-- | The project's ARN.
project_arn :: Lens' Project (Maybe Text)

-- | The project's name.
project_name :: Lens' Project (Maybe Text)

-- | When the project was created.
project_created :: Lens' Project (Maybe UTCTime)

-- | The default number of minutes (at the project level) a test run
--   executes before it times out. The default value is 150 minutes.
project_defaultJobTimeoutMinutes :: Lens' Project (Maybe Int)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Project.Project
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Project.Project
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Project.Project
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Project.Project
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Project.Project
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Project.Project
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Project.Project


module Network.AWS.DeviceFarm.Types.Radios

-- | Represents the set of radios and their states on a device. Examples of
--   radios include Wi-Fi, GPS, Bluetooth, and NFC.
--   
--   <i>See:</i> <a>newRadios</a> smart constructor.
data Radios
Radios' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Radios

-- | True if GPS is enabled at the beginning of the test. Otherwise, false.
[$sel:gps:Radios'] :: Radios -> Maybe Bool

-- | True if Wi-Fi is enabled at the beginning of the test. Otherwise,
--   false.
[$sel:wifi:Radios'] :: Radios -> Maybe Bool

-- | True if Bluetooth is enabled at the beginning of the test. Otherwise,
--   false.
[$sel:bluetooth:Radios'] :: Radios -> Maybe Bool

-- | True if NFC is enabled at the beginning of the test. Otherwise, false.
[$sel:nfc:Radios'] :: Radios -> Maybe Bool

-- | Create a value of <a>Radios</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gps:Radios'</a>, <a>radios_gps</a> - True if GPS is enabled at
--   the beginning of the test. Otherwise, false.
--   
--   <a>$sel:wifi:Radios'</a>, <a>radios_wifi</a> - True if Wi-Fi is
--   enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:bluetooth:Radios'</a>, <a>radios_bluetooth</a> - True if
--   Bluetooth is enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:nfc:Radios'</a>, <a>radios_nfc</a> - True if NFC is enabled at
--   the beginning of the test. Otherwise, false.
newRadios :: Radios

-- | True if GPS is enabled at the beginning of the test. Otherwise, false.
radios_gps :: Lens' Radios (Maybe Bool)

-- | True if Wi-Fi is enabled at the beginning of the test. Otherwise,
--   false.
radios_wifi :: Lens' Radios (Maybe Bool)

-- | True if Bluetooth is enabled at the beginning of the test. Otherwise,
--   false.
radios_bluetooth :: Lens' Radios (Maybe Bool)

-- | True if NFC is enabled at the beginning of the test. Otherwise, false.
radios_nfc :: Lens' Radios (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Radios.Radios
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Radios.Radios
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Radios.Radios
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Radios.Radios
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Radios.Radios
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Radios.Radios
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Radios.Radios
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.Radios.Radios


module Network.AWS.DeviceFarm.Types.RecurringChargeFrequency
newtype RecurringChargeFrequency
RecurringChargeFrequency' :: Text -> RecurringChargeFrequency
[fromRecurringChargeFrequency] :: RecurringChargeFrequency -> Text
pattern RecurringChargeFrequency_MONTHLY :: RecurringChargeFrequency
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.RecurringChargeFrequency.RecurringChargeFrequency


module Network.AWS.DeviceFarm.Types.RecurringCharge

-- | Specifies whether charges for devices are recurring.
--   
--   <i>See:</i> <a>newRecurringCharge</a> smart constructor.
data RecurringCharge
RecurringCharge' :: Maybe MonetaryAmount -> Maybe RecurringChargeFrequency -> RecurringCharge

-- | The cost of the recurring charge.
[$sel:cost:RecurringCharge'] :: RecurringCharge -> Maybe MonetaryAmount

-- | The frequency in which charges recur.
[$sel:frequency:RecurringCharge'] :: RecurringCharge -> Maybe RecurringChargeFrequency

-- | Create a value of <a>RecurringCharge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cost:RecurringCharge'</a>, <a>recurringCharge_cost</a> - The
--   cost of the recurring charge.
--   
--   <a>$sel:frequency:RecurringCharge'</a>,
--   <a>recurringCharge_frequency</a> - The frequency in which charges
--   recur.
newRecurringCharge :: RecurringCharge

-- | The cost of the recurring charge.
recurringCharge_cost :: Lens' RecurringCharge (Maybe MonetaryAmount)

-- | The frequency in which charges recur.
recurringCharge_frequency :: Lens' RecurringCharge (Maybe RecurringChargeFrequency)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.RecurringCharge.RecurringCharge
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.RecurringCharge.RecurringCharge
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.RecurringCharge.RecurringCharge
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.RecurringCharge.RecurringCharge
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.RecurringCharge.RecurringCharge
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.RecurringCharge.RecurringCharge
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.RecurringCharge.RecurringCharge


module Network.AWS.DeviceFarm.Types.Offering

-- | Represents the metadata of a device offering.
--   
--   <i>See:</i> <a>newOffering</a> smart constructor.
data Offering
Offering' :: Maybe DevicePlatform -> Maybe Text -> Maybe Text -> Maybe OfferingType -> Maybe [RecurringCharge] -> Offering

-- | The platform of the device (for example, <tt>ANDROID</tt> or
--   <tt>IOS</tt>).
[$sel:platform:Offering'] :: Offering -> Maybe DevicePlatform

-- | The ID that corresponds to a device offering.
[$sel:id:Offering'] :: Offering -> Maybe Text

-- | A string that describes the offering.
[$sel:description:Offering'] :: Offering -> Maybe Text

-- | The type of offering (for example, <tt>RECURRING</tt>) for a device.
[$sel:type':Offering'] :: Offering -> Maybe OfferingType

-- | Specifies whether there are recurring charges for the offering.
[$sel:recurringCharges:Offering'] :: Offering -> Maybe [RecurringCharge]

-- | Create a value of <a>Offering</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Offering'</a>, <a>offering_platform</a> - The
--   platform of the device (for example, <tt>ANDROID</tt> or
--   <tt>IOS</tt>).
--   
--   <a>$sel:id:Offering'</a>, <a>offering_id</a> - The ID that corresponds
--   to a device offering.
--   
--   <a>$sel:description:Offering'</a>, <a>offering_description</a> - A
--   string that describes the offering.
--   
--   <a>$sel:type':Offering'</a>, <a>offering_type</a> - The type of
--   offering (for example, <tt>RECURRING</tt>) for a device.
--   
--   <a>$sel:recurringCharges:Offering'</a>,
--   <a>offering_recurringCharges</a> - Specifies whether there are
--   recurring charges for the offering.
newOffering :: Offering

-- | The platform of the device (for example, <tt>ANDROID</tt> or
--   <tt>IOS</tt>).
offering_platform :: Lens' Offering (Maybe DevicePlatform)

-- | The ID that corresponds to a device offering.
offering_id :: Lens' Offering (Maybe Text)

-- | A string that describes the offering.
offering_description :: Lens' Offering (Maybe Text)

-- | The type of offering (for example, <tt>RECURRING</tt>) for a device.
offering_type :: Lens' Offering (Maybe OfferingType)

-- | Specifies whether there are recurring charges for the offering.
offering_recurringCharges :: Lens' Offering (Maybe [RecurringCharge])
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Offering.Offering
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Offering.Offering
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Offering.Offering
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Offering.Offering
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Offering.Offering
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Offering.Offering
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Offering.Offering


module Network.AWS.DeviceFarm.Types.OfferingStatus

-- | The status of the offering.
--   
--   <i>See:</i> <a>newOfferingStatus</a> smart constructor.
data OfferingStatus
OfferingStatus' :: Maybe Int -> Maybe Offering -> Maybe POSIX -> Maybe OfferingTransactionType -> OfferingStatus

-- | The number of available devices in the offering.
[$sel:quantity:OfferingStatus'] :: OfferingStatus -> Maybe Int

-- | Represents the metadata of an offering status.
[$sel:offering:OfferingStatus'] :: OfferingStatus -> Maybe Offering

-- | The date on which the offering is effective.
[$sel:effectiveOn:OfferingStatus'] :: OfferingStatus -> Maybe POSIX

-- | The type specified for the offering status.
[$sel:type':OfferingStatus'] :: OfferingStatus -> Maybe OfferingTransactionType

-- | Create a value of <a>OfferingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quantity:OfferingStatus'</a>, <a>offeringStatus_quantity</a> -
--   The number of available devices in the offering.
--   
--   <a>$sel:offering:OfferingStatus'</a>, <a>offeringStatus_offering</a> -
--   Represents the metadata of an offering status.
--   
--   <a>$sel:effectiveOn:OfferingStatus'</a>,
--   <a>offeringStatus_effectiveOn</a> - The date on which the offering is
--   effective.
--   
--   <a>$sel:type':OfferingStatus'</a>, <a>offeringStatus_type</a> - The
--   type specified for the offering status.
newOfferingStatus :: OfferingStatus

-- | The number of available devices in the offering.
offeringStatus_quantity :: Lens' OfferingStatus (Maybe Int)

-- | Represents the metadata of an offering status.
offeringStatus_offering :: Lens' OfferingStatus (Maybe Offering)

-- | The date on which the offering is effective.
offeringStatus_effectiveOn :: Lens' OfferingStatus (Maybe UTCTime)

-- | The type specified for the offering status.
offeringStatus_type :: Lens' OfferingStatus (Maybe OfferingTransactionType)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.OfferingStatus.OfferingStatus
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.OfferingStatus.OfferingStatus
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.OfferingStatus.OfferingStatus
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.OfferingStatus.OfferingStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.OfferingStatus.OfferingStatus
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.OfferingStatus.OfferingStatus
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.OfferingStatus.OfferingStatus


module Network.AWS.DeviceFarm.Types.OfferingTransaction

-- | Represents the metadata of an offering transaction.
--   
--   <i>See:</i> <a>newOfferingTransaction</a> smart constructor.
data OfferingTransaction
OfferingTransaction' :: Maybe OfferingStatus -> Maybe POSIX -> Maybe MonetaryAmount -> Maybe Text -> Maybe Text -> OfferingTransaction

-- | The status of an offering transaction.
[$sel:offeringStatus:OfferingTransaction'] :: OfferingTransaction -> Maybe OfferingStatus

-- | The date on which an offering transaction was created.
[$sel:createdOn:OfferingTransaction'] :: OfferingTransaction -> Maybe POSIX

-- | The cost of an offering transaction.
[$sel:cost:OfferingTransaction'] :: OfferingTransaction -> Maybe MonetaryAmount

-- | The transaction ID of the offering transaction.
[$sel:transactionId:OfferingTransaction'] :: OfferingTransaction -> Maybe Text

-- | The ID that corresponds to a device offering promotion.
[$sel:offeringPromotionId:OfferingTransaction'] :: OfferingTransaction -> Maybe Text

-- | Create a value of <a>OfferingTransaction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringStatus:OfferingTransaction'</a>,
--   <a>offeringTransaction_offeringStatus</a> - The status of an offering
--   transaction.
--   
--   <a>$sel:createdOn:OfferingTransaction'</a>,
--   <a>offeringTransaction_createdOn</a> - The date on which an offering
--   transaction was created.
--   
--   <a>$sel:cost:OfferingTransaction'</a>, <a>offeringTransaction_cost</a>
--   - The cost of an offering transaction.
--   
--   <a>$sel:transactionId:OfferingTransaction'</a>,
--   <a>offeringTransaction_transactionId</a> - The transaction ID of the
--   offering transaction.
--   
--   <a>$sel:offeringPromotionId:OfferingTransaction'</a>,
--   <a>offeringTransaction_offeringPromotionId</a> - The ID that
--   corresponds to a device offering promotion.
newOfferingTransaction :: OfferingTransaction

-- | The status of an offering transaction.
offeringTransaction_offeringStatus :: Lens' OfferingTransaction (Maybe OfferingStatus)

-- | The date on which an offering transaction was created.
offeringTransaction_createdOn :: Lens' OfferingTransaction (Maybe UTCTime)

-- | The cost of an offering transaction.
offeringTransaction_cost :: Lens' OfferingTransaction (Maybe MonetaryAmount)

-- | The transaction ID of the offering transaction.
offeringTransaction_transactionId :: Lens' OfferingTransaction (Maybe Text)

-- | The ID that corresponds to a device offering promotion.
offeringTransaction_offeringPromotionId :: Lens' OfferingTransaction (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.OfferingTransaction.OfferingTransaction
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.OfferingTransaction.OfferingTransaction
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.OfferingTransaction.OfferingTransaction
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.OfferingTransaction.OfferingTransaction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.OfferingTransaction.OfferingTransaction
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.OfferingTransaction.OfferingTransaction
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.OfferingTransaction.OfferingTransaction


module Network.AWS.DeviceFarm.Types.Resolution

-- | Represents the screen resolution of a device in height and width,
--   expressed in pixels.
--   
--   <i>See:</i> <a>newResolution</a> smart constructor.
data Resolution
Resolution' :: Maybe Int -> Maybe Int -> Resolution

-- | The screen resolution's height, expressed in pixels.
[$sel:height:Resolution'] :: Resolution -> Maybe Int

-- | The screen resolution's width, expressed in pixels.
[$sel:width:Resolution'] :: Resolution -> Maybe Int

-- | Create a value of <a>Resolution</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:height:Resolution'</a>, <a>resolution_height</a> - The screen
--   resolution's height, expressed in pixels.
--   
--   <a>$sel:width:Resolution'</a>, <a>resolution_width</a> - The screen
--   resolution's width, expressed in pixels.
newResolution :: Resolution

-- | The screen resolution's height, expressed in pixels.
resolution_height :: Lens' Resolution (Maybe Int)

-- | The screen resolution's width, expressed in pixels.
resolution_width :: Lens' Resolution (Maybe Int)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Resolution.Resolution
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Resolution.Resolution
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Resolution.Resolution
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Resolution.Resolution
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Resolution.Resolution
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Resolution.Resolution
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Resolution.Resolution


module Network.AWS.DeviceFarm.Types.Device

-- | Represents a device type that an app is tested against.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe DevicePlatform -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe DeviceAvailability -> Maybe Text -> Maybe Text -> Maybe DeviceFormFactor -> Maybe Text -> Maybe Bool -> Maybe [DeviceInstance] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Resolution -> Maybe CPU -> Maybe Bool -> Maybe Text -> Device

-- | The device's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
[$sel:platform:Device'] :: Device -> Maybe DevicePlatform

-- | The device's manufacturer name.
[$sel:manufacturer:Device'] :: Device -> Maybe Text

-- | The device's model name.
[$sel:model:Device'] :: Device -> Maybe Text

-- | The device's total memory size, expressed in bytes.
[$sel:memory:Device'] :: Device -> Maybe Integer

-- | Indicates how likely a device is available for a test run. Currently
--   available in the ListDevices and GetDevice API methods.
[$sel:availability:Device'] :: Device -> Maybe DeviceAvailability

-- | The name of the fleet to which this device belongs.
[$sel:fleetName:Device'] :: Device -> Maybe Text

-- | The type of fleet to which this device belongs. Possible values are
--   PRIVATE and PUBLIC.
[$sel:fleetType:Device'] :: Device -> Maybe Text

-- | The device's form factor.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PHONE</li>
--   <li>TABLET</li>
--   </ul>
[$sel:formFactor:Device'] :: Device -> Maybe DeviceFormFactor

-- | The device's ARN.
[$sel:arn:Device'] :: Device -> Maybe Text

-- | Specifies whether remote access has been enabled for the specified
--   device.
[$sel:remoteAccessEnabled:Device'] :: Device -> Maybe Bool

-- | The instances that belong to this device.
[$sel:instances:Device'] :: Device -> Maybe [DeviceInstance]

-- | The device's display name.
[$sel:name:Device'] :: Device -> Maybe Text

-- | The device's image name.
[$sel:image:Device'] :: Device -> Maybe Text

-- | The device's carrier.
[$sel:carrier:Device'] :: Device -> Maybe Text

-- | The device's operating system type.
[$sel:os:Device'] :: Device -> Maybe Text

-- | The device's heap size, expressed in bytes.
[$sel:heapSize:Device'] :: Device -> Maybe Integer

-- | The device's radio.
[$sel:radio:Device'] :: Device -> Maybe Text

-- | The resolution of the device.
[$sel:resolution:Device'] :: Device -> Maybe Resolution

-- | Information about the device's CPU.
[$sel:cpu:Device'] :: Device -> Maybe CPU

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the device.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:remoteDebugEnabled:Device'] :: Device -> Maybe Bool

-- | The device's model ID.
[$sel:modelId:Device'] :: Device -> Maybe Text

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Device'</a>, <a>device_platform</a> - The device's
--   platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
--   
--   <a>$sel:manufacturer:Device'</a>, <a>device_manufacturer</a> - The
--   device's manufacturer name.
--   
--   <a>$sel:model:Device'</a>, <a>device_model</a> - The device's model
--   name.
--   
--   <a>$sel:memory:Device'</a>, <a>device_memory</a> - The device's total
--   memory size, expressed in bytes.
--   
--   <a>$sel:availability:Device'</a>, <a>device_availability</a> -
--   Indicates how likely a device is available for a test run. Currently
--   available in the ListDevices and GetDevice API methods.
--   
--   <a>$sel:fleetName:Device'</a>, <a>device_fleetName</a> - The name of
--   the fleet to which this device belongs.
--   
--   <a>$sel:fleetType:Device'</a>, <a>device_fleetType</a> - The type of
--   fleet to which this device belongs. Possible values are PRIVATE and
--   PUBLIC.
--   
--   <a>$sel:formFactor:Device'</a>, <a>device_formFactor</a> - The
--   device's form factor.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PHONE</li>
--   <li>TABLET</li>
--   </ul>
--   
--   <a>$sel:arn:Device'</a>, <a>device_arn</a> - The device's ARN.
--   
--   <a>$sel:remoteAccessEnabled:Device'</a>,
--   <a>device_remoteAccessEnabled</a> - Specifies whether remote access
--   has been enabled for the specified device.
--   
--   <a>$sel:instances:Device'</a>, <a>device_instances</a> - The instances
--   that belong to this device.
--   
--   <a>$sel:name:Device'</a>, <a>device_name</a> - The device's display
--   name.
--   
--   <a>$sel:image:Device'</a>, <a>device_image</a> - The device's image
--   name.
--   
--   <a>$sel:carrier:Device'</a>, <a>device_carrier</a> - The device's
--   carrier.
--   
--   <a>$sel:os:Device'</a>, <a>device_os</a> - The device's operating
--   system type.
--   
--   <a>$sel:heapSize:Device'</a>, <a>device_heapSize</a> - The device's
--   heap size, expressed in bytes.
--   
--   <a>$sel:radio:Device'</a>, <a>device_radio</a> - The device's radio.
--   
--   <a>$sel:resolution:Device'</a>, <a>device_resolution</a> - The
--   resolution of the device.
--   
--   <a>$sel:cpu:Device'</a>, <a>device_cpu</a> - Information about the
--   device's CPU.
--   
--   <a>$sel:remoteDebugEnabled:Device'</a>,
--   <a>device_remoteDebugEnabled</a> - This flag is set to <tt>true</tt>
--   if remote debugging is enabled for the device.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:modelId:Device'</a>, <a>device_modelId</a> - The device's
--   model ID.
newDevice :: Device

-- | The device's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
device_platform :: Lens' Device (Maybe DevicePlatform)

-- | The device's manufacturer name.
device_manufacturer :: Lens' Device (Maybe Text)

-- | The device's model name.
device_model :: Lens' Device (Maybe Text)

-- | The device's total memory size, expressed in bytes.
device_memory :: Lens' Device (Maybe Integer)

-- | Indicates how likely a device is available for a test run. Currently
--   available in the ListDevices and GetDevice API methods.
device_availability :: Lens' Device (Maybe DeviceAvailability)

-- | The name of the fleet to which this device belongs.
device_fleetName :: Lens' Device (Maybe Text)

-- | The type of fleet to which this device belongs. Possible values are
--   PRIVATE and PUBLIC.
device_fleetType :: Lens' Device (Maybe Text)

-- | The device's form factor.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PHONE</li>
--   <li>TABLET</li>
--   </ul>
device_formFactor :: Lens' Device (Maybe DeviceFormFactor)

-- | The device's ARN.
device_arn :: Lens' Device (Maybe Text)

-- | Specifies whether remote access has been enabled for the specified
--   device.
device_remoteAccessEnabled :: Lens' Device (Maybe Bool)

-- | The instances that belong to this device.
device_instances :: Lens' Device (Maybe [DeviceInstance])

-- | The device's display name.
device_name :: Lens' Device (Maybe Text)

-- | The device's image name.
device_image :: Lens' Device (Maybe Text)

-- | The device's carrier.
device_carrier :: Lens' Device (Maybe Text)

-- | The device's operating system type.
device_os :: Lens' Device (Maybe Text)

-- | The device's heap size, expressed in bytes.
device_heapSize :: Lens' Device (Maybe Integer)

-- | The device's radio.
device_radio :: Lens' Device (Maybe Text)

-- | The resolution of the device.
device_resolution :: Lens' Device (Maybe Resolution)

-- | Information about the device's CPU.
device_cpu :: Lens' Device (Maybe CPU)

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the device.
--   
--   Remote debugging is <a>no longer supported</a>.
device_remoteDebugEnabled :: Lens' Device (Maybe Bool)

-- | The device's model ID.
device_modelId :: Lens' Device (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Device.Device
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Device.Device
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Device.Device
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Device.Device
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Device.Device
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Device.Device
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Device.Device


module Network.AWS.DeviceFarm.Types.RemoteAccessSession

-- | Represents information about the remote access session.
--   
--   <i>See:</i> <a>newRemoteAccessSession</a> smart constructor.
data RemoteAccessSession
RemoteAccessSession' :: Maybe Text -> Maybe ExecutionStatus -> Maybe Text -> Maybe InteractionMode -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe BillingMethod -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe DeviceMinutes -> Maybe Text -> RemoteAccessSession

-- | Unique device identifier for the remote device. Only returned if
--   remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:deviceUdid:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The status of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PENDING_CONCURRENCY.</li>
--   <li>PENDING_DEVICE.</li>
--   <li>PROCESSING.</li>
--   <li>SCHEDULING.</li>
--   <li>PREPARING.</li>
--   <li>RUNNING.</li>
--   <li>COMPLETED.</li>
--   <li>STOPPING.</li>
--   </ul>
[$sel:status:RemoteAccessSession'] :: RemoteAccessSession -> Maybe ExecutionStatus

-- | Unique identifier of your client for the remote access session. Only
--   returned if remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:clientId:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The interaction mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
[$sel:interactionMode:RemoteAccessSession'] :: RemoteAccessSession -> Maybe InteractionMode

-- | The date and time the remote access session was started.
[$sel:started:RemoteAccessSession'] :: RemoteAccessSession -> Maybe POSIX

-- | The result of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PASSED.</li>
--   <li>WARNED.</li>
--   <li>FAILED.</li>
--   <li>SKIPPED.</li>
--   <li>ERRORED.</li>
--   <li>STOPPED.</li>
--   </ul>
[$sel:result:RemoteAccessSession'] :: RemoteAccessSession -> Maybe ExecutionResult

-- | A message about the remote access session.
[$sel:message:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The device (phone or tablet) used in the remote access session.
[$sel:device:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Device

-- | The Amazon Resource Name (ARN) of the remote access session.
[$sel:arn:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The name of the remote access session.
[$sel:name:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | This flag is set to <tt>true</tt> if remote recording is enabled for
--   the remote access session.
[$sel:remoteRecordEnabled:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Bool

-- | The ARN of the instance.
[$sel:instanceArn:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The billing method of the remote access session. Possible values
--   include <tt>METERED</tt> or <tt>UNMETERED</tt>. For more information
--   about metered devices, see <a>AWS Device Farm terminology</a>.
[$sel:billingMethod:RemoteAccessSession'] :: RemoteAccessSession -> Maybe BillingMethod

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
[$sel:skipAppResign:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Bool

-- | The date and time the remote access session was stopped.
[$sel:stopped:RemoteAccessSession'] :: RemoteAccessSession -> Maybe POSIX

-- | IP address of the EC2 host where you need to connect to remotely debug
--   devices. Only returned if remote debugging is enabled for the remote
--   access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:hostAddress:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The endpoint for the remote access sesssion.
[$sel:endpoint:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:remoteDebugEnabled:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Bool

-- | The date and time the remote access session was created.
[$sel:created:RemoteAccessSession'] :: RemoteAccessSession -> Maybe POSIX

-- | The number of minutes a device is used in a remote access session
--   (including setup and teardown minutes).
[$sel:deviceMinutes:RemoteAccessSession'] :: RemoteAccessSession -> Maybe DeviceMinutes

-- | The ARN for the app to be recorded in the remote access session.
[$sel:remoteRecordAppArn:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | Create a value of <a>RemoteAccessSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceUdid:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_deviceUdid</a> - Unique device identifier for
--   the remote device. Only returned if remote debugging is enabled for
--   the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:status:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_status</a> - The status of the remote access
--   session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PENDING_CONCURRENCY.</li>
--   <li>PENDING_DEVICE.</li>
--   <li>PROCESSING.</li>
--   <li>SCHEDULING.</li>
--   <li>PREPARING.</li>
--   <li>RUNNING.</li>
--   <li>COMPLETED.</li>
--   <li>STOPPING.</li>
--   </ul>
--   
--   <a>$sel:clientId:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_clientId</a> - Unique identifier of your client
--   for the remote access session. Only returned if remote debugging is
--   enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:interactionMode:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_interactionMode</a> - The interaction mode of
--   the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
--   
--   <a>$sel:started:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_started</a> - The date and time the remote
--   access session was started.
--   
--   <a>$sel:result:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_result</a> - The result of the remote access
--   session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PASSED.</li>
--   <li>WARNED.</li>
--   <li>FAILED.</li>
--   <li>SKIPPED.</li>
--   <li>ERRORED.</li>
--   <li>STOPPED.</li>
--   </ul>
--   
--   <a>$sel:message:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_message</a> - A message about the remote access
--   session.
--   
--   <a>$sel:device:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_device</a> - The device (phone or tablet) used
--   in the remote access session.
--   
--   <a>$sel:arn:RemoteAccessSession'</a>, <a>remoteAccessSession_arn</a> -
--   The Amazon Resource Name (ARN) of the remote access session.
--   
--   <a>$sel:name:RemoteAccessSession'</a>, <a>remoteAccessSession_name</a>
--   - The name of the remote access session.
--   
--   <a>$sel:remoteRecordEnabled:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteRecordEnabled</a> - This flag is set to
--   <tt>true</tt> if remote recording is enabled for the remote access
--   session.
--   
--   <a>$sel:instanceArn:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_instanceArn</a> - The ARN of the instance.
--   
--   <a>$sel:billingMethod:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_billingMethod</a> - The billing method of the
--   remote access session. Possible values include <tt>METERED</tt> or
--   <tt>UNMETERED</tt>. For more information about metered devices, see
--   <a>AWS Device Farm terminology</a>.
--   
--   <a>$sel:skipAppResign:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_skipAppResign</a> - When set to <tt>true</tt>,
--   for private devices, Device Farm does not sign your app again. For
--   public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:stopped:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_stopped</a> - The date and time the remote
--   access session was stopped.
--   
--   <a>$sel:hostAddress:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_hostAddress</a> - IP address of the EC2 host
--   where you need to connect to remotely debug devices. Only returned if
--   remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:endpoint:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_endpoint</a> - The endpoint for the remote
--   access sesssion.
--   
--   <a>$sel:remoteDebugEnabled:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteDebugEnabled</a> - This flag is set to
--   <tt>true</tt> if remote debugging is enabled for the remote access
--   session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:created:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_created</a> - The date and time the remote
--   access session was created.
--   
--   <a>$sel:deviceMinutes:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_deviceMinutes</a> - The number of minutes a
--   device is used in a remote access session (including setup and
--   teardown minutes).
--   
--   <a>$sel:remoteRecordAppArn:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteRecordAppArn</a> - The ARN for the app to
--   be recorded in the remote access session.
newRemoteAccessSession :: RemoteAccessSession

-- | Unique device identifier for the remote device. Only returned if
--   remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_deviceUdid :: Lens' RemoteAccessSession (Maybe Text)

-- | The status of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PENDING_CONCURRENCY.</li>
--   <li>PENDING_DEVICE.</li>
--   <li>PROCESSING.</li>
--   <li>SCHEDULING.</li>
--   <li>PREPARING.</li>
--   <li>RUNNING.</li>
--   <li>COMPLETED.</li>
--   <li>STOPPING.</li>
--   </ul>
remoteAccessSession_status :: Lens' RemoteAccessSession (Maybe ExecutionStatus)

-- | Unique identifier of your client for the remote access session. Only
--   returned if remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_clientId :: Lens' RemoteAccessSession (Maybe Text)

-- | The interaction mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
remoteAccessSession_interactionMode :: Lens' RemoteAccessSession (Maybe InteractionMode)

-- | The date and time the remote access session was started.
remoteAccessSession_started :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | The result of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PASSED.</li>
--   <li>WARNED.</li>
--   <li>FAILED.</li>
--   <li>SKIPPED.</li>
--   <li>ERRORED.</li>
--   <li>STOPPED.</li>
--   </ul>
remoteAccessSession_result :: Lens' RemoteAccessSession (Maybe ExecutionResult)

-- | A message about the remote access session.
remoteAccessSession_message :: Lens' RemoteAccessSession (Maybe Text)

-- | The device (phone or tablet) used in the remote access session.
remoteAccessSession_device :: Lens' RemoteAccessSession (Maybe Device)

-- | The Amazon Resource Name (ARN) of the remote access session.
remoteAccessSession_arn :: Lens' RemoteAccessSession (Maybe Text)

-- | The name of the remote access session.
remoteAccessSession_name :: Lens' RemoteAccessSession (Maybe Text)

-- | This flag is set to <tt>true</tt> if remote recording is enabled for
--   the remote access session.
remoteAccessSession_remoteRecordEnabled :: Lens' RemoteAccessSession (Maybe Bool)

-- | The ARN of the instance.
remoteAccessSession_instanceArn :: Lens' RemoteAccessSession (Maybe Text)

-- | The billing method of the remote access session. Possible values
--   include <tt>METERED</tt> or <tt>UNMETERED</tt>. For more information
--   about metered devices, see <a>AWS Device Farm terminology</a>.
remoteAccessSession_billingMethod :: Lens' RemoteAccessSession (Maybe BillingMethod)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
remoteAccessSession_skipAppResign :: Lens' RemoteAccessSession (Maybe Bool)

-- | The date and time the remote access session was stopped.
remoteAccessSession_stopped :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | IP address of the EC2 host where you need to connect to remotely debug
--   devices. Only returned if remote debugging is enabled for the remote
--   access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_hostAddress :: Lens' RemoteAccessSession (Maybe Text)

-- | The endpoint for the remote access sesssion.
remoteAccessSession_endpoint :: Lens' RemoteAccessSession (Maybe Text)

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_remoteDebugEnabled :: Lens' RemoteAccessSession (Maybe Bool)

-- | The date and time the remote access session was created.
remoteAccessSession_created :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | The number of minutes a device is used in a remote access session
--   (including setup and teardown minutes).
remoteAccessSession_deviceMinutes :: Lens' RemoteAccessSession (Maybe DeviceMinutes)

-- | The ARN for the app to be recorded in the remote access session.
remoteAccessSession_remoteRecordAppArn :: Lens' RemoteAccessSession (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.RemoteAccessSession.RemoteAccessSession
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.RemoteAccessSession.RemoteAccessSession
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.RemoteAccessSession.RemoteAccessSession
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.RemoteAccessSession.RemoteAccessSession
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.RemoteAccessSession.RemoteAccessSession
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.RemoteAccessSession.RemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.RemoteAccessSession.RemoteAccessSession


module Network.AWS.DeviceFarm.Types.Problem

-- | Represents a specific warning or failure.
--   
--   <i>See:</i> <a>newProblem</a> smart constructor.
data Problem
Problem' :: Maybe ProblemDetail -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe ProblemDetail -> Maybe ProblemDetail -> Maybe ProblemDetail -> Problem

-- | Information about the associated job.
[$sel:job:Problem'] :: Problem -> Maybe ProblemDetail

-- | The problem's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Problem'] :: Problem -> Maybe ExecutionResult

-- | A message about the problem's result.
[$sel:message:Problem'] :: Problem -> Maybe Text

-- | Information about the associated device.
[$sel:device:Problem'] :: Problem -> Maybe Device

-- | Information about the associated run.
[$sel:run:Problem'] :: Problem -> Maybe ProblemDetail

-- | Information about the associated suite.
[$sel:suite:Problem'] :: Problem -> Maybe ProblemDetail

-- | Information about the associated test.
[$sel:test:Problem'] :: Problem -> Maybe ProblemDetail

-- | Create a value of <a>Problem</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:Problem'</a>, <a>problem_job</a> - Information about the
--   associated job.
--   
--   <a>$sel:result:Problem'</a>, <a>problem_result</a> - The problem's
--   result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Problem'</a>, <a>problem_message</a> - A message about
--   the problem's result.
--   
--   <a>$sel:device:Problem'</a>, <a>problem_device</a> - Information about
--   the associated device.
--   
--   <a>$sel:run:Problem'</a>, <a>problem_run</a> - Information about the
--   associated run.
--   
--   <a>$sel:suite:Problem'</a>, <a>problem_suite</a> - Information about
--   the associated suite.
--   
--   <a>$sel:test:Problem'</a>, <a>problem_test</a> - Information about the
--   associated test.
newProblem :: Problem

-- | Information about the associated job.
problem_job :: Lens' Problem (Maybe ProblemDetail)

-- | The problem's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
problem_result :: Lens' Problem (Maybe ExecutionResult)

-- | A message about the problem's result.
problem_message :: Lens' Problem (Maybe Text)

-- | Information about the associated device.
problem_device :: Lens' Problem (Maybe Device)

-- | Information about the associated run.
problem_run :: Lens' Problem (Maybe ProblemDetail)

-- | Information about the associated suite.
problem_suite :: Lens' Problem (Maybe ProblemDetail)

-- | Information about the associated test.
problem_test :: Lens' Problem (Maybe ProblemDetail)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Problem.Problem
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Problem.Problem
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Problem.Problem
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Problem.Problem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Problem.Problem
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Problem.Problem
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Problem.Problem


module Network.AWS.DeviceFarm.Types.DevicePoolCompatibilityResult

-- | Represents a device pool compatibility result.
--   
--   <i>See:</i> <a>newDevicePoolCompatibilityResult</a> smart constructor.
data DevicePoolCompatibilityResult
DevicePoolCompatibilityResult' :: Maybe [IncompatibilityMessage] -> Maybe Bool -> Maybe Device -> DevicePoolCompatibilityResult

-- | Information about the compatibility.
[$sel:incompatibilityMessages:DevicePoolCompatibilityResult'] :: DevicePoolCompatibilityResult -> Maybe [IncompatibilityMessage]

-- | Whether the result was compatible with the device pool.
[$sel:compatible:DevicePoolCompatibilityResult'] :: DevicePoolCompatibilityResult -> Maybe Bool

-- | The device (phone or tablet) to return information about.
[$sel:device:DevicePoolCompatibilityResult'] :: DevicePoolCompatibilityResult -> Maybe Device

-- | Create a value of <a>DevicePoolCompatibilityResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:incompatibilityMessages:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_incompatibilityMessages</a> -
--   Information about the compatibility.
--   
--   <a>$sel:compatible:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_compatible</a> - Whether the result
--   was compatible with the device pool.
--   
--   <a>$sel:device:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_device</a> - The device (phone or
--   tablet) to return information about.
newDevicePoolCompatibilityResult :: DevicePoolCompatibilityResult

-- | Information about the compatibility.
devicePoolCompatibilityResult_incompatibilityMessages :: Lens' DevicePoolCompatibilityResult (Maybe [IncompatibilityMessage])

-- | Whether the result was compatible with the device pool.
devicePoolCompatibilityResult_compatible :: Lens' DevicePoolCompatibilityResult (Maybe Bool)

-- | The device (phone or tablet) to return information about.
devicePoolCompatibilityResult_device :: Lens' DevicePoolCompatibilityResult (Maybe Device)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DevicePoolCompatibilityResult.DevicePoolCompatibilityResult
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DevicePoolCompatibilityResult.DevicePoolCompatibilityResult
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DevicePoolCompatibilityResult.DevicePoolCompatibilityResult
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DevicePoolCompatibilityResult.DevicePoolCompatibilityResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DevicePoolCompatibilityResult.DevicePoolCompatibilityResult
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DevicePoolCompatibilityResult.DevicePoolCompatibilityResult
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DevicePoolCompatibilityResult.DevicePoolCompatibilityResult


module Network.AWS.DeviceFarm.Types.RuleOperator
newtype RuleOperator
RuleOperator' :: Text -> RuleOperator
[fromRuleOperator] :: RuleOperator -> Text
pattern RuleOperator_CONTAINS :: RuleOperator
pattern RuleOperator_EQUALS :: RuleOperator
pattern RuleOperator_GREATER_THAN :: RuleOperator
pattern RuleOperator_GREATER_THAN_OR_EQUALS :: RuleOperator
pattern RuleOperator_IN :: RuleOperator
pattern RuleOperator_LESS_THAN :: RuleOperator
pattern RuleOperator_LESS_THAN_OR_EQUALS :: RuleOperator
pattern RuleOperator_NOT_IN :: RuleOperator
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.RuleOperator.RuleOperator


module Network.AWS.DeviceFarm.Types.Rule

-- | Represents a condition for a device pool.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe RuleOperator -> Maybe DeviceAttribute -> Maybe Text -> Rule

-- | Specifies how Device Farm compares the rule's attribute to the value.
--   For the operators that are supported by each attribute, see the
--   attribute descriptions.
[$sel:operator:Rule'] :: Rule -> Maybe RuleOperator

-- | The rule's stringified attribute. For example, specify the value as
--   <tt>"\"abc\""</tt>.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>APPIUM_VERSION</i> The Appium version for the test.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>.Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model, such as Apple iPad Air 2 or Google
--   Pixel.Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   </ul>
[$sel:attribute:Rule'] :: Rule -> Maybe DeviceAttribute

-- | The rule's value.
[$sel:value:Rule'] :: Rule -> Maybe Text

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:Rule'</a>, <a>rule_operator</a> - Specifies how
--   Device Farm compares the rule's attribute to the value. For the
--   operators that are supported by each attribute, see the attribute
--   descriptions.
--   
--   <a>$sel:attribute:Rule'</a>, <a>rule_attribute</a> - The rule's
--   stringified attribute. For example, specify the value as
--   <tt>"\"abc\""</tt>.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>APPIUM_VERSION</i> The Appium version for the test.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>.Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model, such as Apple iPad Air 2 or Google
--   Pixel.Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   </ul>
--   
--   <a>$sel:value:Rule'</a>, <a>rule_value</a> - The rule's value.
newRule :: Rule

-- | Specifies how Device Farm compares the rule's attribute to the value.
--   For the operators that are supported by each attribute, see the
--   attribute descriptions.
rule_operator :: Lens' Rule (Maybe RuleOperator)

-- | The rule's stringified attribute. For example, specify the value as
--   <tt>"\"abc\""</tt>.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>APPIUM_VERSION</i> The Appium version for the test.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>.Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model, such as Apple iPad Air 2 or Google
--   Pixel.Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   </ul>
rule_attribute :: Lens' Rule (Maybe DeviceAttribute)

-- | The rule's value.
rule_value :: Lens' Rule (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Rule.Rule
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Rule.Rule
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Rule.Rule
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Rule.Rule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Rule.Rule
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Rule.Rule
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Rule.Rule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.Rule.Rule


module Network.AWS.DeviceFarm.Types.DevicePool

-- | Represents a collection of device types.
--   
--   <i>See:</i> <a>newDevicePool</a> smart constructor.
data DevicePool
DevicePool' :: Maybe Text -> Maybe [Rule] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe DevicePoolType -> DevicePool

-- | The device pool's ARN.
[$sel:arn:DevicePool'] :: DevicePool -> Maybe Text

-- | Information about the device pool's rules.
[$sel:rules:DevicePool'] :: DevicePool -> Maybe [Rule]

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and meet the criteria that
--   you assign for the <tt>rules</tt> parameter. Depending on how many
--   devices meet these constraints, your device pool might contain fewer
--   devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
[$sel:maxDevices:DevicePool'] :: DevicePool -> Maybe Int

-- | The device pool's name.
[$sel:name:DevicePool'] :: DevicePool -> Maybe Text

-- | The device pool's description.
[$sel:description:DevicePool'] :: DevicePool -> Maybe Text

-- | The device pool's type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
[$sel:type':DevicePool'] :: DevicePool -> Maybe DevicePoolType

-- | Create a value of <a>DevicePool</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DevicePool'</a>, <a>devicePool_arn</a> - The device pool's
--   ARN.
--   
--   <a>$sel:rules:DevicePool'</a>, <a>devicePool_rules</a> - Information
--   about the device pool's rules.
--   
--   <a>$sel:maxDevices:DevicePool'</a>, <a>devicePool_maxDevices</a> - The
--   number of devices that Device Farm can add to your device pool. Device
--   Farm adds devices that are available and meet the criteria that you
--   assign for the <tt>rules</tt> parameter. Depending on how many devices
--   meet these constraints, your device pool might contain fewer devices
--   than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   <a>$sel:name:DevicePool'</a>, <a>devicePool_name</a> - The device
--   pool's name.
--   
--   <a>$sel:description:DevicePool'</a>, <a>devicePool_description</a> -
--   The device pool's description.
--   
--   <a>$sel:type':DevicePool'</a>, <a>devicePool_type</a> - The device
--   pool's type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
newDevicePool :: DevicePool

-- | The device pool's ARN.
devicePool_arn :: Lens' DevicePool (Maybe Text)

-- | Information about the device pool's rules.
devicePool_rules :: Lens' DevicePool (Maybe [Rule])

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and meet the criteria that
--   you assign for the <tt>rules</tt> parameter. Depending on how many
--   devices meet these constraints, your device pool might contain fewer
--   devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
devicePool_maxDevices :: Lens' DevicePool (Maybe Int)

-- | The device pool's name.
devicePool_name :: Lens' DevicePool (Maybe Text)

-- | The device pool's description.
devicePool_description :: Lens' DevicePool (Maybe Text)

-- | The device pool's type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
devicePool_type :: Lens' DevicePool (Maybe DevicePoolType)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DevicePool.DevicePool
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DevicePool.DevicePool
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DevicePool.DevicePool
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DevicePool.DevicePool
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DevicePool.DevicePool
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DevicePool.DevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DevicePool.DevicePool


module Network.AWS.DeviceFarm.Types.DeviceFilter

-- | Represents a device filter used to select a set of devices to be
--   included in a test run. This data structure is passed in as the
--   <tt>deviceSelectionConfiguration</tt> parameter to
--   <tt>ScheduleRun</tt>. For an example of the JSON request syntax, see
--   ScheduleRun.
--   
--   It is also passed in as the <tt>filters</tt> parameter to
--   <tt>ListDevices</tt>. For an example of the JSON request syntax, see
--   ListDevices.
--   
--   <i>See:</i> <a>newDeviceFilter</a> smart constructor.
data DeviceFilter
DeviceFilter' :: DeviceFilterAttribute -> RuleOperator -> [Text] -> DeviceFilter

-- | The aspect of a device such as platform or model used as the selection
--   criteria in a device filter.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model (for example, iPad 5th
--   Gen).Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   </ul>
[$sel:attribute:DeviceFilter'] :: DeviceFilter -> DeviceFilterAttribute

-- | Specifies how Device Farm compares the filter's attribute to the
--   value. See the attribute descriptions.
[$sel:operator:DeviceFilter'] :: DeviceFilter -> RuleOperator

-- | An array of one or more filter values used in a device filter.
--   
--   <b>Operator Values</b>
--   
--   <ul>
--   <li>The IN and NOT_IN operators can take a values array that has more
--   than one element.</li>
--   <li>The other operators require an array with a single element.</li>
--   </ul>
--   
--   <b>Attribute Values</b>
--   
--   <ul>
--   <li>The PLATFORM attribute can be set to ANDROID or IOS.</li>
--   <li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li>
--   <li>The FORM_FACTOR attribute can be set to PHONE or TABLET.</li>
--   <li>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li>
--   </ul>
[$sel:values:DeviceFilter'] :: DeviceFilter -> [Text]

-- | Create a value of <a>DeviceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:DeviceFilter'</a>, <a>deviceFilter_attribute</a> -
--   The aspect of a device such as platform or model used as the selection
--   criteria in a device filter.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model (for example, iPad 5th
--   Gen).Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   </ul>
--   
--   <a>$sel:operator:DeviceFilter'</a>, <a>deviceFilter_operator</a> -
--   Specifies how Device Farm compares the filter's attribute to the
--   value. See the attribute descriptions.
--   
--   <a>$sel:values:DeviceFilter'</a>, <a>deviceFilter_values</a> - An
--   array of one or more filter values used in a device filter.
--   
--   <b>Operator Values</b>
--   
--   <ul>
--   <li>The IN and NOT_IN operators can take a values array that has more
--   than one element.</li>
--   <li>The other operators require an array with a single element.</li>
--   </ul>
--   
--   <b>Attribute Values</b>
--   
--   <ul>
--   <li>The PLATFORM attribute can be set to ANDROID or IOS.</li>
--   <li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li>
--   <li>The FORM_FACTOR attribute can be set to PHONE or TABLET.</li>
--   <li>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li>
--   </ul>
newDeviceFilter :: DeviceFilterAttribute -> RuleOperator -> DeviceFilter

-- | The aspect of a device such as platform or model used as the selection
--   criteria in a device filter.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model (for example, iPad 5th
--   Gen).Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   </ul>
deviceFilter_attribute :: Lens' DeviceFilter DeviceFilterAttribute

-- | Specifies how Device Farm compares the filter's attribute to the
--   value. See the attribute descriptions.
deviceFilter_operator :: Lens' DeviceFilter RuleOperator

-- | An array of one or more filter values used in a device filter.
--   
--   <b>Operator Values</b>
--   
--   <ul>
--   <li>The IN and NOT_IN operators can take a values array that has more
--   than one element.</li>
--   <li>The other operators require an array with a single element.</li>
--   </ul>
--   
--   <b>Attribute Values</b>
--   
--   <ul>
--   <li>The PLATFORM attribute can be set to ANDROID or IOS.</li>
--   <li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li>
--   <li>The FORM_FACTOR attribute can be set to PHONE or TABLET.</li>
--   <li>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li>
--   </ul>
deviceFilter_values :: Lens' DeviceFilter [Text]
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceFilter.DeviceFilter
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceFilter.DeviceFilter
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceFilter.DeviceFilter
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceFilter.DeviceFilter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DeviceFilter.DeviceFilter
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceFilter.DeviceFilter
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceFilter.DeviceFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.DeviceFilter.DeviceFilter


module Network.AWS.DeviceFarm.Types.DeviceSelectionResult

-- | Contains the run results requested by the device selection
--   configuration and how many devices were returned. For an example of
--   the JSON response syntax, see ScheduleRun.
--   
--   <i>See:</i> <a>newDeviceSelectionResult</a> smart constructor.
data DeviceSelectionResult
DeviceSelectionResult' :: Maybe Int -> Maybe [DeviceFilter] -> Maybe Int -> DeviceSelectionResult

-- | The maximum number of devices to be selected by a device filter and
--   included in a test run.
[$sel:maxDevices:DeviceSelectionResult'] :: DeviceSelectionResult -> Maybe Int

-- | The filters in a device selection result.
[$sel:filters:DeviceSelectionResult'] :: DeviceSelectionResult -> Maybe [DeviceFilter]

-- | The number of devices that matched the device filter selection
--   criteria.
[$sel:matchedDevicesCount:DeviceSelectionResult'] :: DeviceSelectionResult -> Maybe Int

-- | Create a value of <a>DeviceSelectionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxDevices:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_maxDevices</a> - The maximum number of
--   devices to be selected by a device filter and included in a test run.
--   
--   <a>$sel:filters:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_filters</a> - The filters in a device
--   selection result.
--   
--   <a>$sel:matchedDevicesCount:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_matchedDevicesCount</a> - The number of
--   devices that matched the device filter selection criteria.
newDeviceSelectionResult :: DeviceSelectionResult

-- | The maximum number of devices to be selected by a device filter and
--   included in a test run.
deviceSelectionResult_maxDevices :: Lens' DeviceSelectionResult (Maybe Int)

-- | The filters in a device selection result.
deviceSelectionResult_filters :: Lens' DeviceSelectionResult (Maybe [DeviceFilter])

-- | The number of devices that matched the device filter selection
--   criteria.
deviceSelectionResult_matchedDevicesCount :: Lens' DeviceSelectionResult (Maybe Int)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceSelectionResult.DeviceSelectionResult
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceSelectionResult.DeviceSelectionResult
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceSelectionResult.DeviceSelectionResult
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceSelectionResult.DeviceSelectionResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.DeviceSelectionResult.DeviceSelectionResult
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceSelectionResult.DeviceSelectionResult
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceSelectionResult.DeviceSelectionResult


module Network.AWS.DeviceFarm.Types.DeviceSelectionConfiguration

-- | Represents the device filters used in a test run and the maximum
--   number of devices to be included in the run. It is passed in as the
--   <tt>deviceSelectionConfiguration</tt> request parameter in
--   ScheduleRun.
--   
--   <i>See:</i> <a>newDeviceSelectionConfiguration</a> smart constructor.
data DeviceSelectionConfiguration
DeviceSelectionConfiguration' :: [DeviceFilter] -> Int -> DeviceSelectionConfiguration

-- | Used to dynamically select a set of devices for a test run. A filter
--   is made up of an attribute, an operator, and one or more values.
--   
--   <ul>
--   <li><b>Attribute</b>The aspect of a device such as platform or model
--   used as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this filter is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li><b>Operator</b>The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li><b>Values</b>An array of one or more filter values.<b>Operator
--   Values</b><ul><li>The IN and NOT_IN operators can take a values array
--   that has more than one element.</li><li>The other operators require an
--   array with a single element.</li></ul><b>Attribute
--   Values</b><ul><li>The PLATFORM attribute can be set to ANDROID or
--   IOS.</li><li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li><li>The
--   FORM_FACTOR attribute can be set to PHONE or TABLET.</li><li>The
--   FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li></ul></li>
--   </ul>
[$sel:filters:DeviceSelectionConfiguration'] :: DeviceSelectionConfiguration -> [DeviceFilter]

-- | The maximum number of devices to be included in a test run.
[$sel:maxDevices:DeviceSelectionConfiguration'] :: DeviceSelectionConfiguration -> Int

-- | Create a value of <a>DeviceSelectionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DeviceSelectionConfiguration'</a>,
--   <a>deviceSelectionConfiguration_filters</a> - Used to dynamically
--   select a set of devices for a test run. A filter is made up of an
--   attribute, an operator, and one or more values.
--   
--   <ul>
--   <li><b>Attribute</b>The aspect of a device such as platform or model
--   used as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this filter is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li><b>Operator</b>The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li><b>Values</b>An array of one or more filter values.<b>Operator
--   Values</b><ul><li>The IN and NOT_IN operators can take a values array
--   that has more than one element.</li><li>The other operators require an
--   array with a single element.</li></ul><b>Attribute
--   Values</b><ul><li>The PLATFORM attribute can be set to ANDROID or
--   IOS.</li><li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li><li>The
--   FORM_FACTOR attribute can be set to PHONE or TABLET.</li><li>The
--   FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li></ul></li>
--   </ul>
--   
--   <a>$sel:maxDevices:DeviceSelectionConfiguration'</a>,
--   <a>deviceSelectionConfiguration_maxDevices</a> - The maximum number of
--   devices to be included in a test run.
newDeviceSelectionConfiguration :: Int -> DeviceSelectionConfiguration

-- | Used to dynamically select a set of devices for a test run. A filter
--   is made up of an attribute, an operator, and one or more values.
--   
--   <ul>
--   <li><b>Attribute</b>The aspect of a device such as platform or model
--   used as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this filter is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li><b>Operator</b>The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li><b>Values</b>An array of one or more filter values.<b>Operator
--   Values</b><ul><li>The IN and NOT_IN operators can take a values array
--   that has more than one element.</li><li>The other operators require an
--   array with a single element.</li></ul><b>Attribute
--   Values</b><ul><li>The PLATFORM attribute can be set to ANDROID or
--   IOS.</li><li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li><li>The
--   FORM_FACTOR attribute can be set to PHONE or TABLET.</li><li>The
--   FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li></ul></li>
--   </ul>
deviceSelectionConfiguration_filters :: Lens' DeviceSelectionConfiguration [DeviceFilter]

-- | The maximum number of devices to be included in a test run.
deviceSelectionConfiguration_maxDevices :: Lens' DeviceSelectionConfiguration Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.DeviceSelectionConfiguration.DeviceSelectionConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.DeviceSelectionConfiguration.DeviceSelectionConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.DeviceSelectionConfiguration.DeviceSelectionConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.DeviceSelectionConfiguration.DeviceSelectionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.DeviceSelectionConfiguration.DeviceSelectionConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.DeviceSelectionConfiguration.DeviceSelectionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.DeviceSelectionConfiguration.DeviceSelectionConfiguration


module Network.AWS.DeviceFarm.Types.SampleType
newtype SampleType
SampleType' :: Text -> SampleType
[fromSampleType] :: SampleType -> Text
pattern SampleType_CPU :: SampleType
pattern SampleType_MEMORY :: SampleType
pattern SampleType_NATIVE_AVG_DRAWTIME :: SampleType
pattern SampleType_NATIVE_FPS :: SampleType
pattern SampleType_NATIVE_FRAMES :: SampleType
pattern SampleType_NATIVE_MAX_DRAWTIME :: SampleType
pattern SampleType_NATIVE_MIN_DRAWTIME :: SampleType
pattern SampleType_OPENGL_AVG_DRAWTIME :: SampleType
pattern SampleType_OPENGL_FPS :: SampleType
pattern SampleType_OPENGL_FRAMES :: SampleType
pattern SampleType_OPENGL_MAX_DRAWTIME :: SampleType
pattern SampleType_OPENGL_MIN_DRAWTIME :: SampleType
pattern SampleType_RX :: SampleType
pattern SampleType_RX_RATE :: SampleType
pattern SampleType_THREADS :: SampleType
pattern SampleType_TX :: SampleType
pattern SampleType_TX_RATE :: SampleType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.SampleType.SampleType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.SampleType.SampleType


module Network.AWS.DeviceFarm.Types.Sample

-- | Represents a sample of performance data.
--   
--   <i>See:</i> <a>newSample</a> smart constructor.
data Sample
Sample' :: Maybe Text -> Maybe Text -> Maybe SampleType -> Sample

-- | The sample's ARN.
[$sel:arn:Sample'] :: Sample -> Maybe Text

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the sample's file.
[$sel:url:Sample'] :: Sample -> Maybe Text

-- | The sample's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>CPU: A CPU sample type. This is expressed as the app processing
--   CPU time (including child processes) as reported by process, as a
--   percentage.</li>
--   <li>MEMORY: A memory usage sample type. This is expressed as the total
--   proportional set size of an app process, in kilobytes.</li>
--   <li>NATIVE_AVG_DRAWTIME</li>
--   <li>NATIVE_FPS</li>
--   <li>NATIVE_FRAMES</li>
--   <li>NATIVE_MAX_DRAWTIME</li>
--   <li>NATIVE_MIN_DRAWTIME</li>
--   <li>OPENGL_AVG_DRAWTIME</li>
--   <li>OPENGL_FPS</li>
--   <li>OPENGL_FRAMES</li>
--   <li>OPENGL_MAX_DRAWTIME</li>
--   <li>OPENGL_MIN_DRAWTIME</li>
--   <li>RX</li>
--   <li>RX_RATE: The total number of bytes per second (TCP and UDP) that
--   are sent, by app process.</li>
--   <li>THREADS: A threads sample type. This is expressed as the total
--   number of threads per app process.</li>
--   <li>TX</li>
--   <li>TX_RATE: The total number of bytes per second (TCP and UDP) that
--   are received, by app process.</li>
--   </ul>
[$sel:type':Sample'] :: Sample -> Maybe SampleType

-- | Create a value of <a>Sample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Sample'</a>, <a>sample_arn</a> - The sample's ARN.
--   
--   <a>$sel:url:Sample'</a>, <a>sample_url</a> - The presigned Amazon S3
--   URL that can be used with a GET request to download the sample's file.
--   
--   <a>$sel:type':Sample'</a>, <a>sample_type</a> - The sample's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>CPU: A CPU sample type. This is expressed as the app processing
--   CPU time (including child processes) as reported by process, as a
--   percentage.</li>
--   <li>MEMORY: A memory usage sample type. This is expressed as the total
--   proportional set size of an app process, in kilobytes.</li>
--   <li>NATIVE_AVG_DRAWTIME</li>
--   <li>NATIVE_FPS</li>
--   <li>NATIVE_FRAMES</li>
--   <li>NATIVE_MAX_DRAWTIME</li>
--   <li>NATIVE_MIN_DRAWTIME</li>
--   <li>OPENGL_AVG_DRAWTIME</li>
--   <li>OPENGL_FPS</li>
--   <li>OPENGL_FRAMES</li>
--   <li>OPENGL_MAX_DRAWTIME</li>
--   <li>OPENGL_MIN_DRAWTIME</li>
--   <li>RX</li>
--   <li>RX_RATE: The total number of bytes per second (TCP and UDP) that
--   are sent, by app process.</li>
--   <li>THREADS: A threads sample type. This is expressed as the total
--   number of threads per app process.</li>
--   <li>TX</li>
--   <li>TX_RATE: The total number of bytes per second (TCP and UDP) that
--   are received, by app process.</li>
--   </ul>
newSample :: Sample

-- | The sample's ARN.
sample_arn :: Lens' Sample (Maybe Text)

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the sample's file.
sample_url :: Lens' Sample (Maybe Text)

-- | The sample's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>CPU: A CPU sample type. This is expressed as the app processing
--   CPU time (including child processes) as reported by process, as a
--   percentage.</li>
--   <li>MEMORY: A memory usage sample type. This is expressed as the total
--   proportional set size of an app process, in kilobytes.</li>
--   <li>NATIVE_AVG_DRAWTIME</li>
--   <li>NATIVE_FPS</li>
--   <li>NATIVE_FRAMES</li>
--   <li>NATIVE_MAX_DRAWTIME</li>
--   <li>NATIVE_MIN_DRAWTIME</li>
--   <li>OPENGL_AVG_DRAWTIME</li>
--   <li>OPENGL_FPS</li>
--   <li>OPENGL_FRAMES</li>
--   <li>OPENGL_MAX_DRAWTIME</li>
--   <li>OPENGL_MIN_DRAWTIME</li>
--   <li>RX</li>
--   <li>RX_RATE: The total number of bytes per second (TCP and UDP) that
--   are sent, by app process.</li>
--   <li>THREADS: A threads sample type. This is expressed as the total
--   number of threads per app process.</li>
--   <li>TX</li>
--   <li>TX_RATE: The total number of bytes per second (TCP and UDP) that
--   are received, by app process.</li>
--   </ul>
sample_type :: Lens' Sample (Maybe SampleType)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Sample.Sample
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Sample.Sample
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Sample.Sample
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Sample.Sample
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Sample.Sample
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Sample.Sample
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Sample.Sample


module Network.AWS.DeviceFarm.Types.ScheduleRunConfiguration

-- | Represents the settings for a run. Includes things like location,
--   radio states, auxiliary apps, and network profiles.
--   
--   <i>See:</i> <a>newScheduleRunConfiguration</a> smart constructor.
data ScheduleRunConfiguration
ScheduleRunConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe Radios -> Maybe BillingMethod -> Maybe CustomerArtifactPaths -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Location -> ScheduleRunConfiguration

-- | A list of upload ARNs for app packages to be installed with your app.
[$sel:auxiliaryApps:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe [Text]

-- | Information about the locale that is used for the run.
[$sel:locale:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Text

-- | Information about the radio states for the run.
[$sel:radios:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Radios

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have purchased unmetered device slots, you must set this
--   parameter to <tt>unmetered</tt> to make use of them. Otherwise, your
--   run counts against your metered time.
[$sel:billingMethod:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe BillingMethod

-- | Input <tt>CustomerArtifactPaths</tt> object for the scheduled run
--   configuration.
[$sel:customerArtifactPaths:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe CustomerArtifactPaths

-- | An array of ARNs for your VPC endpoint configurations.
[$sel:vpceConfigurationArns:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe [Text]

-- | Reserved for internal use.
[$sel:networkProfileArn:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Text

-- | The ARN of the extra data for the run. The extra data is a .zip file
--   that AWS Device Farm extracts to external data for Android or the
--   app's sandbox for iOS.
[$sel:extraDataPackageArn:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Text

-- | Information about the location that is used for the run.
[$sel:location:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Location

-- | Create a value of <a>ScheduleRunConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:auxiliaryApps:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_auxiliaryApps</a> - A list of upload ARNs
--   for app packages to be installed with your app.
--   
--   <a>$sel:locale:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_locale</a> - Information about the locale
--   that is used for the run.
--   
--   <a>$sel:radios:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_radios</a> - Information about the radio
--   states for the run.
--   
--   <a>$sel:billingMethod:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_billingMethod</a> - Specifies the billing
--   method for a test run: <tt>metered</tt> or <tt>unmetered</tt>. If the
--   parameter is not specified, the default value is <tt>metered</tt>.
--   
--   If you have purchased unmetered device slots, you must set this
--   parameter to <tt>unmetered</tt> to make use of them. Otherwise, your
--   run counts against your metered time.
--   
--   <a>$sel:customerArtifactPaths:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_customerArtifactPaths</a> - Input
--   <tt>CustomerArtifactPaths</tt> object for the scheduled run
--   configuration.
--   
--   <a>$sel:vpceConfigurationArns:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_vpceConfigurationArns</a> - An array of
--   ARNs for your VPC endpoint configurations.
--   
--   <a>$sel:networkProfileArn:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_networkProfileArn</a> - Reserved for
--   internal use.
--   
--   <a>$sel:extraDataPackageArn:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_extraDataPackageArn</a> - The ARN of the
--   extra data for the run. The extra data is a .zip file that AWS Device
--   Farm extracts to external data for Android or the app's sandbox for
--   iOS.
--   
--   <a>$sel:location:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_location</a> - Information about the
--   location that is used for the run.
newScheduleRunConfiguration :: ScheduleRunConfiguration

-- | A list of upload ARNs for app packages to be installed with your app.
scheduleRunConfiguration_auxiliaryApps :: Lens' ScheduleRunConfiguration (Maybe [Text])

-- | Information about the locale that is used for the run.
scheduleRunConfiguration_locale :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | Information about the radio states for the run.
scheduleRunConfiguration_radios :: Lens' ScheduleRunConfiguration (Maybe Radios)

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have purchased unmetered device slots, you must set this
--   parameter to <tt>unmetered</tt> to make use of them. Otherwise, your
--   run counts against your metered time.
scheduleRunConfiguration_billingMethod :: Lens' ScheduleRunConfiguration (Maybe BillingMethod)

-- | Input <tt>CustomerArtifactPaths</tt> object for the scheduled run
--   configuration.
scheduleRunConfiguration_customerArtifactPaths :: Lens' ScheduleRunConfiguration (Maybe CustomerArtifactPaths)

-- | An array of ARNs for your VPC endpoint configurations.
scheduleRunConfiguration_vpceConfigurationArns :: Lens' ScheduleRunConfiguration (Maybe [Text])

-- | Reserved for internal use.
scheduleRunConfiguration_networkProfileArn :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | The ARN of the extra data for the run. The extra data is a .zip file
--   that AWS Device Farm extracts to external data for Android or the
--   app's sandbox for iOS.
scheduleRunConfiguration_extraDataPackageArn :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | Information about the location that is used for the run.
scheduleRunConfiguration_location :: Lens' ScheduleRunConfiguration (Maybe Location)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ScheduleRunConfiguration.ScheduleRunConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ScheduleRunConfiguration.ScheduleRunConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ScheduleRunConfiguration.ScheduleRunConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ScheduleRunConfiguration.ScheduleRunConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ScheduleRunConfiguration.ScheduleRunConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ScheduleRunConfiguration.ScheduleRunConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.ScheduleRunConfiguration.ScheduleRunConfiguration


module Network.AWS.DeviceFarm.Types.Tag

-- | The metadata that you apply to a resource to help you categorize and
--   organize it. Each tag consists of a key and an optional value, both of
--   which you define. Tag keys can have a maximum character length of 128
--   characters. Tag values can have a maximum length of 256 characters.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | One part of a key-value pair that makes up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
[$sel:key:Tag'] :: Tag -> Text

-- | The optional part of a key-value pair that makes up a tag. A
--   <tt>value</tt> acts as a descriptor in a tag category (key).
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that makes up a tag. A <tt>key</tt> is a general label that acts like
--   a category for more specific tag values.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that makes up a tag. A <tt>value</tt> acts as a
--   descriptor in a tag category (key).
newTag :: Text -> Text -> Tag

-- | One part of a key-value pair that makes up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
tag_key :: Lens' Tag Text

-- | The optional part of a key-value pair that makes up a tag. A
--   <tt>value</tt> acts as a descriptor in a tag category (key).
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.Tag.Tag


module Network.AWS.DeviceFarm.Types.TestGridSessionAction

-- | An action taken by a TestGridSession browser instance.
--   
--   <i>See:</i> <a>newTestGridSessionAction</a> smart constructor.
data TestGridSessionAction
TestGridSessionAction' :: Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> TestGridSessionAction

-- | The time that the session invoked the action.
[$sel:started:TestGridSessionAction'] :: TestGridSessionAction -> Maybe POSIX

-- | The time, in milliseconds, that the action took to complete in the
--   browser.
[$sel:duration:TestGridSessionAction'] :: TestGridSessionAction -> Maybe Integer

-- | HTTP status code returned to the browser when the action was taken.
[$sel:statusCode:TestGridSessionAction'] :: TestGridSessionAction -> Maybe Text

-- | The action taken by the session.
[$sel:action:TestGridSessionAction'] :: TestGridSessionAction -> Maybe Text

-- | HTTP method that the browser used to make the request.
[$sel:requestMethod:TestGridSessionAction'] :: TestGridSessionAction -> Maybe Text

-- | Create a value of <a>TestGridSessionAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:started:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_started</a> - The time that the session
--   invoked the action.
--   
--   <a>$sel:duration:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_duration</a> - The time, in milliseconds,
--   that the action took to complete in the browser.
--   
--   <a>$sel:statusCode:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_statusCode</a> - HTTP status code returned to
--   the browser when the action was taken.
--   
--   <a>$sel:action:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_action</a> - The action taken by the session.
--   
--   <a>$sel:requestMethod:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_requestMethod</a> - HTTP method that the
--   browser used to make the request.
newTestGridSessionAction :: TestGridSessionAction

-- | The time that the session invoked the action.
testGridSessionAction_started :: Lens' TestGridSessionAction (Maybe UTCTime)

-- | The time, in milliseconds, that the action took to complete in the
--   browser.
testGridSessionAction_duration :: Lens' TestGridSessionAction (Maybe Integer)

-- | HTTP status code returned to the browser when the action was taken.
testGridSessionAction_statusCode :: Lens' TestGridSessionAction (Maybe Text)

-- | The action taken by the session.
testGridSessionAction_action :: Lens' TestGridSessionAction (Maybe Text)

-- | HTTP method that the browser used to make the request.
testGridSessionAction_requestMethod :: Lens' TestGridSessionAction (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestGridSessionAction.TestGridSessionAction
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestGridSessionAction.TestGridSessionAction
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TestGridSessionAction.TestGridSessionAction
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestGridSessionAction.TestGridSessionAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestGridSessionAction.TestGridSessionAction
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestGridSessionAction.TestGridSessionAction
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestGridSessionAction.TestGridSessionAction


module Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory
newtype TestGridSessionArtifactCategory
TestGridSessionArtifactCategory' :: Text -> TestGridSessionArtifactCategory
[fromTestGridSessionArtifactCategory] :: TestGridSessionArtifactCategory -> Text
pattern TestGridSessionArtifactCategory_LOG :: TestGridSessionArtifactCategory
pattern TestGridSessionArtifactCategory_VIDEO :: TestGridSessionArtifactCategory
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestGridSessionArtifactCategory.TestGridSessionArtifactCategory


module Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType
newtype TestGridSessionArtifactType
TestGridSessionArtifactType' :: Text -> TestGridSessionArtifactType
[fromTestGridSessionArtifactType] :: TestGridSessionArtifactType -> Text
pattern TestGridSessionArtifactType_SELENIUM_LOG :: TestGridSessionArtifactType
pattern TestGridSessionArtifactType_UNKNOWN :: TestGridSessionArtifactType
pattern TestGridSessionArtifactType_VIDEO :: TestGridSessionArtifactType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestGridSessionArtifactType.TestGridSessionArtifactType


module Network.AWS.DeviceFarm.Types.TestGridSessionArtifact

-- | Artifacts are video and other files that are produced in the process
--   of running a browser in an automated context.
--   
--   Video elements might be broken up into multiple artifacts as they grow
--   in size during creation.
--   
--   <i>See:</i> <a>newTestGridSessionArtifact</a> smart constructor.
data TestGridSessionArtifact
TestGridSessionArtifact' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe TestGridSessionArtifactType -> TestGridSessionArtifact

-- | The file name of the artifact.
[$sel:filename:TestGridSessionArtifact'] :: TestGridSessionArtifact -> Maybe Text

-- | A semi-stable URL to the content of the object.
[$sel:url:TestGridSessionArtifact'] :: TestGridSessionArtifact -> Maybe (Sensitive Text)

-- | The kind of artifact.
[$sel:type':TestGridSessionArtifact'] :: TestGridSessionArtifact -> Maybe TestGridSessionArtifactType

-- | Create a value of <a>TestGridSessionArtifact</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filename:TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_filename</a> - The file name of the
--   artifact.
--   
--   <a>$sel:url:TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_url</a> - A semi-stable URL to the content
--   of the object.
--   
--   <a>$sel:type':TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_type</a> - The kind of artifact.
newTestGridSessionArtifact :: TestGridSessionArtifact

-- | The file name of the artifact.
testGridSessionArtifact_filename :: Lens' TestGridSessionArtifact (Maybe Text)

-- | A semi-stable URL to the content of the object.
testGridSessionArtifact_url :: Lens' TestGridSessionArtifact (Maybe Text)

-- | The kind of artifact.
testGridSessionArtifact_type :: Lens' TestGridSessionArtifact (Maybe TestGridSessionArtifactType)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestGridSessionArtifact.TestGridSessionArtifact
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestGridSessionArtifact.TestGridSessionArtifact
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestGridSessionArtifact.TestGridSessionArtifact
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestGridSessionArtifact.TestGridSessionArtifact
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestGridSessionArtifact.TestGridSessionArtifact
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestGridSessionArtifact.TestGridSessionArtifact


module Network.AWS.DeviceFarm.Types.TestGridSessionStatus
newtype TestGridSessionStatus
TestGridSessionStatus' :: Text -> TestGridSessionStatus
[fromTestGridSessionStatus] :: TestGridSessionStatus -> Text
pattern TestGridSessionStatus_ACTIVE :: TestGridSessionStatus
pattern TestGridSessionStatus_CLOSED :: TestGridSessionStatus
pattern TestGridSessionStatus_ERRORED :: TestGridSessionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestGridSessionStatus.TestGridSessionStatus


module Network.AWS.DeviceFarm.Types.TestGridSession

-- | A TestGridSession is a single instance of a browser launched from the
--   URL provided by a call to CreateTestGridUrl.
--   
--   <i>See:</i> <a>newTestGridSession</a> smart constructor.
data TestGridSession
TestGridSession' :: Maybe TestGridSessionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Double -> Maybe POSIX -> TestGridSession

-- | The state of the session.
[$sel:status:TestGridSession'] :: TestGridSession -> Maybe TestGridSessionStatus

-- | The ARN of the session.
[$sel:arn:TestGridSession'] :: TestGridSession -> Maybe Text

-- | A JSON object of options and parameters passed to the Selenium
--   WebDriver.
[$sel:seleniumProperties:TestGridSession'] :: TestGridSession -> Maybe Text

-- | The time the session ended.
[$sel:ended:TestGridSession'] :: TestGridSession -> Maybe POSIX

-- | The number of billed minutes that were used for this session.
[$sel:billingMinutes:TestGridSession'] :: TestGridSession -> Maybe Double

-- | The time that the session was started.
[$sel:created:TestGridSession'] :: TestGridSession -> Maybe POSIX

-- | Create a value of <a>TestGridSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestGridSession'</a>, <a>testGridSession_status</a> -
--   The state of the session.
--   
--   <a>$sel:arn:TestGridSession'</a>, <a>testGridSession_arn</a> - The ARN
--   of the session.
--   
--   <a>$sel:seleniumProperties:TestGridSession'</a>,
--   <a>testGridSession_seleniumProperties</a> - A JSON object of options
--   and parameters passed to the Selenium WebDriver.
--   
--   <a>$sel:ended:TestGridSession'</a>, <a>testGridSession_ended</a> - The
--   time the session ended.
--   
--   <a>$sel:billingMinutes:TestGridSession'</a>,
--   <a>testGridSession_billingMinutes</a> - The number of billed minutes
--   that were used for this session.
--   
--   <a>$sel:created:TestGridSession'</a>, <a>testGridSession_created</a> -
--   The time that the session was started.
newTestGridSession :: TestGridSession

-- | The state of the session.
testGridSession_status :: Lens' TestGridSession (Maybe TestGridSessionStatus)

-- | The ARN of the session.
testGridSession_arn :: Lens' TestGridSession (Maybe Text)

-- | A JSON object of options and parameters passed to the Selenium
--   WebDriver.
testGridSession_seleniumProperties :: Lens' TestGridSession (Maybe Text)

-- | The time the session ended.
testGridSession_ended :: Lens' TestGridSession (Maybe UTCTime)

-- | The number of billed minutes that were used for this session.
testGridSession_billingMinutes :: Lens' TestGridSession (Maybe Double)

-- | The time that the session was started.
testGridSession_created :: Lens' TestGridSession (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestGridSession.TestGridSession
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestGridSession.TestGridSession
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TestGridSession.TestGridSession
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestGridSession.TestGridSession
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestGridSession.TestGridSession
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestGridSession.TestGridSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestGridSession.TestGridSession


module Network.AWS.DeviceFarm.Types.TestGridVpcConfig

-- | The VPC security groups and subnets that are attached to a project.
--   
--   <i>See:</i> <a>newTestGridVpcConfig</a> smart constructor.
data TestGridVpcConfig
TestGridVpcConfig' :: NonEmpty Text -> NonEmpty Text -> Text -> TestGridVpcConfig

-- | A list of VPC security group IDs in your Amazon VPC.
[$sel:securityGroupIds:TestGridVpcConfig'] :: TestGridVpcConfig -> NonEmpty Text

-- | A list of VPC subnet IDs in your Amazon VPC.
[$sel:subnetIds:TestGridVpcConfig'] :: TestGridVpcConfig -> NonEmpty Text

-- | The ID of the Amazon VPC.
[$sel:vpcId:TestGridVpcConfig'] :: TestGridVpcConfig -> Text

-- | Create a value of <a>TestGridVpcConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:TestGridVpcConfig'</a>,
--   <a>testGridVpcConfig_securityGroupIds</a> - A list of VPC security
--   group IDs in your Amazon VPC.
--   
--   <a>$sel:subnetIds:TestGridVpcConfig'</a>,
--   <a>testGridVpcConfig_subnetIds</a> - A list of VPC subnet IDs in your
--   Amazon VPC.
--   
--   <a>$sel:vpcId:TestGridVpcConfig'</a>, <a>testGridVpcConfig_vpcId</a> -
--   The ID of the Amazon VPC.
newTestGridVpcConfig :: NonEmpty Text -> NonEmpty Text -> Text -> TestGridVpcConfig

-- | A list of VPC security group IDs in your Amazon VPC.
testGridVpcConfig_securityGroupIds :: Lens' TestGridVpcConfig (NonEmpty Text)

-- | A list of VPC subnet IDs in your Amazon VPC.
testGridVpcConfig_subnetIds :: Lens' TestGridVpcConfig (NonEmpty Text)

-- | The ID of the Amazon VPC.
testGridVpcConfig_vpcId :: Lens' TestGridVpcConfig Text
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestGridVpcConfig.TestGridVpcConfig
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestGridVpcConfig.TestGridVpcConfig
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TestGridVpcConfig.TestGridVpcConfig
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestGridVpcConfig.TestGridVpcConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestGridVpcConfig.TestGridVpcConfig
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestGridVpcConfig.TestGridVpcConfig
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestGridVpcConfig.TestGridVpcConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.TestGridVpcConfig.TestGridVpcConfig


module Network.AWS.DeviceFarm.Types.TestGridProject

-- | A Selenium testing project. Projects are used to collect and collate
--   sessions.
--   
--   <i>See:</i> <a>newTestGridProject</a> smart constructor.
data TestGridProject
TestGridProject' :: Maybe TestGridVpcConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> TestGridProject

-- | The VPC security groups and subnets that are attached to a project.
[$sel:vpcConfig:TestGridProject'] :: TestGridProject -> Maybe TestGridVpcConfig

-- | The ARN for the project.
[$sel:arn:TestGridProject'] :: TestGridProject -> Maybe Text

-- | A human-readable name for the project.
[$sel:name:TestGridProject'] :: TestGridProject -> Maybe Text

-- | A human-readable description for the project.
[$sel:description:TestGridProject'] :: TestGridProject -> Maybe Text

-- | When the project was created.
[$sel:created:TestGridProject'] :: TestGridProject -> Maybe POSIX

-- | Create a value of <a>TestGridProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:TestGridProject'</a>,
--   <a>testGridProject_vpcConfig</a> - The VPC security groups and subnets
--   that are attached to a project.
--   
--   <a>$sel:arn:TestGridProject'</a>, <a>testGridProject_arn</a> - The ARN
--   for the project.
--   
--   <a>$sel:name:TestGridProject'</a>, <a>testGridProject_name</a> - A
--   human-readable name for the project.
--   
--   <a>$sel:description:TestGridProject'</a>,
--   <a>testGridProject_description</a> - A human-readable description for
--   the project.
--   
--   <a>$sel:created:TestGridProject'</a>, <a>testGridProject_created</a> -
--   When the project was created.
newTestGridProject :: TestGridProject

-- | The VPC security groups and subnets that are attached to a project.
testGridProject_vpcConfig :: Lens' TestGridProject (Maybe TestGridVpcConfig)

-- | The ARN for the project.
testGridProject_arn :: Lens' TestGridProject (Maybe Text)

-- | A human-readable name for the project.
testGridProject_name :: Lens' TestGridProject (Maybe Text)

-- | A human-readable description for the project.
testGridProject_description :: Lens' TestGridProject (Maybe Text)

-- | When the project was created.
testGridProject_created :: Lens' TestGridProject (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestGridProject.TestGridProject
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestGridProject.TestGridProject
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TestGridProject.TestGridProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestGridProject.TestGridProject
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestGridProject.TestGridProject
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestGridProject.TestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestGridProject.TestGridProject


module Network.AWS.DeviceFarm.Types.TestType
newtype TestType
TestType' :: Text -> TestType
[fromTestType] :: TestType -> Text
pattern TestType_APPIUM_JAVA_JUNIT :: TestType
pattern TestType_APPIUM_JAVA_TESTNG :: TestType
pattern TestType_APPIUM_NODE :: TestType
pattern TestType_APPIUM_PYTHON :: TestType
pattern TestType_APPIUM_RUBY :: TestType
pattern TestType_APPIUM_WEB_JAVA_JUNIT :: TestType
pattern TestType_APPIUM_WEB_JAVA_TESTNG :: TestType
pattern TestType_APPIUM_WEB_NODE :: TestType
pattern TestType_APPIUM_WEB_PYTHON :: TestType
pattern TestType_APPIUM_WEB_RUBY :: TestType
pattern TestType_BUILTIN_EXPLORER :: TestType
pattern TestType_BUILTIN_FUZZ :: TestType
pattern TestType_CALABASH :: TestType
pattern TestType_INSTRUMENTATION :: TestType
pattern TestType_REMOTE_ACCESS_RECORD :: TestType
pattern TestType_REMOTE_ACCESS_REPLAY :: TestType
pattern TestType_UIAUTOMATION :: TestType
pattern TestType_UIAUTOMATOR :: TestType
pattern TestType_WEB_PERFORMANCE_PROFILE :: TestType
pattern TestType_XCTEST :: TestType
pattern TestType_XCTEST_UI :: TestType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.TestType.TestType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.TestType.TestType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.TestType.TestType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.TestType.TestType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.TestType.TestType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TestType.TestType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.TestType.TestType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.TestType.TestType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.TestType.TestType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.TestType.TestType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.TestType.TestType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.TestType.TestType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TestType.TestType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TestType.TestType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TestType.TestType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.TestType.TestType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TestType.TestType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TestType.TestType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TestType.TestType


module Network.AWS.DeviceFarm.Types.Test

-- | Represents a condition that is evaluated.
--   
--   <i>See:</i> <a>newTest</a> smart constructor.
data Test
Test' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Test

-- | The test's result counters.
[$sel:counters:Test'] :: Test -> Maybe Counters

-- | The test's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
[$sel:status:Test'] :: Test -> Maybe ExecutionStatus

-- | The test's start time.
[$sel:started:Test'] :: Test -> Maybe POSIX

-- | The test's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Test'] :: Test -> Maybe ExecutionResult

-- | A message about the test's result.
[$sel:message:Test'] :: Test -> Maybe Text

-- | The test's ARN.
[$sel:arn:Test'] :: Test -> Maybe Text

-- | The test's name.
[$sel:name:Test'] :: Test -> Maybe Text

-- | The test's stop time.
[$sel:stopped:Test'] :: Test -> Maybe POSIX

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':Test'] :: Test -> Maybe TestType

-- | When the test was created.
[$sel:created:Test'] :: Test -> Maybe POSIX

-- | Represents the total (metered or unmetered) minutes used by the test.
[$sel:deviceMinutes:Test'] :: Test -> Maybe DeviceMinutes

-- | Create a value of <a>Test</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Test'</a>, <a>test_counters</a> - The test's result
--   counters.
--   
--   <a>$sel:status:Test'</a>, <a>test_status</a> - The test's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Test'</a>, <a>test_started</a> - The test's start
--   time.
--   
--   <a>$sel:result:Test'</a>, <a>test_result</a> - The test's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Test'</a>, <a>test_message</a> - A message about the
--   test's result.
--   
--   <a>$sel:arn:Test'</a>, <a>test_arn</a> - The test's ARN.
--   
--   <a>$sel:name:Test'</a>, <a>test_name</a> - The test's name.
--   
--   <a>$sel:stopped:Test'</a>, <a>test_stopped</a> - The test's stop time.
--   
--   <a>$sel:type':Test'</a>, <a>test_type</a> - The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Test'</a>, <a>test_created</a> - When the test was
--   created.
--   
--   <a>$sel:deviceMinutes:Test'</a>, <a>test_deviceMinutes</a> -
--   Represents the total (metered or unmetered) minutes used by the test.
newTest :: Test

-- | The test's result counters.
test_counters :: Lens' Test (Maybe Counters)

-- | The test's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
test_status :: Lens' Test (Maybe ExecutionStatus)

-- | The test's start time.
test_started :: Lens' Test (Maybe UTCTime)

-- | The test's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
test_result :: Lens' Test (Maybe ExecutionResult)

-- | A message about the test's result.
test_message :: Lens' Test (Maybe Text)

-- | The test's ARN.
test_arn :: Lens' Test (Maybe Text)

-- | The test's name.
test_name :: Lens' Test (Maybe Text)

-- | The test's stop time.
test_stopped :: Lens' Test (Maybe UTCTime)

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
test_type :: Lens' Test (Maybe TestType)

-- | When the test was created.
test_created :: Lens' Test (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test.
test_deviceMinutes :: Lens' Test (Maybe DeviceMinutes)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Test.Test
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Test.Test
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Test.Test
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Test.Test
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Test.Test
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Test.Test
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Test.Test


module Network.AWS.DeviceFarm.Types.Suite

-- | Represents a collection of one or more tests.
--   
--   <i>See:</i> <a>newSuite</a> smart constructor.
data Suite
Suite' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Suite

-- | The suite's result counters.
[$sel:counters:Suite'] :: Suite -> Maybe Counters

-- | The suite's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
[$sel:status:Suite'] :: Suite -> Maybe ExecutionStatus

-- | The suite's start time.
[$sel:started:Suite'] :: Suite -> Maybe POSIX

-- | The suite's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Suite'] :: Suite -> Maybe ExecutionResult

-- | A message about the suite's result.
[$sel:message:Suite'] :: Suite -> Maybe Text

-- | The suite's ARN.
[$sel:arn:Suite'] :: Suite -> Maybe Text

-- | The suite's name.
[$sel:name:Suite'] :: Suite -> Maybe Text

-- | The suite's stop time.
[$sel:stopped:Suite'] :: Suite -> Maybe POSIX

-- | The suite's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLOREROnly available for Android; an app explorer that
--   traverses an Android app, interacting with it and capturing
--   screenshots at the same time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':Suite'] :: Suite -> Maybe TestType

-- | When the suite was created.
[$sel:created:Suite'] :: Suite -> Maybe POSIX

-- | Represents the total (metered or unmetered) minutes used by the test
--   suite.
[$sel:deviceMinutes:Suite'] :: Suite -> Maybe DeviceMinutes

-- | Create a value of <a>Suite</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Suite'</a>, <a>suite_counters</a> - The suite's
--   result counters.
--   
--   <a>$sel:status:Suite'</a>, <a>suite_status</a> - The suite's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Suite'</a>, <a>suite_started</a> - The suite's start
--   time.
--   
--   <a>$sel:result:Suite'</a>, <a>suite_result</a> - The suite's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Suite'</a>, <a>suite_message</a> - A message about the
--   suite's result.
--   
--   <a>$sel:arn:Suite'</a>, <a>suite_arn</a> - The suite's ARN.
--   
--   <a>$sel:name:Suite'</a>, <a>suite_name</a> - The suite's name.
--   
--   <a>$sel:stopped:Suite'</a>, <a>suite_stopped</a> - The suite's stop
--   time.
--   
--   <a>$sel:type':Suite'</a>, <a>suite_type</a> - The suite's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLOREROnly available for Android; an app explorer that
--   traverses an Android app, interacting with it and capturing
--   screenshots at the same time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Suite'</a>, <a>suite_created</a> - When the suite was
--   created.
--   
--   <a>$sel:deviceMinutes:Suite'</a>, <a>suite_deviceMinutes</a> -
--   Represents the total (metered or unmetered) minutes used by the test
--   suite.
newSuite :: Suite

-- | The suite's result counters.
suite_counters :: Lens' Suite (Maybe Counters)

-- | The suite's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
suite_status :: Lens' Suite (Maybe ExecutionStatus)

-- | The suite's start time.
suite_started :: Lens' Suite (Maybe UTCTime)

-- | The suite's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
suite_result :: Lens' Suite (Maybe ExecutionResult)

-- | A message about the suite's result.
suite_message :: Lens' Suite (Maybe Text)

-- | The suite's ARN.
suite_arn :: Lens' Suite (Maybe Text)

-- | The suite's name.
suite_name :: Lens' Suite (Maybe Text)

-- | The suite's stop time.
suite_stopped :: Lens' Suite (Maybe UTCTime)

-- | The suite's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLOREROnly available for Android; an app explorer that
--   traverses an Android app, interacting with it and capturing
--   screenshots at the same time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
suite_type :: Lens' Suite (Maybe TestType)

-- | When the suite was created.
suite_created :: Lens' Suite (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test
--   suite.
suite_deviceMinutes :: Lens' Suite (Maybe DeviceMinutes)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Suite.Suite
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Suite.Suite
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Suite.Suite
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Suite.Suite
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Suite.Suite
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Suite.Suite
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Suite.Suite


module Network.AWS.DeviceFarm.Types.ScheduleRunTest

-- | Represents test settings. This data structure is passed in as the test
--   parameter to ScheduleRun. For an example of the JSON request syntax,
--   see ScheduleRun.
--   
--   <i>See:</i> <a>newScheduleRunTest</a> smart constructor.
data ScheduleRunTest
ScheduleRunTest' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> TestType -> ScheduleRunTest

-- | The ARN of the uploaded test to be run.
[$sel:testPackageArn:ScheduleRunTest'] :: ScheduleRunTest -> Maybe Text

-- | The ARN of the YAML-formatted test specification.
[$sel:testSpecArn:ScheduleRunTest'] :: ScheduleRunTest -> Maybe Text

-- | The test's filter.
[$sel:filter':ScheduleRunTest'] :: ScheduleRunTest -> Maybe Text

-- | The test's parameters, such as test framework parameters and fixture
--   settings. Parameters are represented by name-value pairs of strings.
--   
--   For all tests:
--   
--   <ul>
--   <li><tt>app_performance_monitoring</tt>: Performance monitoring is
--   enabled by default. Set this parameter to false to disable it.</li>
--   </ul>
--   
--   For Calabash tests:
--   
--   <ul>
--   <li>profile: A cucumber profile (for example,
--   <tt>my_profile_name</tt>).</li>
--   <li>tags: You can limit execution to features or scenarios that have
--   (or don't have) certain tags (for example, @smoke or
--   @smoke,~@wip).</li>
--   </ul>
--   
--   For Appium tests (all types):
--   
--   <ul>
--   <li>appium_version: The Appium version. Currently supported values are
--   1.6.5 (and later), latest, and default.<ul><li>latest runs the latest
--   Appium version supported by Device Farm (1.9.1).</li><li>For default,
--   Device Farm selects a compatible version of Appium for the device. The
--   current behavior is to run 1.7.2 on Android devices and iOS 9 and
--   earlier and 1.7.2 for iOS 10 and later.</li><li>This behavior is
--   subject to change.</li></ul></li>
--   </ul>
--   
--   For fuzz tests (Android only):
--   
--   <ul>
--   <li>event_count: The number of events, between 1 and 10000, that the
--   UI fuzz test should perform.</li>
--   <li>throttle: The time, in ms, between 0 and 1000, that the UI fuzz
--   test should wait between events.</li>
--   <li>seed: A seed to use for randomizing the UI fuzz test. Using the
--   same seed value between tests ensures identical event sequences.</li>
--   </ul>
--   
--   For Explorer tests:
--   
--   <ul>
--   <li>username: A user name to use if the Explorer encounters a login
--   form. If not supplied, no user name is inserted.</li>
--   <li>password: A password to use if the Explorer encounters a login
--   form. If not supplied, no password is inserted.</li>
--   </ul>
--   
--   For Instrumentation:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   For XCTest and XCTestUI:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test class: <tt>LoginTests</tt></li><li>Running a multiple test
--   classes: <tt>LoginTests,SmokeTests</tt></li><li>Running a single test:
--   <tt>LoginTests/testValid</tt></li><li>Running multiple tests:
--   <tt>LoginTests/testValid,LoginTests/testInvalid</tt></li></ul></li>
--   </ul>
--   
--   For UIAutomator:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
[$sel:parameters:ScheduleRunTest'] :: ScheduleRunTest -> Maybe (HashMap Text Text)

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':ScheduleRunTest'] :: ScheduleRunTest -> TestType

-- | Create a value of <a>ScheduleRunTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testPackageArn:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_testPackageArn</a> - The ARN of the uploaded test
--   to be run.
--   
--   <a>$sel:testSpecArn:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_testSpecArn</a> - The ARN of the YAML-formatted
--   test specification.
--   
--   <a>$sel:filter':ScheduleRunTest'</a>, <a>scheduleRunTest_filter</a> -
--   The test's filter.
--   
--   <a>$sel:parameters:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_parameters</a> - The test's parameters, such as
--   test framework parameters and fixture settings. Parameters are
--   represented by name-value pairs of strings.
--   
--   For all tests:
--   
--   <ul>
--   <li><tt>app_performance_monitoring</tt>: Performance monitoring is
--   enabled by default. Set this parameter to false to disable it.</li>
--   </ul>
--   
--   For Calabash tests:
--   
--   <ul>
--   <li>profile: A cucumber profile (for example,
--   <tt>my_profile_name</tt>).</li>
--   <li>tags: You can limit execution to features or scenarios that have
--   (or don't have) certain tags (for example, @smoke or
--   @smoke,~@wip).</li>
--   </ul>
--   
--   For Appium tests (all types):
--   
--   <ul>
--   <li>appium_version: The Appium version. Currently supported values are
--   1.6.5 (and later), latest, and default.<ul><li>latest runs the latest
--   Appium version supported by Device Farm (1.9.1).</li><li>For default,
--   Device Farm selects a compatible version of Appium for the device. The
--   current behavior is to run 1.7.2 on Android devices and iOS 9 and
--   earlier and 1.7.2 for iOS 10 and later.</li><li>This behavior is
--   subject to change.</li></ul></li>
--   </ul>
--   
--   For fuzz tests (Android only):
--   
--   <ul>
--   <li>event_count: The number of events, between 1 and 10000, that the
--   UI fuzz test should perform.</li>
--   <li>throttle: The time, in ms, between 0 and 1000, that the UI fuzz
--   test should wait between events.</li>
--   <li>seed: A seed to use for randomizing the UI fuzz test. Using the
--   same seed value between tests ensures identical event sequences.</li>
--   </ul>
--   
--   For Explorer tests:
--   
--   <ul>
--   <li>username: A user name to use if the Explorer encounters a login
--   form. If not supplied, no user name is inserted.</li>
--   <li>password: A password to use if the Explorer encounters a login
--   form. If not supplied, no password is inserted.</li>
--   </ul>
--   
--   For Instrumentation:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   For XCTest and XCTestUI:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test class: <tt>LoginTests</tt></li><li>Running a multiple test
--   classes: <tt>LoginTests,SmokeTests</tt></li><li>Running a single test:
--   <tt>LoginTests/testValid</tt></li><li>Running multiple tests:
--   <tt>LoginTests/testValid,LoginTests/testInvalid</tt></li></ul></li>
--   </ul>
--   
--   For UIAutomator:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ScheduleRunTest'</a>, <a>scheduleRunTest_type</a> - The
--   test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
newScheduleRunTest :: TestType -> ScheduleRunTest

-- | The ARN of the uploaded test to be run.
scheduleRunTest_testPackageArn :: Lens' ScheduleRunTest (Maybe Text)

-- | The ARN of the YAML-formatted test specification.
scheduleRunTest_testSpecArn :: Lens' ScheduleRunTest (Maybe Text)

-- | The test's filter.
scheduleRunTest_filter :: Lens' ScheduleRunTest (Maybe Text)

-- | The test's parameters, such as test framework parameters and fixture
--   settings. Parameters are represented by name-value pairs of strings.
--   
--   For all tests:
--   
--   <ul>
--   <li><tt>app_performance_monitoring</tt>: Performance monitoring is
--   enabled by default. Set this parameter to false to disable it.</li>
--   </ul>
--   
--   For Calabash tests:
--   
--   <ul>
--   <li>profile: A cucumber profile (for example,
--   <tt>my_profile_name</tt>).</li>
--   <li>tags: You can limit execution to features or scenarios that have
--   (or don't have) certain tags (for example, @smoke or
--   @smoke,~@wip).</li>
--   </ul>
--   
--   For Appium tests (all types):
--   
--   <ul>
--   <li>appium_version: The Appium version. Currently supported values are
--   1.6.5 (and later), latest, and default.<ul><li>latest runs the latest
--   Appium version supported by Device Farm (1.9.1).</li><li>For default,
--   Device Farm selects a compatible version of Appium for the device. The
--   current behavior is to run 1.7.2 on Android devices and iOS 9 and
--   earlier and 1.7.2 for iOS 10 and later.</li><li>This behavior is
--   subject to change.</li></ul></li>
--   </ul>
--   
--   For fuzz tests (Android only):
--   
--   <ul>
--   <li>event_count: The number of events, between 1 and 10000, that the
--   UI fuzz test should perform.</li>
--   <li>throttle: The time, in ms, between 0 and 1000, that the UI fuzz
--   test should wait between events.</li>
--   <li>seed: A seed to use for randomizing the UI fuzz test. Using the
--   same seed value between tests ensures identical event sequences.</li>
--   </ul>
--   
--   For Explorer tests:
--   
--   <ul>
--   <li>username: A user name to use if the Explorer encounters a login
--   form. If not supplied, no user name is inserted.</li>
--   <li>password: A password to use if the Explorer encounters a login
--   form. If not supplied, no password is inserted.</li>
--   </ul>
--   
--   For Instrumentation:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   For XCTest and XCTestUI:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test class: <tt>LoginTests</tt></li><li>Running a multiple test
--   classes: <tt>LoginTests,SmokeTests</tt></li><li>Running a single test:
--   <tt>LoginTests/testValid</tt></li><li>Running multiple tests:
--   <tt>LoginTests/testValid,LoginTests/testInvalid</tt></li></ul></li>
--   </ul>
--   
--   For UIAutomator:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
scheduleRunTest_parameters :: Lens' ScheduleRunTest (Maybe (HashMap Text Text))

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
scheduleRunTest_type :: Lens' ScheduleRunTest TestType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.ScheduleRunTest.ScheduleRunTest
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.ScheduleRunTest.ScheduleRunTest
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.ScheduleRunTest.ScheduleRunTest
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.ScheduleRunTest.ScheduleRunTest
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.ScheduleRunTest.ScheduleRunTest
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.ScheduleRunTest.ScheduleRunTest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.ScheduleRunTest.ScheduleRunTest


module Network.AWS.DeviceFarm.Types.Run

-- | Represents a test run on a set of devices with a given app package,
--   test parameters, and so on.
--   
--   <i>See:</i> <a>newRun</a> smart constructor.
data Run
Run' :: Maybe DevicePlatform -> Maybe Counters -> Maybe Int -> Maybe Int -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe DeviceSelectionResult -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe NetworkProfile -> Maybe Text -> Maybe Radios -> Maybe Text -> Maybe Text -> Maybe BillingMethod -> Maybe ExecutionResultCode -> Maybe Bool -> Maybe CustomerArtifactPaths -> Maybe Int -> Maybe Int -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Maybe Location -> Maybe Text -> Run

-- | The run's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
[$sel:platform:Run'] :: Run -> Maybe DevicePlatform

-- | The run's result counters.
[$sel:counters:Run'] :: Run -> Maybe Counters

-- | For fuzz tests, this is a seed to use for randomizing the UI fuzz
--   test. Using the same seed value between tests ensures identical event
--   sequences.
[$sel:seed:Run'] :: Run -> Maybe Int

-- | For fuzz tests, this is the number of events, between 1 and 10000,
--   that the UI fuzz test should perform.
[$sel:eventCount:Run'] :: Run -> Maybe Int

-- | The run's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
[$sel:status:Run'] :: Run -> Maybe ExecutionStatus

-- | The run's start time.
[$sel:started:Run'] :: Run -> Maybe POSIX

-- | The results of a device filter used to select the devices for a test
--   run.
[$sel:deviceSelectionResult:Run'] :: Run -> Maybe DeviceSelectionResult

-- | The run's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Run'] :: Run -> Maybe ExecutionResult

-- | The ARN of the device pool for the run.
[$sel:devicePoolArn:Run'] :: Run -> Maybe Text

-- | The ARN of the YAML-formatted test specification for the run.
[$sel:testSpecArn:Run'] :: Run -> Maybe Text

-- | A message about the run's result.
[$sel:message:Run'] :: Run -> Maybe Text

-- | Information about the locale that is used for the run.
[$sel:locale:Run'] :: Run -> Maybe Text

-- | The network profile being used for a test run.
[$sel:networkProfile:Run'] :: Run -> Maybe NetworkProfile

-- | The run's ARN.
[$sel:arn:Run'] :: Run -> Maybe Text

-- | Information about the radio states for the run.
[$sel:radios:Run'] :: Run -> Maybe Radios

-- | An app to upload or that has been uploaded.
[$sel:appUpload:Run'] :: Run -> Maybe Text

-- | The run's name.
[$sel:name:Run'] :: Run -> Maybe Text

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have unmetered device slots, you must set this to
--   <tt>unmetered</tt> to use them. Otherwise, the run is counted toward
--   metered device minutes.
[$sel:billingMethod:Run'] :: Run -> Maybe BillingMethod

-- | Supporting field for the result field. Set only if <tt>result</tt> is
--   <tt>SKIPPED</tt>. <tt>PARSING_FAILED</tt> if the result is skipped
--   because of test package parsing failure.
[$sel:resultCode:Run'] :: Run -> Maybe ExecutionResultCode

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
[$sel:skipAppResign:Run'] :: Run -> Maybe Bool

-- | Output <tt>CustomerArtifactPaths</tt> object for the test run.
[$sel:customerArtifactPaths:Run'] :: Run -> Maybe CustomerArtifactPaths

-- | The total number of completed jobs.
[$sel:completedJobs:Run'] :: Run -> Maybe Int

-- | The number of minutes the job executes before it times out.
[$sel:jobTimeoutMinutes:Run'] :: Run -> Maybe Int

-- | The run's stop time.
[$sel:stopped:Run'] :: Run -> Maybe POSIX

-- | The total number of jobs for the run.
[$sel:totalJobs:Run'] :: Run -> Maybe Int

-- | The Device Farm console URL for the recording of the run.
[$sel:webUrl:Run'] :: Run -> Maybe Text

-- | The run's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':Run'] :: Run -> Maybe TestType

-- | When the run was created.
[$sel:created:Run'] :: Run -> Maybe POSIX

-- | Represents the total (metered or unmetered) minutes used by the test
--   run.
[$sel:deviceMinutes:Run'] :: Run -> Maybe DeviceMinutes

-- | Information about the location that is used for the run.
[$sel:location:Run'] :: Run -> Maybe Location

-- | Read-only URL for an object in an S3 bucket where you can get the
--   parsing results of the test package. If the test package doesn't
--   parse, the reason why it doesn't parse appears in the file that this
--   URL points to.
[$sel:parsingResultUrl:Run'] :: Run -> Maybe Text

-- | Create a value of <a>Run</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Run'</a>, <a>run_platform</a> - The run's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
--   
--   <a>$sel:counters:Run'</a>, <a>run_counters</a> - The run's result
--   counters.
--   
--   <a>$sel:seed:Run'</a>, <a>run_seed</a> - For fuzz tests, this is a
--   seed to use for randomizing the UI fuzz test. Using the same seed
--   value between tests ensures identical event sequences.
--   
--   <a>$sel:eventCount:Run'</a>, <a>run_eventCount</a> - For fuzz tests,
--   this is the number of events, between 1 and 10000, that the UI fuzz
--   test should perform.
--   
--   <a>$sel:status:Run'</a>, <a>run_status</a> - The run's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Run'</a>, <a>run_started</a> - The run's start time.
--   
--   <a>$sel:deviceSelectionResult:Run'</a>,
--   <a>run_deviceSelectionResult</a> - The results of a device filter used
--   to select the devices for a test run.
--   
--   <a>$sel:result:Run'</a>, <a>run_result</a> - The run's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:devicePoolArn:Run'</a>, <a>run_devicePoolArn</a> - The ARN of
--   the device pool for the run.
--   
--   <a>$sel:testSpecArn:Run'</a>, <a>run_testSpecArn</a> - The ARN of the
--   YAML-formatted test specification for the run.
--   
--   <a>$sel:message:Run'</a>, <a>run_message</a> - A message about the
--   run's result.
--   
--   <a>$sel:locale:Run'</a>, <a>run_locale</a> - Information about the
--   locale that is used for the run.
--   
--   <a>$sel:networkProfile:Run'</a>, <a>run_networkProfile</a> - The
--   network profile being used for a test run.
--   
--   <a>$sel:arn:Run'</a>, <a>run_arn</a> - The run's ARN.
--   
--   <a>$sel:radios:Run'</a>, <a>run_radios</a> - Information about the
--   radio states for the run.
--   
--   <a>$sel:appUpload:Run'</a>, <a>run_appUpload</a> - An app to upload or
--   that has been uploaded.
--   
--   <a>$sel:name:Run'</a>, <a>run_name</a> - The run's name.
--   
--   <a>$sel:billingMethod:Run'</a>, <a>run_billingMethod</a> - Specifies
--   the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have unmetered device slots, you must set this to
--   <tt>unmetered</tt> to use them. Otherwise, the run is counted toward
--   metered device minutes.
--   
--   <a>$sel:resultCode:Run'</a>, <a>run_resultCode</a> - Supporting field
--   for the result field. Set only if <tt>result</tt> is <tt>SKIPPED</tt>.
--   <tt>PARSING_FAILED</tt> if the result is skipped because of test
--   package parsing failure.
--   
--   <a>$sel:skipAppResign:Run'</a>, <a>run_skipAppResign</a> - When set to
--   <tt>true</tt>, for private devices, Device Farm does not sign your app
--   again. For public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:customerArtifactPaths:Run'</a>,
--   <a>run_customerArtifactPaths</a> - Output
--   <tt>CustomerArtifactPaths</tt> object for the test run.
--   
--   <a>$sel:completedJobs:Run'</a>, <a>run_completedJobs</a> - The total
--   number of completed jobs.
--   
--   <a>$sel:jobTimeoutMinutes:Run'</a>, <a>run_jobTimeoutMinutes</a> - The
--   number of minutes the job executes before it times out.
--   
--   <a>$sel:stopped:Run'</a>, <a>run_stopped</a> - The run's stop time.
--   
--   <a>$sel:totalJobs:Run'</a>, <a>run_totalJobs</a> - The total number of
--   jobs for the run.
--   
--   <a>$sel:webUrl:Run'</a>, <a>run_webUrl</a> - The Device Farm console
--   URL for the recording of the run.
--   
--   <a>$sel:type':Run'</a>, <a>run_type</a> - The run's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Run'</a>, <a>run_created</a> - When the run was
--   created.
--   
--   <a>$sel:deviceMinutes:Run'</a>, <a>run_deviceMinutes</a> - Represents
--   the total (metered or unmetered) minutes used by the test run.
--   
--   <a>$sel:location:Run'</a>, <a>run_location</a> - Information about the
--   location that is used for the run.
--   
--   <a>$sel:parsingResultUrl:Run'</a>, <a>run_parsingResultUrl</a> -
--   Read-only URL for an object in an S3 bucket where you can get the
--   parsing results of the test package. If the test package doesn't
--   parse, the reason why it doesn't parse appears in the file that this
--   URL points to.
newRun :: Run

-- | The run's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
run_platform :: Lens' Run (Maybe DevicePlatform)

-- | The run's result counters.
run_counters :: Lens' Run (Maybe Counters)

-- | For fuzz tests, this is a seed to use for randomizing the UI fuzz
--   test. Using the same seed value between tests ensures identical event
--   sequences.
run_seed :: Lens' Run (Maybe Int)

-- | For fuzz tests, this is the number of events, between 1 and 10000,
--   that the UI fuzz test should perform.
run_eventCount :: Lens' Run (Maybe Int)

-- | The run's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
run_status :: Lens' Run (Maybe ExecutionStatus)

-- | The run's start time.
run_started :: Lens' Run (Maybe UTCTime)

-- | The results of a device filter used to select the devices for a test
--   run.
run_deviceSelectionResult :: Lens' Run (Maybe DeviceSelectionResult)

-- | The run's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
run_result :: Lens' Run (Maybe ExecutionResult)

-- | The ARN of the device pool for the run.
run_devicePoolArn :: Lens' Run (Maybe Text)

-- | The ARN of the YAML-formatted test specification for the run.
run_testSpecArn :: Lens' Run (Maybe Text)

-- | A message about the run's result.
run_message :: Lens' Run (Maybe Text)

-- | Information about the locale that is used for the run.
run_locale :: Lens' Run (Maybe Text)

-- | The network profile being used for a test run.
run_networkProfile :: Lens' Run (Maybe NetworkProfile)

-- | The run's ARN.
run_arn :: Lens' Run (Maybe Text)

-- | Information about the radio states for the run.
run_radios :: Lens' Run (Maybe Radios)

-- | An app to upload or that has been uploaded.
run_appUpload :: Lens' Run (Maybe Text)

-- | The run's name.
run_name :: Lens' Run (Maybe Text)

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have unmetered device slots, you must set this to
--   <tt>unmetered</tt> to use them. Otherwise, the run is counted toward
--   metered device minutes.
run_billingMethod :: Lens' Run (Maybe BillingMethod)

-- | Supporting field for the result field. Set only if <tt>result</tt> is
--   <tt>SKIPPED</tt>. <tt>PARSING_FAILED</tt> if the result is skipped
--   because of test package parsing failure.
run_resultCode :: Lens' Run (Maybe ExecutionResultCode)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
run_skipAppResign :: Lens' Run (Maybe Bool)

-- | Output <tt>CustomerArtifactPaths</tt> object for the test run.
run_customerArtifactPaths :: Lens' Run (Maybe CustomerArtifactPaths)

-- | The total number of completed jobs.
run_completedJobs :: Lens' Run (Maybe Int)

-- | The number of minutes the job executes before it times out.
run_jobTimeoutMinutes :: Lens' Run (Maybe Int)

-- | The run's stop time.
run_stopped :: Lens' Run (Maybe UTCTime)

-- | The total number of jobs for the run.
run_totalJobs :: Lens' Run (Maybe Int)

-- | The Device Farm console URL for the recording of the run.
run_webUrl :: Lens' Run (Maybe Text)

-- | The run's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
run_type :: Lens' Run (Maybe TestType)

-- | When the run was created.
run_created :: Lens' Run (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test
--   run.
run_deviceMinutes :: Lens' Run (Maybe DeviceMinutes)

-- | Information about the location that is used for the run.
run_location :: Lens' Run (Maybe Location)

-- | Read-only URL for an object in an S3 bucket where you can get the
--   parsing results of the test package. If the test package doesn't
--   parse, the reason why it doesn't parse appears in the file that this
--   URL points to.
run_parsingResultUrl :: Lens' Run (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Run.Run
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Run.Run
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Run.Run
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Run.Run
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Run.Run
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Run.Run
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Run.Run


module Network.AWS.DeviceFarm.Types.Job

-- | Represents a device.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Job

-- | The job's result counters.
[$sel:counters:Job'] :: Job -> Maybe Counters

-- | The job's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
[$sel:status:Job'] :: Job -> Maybe ExecutionStatus

-- | The job's start time.
[$sel:started:Job'] :: Job -> Maybe POSIX

-- | The job's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Job'] :: Job -> Maybe ExecutionResult

-- | A message about the job's result.
[$sel:message:Job'] :: Job -> Maybe Text

-- | The device (phone or tablet).
[$sel:device:Job'] :: Job -> Maybe Device

-- | The job's ARN.
[$sel:arn:Job'] :: Job -> Maybe Text

-- | This value is set to true if video capture is enabled. Otherwise, it
--   is set to false.
[$sel:videoCapture:Job'] :: Job -> Maybe Bool

-- | The endpoint for streaming device video.
[$sel:videoEndpoint:Job'] :: Job -> Maybe Text

-- | The job's name.
[$sel:name:Job'] :: Job -> Maybe Text

-- | The ARN of the instance.
[$sel:instanceArn:Job'] :: Job -> Maybe Text

-- | The job's stop time.
[$sel:stopped:Job'] :: Job -> Maybe POSIX

-- | The job's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':Job'] :: Job -> Maybe TestType

-- | When the job was created.
[$sel:created:Job'] :: Job -> Maybe POSIX

-- | Represents the total (metered or unmetered) minutes used by the job.
[$sel:deviceMinutes:Job'] :: Job -> Maybe DeviceMinutes

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Job'</a>, <a>job_counters</a> - The job's result
--   counters.
--   
--   <a>$sel:status:Job'</a>, <a>job_status</a> - The job's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Job'</a>, <a>job_started</a> - The job's start time.
--   
--   <a>$sel:result:Job'</a>, <a>job_result</a> - The job's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Job'</a>, <a>job_message</a> - A message about the
--   job's result.
--   
--   <a>$sel:device:Job'</a>, <a>job_device</a> - The device (phone or
--   tablet).
--   
--   <a>$sel:arn:Job'</a>, <a>job_arn</a> - The job's ARN.
--   
--   <a>$sel:videoCapture:Job'</a>, <a>job_videoCapture</a> - This value is
--   set to true if video capture is enabled. Otherwise, it is set to
--   false.
--   
--   <a>$sel:videoEndpoint:Job'</a>, <a>job_videoEndpoint</a> - The
--   endpoint for streaming device video.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The job's name.
--   
--   <a>$sel:instanceArn:Job'</a>, <a>job_instanceArn</a> - The ARN of the
--   instance.
--   
--   <a>$sel:stopped:Job'</a>, <a>job_stopped</a> - The job's stop time.
--   
--   <a>$sel:type':Job'</a>, <a>job_type</a> - The job's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Job'</a>, <a>job_created</a> - When the job was
--   created.
--   
--   <a>$sel:deviceMinutes:Job'</a>, <a>job_deviceMinutes</a> - Represents
--   the total (metered or unmetered) minutes used by the job.
newJob :: Job

-- | The job's result counters.
job_counters :: Lens' Job (Maybe Counters)

-- | The job's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
job_status :: Lens' Job (Maybe ExecutionStatus)

-- | The job's start time.
job_started :: Lens' Job (Maybe UTCTime)

-- | The job's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
job_result :: Lens' Job (Maybe ExecutionResult)

-- | A message about the job's result.
job_message :: Lens' Job (Maybe Text)

-- | The device (phone or tablet).
job_device :: Lens' Job (Maybe Device)

-- | The job's ARN.
job_arn :: Lens' Job (Maybe Text)

-- | This value is set to true if video capture is enabled. Otherwise, it
--   is set to false.
job_videoCapture :: Lens' Job (Maybe Bool)

-- | The endpoint for streaming device video.
job_videoEndpoint :: Lens' Job (Maybe Text)

-- | The job's name.
job_name :: Lens' Job (Maybe Text)

-- | The ARN of the instance.
job_instanceArn :: Lens' Job (Maybe Text)

-- | The job's stop time.
job_stopped :: Lens' Job (Maybe UTCTime)

-- | The job's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
job_type :: Lens' Job (Maybe TestType)

-- | When the job was created.
job_created :: Lens' Job (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the job.
job_deviceMinutes :: Lens' Job (Maybe DeviceMinutes)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Job.Job
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Job.Job
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.Job.Job
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Job.Job
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Job.Job
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Job.Job
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Job.Job


module Network.AWS.DeviceFarm.Types.TrialMinutes

-- | Represents information about free trial device minutes for an AWS
--   account.
--   
--   <i>See:</i> <a>newTrialMinutes</a> smart constructor.
data TrialMinutes
TrialMinutes' :: Maybe Double -> Maybe Double -> TrialMinutes

-- | The total number of free trial minutes that the account started with.
[$sel:total:TrialMinutes'] :: TrialMinutes -> Maybe Double

-- | The number of free trial minutes remaining in the account.
[$sel:remaining:TrialMinutes'] :: TrialMinutes -> Maybe Double

-- | Create a value of <a>TrialMinutes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TrialMinutes'</a>, <a>trialMinutes_total</a> - The total
--   number of free trial minutes that the account started with.
--   
--   <a>$sel:remaining:TrialMinutes'</a>, <a>trialMinutes_remaining</a> -
--   The number of free trial minutes remaining in the account.
newTrialMinutes :: TrialMinutes

-- | The total number of free trial minutes that the account started with.
trialMinutes_total :: Lens' TrialMinutes (Maybe Double)

-- | The number of free trial minutes remaining in the account.
trialMinutes_remaining :: Lens' TrialMinutes (Maybe Double)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.TrialMinutes.TrialMinutes
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.TrialMinutes.TrialMinutes
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.TrialMinutes.TrialMinutes
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.TrialMinutes.TrialMinutes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.TrialMinutes.TrialMinutes
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.TrialMinutes.TrialMinutes
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.TrialMinutes.TrialMinutes


module Network.AWS.DeviceFarm.Types.AccountSettings

-- | A container for account-level settings in AWS Device Farm.
--   
--   <i>See:</i> <a>newAccountSettings</a> smart constructor.
data AccountSettings
AccountSettings' :: Maybe Text -> Maybe (HashMap Text Int) -> Maybe TrialMinutes -> Maybe Bool -> Maybe Int -> Maybe (HashMap DevicePlatform Int) -> Maybe (HashMap DevicePlatform Int) -> Maybe Int -> AccountSettings

-- | The AWS account number specified in the <tt>AccountSettings</tt>
--   container.
[$sel:awsAccountNumber:AccountSettings'] :: AccountSettings -> Maybe Text

-- | The maximum number of device slots that the AWS account can purchase.
--   Each maximum is expressed as an <tt>offering-id:number</tt> pair,
--   where the <tt>offering-id</tt> represents one of the IDs returned by
--   the <tt>ListOfferings</tt> command.
[$sel:maxSlots:AccountSettings'] :: AccountSettings -> Maybe (HashMap Text Int)

-- | Information about an AWS account's usage of free trial device minutes.
[$sel:trialMinutes:AccountSettings'] :: AccountSettings -> Maybe TrialMinutes

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
[$sel:skipAppResign:AccountSettings'] :: AccountSettings -> Maybe Bool

-- | The maximum number of minutes a test run executes before it times out.
[$sel:maxJobTimeoutMinutes:AccountSettings'] :: AccountSettings -> Maybe Int

-- | Returns the unmetered devices you have purchased or want to purchase.
[$sel:unmeteredDevices:AccountSettings'] :: AccountSettings -> Maybe (HashMap DevicePlatform Int)

-- | Returns the unmetered remote access devices you have purchased or want
--   to purchase.
[$sel:unmeteredRemoteAccessDevices:AccountSettings'] :: AccountSettings -> Maybe (HashMap DevicePlatform Int)

-- | The default number of minutes (at the account level) a test run
--   executes before it times out. The default value is 150 minutes.
[$sel:defaultJobTimeoutMinutes:AccountSettings'] :: AccountSettings -> Maybe Int

-- | Create a value of <a>AccountSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsAccountNumber:AccountSettings'</a>,
--   <a>accountSettings_awsAccountNumber</a> - The AWS account number
--   specified in the <tt>AccountSettings</tt> container.
--   
--   <a>$sel:maxSlots:AccountSettings'</a>, <a>accountSettings_maxSlots</a>
--   - The maximum number of device slots that the AWS account can
--   purchase. Each maximum is expressed as an <tt>offering-id:number</tt>
--   pair, where the <tt>offering-id</tt> represents one of the IDs
--   returned by the <tt>ListOfferings</tt> command.
--   
--   <a>$sel:trialMinutes:AccountSettings'</a>,
--   <a>accountSettings_trialMinutes</a> - Information about an AWS
--   account's usage of free trial device minutes.
--   
--   <a>$sel:skipAppResign:AccountSettings'</a>,
--   <a>accountSettings_skipAppResign</a> - When set to <tt>true</tt>, for
--   private devices, Device Farm does not sign your app again. For public
--   devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:maxJobTimeoutMinutes:AccountSettings'</a>,
--   <a>accountSettings_maxJobTimeoutMinutes</a> - The maximum number of
--   minutes a test run executes before it times out.
--   
--   <a>$sel:unmeteredDevices:AccountSettings'</a>,
--   <a>accountSettings_unmeteredDevices</a> - Returns the unmetered
--   devices you have purchased or want to purchase.
--   
--   <a>$sel:unmeteredRemoteAccessDevices:AccountSettings'</a>,
--   <a>accountSettings_unmeteredRemoteAccessDevices</a> - Returns the
--   unmetered remote access devices you have purchased or want to
--   purchase.
--   
--   <a>$sel:defaultJobTimeoutMinutes:AccountSettings'</a>,
--   <a>accountSettings_defaultJobTimeoutMinutes</a> - The default number
--   of minutes (at the account level) a test run executes before it times
--   out. The default value is 150 minutes.
newAccountSettings :: AccountSettings

-- | The AWS account number specified in the <tt>AccountSettings</tt>
--   container.
accountSettings_awsAccountNumber :: Lens' AccountSettings (Maybe Text)

-- | The maximum number of device slots that the AWS account can purchase.
--   Each maximum is expressed as an <tt>offering-id:number</tt> pair,
--   where the <tt>offering-id</tt> represents one of the IDs returned by
--   the <tt>ListOfferings</tt> command.
accountSettings_maxSlots :: Lens' AccountSettings (Maybe (HashMap Text Int))

-- | Information about an AWS account's usage of free trial device minutes.
accountSettings_trialMinutes :: Lens' AccountSettings (Maybe TrialMinutes)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
accountSettings_skipAppResign :: Lens' AccountSettings (Maybe Bool)

-- | The maximum number of minutes a test run executes before it times out.
accountSettings_maxJobTimeoutMinutes :: Lens' AccountSettings (Maybe Int)

-- | Returns the unmetered devices you have purchased or want to purchase.
accountSettings_unmeteredDevices :: Lens' AccountSettings (Maybe (HashMap DevicePlatform Int))

-- | Returns the unmetered remote access devices you have purchased or want
--   to purchase.
accountSettings_unmeteredRemoteAccessDevices :: Lens' AccountSettings (Maybe (HashMap DevicePlatform Int))

-- | The default number of minutes (at the account level) a test run
--   executes before it times out. The default value is 150 minutes.
accountSettings_defaultJobTimeoutMinutes :: Lens' AccountSettings (Maybe Int)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.AccountSettings.AccountSettings
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.AccountSettings.AccountSettings
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.AccountSettings.AccountSettings
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.AccountSettings.AccountSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.AccountSettings.AccountSettings
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.AccountSettings.AccountSettings
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.AccountSettings.AccountSettings


module Network.AWS.DeviceFarm.Types.UniqueProblem

-- | A collection of one or more problems, grouped by their result.
--   
--   <i>See:</i> <a>newUniqueProblem</a> smart constructor.
data UniqueProblem
UniqueProblem' :: Maybe Text -> Maybe [Problem] -> UniqueProblem

-- | A message about the unique problems' result.
[$sel:message:UniqueProblem'] :: UniqueProblem -> Maybe Text

-- | Information about the problems.
[$sel:problems:UniqueProblem'] :: UniqueProblem -> Maybe [Problem]

-- | Create a value of <a>UniqueProblem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:UniqueProblem'</a>, <a>uniqueProblem_message</a> - A
--   message about the unique problems' result.
--   
--   <a>$sel:problems:UniqueProblem'</a>, <a>uniqueProblem_problems</a> -
--   Information about the problems.
newUniqueProblem :: UniqueProblem

-- | A message about the unique problems' result.
uniqueProblem_message :: Lens' UniqueProblem (Maybe Text)

-- | Information about the problems.
uniqueProblem_problems :: Lens' UniqueProblem (Maybe [Problem])
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.UniqueProblem.UniqueProblem
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.UniqueProblem.UniqueProblem
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.UniqueProblem.UniqueProblem
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.UniqueProblem.UniqueProblem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.UniqueProblem.UniqueProblem
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.UniqueProblem.UniqueProblem
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.UniqueProblem.UniqueProblem


module Network.AWS.DeviceFarm.Types.UploadCategory
newtype UploadCategory
UploadCategory' :: Text -> UploadCategory
[fromUploadCategory] :: UploadCategory -> Text
pattern UploadCategory_CURATED :: UploadCategory
pattern UploadCategory_PRIVATE :: UploadCategory
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.UploadCategory.UploadCategory


module Network.AWS.DeviceFarm.Types.UploadStatus
newtype UploadStatus
UploadStatus' :: Text -> UploadStatus
[fromUploadStatus] :: UploadStatus -> Text
pattern UploadStatus_FAILED :: UploadStatus
pattern UploadStatus_INITIALIZED :: UploadStatus
pattern UploadStatus_PROCESSING :: UploadStatus
pattern UploadStatus_SUCCEEDED :: UploadStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.UploadStatus.UploadStatus


module Network.AWS.DeviceFarm.Types.UploadType
newtype UploadType
UploadType' :: Text -> UploadType
[fromUploadType] :: UploadType -> Text
pattern UploadType_ANDROID_APP :: UploadType
pattern UploadType_APPIUM_JAVA_JUNIT_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_JAVA_JUNIT_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_JAVA_TESTNG_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_JAVA_TESTNG_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_NODE_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_NODE_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_PYTHON_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_PYTHON_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_RUBY_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_RUBY_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_JUNIT_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_TESTNG_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_NODE_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_NODE_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_PYTHON_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_PYTHON_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_RUBY_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_RUBY_TEST_SPEC :: UploadType
pattern UploadType_CALABASH_TEST_PACKAGE :: UploadType
pattern UploadType_EXTERNAL_DATA :: UploadType
pattern UploadType_INSTRUMENTATION_TEST_PACKAGE :: UploadType
pattern UploadType_INSTRUMENTATION_TEST_SPEC :: UploadType
pattern UploadType_IOS_APP :: UploadType
pattern UploadType_UIAUTOMATION_TEST_PACKAGE :: UploadType
pattern UploadType_UIAUTOMATOR_TEST_PACKAGE :: UploadType
pattern UploadType_WEB_APP :: UploadType
pattern UploadType_XCTEST_TEST_PACKAGE :: UploadType
pattern UploadType_XCTEST_UI_TEST_PACKAGE :: UploadType
pattern UploadType_XCTEST_UI_TEST_SPEC :: UploadType
instance Network.AWS.Data.XML.ToXML Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Network.AWS.Data.XML.FromXML Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Network.AWS.Data.Log.ToLog Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Network.AWS.Data.Text.ToText Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Network.AWS.Data.Text.FromText Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance GHC.Classes.Ord Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.UploadType.UploadType
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.UploadType.UploadType


module Network.AWS.DeviceFarm.Types.Upload

-- | An app or a set of one or more tests to upload or that have been
--   uploaded.
--   
--   <i>See:</i> <a>newUpload</a> smart constructor.
data Upload
Upload' :: Maybe UploadStatus -> Maybe Text -> Maybe Text -> Maybe UploadCategory -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe UploadType -> Maybe POSIX -> Upload

-- | The upload's status.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>FAILED</li>
--   <li>INITIALIZED</li>
--   <li>PROCESSING</li>
--   <li>SUCCEEDED</li>
--   </ul>
[$sel:status:Upload'] :: Upload -> Maybe UploadStatus

-- | The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
[$sel:contentType:Upload'] :: Upload -> Maybe Text

-- | A message about the upload's result.
[$sel:message:Upload'] :: Upload -> Maybe Text

-- | The upload's category. Allowed values include:
--   
--   <ul>
--   <li>CURATED: An upload managed by AWS Device Farm.</li>
--   <li>PRIVATE: An upload managed by the AWS Device Farm customer.</li>
--   </ul>
[$sel:category:Upload'] :: Upload -> Maybe UploadCategory

-- | The upload's ARN.
[$sel:arn:Upload'] :: Upload -> Maybe Text

-- | The upload's metadata. For example, for Android, this contains
--   information that is parsed from the manifest and is displayed in the
--   AWS Device Farm console after the associated app is uploaded.
[$sel:metadata:Upload'] :: Upload -> Maybe Text

-- | The upload's file name.
[$sel:name:Upload'] :: Upload -> Maybe Text

-- | The presigned Amazon S3 URL that was used to store a file using a PUT
--   request.
[$sel:url:Upload'] :: Upload -> Maybe (Sensitive Text)

-- | The upload's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
[$sel:type':Upload'] :: Upload -> Maybe UploadType

-- | When the upload was created.
[$sel:created:Upload'] :: Upload -> Maybe POSIX

-- | Create a value of <a>Upload</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Upload'</a>, <a>upload_status</a> - The upload's
--   status.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>FAILED</li>
--   <li>INITIALIZED</li>
--   <li>PROCESSING</li>
--   <li>SUCCEEDED</li>
--   </ul>
--   
--   <a>$sel:contentType:Upload'</a>, <a>upload_contentType</a> - The
--   upload's content type (for example,
--   <tt>application/octet-stream</tt>).
--   
--   <a>$sel:message:Upload'</a>, <a>upload_message</a> - A message about
--   the upload's result.
--   
--   <a>$sel:category:Upload'</a>, <a>upload_category</a> - The upload's
--   category. Allowed values include:
--   
--   <ul>
--   <li>CURATED: An upload managed by AWS Device Farm.</li>
--   <li>PRIVATE: An upload managed by the AWS Device Farm customer.</li>
--   </ul>
--   
--   <a>$sel:arn:Upload'</a>, <a>upload_arn</a> - The upload's ARN.
--   
--   <a>$sel:metadata:Upload'</a>, <a>upload_metadata</a> - The upload's
--   metadata. For example, for Android, this contains information that is
--   parsed from the manifest and is displayed in the AWS Device Farm
--   console after the associated app is uploaded.
--   
--   <a>$sel:name:Upload'</a>, <a>upload_name</a> - The upload's file name.
--   
--   <a>$sel:url:Upload'</a>, <a>upload_url</a> - The presigned Amazon S3
--   URL that was used to store a file using a PUT request.
--   
--   <a>$sel:type':Upload'</a>, <a>upload_type</a> - The upload's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   <a>$sel:created:Upload'</a>, <a>upload_created</a> - When the upload
--   was created.
newUpload :: Upload

-- | The upload's status.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>FAILED</li>
--   <li>INITIALIZED</li>
--   <li>PROCESSING</li>
--   <li>SUCCEEDED</li>
--   </ul>
upload_status :: Lens' Upload (Maybe UploadStatus)

-- | The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
upload_contentType :: Lens' Upload (Maybe Text)

-- | A message about the upload's result.
upload_message :: Lens' Upload (Maybe Text)

-- | The upload's category. Allowed values include:
--   
--   <ul>
--   <li>CURATED: An upload managed by AWS Device Farm.</li>
--   <li>PRIVATE: An upload managed by the AWS Device Farm customer.</li>
--   </ul>
upload_category :: Lens' Upload (Maybe UploadCategory)

-- | The upload's ARN.
upload_arn :: Lens' Upload (Maybe Text)

-- | The upload's metadata. For example, for Android, this contains
--   information that is parsed from the manifest and is displayed in the
--   AWS Device Farm console after the associated app is uploaded.
upload_metadata :: Lens' Upload (Maybe Text)

-- | The upload's file name.
upload_name :: Lens' Upload (Maybe Text)

-- | The presigned Amazon S3 URL that was used to store a file using a PUT
--   request.
upload_url :: Lens' Upload (Maybe Text)

-- | The upload's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
upload_type :: Lens' Upload (Maybe UploadType)

-- | When the upload was created.
upload_created :: Lens' Upload (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.Upload.Upload
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.Upload.Upload
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.Upload.Upload
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.Upload.Upload
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.Upload.Upload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.Upload.Upload


module Network.AWS.DeviceFarm.Types.VPCEConfiguration

-- | Represents an Amazon Virtual Private Cloud (VPC) endpoint
--   configuration.
--   
--   <i>See:</i> <a>newVPCEConfiguration</a> smart constructor.
data VPCEConfiguration
VPCEConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VPCEConfiguration

-- | The friendly name you give to your VPC endpoint configuration to
--   manage your configurations more easily.
[$sel:vpceConfigurationName:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | An optional description that provides details about your VPC endpoint
--   configuration.
[$sel:vpceConfigurationDescription:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration.
[$sel:arn:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | The DNS name that maps to the private IP address of the service you
--   want to access.
[$sel:serviceDnsName:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
[$sel:vpceServiceName:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | Create a value of <a>VPCEConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfigurationName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceConfigurationName</a> - The friendly name you
--   give to your VPC endpoint configuration to manage your configurations
--   more easily.
--   
--   <a>$sel:vpceConfigurationDescription:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceConfigurationDescription</a> - An optional
--   description that provides details about your VPC endpoint
--   configuration.
--   
--   <a>$sel:arn:VPCEConfiguration'</a>, <a>vPCEConfiguration_arn</a> - The
--   Amazon Resource Name (ARN) of the VPC endpoint configuration.
--   
--   <a>$sel:serviceDnsName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_serviceDnsName</a> - The DNS name that maps to
--   the private IP address of the service you want to access.
--   
--   <a>$sel:vpceServiceName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceServiceName</a> - The name of the VPC
--   endpoint service running in your AWS account that you want Device Farm
--   to test.
newVPCEConfiguration :: VPCEConfiguration

-- | The friendly name you give to your VPC endpoint configuration to
--   manage your configurations more easily.
vPCEConfiguration_vpceConfigurationName :: Lens' VPCEConfiguration (Maybe Text)

-- | An optional description that provides details about your VPC endpoint
--   configuration.
vPCEConfiguration_vpceConfigurationDescription :: Lens' VPCEConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration.
vPCEConfiguration_arn :: Lens' VPCEConfiguration (Maybe Text)

-- | The DNS name that maps to the private IP address of the service you
--   want to access.
vPCEConfiguration_serviceDnsName :: Lens' VPCEConfiguration (Maybe Text)

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
vPCEConfiguration_vpceServiceName :: Lens' VPCEConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DeviceFarm.Types.VPCEConfiguration.VPCEConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.Types.VPCEConfiguration.VPCEConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.Types.VPCEConfiguration.VPCEConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.Types.VPCEConfiguration.VPCEConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DeviceFarm.Types.VPCEConfiguration.VPCEConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.Types.VPCEConfiguration.VPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.Types.VPCEConfiguration.VPCEConfiguration


module Network.AWS.DeviceFarm.Types

-- | API version <tt>2015-06-23</tt> of the Amazon Device Farm SDK
--   configuration.
defaultService :: Service

-- | Exception gets thrown when a user is not eligible to perform the
--   specified transaction.
_NotEligibleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid argument was specified.
_ArgumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified entity was not found.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The list of tags on the repository is over the limit. The maximum
--   number of tags that can be applied to a repository is 50.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was an error with the update request, or you do not have
--   sufficient permissions to update this VPC endpoint configuration.
_InvalidOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a problem with the service account.
_ServiceAccountException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation was not successful. Try again.
_TagOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An entity with the same name already exists.
_IdempotencyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request doesn't comply with the AWS Identity and Access Management
--   (IAM) tag policy. Correct your request and then retry it.
_TagPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal exception was raised in the service. Contact
--   <a>aws-devicefarm-support@amazon.com</a> if you see this error.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested object could not be deleted.
_CannotDeleteException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A limit was exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ArtifactCategory
ArtifactCategory' :: Text -> ArtifactCategory
[fromArtifactCategory] :: ArtifactCategory -> Text
pattern ArtifactCategory_FILE :: ArtifactCategory
pattern ArtifactCategory_LOG :: ArtifactCategory
pattern ArtifactCategory_SCREENSHOT :: ArtifactCategory
newtype ArtifactType
ArtifactType' :: Text -> ArtifactType
[fromArtifactType] :: ArtifactType -> Text
pattern ArtifactType_APPIUM_JAVA_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_JAVA_XML_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_PYTHON_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_PYTHON_XML_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_SERVER_OUTPUT :: ArtifactType
pattern ArtifactType_APPLICATION_CRASH_REPORT :: ArtifactType
pattern ArtifactType_AUTOMATION_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_JAVA_XML_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_JSON_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_PRETTY_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_STANDARD_OUTPUT :: ArtifactType
pattern ArtifactType_CUSTOMER_ARTIFACT :: ArtifactType
pattern ArtifactType_CUSTOMER_ARTIFACT_LOG :: ArtifactType
pattern ArtifactType_DEVICE_LOG :: ArtifactType
pattern ArtifactType_EXERCISER_MONKEY_OUTPUT :: ArtifactType
pattern ArtifactType_EXPLORER_EVENT_LOG :: ArtifactType
pattern ArtifactType_EXPLORER_SUMMARY_LOG :: ArtifactType
pattern ArtifactType_INSTRUMENTATION_OUTPUT :: ArtifactType
pattern ArtifactType_MESSAGE_LOG :: ArtifactType
pattern ArtifactType_RESULT_LOG :: ArtifactType
pattern ArtifactType_SCREENSHOT :: ArtifactType
pattern ArtifactType_SERVICE_LOG :: ArtifactType
pattern ArtifactType_TESTSPEC_OUTPUT :: ArtifactType
pattern ArtifactType_UNKNOWN :: ArtifactType
pattern ArtifactType_VIDEO :: ArtifactType
pattern ArtifactType_VIDEO_LOG :: ArtifactType
pattern ArtifactType_WEBKIT_LOG :: ArtifactType
pattern ArtifactType_XCTEST_LOG :: ArtifactType
newtype BillingMethod
BillingMethod' :: Text -> BillingMethod
[fromBillingMethod] :: BillingMethod -> Text
pattern BillingMethod_METERED :: BillingMethod
pattern BillingMethod_UNMETERED :: BillingMethod
newtype CurrencyCode
CurrencyCode' :: Text -> CurrencyCode
[fromCurrencyCode] :: CurrencyCode -> Text
pattern CurrencyCode_USD :: CurrencyCode
newtype DeviceAttribute
DeviceAttribute' :: Text -> DeviceAttribute
[fromDeviceAttribute] :: DeviceAttribute -> Text
pattern DeviceAttribute_APPIUM_VERSION :: DeviceAttribute
pattern DeviceAttribute_ARN :: DeviceAttribute
pattern DeviceAttribute_AVAILABILITY :: DeviceAttribute
pattern DeviceAttribute_FLEET_TYPE :: DeviceAttribute
pattern DeviceAttribute_FORM_FACTOR :: DeviceAttribute
pattern DeviceAttribute_INSTANCE_ARN :: DeviceAttribute
pattern DeviceAttribute_INSTANCE_LABELS :: DeviceAttribute
pattern DeviceAttribute_MANUFACTURER :: DeviceAttribute
pattern DeviceAttribute_MODEL :: DeviceAttribute
pattern DeviceAttribute_OS_VERSION :: DeviceAttribute
pattern DeviceAttribute_PLATFORM :: DeviceAttribute
pattern DeviceAttribute_REMOTE_ACCESS_ENABLED :: DeviceAttribute
pattern DeviceAttribute_REMOTE_DEBUG_ENABLED :: DeviceAttribute
newtype DeviceAvailability
DeviceAvailability' :: Text -> DeviceAvailability
[fromDeviceAvailability] :: DeviceAvailability -> Text
pattern DeviceAvailability_AVAILABLE :: DeviceAvailability
pattern DeviceAvailability_BUSY :: DeviceAvailability
pattern DeviceAvailability_HIGHLY_AVAILABLE :: DeviceAvailability
pattern DeviceAvailability_TEMPORARY_NOT_AVAILABLE :: DeviceAvailability
newtype DeviceFilterAttribute
DeviceFilterAttribute' :: Text -> DeviceFilterAttribute
[fromDeviceFilterAttribute] :: DeviceFilterAttribute -> Text
pattern DeviceFilterAttribute_ARN :: DeviceFilterAttribute
pattern DeviceFilterAttribute_AVAILABILITY :: DeviceFilterAttribute
pattern DeviceFilterAttribute_FLEET_TYPE :: DeviceFilterAttribute
pattern DeviceFilterAttribute_FORM_FACTOR :: DeviceFilterAttribute
pattern DeviceFilterAttribute_INSTANCE_ARN :: DeviceFilterAttribute
pattern DeviceFilterAttribute_INSTANCE_LABELS :: DeviceFilterAttribute
pattern DeviceFilterAttribute_MANUFACTURER :: DeviceFilterAttribute
pattern DeviceFilterAttribute_MODEL :: DeviceFilterAttribute
pattern DeviceFilterAttribute_OS_VERSION :: DeviceFilterAttribute
pattern DeviceFilterAttribute_PLATFORM :: DeviceFilterAttribute
pattern DeviceFilterAttribute_REMOTE_ACCESS_ENABLED :: DeviceFilterAttribute
pattern DeviceFilterAttribute_REMOTE_DEBUG_ENABLED :: DeviceFilterAttribute
newtype DeviceFormFactor
DeviceFormFactor' :: Text -> DeviceFormFactor
[fromDeviceFormFactor] :: DeviceFormFactor -> Text
pattern DeviceFormFactor_PHONE :: DeviceFormFactor
pattern DeviceFormFactor_TABLET :: DeviceFormFactor
newtype DevicePlatform
DevicePlatform' :: Text -> DevicePlatform
[fromDevicePlatform] :: DevicePlatform -> Text
pattern DevicePlatform_ANDROID :: DevicePlatform
pattern DevicePlatform_IOS :: DevicePlatform
newtype DevicePoolType
DevicePoolType' :: Text -> DevicePoolType
[fromDevicePoolType] :: DevicePoolType -> Text
pattern DevicePoolType_CURATED :: DevicePoolType
pattern DevicePoolType_PRIVATE :: DevicePoolType
newtype ExecutionResult
ExecutionResult' :: Text -> ExecutionResult
[fromExecutionResult] :: ExecutionResult -> Text
pattern ExecutionResult_ERRORED :: ExecutionResult
pattern ExecutionResult_FAILED :: ExecutionResult
pattern ExecutionResult_PASSED :: ExecutionResult
pattern ExecutionResult_PENDING :: ExecutionResult
pattern ExecutionResult_SKIPPED :: ExecutionResult
pattern ExecutionResult_STOPPED :: ExecutionResult
pattern ExecutionResult_WARNED :: ExecutionResult
newtype ExecutionResultCode
ExecutionResultCode' :: Text -> ExecutionResultCode
[fromExecutionResultCode] :: ExecutionResultCode -> Text
pattern ExecutionResultCode_PARSING_FAILED :: ExecutionResultCode
pattern ExecutionResultCode_VPC_ENDPOINT_SETUP_FAILED :: ExecutionResultCode
newtype ExecutionStatus
ExecutionStatus' :: Text -> ExecutionStatus
[fromExecutionStatus] :: ExecutionStatus -> Text
pattern ExecutionStatus_COMPLETED :: ExecutionStatus
pattern ExecutionStatus_PENDING :: ExecutionStatus
pattern ExecutionStatus_PENDING_CONCURRENCY :: ExecutionStatus
pattern ExecutionStatus_PENDING_DEVICE :: ExecutionStatus
pattern ExecutionStatus_PREPARING :: ExecutionStatus
pattern ExecutionStatus_PROCESSING :: ExecutionStatus
pattern ExecutionStatus_RUNNING :: ExecutionStatus
pattern ExecutionStatus_SCHEDULING :: ExecutionStatus
pattern ExecutionStatus_STOPPING :: ExecutionStatus
newtype InstanceStatus
InstanceStatus' :: Text -> InstanceStatus
[fromInstanceStatus] :: InstanceStatus -> Text
pattern InstanceStatus_AVAILABLE :: InstanceStatus
pattern InstanceStatus_IN_USE :: InstanceStatus
pattern InstanceStatus_NOT_AVAILABLE :: InstanceStatus
pattern InstanceStatus_PREPARING :: InstanceStatus
newtype InteractionMode
InteractionMode' :: Text -> InteractionMode
[fromInteractionMode] :: InteractionMode -> Text
pattern InteractionMode_INTERACTIVE :: InteractionMode
pattern InteractionMode_NO_VIDEO :: InteractionMode
pattern InteractionMode_VIDEO_ONLY :: InteractionMode
newtype NetworkProfileType
NetworkProfileType' :: Text -> NetworkProfileType
[fromNetworkProfileType] :: NetworkProfileType -> Text
pattern NetworkProfileType_CURATED :: NetworkProfileType
pattern NetworkProfileType_PRIVATE :: NetworkProfileType
newtype OfferingTransactionType
OfferingTransactionType' :: Text -> OfferingTransactionType
[fromOfferingTransactionType] :: OfferingTransactionType -> Text
pattern OfferingTransactionType_PURCHASE :: OfferingTransactionType
pattern OfferingTransactionType_RENEW :: OfferingTransactionType
pattern OfferingTransactionType_SYSTEM :: OfferingTransactionType
newtype OfferingType
OfferingType' :: Text -> OfferingType
[fromOfferingType] :: OfferingType -> Text
pattern OfferingType_RECURRING :: OfferingType
newtype RecurringChargeFrequency
RecurringChargeFrequency' :: Text -> RecurringChargeFrequency
[fromRecurringChargeFrequency] :: RecurringChargeFrequency -> Text
pattern RecurringChargeFrequency_MONTHLY :: RecurringChargeFrequency
newtype RuleOperator
RuleOperator' :: Text -> RuleOperator
[fromRuleOperator] :: RuleOperator -> Text
pattern RuleOperator_CONTAINS :: RuleOperator
pattern RuleOperator_EQUALS :: RuleOperator
pattern RuleOperator_GREATER_THAN :: RuleOperator
pattern RuleOperator_GREATER_THAN_OR_EQUALS :: RuleOperator
pattern RuleOperator_IN :: RuleOperator
pattern RuleOperator_LESS_THAN :: RuleOperator
pattern RuleOperator_LESS_THAN_OR_EQUALS :: RuleOperator
pattern RuleOperator_NOT_IN :: RuleOperator
newtype SampleType
SampleType' :: Text -> SampleType
[fromSampleType] :: SampleType -> Text
pattern SampleType_CPU :: SampleType
pattern SampleType_MEMORY :: SampleType
pattern SampleType_NATIVE_AVG_DRAWTIME :: SampleType
pattern SampleType_NATIVE_FPS :: SampleType
pattern SampleType_NATIVE_FRAMES :: SampleType
pattern SampleType_NATIVE_MAX_DRAWTIME :: SampleType
pattern SampleType_NATIVE_MIN_DRAWTIME :: SampleType
pattern SampleType_OPENGL_AVG_DRAWTIME :: SampleType
pattern SampleType_OPENGL_FPS :: SampleType
pattern SampleType_OPENGL_FRAMES :: SampleType
pattern SampleType_OPENGL_MAX_DRAWTIME :: SampleType
pattern SampleType_OPENGL_MIN_DRAWTIME :: SampleType
pattern SampleType_RX :: SampleType
pattern SampleType_RX_RATE :: SampleType
pattern SampleType_THREADS :: SampleType
pattern SampleType_TX :: SampleType
pattern SampleType_TX_RATE :: SampleType
newtype TestGridSessionArtifactCategory
TestGridSessionArtifactCategory' :: Text -> TestGridSessionArtifactCategory
[fromTestGridSessionArtifactCategory] :: TestGridSessionArtifactCategory -> Text
pattern TestGridSessionArtifactCategory_LOG :: TestGridSessionArtifactCategory
pattern TestGridSessionArtifactCategory_VIDEO :: TestGridSessionArtifactCategory
newtype TestGridSessionArtifactType
TestGridSessionArtifactType' :: Text -> TestGridSessionArtifactType
[fromTestGridSessionArtifactType] :: TestGridSessionArtifactType -> Text
pattern TestGridSessionArtifactType_SELENIUM_LOG :: TestGridSessionArtifactType
pattern TestGridSessionArtifactType_UNKNOWN :: TestGridSessionArtifactType
pattern TestGridSessionArtifactType_VIDEO :: TestGridSessionArtifactType
newtype TestGridSessionStatus
TestGridSessionStatus' :: Text -> TestGridSessionStatus
[fromTestGridSessionStatus] :: TestGridSessionStatus -> Text
pattern TestGridSessionStatus_ACTIVE :: TestGridSessionStatus
pattern TestGridSessionStatus_CLOSED :: TestGridSessionStatus
pattern TestGridSessionStatus_ERRORED :: TestGridSessionStatus
newtype TestType
TestType' :: Text -> TestType
[fromTestType] :: TestType -> Text
pattern TestType_APPIUM_JAVA_JUNIT :: TestType
pattern TestType_APPIUM_JAVA_TESTNG :: TestType
pattern TestType_APPIUM_NODE :: TestType
pattern TestType_APPIUM_PYTHON :: TestType
pattern TestType_APPIUM_RUBY :: TestType
pattern TestType_APPIUM_WEB_JAVA_JUNIT :: TestType
pattern TestType_APPIUM_WEB_JAVA_TESTNG :: TestType
pattern TestType_APPIUM_WEB_NODE :: TestType
pattern TestType_APPIUM_WEB_PYTHON :: TestType
pattern TestType_APPIUM_WEB_RUBY :: TestType
pattern TestType_BUILTIN_EXPLORER :: TestType
pattern TestType_BUILTIN_FUZZ :: TestType
pattern TestType_CALABASH :: TestType
pattern TestType_INSTRUMENTATION :: TestType
pattern TestType_REMOTE_ACCESS_RECORD :: TestType
pattern TestType_REMOTE_ACCESS_REPLAY :: TestType
pattern TestType_UIAUTOMATION :: TestType
pattern TestType_UIAUTOMATOR :: TestType
pattern TestType_WEB_PERFORMANCE_PROFILE :: TestType
pattern TestType_XCTEST :: TestType
pattern TestType_XCTEST_UI :: TestType
newtype UploadCategory
UploadCategory' :: Text -> UploadCategory
[fromUploadCategory] :: UploadCategory -> Text
pattern UploadCategory_CURATED :: UploadCategory
pattern UploadCategory_PRIVATE :: UploadCategory
newtype UploadStatus
UploadStatus' :: Text -> UploadStatus
[fromUploadStatus] :: UploadStatus -> Text
pattern UploadStatus_FAILED :: UploadStatus
pattern UploadStatus_INITIALIZED :: UploadStatus
pattern UploadStatus_PROCESSING :: UploadStatus
pattern UploadStatus_SUCCEEDED :: UploadStatus
newtype UploadType
UploadType' :: Text -> UploadType
[fromUploadType] :: UploadType -> Text
pattern UploadType_ANDROID_APP :: UploadType
pattern UploadType_APPIUM_JAVA_JUNIT_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_JAVA_JUNIT_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_JAVA_TESTNG_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_JAVA_TESTNG_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_NODE_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_NODE_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_PYTHON_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_PYTHON_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_RUBY_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_RUBY_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_JUNIT_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_TESTNG_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_NODE_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_NODE_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_PYTHON_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_PYTHON_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_RUBY_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_RUBY_TEST_SPEC :: UploadType
pattern UploadType_CALABASH_TEST_PACKAGE :: UploadType
pattern UploadType_EXTERNAL_DATA :: UploadType
pattern UploadType_INSTRUMENTATION_TEST_PACKAGE :: UploadType
pattern UploadType_INSTRUMENTATION_TEST_SPEC :: UploadType
pattern UploadType_IOS_APP :: UploadType
pattern UploadType_UIAUTOMATION_TEST_PACKAGE :: UploadType
pattern UploadType_UIAUTOMATOR_TEST_PACKAGE :: UploadType
pattern UploadType_WEB_APP :: UploadType
pattern UploadType_XCTEST_TEST_PACKAGE :: UploadType
pattern UploadType_XCTEST_UI_TEST_PACKAGE :: UploadType
pattern UploadType_XCTEST_UI_TEST_SPEC :: UploadType

-- | A container for account-level settings in AWS Device Farm.
--   
--   <i>See:</i> <a>newAccountSettings</a> smart constructor.
data AccountSettings
AccountSettings' :: Maybe Text -> Maybe (HashMap Text Int) -> Maybe TrialMinutes -> Maybe Bool -> Maybe Int -> Maybe (HashMap DevicePlatform Int) -> Maybe (HashMap DevicePlatform Int) -> Maybe Int -> AccountSettings

-- | The AWS account number specified in the <tt>AccountSettings</tt>
--   container.
[$sel:awsAccountNumber:AccountSettings'] :: AccountSettings -> Maybe Text

-- | The maximum number of device slots that the AWS account can purchase.
--   Each maximum is expressed as an <tt>offering-id:number</tt> pair,
--   where the <tt>offering-id</tt> represents one of the IDs returned by
--   the <tt>ListOfferings</tt> command.
[$sel:maxSlots:AccountSettings'] :: AccountSettings -> Maybe (HashMap Text Int)

-- | Information about an AWS account's usage of free trial device minutes.
[$sel:trialMinutes:AccountSettings'] :: AccountSettings -> Maybe TrialMinutes

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
[$sel:skipAppResign:AccountSettings'] :: AccountSettings -> Maybe Bool

-- | The maximum number of minutes a test run executes before it times out.
[$sel:maxJobTimeoutMinutes:AccountSettings'] :: AccountSettings -> Maybe Int

-- | Returns the unmetered devices you have purchased or want to purchase.
[$sel:unmeteredDevices:AccountSettings'] :: AccountSettings -> Maybe (HashMap DevicePlatform Int)

-- | Returns the unmetered remote access devices you have purchased or want
--   to purchase.
[$sel:unmeteredRemoteAccessDevices:AccountSettings'] :: AccountSettings -> Maybe (HashMap DevicePlatform Int)

-- | The default number of minutes (at the account level) a test run
--   executes before it times out. The default value is 150 minutes.
[$sel:defaultJobTimeoutMinutes:AccountSettings'] :: AccountSettings -> Maybe Int

-- | Create a value of <a>AccountSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsAccountNumber:AccountSettings'</a>,
--   <a>accountSettings_awsAccountNumber</a> - The AWS account number
--   specified in the <tt>AccountSettings</tt> container.
--   
--   <a>$sel:maxSlots:AccountSettings'</a>, <a>accountSettings_maxSlots</a>
--   - The maximum number of device slots that the AWS account can
--   purchase. Each maximum is expressed as an <tt>offering-id:number</tt>
--   pair, where the <tt>offering-id</tt> represents one of the IDs
--   returned by the <tt>ListOfferings</tt> command.
--   
--   <a>$sel:trialMinutes:AccountSettings'</a>,
--   <a>accountSettings_trialMinutes</a> - Information about an AWS
--   account's usage of free trial device minutes.
--   
--   <a>$sel:skipAppResign:AccountSettings'</a>,
--   <a>accountSettings_skipAppResign</a> - When set to <tt>true</tt>, for
--   private devices, Device Farm does not sign your app again. For public
--   devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:maxJobTimeoutMinutes:AccountSettings'</a>,
--   <a>accountSettings_maxJobTimeoutMinutes</a> - The maximum number of
--   minutes a test run executes before it times out.
--   
--   <a>$sel:unmeteredDevices:AccountSettings'</a>,
--   <a>accountSettings_unmeteredDevices</a> - Returns the unmetered
--   devices you have purchased or want to purchase.
--   
--   <a>$sel:unmeteredRemoteAccessDevices:AccountSettings'</a>,
--   <a>accountSettings_unmeteredRemoteAccessDevices</a> - Returns the
--   unmetered remote access devices you have purchased or want to
--   purchase.
--   
--   <a>$sel:defaultJobTimeoutMinutes:AccountSettings'</a>,
--   <a>accountSettings_defaultJobTimeoutMinutes</a> - The default number
--   of minutes (at the account level) a test run executes before it times
--   out. The default value is 150 minutes.
newAccountSettings :: AccountSettings

-- | The AWS account number specified in the <tt>AccountSettings</tt>
--   container.
accountSettings_awsAccountNumber :: Lens' AccountSettings (Maybe Text)

-- | The maximum number of device slots that the AWS account can purchase.
--   Each maximum is expressed as an <tt>offering-id:number</tt> pair,
--   where the <tt>offering-id</tt> represents one of the IDs returned by
--   the <tt>ListOfferings</tt> command.
accountSettings_maxSlots :: Lens' AccountSettings (Maybe (HashMap Text Int))

-- | Information about an AWS account's usage of free trial device minutes.
accountSettings_trialMinutes :: Lens' AccountSettings (Maybe TrialMinutes)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
accountSettings_skipAppResign :: Lens' AccountSettings (Maybe Bool)

-- | The maximum number of minutes a test run executes before it times out.
accountSettings_maxJobTimeoutMinutes :: Lens' AccountSettings (Maybe Int)

-- | Returns the unmetered devices you have purchased or want to purchase.
accountSettings_unmeteredDevices :: Lens' AccountSettings (Maybe (HashMap DevicePlatform Int))

-- | Returns the unmetered remote access devices you have purchased or want
--   to purchase.
accountSettings_unmeteredRemoteAccessDevices :: Lens' AccountSettings (Maybe (HashMap DevicePlatform Int))

-- | The default number of minutes (at the account level) a test run
--   executes before it times out. The default value is 150 minutes.
accountSettings_defaultJobTimeoutMinutes :: Lens' AccountSettings (Maybe Int)

-- | Represents the output of a test. Examples of artifacts include logs
--   and screenshots.
--   
--   <i>See:</i> <a>newArtifact</a> smart constructor.
data Artifact
Artifact' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ArtifactType -> Artifact

-- | The artifact's ARN.
[$sel:arn:Artifact'] :: Artifact -> Maybe Text

-- | The artifact's name.
[$sel:name:Artifact'] :: Artifact -> Maybe Text

-- | The artifact's file extension.
[$sel:extension:Artifact'] :: Artifact -> Maybe Text

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the artifact's file.
[$sel:url:Artifact'] :: Artifact -> Maybe Text

-- | The artifact's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>UNKNOWN</li>
--   <li>SCREENSHOT</li>
--   <li>DEVICE_LOG</li>
--   <li>MESSAGE_LOG</li>
--   <li>VIDEO_LOG</li>
--   <li>RESULT_LOG</li>
--   <li>SERVICE_LOG</li>
--   <li>WEBKIT_LOG</li>
--   <li>INSTRUMENTATION_OUTPUT</li>
--   <li>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an
--   Android fuzz test.</li>
--   <li>CALABASH_JSON_OUTPUT</li>
--   <li>CALABASH_PRETTY_OUTPUT</li>
--   <li>CALABASH_STANDARD_OUTPUT</li>
--   <li>CALABASH_JAVA_XML_OUTPUT</li>
--   <li>AUTOMATION_OUTPUT</li>
--   <li>APPIUM_SERVER_OUTPUT</li>
--   <li>APPIUM_JAVA_OUTPUT</li>
--   <li>APPIUM_JAVA_XML_OUTPUT</li>
--   <li>APPIUM_PYTHON_OUTPUT</li>
--   <li>APPIUM_PYTHON_XML_OUTPUT</li>
--   <li>EXPLORER_EVENT_LOG</li>
--   <li>EXPLORER_SUMMARY_LOG</li>
--   <li>APPLICATION_CRASH_REPORT</li>
--   <li>XCTEST_LOG</li>
--   <li>VIDEO</li>
--   <li>CUSTOMER_ARTIFACT</li>
--   <li>CUSTOMER_ARTIFACT_LOG</li>
--   <li>TESTSPEC_OUTPUT</li>
--   </ul>
[$sel:type':Artifact'] :: Artifact -> Maybe ArtifactType

-- | Create a value of <a>Artifact</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Artifact'</a>, <a>artifact_arn</a> - The artifact's ARN.
--   
--   <a>$sel:name:Artifact'</a>, <a>artifact_name</a> - The artifact's
--   name.
--   
--   <a>$sel:extension:Artifact'</a>, <a>artifact_extension</a> - The
--   artifact's file extension.
--   
--   <a>$sel:url:Artifact'</a>, <a>artifact_url</a> - The presigned Amazon
--   S3 URL that can be used with a GET request to download the artifact's
--   file.
--   
--   <a>$sel:type':Artifact'</a>, <a>artifact_type</a> - The artifact's
--   type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>UNKNOWN</li>
--   <li>SCREENSHOT</li>
--   <li>DEVICE_LOG</li>
--   <li>MESSAGE_LOG</li>
--   <li>VIDEO_LOG</li>
--   <li>RESULT_LOG</li>
--   <li>SERVICE_LOG</li>
--   <li>WEBKIT_LOG</li>
--   <li>INSTRUMENTATION_OUTPUT</li>
--   <li>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an
--   Android fuzz test.</li>
--   <li>CALABASH_JSON_OUTPUT</li>
--   <li>CALABASH_PRETTY_OUTPUT</li>
--   <li>CALABASH_STANDARD_OUTPUT</li>
--   <li>CALABASH_JAVA_XML_OUTPUT</li>
--   <li>AUTOMATION_OUTPUT</li>
--   <li>APPIUM_SERVER_OUTPUT</li>
--   <li>APPIUM_JAVA_OUTPUT</li>
--   <li>APPIUM_JAVA_XML_OUTPUT</li>
--   <li>APPIUM_PYTHON_OUTPUT</li>
--   <li>APPIUM_PYTHON_XML_OUTPUT</li>
--   <li>EXPLORER_EVENT_LOG</li>
--   <li>EXPLORER_SUMMARY_LOG</li>
--   <li>APPLICATION_CRASH_REPORT</li>
--   <li>XCTEST_LOG</li>
--   <li>VIDEO</li>
--   <li>CUSTOMER_ARTIFACT</li>
--   <li>CUSTOMER_ARTIFACT_LOG</li>
--   <li>TESTSPEC_OUTPUT</li>
--   </ul>
newArtifact :: Artifact

-- | The artifact's ARN.
artifact_arn :: Lens' Artifact (Maybe Text)

-- | The artifact's name.
artifact_name :: Lens' Artifact (Maybe Text)

-- | The artifact's file extension.
artifact_extension :: Lens' Artifact (Maybe Text)

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the artifact's file.
artifact_url :: Lens' Artifact (Maybe Text)

-- | The artifact's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>UNKNOWN</li>
--   <li>SCREENSHOT</li>
--   <li>DEVICE_LOG</li>
--   <li>MESSAGE_LOG</li>
--   <li>VIDEO_LOG</li>
--   <li>RESULT_LOG</li>
--   <li>SERVICE_LOG</li>
--   <li>WEBKIT_LOG</li>
--   <li>INSTRUMENTATION_OUTPUT</li>
--   <li>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an
--   Android fuzz test.</li>
--   <li>CALABASH_JSON_OUTPUT</li>
--   <li>CALABASH_PRETTY_OUTPUT</li>
--   <li>CALABASH_STANDARD_OUTPUT</li>
--   <li>CALABASH_JAVA_XML_OUTPUT</li>
--   <li>AUTOMATION_OUTPUT</li>
--   <li>APPIUM_SERVER_OUTPUT</li>
--   <li>APPIUM_JAVA_OUTPUT</li>
--   <li>APPIUM_JAVA_XML_OUTPUT</li>
--   <li>APPIUM_PYTHON_OUTPUT</li>
--   <li>APPIUM_PYTHON_XML_OUTPUT</li>
--   <li>EXPLORER_EVENT_LOG</li>
--   <li>EXPLORER_SUMMARY_LOG</li>
--   <li>APPLICATION_CRASH_REPORT</li>
--   <li>XCTEST_LOG</li>
--   <li>VIDEO</li>
--   <li>CUSTOMER_ARTIFACT</li>
--   <li>CUSTOMER_ARTIFACT_LOG</li>
--   <li>TESTSPEC_OUTPUT</li>
--   </ul>
artifact_type :: Lens' Artifact (Maybe ArtifactType)

-- | Represents the amount of CPU that an app is using on a physical
--   device. Does not represent system-wide CPU usage.
--   
--   <i>See:</i> <a>newCPU</a> smart constructor.
data CPU
CPU' :: Maybe Text -> Maybe Text -> Maybe Double -> CPU

-- | The CPU's architecture (for example, x86 or ARM).
[$sel:architecture:CPU'] :: CPU -> Maybe Text

-- | The CPU's frequency.
[$sel:frequency:CPU'] :: CPU -> Maybe Text

-- | The clock speed of the device's CPU, expressed in hertz (Hz). For
--   example, a 1.2 GHz CPU is expressed as 1200000000.
[$sel:clock:CPU'] :: CPU -> Maybe Double

-- | Create a value of <a>CPU</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:architecture:CPU'</a>, <a>cpu_architecture</a> - The CPU's
--   architecture (for example, x86 or ARM).
--   
--   <a>$sel:frequency:CPU'</a>, <a>cpu_frequency</a> - The CPU's
--   frequency.
--   
--   <a>$sel:clock:CPU'</a>, <a>cpu_clock</a> - The clock speed of the
--   device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is
--   expressed as 1200000000.
newCPU :: CPU

-- | The CPU's architecture (for example, x86 or ARM).
cpu_architecture :: Lens' CPU (Maybe Text)

-- | The CPU's frequency.
cpu_frequency :: Lens' CPU (Maybe Text)

-- | The clock speed of the device's CPU, expressed in hertz (Hz). For
--   example, a 1.2 GHz CPU is expressed as 1200000000.
cpu_clock :: Lens' CPU (Maybe Double)

-- | Represents entity counters.
--   
--   <i>See:</i> <a>newCounters</a> smart constructor.
data Counters
Counters' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Counters

-- | The number of errored entities.
[$sel:errored:Counters'] :: Counters -> Maybe Int

-- | The number of warned entities.
[$sel:warned:Counters'] :: Counters -> Maybe Int

-- | The number of passed entities.
[$sel:passed:Counters'] :: Counters -> Maybe Int

-- | The total number of entities.
[$sel:total:Counters'] :: Counters -> Maybe Int

-- | The number of stopped entities.
[$sel:stopped:Counters'] :: Counters -> Maybe Int

-- | The number of failed entities.
[$sel:failed:Counters'] :: Counters -> Maybe Int

-- | The number of skipped entities.
[$sel:skipped:Counters'] :: Counters -> Maybe Int

-- | Create a value of <a>Counters</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errored:Counters'</a>, <a>counters_errored</a> - The number of
--   errored entities.
--   
--   <a>$sel:warned:Counters'</a>, <a>counters_warned</a> - The number of
--   warned entities.
--   
--   <a>$sel:passed:Counters'</a>, <a>counters_passed</a> - The number of
--   passed entities.
--   
--   <a>$sel:total:Counters'</a>, <a>counters_total</a> - The total number
--   of entities.
--   
--   <a>$sel:stopped:Counters'</a>, <a>counters_stopped</a> - The number of
--   stopped entities.
--   
--   <a>$sel:failed:Counters'</a>, <a>counters_failed</a> - The number of
--   failed entities.
--   
--   <a>$sel:skipped:Counters'</a>, <a>counters_skipped</a> - The number of
--   skipped entities.
newCounters :: Counters

-- | The number of errored entities.
counters_errored :: Lens' Counters (Maybe Int)

-- | The number of warned entities.
counters_warned :: Lens' Counters (Maybe Int)

-- | The number of passed entities.
counters_passed :: Lens' Counters (Maybe Int)

-- | The total number of entities.
counters_total :: Lens' Counters (Maybe Int)

-- | The number of stopped entities.
counters_stopped :: Lens' Counters (Maybe Int)

-- | The number of failed entities.
counters_failed :: Lens' Counters (Maybe Int)

-- | The number of skipped entities.
counters_skipped :: Lens' Counters (Maybe Int)

-- | Configuration settings for a remote access session, including billing
--   method.
--   
--   <i>See:</i> <a>newCreateRemoteAccessSessionConfiguration</a> smart
--   constructor.
data CreateRemoteAccessSessionConfiguration
CreateRemoteAccessSessionConfiguration' :: Maybe BillingMethod -> Maybe [Text] -> CreateRemoteAccessSessionConfiguration

-- | The billing method for the remote access session.
[$sel:billingMethod:CreateRemoteAccessSessionConfiguration'] :: CreateRemoteAccessSessionConfiguration -> Maybe BillingMethod

-- | An array of ARNs included in the VPC endpoint configuration.
[$sel:vpceConfigurationArns:CreateRemoteAccessSessionConfiguration'] :: CreateRemoteAccessSessionConfiguration -> Maybe [Text]

-- | Create a value of <a>CreateRemoteAccessSessionConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:billingMethod:CreateRemoteAccessSessionConfiguration'</a>,
--   <a>createRemoteAccessSessionConfiguration_billingMethod</a> - The
--   billing method for the remote access session.
--   
--   
--   <a>$sel:vpceConfigurationArns:CreateRemoteAccessSessionConfiguration'</a>,
--   <a>createRemoteAccessSessionConfiguration_vpceConfigurationArns</a> -
--   An array of ARNs included in the VPC endpoint configuration.
newCreateRemoteAccessSessionConfiguration :: CreateRemoteAccessSessionConfiguration

-- | The billing method for the remote access session.
createRemoteAccessSessionConfiguration_billingMethod :: Lens' CreateRemoteAccessSessionConfiguration (Maybe BillingMethod)

-- | An array of ARNs included in the VPC endpoint configuration.
createRemoteAccessSessionConfiguration_vpceConfigurationArns :: Lens' CreateRemoteAccessSessionConfiguration (Maybe [Text])

-- | A JSON object that specifies the paths where the artifacts generated
--   by the customer's tests, on the device or in the test environment, are
--   pulled from.
--   
--   Specify <tt>deviceHostPaths</tt> and optionally specify either
--   <tt>iosPaths</tt> or <tt>androidPaths</tt>.
--   
--   For web app tests, you can specify both <tt>iosPaths</tt> and
--   <tt>androidPaths</tt>.
--   
--   <i>See:</i> <a>newCustomerArtifactPaths</a> smart constructor.
data CustomerArtifactPaths
CustomerArtifactPaths' :: Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> CustomerArtifactPaths

-- | Comma-separated list of paths in the test execution environment where
--   the artifacts generated by the customer's tests are pulled from.
[$sel:deviceHostPaths:CustomerArtifactPaths'] :: CustomerArtifactPaths -> Maybe [Text]

-- | Comma-separated list of paths on the iOS device where the artifacts
--   generated by the customer's tests are pulled from.
[$sel:iosPaths:CustomerArtifactPaths'] :: CustomerArtifactPaths -> Maybe [Text]

-- | Comma-separated list of paths on the Android device where the
--   artifacts generated by the customer's tests are pulled from.
[$sel:androidPaths:CustomerArtifactPaths'] :: CustomerArtifactPaths -> Maybe [Text]

-- | Create a value of <a>CustomerArtifactPaths</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceHostPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_deviceHostPaths</a> - Comma-separated list of
--   paths in the test execution environment where the artifacts generated
--   by the customer's tests are pulled from.
--   
--   <a>$sel:iosPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_iosPaths</a> - Comma-separated list of paths
--   on the iOS device where the artifacts generated by the customer's
--   tests are pulled from.
--   
--   <a>$sel:androidPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_androidPaths</a> - Comma-separated list of
--   paths on the Android device where the artifacts generated by the
--   customer's tests are pulled from.
newCustomerArtifactPaths :: CustomerArtifactPaths

-- | Comma-separated list of paths in the test execution environment where
--   the artifacts generated by the customer's tests are pulled from.
customerArtifactPaths_deviceHostPaths :: Lens' CustomerArtifactPaths (Maybe [Text])

-- | Comma-separated list of paths on the iOS device where the artifacts
--   generated by the customer's tests are pulled from.
customerArtifactPaths_iosPaths :: Lens' CustomerArtifactPaths (Maybe [Text])

-- | Comma-separated list of paths on the Android device where the
--   artifacts generated by the customer's tests are pulled from.
customerArtifactPaths_androidPaths :: Lens' CustomerArtifactPaths (Maybe [Text])

-- | Represents a device type that an app is tested against.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe DevicePlatform -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe DeviceAvailability -> Maybe Text -> Maybe Text -> Maybe DeviceFormFactor -> Maybe Text -> Maybe Bool -> Maybe [DeviceInstance] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Resolution -> Maybe CPU -> Maybe Bool -> Maybe Text -> Device

-- | The device's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
[$sel:platform:Device'] :: Device -> Maybe DevicePlatform

-- | The device's manufacturer name.
[$sel:manufacturer:Device'] :: Device -> Maybe Text

-- | The device's model name.
[$sel:model:Device'] :: Device -> Maybe Text

-- | The device's total memory size, expressed in bytes.
[$sel:memory:Device'] :: Device -> Maybe Integer

-- | Indicates how likely a device is available for a test run. Currently
--   available in the ListDevices and GetDevice API methods.
[$sel:availability:Device'] :: Device -> Maybe DeviceAvailability

-- | The name of the fleet to which this device belongs.
[$sel:fleetName:Device'] :: Device -> Maybe Text

-- | The type of fleet to which this device belongs. Possible values are
--   PRIVATE and PUBLIC.
[$sel:fleetType:Device'] :: Device -> Maybe Text

-- | The device's form factor.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PHONE</li>
--   <li>TABLET</li>
--   </ul>
[$sel:formFactor:Device'] :: Device -> Maybe DeviceFormFactor

-- | The device's ARN.
[$sel:arn:Device'] :: Device -> Maybe Text

-- | Specifies whether remote access has been enabled for the specified
--   device.
[$sel:remoteAccessEnabled:Device'] :: Device -> Maybe Bool

-- | The instances that belong to this device.
[$sel:instances:Device'] :: Device -> Maybe [DeviceInstance]

-- | The device's display name.
[$sel:name:Device'] :: Device -> Maybe Text

-- | The device's image name.
[$sel:image:Device'] :: Device -> Maybe Text

-- | The device's carrier.
[$sel:carrier:Device'] :: Device -> Maybe Text

-- | The device's operating system type.
[$sel:os:Device'] :: Device -> Maybe Text

-- | The device's heap size, expressed in bytes.
[$sel:heapSize:Device'] :: Device -> Maybe Integer

-- | The device's radio.
[$sel:radio:Device'] :: Device -> Maybe Text

-- | The resolution of the device.
[$sel:resolution:Device'] :: Device -> Maybe Resolution

-- | Information about the device's CPU.
[$sel:cpu:Device'] :: Device -> Maybe CPU

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the device.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:remoteDebugEnabled:Device'] :: Device -> Maybe Bool

-- | The device's model ID.
[$sel:modelId:Device'] :: Device -> Maybe Text

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Device'</a>, <a>device_platform</a> - The device's
--   platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
--   
--   <a>$sel:manufacturer:Device'</a>, <a>device_manufacturer</a> - The
--   device's manufacturer name.
--   
--   <a>$sel:model:Device'</a>, <a>device_model</a> - The device's model
--   name.
--   
--   <a>$sel:memory:Device'</a>, <a>device_memory</a> - The device's total
--   memory size, expressed in bytes.
--   
--   <a>$sel:availability:Device'</a>, <a>device_availability</a> -
--   Indicates how likely a device is available for a test run. Currently
--   available in the ListDevices and GetDevice API methods.
--   
--   <a>$sel:fleetName:Device'</a>, <a>device_fleetName</a> - The name of
--   the fleet to which this device belongs.
--   
--   <a>$sel:fleetType:Device'</a>, <a>device_fleetType</a> - The type of
--   fleet to which this device belongs. Possible values are PRIVATE and
--   PUBLIC.
--   
--   <a>$sel:formFactor:Device'</a>, <a>device_formFactor</a> - The
--   device's form factor.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PHONE</li>
--   <li>TABLET</li>
--   </ul>
--   
--   <a>$sel:arn:Device'</a>, <a>device_arn</a> - The device's ARN.
--   
--   <a>$sel:remoteAccessEnabled:Device'</a>,
--   <a>device_remoteAccessEnabled</a> - Specifies whether remote access
--   has been enabled for the specified device.
--   
--   <a>$sel:instances:Device'</a>, <a>device_instances</a> - The instances
--   that belong to this device.
--   
--   <a>$sel:name:Device'</a>, <a>device_name</a> - The device's display
--   name.
--   
--   <a>$sel:image:Device'</a>, <a>device_image</a> - The device's image
--   name.
--   
--   <a>$sel:carrier:Device'</a>, <a>device_carrier</a> - The device's
--   carrier.
--   
--   <a>$sel:os:Device'</a>, <a>device_os</a> - The device's operating
--   system type.
--   
--   <a>$sel:heapSize:Device'</a>, <a>device_heapSize</a> - The device's
--   heap size, expressed in bytes.
--   
--   <a>$sel:radio:Device'</a>, <a>device_radio</a> - The device's radio.
--   
--   <a>$sel:resolution:Device'</a>, <a>device_resolution</a> - The
--   resolution of the device.
--   
--   <a>$sel:cpu:Device'</a>, <a>device_cpu</a> - Information about the
--   device's CPU.
--   
--   <a>$sel:remoteDebugEnabled:Device'</a>,
--   <a>device_remoteDebugEnabled</a> - This flag is set to <tt>true</tt>
--   if remote debugging is enabled for the device.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:modelId:Device'</a>, <a>device_modelId</a> - The device's
--   model ID.
newDevice :: Device

-- | The device's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
device_platform :: Lens' Device (Maybe DevicePlatform)

-- | The device's manufacturer name.
device_manufacturer :: Lens' Device (Maybe Text)

-- | The device's model name.
device_model :: Lens' Device (Maybe Text)

-- | The device's total memory size, expressed in bytes.
device_memory :: Lens' Device (Maybe Integer)

-- | Indicates how likely a device is available for a test run. Currently
--   available in the ListDevices and GetDevice API methods.
device_availability :: Lens' Device (Maybe DeviceAvailability)

-- | The name of the fleet to which this device belongs.
device_fleetName :: Lens' Device (Maybe Text)

-- | The type of fleet to which this device belongs. Possible values are
--   PRIVATE and PUBLIC.
device_fleetType :: Lens' Device (Maybe Text)

-- | The device's form factor.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PHONE</li>
--   <li>TABLET</li>
--   </ul>
device_formFactor :: Lens' Device (Maybe DeviceFormFactor)

-- | The device's ARN.
device_arn :: Lens' Device (Maybe Text)

-- | Specifies whether remote access has been enabled for the specified
--   device.
device_remoteAccessEnabled :: Lens' Device (Maybe Bool)

-- | The instances that belong to this device.
device_instances :: Lens' Device (Maybe [DeviceInstance])

-- | The device's display name.
device_name :: Lens' Device (Maybe Text)

-- | The device's image name.
device_image :: Lens' Device (Maybe Text)

-- | The device's carrier.
device_carrier :: Lens' Device (Maybe Text)

-- | The device's operating system type.
device_os :: Lens' Device (Maybe Text)

-- | The device's heap size, expressed in bytes.
device_heapSize :: Lens' Device (Maybe Integer)

-- | The device's radio.
device_radio :: Lens' Device (Maybe Text)

-- | The resolution of the device.
device_resolution :: Lens' Device (Maybe Resolution)

-- | Information about the device's CPU.
device_cpu :: Lens' Device (Maybe CPU)

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the device.
--   
--   Remote debugging is <a>no longer supported</a>.
device_remoteDebugEnabled :: Lens' Device (Maybe Bool)

-- | The device's model ID.
device_modelId :: Lens' Device (Maybe Text)

-- | Represents a device filter used to select a set of devices to be
--   included in a test run. This data structure is passed in as the
--   <tt>deviceSelectionConfiguration</tt> parameter to
--   <tt>ScheduleRun</tt>. For an example of the JSON request syntax, see
--   ScheduleRun.
--   
--   It is also passed in as the <tt>filters</tt> parameter to
--   <tt>ListDevices</tt>. For an example of the JSON request syntax, see
--   ListDevices.
--   
--   <i>See:</i> <a>newDeviceFilter</a> smart constructor.
data DeviceFilter
DeviceFilter' :: DeviceFilterAttribute -> RuleOperator -> [Text] -> DeviceFilter

-- | The aspect of a device such as platform or model used as the selection
--   criteria in a device filter.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model (for example, iPad 5th
--   Gen).Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   </ul>
[$sel:attribute:DeviceFilter'] :: DeviceFilter -> DeviceFilterAttribute

-- | Specifies how Device Farm compares the filter's attribute to the
--   value. See the attribute descriptions.
[$sel:operator:DeviceFilter'] :: DeviceFilter -> RuleOperator

-- | An array of one or more filter values used in a device filter.
--   
--   <b>Operator Values</b>
--   
--   <ul>
--   <li>The IN and NOT_IN operators can take a values array that has more
--   than one element.</li>
--   <li>The other operators require an array with a single element.</li>
--   </ul>
--   
--   <b>Attribute Values</b>
--   
--   <ul>
--   <li>The PLATFORM attribute can be set to ANDROID or IOS.</li>
--   <li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li>
--   <li>The FORM_FACTOR attribute can be set to PHONE or TABLET.</li>
--   <li>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li>
--   </ul>
[$sel:values:DeviceFilter'] :: DeviceFilter -> [Text]

-- | Create a value of <a>DeviceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:DeviceFilter'</a>, <a>deviceFilter_attribute</a> -
--   The aspect of a device such as platform or model used as the selection
--   criteria in a device filter.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model (for example, iPad 5th
--   Gen).Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   </ul>
--   
--   <a>$sel:operator:DeviceFilter'</a>, <a>deviceFilter_operator</a> -
--   Specifies how Device Farm compares the filter's attribute to the
--   value. See the attribute descriptions.
--   
--   <a>$sel:values:DeviceFilter'</a>, <a>deviceFilter_values</a> - An
--   array of one or more filter values used in a device filter.
--   
--   <b>Operator Values</b>
--   
--   <ul>
--   <li>The IN and NOT_IN operators can take a values array that has more
--   than one element.</li>
--   <li>The other operators require an array with a single element.</li>
--   </ul>
--   
--   <b>Attribute Values</b>
--   
--   <ul>
--   <li>The PLATFORM attribute can be set to ANDROID or IOS.</li>
--   <li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li>
--   <li>The FORM_FACTOR attribute can be set to PHONE or TABLET.</li>
--   <li>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li>
--   </ul>
newDeviceFilter :: DeviceFilterAttribute -> RuleOperator -> DeviceFilter

-- | The aspect of a device such as platform or model used as the selection
--   criteria in a device filter.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model (for example, iPad 5th
--   Gen).Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   </ul>
deviceFilter_attribute :: Lens' DeviceFilter DeviceFilterAttribute

-- | Specifies how Device Farm compares the filter's attribute to the
--   value. See the attribute descriptions.
deviceFilter_operator :: Lens' DeviceFilter RuleOperator

-- | An array of one or more filter values used in a device filter.
--   
--   <b>Operator Values</b>
--   
--   <ul>
--   <li>The IN and NOT_IN operators can take a values array that has more
--   than one element.</li>
--   <li>The other operators require an array with a single element.</li>
--   </ul>
--   
--   <b>Attribute Values</b>
--   
--   <ul>
--   <li>The PLATFORM attribute can be set to ANDROID or IOS.</li>
--   <li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li>
--   <li>The FORM_FACTOR attribute can be set to PHONE or TABLET.</li>
--   <li>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li>
--   </ul>
deviceFilter_values :: Lens' DeviceFilter [Text]

-- | Represents the device instance.
--   
--   <i>See:</i> <a>newDeviceInstance</a> smart constructor.
data DeviceInstance
DeviceInstance' :: Maybe InstanceStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe InstanceProfile -> DeviceInstance

-- | The status of the device instance. Valid values are listed here.
[$sel:status:DeviceInstance'] :: DeviceInstance -> Maybe InstanceStatus

-- | Unique device identifier for the device instance.
[$sel:udid:DeviceInstance'] :: DeviceInstance -> Maybe Text

-- | The ARN of the device.
[$sel:deviceArn:DeviceInstance'] :: DeviceInstance -> Maybe Text

-- | The Amazon Resource Name (ARN) of the device instance.
[$sel:arn:DeviceInstance'] :: DeviceInstance -> Maybe Text

-- | An array of strings that describe the device instance.
[$sel:labels:DeviceInstance'] :: DeviceInstance -> Maybe [Text]

-- | A object that contains information about the instance profile.
[$sel:instanceProfile:DeviceInstance'] :: DeviceInstance -> Maybe InstanceProfile

-- | Create a value of <a>DeviceInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeviceInstance'</a>, <a>deviceInstance_status</a> - The
--   status of the device instance. Valid values are listed here.
--   
--   <a>$sel:udid:DeviceInstance'</a>, <a>deviceInstance_udid</a> - Unique
--   device identifier for the device instance.
--   
--   <a>$sel:deviceArn:DeviceInstance'</a>, <a>deviceInstance_deviceArn</a>
--   - The ARN of the device.
--   
--   <a>$sel:arn:DeviceInstance'</a>, <a>deviceInstance_arn</a> - The
--   Amazon Resource Name (ARN) of the device instance.
--   
--   <a>$sel:labels:DeviceInstance'</a>, <a>deviceInstance_labels</a> - An
--   array of strings that describe the device instance.
--   
--   <a>$sel:instanceProfile:DeviceInstance'</a>,
--   <a>deviceInstance_instanceProfile</a> - A object that contains
--   information about the instance profile.
newDeviceInstance :: DeviceInstance

-- | The status of the device instance. Valid values are listed here.
deviceInstance_status :: Lens' DeviceInstance (Maybe InstanceStatus)

-- | Unique device identifier for the device instance.
deviceInstance_udid :: Lens' DeviceInstance (Maybe Text)

-- | The ARN of the device.
deviceInstance_deviceArn :: Lens' DeviceInstance (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device instance.
deviceInstance_arn :: Lens' DeviceInstance (Maybe Text)

-- | An array of strings that describe the device instance.
deviceInstance_labels :: Lens' DeviceInstance (Maybe [Text])

-- | A object that contains information about the instance profile.
deviceInstance_instanceProfile :: Lens' DeviceInstance (Maybe InstanceProfile)

-- | Represents the total (metered or unmetered) minutes used by the
--   resource to run tests. Contains the sum of minutes consumed by all
--   children.
--   
--   <i>See:</i> <a>newDeviceMinutes</a> smart constructor.
data DeviceMinutes
DeviceMinutes' :: Maybe Double -> Maybe Double -> Maybe Double -> DeviceMinutes

-- | When specified, represents only the sum of unmetered minutes used by
--   the resource to run tests.
[$sel:unmetered:DeviceMinutes'] :: DeviceMinutes -> Maybe Double

-- | When specified, represents only the sum of metered minutes used by the
--   resource to run tests.
[$sel:metered:DeviceMinutes'] :: DeviceMinutes -> Maybe Double

-- | When specified, represents the total minutes used by the resource to
--   run tests.
[$sel:total:DeviceMinutes'] :: DeviceMinutes -> Maybe Double

-- | Create a value of <a>DeviceMinutes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unmetered:DeviceMinutes'</a>, <a>deviceMinutes_unmetered</a> -
--   When specified, represents only the sum of unmetered minutes used by
--   the resource to run tests.
--   
--   <a>$sel:metered:DeviceMinutes'</a>, <a>deviceMinutes_metered</a> -
--   When specified, represents only the sum of metered minutes used by the
--   resource to run tests.
--   
--   <a>$sel:total:DeviceMinutes'</a>, <a>deviceMinutes_total</a> - When
--   specified, represents the total minutes used by the resource to run
--   tests.
newDeviceMinutes :: DeviceMinutes

-- | When specified, represents only the sum of unmetered minutes used by
--   the resource to run tests.
deviceMinutes_unmetered :: Lens' DeviceMinutes (Maybe Double)

-- | When specified, represents only the sum of metered minutes used by the
--   resource to run tests.
deviceMinutes_metered :: Lens' DeviceMinutes (Maybe Double)

-- | When specified, represents the total minutes used by the resource to
--   run tests.
deviceMinutes_total :: Lens' DeviceMinutes (Maybe Double)

-- | Represents a collection of device types.
--   
--   <i>See:</i> <a>newDevicePool</a> smart constructor.
data DevicePool
DevicePool' :: Maybe Text -> Maybe [Rule] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe DevicePoolType -> DevicePool

-- | The device pool's ARN.
[$sel:arn:DevicePool'] :: DevicePool -> Maybe Text

-- | Information about the device pool's rules.
[$sel:rules:DevicePool'] :: DevicePool -> Maybe [Rule]

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and meet the criteria that
--   you assign for the <tt>rules</tt> parameter. Depending on how many
--   devices meet these constraints, your device pool might contain fewer
--   devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
[$sel:maxDevices:DevicePool'] :: DevicePool -> Maybe Int

-- | The device pool's name.
[$sel:name:DevicePool'] :: DevicePool -> Maybe Text

-- | The device pool's description.
[$sel:description:DevicePool'] :: DevicePool -> Maybe Text

-- | The device pool's type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
[$sel:type':DevicePool'] :: DevicePool -> Maybe DevicePoolType

-- | Create a value of <a>DevicePool</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DevicePool'</a>, <a>devicePool_arn</a> - The device pool's
--   ARN.
--   
--   <a>$sel:rules:DevicePool'</a>, <a>devicePool_rules</a> - Information
--   about the device pool's rules.
--   
--   <a>$sel:maxDevices:DevicePool'</a>, <a>devicePool_maxDevices</a> - The
--   number of devices that Device Farm can add to your device pool. Device
--   Farm adds devices that are available and meet the criteria that you
--   assign for the <tt>rules</tt> parameter. Depending on how many devices
--   meet these constraints, your device pool might contain fewer devices
--   than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   <a>$sel:name:DevicePool'</a>, <a>devicePool_name</a> - The device
--   pool's name.
--   
--   <a>$sel:description:DevicePool'</a>, <a>devicePool_description</a> -
--   The device pool's description.
--   
--   <a>$sel:type':DevicePool'</a>, <a>devicePool_type</a> - The device
--   pool's type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
newDevicePool :: DevicePool

-- | The device pool's ARN.
devicePool_arn :: Lens' DevicePool (Maybe Text)

-- | Information about the device pool's rules.
devicePool_rules :: Lens' DevicePool (Maybe [Rule])

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and meet the criteria that
--   you assign for the <tt>rules</tt> parameter. Depending on how many
--   devices meet these constraints, your device pool might contain fewer
--   devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
devicePool_maxDevices :: Lens' DevicePool (Maybe Int)

-- | The device pool's name.
devicePool_name :: Lens' DevicePool (Maybe Text)

-- | The device pool's description.
devicePool_description :: Lens' DevicePool (Maybe Text)

-- | The device pool's type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
devicePool_type :: Lens' DevicePool (Maybe DevicePoolType)

-- | Represents a device pool compatibility result.
--   
--   <i>See:</i> <a>newDevicePoolCompatibilityResult</a> smart constructor.
data DevicePoolCompatibilityResult
DevicePoolCompatibilityResult' :: Maybe [IncompatibilityMessage] -> Maybe Bool -> Maybe Device -> DevicePoolCompatibilityResult

-- | Information about the compatibility.
[$sel:incompatibilityMessages:DevicePoolCompatibilityResult'] :: DevicePoolCompatibilityResult -> Maybe [IncompatibilityMessage]

-- | Whether the result was compatible with the device pool.
[$sel:compatible:DevicePoolCompatibilityResult'] :: DevicePoolCompatibilityResult -> Maybe Bool

-- | The device (phone or tablet) to return information about.
[$sel:device:DevicePoolCompatibilityResult'] :: DevicePoolCompatibilityResult -> Maybe Device

-- | Create a value of <a>DevicePoolCompatibilityResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:incompatibilityMessages:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_incompatibilityMessages</a> -
--   Information about the compatibility.
--   
--   <a>$sel:compatible:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_compatible</a> - Whether the result
--   was compatible with the device pool.
--   
--   <a>$sel:device:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_device</a> - The device (phone or
--   tablet) to return information about.
newDevicePoolCompatibilityResult :: DevicePoolCompatibilityResult

-- | Information about the compatibility.
devicePoolCompatibilityResult_incompatibilityMessages :: Lens' DevicePoolCompatibilityResult (Maybe [IncompatibilityMessage])

-- | Whether the result was compatible with the device pool.
devicePoolCompatibilityResult_compatible :: Lens' DevicePoolCompatibilityResult (Maybe Bool)

-- | The device (phone or tablet) to return information about.
devicePoolCompatibilityResult_device :: Lens' DevicePoolCompatibilityResult (Maybe Device)

-- | Represents the device filters used in a test run and the maximum
--   number of devices to be included in the run. It is passed in as the
--   <tt>deviceSelectionConfiguration</tt> request parameter in
--   ScheduleRun.
--   
--   <i>See:</i> <a>newDeviceSelectionConfiguration</a> smart constructor.
data DeviceSelectionConfiguration
DeviceSelectionConfiguration' :: [DeviceFilter] -> Int -> DeviceSelectionConfiguration

-- | Used to dynamically select a set of devices for a test run. A filter
--   is made up of an attribute, an operator, and one or more values.
--   
--   <ul>
--   <li><b>Attribute</b>The aspect of a device such as platform or model
--   used as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this filter is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li><b>Operator</b>The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li><b>Values</b>An array of one or more filter values.<b>Operator
--   Values</b><ul><li>The IN and NOT_IN operators can take a values array
--   that has more than one element.</li><li>The other operators require an
--   array with a single element.</li></ul><b>Attribute
--   Values</b><ul><li>The PLATFORM attribute can be set to ANDROID or
--   IOS.</li><li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li><li>The
--   FORM_FACTOR attribute can be set to PHONE or TABLET.</li><li>The
--   FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li></ul></li>
--   </ul>
[$sel:filters:DeviceSelectionConfiguration'] :: DeviceSelectionConfiguration -> [DeviceFilter]

-- | The maximum number of devices to be included in a test run.
[$sel:maxDevices:DeviceSelectionConfiguration'] :: DeviceSelectionConfiguration -> Int

-- | Create a value of <a>DeviceSelectionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DeviceSelectionConfiguration'</a>,
--   <a>deviceSelectionConfiguration_filters</a> - Used to dynamically
--   select a set of devices for a test run. A filter is made up of an
--   attribute, an operator, and one or more values.
--   
--   <ul>
--   <li><b>Attribute</b>The aspect of a device such as platform or model
--   used as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this filter is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li><b>Operator</b>The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li><b>Values</b>An array of one or more filter values.<b>Operator
--   Values</b><ul><li>The IN and NOT_IN operators can take a values array
--   that has more than one element.</li><li>The other operators require an
--   array with a single element.</li></ul><b>Attribute
--   Values</b><ul><li>The PLATFORM attribute can be set to ANDROID or
--   IOS.</li><li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li><li>The
--   FORM_FACTOR attribute can be set to PHONE or TABLET.</li><li>The
--   FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li></ul></li>
--   </ul>
--   
--   <a>$sel:maxDevices:DeviceSelectionConfiguration'</a>,
--   <a>deviceSelectionConfiguration_maxDevices</a> - The maximum number of
--   devices to be included in a test run.
newDeviceSelectionConfiguration :: Int -> DeviceSelectionConfiguration

-- | Used to dynamically select a set of devices for a test run. A filter
--   is made up of an attribute, an operator, and one or more values.
--   
--   <ul>
--   <li><b>Attribute</b>The aspect of a device such as platform or model
--   used as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this filter is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li><b>Operator</b>The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li><b>Values</b>An array of one or more filter values.<b>Operator
--   Values</b><ul><li>The IN and NOT_IN operators can take a values array
--   that has more than one element.</li><li>The other operators require an
--   array with a single element.</li></ul><b>Attribute
--   Values</b><ul><li>The PLATFORM attribute can be set to ANDROID or
--   IOS.</li><li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li><li>The
--   FORM_FACTOR attribute can be set to PHONE or TABLET.</li><li>The
--   FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li></ul></li>
--   </ul>
deviceSelectionConfiguration_filters :: Lens' DeviceSelectionConfiguration [DeviceFilter]

-- | The maximum number of devices to be included in a test run.
deviceSelectionConfiguration_maxDevices :: Lens' DeviceSelectionConfiguration Int

-- | Contains the run results requested by the device selection
--   configuration and how many devices were returned. For an example of
--   the JSON response syntax, see ScheduleRun.
--   
--   <i>See:</i> <a>newDeviceSelectionResult</a> smart constructor.
data DeviceSelectionResult
DeviceSelectionResult' :: Maybe Int -> Maybe [DeviceFilter] -> Maybe Int -> DeviceSelectionResult

-- | The maximum number of devices to be selected by a device filter and
--   included in a test run.
[$sel:maxDevices:DeviceSelectionResult'] :: DeviceSelectionResult -> Maybe Int

-- | The filters in a device selection result.
[$sel:filters:DeviceSelectionResult'] :: DeviceSelectionResult -> Maybe [DeviceFilter]

-- | The number of devices that matched the device filter selection
--   criteria.
[$sel:matchedDevicesCount:DeviceSelectionResult'] :: DeviceSelectionResult -> Maybe Int

-- | Create a value of <a>DeviceSelectionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxDevices:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_maxDevices</a> - The maximum number of
--   devices to be selected by a device filter and included in a test run.
--   
--   <a>$sel:filters:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_filters</a> - The filters in a device
--   selection result.
--   
--   <a>$sel:matchedDevicesCount:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_matchedDevicesCount</a> - The number of
--   devices that matched the device filter selection criteria.
newDeviceSelectionResult :: DeviceSelectionResult

-- | The maximum number of devices to be selected by a device filter and
--   included in a test run.
deviceSelectionResult_maxDevices :: Lens' DeviceSelectionResult (Maybe Int)

-- | The filters in a device selection result.
deviceSelectionResult_filters :: Lens' DeviceSelectionResult (Maybe [DeviceFilter])

-- | The number of devices that matched the device filter selection
--   criteria.
deviceSelectionResult_matchedDevicesCount :: Lens' DeviceSelectionResult (Maybe Int)

-- | Represents configuration information about a test run, such as the
--   execution timeout (in minutes).
--   
--   <i>See:</i> <a>newExecutionConfiguration</a> smart constructor.
data ExecutionConfiguration
ExecutionConfiguration' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Bool -> ExecutionConfiguration

-- | True if app package cleanup is enabled at the beginning of the test.
--   Otherwise, false.
[$sel:appPackagesCleanup:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Bool

-- | Set to true to enable video capture. Otherwise, set to false. The
--   default is true.
[$sel:videoCapture:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Bool

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
[$sel:skipAppResign:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Bool

-- | The number of minutes a test run executes before it times out.
[$sel:jobTimeoutMinutes:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Int

-- | True if account cleanup is enabled at the beginning of the test.
--   Otherwise, false.
[$sel:accountsCleanup:ExecutionConfiguration'] :: ExecutionConfiguration -> Maybe Bool

-- | Create a value of <a>ExecutionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appPackagesCleanup:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_appPackagesCleanup</a> - True if app package
--   cleanup is enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:videoCapture:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_videoCapture</a> - Set to true to enable
--   video capture. Otherwise, set to false. The default is true.
--   
--   <a>$sel:skipAppResign:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_skipAppResign</a> - When set to
--   <tt>true</tt>, for private devices, Device Farm does not sign your app
--   again. For public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:jobTimeoutMinutes:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_jobTimeoutMinutes</a> - The number of
--   minutes a test run executes before it times out.
--   
--   <a>$sel:accountsCleanup:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_accountsCleanup</a> - True if account
--   cleanup is enabled at the beginning of the test. Otherwise, false.
newExecutionConfiguration :: ExecutionConfiguration

-- | True if app package cleanup is enabled at the beginning of the test.
--   Otherwise, false.
executionConfiguration_appPackagesCleanup :: Lens' ExecutionConfiguration (Maybe Bool)

-- | Set to true to enable video capture. Otherwise, set to false. The
--   default is true.
executionConfiguration_videoCapture :: Lens' ExecutionConfiguration (Maybe Bool)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
executionConfiguration_skipAppResign :: Lens' ExecutionConfiguration (Maybe Bool)

-- | The number of minutes a test run executes before it times out.
executionConfiguration_jobTimeoutMinutes :: Lens' ExecutionConfiguration (Maybe Int)

-- | True if account cleanup is enabled at the beginning of the test.
--   Otherwise, false.
executionConfiguration_accountsCleanup :: Lens' ExecutionConfiguration (Maybe Bool)

-- | Represents information about incompatibility.
--   
--   <i>See:</i> <a>newIncompatibilityMessage</a> smart constructor.
data IncompatibilityMessage
IncompatibilityMessage' :: Maybe Text -> Maybe DeviceAttribute -> IncompatibilityMessage

-- | A message about the incompatibility.
[$sel:message:IncompatibilityMessage'] :: IncompatibilityMessage -> Maybe Text

-- | The type of incompatibility.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ARN</li>
--   <li>FORM_FACTOR (for example, phone or tablet)</li>
--   <li>MANUFACTURER</li>
--   <li>PLATFORM (for example, Android or iOS)</li>
--   <li>REMOTE_ACCESS_ENABLED</li>
--   <li>APPIUM_VERSION</li>
--   </ul>
[$sel:type':IncompatibilityMessage'] :: IncompatibilityMessage -> Maybe DeviceAttribute

-- | Create a value of <a>IncompatibilityMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:IncompatibilityMessage'</a>,
--   <a>incompatibilityMessage_message</a> - A message about the
--   incompatibility.
--   
--   <a>$sel:type':IncompatibilityMessage'</a>,
--   <a>incompatibilityMessage_type</a> - The type of incompatibility.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ARN</li>
--   <li>FORM_FACTOR (for example, phone or tablet)</li>
--   <li>MANUFACTURER</li>
--   <li>PLATFORM (for example, Android or iOS)</li>
--   <li>REMOTE_ACCESS_ENABLED</li>
--   <li>APPIUM_VERSION</li>
--   </ul>
newIncompatibilityMessage :: IncompatibilityMessage

-- | A message about the incompatibility.
incompatibilityMessage_message :: Lens' IncompatibilityMessage (Maybe Text)

-- | The type of incompatibility.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ARN</li>
--   <li>FORM_FACTOR (for example, phone or tablet)</li>
--   <li>MANUFACTURER</li>
--   <li>PLATFORM (for example, Android or iOS)</li>
--   <li>REMOTE_ACCESS_ENABLED</li>
--   <li>APPIUM_VERSION</li>
--   </ul>
incompatibilityMessage_type :: Lens' IncompatibilityMessage (Maybe DeviceAttribute)

-- | Represents the instance profile.
--   
--   <i>See:</i> <a>newInstanceProfile</a> smart constructor.
data InstanceProfile
InstanceProfile' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> InstanceProfile

-- | An array of strings containing the list of app packages that should
--   not be cleaned up from the device after a test run completes.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
[$sel:excludeAppPackagesFromCleanup:InstanceProfile'] :: InstanceProfile -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the instance profile.
[$sel:arn:InstanceProfile'] :: InstanceProfile -> Maybe Text

-- | The name of the instance profile.
[$sel:name:InstanceProfile'] :: InstanceProfile -> Maybe Text

-- | The description of the instance profile.
[$sel:description:InstanceProfile'] :: InstanceProfile -> Maybe Text

-- | When set to <tt>true</tt>, Device Farm reboots the instance after a
--   test run. The default value is <tt>true</tt>.
[$sel:rebootAfterUse:InstanceProfile'] :: InstanceProfile -> Maybe Bool

-- | When set to <tt>true</tt>, Device Farm removes app packages after a
--   test run. The default value is <tt>false</tt> for private devices.
[$sel:packageCleanup:InstanceProfile'] :: InstanceProfile -> Maybe Bool

-- | Create a value of <a>InstanceProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeAppPackagesFromCleanup:InstanceProfile'</a>,
--   <a>instanceProfile_excludeAppPackagesFromCleanup</a> - An array of
--   strings containing the list of app packages that should not be cleaned
--   up from the device after a test run completes.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
--   
--   <a>$sel:arn:InstanceProfile'</a>, <a>instanceProfile_arn</a> - The
--   Amazon Resource Name (ARN) of the instance profile.
--   
--   <a>$sel:name:InstanceProfile'</a>, <a>instanceProfile_name</a> - The
--   name of the instance profile.
--   
--   <a>$sel:description:InstanceProfile'</a>,
--   <a>instanceProfile_description</a> - The description of the instance
--   profile.
--   
--   <a>$sel:rebootAfterUse:InstanceProfile'</a>,
--   <a>instanceProfile_rebootAfterUse</a> - When set to <tt>true</tt>,
--   Device Farm reboots the instance after a test run. The default value
--   is <tt>true</tt>.
--   
--   <a>$sel:packageCleanup:InstanceProfile'</a>,
--   <a>instanceProfile_packageCleanup</a> - When set to <tt>true</tt>,
--   Device Farm removes app packages after a test run. The default value
--   is <tt>false</tt> for private devices.
newInstanceProfile :: InstanceProfile

-- | An array of strings containing the list of app packages that should
--   not be cleaned up from the device after a test run completes.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
instanceProfile_excludeAppPackagesFromCleanup :: Lens' InstanceProfile (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the instance profile.
instanceProfile_arn :: Lens' InstanceProfile (Maybe Text)

-- | The name of the instance profile.
instanceProfile_name :: Lens' InstanceProfile (Maybe Text)

-- | The description of the instance profile.
instanceProfile_description :: Lens' InstanceProfile (Maybe Text)

-- | When set to <tt>true</tt>, Device Farm reboots the instance after a
--   test run. The default value is <tt>true</tt>.
instanceProfile_rebootAfterUse :: Lens' InstanceProfile (Maybe Bool)

-- | When set to <tt>true</tt>, Device Farm removes app packages after a
--   test run. The default value is <tt>false</tt> for private devices.
instanceProfile_packageCleanup :: Lens' InstanceProfile (Maybe Bool)

-- | Represents a device.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Job

-- | The job's result counters.
[$sel:counters:Job'] :: Job -> Maybe Counters

-- | The job's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
[$sel:status:Job'] :: Job -> Maybe ExecutionStatus

-- | The job's start time.
[$sel:started:Job'] :: Job -> Maybe POSIX

-- | The job's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Job'] :: Job -> Maybe ExecutionResult

-- | A message about the job's result.
[$sel:message:Job'] :: Job -> Maybe Text

-- | The device (phone or tablet).
[$sel:device:Job'] :: Job -> Maybe Device

-- | The job's ARN.
[$sel:arn:Job'] :: Job -> Maybe Text

-- | This value is set to true if video capture is enabled. Otherwise, it
--   is set to false.
[$sel:videoCapture:Job'] :: Job -> Maybe Bool

-- | The endpoint for streaming device video.
[$sel:videoEndpoint:Job'] :: Job -> Maybe Text

-- | The job's name.
[$sel:name:Job'] :: Job -> Maybe Text

-- | The ARN of the instance.
[$sel:instanceArn:Job'] :: Job -> Maybe Text

-- | The job's stop time.
[$sel:stopped:Job'] :: Job -> Maybe POSIX

-- | The job's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':Job'] :: Job -> Maybe TestType

-- | When the job was created.
[$sel:created:Job'] :: Job -> Maybe POSIX

-- | Represents the total (metered or unmetered) minutes used by the job.
[$sel:deviceMinutes:Job'] :: Job -> Maybe DeviceMinutes

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Job'</a>, <a>job_counters</a> - The job's result
--   counters.
--   
--   <a>$sel:status:Job'</a>, <a>job_status</a> - The job's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Job'</a>, <a>job_started</a> - The job's start time.
--   
--   <a>$sel:result:Job'</a>, <a>job_result</a> - The job's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Job'</a>, <a>job_message</a> - A message about the
--   job's result.
--   
--   <a>$sel:device:Job'</a>, <a>job_device</a> - The device (phone or
--   tablet).
--   
--   <a>$sel:arn:Job'</a>, <a>job_arn</a> - The job's ARN.
--   
--   <a>$sel:videoCapture:Job'</a>, <a>job_videoCapture</a> - This value is
--   set to true if video capture is enabled. Otherwise, it is set to
--   false.
--   
--   <a>$sel:videoEndpoint:Job'</a>, <a>job_videoEndpoint</a> - The
--   endpoint for streaming device video.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The job's name.
--   
--   <a>$sel:instanceArn:Job'</a>, <a>job_instanceArn</a> - The ARN of the
--   instance.
--   
--   <a>$sel:stopped:Job'</a>, <a>job_stopped</a> - The job's stop time.
--   
--   <a>$sel:type':Job'</a>, <a>job_type</a> - The job's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Job'</a>, <a>job_created</a> - When the job was
--   created.
--   
--   <a>$sel:deviceMinutes:Job'</a>, <a>job_deviceMinutes</a> - Represents
--   the total (metered or unmetered) minutes used by the job.
newJob :: Job

-- | The job's result counters.
job_counters :: Lens' Job (Maybe Counters)

-- | The job's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
job_status :: Lens' Job (Maybe ExecutionStatus)

-- | The job's start time.
job_started :: Lens' Job (Maybe UTCTime)

-- | The job's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
job_result :: Lens' Job (Maybe ExecutionResult)

-- | A message about the job's result.
job_message :: Lens' Job (Maybe Text)

-- | The device (phone or tablet).
job_device :: Lens' Job (Maybe Device)

-- | The job's ARN.
job_arn :: Lens' Job (Maybe Text)

-- | This value is set to true if video capture is enabled. Otherwise, it
--   is set to false.
job_videoCapture :: Lens' Job (Maybe Bool)

-- | The endpoint for streaming device video.
job_videoEndpoint :: Lens' Job (Maybe Text)

-- | The job's name.
job_name :: Lens' Job (Maybe Text)

-- | The ARN of the instance.
job_instanceArn :: Lens' Job (Maybe Text)

-- | The job's stop time.
job_stopped :: Lens' Job (Maybe UTCTime)

-- | The job's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
job_type :: Lens' Job (Maybe TestType)

-- | When the job was created.
job_created :: Lens' Job (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the job.
job_deviceMinutes :: Lens' Job (Maybe DeviceMinutes)

-- | Represents a latitude and longitude pair, expressed in geographic
--   coordinate system degrees (for example, 47.6204, -122.3491).
--   
--   Elevation is currently not supported.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Double -> Double -> Location

-- | The latitude.
[$sel:latitude:Location'] :: Location -> Double

-- | The longitude.
[$sel:longitude:Location'] :: Location -> Double

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:latitude:Location'</a>, <a>location_latitude</a> - The
--   latitude.
--   
--   <a>$sel:longitude:Location'</a>, <a>location_longitude</a> - The
--   longitude.
newLocation :: Double -> Double -> Location

-- | The latitude.
location_latitude :: Lens' Location Double

-- | The longitude.
location_longitude :: Lens' Location Double

-- | A number that represents the monetary amount for an offering or
--   transaction.
--   
--   <i>See:</i> <a>newMonetaryAmount</a> smart constructor.
data MonetaryAmount
MonetaryAmount' :: Maybe Double -> Maybe CurrencyCode -> MonetaryAmount

-- | The numerical amount of an offering or transaction.
[$sel:amount:MonetaryAmount'] :: MonetaryAmount -> Maybe Double

-- | The currency code of a monetary amount. For example, <tt>USD</tt>
--   means U.S. dollars.
[$sel:currencyCode:MonetaryAmount'] :: MonetaryAmount -> Maybe CurrencyCode

-- | Create a value of <a>MonetaryAmount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amount:MonetaryAmount'</a>, <a>monetaryAmount_amount</a> - The
--   numerical amount of an offering or transaction.
--   
--   <a>$sel:currencyCode:MonetaryAmount'</a>,
--   <a>monetaryAmount_currencyCode</a> - The currency code of a monetary
--   amount. For example, <tt>USD</tt> means U.S. dollars.
newMonetaryAmount :: MonetaryAmount

-- | The numerical amount of an offering or transaction.
monetaryAmount_amount :: Lens' MonetaryAmount (Maybe Double)

-- | The currency code of a monetary amount. For example, <tt>USD</tt>
--   means U.S. dollars.
monetaryAmount_currencyCode :: Lens' MonetaryAmount (Maybe CurrencyCode)

-- | An array of settings that describes characteristics of a network
--   profile.
--   
--   <i>See:</i> <a>newNetworkProfile</a> smart constructor.
data NetworkProfile
NetworkProfile' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe NetworkProfileType -> NetworkProfile

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
[$sel:uplinkJitterMs:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
[$sel:downlinkBandwidthBits:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
[$sel:downlinkDelayMs:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
[$sel:downlinkJitterMs:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
[$sel:uplinkLossPercent:NetworkProfile'] :: NetworkProfile -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the network profile.
[$sel:arn:NetworkProfile'] :: NetworkProfile -> Maybe Text

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
[$sel:downlinkLossPercent:NetworkProfile'] :: NetworkProfile -> Maybe Natural

-- | The name of the network profile.
[$sel:name:NetworkProfile'] :: NetworkProfile -> Maybe Text

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
[$sel:uplinkBandwidthBits:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
[$sel:uplinkDelayMs:NetworkProfile'] :: NetworkProfile -> Maybe Integer

-- | The description of the network profile.
[$sel:description:NetworkProfile'] :: NetworkProfile -> Maybe Text

-- | The type of network profile. Valid values are listed here.
[$sel:type':NetworkProfile'] :: NetworkProfile -> Maybe NetworkProfileType

-- | Create a value of <a>NetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uplinkJitterMs:NetworkProfile'</a>,
--   <a>networkProfile_uplinkJitterMs</a> - Time variation in the delay of
--   received packets in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkBandwidthBits:NetworkProfile'</a>,
--   <a>networkProfile_downlinkBandwidthBits</a> - The data throughput rate
--   in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:downlinkDelayMs:NetworkProfile'</a>,
--   <a>networkProfile_downlinkDelayMs</a> - Delay time for all packets to
--   destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkJitterMs:NetworkProfile'</a>,
--   <a>networkProfile_downlinkJitterMs</a> - Time variation in the delay
--   of received packets in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:uplinkLossPercent:NetworkProfile'</a>,
--   <a>networkProfile_uplinkLossPercent</a> - Proportion of transmitted
--   packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:arn:NetworkProfile'</a>, <a>networkProfile_arn</a> - The
--   Amazon Resource Name (ARN) of the network profile.
--   
--   <a>$sel:downlinkLossPercent:NetworkProfile'</a>,
--   <a>networkProfile_downlinkLossPercent</a> - Proportion of received
--   packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:name:NetworkProfile'</a>, <a>networkProfile_name</a> - The
--   name of the network profile.
--   
--   <a>$sel:uplinkBandwidthBits:NetworkProfile'</a>,
--   <a>networkProfile_uplinkBandwidthBits</a> - The data throughput rate
--   in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:uplinkDelayMs:NetworkProfile'</a>,
--   <a>networkProfile_uplinkDelayMs</a> - Delay time for all packets to
--   destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:description:NetworkProfile'</a>,
--   <a>networkProfile_description</a> - The description of the network
--   profile.
--   
--   <a>$sel:type':NetworkProfile'</a>, <a>networkProfile_type</a> - The
--   type of network profile. Valid values are listed here.
newNetworkProfile :: NetworkProfile

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
networkProfile_uplinkJitterMs :: Lens' NetworkProfile (Maybe Integer)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
networkProfile_downlinkBandwidthBits :: Lens' NetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
networkProfile_downlinkDelayMs :: Lens' NetworkProfile (Maybe Integer)

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
networkProfile_downlinkJitterMs :: Lens' NetworkProfile (Maybe Integer)

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
networkProfile_uplinkLossPercent :: Lens' NetworkProfile (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the network profile.
networkProfile_arn :: Lens' NetworkProfile (Maybe Text)

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
networkProfile_downlinkLossPercent :: Lens' NetworkProfile (Maybe Natural)

-- | The name of the network profile.
networkProfile_name :: Lens' NetworkProfile (Maybe Text)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
networkProfile_uplinkBandwidthBits :: Lens' NetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
networkProfile_uplinkDelayMs :: Lens' NetworkProfile (Maybe Integer)

-- | The description of the network profile.
networkProfile_description :: Lens' NetworkProfile (Maybe Text)

-- | The type of network profile. Valid values are listed here.
networkProfile_type :: Lens' NetworkProfile (Maybe NetworkProfileType)

-- | Represents the metadata of a device offering.
--   
--   <i>See:</i> <a>newOffering</a> smart constructor.
data Offering
Offering' :: Maybe DevicePlatform -> Maybe Text -> Maybe Text -> Maybe OfferingType -> Maybe [RecurringCharge] -> Offering

-- | The platform of the device (for example, <tt>ANDROID</tt> or
--   <tt>IOS</tt>).
[$sel:platform:Offering'] :: Offering -> Maybe DevicePlatform

-- | The ID that corresponds to a device offering.
[$sel:id:Offering'] :: Offering -> Maybe Text

-- | A string that describes the offering.
[$sel:description:Offering'] :: Offering -> Maybe Text

-- | The type of offering (for example, <tt>RECURRING</tt>) for a device.
[$sel:type':Offering'] :: Offering -> Maybe OfferingType

-- | Specifies whether there are recurring charges for the offering.
[$sel:recurringCharges:Offering'] :: Offering -> Maybe [RecurringCharge]

-- | Create a value of <a>Offering</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Offering'</a>, <a>offering_platform</a> - The
--   platform of the device (for example, <tt>ANDROID</tt> or
--   <tt>IOS</tt>).
--   
--   <a>$sel:id:Offering'</a>, <a>offering_id</a> - The ID that corresponds
--   to a device offering.
--   
--   <a>$sel:description:Offering'</a>, <a>offering_description</a> - A
--   string that describes the offering.
--   
--   <a>$sel:type':Offering'</a>, <a>offering_type</a> - The type of
--   offering (for example, <tt>RECURRING</tt>) for a device.
--   
--   <a>$sel:recurringCharges:Offering'</a>,
--   <a>offering_recurringCharges</a> - Specifies whether there are
--   recurring charges for the offering.
newOffering :: Offering

-- | The platform of the device (for example, <tt>ANDROID</tt> or
--   <tt>IOS</tt>).
offering_platform :: Lens' Offering (Maybe DevicePlatform)

-- | The ID that corresponds to a device offering.
offering_id :: Lens' Offering (Maybe Text)

-- | A string that describes the offering.
offering_description :: Lens' Offering (Maybe Text)

-- | The type of offering (for example, <tt>RECURRING</tt>) for a device.
offering_type :: Lens' Offering (Maybe OfferingType)

-- | Specifies whether there are recurring charges for the offering.
offering_recurringCharges :: Lens' Offering (Maybe [RecurringCharge])

-- | Represents information about an offering promotion.
--   
--   <i>See:</i> <a>newOfferingPromotion</a> smart constructor.
data OfferingPromotion
OfferingPromotion' :: Maybe Text -> Maybe Text -> OfferingPromotion

-- | The ID of the offering promotion.
[$sel:id:OfferingPromotion'] :: OfferingPromotion -> Maybe Text

-- | A string that describes the offering promotion.
[$sel:description:OfferingPromotion'] :: OfferingPromotion -> Maybe Text

-- | Create a value of <a>OfferingPromotion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:OfferingPromotion'</a>, <a>offeringPromotion_id</a> - The
--   ID of the offering promotion.
--   
--   <a>$sel:description:OfferingPromotion'</a>,
--   <a>offeringPromotion_description</a> - A string that describes the
--   offering promotion.
newOfferingPromotion :: OfferingPromotion

-- | The ID of the offering promotion.
offeringPromotion_id :: Lens' OfferingPromotion (Maybe Text)

-- | A string that describes the offering promotion.
offeringPromotion_description :: Lens' OfferingPromotion (Maybe Text)

-- | The status of the offering.
--   
--   <i>See:</i> <a>newOfferingStatus</a> smart constructor.
data OfferingStatus
OfferingStatus' :: Maybe Int -> Maybe Offering -> Maybe POSIX -> Maybe OfferingTransactionType -> OfferingStatus

-- | The number of available devices in the offering.
[$sel:quantity:OfferingStatus'] :: OfferingStatus -> Maybe Int

-- | Represents the metadata of an offering status.
[$sel:offering:OfferingStatus'] :: OfferingStatus -> Maybe Offering

-- | The date on which the offering is effective.
[$sel:effectiveOn:OfferingStatus'] :: OfferingStatus -> Maybe POSIX

-- | The type specified for the offering status.
[$sel:type':OfferingStatus'] :: OfferingStatus -> Maybe OfferingTransactionType

-- | Create a value of <a>OfferingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quantity:OfferingStatus'</a>, <a>offeringStatus_quantity</a> -
--   The number of available devices in the offering.
--   
--   <a>$sel:offering:OfferingStatus'</a>, <a>offeringStatus_offering</a> -
--   Represents the metadata of an offering status.
--   
--   <a>$sel:effectiveOn:OfferingStatus'</a>,
--   <a>offeringStatus_effectiveOn</a> - The date on which the offering is
--   effective.
--   
--   <a>$sel:type':OfferingStatus'</a>, <a>offeringStatus_type</a> - The
--   type specified for the offering status.
newOfferingStatus :: OfferingStatus

-- | The number of available devices in the offering.
offeringStatus_quantity :: Lens' OfferingStatus (Maybe Int)

-- | Represents the metadata of an offering status.
offeringStatus_offering :: Lens' OfferingStatus (Maybe Offering)

-- | The date on which the offering is effective.
offeringStatus_effectiveOn :: Lens' OfferingStatus (Maybe UTCTime)

-- | The type specified for the offering status.
offeringStatus_type :: Lens' OfferingStatus (Maybe OfferingTransactionType)

-- | Represents the metadata of an offering transaction.
--   
--   <i>See:</i> <a>newOfferingTransaction</a> smart constructor.
data OfferingTransaction
OfferingTransaction' :: Maybe OfferingStatus -> Maybe POSIX -> Maybe MonetaryAmount -> Maybe Text -> Maybe Text -> OfferingTransaction

-- | The status of an offering transaction.
[$sel:offeringStatus:OfferingTransaction'] :: OfferingTransaction -> Maybe OfferingStatus

-- | The date on which an offering transaction was created.
[$sel:createdOn:OfferingTransaction'] :: OfferingTransaction -> Maybe POSIX

-- | The cost of an offering transaction.
[$sel:cost:OfferingTransaction'] :: OfferingTransaction -> Maybe MonetaryAmount

-- | The transaction ID of the offering transaction.
[$sel:transactionId:OfferingTransaction'] :: OfferingTransaction -> Maybe Text

-- | The ID that corresponds to a device offering promotion.
[$sel:offeringPromotionId:OfferingTransaction'] :: OfferingTransaction -> Maybe Text

-- | Create a value of <a>OfferingTransaction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringStatus:OfferingTransaction'</a>,
--   <a>offeringTransaction_offeringStatus</a> - The status of an offering
--   transaction.
--   
--   <a>$sel:createdOn:OfferingTransaction'</a>,
--   <a>offeringTransaction_createdOn</a> - The date on which an offering
--   transaction was created.
--   
--   <a>$sel:cost:OfferingTransaction'</a>, <a>offeringTransaction_cost</a>
--   - The cost of an offering transaction.
--   
--   <a>$sel:transactionId:OfferingTransaction'</a>,
--   <a>offeringTransaction_transactionId</a> - The transaction ID of the
--   offering transaction.
--   
--   <a>$sel:offeringPromotionId:OfferingTransaction'</a>,
--   <a>offeringTransaction_offeringPromotionId</a> - The ID that
--   corresponds to a device offering promotion.
newOfferingTransaction :: OfferingTransaction

-- | The status of an offering transaction.
offeringTransaction_offeringStatus :: Lens' OfferingTransaction (Maybe OfferingStatus)

-- | The date on which an offering transaction was created.
offeringTransaction_createdOn :: Lens' OfferingTransaction (Maybe UTCTime)

-- | The cost of an offering transaction.
offeringTransaction_cost :: Lens' OfferingTransaction (Maybe MonetaryAmount)

-- | The transaction ID of the offering transaction.
offeringTransaction_transactionId :: Lens' OfferingTransaction (Maybe Text)

-- | The ID that corresponds to a device offering promotion.
offeringTransaction_offeringPromotionId :: Lens' OfferingTransaction (Maybe Text)

-- | Represents a specific warning or failure.
--   
--   <i>See:</i> <a>newProblem</a> smart constructor.
data Problem
Problem' :: Maybe ProblemDetail -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe ProblemDetail -> Maybe ProblemDetail -> Maybe ProblemDetail -> Problem

-- | Information about the associated job.
[$sel:job:Problem'] :: Problem -> Maybe ProblemDetail

-- | The problem's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Problem'] :: Problem -> Maybe ExecutionResult

-- | A message about the problem's result.
[$sel:message:Problem'] :: Problem -> Maybe Text

-- | Information about the associated device.
[$sel:device:Problem'] :: Problem -> Maybe Device

-- | Information about the associated run.
[$sel:run:Problem'] :: Problem -> Maybe ProblemDetail

-- | Information about the associated suite.
[$sel:suite:Problem'] :: Problem -> Maybe ProblemDetail

-- | Information about the associated test.
[$sel:test:Problem'] :: Problem -> Maybe ProblemDetail

-- | Create a value of <a>Problem</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:Problem'</a>, <a>problem_job</a> - Information about the
--   associated job.
--   
--   <a>$sel:result:Problem'</a>, <a>problem_result</a> - The problem's
--   result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Problem'</a>, <a>problem_message</a> - A message about
--   the problem's result.
--   
--   <a>$sel:device:Problem'</a>, <a>problem_device</a> - Information about
--   the associated device.
--   
--   <a>$sel:run:Problem'</a>, <a>problem_run</a> - Information about the
--   associated run.
--   
--   <a>$sel:suite:Problem'</a>, <a>problem_suite</a> - Information about
--   the associated suite.
--   
--   <a>$sel:test:Problem'</a>, <a>problem_test</a> - Information about the
--   associated test.
newProblem :: Problem

-- | Information about the associated job.
problem_job :: Lens' Problem (Maybe ProblemDetail)

-- | The problem's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
problem_result :: Lens' Problem (Maybe ExecutionResult)

-- | A message about the problem's result.
problem_message :: Lens' Problem (Maybe Text)

-- | Information about the associated device.
problem_device :: Lens' Problem (Maybe Device)

-- | Information about the associated run.
problem_run :: Lens' Problem (Maybe ProblemDetail)

-- | Information about the associated suite.
problem_suite :: Lens' Problem (Maybe ProblemDetail)

-- | Information about the associated test.
problem_test :: Lens' Problem (Maybe ProblemDetail)

-- | Information about a problem detail.
--   
--   <i>See:</i> <a>newProblemDetail</a> smart constructor.
data ProblemDetail
ProblemDetail' :: Maybe Text -> Maybe Text -> ProblemDetail

-- | The problem detail's ARN.
[$sel:arn:ProblemDetail'] :: ProblemDetail -> Maybe Text

-- | The problem detail's name.
[$sel:name:ProblemDetail'] :: ProblemDetail -> Maybe Text

-- | Create a value of <a>ProblemDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProblemDetail'</a>, <a>problemDetail_arn</a> - The problem
--   detail's ARN.
--   
--   <a>$sel:name:ProblemDetail'</a>, <a>problemDetail_name</a> - The
--   problem detail's name.
newProblemDetail :: ProblemDetail

-- | The problem detail's ARN.
problemDetail_arn :: Lens' ProblemDetail (Maybe Text)

-- | The problem detail's name.
problemDetail_name :: Lens' ProblemDetail (Maybe Text)

-- | Represents an operating-system neutral workspace for running and
--   managing tests.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Project

-- | The project's ARN.
[$sel:arn:Project'] :: Project -> Maybe Text

-- | The project's name.
[$sel:name:Project'] :: Project -> Maybe Text

-- | When the project was created.
[$sel:created:Project'] :: Project -> Maybe POSIX

-- | The default number of minutes (at the project level) a test run
--   executes before it times out. The default value is 150 minutes.
[$sel:defaultJobTimeoutMinutes:Project'] :: Project -> Maybe Int

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Project'</a>, <a>project_arn</a> - The project's ARN.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The project's name.
--   
--   <a>$sel:created:Project'</a>, <a>project_created</a> - When the
--   project was created.
--   
--   <a>$sel:defaultJobTimeoutMinutes:Project'</a>,
--   <a>project_defaultJobTimeoutMinutes</a> - The default number of
--   minutes (at the project level) a test run executes before it times
--   out. The default value is 150 minutes.
newProject :: Project

-- | The project's ARN.
project_arn :: Lens' Project (Maybe Text)

-- | The project's name.
project_name :: Lens' Project (Maybe Text)

-- | When the project was created.
project_created :: Lens' Project (Maybe UTCTime)

-- | The default number of minutes (at the project level) a test run
--   executes before it times out. The default value is 150 minutes.
project_defaultJobTimeoutMinutes :: Lens' Project (Maybe Int)

-- | Represents the set of radios and their states on a device. Examples of
--   radios include Wi-Fi, GPS, Bluetooth, and NFC.
--   
--   <i>See:</i> <a>newRadios</a> smart constructor.
data Radios
Radios' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Radios

-- | True if GPS is enabled at the beginning of the test. Otherwise, false.
[$sel:gps:Radios'] :: Radios -> Maybe Bool

-- | True if Wi-Fi is enabled at the beginning of the test. Otherwise,
--   false.
[$sel:wifi:Radios'] :: Radios -> Maybe Bool

-- | True if Bluetooth is enabled at the beginning of the test. Otherwise,
--   false.
[$sel:bluetooth:Radios'] :: Radios -> Maybe Bool

-- | True if NFC is enabled at the beginning of the test. Otherwise, false.
[$sel:nfc:Radios'] :: Radios -> Maybe Bool

-- | Create a value of <a>Radios</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gps:Radios'</a>, <a>radios_gps</a> - True if GPS is enabled at
--   the beginning of the test. Otherwise, false.
--   
--   <a>$sel:wifi:Radios'</a>, <a>radios_wifi</a> - True if Wi-Fi is
--   enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:bluetooth:Radios'</a>, <a>radios_bluetooth</a> - True if
--   Bluetooth is enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:nfc:Radios'</a>, <a>radios_nfc</a> - True if NFC is enabled at
--   the beginning of the test. Otherwise, false.
newRadios :: Radios

-- | True if GPS is enabled at the beginning of the test. Otherwise, false.
radios_gps :: Lens' Radios (Maybe Bool)

-- | True if Wi-Fi is enabled at the beginning of the test. Otherwise,
--   false.
radios_wifi :: Lens' Radios (Maybe Bool)

-- | True if Bluetooth is enabled at the beginning of the test. Otherwise,
--   false.
radios_bluetooth :: Lens' Radios (Maybe Bool)

-- | True if NFC is enabled at the beginning of the test. Otherwise, false.
radios_nfc :: Lens' Radios (Maybe Bool)

-- | Specifies whether charges for devices are recurring.
--   
--   <i>See:</i> <a>newRecurringCharge</a> smart constructor.
data RecurringCharge
RecurringCharge' :: Maybe MonetaryAmount -> Maybe RecurringChargeFrequency -> RecurringCharge

-- | The cost of the recurring charge.
[$sel:cost:RecurringCharge'] :: RecurringCharge -> Maybe MonetaryAmount

-- | The frequency in which charges recur.
[$sel:frequency:RecurringCharge'] :: RecurringCharge -> Maybe RecurringChargeFrequency

-- | Create a value of <a>RecurringCharge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cost:RecurringCharge'</a>, <a>recurringCharge_cost</a> - The
--   cost of the recurring charge.
--   
--   <a>$sel:frequency:RecurringCharge'</a>,
--   <a>recurringCharge_frequency</a> - The frequency in which charges
--   recur.
newRecurringCharge :: RecurringCharge

-- | The cost of the recurring charge.
recurringCharge_cost :: Lens' RecurringCharge (Maybe MonetaryAmount)

-- | The frequency in which charges recur.
recurringCharge_frequency :: Lens' RecurringCharge (Maybe RecurringChargeFrequency)

-- | Represents information about the remote access session.
--   
--   <i>See:</i> <a>newRemoteAccessSession</a> smart constructor.
data RemoteAccessSession
RemoteAccessSession' :: Maybe Text -> Maybe ExecutionStatus -> Maybe Text -> Maybe InteractionMode -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe BillingMethod -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe DeviceMinutes -> Maybe Text -> RemoteAccessSession

-- | Unique device identifier for the remote device. Only returned if
--   remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:deviceUdid:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The status of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PENDING_CONCURRENCY.</li>
--   <li>PENDING_DEVICE.</li>
--   <li>PROCESSING.</li>
--   <li>SCHEDULING.</li>
--   <li>PREPARING.</li>
--   <li>RUNNING.</li>
--   <li>COMPLETED.</li>
--   <li>STOPPING.</li>
--   </ul>
[$sel:status:RemoteAccessSession'] :: RemoteAccessSession -> Maybe ExecutionStatus

-- | Unique identifier of your client for the remote access session. Only
--   returned if remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:clientId:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The interaction mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
[$sel:interactionMode:RemoteAccessSession'] :: RemoteAccessSession -> Maybe InteractionMode

-- | The date and time the remote access session was started.
[$sel:started:RemoteAccessSession'] :: RemoteAccessSession -> Maybe POSIX

-- | The result of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PASSED.</li>
--   <li>WARNED.</li>
--   <li>FAILED.</li>
--   <li>SKIPPED.</li>
--   <li>ERRORED.</li>
--   <li>STOPPED.</li>
--   </ul>
[$sel:result:RemoteAccessSession'] :: RemoteAccessSession -> Maybe ExecutionResult

-- | A message about the remote access session.
[$sel:message:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The device (phone or tablet) used in the remote access session.
[$sel:device:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Device

-- | The Amazon Resource Name (ARN) of the remote access session.
[$sel:arn:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The name of the remote access session.
[$sel:name:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | This flag is set to <tt>true</tt> if remote recording is enabled for
--   the remote access session.
[$sel:remoteRecordEnabled:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Bool

-- | The ARN of the instance.
[$sel:instanceArn:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The billing method of the remote access session. Possible values
--   include <tt>METERED</tt> or <tt>UNMETERED</tt>. For more information
--   about metered devices, see <a>AWS Device Farm terminology</a>.
[$sel:billingMethod:RemoteAccessSession'] :: RemoteAccessSession -> Maybe BillingMethod

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
[$sel:skipAppResign:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Bool

-- | The date and time the remote access session was stopped.
[$sel:stopped:RemoteAccessSession'] :: RemoteAccessSession -> Maybe POSIX

-- | IP address of the EC2 host where you need to connect to remotely debug
--   devices. Only returned if remote debugging is enabled for the remote
--   access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:hostAddress:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | The endpoint for the remote access sesssion.
[$sel:endpoint:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:remoteDebugEnabled:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Bool

-- | The date and time the remote access session was created.
[$sel:created:RemoteAccessSession'] :: RemoteAccessSession -> Maybe POSIX

-- | The number of minutes a device is used in a remote access session
--   (including setup and teardown minutes).
[$sel:deviceMinutes:RemoteAccessSession'] :: RemoteAccessSession -> Maybe DeviceMinutes

-- | The ARN for the app to be recorded in the remote access session.
[$sel:remoteRecordAppArn:RemoteAccessSession'] :: RemoteAccessSession -> Maybe Text

-- | Create a value of <a>RemoteAccessSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceUdid:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_deviceUdid</a> - Unique device identifier for
--   the remote device. Only returned if remote debugging is enabled for
--   the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:status:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_status</a> - The status of the remote access
--   session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PENDING_CONCURRENCY.</li>
--   <li>PENDING_DEVICE.</li>
--   <li>PROCESSING.</li>
--   <li>SCHEDULING.</li>
--   <li>PREPARING.</li>
--   <li>RUNNING.</li>
--   <li>COMPLETED.</li>
--   <li>STOPPING.</li>
--   </ul>
--   
--   <a>$sel:clientId:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_clientId</a> - Unique identifier of your client
--   for the remote access session. Only returned if remote debugging is
--   enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:interactionMode:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_interactionMode</a> - The interaction mode of
--   the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
--   
--   <a>$sel:started:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_started</a> - The date and time the remote
--   access session was started.
--   
--   <a>$sel:result:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_result</a> - The result of the remote access
--   session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PASSED.</li>
--   <li>WARNED.</li>
--   <li>FAILED.</li>
--   <li>SKIPPED.</li>
--   <li>ERRORED.</li>
--   <li>STOPPED.</li>
--   </ul>
--   
--   <a>$sel:message:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_message</a> - A message about the remote access
--   session.
--   
--   <a>$sel:device:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_device</a> - The device (phone or tablet) used
--   in the remote access session.
--   
--   <a>$sel:arn:RemoteAccessSession'</a>, <a>remoteAccessSession_arn</a> -
--   The Amazon Resource Name (ARN) of the remote access session.
--   
--   <a>$sel:name:RemoteAccessSession'</a>, <a>remoteAccessSession_name</a>
--   - The name of the remote access session.
--   
--   <a>$sel:remoteRecordEnabled:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteRecordEnabled</a> - This flag is set to
--   <tt>true</tt> if remote recording is enabled for the remote access
--   session.
--   
--   <a>$sel:instanceArn:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_instanceArn</a> - The ARN of the instance.
--   
--   <a>$sel:billingMethod:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_billingMethod</a> - The billing method of the
--   remote access session. Possible values include <tt>METERED</tt> or
--   <tt>UNMETERED</tt>. For more information about metered devices, see
--   <a>AWS Device Farm terminology</a>.
--   
--   <a>$sel:skipAppResign:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_skipAppResign</a> - When set to <tt>true</tt>,
--   for private devices, Device Farm does not sign your app again. For
--   public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:stopped:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_stopped</a> - The date and time the remote
--   access session was stopped.
--   
--   <a>$sel:hostAddress:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_hostAddress</a> - IP address of the EC2 host
--   where you need to connect to remotely debug devices. Only returned if
--   remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:endpoint:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_endpoint</a> - The endpoint for the remote
--   access sesssion.
--   
--   <a>$sel:remoteDebugEnabled:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteDebugEnabled</a> - This flag is set to
--   <tt>true</tt> if remote debugging is enabled for the remote access
--   session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:created:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_created</a> - The date and time the remote
--   access session was created.
--   
--   <a>$sel:deviceMinutes:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_deviceMinutes</a> - The number of minutes a
--   device is used in a remote access session (including setup and
--   teardown minutes).
--   
--   <a>$sel:remoteRecordAppArn:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteRecordAppArn</a> - The ARN for the app to
--   be recorded in the remote access session.
newRemoteAccessSession :: RemoteAccessSession

-- | Unique device identifier for the remote device. Only returned if
--   remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_deviceUdid :: Lens' RemoteAccessSession (Maybe Text)

-- | The status of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PENDING_CONCURRENCY.</li>
--   <li>PENDING_DEVICE.</li>
--   <li>PROCESSING.</li>
--   <li>SCHEDULING.</li>
--   <li>PREPARING.</li>
--   <li>RUNNING.</li>
--   <li>COMPLETED.</li>
--   <li>STOPPING.</li>
--   </ul>
remoteAccessSession_status :: Lens' RemoteAccessSession (Maybe ExecutionStatus)

-- | Unique identifier of your client for the remote access session. Only
--   returned if remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_clientId :: Lens' RemoteAccessSession (Maybe Text)

-- | The interaction mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
remoteAccessSession_interactionMode :: Lens' RemoteAccessSession (Maybe InteractionMode)

-- | The date and time the remote access session was started.
remoteAccessSession_started :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | The result of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PASSED.</li>
--   <li>WARNED.</li>
--   <li>FAILED.</li>
--   <li>SKIPPED.</li>
--   <li>ERRORED.</li>
--   <li>STOPPED.</li>
--   </ul>
remoteAccessSession_result :: Lens' RemoteAccessSession (Maybe ExecutionResult)

-- | A message about the remote access session.
remoteAccessSession_message :: Lens' RemoteAccessSession (Maybe Text)

-- | The device (phone or tablet) used in the remote access session.
remoteAccessSession_device :: Lens' RemoteAccessSession (Maybe Device)

-- | The Amazon Resource Name (ARN) of the remote access session.
remoteAccessSession_arn :: Lens' RemoteAccessSession (Maybe Text)

-- | The name of the remote access session.
remoteAccessSession_name :: Lens' RemoteAccessSession (Maybe Text)

-- | This flag is set to <tt>true</tt> if remote recording is enabled for
--   the remote access session.
remoteAccessSession_remoteRecordEnabled :: Lens' RemoteAccessSession (Maybe Bool)

-- | The ARN of the instance.
remoteAccessSession_instanceArn :: Lens' RemoteAccessSession (Maybe Text)

-- | The billing method of the remote access session. Possible values
--   include <tt>METERED</tt> or <tt>UNMETERED</tt>. For more information
--   about metered devices, see <a>AWS Device Farm terminology</a>.
remoteAccessSession_billingMethod :: Lens' RemoteAccessSession (Maybe BillingMethod)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
remoteAccessSession_skipAppResign :: Lens' RemoteAccessSession (Maybe Bool)

-- | The date and time the remote access session was stopped.
remoteAccessSession_stopped :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | IP address of the EC2 host where you need to connect to remotely debug
--   devices. Only returned if remote debugging is enabled for the remote
--   access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_hostAddress :: Lens' RemoteAccessSession (Maybe Text)

-- | The endpoint for the remote access sesssion.
remoteAccessSession_endpoint :: Lens' RemoteAccessSession (Maybe Text)

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_remoteDebugEnabled :: Lens' RemoteAccessSession (Maybe Bool)

-- | The date and time the remote access session was created.
remoteAccessSession_created :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | The number of minutes a device is used in a remote access session
--   (including setup and teardown minutes).
remoteAccessSession_deviceMinutes :: Lens' RemoteAccessSession (Maybe DeviceMinutes)

-- | The ARN for the app to be recorded in the remote access session.
remoteAccessSession_remoteRecordAppArn :: Lens' RemoteAccessSession (Maybe Text)

-- | Represents the screen resolution of a device in height and width,
--   expressed in pixels.
--   
--   <i>See:</i> <a>newResolution</a> smart constructor.
data Resolution
Resolution' :: Maybe Int -> Maybe Int -> Resolution

-- | The screen resolution's height, expressed in pixels.
[$sel:height:Resolution'] :: Resolution -> Maybe Int

-- | The screen resolution's width, expressed in pixels.
[$sel:width:Resolution'] :: Resolution -> Maybe Int

-- | Create a value of <a>Resolution</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:height:Resolution'</a>, <a>resolution_height</a> - The screen
--   resolution's height, expressed in pixels.
--   
--   <a>$sel:width:Resolution'</a>, <a>resolution_width</a> - The screen
--   resolution's width, expressed in pixels.
newResolution :: Resolution

-- | The screen resolution's height, expressed in pixels.
resolution_height :: Lens' Resolution (Maybe Int)

-- | The screen resolution's width, expressed in pixels.
resolution_width :: Lens' Resolution (Maybe Int)

-- | Represents a condition for a device pool.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe RuleOperator -> Maybe DeviceAttribute -> Maybe Text -> Rule

-- | Specifies how Device Farm compares the rule's attribute to the value.
--   For the operators that are supported by each attribute, see the
--   attribute descriptions.
[$sel:operator:Rule'] :: Rule -> Maybe RuleOperator

-- | The rule's stringified attribute. For example, specify the value as
--   <tt>"\"abc\""</tt>.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>APPIUM_VERSION</i> The Appium version for the test.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>.Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model, such as Apple iPad Air 2 or Google
--   Pixel.Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   </ul>
[$sel:attribute:Rule'] :: Rule -> Maybe DeviceAttribute

-- | The rule's value.
[$sel:value:Rule'] :: Rule -> Maybe Text

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:Rule'</a>, <a>rule_operator</a> - Specifies how
--   Device Farm compares the rule's attribute to the value. For the
--   operators that are supported by each attribute, see the attribute
--   descriptions.
--   
--   <a>$sel:attribute:Rule'</a>, <a>rule_attribute</a> - The rule's
--   stringified attribute. For example, specify the value as
--   <tt>"\"abc\""</tt>.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>APPIUM_VERSION</i> The Appium version for the test.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>.Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model, such as Apple iPad Air 2 or Google
--   Pixel.Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   </ul>
--   
--   <a>$sel:value:Rule'</a>, <a>rule_value</a> - The rule's value.
newRule :: Rule

-- | Specifies how Device Farm compares the rule's attribute to the value.
--   For the operators that are supported by each attribute, see the
--   attribute descriptions.
rule_operator :: Lens' Rule (Maybe RuleOperator)

-- | The rule's stringified attribute. For example, specify the value as
--   <tt>"\"abc\""</tt>.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>APPIUM_VERSION</i> The Appium version for the test.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>.Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model, such as Apple iPad Air 2 or Google
--   Pixel.Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   </ul>
rule_attribute :: Lens' Rule (Maybe DeviceAttribute)

-- | The rule's value.
rule_value :: Lens' Rule (Maybe Text)

-- | Represents a test run on a set of devices with a given app package,
--   test parameters, and so on.
--   
--   <i>See:</i> <a>newRun</a> smart constructor.
data Run
Run' :: Maybe DevicePlatform -> Maybe Counters -> Maybe Int -> Maybe Int -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe DeviceSelectionResult -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe NetworkProfile -> Maybe Text -> Maybe Radios -> Maybe Text -> Maybe Text -> Maybe BillingMethod -> Maybe ExecutionResultCode -> Maybe Bool -> Maybe CustomerArtifactPaths -> Maybe Int -> Maybe Int -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Maybe Location -> Maybe Text -> Run

-- | The run's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
[$sel:platform:Run'] :: Run -> Maybe DevicePlatform

-- | The run's result counters.
[$sel:counters:Run'] :: Run -> Maybe Counters

-- | For fuzz tests, this is a seed to use for randomizing the UI fuzz
--   test. Using the same seed value between tests ensures identical event
--   sequences.
[$sel:seed:Run'] :: Run -> Maybe Int

-- | For fuzz tests, this is the number of events, between 1 and 10000,
--   that the UI fuzz test should perform.
[$sel:eventCount:Run'] :: Run -> Maybe Int

-- | The run's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
[$sel:status:Run'] :: Run -> Maybe ExecutionStatus

-- | The run's start time.
[$sel:started:Run'] :: Run -> Maybe POSIX

-- | The results of a device filter used to select the devices for a test
--   run.
[$sel:deviceSelectionResult:Run'] :: Run -> Maybe DeviceSelectionResult

-- | The run's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Run'] :: Run -> Maybe ExecutionResult

-- | The ARN of the device pool for the run.
[$sel:devicePoolArn:Run'] :: Run -> Maybe Text

-- | The ARN of the YAML-formatted test specification for the run.
[$sel:testSpecArn:Run'] :: Run -> Maybe Text

-- | A message about the run's result.
[$sel:message:Run'] :: Run -> Maybe Text

-- | Information about the locale that is used for the run.
[$sel:locale:Run'] :: Run -> Maybe Text

-- | The network profile being used for a test run.
[$sel:networkProfile:Run'] :: Run -> Maybe NetworkProfile

-- | The run's ARN.
[$sel:arn:Run'] :: Run -> Maybe Text

-- | Information about the radio states for the run.
[$sel:radios:Run'] :: Run -> Maybe Radios

-- | An app to upload or that has been uploaded.
[$sel:appUpload:Run'] :: Run -> Maybe Text

-- | The run's name.
[$sel:name:Run'] :: Run -> Maybe Text

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have unmetered device slots, you must set this to
--   <tt>unmetered</tt> to use them. Otherwise, the run is counted toward
--   metered device minutes.
[$sel:billingMethod:Run'] :: Run -> Maybe BillingMethod

-- | Supporting field for the result field. Set only if <tt>result</tt> is
--   <tt>SKIPPED</tt>. <tt>PARSING_FAILED</tt> if the result is skipped
--   because of test package parsing failure.
[$sel:resultCode:Run'] :: Run -> Maybe ExecutionResultCode

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
[$sel:skipAppResign:Run'] :: Run -> Maybe Bool

-- | Output <tt>CustomerArtifactPaths</tt> object for the test run.
[$sel:customerArtifactPaths:Run'] :: Run -> Maybe CustomerArtifactPaths

-- | The total number of completed jobs.
[$sel:completedJobs:Run'] :: Run -> Maybe Int

-- | The number of minutes the job executes before it times out.
[$sel:jobTimeoutMinutes:Run'] :: Run -> Maybe Int

-- | The run's stop time.
[$sel:stopped:Run'] :: Run -> Maybe POSIX

-- | The total number of jobs for the run.
[$sel:totalJobs:Run'] :: Run -> Maybe Int

-- | The Device Farm console URL for the recording of the run.
[$sel:webUrl:Run'] :: Run -> Maybe Text

-- | The run's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':Run'] :: Run -> Maybe TestType

-- | When the run was created.
[$sel:created:Run'] :: Run -> Maybe POSIX

-- | Represents the total (metered or unmetered) minutes used by the test
--   run.
[$sel:deviceMinutes:Run'] :: Run -> Maybe DeviceMinutes

-- | Information about the location that is used for the run.
[$sel:location:Run'] :: Run -> Maybe Location

-- | Read-only URL for an object in an S3 bucket where you can get the
--   parsing results of the test package. If the test package doesn't
--   parse, the reason why it doesn't parse appears in the file that this
--   URL points to.
[$sel:parsingResultUrl:Run'] :: Run -> Maybe Text

-- | Create a value of <a>Run</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Run'</a>, <a>run_platform</a> - The run's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
--   
--   <a>$sel:counters:Run'</a>, <a>run_counters</a> - The run's result
--   counters.
--   
--   <a>$sel:seed:Run'</a>, <a>run_seed</a> - For fuzz tests, this is a
--   seed to use for randomizing the UI fuzz test. Using the same seed
--   value between tests ensures identical event sequences.
--   
--   <a>$sel:eventCount:Run'</a>, <a>run_eventCount</a> - For fuzz tests,
--   this is the number of events, between 1 and 10000, that the UI fuzz
--   test should perform.
--   
--   <a>$sel:status:Run'</a>, <a>run_status</a> - The run's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Run'</a>, <a>run_started</a> - The run's start time.
--   
--   <a>$sel:deviceSelectionResult:Run'</a>,
--   <a>run_deviceSelectionResult</a> - The results of a device filter used
--   to select the devices for a test run.
--   
--   <a>$sel:result:Run'</a>, <a>run_result</a> - The run's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:devicePoolArn:Run'</a>, <a>run_devicePoolArn</a> - The ARN of
--   the device pool for the run.
--   
--   <a>$sel:testSpecArn:Run'</a>, <a>run_testSpecArn</a> - The ARN of the
--   YAML-formatted test specification for the run.
--   
--   <a>$sel:message:Run'</a>, <a>run_message</a> - A message about the
--   run's result.
--   
--   <a>$sel:locale:Run'</a>, <a>run_locale</a> - Information about the
--   locale that is used for the run.
--   
--   <a>$sel:networkProfile:Run'</a>, <a>run_networkProfile</a> - The
--   network profile being used for a test run.
--   
--   <a>$sel:arn:Run'</a>, <a>run_arn</a> - The run's ARN.
--   
--   <a>$sel:radios:Run'</a>, <a>run_radios</a> - Information about the
--   radio states for the run.
--   
--   <a>$sel:appUpload:Run'</a>, <a>run_appUpload</a> - An app to upload or
--   that has been uploaded.
--   
--   <a>$sel:name:Run'</a>, <a>run_name</a> - The run's name.
--   
--   <a>$sel:billingMethod:Run'</a>, <a>run_billingMethod</a> - Specifies
--   the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have unmetered device slots, you must set this to
--   <tt>unmetered</tt> to use them. Otherwise, the run is counted toward
--   metered device minutes.
--   
--   <a>$sel:resultCode:Run'</a>, <a>run_resultCode</a> - Supporting field
--   for the result field. Set only if <tt>result</tt> is <tt>SKIPPED</tt>.
--   <tt>PARSING_FAILED</tt> if the result is skipped because of test
--   package parsing failure.
--   
--   <a>$sel:skipAppResign:Run'</a>, <a>run_skipAppResign</a> - When set to
--   <tt>true</tt>, for private devices, Device Farm does not sign your app
--   again. For public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:customerArtifactPaths:Run'</a>,
--   <a>run_customerArtifactPaths</a> - Output
--   <tt>CustomerArtifactPaths</tt> object for the test run.
--   
--   <a>$sel:completedJobs:Run'</a>, <a>run_completedJobs</a> - The total
--   number of completed jobs.
--   
--   <a>$sel:jobTimeoutMinutes:Run'</a>, <a>run_jobTimeoutMinutes</a> - The
--   number of minutes the job executes before it times out.
--   
--   <a>$sel:stopped:Run'</a>, <a>run_stopped</a> - The run's stop time.
--   
--   <a>$sel:totalJobs:Run'</a>, <a>run_totalJobs</a> - The total number of
--   jobs for the run.
--   
--   <a>$sel:webUrl:Run'</a>, <a>run_webUrl</a> - The Device Farm console
--   URL for the recording of the run.
--   
--   <a>$sel:type':Run'</a>, <a>run_type</a> - The run's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Run'</a>, <a>run_created</a> - When the run was
--   created.
--   
--   <a>$sel:deviceMinutes:Run'</a>, <a>run_deviceMinutes</a> - Represents
--   the total (metered or unmetered) minutes used by the test run.
--   
--   <a>$sel:location:Run'</a>, <a>run_location</a> - Information about the
--   location that is used for the run.
--   
--   <a>$sel:parsingResultUrl:Run'</a>, <a>run_parsingResultUrl</a> -
--   Read-only URL for an object in an S3 bucket where you can get the
--   parsing results of the test package. If the test package doesn't
--   parse, the reason why it doesn't parse appears in the file that this
--   URL points to.
newRun :: Run

-- | The run's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
run_platform :: Lens' Run (Maybe DevicePlatform)

-- | The run's result counters.
run_counters :: Lens' Run (Maybe Counters)

-- | For fuzz tests, this is a seed to use for randomizing the UI fuzz
--   test. Using the same seed value between tests ensures identical event
--   sequences.
run_seed :: Lens' Run (Maybe Int)

-- | For fuzz tests, this is the number of events, between 1 and 10000,
--   that the UI fuzz test should perform.
run_eventCount :: Lens' Run (Maybe Int)

-- | The run's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
run_status :: Lens' Run (Maybe ExecutionStatus)

-- | The run's start time.
run_started :: Lens' Run (Maybe UTCTime)

-- | The results of a device filter used to select the devices for a test
--   run.
run_deviceSelectionResult :: Lens' Run (Maybe DeviceSelectionResult)

-- | The run's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
run_result :: Lens' Run (Maybe ExecutionResult)

-- | The ARN of the device pool for the run.
run_devicePoolArn :: Lens' Run (Maybe Text)

-- | The ARN of the YAML-formatted test specification for the run.
run_testSpecArn :: Lens' Run (Maybe Text)

-- | A message about the run's result.
run_message :: Lens' Run (Maybe Text)

-- | Information about the locale that is used for the run.
run_locale :: Lens' Run (Maybe Text)

-- | The network profile being used for a test run.
run_networkProfile :: Lens' Run (Maybe NetworkProfile)

-- | The run's ARN.
run_arn :: Lens' Run (Maybe Text)

-- | Information about the radio states for the run.
run_radios :: Lens' Run (Maybe Radios)

-- | An app to upload or that has been uploaded.
run_appUpload :: Lens' Run (Maybe Text)

-- | The run's name.
run_name :: Lens' Run (Maybe Text)

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have unmetered device slots, you must set this to
--   <tt>unmetered</tt> to use them. Otherwise, the run is counted toward
--   metered device minutes.
run_billingMethod :: Lens' Run (Maybe BillingMethod)

-- | Supporting field for the result field. Set only if <tt>result</tt> is
--   <tt>SKIPPED</tt>. <tt>PARSING_FAILED</tt> if the result is skipped
--   because of test package parsing failure.
run_resultCode :: Lens' Run (Maybe ExecutionResultCode)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
run_skipAppResign :: Lens' Run (Maybe Bool)

-- | Output <tt>CustomerArtifactPaths</tt> object for the test run.
run_customerArtifactPaths :: Lens' Run (Maybe CustomerArtifactPaths)

-- | The total number of completed jobs.
run_completedJobs :: Lens' Run (Maybe Int)

-- | The number of minutes the job executes before it times out.
run_jobTimeoutMinutes :: Lens' Run (Maybe Int)

-- | The run's stop time.
run_stopped :: Lens' Run (Maybe UTCTime)

-- | The total number of jobs for the run.
run_totalJobs :: Lens' Run (Maybe Int)

-- | The Device Farm console URL for the recording of the run.
run_webUrl :: Lens' Run (Maybe Text)

-- | The run's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
run_type :: Lens' Run (Maybe TestType)

-- | When the run was created.
run_created :: Lens' Run (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test
--   run.
run_deviceMinutes :: Lens' Run (Maybe DeviceMinutes)

-- | Information about the location that is used for the run.
run_location :: Lens' Run (Maybe Location)

-- | Read-only URL for an object in an S3 bucket where you can get the
--   parsing results of the test package. If the test package doesn't
--   parse, the reason why it doesn't parse appears in the file that this
--   URL points to.
run_parsingResultUrl :: Lens' Run (Maybe Text)

-- | Represents a sample of performance data.
--   
--   <i>See:</i> <a>newSample</a> smart constructor.
data Sample
Sample' :: Maybe Text -> Maybe Text -> Maybe SampleType -> Sample

-- | The sample's ARN.
[$sel:arn:Sample'] :: Sample -> Maybe Text

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the sample's file.
[$sel:url:Sample'] :: Sample -> Maybe Text

-- | The sample's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>CPU: A CPU sample type. This is expressed as the app processing
--   CPU time (including child processes) as reported by process, as a
--   percentage.</li>
--   <li>MEMORY: A memory usage sample type. This is expressed as the total
--   proportional set size of an app process, in kilobytes.</li>
--   <li>NATIVE_AVG_DRAWTIME</li>
--   <li>NATIVE_FPS</li>
--   <li>NATIVE_FRAMES</li>
--   <li>NATIVE_MAX_DRAWTIME</li>
--   <li>NATIVE_MIN_DRAWTIME</li>
--   <li>OPENGL_AVG_DRAWTIME</li>
--   <li>OPENGL_FPS</li>
--   <li>OPENGL_FRAMES</li>
--   <li>OPENGL_MAX_DRAWTIME</li>
--   <li>OPENGL_MIN_DRAWTIME</li>
--   <li>RX</li>
--   <li>RX_RATE: The total number of bytes per second (TCP and UDP) that
--   are sent, by app process.</li>
--   <li>THREADS: A threads sample type. This is expressed as the total
--   number of threads per app process.</li>
--   <li>TX</li>
--   <li>TX_RATE: The total number of bytes per second (TCP and UDP) that
--   are received, by app process.</li>
--   </ul>
[$sel:type':Sample'] :: Sample -> Maybe SampleType

-- | Create a value of <a>Sample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Sample'</a>, <a>sample_arn</a> - The sample's ARN.
--   
--   <a>$sel:url:Sample'</a>, <a>sample_url</a> - The presigned Amazon S3
--   URL that can be used with a GET request to download the sample's file.
--   
--   <a>$sel:type':Sample'</a>, <a>sample_type</a> - The sample's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>CPU: A CPU sample type. This is expressed as the app processing
--   CPU time (including child processes) as reported by process, as a
--   percentage.</li>
--   <li>MEMORY: A memory usage sample type. This is expressed as the total
--   proportional set size of an app process, in kilobytes.</li>
--   <li>NATIVE_AVG_DRAWTIME</li>
--   <li>NATIVE_FPS</li>
--   <li>NATIVE_FRAMES</li>
--   <li>NATIVE_MAX_DRAWTIME</li>
--   <li>NATIVE_MIN_DRAWTIME</li>
--   <li>OPENGL_AVG_DRAWTIME</li>
--   <li>OPENGL_FPS</li>
--   <li>OPENGL_FRAMES</li>
--   <li>OPENGL_MAX_DRAWTIME</li>
--   <li>OPENGL_MIN_DRAWTIME</li>
--   <li>RX</li>
--   <li>RX_RATE: The total number of bytes per second (TCP and UDP) that
--   are sent, by app process.</li>
--   <li>THREADS: A threads sample type. This is expressed as the total
--   number of threads per app process.</li>
--   <li>TX</li>
--   <li>TX_RATE: The total number of bytes per second (TCP and UDP) that
--   are received, by app process.</li>
--   </ul>
newSample :: Sample

-- | The sample's ARN.
sample_arn :: Lens' Sample (Maybe Text)

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the sample's file.
sample_url :: Lens' Sample (Maybe Text)

-- | The sample's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>CPU: A CPU sample type. This is expressed as the app processing
--   CPU time (including child processes) as reported by process, as a
--   percentage.</li>
--   <li>MEMORY: A memory usage sample type. This is expressed as the total
--   proportional set size of an app process, in kilobytes.</li>
--   <li>NATIVE_AVG_DRAWTIME</li>
--   <li>NATIVE_FPS</li>
--   <li>NATIVE_FRAMES</li>
--   <li>NATIVE_MAX_DRAWTIME</li>
--   <li>NATIVE_MIN_DRAWTIME</li>
--   <li>OPENGL_AVG_DRAWTIME</li>
--   <li>OPENGL_FPS</li>
--   <li>OPENGL_FRAMES</li>
--   <li>OPENGL_MAX_DRAWTIME</li>
--   <li>OPENGL_MIN_DRAWTIME</li>
--   <li>RX</li>
--   <li>RX_RATE: The total number of bytes per second (TCP and UDP) that
--   are sent, by app process.</li>
--   <li>THREADS: A threads sample type. This is expressed as the total
--   number of threads per app process.</li>
--   <li>TX</li>
--   <li>TX_RATE: The total number of bytes per second (TCP and UDP) that
--   are received, by app process.</li>
--   </ul>
sample_type :: Lens' Sample (Maybe SampleType)

-- | Represents the settings for a run. Includes things like location,
--   radio states, auxiliary apps, and network profiles.
--   
--   <i>See:</i> <a>newScheduleRunConfiguration</a> smart constructor.
data ScheduleRunConfiguration
ScheduleRunConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe Radios -> Maybe BillingMethod -> Maybe CustomerArtifactPaths -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Location -> ScheduleRunConfiguration

-- | A list of upload ARNs for app packages to be installed with your app.
[$sel:auxiliaryApps:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe [Text]

-- | Information about the locale that is used for the run.
[$sel:locale:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Text

-- | Information about the radio states for the run.
[$sel:radios:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Radios

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have purchased unmetered device slots, you must set this
--   parameter to <tt>unmetered</tt> to make use of them. Otherwise, your
--   run counts against your metered time.
[$sel:billingMethod:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe BillingMethod

-- | Input <tt>CustomerArtifactPaths</tt> object for the scheduled run
--   configuration.
[$sel:customerArtifactPaths:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe CustomerArtifactPaths

-- | An array of ARNs for your VPC endpoint configurations.
[$sel:vpceConfigurationArns:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe [Text]

-- | Reserved for internal use.
[$sel:networkProfileArn:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Text

-- | The ARN of the extra data for the run. The extra data is a .zip file
--   that AWS Device Farm extracts to external data for Android or the
--   app's sandbox for iOS.
[$sel:extraDataPackageArn:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Text

-- | Information about the location that is used for the run.
[$sel:location:ScheduleRunConfiguration'] :: ScheduleRunConfiguration -> Maybe Location

-- | Create a value of <a>ScheduleRunConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:auxiliaryApps:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_auxiliaryApps</a> - A list of upload ARNs
--   for app packages to be installed with your app.
--   
--   <a>$sel:locale:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_locale</a> - Information about the locale
--   that is used for the run.
--   
--   <a>$sel:radios:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_radios</a> - Information about the radio
--   states for the run.
--   
--   <a>$sel:billingMethod:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_billingMethod</a> - Specifies the billing
--   method for a test run: <tt>metered</tt> or <tt>unmetered</tt>. If the
--   parameter is not specified, the default value is <tt>metered</tt>.
--   
--   If you have purchased unmetered device slots, you must set this
--   parameter to <tt>unmetered</tt> to make use of them. Otherwise, your
--   run counts against your metered time.
--   
--   <a>$sel:customerArtifactPaths:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_customerArtifactPaths</a> - Input
--   <tt>CustomerArtifactPaths</tt> object for the scheduled run
--   configuration.
--   
--   <a>$sel:vpceConfigurationArns:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_vpceConfigurationArns</a> - An array of
--   ARNs for your VPC endpoint configurations.
--   
--   <a>$sel:networkProfileArn:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_networkProfileArn</a> - Reserved for
--   internal use.
--   
--   <a>$sel:extraDataPackageArn:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_extraDataPackageArn</a> - The ARN of the
--   extra data for the run. The extra data is a .zip file that AWS Device
--   Farm extracts to external data for Android or the app's sandbox for
--   iOS.
--   
--   <a>$sel:location:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_location</a> - Information about the
--   location that is used for the run.
newScheduleRunConfiguration :: ScheduleRunConfiguration

-- | A list of upload ARNs for app packages to be installed with your app.
scheduleRunConfiguration_auxiliaryApps :: Lens' ScheduleRunConfiguration (Maybe [Text])

-- | Information about the locale that is used for the run.
scheduleRunConfiguration_locale :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | Information about the radio states for the run.
scheduleRunConfiguration_radios :: Lens' ScheduleRunConfiguration (Maybe Radios)

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have purchased unmetered device slots, you must set this
--   parameter to <tt>unmetered</tt> to make use of them. Otherwise, your
--   run counts against your metered time.
scheduleRunConfiguration_billingMethod :: Lens' ScheduleRunConfiguration (Maybe BillingMethod)

-- | Input <tt>CustomerArtifactPaths</tt> object for the scheduled run
--   configuration.
scheduleRunConfiguration_customerArtifactPaths :: Lens' ScheduleRunConfiguration (Maybe CustomerArtifactPaths)

-- | An array of ARNs for your VPC endpoint configurations.
scheduleRunConfiguration_vpceConfigurationArns :: Lens' ScheduleRunConfiguration (Maybe [Text])

-- | Reserved for internal use.
scheduleRunConfiguration_networkProfileArn :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | The ARN of the extra data for the run. The extra data is a .zip file
--   that AWS Device Farm extracts to external data for Android or the
--   app's sandbox for iOS.
scheduleRunConfiguration_extraDataPackageArn :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | Information about the location that is used for the run.
scheduleRunConfiguration_location :: Lens' ScheduleRunConfiguration (Maybe Location)

-- | Represents test settings. This data structure is passed in as the test
--   parameter to ScheduleRun. For an example of the JSON request syntax,
--   see ScheduleRun.
--   
--   <i>See:</i> <a>newScheduleRunTest</a> smart constructor.
data ScheduleRunTest
ScheduleRunTest' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> TestType -> ScheduleRunTest

-- | The ARN of the uploaded test to be run.
[$sel:testPackageArn:ScheduleRunTest'] :: ScheduleRunTest -> Maybe Text

-- | The ARN of the YAML-formatted test specification.
[$sel:testSpecArn:ScheduleRunTest'] :: ScheduleRunTest -> Maybe Text

-- | The test's filter.
[$sel:filter':ScheduleRunTest'] :: ScheduleRunTest -> Maybe Text

-- | The test's parameters, such as test framework parameters and fixture
--   settings. Parameters are represented by name-value pairs of strings.
--   
--   For all tests:
--   
--   <ul>
--   <li><tt>app_performance_monitoring</tt>: Performance monitoring is
--   enabled by default. Set this parameter to false to disable it.</li>
--   </ul>
--   
--   For Calabash tests:
--   
--   <ul>
--   <li>profile: A cucumber profile (for example,
--   <tt>my_profile_name</tt>).</li>
--   <li>tags: You can limit execution to features or scenarios that have
--   (or don't have) certain tags (for example, @smoke or
--   @smoke,~@wip).</li>
--   </ul>
--   
--   For Appium tests (all types):
--   
--   <ul>
--   <li>appium_version: The Appium version. Currently supported values are
--   1.6.5 (and later), latest, and default.<ul><li>latest runs the latest
--   Appium version supported by Device Farm (1.9.1).</li><li>For default,
--   Device Farm selects a compatible version of Appium for the device. The
--   current behavior is to run 1.7.2 on Android devices and iOS 9 and
--   earlier and 1.7.2 for iOS 10 and later.</li><li>This behavior is
--   subject to change.</li></ul></li>
--   </ul>
--   
--   For fuzz tests (Android only):
--   
--   <ul>
--   <li>event_count: The number of events, between 1 and 10000, that the
--   UI fuzz test should perform.</li>
--   <li>throttle: The time, in ms, between 0 and 1000, that the UI fuzz
--   test should wait between events.</li>
--   <li>seed: A seed to use for randomizing the UI fuzz test. Using the
--   same seed value between tests ensures identical event sequences.</li>
--   </ul>
--   
--   For Explorer tests:
--   
--   <ul>
--   <li>username: A user name to use if the Explorer encounters a login
--   form. If not supplied, no user name is inserted.</li>
--   <li>password: A password to use if the Explorer encounters a login
--   form. If not supplied, no password is inserted.</li>
--   </ul>
--   
--   For Instrumentation:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   For XCTest and XCTestUI:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test class: <tt>LoginTests</tt></li><li>Running a multiple test
--   classes: <tt>LoginTests,SmokeTests</tt></li><li>Running a single test:
--   <tt>LoginTests/testValid</tt></li><li>Running multiple tests:
--   <tt>LoginTests/testValid,LoginTests/testInvalid</tt></li></ul></li>
--   </ul>
--   
--   For UIAutomator:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
[$sel:parameters:ScheduleRunTest'] :: ScheduleRunTest -> Maybe (HashMap Text Text)

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':ScheduleRunTest'] :: ScheduleRunTest -> TestType

-- | Create a value of <a>ScheduleRunTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testPackageArn:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_testPackageArn</a> - The ARN of the uploaded test
--   to be run.
--   
--   <a>$sel:testSpecArn:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_testSpecArn</a> - The ARN of the YAML-formatted
--   test specification.
--   
--   <a>$sel:filter':ScheduleRunTest'</a>, <a>scheduleRunTest_filter</a> -
--   The test's filter.
--   
--   <a>$sel:parameters:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_parameters</a> - The test's parameters, such as
--   test framework parameters and fixture settings. Parameters are
--   represented by name-value pairs of strings.
--   
--   For all tests:
--   
--   <ul>
--   <li><tt>app_performance_monitoring</tt>: Performance monitoring is
--   enabled by default. Set this parameter to false to disable it.</li>
--   </ul>
--   
--   For Calabash tests:
--   
--   <ul>
--   <li>profile: A cucumber profile (for example,
--   <tt>my_profile_name</tt>).</li>
--   <li>tags: You can limit execution to features or scenarios that have
--   (or don't have) certain tags (for example, @smoke or
--   @smoke,~@wip).</li>
--   </ul>
--   
--   For Appium tests (all types):
--   
--   <ul>
--   <li>appium_version: The Appium version. Currently supported values are
--   1.6.5 (and later), latest, and default.<ul><li>latest runs the latest
--   Appium version supported by Device Farm (1.9.1).</li><li>For default,
--   Device Farm selects a compatible version of Appium for the device. The
--   current behavior is to run 1.7.2 on Android devices and iOS 9 and
--   earlier and 1.7.2 for iOS 10 and later.</li><li>This behavior is
--   subject to change.</li></ul></li>
--   </ul>
--   
--   For fuzz tests (Android only):
--   
--   <ul>
--   <li>event_count: The number of events, between 1 and 10000, that the
--   UI fuzz test should perform.</li>
--   <li>throttle: The time, in ms, between 0 and 1000, that the UI fuzz
--   test should wait between events.</li>
--   <li>seed: A seed to use for randomizing the UI fuzz test. Using the
--   same seed value between tests ensures identical event sequences.</li>
--   </ul>
--   
--   For Explorer tests:
--   
--   <ul>
--   <li>username: A user name to use if the Explorer encounters a login
--   form. If not supplied, no user name is inserted.</li>
--   <li>password: A password to use if the Explorer encounters a login
--   form. If not supplied, no password is inserted.</li>
--   </ul>
--   
--   For Instrumentation:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   For XCTest and XCTestUI:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test class: <tt>LoginTests</tt></li><li>Running a multiple test
--   classes: <tt>LoginTests,SmokeTests</tt></li><li>Running a single test:
--   <tt>LoginTests/testValid</tt></li><li>Running multiple tests:
--   <tt>LoginTests/testValid,LoginTests/testInvalid</tt></li></ul></li>
--   </ul>
--   
--   For UIAutomator:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ScheduleRunTest'</a>, <a>scheduleRunTest_type</a> - The
--   test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
newScheduleRunTest :: TestType -> ScheduleRunTest

-- | The ARN of the uploaded test to be run.
scheduleRunTest_testPackageArn :: Lens' ScheduleRunTest (Maybe Text)

-- | The ARN of the YAML-formatted test specification.
scheduleRunTest_testSpecArn :: Lens' ScheduleRunTest (Maybe Text)

-- | The test's filter.
scheduleRunTest_filter :: Lens' ScheduleRunTest (Maybe Text)

-- | The test's parameters, such as test framework parameters and fixture
--   settings. Parameters are represented by name-value pairs of strings.
--   
--   For all tests:
--   
--   <ul>
--   <li><tt>app_performance_monitoring</tt>: Performance monitoring is
--   enabled by default. Set this parameter to false to disable it.</li>
--   </ul>
--   
--   For Calabash tests:
--   
--   <ul>
--   <li>profile: A cucumber profile (for example,
--   <tt>my_profile_name</tt>).</li>
--   <li>tags: You can limit execution to features or scenarios that have
--   (or don't have) certain tags (for example, @smoke or
--   @smoke,~@wip).</li>
--   </ul>
--   
--   For Appium tests (all types):
--   
--   <ul>
--   <li>appium_version: The Appium version. Currently supported values are
--   1.6.5 (and later), latest, and default.<ul><li>latest runs the latest
--   Appium version supported by Device Farm (1.9.1).</li><li>For default,
--   Device Farm selects a compatible version of Appium for the device. The
--   current behavior is to run 1.7.2 on Android devices and iOS 9 and
--   earlier and 1.7.2 for iOS 10 and later.</li><li>This behavior is
--   subject to change.</li></ul></li>
--   </ul>
--   
--   For fuzz tests (Android only):
--   
--   <ul>
--   <li>event_count: The number of events, between 1 and 10000, that the
--   UI fuzz test should perform.</li>
--   <li>throttle: The time, in ms, between 0 and 1000, that the UI fuzz
--   test should wait between events.</li>
--   <li>seed: A seed to use for randomizing the UI fuzz test. Using the
--   same seed value between tests ensures identical event sequences.</li>
--   </ul>
--   
--   For Explorer tests:
--   
--   <ul>
--   <li>username: A user name to use if the Explorer encounters a login
--   form. If not supplied, no user name is inserted.</li>
--   <li>password: A password to use if the Explorer encounters a login
--   form. If not supplied, no password is inserted.</li>
--   </ul>
--   
--   For Instrumentation:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   For XCTest and XCTestUI:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test class: <tt>LoginTests</tt></li><li>Running a multiple test
--   classes: <tt>LoginTests,SmokeTests</tt></li><li>Running a single test:
--   <tt>LoginTests/testValid</tt></li><li>Running multiple tests:
--   <tt>LoginTests/testValid,LoginTests/testInvalid</tt></li></ul></li>
--   </ul>
--   
--   For UIAutomator:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
scheduleRunTest_parameters :: Lens' ScheduleRunTest (Maybe (HashMap Text Text))

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
scheduleRunTest_type :: Lens' ScheduleRunTest TestType

-- | Represents a collection of one or more tests.
--   
--   <i>See:</i> <a>newSuite</a> smart constructor.
data Suite
Suite' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Suite

-- | The suite's result counters.
[$sel:counters:Suite'] :: Suite -> Maybe Counters

-- | The suite's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
[$sel:status:Suite'] :: Suite -> Maybe ExecutionStatus

-- | The suite's start time.
[$sel:started:Suite'] :: Suite -> Maybe POSIX

-- | The suite's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Suite'] :: Suite -> Maybe ExecutionResult

-- | A message about the suite's result.
[$sel:message:Suite'] :: Suite -> Maybe Text

-- | The suite's ARN.
[$sel:arn:Suite'] :: Suite -> Maybe Text

-- | The suite's name.
[$sel:name:Suite'] :: Suite -> Maybe Text

-- | The suite's stop time.
[$sel:stopped:Suite'] :: Suite -> Maybe POSIX

-- | The suite's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLOREROnly available for Android; an app explorer that
--   traverses an Android app, interacting with it and capturing
--   screenshots at the same time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':Suite'] :: Suite -> Maybe TestType

-- | When the suite was created.
[$sel:created:Suite'] :: Suite -> Maybe POSIX

-- | Represents the total (metered or unmetered) minutes used by the test
--   suite.
[$sel:deviceMinutes:Suite'] :: Suite -> Maybe DeviceMinutes

-- | Create a value of <a>Suite</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Suite'</a>, <a>suite_counters</a> - The suite's
--   result counters.
--   
--   <a>$sel:status:Suite'</a>, <a>suite_status</a> - The suite's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Suite'</a>, <a>suite_started</a> - The suite's start
--   time.
--   
--   <a>$sel:result:Suite'</a>, <a>suite_result</a> - The suite's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Suite'</a>, <a>suite_message</a> - A message about the
--   suite's result.
--   
--   <a>$sel:arn:Suite'</a>, <a>suite_arn</a> - The suite's ARN.
--   
--   <a>$sel:name:Suite'</a>, <a>suite_name</a> - The suite's name.
--   
--   <a>$sel:stopped:Suite'</a>, <a>suite_stopped</a> - The suite's stop
--   time.
--   
--   <a>$sel:type':Suite'</a>, <a>suite_type</a> - The suite's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLOREROnly available for Android; an app explorer that
--   traverses an Android app, interacting with it and capturing
--   screenshots at the same time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Suite'</a>, <a>suite_created</a> - When the suite was
--   created.
--   
--   <a>$sel:deviceMinutes:Suite'</a>, <a>suite_deviceMinutes</a> -
--   Represents the total (metered or unmetered) minutes used by the test
--   suite.
newSuite :: Suite

-- | The suite's result counters.
suite_counters :: Lens' Suite (Maybe Counters)

-- | The suite's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
suite_status :: Lens' Suite (Maybe ExecutionStatus)

-- | The suite's start time.
suite_started :: Lens' Suite (Maybe UTCTime)

-- | The suite's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
suite_result :: Lens' Suite (Maybe ExecutionResult)

-- | A message about the suite's result.
suite_message :: Lens' Suite (Maybe Text)

-- | The suite's ARN.
suite_arn :: Lens' Suite (Maybe Text)

-- | The suite's name.
suite_name :: Lens' Suite (Maybe Text)

-- | The suite's stop time.
suite_stopped :: Lens' Suite (Maybe UTCTime)

-- | The suite's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLOREROnly available for Android; an app explorer that
--   traverses an Android app, interacting with it and capturing
--   screenshots at the same time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
suite_type :: Lens' Suite (Maybe TestType)

-- | When the suite was created.
suite_created :: Lens' Suite (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test
--   suite.
suite_deviceMinutes :: Lens' Suite (Maybe DeviceMinutes)

-- | The metadata that you apply to a resource to help you categorize and
--   organize it. Each tag consists of a key and an optional value, both of
--   which you define. Tag keys can have a maximum character length of 128
--   characters. Tag values can have a maximum length of 256 characters.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | One part of a key-value pair that makes up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
[$sel:key:Tag'] :: Tag -> Text

-- | The optional part of a key-value pair that makes up a tag. A
--   <tt>value</tt> acts as a descriptor in a tag category (key).
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that makes up a tag. A <tt>key</tt> is a general label that acts like
--   a category for more specific tag values.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that makes up a tag. A <tt>value</tt> acts as a
--   descriptor in a tag category (key).
newTag :: Text -> Text -> Tag

-- | One part of a key-value pair that makes up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
tag_key :: Lens' Tag Text

-- | The optional part of a key-value pair that makes up a tag. A
--   <tt>value</tt> acts as a descriptor in a tag category (key).
tag_value :: Lens' Tag Text

-- | Represents a condition that is evaluated.
--   
--   <i>See:</i> <a>newTest</a> smart constructor.
data Test
Test' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Test

-- | The test's result counters.
[$sel:counters:Test'] :: Test -> Maybe Counters

-- | The test's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
[$sel:status:Test'] :: Test -> Maybe ExecutionStatus

-- | The test's start time.
[$sel:started:Test'] :: Test -> Maybe POSIX

-- | The test's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:result:Test'] :: Test -> Maybe ExecutionResult

-- | A message about the test's result.
[$sel:message:Test'] :: Test -> Maybe Text

-- | The test's ARN.
[$sel:arn:Test'] :: Test -> Maybe Text

-- | The test's name.
[$sel:name:Test'] :: Test -> Maybe Text

-- | The test's stop time.
[$sel:stopped:Test'] :: Test -> Maybe POSIX

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
[$sel:type':Test'] :: Test -> Maybe TestType

-- | When the test was created.
[$sel:created:Test'] :: Test -> Maybe POSIX

-- | Represents the total (metered or unmetered) minutes used by the test.
[$sel:deviceMinutes:Test'] :: Test -> Maybe DeviceMinutes

-- | Create a value of <a>Test</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Test'</a>, <a>test_counters</a> - The test's result
--   counters.
--   
--   <a>$sel:status:Test'</a>, <a>test_status</a> - The test's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Test'</a>, <a>test_started</a> - The test's start
--   time.
--   
--   <a>$sel:result:Test'</a>, <a>test_result</a> - The test's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Test'</a>, <a>test_message</a> - A message about the
--   test's result.
--   
--   <a>$sel:arn:Test'</a>, <a>test_arn</a> - The test's ARN.
--   
--   <a>$sel:name:Test'</a>, <a>test_name</a> - The test's name.
--   
--   <a>$sel:stopped:Test'</a>, <a>test_stopped</a> - The test's stop time.
--   
--   <a>$sel:type':Test'</a>, <a>test_type</a> - The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Test'</a>, <a>test_created</a> - When the test was
--   created.
--   
--   <a>$sel:deviceMinutes:Test'</a>, <a>test_deviceMinutes</a> -
--   Represents the total (metered or unmetered) minutes used by the test.
newTest :: Test

-- | The test's result counters.
test_counters :: Lens' Test (Maybe Counters)

-- | The test's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
test_status :: Lens' Test (Maybe ExecutionStatus)

-- | The test's start time.
test_started :: Lens' Test (Maybe UTCTime)

-- | The test's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
test_result :: Lens' Test (Maybe ExecutionResult)

-- | A message about the test's result.
test_message :: Lens' Test (Maybe Text)

-- | The test's ARN.
test_arn :: Lens' Test (Maybe Text)

-- | The test's name.
test_name :: Lens' Test (Maybe Text)

-- | The test's stop time.
test_stopped :: Lens' Test (Maybe UTCTime)

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
test_type :: Lens' Test (Maybe TestType)

-- | When the test was created.
test_created :: Lens' Test (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test.
test_deviceMinutes :: Lens' Test (Maybe DeviceMinutes)

-- | A Selenium testing project. Projects are used to collect and collate
--   sessions.
--   
--   <i>See:</i> <a>newTestGridProject</a> smart constructor.
data TestGridProject
TestGridProject' :: Maybe TestGridVpcConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> TestGridProject

-- | The VPC security groups and subnets that are attached to a project.
[$sel:vpcConfig:TestGridProject'] :: TestGridProject -> Maybe TestGridVpcConfig

-- | The ARN for the project.
[$sel:arn:TestGridProject'] :: TestGridProject -> Maybe Text

-- | A human-readable name for the project.
[$sel:name:TestGridProject'] :: TestGridProject -> Maybe Text

-- | A human-readable description for the project.
[$sel:description:TestGridProject'] :: TestGridProject -> Maybe Text

-- | When the project was created.
[$sel:created:TestGridProject'] :: TestGridProject -> Maybe POSIX

-- | Create a value of <a>TestGridProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:TestGridProject'</a>,
--   <a>testGridProject_vpcConfig</a> - The VPC security groups and subnets
--   that are attached to a project.
--   
--   <a>$sel:arn:TestGridProject'</a>, <a>testGridProject_arn</a> - The ARN
--   for the project.
--   
--   <a>$sel:name:TestGridProject'</a>, <a>testGridProject_name</a> - A
--   human-readable name for the project.
--   
--   <a>$sel:description:TestGridProject'</a>,
--   <a>testGridProject_description</a> - A human-readable description for
--   the project.
--   
--   <a>$sel:created:TestGridProject'</a>, <a>testGridProject_created</a> -
--   When the project was created.
newTestGridProject :: TestGridProject

-- | The VPC security groups and subnets that are attached to a project.
testGridProject_vpcConfig :: Lens' TestGridProject (Maybe TestGridVpcConfig)

-- | The ARN for the project.
testGridProject_arn :: Lens' TestGridProject (Maybe Text)

-- | A human-readable name for the project.
testGridProject_name :: Lens' TestGridProject (Maybe Text)

-- | A human-readable description for the project.
testGridProject_description :: Lens' TestGridProject (Maybe Text)

-- | When the project was created.
testGridProject_created :: Lens' TestGridProject (Maybe UTCTime)

-- | A TestGridSession is a single instance of a browser launched from the
--   URL provided by a call to CreateTestGridUrl.
--   
--   <i>See:</i> <a>newTestGridSession</a> smart constructor.
data TestGridSession
TestGridSession' :: Maybe TestGridSessionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Double -> Maybe POSIX -> TestGridSession

-- | The state of the session.
[$sel:status:TestGridSession'] :: TestGridSession -> Maybe TestGridSessionStatus

-- | The ARN of the session.
[$sel:arn:TestGridSession'] :: TestGridSession -> Maybe Text

-- | A JSON object of options and parameters passed to the Selenium
--   WebDriver.
[$sel:seleniumProperties:TestGridSession'] :: TestGridSession -> Maybe Text

-- | The time the session ended.
[$sel:ended:TestGridSession'] :: TestGridSession -> Maybe POSIX

-- | The number of billed minutes that were used for this session.
[$sel:billingMinutes:TestGridSession'] :: TestGridSession -> Maybe Double

-- | The time that the session was started.
[$sel:created:TestGridSession'] :: TestGridSession -> Maybe POSIX

-- | Create a value of <a>TestGridSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestGridSession'</a>, <a>testGridSession_status</a> -
--   The state of the session.
--   
--   <a>$sel:arn:TestGridSession'</a>, <a>testGridSession_arn</a> - The ARN
--   of the session.
--   
--   <a>$sel:seleniumProperties:TestGridSession'</a>,
--   <a>testGridSession_seleniumProperties</a> - A JSON object of options
--   and parameters passed to the Selenium WebDriver.
--   
--   <a>$sel:ended:TestGridSession'</a>, <a>testGridSession_ended</a> - The
--   time the session ended.
--   
--   <a>$sel:billingMinutes:TestGridSession'</a>,
--   <a>testGridSession_billingMinutes</a> - The number of billed minutes
--   that were used for this session.
--   
--   <a>$sel:created:TestGridSession'</a>, <a>testGridSession_created</a> -
--   The time that the session was started.
newTestGridSession :: TestGridSession

-- | The state of the session.
testGridSession_status :: Lens' TestGridSession (Maybe TestGridSessionStatus)

-- | The ARN of the session.
testGridSession_arn :: Lens' TestGridSession (Maybe Text)

-- | A JSON object of options and parameters passed to the Selenium
--   WebDriver.
testGridSession_seleniumProperties :: Lens' TestGridSession (Maybe Text)

-- | The time the session ended.
testGridSession_ended :: Lens' TestGridSession (Maybe UTCTime)

-- | The number of billed minutes that were used for this session.
testGridSession_billingMinutes :: Lens' TestGridSession (Maybe Double)

-- | The time that the session was started.
testGridSession_created :: Lens' TestGridSession (Maybe UTCTime)

-- | An action taken by a TestGridSession browser instance.
--   
--   <i>See:</i> <a>newTestGridSessionAction</a> smart constructor.
data TestGridSessionAction
TestGridSessionAction' :: Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> TestGridSessionAction

-- | The time that the session invoked the action.
[$sel:started:TestGridSessionAction'] :: TestGridSessionAction -> Maybe POSIX

-- | The time, in milliseconds, that the action took to complete in the
--   browser.
[$sel:duration:TestGridSessionAction'] :: TestGridSessionAction -> Maybe Integer

-- | HTTP status code returned to the browser when the action was taken.
[$sel:statusCode:TestGridSessionAction'] :: TestGridSessionAction -> Maybe Text

-- | The action taken by the session.
[$sel:action:TestGridSessionAction'] :: TestGridSessionAction -> Maybe Text

-- | HTTP method that the browser used to make the request.
[$sel:requestMethod:TestGridSessionAction'] :: TestGridSessionAction -> Maybe Text

-- | Create a value of <a>TestGridSessionAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:started:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_started</a> - The time that the session
--   invoked the action.
--   
--   <a>$sel:duration:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_duration</a> - The time, in milliseconds,
--   that the action took to complete in the browser.
--   
--   <a>$sel:statusCode:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_statusCode</a> - HTTP status code returned to
--   the browser when the action was taken.
--   
--   <a>$sel:action:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_action</a> - The action taken by the session.
--   
--   <a>$sel:requestMethod:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_requestMethod</a> - HTTP method that the
--   browser used to make the request.
newTestGridSessionAction :: TestGridSessionAction

-- | The time that the session invoked the action.
testGridSessionAction_started :: Lens' TestGridSessionAction (Maybe UTCTime)

-- | The time, in milliseconds, that the action took to complete in the
--   browser.
testGridSessionAction_duration :: Lens' TestGridSessionAction (Maybe Integer)

-- | HTTP status code returned to the browser when the action was taken.
testGridSessionAction_statusCode :: Lens' TestGridSessionAction (Maybe Text)

-- | The action taken by the session.
testGridSessionAction_action :: Lens' TestGridSessionAction (Maybe Text)

-- | HTTP method that the browser used to make the request.
testGridSessionAction_requestMethod :: Lens' TestGridSessionAction (Maybe Text)

-- | Artifacts are video and other files that are produced in the process
--   of running a browser in an automated context.
--   
--   Video elements might be broken up into multiple artifacts as they grow
--   in size during creation.
--   
--   <i>See:</i> <a>newTestGridSessionArtifact</a> smart constructor.
data TestGridSessionArtifact
TestGridSessionArtifact' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe TestGridSessionArtifactType -> TestGridSessionArtifact

-- | The file name of the artifact.
[$sel:filename:TestGridSessionArtifact'] :: TestGridSessionArtifact -> Maybe Text

-- | A semi-stable URL to the content of the object.
[$sel:url:TestGridSessionArtifact'] :: TestGridSessionArtifact -> Maybe (Sensitive Text)

-- | The kind of artifact.
[$sel:type':TestGridSessionArtifact'] :: TestGridSessionArtifact -> Maybe TestGridSessionArtifactType

-- | Create a value of <a>TestGridSessionArtifact</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filename:TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_filename</a> - The file name of the
--   artifact.
--   
--   <a>$sel:url:TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_url</a> - A semi-stable URL to the content
--   of the object.
--   
--   <a>$sel:type':TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_type</a> - The kind of artifact.
newTestGridSessionArtifact :: TestGridSessionArtifact

-- | The file name of the artifact.
testGridSessionArtifact_filename :: Lens' TestGridSessionArtifact (Maybe Text)

-- | A semi-stable URL to the content of the object.
testGridSessionArtifact_url :: Lens' TestGridSessionArtifact (Maybe Text)

-- | The kind of artifact.
testGridSessionArtifact_type :: Lens' TestGridSessionArtifact (Maybe TestGridSessionArtifactType)

-- | The VPC security groups and subnets that are attached to a project.
--   
--   <i>See:</i> <a>newTestGridVpcConfig</a> smart constructor.
data TestGridVpcConfig
TestGridVpcConfig' :: NonEmpty Text -> NonEmpty Text -> Text -> TestGridVpcConfig

-- | A list of VPC security group IDs in your Amazon VPC.
[$sel:securityGroupIds:TestGridVpcConfig'] :: TestGridVpcConfig -> NonEmpty Text

-- | A list of VPC subnet IDs in your Amazon VPC.
[$sel:subnetIds:TestGridVpcConfig'] :: TestGridVpcConfig -> NonEmpty Text

-- | The ID of the Amazon VPC.
[$sel:vpcId:TestGridVpcConfig'] :: TestGridVpcConfig -> Text

-- | Create a value of <a>TestGridVpcConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:TestGridVpcConfig'</a>,
--   <a>testGridVpcConfig_securityGroupIds</a> - A list of VPC security
--   group IDs in your Amazon VPC.
--   
--   <a>$sel:subnetIds:TestGridVpcConfig'</a>,
--   <a>testGridVpcConfig_subnetIds</a> - A list of VPC subnet IDs in your
--   Amazon VPC.
--   
--   <a>$sel:vpcId:TestGridVpcConfig'</a>, <a>testGridVpcConfig_vpcId</a> -
--   The ID of the Amazon VPC.
newTestGridVpcConfig :: NonEmpty Text -> NonEmpty Text -> Text -> TestGridVpcConfig

-- | A list of VPC security group IDs in your Amazon VPC.
testGridVpcConfig_securityGroupIds :: Lens' TestGridVpcConfig (NonEmpty Text)

-- | A list of VPC subnet IDs in your Amazon VPC.
testGridVpcConfig_subnetIds :: Lens' TestGridVpcConfig (NonEmpty Text)

-- | The ID of the Amazon VPC.
testGridVpcConfig_vpcId :: Lens' TestGridVpcConfig Text

-- | Represents information about free trial device minutes for an AWS
--   account.
--   
--   <i>See:</i> <a>newTrialMinutes</a> smart constructor.
data TrialMinutes
TrialMinutes' :: Maybe Double -> Maybe Double -> TrialMinutes

-- | The total number of free trial minutes that the account started with.
[$sel:total:TrialMinutes'] :: TrialMinutes -> Maybe Double

-- | The number of free trial minutes remaining in the account.
[$sel:remaining:TrialMinutes'] :: TrialMinutes -> Maybe Double

-- | Create a value of <a>TrialMinutes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TrialMinutes'</a>, <a>trialMinutes_total</a> - The total
--   number of free trial minutes that the account started with.
--   
--   <a>$sel:remaining:TrialMinutes'</a>, <a>trialMinutes_remaining</a> -
--   The number of free trial minutes remaining in the account.
newTrialMinutes :: TrialMinutes

-- | The total number of free trial minutes that the account started with.
trialMinutes_total :: Lens' TrialMinutes (Maybe Double)

-- | The number of free trial minutes remaining in the account.
trialMinutes_remaining :: Lens' TrialMinutes (Maybe Double)

-- | A collection of one or more problems, grouped by their result.
--   
--   <i>See:</i> <a>newUniqueProblem</a> smart constructor.
data UniqueProblem
UniqueProblem' :: Maybe Text -> Maybe [Problem] -> UniqueProblem

-- | A message about the unique problems' result.
[$sel:message:UniqueProblem'] :: UniqueProblem -> Maybe Text

-- | Information about the problems.
[$sel:problems:UniqueProblem'] :: UniqueProblem -> Maybe [Problem]

-- | Create a value of <a>UniqueProblem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:UniqueProblem'</a>, <a>uniqueProblem_message</a> - A
--   message about the unique problems' result.
--   
--   <a>$sel:problems:UniqueProblem'</a>, <a>uniqueProblem_problems</a> -
--   Information about the problems.
newUniqueProblem :: UniqueProblem

-- | A message about the unique problems' result.
uniqueProblem_message :: Lens' UniqueProblem (Maybe Text)

-- | Information about the problems.
uniqueProblem_problems :: Lens' UniqueProblem (Maybe [Problem])

-- | An app or a set of one or more tests to upload or that have been
--   uploaded.
--   
--   <i>See:</i> <a>newUpload</a> smart constructor.
data Upload
Upload' :: Maybe UploadStatus -> Maybe Text -> Maybe Text -> Maybe UploadCategory -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe UploadType -> Maybe POSIX -> Upload

-- | The upload's status.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>FAILED</li>
--   <li>INITIALIZED</li>
--   <li>PROCESSING</li>
--   <li>SUCCEEDED</li>
--   </ul>
[$sel:status:Upload'] :: Upload -> Maybe UploadStatus

-- | The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
[$sel:contentType:Upload'] :: Upload -> Maybe Text

-- | A message about the upload's result.
[$sel:message:Upload'] :: Upload -> Maybe Text

-- | The upload's category. Allowed values include:
--   
--   <ul>
--   <li>CURATED: An upload managed by AWS Device Farm.</li>
--   <li>PRIVATE: An upload managed by the AWS Device Farm customer.</li>
--   </ul>
[$sel:category:Upload'] :: Upload -> Maybe UploadCategory

-- | The upload's ARN.
[$sel:arn:Upload'] :: Upload -> Maybe Text

-- | The upload's metadata. For example, for Android, this contains
--   information that is parsed from the manifest and is displayed in the
--   AWS Device Farm console after the associated app is uploaded.
[$sel:metadata:Upload'] :: Upload -> Maybe Text

-- | The upload's file name.
[$sel:name:Upload'] :: Upload -> Maybe Text

-- | The presigned Amazon S3 URL that was used to store a file using a PUT
--   request.
[$sel:url:Upload'] :: Upload -> Maybe (Sensitive Text)

-- | The upload's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
[$sel:type':Upload'] :: Upload -> Maybe UploadType

-- | When the upload was created.
[$sel:created:Upload'] :: Upload -> Maybe POSIX

-- | Create a value of <a>Upload</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Upload'</a>, <a>upload_status</a> - The upload's
--   status.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>FAILED</li>
--   <li>INITIALIZED</li>
--   <li>PROCESSING</li>
--   <li>SUCCEEDED</li>
--   </ul>
--   
--   <a>$sel:contentType:Upload'</a>, <a>upload_contentType</a> - The
--   upload's content type (for example,
--   <tt>application/octet-stream</tt>).
--   
--   <a>$sel:message:Upload'</a>, <a>upload_message</a> - A message about
--   the upload's result.
--   
--   <a>$sel:category:Upload'</a>, <a>upload_category</a> - The upload's
--   category. Allowed values include:
--   
--   <ul>
--   <li>CURATED: An upload managed by AWS Device Farm.</li>
--   <li>PRIVATE: An upload managed by the AWS Device Farm customer.</li>
--   </ul>
--   
--   <a>$sel:arn:Upload'</a>, <a>upload_arn</a> - The upload's ARN.
--   
--   <a>$sel:metadata:Upload'</a>, <a>upload_metadata</a> - The upload's
--   metadata. For example, for Android, this contains information that is
--   parsed from the manifest and is displayed in the AWS Device Farm
--   console after the associated app is uploaded.
--   
--   <a>$sel:name:Upload'</a>, <a>upload_name</a> - The upload's file name.
--   
--   <a>$sel:url:Upload'</a>, <a>upload_url</a> - The presigned Amazon S3
--   URL that was used to store a file using a PUT request.
--   
--   <a>$sel:type':Upload'</a>, <a>upload_type</a> - The upload's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   <a>$sel:created:Upload'</a>, <a>upload_created</a> - When the upload
--   was created.
newUpload :: Upload

-- | The upload's status.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>FAILED</li>
--   <li>INITIALIZED</li>
--   <li>PROCESSING</li>
--   <li>SUCCEEDED</li>
--   </ul>
upload_status :: Lens' Upload (Maybe UploadStatus)

-- | The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
upload_contentType :: Lens' Upload (Maybe Text)

-- | A message about the upload's result.
upload_message :: Lens' Upload (Maybe Text)

-- | The upload's category. Allowed values include:
--   
--   <ul>
--   <li>CURATED: An upload managed by AWS Device Farm.</li>
--   <li>PRIVATE: An upload managed by the AWS Device Farm customer.</li>
--   </ul>
upload_category :: Lens' Upload (Maybe UploadCategory)

-- | The upload's ARN.
upload_arn :: Lens' Upload (Maybe Text)

-- | The upload's metadata. For example, for Android, this contains
--   information that is parsed from the manifest and is displayed in the
--   AWS Device Farm console after the associated app is uploaded.
upload_metadata :: Lens' Upload (Maybe Text)

-- | The upload's file name.
upload_name :: Lens' Upload (Maybe Text)

-- | The presigned Amazon S3 URL that was used to store a file using a PUT
--   request.
upload_url :: Lens' Upload (Maybe Text)

-- | The upload's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
upload_type :: Lens' Upload (Maybe UploadType)

-- | When the upload was created.
upload_created :: Lens' Upload (Maybe UTCTime)

-- | Represents an Amazon Virtual Private Cloud (VPC) endpoint
--   configuration.
--   
--   <i>See:</i> <a>newVPCEConfiguration</a> smart constructor.
data VPCEConfiguration
VPCEConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VPCEConfiguration

-- | The friendly name you give to your VPC endpoint configuration to
--   manage your configurations more easily.
[$sel:vpceConfigurationName:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | An optional description that provides details about your VPC endpoint
--   configuration.
[$sel:vpceConfigurationDescription:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration.
[$sel:arn:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | The DNS name that maps to the private IP address of the service you
--   want to access.
[$sel:serviceDnsName:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
[$sel:vpceServiceName:VPCEConfiguration'] :: VPCEConfiguration -> Maybe Text

-- | Create a value of <a>VPCEConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfigurationName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceConfigurationName</a> - The friendly name you
--   give to your VPC endpoint configuration to manage your configurations
--   more easily.
--   
--   <a>$sel:vpceConfigurationDescription:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceConfigurationDescription</a> - An optional
--   description that provides details about your VPC endpoint
--   configuration.
--   
--   <a>$sel:arn:VPCEConfiguration'</a>, <a>vPCEConfiguration_arn</a> - The
--   Amazon Resource Name (ARN) of the VPC endpoint configuration.
--   
--   <a>$sel:serviceDnsName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_serviceDnsName</a> - The DNS name that maps to
--   the private IP address of the service you want to access.
--   
--   <a>$sel:vpceServiceName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceServiceName</a> - The name of the VPC
--   endpoint service running in your AWS account that you want Device Farm
--   to test.
newVPCEConfiguration :: VPCEConfiguration

-- | The friendly name you give to your VPC endpoint configuration to
--   manage your configurations more easily.
vPCEConfiguration_vpceConfigurationName :: Lens' VPCEConfiguration (Maybe Text)

-- | An optional description that provides details about your VPC endpoint
--   configuration.
vPCEConfiguration_vpceConfigurationDescription :: Lens' VPCEConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration.
vPCEConfiguration_arn :: Lens' VPCEConfiguration (Maybe Text)

-- | The DNS name that maps to the private IP address of the service you
--   want to access.
vPCEConfiguration_serviceDnsName :: Lens' VPCEConfiguration (Maybe Text)

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
vPCEConfiguration_vpceServiceName :: Lens' VPCEConfiguration (Maybe Text)


-- | Associates the specified tags to a resource with the specified
--   <tt>resourceArn</tt>. If existing tags on a resource are not specified
--   in the request parameters, they are not changed. When a resource is
--   deleted, the tags associated with that resource are also deleted.
module Network.AWS.DeviceFarm.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource or resources to which
--   to add tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters. Tag
--   values can have a maximum length of 256 characters.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name (ARN) of the resource or resources to which
--   to add tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add to the resource. A tag is an array of key-value pairs. Tag keys
--   can have a maximum character length of 128 characters. Tag values can
--   have a maximum length of 256 characters.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource or resources to which
--   to add tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
tagResource_resourceARN :: Lens' TagResource Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters. Tag
--   values can have a maximum length of 256 characters.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.TagResource.TagResource
instance GHC.Show.Show Network.AWS.DeviceFarm.TagResource.TagResource
instance GHC.Read.Read Network.AWS.DeviceFarm.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.DeviceFarm.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.DeviceFarm.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.TagResource.TagResource


-- | Initiates a stop request for the current test run. AWS Device Farm
--   immediately stops the run on devices where tests have not started. You
--   are not billed for these devices. On devices where tests have started
--   executing, setup suite and teardown suite tests run to completion on
--   those devices. You are billed for setup, teardown, and any tests that
--   were in progress or already completed.
module Network.AWS.DeviceFarm.StopRun

-- | Represents the request to stop a specific run.
--   
--   <i>See:</i> <a>newStopRun</a> smart constructor.
data StopRun
StopRun' :: Text -> StopRun

-- | Represents the Amazon Resource Name (ARN) of the Device Farm run to
--   stop.
[$sel:arn:StopRun'] :: StopRun -> Text

-- | Create a value of <a>StopRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StopRun'</a>, <a>stopRun_arn</a> - Represents the Amazon
--   Resource Name (ARN) of the Device Farm run to stop.
newStopRun :: Text -> StopRun

-- | Represents the Amazon Resource Name (ARN) of the Device Farm run to
--   stop.
stopRun_arn :: Lens' StopRun Text

-- | Represents the results of your stop run attempt.
--   
--   <i>See:</i> <a>newStopRunResponse</a> smart constructor.
data StopRunResponse
StopRunResponse' :: Maybe Run -> Int -> StopRunResponse

-- | The run that was stopped.
[$sel:run:StopRunResponse'] :: StopRunResponse -> Maybe Run

-- | The response's http status code.
[$sel:httpStatus:StopRunResponse'] :: StopRunResponse -> Int

-- | Create a value of <a>StopRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:run:StopRunResponse'</a>, <a>stopRunResponse_run</a> - The run
--   that was stopped.
--   
--   <a>$sel:httpStatus:StopRunResponse'</a>,
--   <a>stopRunResponse_httpStatus</a> - The response's http status code.
newStopRunResponse :: Int -> StopRunResponse

-- | The run that was stopped.
stopRunResponse_run :: Lens' StopRunResponse (Maybe Run)

-- | The response's http status code.
stopRunResponse_httpStatus :: Lens' StopRunResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.StopRun.StopRun
instance GHC.Show.Show Network.AWS.DeviceFarm.StopRun.StopRun
instance GHC.Read.Read Network.AWS.DeviceFarm.StopRun.StopRun
instance GHC.Classes.Eq Network.AWS.DeviceFarm.StopRun.StopRun
instance GHC.Generics.Generic Network.AWS.DeviceFarm.StopRun.StopRunResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.StopRun.StopRunResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.StopRun.StopRunResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.StopRun.StopRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.StopRun.StopRun
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.StopRun.StopRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.StopRun.StopRun
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.StopRun.StopRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.StopRun.StopRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.StopRun.StopRun
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.StopRun.StopRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.StopRun.StopRun


-- | Ends a specified remote access session.
module Network.AWS.DeviceFarm.StopRemoteAccessSession

-- | Represents the request to stop the remote access session.
--   
--   <i>See:</i> <a>newStopRemoteAccessSession</a> smart constructor.
data StopRemoteAccessSession
StopRemoteAccessSession' :: Text -> StopRemoteAccessSession

-- | The Amazon Resource Name (ARN) of the remote access session to stop.
[$sel:arn:StopRemoteAccessSession'] :: StopRemoteAccessSession -> Text

-- | Create a value of <a>StopRemoteAccessSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StopRemoteAccessSession'</a>,
--   <a>stopRemoteAccessSession_arn</a> - The Amazon Resource Name (ARN) of
--   the remote access session to stop.
newStopRemoteAccessSession :: Text -> StopRemoteAccessSession

-- | The Amazon Resource Name (ARN) of the remote access session to stop.
stopRemoteAccessSession_arn :: Lens' StopRemoteAccessSession Text

-- | Represents the response from the server that describes the remote
--   access session when AWS Device Farm stops the session.
--   
--   <i>See:</i> <a>newStopRemoteAccessSessionResponse</a> smart
--   constructor.
data StopRemoteAccessSessionResponse
StopRemoteAccessSessionResponse' :: Maybe RemoteAccessSession -> Int -> StopRemoteAccessSessionResponse

-- | A container that represents the metadata from the service about the
--   remote access session you are stopping.
[$sel:remoteAccessSession:StopRemoteAccessSessionResponse'] :: StopRemoteAccessSessionResponse -> Maybe RemoteAccessSession

-- | The response's http status code.
[$sel:httpStatus:StopRemoteAccessSessionResponse'] :: StopRemoteAccessSessionResponse -> Int

-- | Create a value of <a>StopRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSession:StopRemoteAccessSessionResponse'</a>,
--   <a>stopRemoteAccessSessionResponse_remoteAccessSession</a> - A
--   container that represents the metadata from the service about the
--   remote access session you are stopping.
--   
--   <a>$sel:httpStatus:StopRemoteAccessSessionResponse'</a>,
--   <a>stopRemoteAccessSessionResponse_httpStatus</a> - The response's
--   http status code.
newStopRemoteAccessSessionResponse :: Int -> StopRemoteAccessSessionResponse

-- | A container that represents the metadata from the service about the
--   remote access session you are stopping.
stopRemoteAccessSessionResponse_remoteAccessSession :: Lens' StopRemoteAccessSessionResponse (Maybe RemoteAccessSession)

-- | The response's http status code.
stopRemoteAccessSessionResponse_httpStatus :: Lens' StopRemoteAccessSessionResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance GHC.Show.Show Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance GHC.Read.Read Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance GHC.Classes.Eq Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance GHC.Generics.Generic Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSessionResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSessionResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSessionResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.StopRemoteAccessSession.StopRemoteAccessSession


-- | Initiates a stop request for the current job. AWS Device Farm
--   immediately stops the job on the device where tests have not started.
--   You are not billed for this device. On the device where tests have
--   started, setup suite and teardown suite tests run to completion on the
--   device. You are billed for setup, teardown, and any tests that were in
--   progress or already completed.
module Network.AWS.DeviceFarm.StopJob

-- | <i>See:</i> <a>newStopJob</a> smart constructor.
data StopJob
StopJob' :: Text -> StopJob

-- | Represents the Amazon Resource Name (ARN) of the Device Farm job to
--   stop.
[$sel:arn:StopJob'] :: StopJob -> Text

-- | Create a value of <a>StopJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StopJob'</a>, <a>stopJob_arn</a> - Represents the Amazon
--   Resource Name (ARN) of the Device Farm job to stop.
newStopJob :: Text -> StopJob

-- | Represents the Amazon Resource Name (ARN) of the Device Farm job to
--   stop.
stopJob_arn :: Lens' StopJob Text

-- | <i>See:</i> <a>newStopJobResponse</a> smart constructor.
data StopJobResponse
StopJobResponse' :: Maybe Job -> Int -> StopJobResponse

-- | The job that was stopped.
[$sel:job:StopJobResponse'] :: StopJobResponse -> Maybe Job

-- | The response's http status code.
[$sel:httpStatus:StopJobResponse'] :: StopJobResponse -> Int

-- | Create a value of <a>StopJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:StopJobResponse'</a>, <a>stopJobResponse_job</a> - The job
--   that was stopped.
--   
--   <a>$sel:httpStatus:StopJobResponse'</a>,
--   <a>stopJobResponse_httpStatus</a> - The response's http status code.
newStopJobResponse :: Int -> StopJobResponse

-- | The job that was stopped.
stopJobResponse_job :: Lens' StopJobResponse (Maybe Job)

-- | The response's http status code.
stopJobResponse_httpStatus :: Lens' StopJobResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.StopJob.StopJob
instance GHC.Show.Show Network.AWS.DeviceFarm.StopJob.StopJob
instance GHC.Read.Read Network.AWS.DeviceFarm.StopJob.StopJob
instance GHC.Classes.Eq Network.AWS.DeviceFarm.StopJob.StopJob
instance GHC.Generics.Generic Network.AWS.DeviceFarm.StopJob.StopJobResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.StopJob.StopJobResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.StopJob.StopJobResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.StopJob.StopJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.StopJob.StopJob
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.StopJob.StopJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.StopJob.StopJob
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.StopJob.StopJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.StopJob.StopJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.StopJob.StopJob
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.StopJob.StopJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.StopJob.StopJob


-- | Schedules a run.
module Network.AWS.DeviceFarm.ScheduleRun

-- | Represents a request to the schedule run operation.
--   
--   <i>See:</i> <a>newScheduleRun</a> smart constructor.
data ScheduleRun
ScheduleRun' :: Maybe Text -> Maybe ScheduleRunConfiguration -> Maybe DeviceSelectionConfiguration -> Maybe ExecutionConfiguration -> Maybe Text -> Maybe Text -> Text -> ScheduleRunTest -> ScheduleRun

-- | The ARN of the device pool for the run to be scheduled.
[$sel:devicePoolArn:ScheduleRun'] :: ScheduleRun -> Maybe Text

-- | Information about the settings for the run to be scheduled.
[$sel:configuration:ScheduleRun'] :: ScheduleRun -> Maybe ScheduleRunConfiguration

-- | The filter criteria used to dynamically select a set of devices for a
--   test run and the maximum number of devices to be included in the run.
--   
--   Either <b><tt>devicePoolArn</tt></b> or
--   <b><tt>deviceSelectionConfiguration</tt></b> is required in a request.
[$sel:deviceSelectionConfiguration:ScheduleRun'] :: ScheduleRun -> Maybe DeviceSelectionConfiguration

-- | Specifies configuration information about a test run, such as the
--   execution timeout (in minutes).
[$sel:executionConfiguration:ScheduleRun'] :: ScheduleRun -> Maybe ExecutionConfiguration

-- | The name for the run to be scheduled.
[$sel:name:ScheduleRun'] :: ScheduleRun -> Maybe Text

-- | The ARN of an application package to run tests against, created with
--   CreateUpload. See ListUploads.
[$sel:appArn:ScheduleRun'] :: ScheduleRun -> Maybe Text

-- | The ARN of the project for the run to be scheduled.
[$sel:projectArn:ScheduleRun'] :: ScheduleRun -> Text

-- | Information about the test for the run to be scheduled.
[$sel:test:ScheduleRun'] :: ScheduleRun -> ScheduleRunTest

-- | Create a value of <a>ScheduleRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devicePoolArn:ScheduleRun'</a>,
--   <a>scheduleRun_devicePoolArn</a> - The ARN of the device pool for the
--   run to be scheduled.
--   
--   <a>$sel:configuration:ScheduleRun'</a>,
--   <a>scheduleRun_configuration</a> - Information about the settings for
--   the run to be scheduled.
--   
--   <a>$sel:deviceSelectionConfiguration:ScheduleRun'</a>,
--   <a>scheduleRun_deviceSelectionConfiguration</a> - The filter criteria
--   used to dynamically select a set of devices for a test run and the
--   maximum number of devices to be included in the run.
--   
--   Either <b><tt>devicePoolArn</tt></b> or
--   <b><tt>deviceSelectionConfiguration</tt></b> is required in a request.
--   
--   <a>$sel:executionConfiguration:ScheduleRun'</a>,
--   <a>scheduleRun_executionConfiguration</a> - Specifies configuration
--   information about a test run, such as the execution timeout (in
--   minutes).
--   
--   <a>$sel:name:ScheduleRun'</a>, <a>scheduleRun_name</a> - The name for
--   the run to be scheduled.
--   
--   <a>$sel:appArn:ScheduleRun'</a>, <a>scheduleRun_appArn</a> - The ARN
--   of an application package to run tests against, created with
--   CreateUpload. See ListUploads.
--   
--   <a>$sel:projectArn:ScheduleRun'</a>, <a>scheduleRun_projectArn</a> -
--   The ARN of the project for the run to be scheduled.
--   
--   <a>$sel:test:ScheduleRun'</a>, <a>scheduleRun_test</a> - Information
--   about the test for the run to be scheduled.
newScheduleRun :: Text -> ScheduleRunTest -> ScheduleRun

-- | The ARN of the device pool for the run to be scheduled.
scheduleRun_devicePoolArn :: Lens' ScheduleRun (Maybe Text)

-- | Information about the settings for the run to be scheduled.
scheduleRun_configuration :: Lens' ScheduleRun (Maybe ScheduleRunConfiguration)

-- | The filter criteria used to dynamically select a set of devices for a
--   test run and the maximum number of devices to be included in the run.
--   
--   Either <b><tt>devicePoolArn</tt></b> or
--   <b><tt>deviceSelectionConfiguration</tt></b> is required in a request.
scheduleRun_deviceSelectionConfiguration :: Lens' ScheduleRun (Maybe DeviceSelectionConfiguration)

-- | Specifies configuration information about a test run, such as the
--   execution timeout (in minutes).
scheduleRun_executionConfiguration :: Lens' ScheduleRun (Maybe ExecutionConfiguration)

-- | The name for the run to be scheduled.
scheduleRun_name :: Lens' ScheduleRun (Maybe Text)

-- | The ARN of an application package to run tests against, created with
--   CreateUpload. See ListUploads.
scheduleRun_appArn :: Lens' ScheduleRun (Maybe Text)

-- | The ARN of the project for the run to be scheduled.
scheduleRun_projectArn :: Lens' ScheduleRun Text

-- | Information about the test for the run to be scheduled.
scheduleRun_test :: Lens' ScheduleRun ScheduleRunTest

-- | Represents the result of a schedule run request.
--   
--   <i>See:</i> <a>newScheduleRunResponse</a> smart constructor.
data ScheduleRunResponse
ScheduleRunResponse' :: Maybe Run -> Int -> ScheduleRunResponse

-- | Information about the scheduled run.
[$sel:run:ScheduleRunResponse'] :: ScheduleRunResponse -> Maybe Run

-- | The response's http status code.
[$sel:httpStatus:ScheduleRunResponse'] :: ScheduleRunResponse -> Int

-- | Create a value of <a>ScheduleRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:run:ScheduleRunResponse'</a>, <a>scheduleRunResponse_run</a> -
--   Information about the scheduled run.
--   
--   <a>$sel:httpStatus:ScheduleRunResponse'</a>,
--   <a>scheduleRunResponse_httpStatus</a> - The response's http status
--   code.
newScheduleRunResponse :: Int -> ScheduleRunResponse

-- | Information about the scheduled run.
scheduleRunResponse_run :: Lens' ScheduleRunResponse (Maybe Run)

-- | The response's http status code.
scheduleRunResponse_httpStatus :: Lens' ScheduleRunResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance GHC.Show.Show Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance GHC.Read.Read Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ScheduleRun.ScheduleRunResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ScheduleRun.ScheduleRunResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ScheduleRun.ScheduleRunResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ScheduleRun.ScheduleRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ScheduleRun.ScheduleRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ScheduleRun.ScheduleRun


-- | Explicitly sets the quantity of devices to renew for an offering,
--   starting from the <tt>effectiveDate</tt> of the next period. The API
--   returns a <tt>NotEligible</tt> error if the user is not permitted to
--   invoke the operation. If you must be able to invoke this operation,
--   contact <a>aws-devicefarm-support@amazon.com</a>.
module Network.AWS.DeviceFarm.RenewOffering

-- | A request that represents an offering renewal.
--   
--   <i>See:</i> <a>newRenewOffering</a> smart constructor.
data RenewOffering
RenewOffering' :: Text -> Int -> RenewOffering

-- | The ID of a request to renew an offering.
[$sel:offeringId:RenewOffering'] :: RenewOffering -> Text

-- | The quantity requested in an offering renewal.
[$sel:quantity:RenewOffering'] :: RenewOffering -> Int

-- | Create a value of <a>RenewOffering</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringId:RenewOffering'</a>, <a>renewOffering_offeringId</a>
--   - The ID of a request to renew an offering.
--   
--   <a>$sel:quantity:RenewOffering'</a>, <a>renewOffering_quantity</a> -
--   The quantity requested in an offering renewal.
newRenewOffering :: Text -> Int -> RenewOffering

-- | The ID of a request to renew an offering.
renewOffering_offeringId :: Lens' RenewOffering Text

-- | The quantity requested in an offering renewal.
renewOffering_quantity :: Lens' RenewOffering Int

-- | The result of a renewal offering.
--   
--   <i>See:</i> <a>newRenewOfferingResponse</a> smart constructor.
data RenewOfferingResponse
RenewOfferingResponse' :: Maybe OfferingTransaction -> Int -> RenewOfferingResponse

-- | Represents the status of the offering transaction for the renewal.
[$sel:offeringTransaction:RenewOfferingResponse'] :: RenewOfferingResponse -> Maybe OfferingTransaction

-- | The response's http status code.
[$sel:httpStatus:RenewOfferingResponse'] :: RenewOfferingResponse -> Int

-- | Create a value of <a>RenewOfferingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringTransaction:RenewOfferingResponse'</a>,
--   <a>renewOfferingResponse_offeringTransaction</a> - Represents the
--   status of the offering transaction for the renewal.
--   
--   <a>$sel:httpStatus:RenewOfferingResponse'</a>,
--   <a>renewOfferingResponse_httpStatus</a> - The response's http status
--   code.
newRenewOfferingResponse :: Int -> RenewOfferingResponse

-- | Represents the status of the offering transaction for the renewal.
renewOfferingResponse_offeringTransaction :: Lens' RenewOfferingResponse (Maybe OfferingTransaction)

-- | The response's http status code.
renewOfferingResponse_httpStatus :: Lens' RenewOfferingResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance GHC.Show.Show Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance GHC.Read.Read Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance GHC.Classes.Eq Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance GHC.Generics.Generic Network.AWS.DeviceFarm.RenewOffering.RenewOfferingResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.RenewOffering.RenewOfferingResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.RenewOffering.RenewOfferingResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.RenewOffering.RenewOfferingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.RenewOffering.RenewOfferingResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.RenewOffering.RenewOffering
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.RenewOffering.RenewOffering


-- | Immediately purchases offerings for an AWS account. Offerings renew
--   with the latest total purchased quantity for an offering, unless the
--   renewal was overridden. The API returns a <tt>NotEligible</tt> error
--   if the user is not permitted to invoke the operation. If you must be
--   able to invoke this operation, contact
--   <a>aws-devicefarm-support@amazon.com</a>.
module Network.AWS.DeviceFarm.PurchaseOffering

-- | Represents a request for a purchase offering.
--   
--   <i>See:</i> <a>newPurchaseOffering</a> smart constructor.
data PurchaseOffering
PurchaseOffering' :: Maybe Text -> Text -> Int -> PurchaseOffering

-- | The ID of the offering promotion to be applied to the purchase.
[$sel:offeringPromotionId:PurchaseOffering'] :: PurchaseOffering -> Maybe Text

-- | The ID of the offering.
[$sel:offeringId:PurchaseOffering'] :: PurchaseOffering -> Text

-- | The number of device slots to purchase in an offering request.
[$sel:quantity:PurchaseOffering'] :: PurchaseOffering -> Int

-- | Create a value of <a>PurchaseOffering</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringPromotionId:PurchaseOffering'</a>,
--   <a>purchaseOffering_offeringPromotionId</a> - The ID of the offering
--   promotion to be applied to the purchase.
--   
--   <a>$sel:offeringId:PurchaseOffering'</a>,
--   <a>purchaseOffering_offeringId</a> - The ID of the offering.
--   
--   <a>$sel:quantity:PurchaseOffering'</a>,
--   <a>purchaseOffering_quantity</a> - The number of device slots to
--   purchase in an offering request.
newPurchaseOffering :: Text -> Int -> PurchaseOffering

-- | The ID of the offering promotion to be applied to the purchase.
purchaseOffering_offeringPromotionId :: Lens' PurchaseOffering (Maybe Text)

-- | The ID of the offering.
purchaseOffering_offeringId :: Lens' PurchaseOffering Text

-- | The number of device slots to purchase in an offering request.
purchaseOffering_quantity :: Lens' PurchaseOffering Int

-- | The result of the purchase offering (for example, success or failure).
--   
--   <i>See:</i> <a>newPurchaseOfferingResponse</a> smart constructor.
data PurchaseOfferingResponse
PurchaseOfferingResponse' :: Maybe OfferingTransaction -> Int -> PurchaseOfferingResponse

-- | Represents the offering transaction for the purchase result.
[$sel:offeringTransaction:PurchaseOfferingResponse'] :: PurchaseOfferingResponse -> Maybe OfferingTransaction

-- | The response's http status code.
[$sel:httpStatus:PurchaseOfferingResponse'] :: PurchaseOfferingResponse -> Int

-- | Create a value of <a>PurchaseOfferingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringTransaction:PurchaseOfferingResponse'</a>,
--   <a>purchaseOfferingResponse_offeringTransaction</a> - Represents the
--   offering transaction for the purchase result.
--   
--   <a>$sel:httpStatus:PurchaseOfferingResponse'</a>,
--   <a>purchaseOfferingResponse_httpStatus</a> - The response's http
--   status code.
newPurchaseOfferingResponse :: Int -> PurchaseOfferingResponse

-- | Represents the offering transaction for the purchase result.
purchaseOfferingResponse_offeringTransaction :: Lens' PurchaseOfferingResponse (Maybe OfferingTransaction)

-- | The response's http status code.
purchaseOfferingResponse_httpStatus :: Lens' PurchaseOfferingResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance GHC.Show.Show Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance GHC.Read.Read Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance GHC.Classes.Eq Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance GHC.Generics.Generic Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOfferingResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOfferingResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOfferingResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOfferingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOfferingResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.PurchaseOffering.PurchaseOffering


-- | Returns information about all Amazon Virtual Private Cloud (VPC)
--   endpoint configurations in the AWS account.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListVPCEConfigurations

-- | <i>See:</i> <a>newListVPCEConfigurations</a> smart constructor.
data ListVPCEConfigurations
ListVPCEConfigurations' :: Maybe Text -> Maybe Int -> ListVPCEConfigurations

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListVPCEConfigurations'] :: ListVPCEConfigurations -> Maybe Text

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
[$sel:maxResults:ListVPCEConfigurations'] :: ListVPCEConfigurations -> Maybe Int

-- | Create a value of <a>ListVPCEConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVPCEConfigurations'</a>,
--   <a>listVPCEConfigurations_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:maxResults:ListVPCEConfigurations'</a>,
--   <a>listVPCEConfigurations_maxResults</a> - An integer that specifies
--   the maximum number of items you want to return in the API response.
newListVPCEConfigurations :: ListVPCEConfigurations

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listVPCEConfigurations_nextToken :: Lens' ListVPCEConfigurations (Maybe Text)

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
listVPCEConfigurations_maxResults :: Lens' ListVPCEConfigurations (Maybe Int)

-- | <i>See:</i> <a>newListVPCEConfigurationsResponse</a> smart
--   constructor.
data ListVPCEConfigurationsResponse
ListVPCEConfigurationsResponse' :: Maybe Text -> Maybe [VPCEConfiguration] -> Int -> ListVPCEConfigurationsResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListVPCEConfigurationsResponse'] :: ListVPCEConfigurationsResponse -> Maybe Text

-- | An array of <tt>VPCEConfiguration</tt> objects that contain
--   information about your VPC endpoint configuration.
[$sel:vpceConfigurations:ListVPCEConfigurationsResponse'] :: ListVPCEConfigurationsResponse -> Maybe [VPCEConfiguration]

-- | The response's http status code.
[$sel:httpStatus:ListVPCEConfigurationsResponse'] :: ListVPCEConfigurationsResponse -> Int

-- | Create a value of <a>ListVPCEConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVPCEConfigurations'</a>,
--   <a>listVPCEConfigurationsResponse_nextToken</a> - An identifier that
--   was returned from the previous call to this operation, which can be
--   used to return the next set of items in the list.
--   
--   <a>$sel:vpceConfigurations:ListVPCEConfigurationsResponse'</a>,
--   <a>listVPCEConfigurationsResponse_vpceConfigurations</a> - An array of
--   <tt>VPCEConfiguration</tt> objects that contain information about your
--   VPC endpoint configuration.
--   
--   <a>$sel:httpStatus:ListVPCEConfigurationsResponse'</a>,
--   <a>listVPCEConfigurationsResponse_httpStatus</a> - The response's http
--   status code.
newListVPCEConfigurationsResponse :: Int -> ListVPCEConfigurationsResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listVPCEConfigurationsResponse_nextToken :: Lens' ListVPCEConfigurationsResponse (Maybe Text)

-- | An array of <tt>VPCEConfiguration</tt> objects that contain
--   information about your VPC endpoint configuration.
listVPCEConfigurationsResponse_vpceConfigurations :: Lens' ListVPCEConfigurationsResponse (Maybe [VPCEConfiguration])

-- | The response's http status code.
listVPCEConfigurationsResponse_httpStatus :: Lens' ListVPCEConfigurationsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance GHC.Show.Show Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance GHC.Read.Read Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurationsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurationsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurationsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListVPCEConfigurations.ListVPCEConfigurations


-- | Gets information about uploads, given an AWS Device Farm project ARN.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListUploads

-- | Represents a request to the list uploads operation.
--   
--   <i>See:</i> <a>newListUploads</a> smart constructor.
data ListUploads
ListUploads' :: Maybe Text -> Maybe UploadType -> Text -> ListUploads

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListUploads'] :: ListUploads -> Maybe Text

-- | The type of upload.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
[$sel:type':ListUploads'] :: ListUploads -> Maybe UploadType

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list uploads.
[$sel:arn:ListUploads'] :: ListUploads -> Text

-- | Create a value of <a>ListUploads</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUploads'</a>, <a>listUploads_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:type':ListUploads'</a>, <a>listUploads_type</a> - The type of
--   upload.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   <a>$sel:arn:ListUploads'</a>, <a>listUploads_arn</a> - The Amazon
--   Resource Name (ARN) of the project for which you want to list uploads.
newListUploads :: Text -> ListUploads

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUploads_nextToken :: Lens' ListUploads (Maybe Text)

-- | The type of upload.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
listUploads_type :: Lens' ListUploads (Maybe UploadType)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list uploads.
listUploads_arn :: Lens' ListUploads Text

-- | Represents the result of a list uploads request.
--   
--   <i>See:</i> <a>newListUploadsResponse</a> smart constructor.
data ListUploadsResponse
ListUploadsResponse' :: Maybe Text -> Maybe [Upload] -> Int -> ListUploadsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListUploadsResponse'] :: ListUploadsResponse -> Maybe Text

-- | Information about the uploads.
[$sel:uploads:ListUploadsResponse'] :: ListUploadsResponse -> Maybe [Upload]

-- | The response's http status code.
[$sel:httpStatus:ListUploadsResponse'] :: ListUploadsResponse -> Int

-- | Create a value of <a>ListUploadsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUploads'</a>,
--   <a>listUploadsResponse_nextToken</a> - If the number of items that are
--   returned is significantly large, this is an identifier that is also
--   returned. It can be used in a subsequent call to this operation to
--   return the next set of items in the list.
--   
--   <a>$sel:uploads:ListUploadsResponse'</a>,
--   <a>listUploadsResponse_uploads</a> - Information about the uploads.
--   
--   <a>$sel:httpStatus:ListUploadsResponse'</a>,
--   <a>listUploadsResponse_httpStatus</a> - The response's http status
--   code.
newListUploadsResponse :: Int -> ListUploadsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listUploadsResponse_nextToken :: Lens' ListUploadsResponse (Maybe Text)

-- | Information about the uploads.
listUploadsResponse_uploads :: Lens' ListUploadsResponse (Maybe [Upload])

-- | The response's http status code.
listUploadsResponse_httpStatus :: Lens' ListUploadsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListUploads.ListUploads
instance GHC.Show.Show Network.AWS.DeviceFarm.ListUploads.ListUploads
instance GHC.Read.Read Network.AWS.DeviceFarm.ListUploads.ListUploads
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListUploads.ListUploads
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListUploads.ListUploadsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListUploads.ListUploadsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListUploads.ListUploadsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListUploads.ListUploads
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListUploads.ListUploadsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListUploads.ListUploads
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListUploads.ListUploads
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListUploads.ListUploads
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListUploads.ListUploads
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListUploads.ListUploads
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListUploads.ListUploads
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListUploads.ListUploads


-- | Gets information about unique problems, such as exceptions or crashes.
--   
--   Unique problems are defined as a single instance of an error across a
--   run, job, or suite. For example, if a call in your application
--   consistently raises an exception (<tt>OutOfBoundsException in
--   MyActivity.java:386</tt>), <tt>ListUniqueProblems</tt> returns a
--   single entry instead of many individual entries for that exception.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListUniqueProblems

-- | Represents a request to the list unique problems operation.
--   
--   <i>See:</i> <a>newListUniqueProblems</a> smart constructor.
data ListUniqueProblems
ListUniqueProblems' :: Maybe Text -> Text -> ListUniqueProblems

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListUniqueProblems'] :: ListUniqueProblems -> Maybe Text

-- | The unique problems' ARNs.
[$sel:arn:ListUniqueProblems'] :: ListUniqueProblems -> Text

-- | Create a value of <a>ListUniqueProblems</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUniqueProblems'</a>,
--   <a>listUniqueProblems_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:arn:ListUniqueProblems'</a>, <a>listUniqueProblems_arn</a> -
--   The unique problems' ARNs.
newListUniqueProblems :: Text -> ListUniqueProblems

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUniqueProblems_nextToken :: Lens' ListUniqueProblems (Maybe Text)

-- | The unique problems' ARNs.
listUniqueProblems_arn :: Lens' ListUniqueProblems Text

-- | Represents the result of a list unique problems request.
--   
--   <i>See:</i> <a>newListUniqueProblemsResponse</a> smart constructor.
data ListUniqueProblemsResponse
ListUniqueProblemsResponse' :: Maybe Text -> Maybe (HashMap ExecutionResult [UniqueProblem]) -> Int -> ListUniqueProblemsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListUniqueProblemsResponse'] :: ListUniqueProblemsResponse -> Maybe Text

-- | Information about the unique problems.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
[$sel:uniqueProblems:ListUniqueProblemsResponse'] :: ListUniqueProblemsResponse -> Maybe (HashMap ExecutionResult [UniqueProblem])

-- | The response's http status code.
[$sel:httpStatus:ListUniqueProblemsResponse'] :: ListUniqueProblemsResponse -> Int

-- | Create a value of <a>ListUniqueProblemsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUniqueProblems'</a>,
--   <a>listUniqueProblemsResponse_nextToken</a> - If the number of items
--   that are returned is significantly large, this is an identifier that
--   is also returned. It can be used in a subsequent call to this
--   operation to return the next set of items in the list.
--   
--   <a>$sel:uniqueProblems:ListUniqueProblemsResponse'</a>,
--   <a>listUniqueProblemsResponse_uniqueProblems</a> - Information about
--   the unique problems.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ListUniqueProblemsResponse'</a>,
--   <a>listUniqueProblemsResponse_httpStatus</a> - The response's http
--   status code.
newListUniqueProblemsResponse :: Int -> ListUniqueProblemsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listUniqueProblemsResponse_nextToken :: Lens' ListUniqueProblemsResponse (Maybe Text)

-- | Information about the unique problems.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
listUniqueProblemsResponse_uniqueProblems :: Lens' ListUniqueProblemsResponse (Maybe (HashMap ExecutionResult [UniqueProblem]))

-- | The response's http status code.
listUniqueProblemsResponse_httpStatus :: Lens' ListUniqueProblemsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance GHC.Show.Show Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance GHC.Read.Read Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblemsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblemsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblemsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblemsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblemsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListUniqueProblems.ListUniqueProblems


-- | Gets information about tests in a given test suite.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListTests

-- | Represents a request to the list tests operation.
--   
--   <i>See:</i> <a>newListTests</a> smart constructor.
data ListTests
ListTests' :: Maybe Text -> Text -> ListTests

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListTests'] :: ListTests -> Maybe Text

-- | The test suite's Amazon Resource Name (ARN).
[$sel:arn:ListTests'] :: ListTests -> Text

-- | Create a value of <a>ListTests</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTests'</a>, <a>listTests_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListTests'</a>, <a>listTests_arn</a> - The test suite's
--   Amazon Resource Name (ARN).
newListTests :: Text -> ListTests

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listTests_nextToken :: Lens' ListTests (Maybe Text)

-- | The test suite's Amazon Resource Name (ARN).
listTests_arn :: Lens' ListTests Text

-- | Represents the result of a list tests request.
--   
--   <i>See:</i> <a>newListTestsResponse</a> smart constructor.
data ListTestsResponse
ListTestsResponse' :: Maybe Text -> Maybe [Test] -> Int -> ListTestsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListTestsResponse'] :: ListTestsResponse -> Maybe Text

-- | Information about the tests.
[$sel:tests:ListTestsResponse'] :: ListTestsResponse -> Maybe [Test]

-- | The response's http status code.
[$sel:httpStatus:ListTestsResponse'] :: ListTestsResponse -> Int

-- | Create a value of <a>ListTestsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTests'</a>, <a>listTestsResponse_nextToken</a> -
--   If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
--   
--   <a>$sel:tests:ListTestsResponse'</a>, <a>listTestsResponse_tests</a> -
--   Information about the tests.
--   
--   <a>$sel:httpStatus:ListTestsResponse'</a>,
--   <a>listTestsResponse_httpStatus</a> - The response's http status code.
newListTestsResponse :: Int -> ListTestsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listTestsResponse_nextToken :: Lens' ListTestsResponse (Maybe Text)

-- | Information about the tests.
listTestsResponse_tests :: Lens' ListTestsResponse (Maybe [Test])

-- | The response's http status code.
listTestsResponse_httpStatus :: Lens' ListTestsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTests.ListTests
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTests.ListTests
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTests.ListTests
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTests.ListTests
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTests.ListTestsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTests.ListTestsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTests.ListTestsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTests.ListTestsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListTests.ListTests
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTests.ListTestsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListTests.ListTests
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListTests.ListTests
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTests.ListTests
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListTests.ListTests
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListTests.ListTests
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListTests.ListTests
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListTests.ListTests


-- | Retrieves a list of sessions for a TestGridProject.
module Network.AWS.DeviceFarm.ListTestGridSessions

-- | <i>See:</i> <a>newListTestGridSessions</a> smart constructor.
data ListTestGridSessions
ListTestGridSessions' :: Maybe Text -> Maybe TestGridSessionStatus -> Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Text -> ListTestGridSessions

-- | Pagination token.
[$sel:nextToken:ListTestGridSessions'] :: ListTestGridSessions -> Maybe Text

-- | Return only sessions in this state.
[$sel:status:ListTestGridSessions'] :: ListTestGridSessions -> Maybe TestGridSessionStatus

-- | Return only sessions created before this time.
[$sel:creationTimeBefore:ListTestGridSessions'] :: ListTestGridSessions -> Maybe POSIX

-- | Return only this many results at a time.
[$sel:maxResult:ListTestGridSessions'] :: ListTestGridSessions -> Maybe Natural

-- | Return only sessions that ended after this time.
[$sel:endTimeAfter:ListTestGridSessions'] :: ListTestGridSessions -> Maybe POSIX

-- | Return only sessions that ended before this time.
[$sel:endTimeBefore:ListTestGridSessions'] :: ListTestGridSessions -> Maybe POSIX

-- | Return only sessions created after this time.
[$sel:creationTimeAfter:ListTestGridSessions'] :: ListTestGridSessions -> Maybe POSIX

-- | ARN of a TestGridProject.
[$sel:projectArn:ListTestGridSessions'] :: ListTestGridSessions -> Text

-- | Create a value of <a>ListTestGridSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_nextToken</a> - Pagination token.
--   
--   <a>$sel:status:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_status</a> - Return only sessions in this
--   state.
--   
--   <a>$sel:creationTimeBefore:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_creationTimeBefore</a> - Return only sessions
--   created before this time.
--   
--   <a>$sel:maxResult:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_maxResult</a> - Return only this many results
--   at a time.
--   
--   <a>$sel:endTimeAfter:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_endTimeAfter</a> - Return only sessions that
--   ended after this time.
--   
--   <a>$sel:endTimeBefore:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_endTimeBefore</a> - Return only sessions that
--   ended before this time.
--   
--   <a>$sel:creationTimeAfter:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_creationTimeAfter</a> - Return only sessions
--   created after this time.
--   
--   <a>$sel:projectArn:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_projectArn</a> - ARN of a TestGridProject.
newListTestGridSessions :: Text -> ListTestGridSessions

-- | Pagination token.
listTestGridSessions_nextToken :: Lens' ListTestGridSessions (Maybe Text)

-- | Return only sessions in this state.
listTestGridSessions_status :: Lens' ListTestGridSessions (Maybe TestGridSessionStatus)

-- | Return only sessions created before this time.
listTestGridSessions_creationTimeBefore :: Lens' ListTestGridSessions (Maybe UTCTime)

-- | Return only this many results at a time.
listTestGridSessions_maxResult :: Lens' ListTestGridSessions (Maybe Natural)

-- | Return only sessions that ended after this time.
listTestGridSessions_endTimeAfter :: Lens' ListTestGridSessions (Maybe UTCTime)

-- | Return only sessions that ended before this time.
listTestGridSessions_endTimeBefore :: Lens' ListTestGridSessions (Maybe UTCTime)

-- | Return only sessions created after this time.
listTestGridSessions_creationTimeAfter :: Lens' ListTestGridSessions (Maybe UTCTime)

-- | ARN of a TestGridProject.
listTestGridSessions_projectArn :: Lens' ListTestGridSessions Text

-- | <i>See:</i> <a>newListTestGridSessionsResponse</a> smart constructor.
data ListTestGridSessionsResponse
ListTestGridSessionsResponse' :: Maybe Text -> Maybe [TestGridSession] -> Int -> ListTestGridSessionsResponse

-- | Pagination token.
[$sel:nextToken:ListTestGridSessionsResponse'] :: ListTestGridSessionsResponse -> Maybe Text

-- | The sessions that match the criteria in a ListTestGridSessionsRequest.
[$sel:testGridSessions:ListTestGridSessionsResponse'] :: ListTestGridSessionsResponse -> Maybe [TestGridSession]

-- | The response's http status code.
[$sel:httpStatus:ListTestGridSessionsResponse'] :: ListTestGridSessionsResponse -> Int

-- | Create a value of <a>ListTestGridSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessions'</a>,
--   <a>listTestGridSessionsResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:testGridSessions:ListTestGridSessionsResponse'</a>,
--   <a>listTestGridSessionsResponse_testGridSessions</a> - The sessions
--   that match the criteria in a ListTestGridSessionsRequest.
--   
--   <a>$sel:httpStatus:ListTestGridSessionsResponse'</a>,
--   <a>listTestGridSessionsResponse_httpStatus</a> - The response's http
--   status code.
newListTestGridSessionsResponse :: Int -> ListTestGridSessionsResponse

-- | Pagination token.
listTestGridSessionsResponse_nextToken :: Lens' ListTestGridSessionsResponse (Maybe Text)

-- | The sessions that match the criteria in a ListTestGridSessionsRequest.
listTestGridSessionsResponse_testGridSessions :: Lens' ListTestGridSessionsResponse (Maybe [TestGridSession])

-- | The response's http status code.
listTestGridSessionsResponse_httpStatus :: Lens' ListTestGridSessionsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessionsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessionsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessionsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListTestGridSessions.ListTestGridSessions


-- | Retrieves a list of artifacts created during the session.
module Network.AWS.DeviceFarm.ListTestGridSessionArtifacts

-- | <i>See:</i> <a>newListTestGridSessionArtifacts</a> smart constructor.
data ListTestGridSessionArtifacts
ListTestGridSessionArtifacts' :: Maybe Text -> Maybe Natural -> Maybe TestGridSessionArtifactCategory -> Text -> ListTestGridSessionArtifacts

-- | Pagination token.
[$sel:nextToken:ListTestGridSessionArtifacts'] :: ListTestGridSessionArtifacts -> Maybe Text

-- | The maximum number of results to be returned by a request.
[$sel:maxResult:ListTestGridSessionArtifacts'] :: ListTestGridSessionArtifacts -> Maybe Natural

-- | Limit results to a specified type of artifact.
[$sel:type':ListTestGridSessionArtifacts'] :: ListTestGridSessionArtifacts -> Maybe TestGridSessionArtifactCategory

-- | The ARN of a TestGridSession.
[$sel:sessionArn:ListTestGridSessionArtifacts'] :: ListTestGridSessionArtifacts -> Text

-- | Create a value of <a>ListTestGridSessionArtifacts</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifacts_nextToken</a> - Pagination token.
--   
--   <a>$sel:maxResult:ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifacts_maxResult</a> - The maximum number of
--   results to be returned by a request.
--   
--   <a>$sel:type':ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifacts_type</a> - Limit results to a
--   specified type of artifact.
--   
--   <a>$sel:sessionArn:ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifacts_sessionArn</a> - The ARN of a
--   TestGridSession.
newListTestGridSessionArtifacts :: Text -> ListTestGridSessionArtifacts

-- | Pagination token.
listTestGridSessionArtifacts_nextToken :: Lens' ListTestGridSessionArtifacts (Maybe Text)

-- | The maximum number of results to be returned by a request.
listTestGridSessionArtifacts_maxResult :: Lens' ListTestGridSessionArtifacts (Maybe Natural)

-- | Limit results to a specified type of artifact.
listTestGridSessionArtifacts_type :: Lens' ListTestGridSessionArtifacts (Maybe TestGridSessionArtifactCategory)

-- | The ARN of a TestGridSession.
listTestGridSessionArtifacts_sessionArn :: Lens' ListTestGridSessionArtifacts Text

-- | <i>See:</i> <a>newListTestGridSessionArtifactsResponse</a> smart
--   constructor.
data ListTestGridSessionArtifactsResponse
ListTestGridSessionArtifactsResponse' :: Maybe Text -> Maybe [TestGridSessionArtifact] -> Int -> ListTestGridSessionArtifactsResponse

-- | Pagination token.
[$sel:nextToken:ListTestGridSessionArtifactsResponse'] :: ListTestGridSessionArtifactsResponse -> Maybe Text

-- | A list of test grid session artifacts for a TestGridSession.
[$sel:artifacts:ListTestGridSessionArtifactsResponse'] :: ListTestGridSessionArtifactsResponse -> Maybe [TestGridSessionArtifact]

-- | The response's http status code.
[$sel:httpStatus:ListTestGridSessionArtifactsResponse'] :: ListTestGridSessionArtifactsResponse -> Int

-- | Create a value of <a>ListTestGridSessionArtifactsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifactsResponse_nextToken</a> - Pagination
--   token.
--   
--   <a>$sel:artifacts:ListTestGridSessionArtifactsResponse'</a>,
--   <a>listTestGridSessionArtifactsResponse_artifacts</a> - A list of test
--   grid session artifacts for a TestGridSession.
--   
--   <a>$sel:httpStatus:ListTestGridSessionArtifactsResponse'</a>,
--   <a>listTestGridSessionArtifactsResponse_httpStatus</a> - The
--   response's http status code.
newListTestGridSessionArtifactsResponse :: Int -> ListTestGridSessionArtifactsResponse

-- | Pagination token.
listTestGridSessionArtifactsResponse_nextToken :: Lens' ListTestGridSessionArtifactsResponse (Maybe Text)

-- | A list of test grid session artifacts for a TestGridSession.
listTestGridSessionArtifactsResponse_artifacts :: Lens' ListTestGridSessionArtifactsResponse (Maybe [TestGridSessionArtifact])

-- | The response's http status code.
listTestGridSessionArtifactsResponse_httpStatus :: Lens' ListTestGridSessionArtifactsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifactsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifactsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifactsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifactsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListTestGridSessionArtifacts.ListTestGridSessionArtifacts


-- | Returns a list of the actions taken in a TestGridSession.
module Network.AWS.DeviceFarm.ListTestGridSessionActions

-- | <i>See:</i> <a>newListTestGridSessionActions</a> smart constructor.
data ListTestGridSessionActions
ListTestGridSessionActions' :: Maybe Text -> Maybe Natural -> Text -> ListTestGridSessionActions

-- | Pagination token.
[$sel:nextToken:ListTestGridSessionActions'] :: ListTestGridSessionActions -> Maybe Text

-- | The maximum number of sessions to return per response.
[$sel:maxResult:ListTestGridSessionActions'] :: ListTestGridSessionActions -> Maybe Natural

-- | The ARN of the session to retrieve.
[$sel:sessionArn:ListTestGridSessionActions'] :: ListTestGridSessionActions -> Text

-- | Create a value of <a>ListTestGridSessionActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessionActions'</a>,
--   <a>listTestGridSessionActions_nextToken</a> - Pagination token.
--   
--   <a>$sel:maxResult:ListTestGridSessionActions'</a>,
--   <a>listTestGridSessionActions_maxResult</a> - The maximum number of
--   sessions to return per response.
--   
--   <a>$sel:sessionArn:ListTestGridSessionActions'</a>,
--   <a>listTestGridSessionActions_sessionArn</a> - The ARN of the session
--   to retrieve.
newListTestGridSessionActions :: Text -> ListTestGridSessionActions

-- | Pagination token.
listTestGridSessionActions_nextToken :: Lens' ListTestGridSessionActions (Maybe Text)

-- | The maximum number of sessions to return per response.
listTestGridSessionActions_maxResult :: Lens' ListTestGridSessionActions (Maybe Natural)

-- | The ARN of the session to retrieve.
listTestGridSessionActions_sessionArn :: Lens' ListTestGridSessionActions Text

-- | <i>See:</i> <a>newListTestGridSessionActionsResponse</a> smart
--   constructor.
data ListTestGridSessionActionsResponse
ListTestGridSessionActionsResponse' :: Maybe Text -> Maybe [TestGridSessionAction] -> Int -> ListTestGridSessionActionsResponse

-- | Pagination token.
[$sel:nextToken:ListTestGridSessionActionsResponse'] :: ListTestGridSessionActionsResponse -> Maybe Text

-- | The action taken by the session.
[$sel:actions:ListTestGridSessionActionsResponse'] :: ListTestGridSessionActionsResponse -> Maybe [TestGridSessionAction]

-- | The response's http status code.
[$sel:httpStatus:ListTestGridSessionActionsResponse'] :: ListTestGridSessionActionsResponse -> Int

-- | Create a value of <a>ListTestGridSessionActionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessionActions'</a>,
--   <a>listTestGridSessionActionsResponse_nextToken</a> - Pagination
--   token.
--   
--   <a>$sel:actions:ListTestGridSessionActionsResponse'</a>,
--   <a>listTestGridSessionActionsResponse_actions</a> - The action taken
--   by the session.
--   
--   <a>$sel:httpStatus:ListTestGridSessionActionsResponse'</a>,
--   <a>listTestGridSessionActionsResponse_httpStatus</a> - The response's
--   http status code.
newListTestGridSessionActionsResponse :: Int -> ListTestGridSessionActionsResponse

-- | Pagination token.
listTestGridSessionActionsResponse_nextToken :: Lens' ListTestGridSessionActionsResponse (Maybe Text)

-- | The action taken by the session.
listTestGridSessionActionsResponse_actions :: Lens' ListTestGridSessionActionsResponse (Maybe [TestGridSessionAction])

-- | The response's http status code.
listTestGridSessionActionsResponse_httpStatus :: Lens' ListTestGridSessionActionsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActionsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActionsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActionsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListTestGridSessionActions.ListTestGridSessionActions


-- | Gets a list of all Selenium testing projects in your account.
module Network.AWS.DeviceFarm.ListTestGridProjects

-- | <i>See:</i> <a>newListTestGridProjects</a> smart constructor.
data ListTestGridProjects
ListTestGridProjects' :: Maybe Text -> Maybe Natural -> ListTestGridProjects

-- | From a response, used to continue a paginated listing.
[$sel:nextToken:ListTestGridProjects'] :: ListTestGridProjects -> Maybe Text

-- | Return no more than this number of results.
[$sel:maxResult:ListTestGridProjects'] :: ListTestGridProjects -> Maybe Natural

-- | Create a value of <a>ListTestGridProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridProjects'</a>,
--   <a>listTestGridProjects_nextToken</a> - From a response, used to
--   continue a paginated listing.
--   
--   <a>$sel:maxResult:ListTestGridProjects'</a>,
--   <a>listTestGridProjects_maxResult</a> - Return no more than this
--   number of results.
newListTestGridProjects :: ListTestGridProjects

-- | From a response, used to continue a paginated listing.
listTestGridProjects_nextToken :: Lens' ListTestGridProjects (Maybe Text)

-- | Return no more than this number of results.
listTestGridProjects_maxResult :: Lens' ListTestGridProjects (Maybe Natural)

-- | <i>See:</i> <a>newListTestGridProjectsResponse</a> smart constructor.
data ListTestGridProjectsResponse
ListTestGridProjectsResponse' :: Maybe Text -> Maybe [TestGridProject] -> Int -> ListTestGridProjectsResponse

-- | Used for pagination. Pass into ListTestGridProjects to get more
--   results in a paginated request.
[$sel:nextToken:ListTestGridProjectsResponse'] :: ListTestGridProjectsResponse -> Maybe Text

-- | The list of TestGridProjects, based on a ListTestGridProjectsRequest.
[$sel:testGridProjects:ListTestGridProjectsResponse'] :: ListTestGridProjectsResponse -> Maybe [TestGridProject]

-- | The response's http status code.
[$sel:httpStatus:ListTestGridProjectsResponse'] :: ListTestGridProjectsResponse -> Int

-- | Create a value of <a>ListTestGridProjectsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridProjects'</a>,
--   <a>listTestGridProjectsResponse_nextToken</a> - Used for pagination.
--   Pass into ListTestGridProjects to get more results in a paginated
--   request.
--   
--   <a>$sel:testGridProjects:ListTestGridProjectsResponse'</a>,
--   <a>listTestGridProjectsResponse_testGridProjects</a> - The list of
--   TestGridProjects, based on a ListTestGridProjectsRequest.
--   
--   <a>$sel:httpStatus:ListTestGridProjectsResponse'</a>,
--   <a>listTestGridProjectsResponse_httpStatus</a> - The response's http
--   status code.
newListTestGridProjectsResponse :: Int -> ListTestGridProjectsResponse

-- | Used for pagination. Pass into ListTestGridProjects to get more
--   results in a paginated request.
listTestGridProjectsResponse_nextToken :: Lens' ListTestGridProjectsResponse (Maybe Text)

-- | The list of TestGridProjects, based on a ListTestGridProjectsRequest.
listTestGridProjectsResponse_testGridProjects :: Lens' ListTestGridProjectsResponse (Maybe [TestGridProject])

-- | The response's http status code.
listTestGridProjectsResponse_httpStatus :: Lens' ListTestGridProjectsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjectsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjectsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjectsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjectsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjectsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListTestGridProjects.ListTestGridProjects


-- | List the tags for an AWS Device Farm resource.
module Network.AWS.DeviceFarm.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource or resources for which
--   to list tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name
--   (ARN) of the resource or resources for which to list tags. You can
--   associate tags with the following Device Farm resources:
--   <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource or resources for which
--   to list tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters. Tag
--   values can have a maximum length of 256 characters.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags to add to the
--   resource. A tag is an array of key-value pairs. Tag keys can have a
--   maximum character length of 128 characters. Tag values can have a
--   maximum length of 256 characters.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters. Tag
--   values can have a maximum length of 256 characters.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListTagsForResource.ListTagsForResource


-- | Gets information about test suites for a given job.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListSuites

-- | Represents a request to the list suites operation.
--   
--   <i>See:</i> <a>newListSuites</a> smart constructor.
data ListSuites
ListSuites' :: Maybe Text -> Text -> ListSuites

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListSuites'] :: ListSuites -> Maybe Text

-- | The job's Amazon Resource Name (ARN).
[$sel:arn:ListSuites'] :: ListSuites -> Text

-- | Create a value of <a>ListSuites</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSuites'</a>, <a>listSuites_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListSuites'</a>, <a>listSuites_arn</a> - The job's Amazon
--   Resource Name (ARN).
newListSuites :: Text -> ListSuites

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listSuites_nextToken :: Lens' ListSuites (Maybe Text)

-- | The job's Amazon Resource Name (ARN).
listSuites_arn :: Lens' ListSuites Text

-- | Represents the result of a list suites request.
--   
--   <i>See:</i> <a>newListSuitesResponse</a> smart constructor.
data ListSuitesResponse
ListSuitesResponse' :: Maybe Text -> Maybe [Suite] -> Int -> ListSuitesResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListSuitesResponse'] :: ListSuitesResponse -> Maybe Text

-- | Information about the suites.
[$sel:suites:ListSuitesResponse'] :: ListSuitesResponse -> Maybe [Suite]

-- | The response's http status code.
[$sel:httpStatus:ListSuitesResponse'] :: ListSuitesResponse -> Int

-- | Create a value of <a>ListSuitesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSuites'</a>, <a>listSuitesResponse_nextToken</a>
--   - If the number of items that are returned is significantly large,
--   this is an identifier that is also returned. It can be used in a
--   subsequent call to this operation to return the next set of items in
--   the list.
--   
--   <a>$sel:suites:ListSuitesResponse'</a>,
--   <a>listSuitesResponse_suites</a> - Information about the suites.
--   
--   <a>$sel:httpStatus:ListSuitesResponse'</a>,
--   <a>listSuitesResponse_httpStatus</a> - The response's http status
--   code.
newListSuitesResponse :: Int -> ListSuitesResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listSuitesResponse_nextToken :: Lens' ListSuitesResponse (Maybe Text)

-- | Information about the suites.
listSuitesResponse_suites :: Lens' ListSuitesResponse (Maybe [Suite])

-- | The response's http status code.
listSuitesResponse_httpStatus :: Lens' ListSuitesResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListSuites.ListSuites
instance GHC.Show.Show Network.AWS.DeviceFarm.ListSuites.ListSuites
instance GHC.Read.Read Network.AWS.DeviceFarm.ListSuites.ListSuites
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListSuites.ListSuites
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListSuites.ListSuitesResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListSuites.ListSuitesResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListSuites.ListSuitesResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListSuites.ListSuitesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListSuites.ListSuites
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListSuites.ListSuitesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListSuites.ListSuites
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListSuites.ListSuites
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListSuites.ListSuites
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListSuites.ListSuites
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListSuites.ListSuites
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListSuites.ListSuites
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListSuites.ListSuites


-- | Gets information about samples, given an AWS Device Farm job ARN.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListSamples

-- | Represents a request to the list samples operation.
--   
--   <i>See:</i> <a>newListSamples</a> smart constructor.
data ListSamples
ListSamples' :: Maybe Text -> Text -> ListSamples

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListSamples'] :: ListSamples -> Maybe Text

-- | The Amazon Resource Name (ARN) of the job used to list samples.
[$sel:arn:ListSamples'] :: ListSamples -> Text

-- | Create a value of <a>ListSamples</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSamples'</a>, <a>listSamples_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListSamples'</a>, <a>listSamples_arn</a> - The Amazon
--   Resource Name (ARN) of the job used to list samples.
newListSamples :: Text -> ListSamples

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listSamples_nextToken :: Lens' ListSamples (Maybe Text)

-- | The Amazon Resource Name (ARN) of the job used to list samples.
listSamples_arn :: Lens' ListSamples Text

-- | Represents the result of a list samples request.
--   
--   <i>See:</i> <a>newListSamplesResponse</a> smart constructor.
data ListSamplesResponse
ListSamplesResponse' :: Maybe Text -> Maybe [Sample] -> Int -> ListSamplesResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListSamplesResponse'] :: ListSamplesResponse -> Maybe Text

-- | Information about the samples.
[$sel:samples:ListSamplesResponse'] :: ListSamplesResponse -> Maybe [Sample]

-- | The response's http status code.
[$sel:httpStatus:ListSamplesResponse'] :: ListSamplesResponse -> Int

-- | Create a value of <a>ListSamplesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSamples'</a>,
--   <a>listSamplesResponse_nextToken</a> - If the number of items that are
--   returned is significantly large, this is an identifier that is also
--   returned. It can be used in a subsequent call to this operation to
--   return the next set of items in the list.
--   
--   <a>$sel:samples:ListSamplesResponse'</a>,
--   <a>listSamplesResponse_samples</a> - Information about the samples.
--   
--   <a>$sel:httpStatus:ListSamplesResponse'</a>,
--   <a>listSamplesResponse_httpStatus</a> - The response's http status
--   code.
newListSamplesResponse :: Int -> ListSamplesResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listSamplesResponse_nextToken :: Lens' ListSamplesResponse (Maybe Text)

-- | Information about the samples.
listSamplesResponse_samples :: Lens' ListSamplesResponse (Maybe [Sample])

-- | The response's http status code.
listSamplesResponse_httpStatus :: Lens' ListSamplesResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListSamples.ListSamples
instance GHC.Show.Show Network.AWS.DeviceFarm.ListSamples.ListSamples
instance GHC.Read.Read Network.AWS.DeviceFarm.ListSamples.ListSamples
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListSamples.ListSamples
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListSamples.ListSamplesResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListSamples.ListSamplesResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListSamples.ListSamplesResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListSamples.ListSamplesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListSamples.ListSamples
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListSamples.ListSamplesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListSamples.ListSamples
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListSamples.ListSamples
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListSamples.ListSamples
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListSamples.ListSamples
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListSamples.ListSamples
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListSamples.ListSamples
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListSamples.ListSamples


-- | Gets information about runs, given an AWS Device Farm project ARN.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListRuns

-- | Represents a request to the list runs operation.
--   
--   <i>See:</i> <a>newListRuns</a> smart constructor.
data ListRuns
ListRuns' :: Maybe Text -> Text -> ListRuns

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListRuns'] :: ListRuns -> Maybe Text

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list runs.
[$sel:arn:ListRuns'] :: ListRuns -> Text

-- | Create a value of <a>ListRuns</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRuns'</a>, <a>listRuns_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListRuns'</a>, <a>listRuns_arn</a> - The Amazon Resource
--   Name (ARN) of the project for which you want to list runs.
newListRuns :: Text -> ListRuns

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listRuns_nextToken :: Lens' ListRuns (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list runs.
listRuns_arn :: Lens' ListRuns Text

-- | Represents the result of a list runs request.
--   
--   <i>See:</i> <a>newListRunsResponse</a> smart constructor.
data ListRunsResponse
ListRunsResponse' :: Maybe Text -> Maybe [Run] -> Int -> ListRunsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListRunsResponse'] :: ListRunsResponse -> Maybe Text

-- | Information about the runs.
[$sel:runs:ListRunsResponse'] :: ListRunsResponse -> Maybe [Run]

-- | The response's http status code.
[$sel:httpStatus:ListRunsResponse'] :: ListRunsResponse -> Int

-- | Create a value of <a>ListRunsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRuns'</a>, <a>listRunsResponse_nextToken</a> -
--   If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
--   
--   <a>$sel:runs:ListRunsResponse'</a>, <a>listRunsResponse_runs</a> -
--   Information about the runs.
--   
--   <a>$sel:httpStatus:ListRunsResponse'</a>,
--   <a>listRunsResponse_httpStatus</a> - The response's http status code.
newListRunsResponse :: Int -> ListRunsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listRunsResponse_nextToken :: Lens' ListRunsResponse (Maybe Text)

-- | Information about the runs.
listRunsResponse_runs :: Lens' ListRunsResponse (Maybe [Run])

-- | The response's http status code.
listRunsResponse_httpStatus :: Lens' ListRunsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListRuns.ListRuns
instance GHC.Show.Show Network.AWS.DeviceFarm.ListRuns.ListRuns
instance GHC.Read.Read Network.AWS.DeviceFarm.ListRuns.ListRuns
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListRuns.ListRuns
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListRuns.ListRunsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListRuns.ListRunsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListRuns.ListRunsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListRuns.ListRunsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListRuns.ListRuns
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListRuns.ListRunsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListRuns.ListRuns
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListRuns.ListRuns
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListRuns.ListRuns
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListRuns.ListRuns
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListRuns.ListRuns
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListRuns.ListRuns
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListRuns.ListRuns


-- | Returns a list of all currently running remote access sessions.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListRemoteAccessSessions

-- | Represents the request to return information about the remote access
--   session.
--   
--   <i>See:</i> <a>newListRemoteAccessSessions</a> smart constructor.
data ListRemoteAccessSessions
ListRemoteAccessSessions' :: Maybe Text -> Text -> ListRemoteAccessSessions

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListRemoteAccessSessions'] :: ListRemoteAccessSessions -> Maybe Text

-- | The Amazon Resource Name (ARN) of the project about which you are
--   requesting information.
[$sel:arn:ListRemoteAccessSessions'] :: ListRemoteAccessSessions -> Text

-- | Create a value of <a>ListRemoteAccessSessions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRemoteAccessSessions'</a>,
--   <a>listRemoteAccessSessions_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:arn:ListRemoteAccessSessions'</a>,
--   <a>listRemoteAccessSessions_arn</a> - The Amazon Resource Name (ARN)
--   of the project about which you are requesting information.
newListRemoteAccessSessions :: Text -> ListRemoteAccessSessions

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listRemoteAccessSessions_nextToken :: Lens' ListRemoteAccessSessions (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project about which you are
--   requesting information.
listRemoteAccessSessions_arn :: Lens' ListRemoteAccessSessions Text

-- | Represents the response from the server after AWS Device Farm makes a
--   request to return information about the remote access session.
--   
--   <i>See:</i> <a>newListRemoteAccessSessionsResponse</a> smart
--   constructor.
data ListRemoteAccessSessionsResponse
ListRemoteAccessSessionsResponse' :: Maybe Text -> Maybe [RemoteAccessSession] -> Int -> ListRemoteAccessSessionsResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListRemoteAccessSessionsResponse'] :: ListRemoteAccessSessionsResponse -> Maybe Text

-- | A container that represents the metadata from the service about each
--   remote access session you are requesting.
[$sel:remoteAccessSessions:ListRemoteAccessSessionsResponse'] :: ListRemoteAccessSessionsResponse -> Maybe [RemoteAccessSession]

-- | The response's http status code.
[$sel:httpStatus:ListRemoteAccessSessionsResponse'] :: ListRemoteAccessSessionsResponse -> Int

-- | Create a value of <a>ListRemoteAccessSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRemoteAccessSessions'</a>,
--   <a>listRemoteAccessSessionsResponse_nextToken</a> - An identifier that
--   was returned from the previous call to this operation, which can be
--   used to return the next set of items in the list.
--   
--   <a>$sel:remoteAccessSessions:ListRemoteAccessSessionsResponse'</a>,
--   <a>listRemoteAccessSessionsResponse_remoteAccessSessions</a> - A
--   container that represents the metadata from the service about each
--   remote access session you are requesting.
--   
--   <a>$sel:httpStatus:ListRemoteAccessSessionsResponse'</a>,
--   <a>listRemoteAccessSessionsResponse_httpStatus</a> - The response's
--   http status code.
newListRemoteAccessSessionsResponse :: Int -> ListRemoteAccessSessionsResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listRemoteAccessSessionsResponse_nextToken :: Lens' ListRemoteAccessSessionsResponse (Maybe Text)

-- | A container that represents the metadata from the service about each
--   remote access session you are requesting.
listRemoteAccessSessionsResponse_remoteAccessSessions :: Lens' ListRemoteAccessSessionsResponse (Maybe [RemoteAccessSession])

-- | The response's http status code.
listRemoteAccessSessionsResponse_httpStatus :: Lens' ListRemoteAccessSessionsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance GHC.Show.Show Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance GHC.Read.Read Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessionsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessionsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessionsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListRemoteAccessSessions.ListRemoteAccessSessions


-- | Gets information about projects.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListProjects

-- | Represents a request to the list projects operation.
--   
--   <i>See:</i> <a>newListProjects</a> smart constructor.
data ListProjects
ListProjects' :: Maybe Text -> Maybe Text -> ListProjects

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListProjects'] :: ListProjects -> Maybe Text

-- | Optional. If no Amazon Resource Name (ARN) is specified, then AWS
--   Device Farm returns a list of all projects for the AWS account. You
--   can also specify a project ARN.
[$sel:arn:ListProjects'] :: ListProjects -> Maybe Text

-- | Create a value of <a>ListProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>, <a>listProjects_nextToken</a> -
--   An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
--   
--   <a>$sel:arn:ListProjects'</a>, <a>listProjects_arn</a> - Optional. If
--   no Amazon Resource Name (ARN) is specified, then AWS Device Farm
--   returns a list of all projects for the AWS account. You can also
--   specify a project ARN.
newListProjects :: ListProjects

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listProjects_nextToken :: Lens' ListProjects (Maybe Text)

-- | Optional. If no Amazon Resource Name (ARN) is specified, then AWS
--   Device Farm returns a list of all projects for the AWS account. You
--   can also specify a project ARN.
listProjects_arn :: Lens' ListProjects (Maybe Text)

-- | Represents the result of a list projects request.
--   
--   <i>See:</i> <a>newListProjectsResponse</a> smart constructor.
data ListProjectsResponse
ListProjectsResponse' :: Maybe Text -> Maybe [Project] -> Int -> ListProjectsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListProjectsResponse'] :: ListProjectsResponse -> Maybe Text

-- | Information about the projects.
[$sel:projects:ListProjectsResponse'] :: ListProjectsResponse -> Maybe [Project]

-- | The response's http status code.
[$sel:httpStatus:ListProjectsResponse'] :: ListProjectsResponse -> Int

-- | Create a value of <a>ListProjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>,
--   <a>listProjectsResponse_nextToken</a> - If the number of items that
--   are returned is significantly large, this is an identifier that is
--   also returned. It can be used in a subsequent call to this operation
--   to return the next set of items in the list.
--   
--   <a>$sel:projects:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_projects</a> - Information about the projects.
--   
--   <a>$sel:httpStatus:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_httpStatus</a> - The response's http status
--   code.
newListProjectsResponse :: Int -> ListProjectsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listProjectsResponse_nextToken :: Lens' ListProjectsResponse (Maybe Text)

-- | Information about the projects.
listProjectsResponse_projects :: Lens' ListProjectsResponse (Maybe [Project])

-- | The response's http status code.
listProjectsResponse_httpStatus :: Lens' ListProjectsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListProjects.ListProjects
instance GHC.Show.Show Network.AWS.DeviceFarm.ListProjects.ListProjects
instance GHC.Read.Read Network.AWS.DeviceFarm.ListProjects.ListProjects
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListProjects.ListProjects
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListProjects.ListProjectsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListProjects.ListProjectsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListProjects.ListProjectsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListProjects.ListProjectsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListProjects.ListProjects
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListProjects.ListProjectsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListProjects.ListProjects
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListProjects.ListProjects
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListProjects.ListProjects
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListProjects.ListProjects
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListProjects.ListProjects
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListProjects.ListProjects
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListProjects.ListProjects


-- | Returns a list of products or offerings that the user can manage
--   through the API. Each offering record indicates the recurring price
--   per unit and the frequency for that offering. The API returns a
--   <tt>NotEligible</tt> error if the user is not permitted to invoke the
--   operation. If you must be able to invoke this operation, contact
--   <a>aws-devicefarm-support@amazon.com</a>.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListOfferings

-- | Represents the request to list all offerings.
--   
--   <i>See:</i> <a>newListOfferings</a> smart constructor.
data ListOfferings
ListOfferings' :: Maybe Text -> ListOfferings

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListOfferings'] :: ListOfferings -> Maybe Text

-- | Create a value of <a>ListOfferings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferings'</a>, <a>listOfferings_nextToken</a> -
--   An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
newListOfferings :: ListOfferings

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferings_nextToken :: Lens' ListOfferings (Maybe Text)

-- | Represents the return values of the list of offerings.
--   
--   <i>See:</i> <a>newListOfferingsResponse</a> smart constructor.
data ListOfferingsResponse
ListOfferingsResponse' :: Maybe Text -> Maybe [Offering] -> Int -> ListOfferingsResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListOfferingsResponse'] :: ListOfferingsResponse -> Maybe Text

-- | A value that represents the list offering results.
[$sel:offerings:ListOfferingsResponse'] :: ListOfferingsResponse -> Maybe [Offering]

-- | The response's http status code.
[$sel:httpStatus:ListOfferingsResponse'] :: ListOfferingsResponse -> Int

-- | Create a value of <a>ListOfferingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferings'</a>,
--   <a>listOfferingsResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:offerings:ListOfferingsResponse'</a>,
--   <a>listOfferingsResponse_offerings</a> - A value that represents the
--   list offering results.
--   
--   <a>$sel:httpStatus:ListOfferingsResponse'</a>,
--   <a>listOfferingsResponse_httpStatus</a> - The response's http status
--   code.
newListOfferingsResponse :: Int -> ListOfferingsResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferingsResponse_nextToken :: Lens' ListOfferingsResponse (Maybe Text)

-- | A value that represents the list offering results.
listOfferingsResponse_offerings :: Lens' ListOfferingsResponse (Maybe [Offering])

-- | The response's http status code.
listOfferingsResponse_httpStatus :: Lens' ListOfferingsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance GHC.Show.Show Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance GHC.Read.Read Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListOfferings.ListOfferingsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListOfferings.ListOfferingsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListOfferings.ListOfferingsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListOfferings.ListOfferingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListOfferings.ListOfferingsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListOfferings.ListOfferings
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListOfferings.ListOfferings


-- | Returns a list of all historical purchases, renewals, and system
--   renewal transactions for an AWS account. The list is paginated and
--   ordered by a descending timestamp (most recent transactions are
--   first). The API returns a <tt>NotEligible</tt> error if the user is
--   not permitted to invoke the operation. If you must be able to invoke
--   this operation, contact <a>aws-devicefarm-support@amazon.com</a>.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListOfferingTransactions

-- | Represents the request to list the offering transaction history.
--   
--   <i>See:</i> <a>newListOfferingTransactions</a> smart constructor.
data ListOfferingTransactions
ListOfferingTransactions' :: Maybe Text -> ListOfferingTransactions

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListOfferingTransactions'] :: ListOfferingTransactions -> Maybe Text

-- | Create a value of <a>ListOfferingTransactions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferingTransactions'</a>,
--   <a>listOfferingTransactions_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
newListOfferingTransactions :: ListOfferingTransactions

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferingTransactions_nextToken :: Lens' ListOfferingTransactions (Maybe Text)

-- | Returns the transaction log of the specified offerings.
--   
--   <i>See:</i> <a>newListOfferingTransactionsResponse</a> smart
--   constructor.
data ListOfferingTransactionsResponse
ListOfferingTransactionsResponse' :: Maybe [OfferingTransaction] -> Maybe Text -> Int -> ListOfferingTransactionsResponse

-- | The audit log of subscriptions you have purchased and modified through
--   AWS Device Farm.
[$sel:offeringTransactions:ListOfferingTransactionsResponse'] :: ListOfferingTransactionsResponse -> Maybe [OfferingTransaction]

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListOfferingTransactionsResponse'] :: ListOfferingTransactionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListOfferingTransactionsResponse'] :: ListOfferingTransactionsResponse -> Int

-- | Create a value of <a>ListOfferingTransactionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringTransactions:ListOfferingTransactionsResponse'</a>,
--   <a>listOfferingTransactionsResponse_offeringTransactions</a> - The
--   audit log of subscriptions you have purchased and modified through AWS
--   Device Farm.
--   
--   <a>$sel:nextToken:ListOfferingTransactions'</a>,
--   <a>listOfferingTransactionsResponse_nextToken</a> - An identifier that
--   was returned from the previous call to this operation, which can be
--   used to return the next set of items in the list.
--   
--   <a>$sel:httpStatus:ListOfferingTransactionsResponse'</a>,
--   <a>listOfferingTransactionsResponse_httpStatus</a> - The response's
--   http status code.
newListOfferingTransactionsResponse :: Int -> ListOfferingTransactionsResponse

-- | The audit log of subscriptions you have purchased and modified through
--   AWS Device Farm.
listOfferingTransactionsResponse_offeringTransactions :: Lens' ListOfferingTransactionsResponse (Maybe [OfferingTransaction])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferingTransactionsResponse_nextToken :: Lens' ListOfferingTransactionsResponse (Maybe Text)

-- | The response's http status code.
listOfferingTransactionsResponse_httpStatus :: Lens' ListOfferingTransactionsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance GHC.Show.Show Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance GHC.Read.Read Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactionsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactionsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactionsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListOfferingTransactions.ListOfferingTransactions


-- | Returns a list of offering promotions. Each offering promotion record
--   contains the ID and description of the promotion. The API returns a
--   <tt>NotEligible</tt> error if the caller is not permitted to invoke
--   the operation. Contact <a>aws-devicefarm-support@amazon.com</a> if you
--   must be able to invoke this operation.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListOfferingPromotions

-- | <i>See:</i> <a>newListOfferingPromotions</a> smart constructor.
data ListOfferingPromotions
ListOfferingPromotions' :: Maybe Text -> ListOfferingPromotions

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListOfferingPromotions'] :: ListOfferingPromotions -> Maybe Text

-- | Create a value of <a>ListOfferingPromotions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferingPromotions'</a>,
--   <a>listOfferingPromotions_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
newListOfferingPromotions :: ListOfferingPromotions

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferingPromotions_nextToken :: Lens' ListOfferingPromotions (Maybe Text)

-- | <i>See:</i> <a>newListOfferingPromotionsResponse</a> smart
--   constructor.
data ListOfferingPromotionsResponse
ListOfferingPromotionsResponse' :: Maybe Text -> Maybe [OfferingPromotion] -> Int -> ListOfferingPromotionsResponse

-- | An identifier to be used in the next call to this operation, to return
--   the next set of items in the list.
[$sel:nextToken:ListOfferingPromotionsResponse'] :: ListOfferingPromotionsResponse -> Maybe Text

-- | Information about the offering promotions.
[$sel:offeringPromotions:ListOfferingPromotionsResponse'] :: ListOfferingPromotionsResponse -> Maybe [OfferingPromotion]

-- | The response's http status code.
[$sel:httpStatus:ListOfferingPromotionsResponse'] :: ListOfferingPromotionsResponse -> Int

-- | Create a value of <a>ListOfferingPromotionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferingPromotions'</a>,
--   <a>listOfferingPromotionsResponse_nextToken</a> - An identifier to be
--   used in the next call to this operation, to return the next set of
--   items in the list.
--   
--   <a>$sel:offeringPromotions:ListOfferingPromotionsResponse'</a>,
--   <a>listOfferingPromotionsResponse_offeringPromotions</a> - Information
--   about the offering promotions.
--   
--   <a>$sel:httpStatus:ListOfferingPromotionsResponse'</a>,
--   <a>listOfferingPromotionsResponse_httpStatus</a> - The response's http
--   status code.
newListOfferingPromotionsResponse :: Int -> ListOfferingPromotionsResponse

-- | An identifier to be used in the next call to this operation, to return
--   the next set of items in the list.
listOfferingPromotionsResponse_nextToken :: Lens' ListOfferingPromotionsResponse (Maybe Text)

-- | Information about the offering promotions.
listOfferingPromotionsResponse_offeringPromotions :: Lens' ListOfferingPromotionsResponse (Maybe [OfferingPromotion])

-- | The response's http status code.
listOfferingPromotionsResponse_httpStatus :: Lens' ListOfferingPromotionsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance GHC.Show.Show Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance GHC.Read.Read Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotionsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotionsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotionsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListOfferingPromotions.ListOfferingPromotions


-- | Returns the list of available network profiles.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListNetworkProfiles

-- | <i>See:</i> <a>newListNetworkProfiles</a> smart constructor.
data ListNetworkProfiles
ListNetworkProfiles' :: Maybe Text -> Maybe NetworkProfileType -> Text -> ListNetworkProfiles

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListNetworkProfiles'] :: ListNetworkProfiles -> Maybe Text

-- | The type of network profile to return information about. Valid values
--   are listed here.
[$sel:type':ListNetworkProfiles'] :: ListNetworkProfiles -> Maybe NetworkProfileType

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list network profiles.
[$sel:arn:ListNetworkProfiles'] :: ListNetworkProfiles -> Text

-- | Create a value of <a>ListNetworkProfiles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNetworkProfiles'</a>,
--   <a>listNetworkProfiles_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:type':ListNetworkProfiles'</a>,
--   <a>listNetworkProfiles_type</a> - The type of network profile to
--   return information about. Valid values are listed here.
--   
--   <a>$sel:arn:ListNetworkProfiles'</a>, <a>listNetworkProfiles_arn</a> -
--   The Amazon Resource Name (ARN) of the project for which you want to
--   list network profiles.
newListNetworkProfiles :: Text -> ListNetworkProfiles

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listNetworkProfiles_nextToken :: Lens' ListNetworkProfiles (Maybe Text)

-- | The type of network profile to return information about. Valid values
--   are listed here.
listNetworkProfiles_type :: Lens' ListNetworkProfiles (Maybe NetworkProfileType)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list network profiles.
listNetworkProfiles_arn :: Lens' ListNetworkProfiles Text

-- | <i>See:</i> <a>newListNetworkProfilesResponse</a> smart constructor.
data ListNetworkProfilesResponse
ListNetworkProfilesResponse' :: Maybe Text -> Maybe [NetworkProfile] -> Int -> ListNetworkProfilesResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListNetworkProfilesResponse'] :: ListNetworkProfilesResponse -> Maybe Text

-- | A list of the available network profiles.
[$sel:networkProfiles:ListNetworkProfilesResponse'] :: ListNetworkProfilesResponse -> Maybe [NetworkProfile]

-- | The response's http status code.
[$sel:httpStatus:ListNetworkProfilesResponse'] :: ListNetworkProfilesResponse -> Int

-- | Create a value of <a>ListNetworkProfilesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNetworkProfiles'</a>,
--   <a>listNetworkProfilesResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:networkProfiles:ListNetworkProfilesResponse'</a>,
--   <a>listNetworkProfilesResponse_networkProfiles</a> - A list of the
--   available network profiles.
--   
--   <a>$sel:httpStatus:ListNetworkProfilesResponse'</a>,
--   <a>listNetworkProfilesResponse_httpStatus</a> - The response's http
--   status code.
newListNetworkProfilesResponse :: Int -> ListNetworkProfilesResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listNetworkProfilesResponse_nextToken :: Lens' ListNetworkProfilesResponse (Maybe Text)

-- | A list of the available network profiles.
listNetworkProfilesResponse_networkProfiles :: Lens' ListNetworkProfilesResponse (Maybe [NetworkProfile])

-- | The response's http status code.
listNetworkProfilesResponse_httpStatus :: Lens' ListNetworkProfilesResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance GHC.Show.Show Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance GHC.Read.Read Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfilesResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfilesResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfilesResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfilesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfilesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListNetworkProfiles.ListNetworkProfiles


-- | Gets information about jobs for a given test run.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListJobs

-- | Represents a request to the list jobs operation.
--   
--   <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Text -> ListJobs

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListJobs'] :: ListJobs -> Maybe Text

-- | The run's Amazon Resource Name (ARN).
[$sel:arn:ListJobs'] :: ListJobs -> Text

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListJobs'</a>, <a>listJobs_arn</a> - The run's Amazon
--   Resource Name (ARN).
newListJobs :: Text -> ListJobs

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The run's Amazon Resource Name (ARN).
listJobs_arn :: Lens' ListJobs Text

-- | Represents the result of a list jobs request.
--   
--   <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Maybe [Job] -> Int -> ListJobsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListJobsResponse'] :: ListJobsResponse -> Maybe Text

-- | Information about the jobs.
[$sel:jobs:ListJobsResponse'] :: ListJobsResponse -> Maybe [Job]

-- | The response's http status code.
[$sel:httpStatus:ListJobsResponse'] :: ListJobsResponse -> Int

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> -
--   If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
--   
--   <a>$sel:jobs:ListJobsResponse'</a>, <a>listJobsResponse_jobs</a> -
--   Information about the jobs.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
newListJobsResponse :: Int -> ListJobsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | Information about the jobs.
listJobsResponse_jobs :: Lens' ListJobsResponse (Maybe [Job])

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListJobs.ListJobs
instance GHC.Show.Show Network.AWS.DeviceFarm.ListJobs.ListJobs
instance GHC.Read.Read Network.AWS.DeviceFarm.ListJobs.ListJobs
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListJobs.ListJobs
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListJobs.ListJobsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListJobs.ListJobsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListJobs.ListJobsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListJobs.ListJobsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListJobs.ListJobs
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListJobs.ListJobsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListJobs.ListJobs
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListJobs.ListJobs
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListJobs.ListJobs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListJobs.ListJobs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListJobs.ListJobs
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListJobs.ListJobs
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListJobs.ListJobs


-- | Returns information about all the instance profiles in an AWS account.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListInstanceProfiles

-- | <i>See:</i> <a>newListInstanceProfiles</a> smart constructor.
data ListInstanceProfiles
ListInstanceProfiles' :: Maybe Text -> Maybe Int -> ListInstanceProfiles

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListInstanceProfiles'] :: ListInstanceProfiles -> Maybe Text

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
[$sel:maxResults:ListInstanceProfiles'] :: ListInstanceProfiles -> Maybe Int

-- | Create a value of <a>ListInstanceProfiles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInstanceProfiles'</a>,
--   <a>listInstanceProfiles_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:maxResults:ListInstanceProfiles'</a>,
--   <a>listInstanceProfiles_maxResults</a> - An integer that specifies the
--   maximum number of items you want to return in the API response.
newListInstanceProfiles :: ListInstanceProfiles

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listInstanceProfiles_nextToken :: Lens' ListInstanceProfiles (Maybe Text)

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
listInstanceProfiles_maxResults :: Lens' ListInstanceProfiles (Maybe Int)

-- | <i>See:</i> <a>newListInstanceProfilesResponse</a> smart constructor.
data ListInstanceProfilesResponse
ListInstanceProfilesResponse' :: Maybe Text -> Maybe [InstanceProfile] -> Int -> ListInstanceProfilesResponse

-- | An identifier that can be used in the next call to this operation to
--   return the next set of items in the list.
[$sel:nextToken:ListInstanceProfilesResponse'] :: ListInstanceProfilesResponse -> Maybe Text

-- | An object that contains information about your instance profiles.
[$sel:instanceProfiles:ListInstanceProfilesResponse'] :: ListInstanceProfilesResponse -> Maybe [InstanceProfile]

-- | The response's http status code.
[$sel:httpStatus:ListInstanceProfilesResponse'] :: ListInstanceProfilesResponse -> Int

-- | Create a value of <a>ListInstanceProfilesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInstanceProfiles'</a>,
--   <a>listInstanceProfilesResponse_nextToken</a> - An identifier that can
--   be used in the next call to this operation to return the next set of
--   items in the list.
--   
--   <a>$sel:instanceProfiles:ListInstanceProfilesResponse'</a>,
--   <a>listInstanceProfilesResponse_instanceProfiles</a> - An object that
--   contains information about your instance profiles.
--   
--   <a>$sel:httpStatus:ListInstanceProfilesResponse'</a>,
--   <a>listInstanceProfilesResponse_httpStatus</a> - The response's http
--   status code.
newListInstanceProfilesResponse :: Int -> ListInstanceProfilesResponse

-- | An identifier that can be used in the next call to this operation to
--   return the next set of items in the list.
listInstanceProfilesResponse_nextToken :: Lens' ListInstanceProfilesResponse (Maybe Text)

-- | An object that contains information about your instance profiles.
listInstanceProfilesResponse_instanceProfiles :: Lens' ListInstanceProfilesResponse (Maybe [InstanceProfile])

-- | The response's http status code.
listInstanceProfilesResponse_httpStatus :: Lens' ListInstanceProfilesResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance GHC.Show.Show Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance GHC.Read.Read Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfilesResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfilesResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfilesResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfilesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfilesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListInstanceProfiles.ListInstanceProfiles


-- | Gets information about unique device types.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListDevices

-- | Represents the result of a list devices request.
--   
--   <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Text -> Maybe [DeviceFilter] -> ListDevices

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListDevices'] :: ListDevices -> Maybe Text

-- | The Amazon Resource Name (ARN) of the project.
[$sel:arn:ListDevices'] :: ListDevices -> Maybe Text

-- | Used to select a set of devices. A filter is made up of an attribute,
--   an operator, and one or more values.
--   
--   <ul>
--   <li>Attribute: The aspect of a device such as platform or model used
--   as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this attribute is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li>Operator: The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li>Values: An array of one or more filter values.<ul><li>The IN and
--   NOT_IN operators take a values array that has one or more
--   elements.</li><li>The other operators require an array with a single
--   element.</li><li>In a request, the AVAILABILITY attribute takes the
--   following values: AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li></ul></li>
--   </ul>
[$sel:filters:ListDevices'] :: ListDevices -> Maybe [DeviceFilter]

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>, <a>listDevices_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListDevices'</a>, <a>listDevices_arn</a> - The Amazon
--   Resource Name (ARN) of the project.
--   
--   <a>$sel:filters:ListDevices'</a>, <a>listDevices_filters</a> - Used to
--   select a set of devices. A filter is made up of an attribute, an
--   operator, and one or more values.
--   
--   <ul>
--   <li>Attribute: The aspect of a device such as platform or model used
--   as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this attribute is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li>Operator: The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li>Values: An array of one or more filter values.<ul><li>The IN and
--   NOT_IN operators take a values array that has one or more
--   elements.</li><li>The other operators require an array with a single
--   element.</li><li>In a request, the AVAILABILITY attribute takes the
--   following values: AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li></ul></li>
--   </ul>
newListDevices :: ListDevices

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listDevices_nextToken :: Lens' ListDevices (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project.
listDevices_arn :: Lens' ListDevices (Maybe Text)

-- | Used to select a set of devices. A filter is made up of an attribute,
--   an operator, and one or more values.
--   
--   <ul>
--   <li>Attribute: The aspect of a device such as platform or model used
--   as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this attribute is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li>Operator: The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li>Values: An array of one or more filter values.<ul><li>The IN and
--   NOT_IN operators take a values array that has one or more
--   elements.</li><li>The other operators require an array with a single
--   element.</li><li>In a request, the AVAILABILITY attribute takes the
--   following values: AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li></ul></li>
--   </ul>
listDevices_filters :: Lens' ListDevices (Maybe [DeviceFilter])

-- | Represents the result of a list devices operation.
--   
--   <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Maybe [Device] -> Int -> ListDevicesResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListDevicesResponse'] :: ListDevicesResponse -> Maybe Text

-- | Information about the devices.
[$sel:devices:ListDevicesResponse'] :: ListDevicesResponse -> Maybe [Device]

-- | The response's http status code.
[$sel:httpStatus:ListDevicesResponse'] :: ListDevicesResponse -> Int

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>,
--   <a>listDevicesResponse_nextToken</a> - If the number of items that are
--   returned is significantly large, this is an identifier that is also
--   returned. It can be used in a subsequent call to this operation to
--   return the next set of items in the list.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - Information about the devices.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesResponse :: Int -> ListDevicesResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listDevicesResponse_nextToken :: Lens' ListDevicesResponse (Maybe Text)

-- | Information about the devices.
listDevicesResponse_devices :: Lens' ListDevicesResponse (Maybe [Device])

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListDevices.ListDevices
instance GHC.Show.Show Network.AWS.DeviceFarm.ListDevices.ListDevices
instance GHC.Read.Read Network.AWS.DeviceFarm.ListDevices.ListDevices
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListDevices.ListDevices
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListDevices.ListDevicesResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListDevices.ListDevicesResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListDevices.ListDevicesResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListDevices.ListDevicesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListDevices.ListDevices
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListDevices.ListDevicesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListDevices.ListDevices
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListDevices.ListDevices
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListDevices.ListDevices
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListDevices.ListDevices
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListDevices.ListDevices
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListDevices.ListDevices
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListDevices.ListDevices


-- | Gets information about device pools.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListDevicePools

-- | Represents the result of a list device pools request.
--   
--   <i>See:</i> <a>newListDevicePools</a> smart constructor.
data ListDevicePools
ListDevicePools' :: Maybe Text -> Maybe DevicePoolType -> Text -> ListDevicePools

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListDevicePools'] :: ListDevicePools -> Maybe Text

-- | The device pools' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
[$sel:type':ListDevicePools'] :: ListDevicePools -> Maybe DevicePoolType

-- | The project ARN.
[$sel:arn:ListDevicePools'] :: ListDevicePools -> Text

-- | Create a value of <a>ListDevicePools</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicePools'</a>,
--   <a>listDevicePools_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:type':ListDevicePools'</a>, <a>listDevicePools_type</a> - The
--   device pools' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
--   
--   <a>$sel:arn:ListDevicePools'</a>, <a>listDevicePools_arn</a> - The
--   project ARN.
newListDevicePools :: Text -> ListDevicePools

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listDevicePools_nextToken :: Lens' ListDevicePools (Maybe Text)

-- | The device pools' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
listDevicePools_type :: Lens' ListDevicePools (Maybe DevicePoolType)

-- | The project ARN.
listDevicePools_arn :: Lens' ListDevicePools Text

-- | Represents the result of a list device pools request.
--   
--   <i>See:</i> <a>newListDevicePoolsResponse</a> smart constructor.
data ListDevicePoolsResponse
ListDevicePoolsResponse' :: Maybe Text -> Maybe [DevicePool] -> Int -> ListDevicePoolsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListDevicePoolsResponse'] :: ListDevicePoolsResponse -> Maybe Text

-- | Information about the device pools.
[$sel:devicePools:ListDevicePoolsResponse'] :: ListDevicePoolsResponse -> Maybe [DevicePool]

-- | The response's http status code.
[$sel:httpStatus:ListDevicePoolsResponse'] :: ListDevicePoolsResponse -> Int

-- | Create a value of <a>ListDevicePoolsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicePools'</a>,
--   <a>listDevicePoolsResponse_nextToken</a> - If the number of items that
--   are returned is significantly large, this is an identifier that is
--   also returned. It can be used in a subsequent call to this operation
--   to return the next set of items in the list.
--   
--   <a>$sel:devicePools:ListDevicePoolsResponse'</a>,
--   <a>listDevicePoolsResponse_devicePools</a> - Information about the
--   device pools.
--   
--   <a>$sel:httpStatus:ListDevicePoolsResponse'</a>,
--   <a>listDevicePoolsResponse_httpStatus</a> - The response's http status
--   code.
newListDevicePoolsResponse :: Int -> ListDevicePoolsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listDevicePoolsResponse_nextToken :: Lens' ListDevicePoolsResponse (Maybe Text)

-- | Information about the device pools.
listDevicePoolsResponse_devicePools :: Lens' ListDevicePoolsResponse (Maybe [DevicePool])

-- | The response's http status code.
listDevicePoolsResponse_httpStatus :: Lens' ListDevicePoolsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance GHC.Show.Show Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance GHC.Read.Read Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListDevicePools.ListDevicePoolsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListDevicePools.ListDevicePoolsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListDevicePools.ListDevicePoolsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListDevicePools.ListDevicePoolsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListDevicePools.ListDevicePoolsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListDevicePools.ListDevicePools


-- | Returns information about the private device instances associated with
--   one or more AWS accounts.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListDeviceInstances

-- | <i>See:</i> <a>newListDeviceInstances</a> smart constructor.
data ListDeviceInstances
ListDeviceInstances' :: Maybe Text -> Maybe Int -> ListDeviceInstances

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListDeviceInstances'] :: ListDeviceInstances -> Maybe Text

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
[$sel:maxResults:ListDeviceInstances'] :: ListDeviceInstances -> Maybe Int

-- | Create a value of <a>ListDeviceInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceInstances'</a>,
--   <a>listDeviceInstances_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:maxResults:ListDeviceInstances'</a>,
--   <a>listDeviceInstances_maxResults</a> - An integer that specifies the
--   maximum number of items you want to return in the API response.
newListDeviceInstances :: ListDeviceInstances

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listDeviceInstances_nextToken :: Lens' ListDeviceInstances (Maybe Text)

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
listDeviceInstances_maxResults :: Lens' ListDeviceInstances (Maybe Int)

-- | <i>See:</i> <a>newListDeviceInstancesResponse</a> smart constructor.
data ListDeviceInstancesResponse
ListDeviceInstancesResponse' :: Maybe Text -> Maybe [DeviceInstance] -> Int -> ListDeviceInstancesResponse

-- | An identifier that can be used in the next call to this operation to
--   return the next set of items in the list.
[$sel:nextToken:ListDeviceInstancesResponse'] :: ListDeviceInstancesResponse -> Maybe Text

-- | An object that contains information about your device instances.
[$sel:deviceInstances:ListDeviceInstancesResponse'] :: ListDeviceInstancesResponse -> Maybe [DeviceInstance]

-- | The response's http status code.
[$sel:httpStatus:ListDeviceInstancesResponse'] :: ListDeviceInstancesResponse -> Int

-- | Create a value of <a>ListDeviceInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceInstances'</a>,
--   <a>listDeviceInstancesResponse_nextToken</a> - An identifier that can
--   be used in the next call to this operation to return the next set of
--   items in the list.
--   
--   <a>$sel:deviceInstances:ListDeviceInstancesResponse'</a>,
--   <a>listDeviceInstancesResponse_deviceInstances</a> - An object that
--   contains information about your device instances.
--   
--   <a>$sel:httpStatus:ListDeviceInstancesResponse'</a>,
--   <a>listDeviceInstancesResponse_httpStatus</a> - The response's http
--   status code.
newListDeviceInstancesResponse :: Int -> ListDeviceInstancesResponse

-- | An identifier that can be used in the next call to this operation to
--   return the next set of items in the list.
listDeviceInstancesResponse_nextToken :: Lens' ListDeviceInstancesResponse (Maybe Text)

-- | An object that contains information about your device instances.
listDeviceInstancesResponse_deviceInstances :: Lens' ListDeviceInstancesResponse (Maybe [DeviceInstance])

-- | The response's http status code.
listDeviceInstancesResponse_httpStatus :: Lens' ListDeviceInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance GHC.Show.Show Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance GHC.Read.Read Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstancesResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstancesResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstancesResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstancesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListDeviceInstances.ListDeviceInstances


-- | Gets information about artifacts.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.ListArtifacts

-- | Represents a request to the list artifacts operation.
--   
--   <i>See:</i> <a>newListArtifacts</a> smart constructor.
data ListArtifacts
ListArtifacts' :: Maybe Text -> Text -> ArtifactCategory -> ListArtifacts

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:ListArtifacts'] :: ListArtifacts -> Maybe Text

-- | The run, job, suite, or test ARN.
[$sel:arn:ListArtifacts'] :: ListArtifacts -> Text

-- | The artifacts' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>FILE</li>
--   <li>LOG</li>
--   <li>SCREENSHOT</li>
--   </ul>
[$sel:type':ListArtifacts'] :: ListArtifacts -> ArtifactCategory

-- | Create a value of <a>ListArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListArtifacts'</a>, <a>listArtifacts_nextToken</a> -
--   An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
--   
--   <a>$sel:arn:ListArtifacts'</a>, <a>listArtifacts_arn</a> - The run,
--   job, suite, or test ARN.
--   
--   <a>$sel:type':ListArtifacts'</a>, <a>listArtifacts_type</a> - The
--   artifacts' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>FILE</li>
--   <li>LOG</li>
--   <li>SCREENSHOT</li>
--   </ul>
newListArtifacts :: Text -> ArtifactCategory -> ListArtifacts

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listArtifacts_nextToken :: Lens' ListArtifacts (Maybe Text)

-- | The run, job, suite, or test ARN.
listArtifacts_arn :: Lens' ListArtifacts Text

-- | The artifacts' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>FILE</li>
--   <li>LOG</li>
--   <li>SCREENSHOT</li>
--   </ul>
listArtifacts_type :: Lens' ListArtifacts ArtifactCategory

-- | Represents the result of a list artifacts operation.
--   
--   <i>See:</i> <a>newListArtifactsResponse</a> smart constructor.
data ListArtifactsResponse
ListArtifactsResponse' :: Maybe Text -> Maybe [Artifact] -> Int -> ListArtifactsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
[$sel:nextToken:ListArtifactsResponse'] :: ListArtifactsResponse -> Maybe Text

-- | Information about the artifacts.
[$sel:artifacts:ListArtifactsResponse'] :: ListArtifactsResponse -> Maybe [Artifact]

-- | The response's http status code.
[$sel:httpStatus:ListArtifactsResponse'] :: ListArtifactsResponse -> Int

-- | Create a value of <a>ListArtifactsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListArtifacts'</a>,
--   <a>listArtifactsResponse_nextToken</a> - If the number of items that
--   are returned is significantly large, this is an identifier that is
--   also returned. It can be used in a subsequent call to this operation
--   to return the next set of items in the list.
--   
--   <a>$sel:artifacts:ListArtifactsResponse'</a>,
--   <a>listArtifactsResponse_artifacts</a> - Information about the
--   artifacts.
--   
--   <a>$sel:httpStatus:ListArtifactsResponse'</a>,
--   <a>listArtifactsResponse_httpStatus</a> - The response's http status
--   code.
newListArtifactsResponse :: Int -> ListArtifactsResponse

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listArtifactsResponse_nextToken :: Lens' ListArtifactsResponse (Maybe Text)

-- | Information about the artifacts.
listArtifactsResponse_artifacts :: Lens' ListArtifactsResponse (Maybe [Artifact])

-- | The response's http status code.
listArtifactsResponse_httpStatus :: Lens' ListArtifactsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance GHC.Show.Show Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance GHC.Read.Read Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance GHC.Generics.Generic Network.AWS.DeviceFarm.ListArtifacts.ListArtifactsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.ListArtifacts.ListArtifactsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.ListArtifacts.ListArtifactsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.ListArtifacts.ListArtifactsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListArtifacts.ListArtifactsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.ListArtifacts.ListArtifacts


-- | Installs an application to the device in a remote access session. For
--   Android applications, the file must be in .apk format. For iOS
--   applications, the file must be in .ipa format.
module Network.AWS.DeviceFarm.InstallToRemoteAccessSession

-- | Represents the request to install an Android application (in .apk
--   format) or an iOS application (in .ipa format) as part of a remote
--   access session.
--   
--   <i>See:</i> <a>newInstallToRemoteAccessSession</a> smart constructor.
data InstallToRemoteAccessSession
InstallToRemoteAccessSession' :: Text -> Text -> InstallToRemoteAccessSession

-- | The Amazon Resource Name (ARN) of the remote access session about
--   which you are requesting information.
[$sel:remoteAccessSessionArn:InstallToRemoteAccessSession'] :: InstallToRemoteAccessSession -> Text

-- | The ARN of the app about which you are requesting information.
[$sel:appArn:InstallToRemoteAccessSession'] :: InstallToRemoteAccessSession -> Text

-- | Create a value of <a>InstallToRemoteAccessSession</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSessionArn:InstallToRemoteAccessSession'</a>,
--   <a>installToRemoteAccessSession_remoteAccessSessionArn</a> - The
--   Amazon Resource Name (ARN) of the remote access session about which
--   you are requesting information.
--   
--   <a>$sel:appArn:InstallToRemoteAccessSession'</a>,
--   <a>installToRemoteAccessSession_appArn</a> - The ARN of the app about
--   which you are requesting information.
newInstallToRemoteAccessSession :: Text -> Text -> InstallToRemoteAccessSession

-- | The Amazon Resource Name (ARN) of the remote access session about
--   which you are requesting information.
installToRemoteAccessSession_remoteAccessSessionArn :: Lens' InstallToRemoteAccessSession Text

-- | The ARN of the app about which you are requesting information.
installToRemoteAccessSession_appArn :: Lens' InstallToRemoteAccessSession Text

-- | Represents the response from the server after AWS Device Farm makes a
--   request to install to a remote access session.
--   
--   <i>See:</i> <a>newInstallToRemoteAccessSessionResponse</a> smart
--   constructor.
data InstallToRemoteAccessSessionResponse
InstallToRemoteAccessSessionResponse' :: Maybe Upload -> Int -> InstallToRemoteAccessSessionResponse

-- | An app to upload or that has been uploaded.
[$sel:appUpload:InstallToRemoteAccessSessionResponse'] :: InstallToRemoteAccessSessionResponse -> Maybe Upload

-- | The response's http status code.
[$sel:httpStatus:InstallToRemoteAccessSessionResponse'] :: InstallToRemoteAccessSessionResponse -> Int

-- | Create a value of <a>InstallToRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appUpload:InstallToRemoteAccessSessionResponse'</a>,
--   <a>installToRemoteAccessSessionResponse_appUpload</a> - An app to
--   upload or that has been uploaded.
--   
--   <a>$sel:httpStatus:InstallToRemoteAccessSessionResponse'</a>,
--   <a>installToRemoteAccessSessionResponse_httpStatus</a> - The
--   response's http status code.
newInstallToRemoteAccessSessionResponse :: Int -> InstallToRemoteAccessSessionResponse

-- | An app to upload or that has been uploaded.
installToRemoteAccessSessionResponse_appUpload :: Lens' InstallToRemoteAccessSessionResponse (Maybe Upload)

-- | The response's http status code.
installToRemoteAccessSessionResponse_httpStatus :: Lens' InstallToRemoteAccessSessionResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance GHC.Show.Show Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance GHC.Read.Read Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance GHC.Classes.Eq Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance GHC.Generics.Generic Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSessionResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSessionResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.InstallToRemoteAccessSession.InstallToRemoteAccessSession


-- | Returns information about the configuration settings for your Amazon
--   Virtual Private Cloud (VPC) endpoint.
module Network.AWS.DeviceFarm.GetVPCEConfiguration

-- | <i>See:</i> <a>newGetVPCEConfiguration</a> smart constructor.
data GetVPCEConfiguration
GetVPCEConfiguration' :: Text -> GetVPCEConfiguration

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to describe.
[$sel:arn:GetVPCEConfiguration'] :: GetVPCEConfiguration -> Text

-- | Create a value of <a>GetVPCEConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetVPCEConfiguration'</a>, <a>getVPCEConfiguration_arn</a>
--   - The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to describe.
newGetVPCEConfiguration :: Text -> GetVPCEConfiguration

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to describe.
getVPCEConfiguration_arn :: Lens' GetVPCEConfiguration Text

-- | <i>See:</i> <a>newGetVPCEConfigurationResponse</a> smart constructor.
data GetVPCEConfigurationResponse
GetVPCEConfigurationResponse' :: Maybe VPCEConfiguration -> Int -> GetVPCEConfigurationResponse

-- | An object that contains information about your VPC endpoint
--   configuration.
[$sel:vpceConfiguration:GetVPCEConfigurationResponse'] :: GetVPCEConfigurationResponse -> Maybe VPCEConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetVPCEConfigurationResponse'] :: GetVPCEConfigurationResponse -> Int

-- | Create a value of <a>GetVPCEConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfiguration:GetVPCEConfigurationResponse'</a>,
--   <a>getVPCEConfigurationResponse_vpceConfiguration</a> - An object that
--   contains information about your VPC endpoint configuration.
--   
--   <a>$sel:httpStatus:GetVPCEConfigurationResponse'</a>,
--   <a>getVPCEConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newGetVPCEConfigurationResponse :: Int -> GetVPCEConfigurationResponse

-- | An object that contains information about your VPC endpoint
--   configuration.
getVPCEConfigurationResponse_vpceConfiguration :: Lens' GetVPCEConfigurationResponse (Maybe VPCEConfiguration)

-- | The response's http status code.
getVPCEConfigurationResponse_httpStatus :: Lens' GetVPCEConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfigurationResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfigurationResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfigurationResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetVPCEConfiguration.GetVPCEConfiguration


-- | Gets information about an upload.
module Network.AWS.DeviceFarm.GetUpload

-- | Represents a request to the get upload operation.
--   
--   <i>See:</i> <a>newGetUpload</a> smart constructor.
data GetUpload
GetUpload' :: Text -> GetUpload

-- | The upload's ARN.
[$sel:arn:GetUpload'] :: GetUpload -> Text

-- | Create a value of <a>GetUpload</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetUpload'</a>, <a>getUpload_arn</a> - The upload's ARN.
newGetUpload :: Text -> GetUpload

-- | The upload's ARN.
getUpload_arn :: Lens' GetUpload Text

-- | Represents the result of a get upload request.
--   
--   <i>See:</i> <a>newGetUploadResponse</a> smart constructor.
data GetUploadResponse
GetUploadResponse' :: Maybe Upload -> Int -> GetUploadResponse

-- | An app or a set of one or more tests to upload or that have been
--   uploaded.
[$sel:upload:GetUploadResponse'] :: GetUploadResponse -> Maybe Upload

-- | The response's http status code.
[$sel:httpStatus:GetUploadResponse'] :: GetUploadResponse -> Int

-- | Create a value of <a>GetUploadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upload:GetUploadResponse'</a>, <a>getUploadResponse_upload</a>
--   - An app or a set of one or more tests to upload or that have been
--   uploaded.
--   
--   <a>$sel:httpStatus:GetUploadResponse'</a>,
--   <a>getUploadResponse_httpStatus</a> - The response's http status code.
newGetUploadResponse :: Int -> GetUploadResponse

-- | An app or a set of one or more tests to upload or that have been
--   uploaded.
getUploadResponse_upload :: Lens' GetUploadResponse (Maybe Upload)

-- | The response's http status code.
getUploadResponse_httpStatus :: Lens' GetUploadResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetUpload.GetUpload
instance GHC.Show.Show Network.AWS.DeviceFarm.GetUpload.GetUpload
instance GHC.Read.Read Network.AWS.DeviceFarm.GetUpload.GetUpload
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetUpload.GetUpload
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetUpload.GetUploadResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetUpload.GetUploadResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetUpload.GetUploadResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetUpload.GetUpload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetUpload.GetUploadResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetUpload.GetUpload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetUpload.GetUpload
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetUpload.GetUpload
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetUpload.GetUpload
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetUpload.GetUpload
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetUpload.GetUpload


-- | A session is an instance of a browser created through a
--   <tt>RemoteWebDriver</tt> with the URL from
--   CreateTestGridUrlResult$url. You can use the following to look up
--   sessions:
--   
--   <ul>
--   <li>The session ARN (GetTestGridSessionRequest$sessionArn).</li>
--   <li>The project ARN and a session ID
--   (GetTestGridSessionRequest$projectArn and
--   GetTestGridSessionRequest$sessionId).</li>
--   </ul>
module Network.AWS.DeviceFarm.GetTestGridSession

-- | <i>See:</i> <a>newGetTestGridSession</a> smart constructor.
data GetTestGridSession
GetTestGridSession' :: Maybe Text -> Maybe Text -> Maybe Text -> GetTestGridSession

-- | An ARN that uniquely identifies a TestGridSession.
[$sel:sessionArn:GetTestGridSession'] :: GetTestGridSession -> Maybe Text

-- | An ID associated with this session.
[$sel:sessionId:GetTestGridSession'] :: GetTestGridSession -> Maybe Text

-- | The ARN for the project that this session belongs to. See
--   CreateTestGridProject and ListTestGridProjects.
[$sel:projectArn:GetTestGridSession'] :: GetTestGridSession -> Maybe Text

-- | Create a value of <a>GetTestGridSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionArn:GetTestGridSession'</a>,
--   <a>getTestGridSession_sessionArn</a> - An ARN that uniquely identifies
--   a TestGridSession.
--   
--   <a>$sel:sessionId:GetTestGridSession'</a>,
--   <a>getTestGridSession_sessionId</a> - An ID associated with this
--   session.
--   
--   <a>$sel:projectArn:GetTestGridSession'</a>,
--   <a>getTestGridSession_projectArn</a> - The ARN for the project that
--   this session belongs to. See CreateTestGridProject and
--   ListTestGridProjects.
newGetTestGridSession :: GetTestGridSession

-- | An ARN that uniquely identifies a TestGridSession.
getTestGridSession_sessionArn :: Lens' GetTestGridSession (Maybe Text)

-- | An ID associated with this session.
getTestGridSession_sessionId :: Lens' GetTestGridSession (Maybe Text)

-- | The ARN for the project that this session belongs to. See
--   CreateTestGridProject and ListTestGridProjects.
getTestGridSession_projectArn :: Lens' GetTestGridSession (Maybe Text)

-- | <i>See:</i> <a>newGetTestGridSessionResponse</a> smart constructor.
data GetTestGridSessionResponse
GetTestGridSessionResponse' :: Maybe TestGridSession -> Int -> GetTestGridSessionResponse

-- | The TestGridSession that was requested.
[$sel:testGridSession:GetTestGridSessionResponse'] :: GetTestGridSessionResponse -> Maybe TestGridSession

-- | The response's http status code.
[$sel:httpStatus:GetTestGridSessionResponse'] :: GetTestGridSessionResponse -> Int

-- | Create a value of <a>GetTestGridSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testGridSession:GetTestGridSessionResponse'</a>,
--   <a>getTestGridSessionResponse_testGridSession</a> - The
--   TestGridSession that was requested.
--   
--   <a>$sel:httpStatus:GetTestGridSessionResponse'</a>,
--   <a>getTestGridSessionResponse_httpStatus</a> - The response's http
--   status code.
newGetTestGridSessionResponse :: Int -> GetTestGridSessionResponse

-- | The TestGridSession that was requested.
getTestGridSessionResponse_testGridSession :: Lens' GetTestGridSessionResponse (Maybe TestGridSession)

-- | The response's http status code.
getTestGridSessionResponse_httpStatus :: Lens' GetTestGridSessionResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance GHC.Show.Show Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance GHC.Read.Read Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSessionResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSessionResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSessionResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetTestGridSession.GetTestGridSession


-- | Retrieves information about a Selenium testing project.
module Network.AWS.DeviceFarm.GetTestGridProject

-- | <i>See:</i> <a>newGetTestGridProject</a> smart constructor.
data GetTestGridProject
GetTestGridProject' :: Text -> GetTestGridProject

-- | The ARN of the Selenium testing project, from either
--   CreateTestGridProject or ListTestGridProjects.
[$sel:projectArn:GetTestGridProject'] :: GetTestGridProject -> Text

-- | Create a value of <a>GetTestGridProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectArn:GetTestGridProject'</a>,
--   <a>getTestGridProject_projectArn</a> - The ARN of the Selenium testing
--   project, from either CreateTestGridProject or ListTestGridProjects.
newGetTestGridProject :: Text -> GetTestGridProject

-- | The ARN of the Selenium testing project, from either
--   CreateTestGridProject or ListTestGridProjects.
getTestGridProject_projectArn :: Lens' GetTestGridProject Text

-- | <i>See:</i> <a>newGetTestGridProjectResponse</a> smart constructor.
data GetTestGridProjectResponse
GetTestGridProjectResponse' :: Maybe TestGridProject -> Int -> GetTestGridProjectResponse

-- | A TestGridProject.
[$sel:testGridProject:GetTestGridProjectResponse'] :: GetTestGridProjectResponse -> Maybe TestGridProject

-- | The response's http status code.
[$sel:httpStatus:GetTestGridProjectResponse'] :: GetTestGridProjectResponse -> Int

-- | Create a value of <a>GetTestGridProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testGridProject:GetTestGridProjectResponse'</a>,
--   <a>getTestGridProjectResponse_testGridProject</a> - A TestGridProject.
--   
--   <a>$sel:httpStatus:GetTestGridProjectResponse'</a>,
--   <a>getTestGridProjectResponse_httpStatus</a> - The response's http
--   status code.
newGetTestGridProjectResponse :: Int -> GetTestGridProjectResponse

-- | A TestGridProject.
getTestGridProjectResponse_testGridProject :: Lens' GetTestGridProjectResponse (Maybe TestGridProject)

-- | The response's http status code.
getTestGridProjectResponse_httpStatus :: Lens' GetTestGridProjectResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance GHC.Show.Show Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance GHC.Read.Read Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProjectResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProjectResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProjectResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetTestGridProject.GetTestGridProject


-- | Gets information about a test.
module Network.AWS.DeviceFarm.GetTest

-- | Represents a request to the get test operation.
--   
--   <i>See:</i> <a>newGetTest</a> smart constructor.
data GetTest
GetTest' :: Text -> GetTest

-- | The test's ARN.
[$sel:arn:GetTest'] :: GetTest -> Text

-- | Create a value of <a>GetTest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetTest'</a>, <a>getTest_arn</a> - The test's ARN.
newGetTest :: Text -> GetTest

-- | The test's ARN.
getTest_arn :: Lens' GetTest Text

-- | Represents the result of a get test request.
--   
--   <i>See:</i> <a>newGetTestResponse</a> smart constructor.
data GetTestResponse
GetTestResponse' :: Maybe Test -> Int -> GetTestResponse

-- | A test condition that is evaluated.
[$sel:test:GetTestResponse'] :: GetTestResponse -> Maybe Test

-- | The response's http status code.
[$sel:httpStatus:GetTestResponse'] :: GetTestResponse -> Int

-- | Create a value of <a>GetTestResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:test:GetTestResponse'</a>, <a>getTestResponse_test</a> - A
--   test condition that is evaluated.
--   
--   <a>$sel:httpStatus:GetTestResponse'</a>,
--   <a>getTestResponse_httpStatus</a> - The response's http status code.
newGetTestResponse :: Int -> GetTestResponse

-- | A test condition that is evaluated.
getTestResponse_test :: Lens' GetTestResponse (Maybe Test)

-- | The response's http status code.
getTestResponse_httpStatus :: Lens' GetTestResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetTest.GetTest
instance GHC.Show.Show Network.AWS.DeviceFarm.GetTest.GetTest
instance GHC.Read.Read Network.AWS.DeviceFarm.GetTest.GetTest
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetTest.GetTest
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetTest.GetTestResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetTest.GetTestResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetTest.GetTestResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetTest.GetTestResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetTest.GetTest
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetTest.GetTestResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetTest.GetTest
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetTest.GetTest
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetTest.GetTest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetTest.GetTest
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetTest.GetTest
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetTest.GetTest


-- | Gets information about a suite.
module Network.AWS.DeviceFarm.GetSuite

-- | Represents a request to the get suite operation.
--   
--   <i>See:</i> <a>newGetSuite</a> smart constructor.
data GetSuite
GetSuite' :: Text -> GetSuite

-- | The suite's ARN.
[$sel:arn:GetSuite'] :: GetSuite -> Text

-- | Create a value of <a>GetSuite</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetSuite'</a>, <a>getSuite_arn</a> - The suite's ARN.
newGetSuite :: Text -> GetSuite

-- | The suite's ARN.
getSuite_arn :: Lens' GetSuite Text

-- | Represents the result of a get suite request.
--   
--   <i>See:</i> <a>newGetSuiteResponse</a> smart constructor.
data GetSuiteResponse
GetSuiteResponse' :: Maybe Suite -> Int -> GetSuiteResponse

-- | A collection of one or more tests.
[$sel:suite:GetSuiteResponse'] :: GetSuiteResponse -> Maybe Suite

-- | The response's http status code.
[$sel:httpStatus:GetSuiteResponse'] :: GetSuiteResponse -> Int

-- | Create a value of <a>GetSuiteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suite:GetSuiteResponse'</a>, <a>getSuiteResponse_suite</a> - A
--   collection of one or more tests.
--   
--   <a>$sel:httpStatus:GetSuiteResponse'</a>,
--   <a>getSuiteResponse_httpStatus</a> - The response's http status code.
newGetSuiteResponse :: Int -> GetSuiteResponse

-- | A collection of one or more tests.
getSuiteResponse_suite :: Lens' GetSuiteResponse (Maybe Suite)

-- | The response's http status code.
getSuiteResponse_httpStatus :: Lens' GetSuiteResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetSuite.GetSuite
instance GHC.Show.Show Network.AWS.DeviceFarm.GetSuite.GetSuite
instance GHC.Read.Read Network.AWS.DeviceFarm.GetSuite.GetSuite
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetSuite.GetSuite
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetSuite.GetSuiteResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetSuite.GetSuiteResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetSuite.GetSuiteResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetSuite.GetSuiteResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetSuite.GetSuite
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetSuite.GetSuiteResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetSuite.GetSuite
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetSuite.GetSuite
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetSuite.GetSuite
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetSuite.GetSuite
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetSuite.GetSuite
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetSuite.GetSuite


-- | Gets information about a run.
module Network.AWS.DeviceFarm.GetRun

-- | Represents a request to the get run operation.
--   
--   <i>See:</i> <a>newGetRun</a> smart constructor.
data GetRun
GetRun' :: Text -> GetRun

-- | The run's ARN.
[$sel:arn:GetRun'] :: GetRun -> Text

-- | Create a value of <a>GetRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetRun'</a>, <a>getRun_arn</a> - The run's ARN.
newGetRun :: Text -> GetRun

-- | The run's ARN.
getRun_arn :: Lens' GetRun Text

-- | Represents the result of a get run request.
--   
--   <i>See:</i> <a>newGetRunResponse</a> smart constructor.
data GetRunResponse
GetRunResponse' :: Maybe Run -> Int -> GetRunResponse

-- | The run to get results from.
[$sel:run:GetRunResponse'] :: GetRunResponse -> Maybe Run

-- | The response's http status code.
[$sel:httpStatus:GetRunResponse'] :: GetRunResponse -> Int

-- | Create a value of <a>GetRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:run:GetRunResponse'</a>, <a>getRunResponse_run</a> - The run
--   to get results from.
--   
--   <a>$sel:httpStatus:GetRunResponse'</a>,
--   <a>getRunResponse_httpStatus</a> - The response's http status code.
newGetRunResponse :: Int -> GetRunResponse

-- | The run to get results from.
getRunResponse_run :: Lens' GetRunResponse (Maybe Run)

-- | The response's http status code.
getRunResponse_httpStatus :: Lens' GetRunResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetRun.GetRun
instance GHC.Show.Show Network.AWS.DeviceFarm.GetRun.GetRun
instance GHC.Read.Read Network.AWS.DeviceFarm.GetRun.GetRun
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetRun.GetRun
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetRun.GetRunResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetRun.GetRunResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetRun.GetRunResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetRun.GetRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetRun.GetRun
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetRun.GetRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetRun.GetRun
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetRun.GetRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetRun.GetRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetRun.GetRun
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetRun.GetRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetRun.GetRun


-- | Returns a link to a currently running remote access session.
module Network.AWS.DeviceFarm.GetRemoteAccessSession

-- | Represents the request to get information about the specified remote
--   access session.
--   
--   <i>See:</i> <a>newGetRemoteAccessSession</a> smart constructor.
data GetRemoteAccessSession
GetRemoteAccessSession' :: Text -> GetRemoteAccessSession

-- | The Amazon Resource Name (ARN) of the remote access session about
--   which you want to get session information.
[$sel:arn:GetRemoteAccessSession'] :: GetRemoteAccessSession -> Text

-- | Create a value of <a>GetRemoteAccessSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetRemoteAccessSession'</a>,
--   <a>getRemoteAccessSession_arn</a> - The Amazon Resource Name (ARN) of
--   the remote access session about which you want to get session
--   information.
newGetRemoteAccessSession :: Text -> GetRemoteAccessSession

-- | The Amazon Resource Name (ARN) of the remote access session about
--   which you want to get session information.
getRemoteAccessSession_arn :: Lens' GetRemoteAccessSession Text

-- | Represents the response from the server that lists detailed
--   information about the remote access session.
--   
--   <i>See:</i> <a>newGetRemoteAccessSessionResponse</a> smart
--   constructor.
data GetRemoteAccessSessionResponse
GetRemoteAccessSessionResponse' :: Maybe RemoteAccessSession -> Int -> GetRemoteAccessSessionResponse

-- | A container that lists detailed information about the remote access
--   session.
[$sel:remoteAccessSession:GetRemoteAccessSessionResponse'] :: GetRemoteAccessSessionResponse -> Maybe RemoteAccessSession

-- | The response's http status code.
[$sel:httpStatus:GetRemoteAccessSessionResponse'] :: GetRemoteAccessSessionResponse -> Int

-- | Create a value of <a>GetRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSession:GetRemoteAccessSessionResponse'</a>,
--   <a>getRemoteAccessSessionResponse_remoteAccessSession</a> - A
--   container that lists detailed information about the remote access
--   session.
--   
--   <a>$sel:httpStatus:GetRemoteAccessSessionResponse'</a>,
--   <a>getRemoteAccessSessionResponse_httpStatus</a> - The response's http
--   status code.
newGetRemoteAccessSessionResponse :: Int -> GetRemoteAccessSessionResponse

-- | A container that lists detailed information about the remote access
--   session.
getRemoteAccessSessionResponse_remoteAccessSession :: Lens' GetRemoteAccessSessionResponse (Maybe RemoteAccessSession)

-- | The response's http status code.
getRemoteAccessSessionResponse_httpStatus :: Lens' GetRemoteAccessSessionResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance GHC.Show.Show Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance GHC.Read.Read Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSessionResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSessionResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSessionResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetRemoteAccessSession.GetRemoteAccessSession


-- | Gets information about a project.
module Network.AWS.DeviceFarm.GetProject

-- | Represents a request to the get project operation.
--   
--   <i>See:</i> <a>newGetProject</a> smart constructor.
data GetProject
GetProject' :: Text -> GetProject

-- | The project's ARN.
[$sel:arn:GetProject'] :: GetProject -> Text

-- | Create a value of <a>GetProject</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetProject'</a>, <a>getProject_arn</a> - The project's
--   ARN.
newGetProject :: Text -> GetProject

-- | The project's ARN.
getProject_arn :: Lens' GetProject Text

-- | Represents the result of a get project request.
--   
--   <i>See:</i> <a>newGetProjectResponse</a> smart constructor.
data GetProjectResponse
GetProjectResponse' :: Maybe Project -> Int -> GetProjectResponse

-- | The project to get information about.
[$sel:project:GetProjectResponse'] :: GetProjectResponse -> Maybe Project

-- | The response's http status code.
[$sel:httpStatus:GetProjectResponse'] :: GetProjectResponse -> Int

-- | Create a value of <a>GetProjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:GetProjectResponse'</a>,
--   <a>getProjectResponse_project</a> - The project to get information
--   about.
--   
--   <a>$sel:httpStatus:GetProjectResponse'</a>,
--   <a>getProjectResponse_httpStatus</a> - The response's http status
--   code.
newGetProjectResponse :: Int -> GetProjectResponse

-- | The project to get information about.
getProjectResponse_project :: Lens' GetProjectResponse (Maybe Project)

-- | The response's http status code.
getProjectResponse_httpStatus :: Lens' GetProjectResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetProject.GetProject
instance GHC.Show.Show Network.AWS.DeviceFarm.GetProject.GetProject
instance GHC.Read.Read Network.AWS.DeviceFarm.GetProject.GetProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetProject.GetProject
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetProject.GetProjectResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetProject.GetProjectResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetProject.GetProjectResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetProject.GetProjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetProject.GetProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetProject.GetProjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetProject.GetProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetProject.GetProject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetProject.GetProject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetProject.GetProject
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetProject.GetProject
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetProject.GetProject


-- | Gets the current status and future status of all offerings purchased
--   by an AWS account. The response indicates how many offerings are
--   currently available and the offerings that will be available in the
--   next period. The API returns a <tt>NotEligible</tt> error if the user
--   is not permitted to invoke the operation. If you must be able to
--   invoke this operation, contact
--   <a>aws-devicefarm-support@amazon.com</a>.
--   
--   This operation returns paginated results.
module Network.AWS.DeviceFarm.GetOfferingStatus

-- | Represents the request to retrieve the offering status for the
--   specified customer or account.
--   
--   <i>See:</i> <a>newGetOfferingStatus</a> smart constructor.
data GetOfferingStatus
GetOfferingStatus' :: Maybe Text -> GetOfferingStatus

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:GetOfferingStatus'] :: GetOfferingStatus -> Maybe Text

-- | Create a value of <a>GetOfferingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetOfferingStatus'</a>,
--   <a>getOfferingStatus_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
newGetOfferingStatus :: GetOfferingStatus

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
getOfferingStatus_nextToken :: Lens' GetOfferingStatus (Maybe Text)

-- | Returns the status result for a device offering.
--   
--   <i>See:</i> <a>newGetOfferingStatusResponse</a> smart constructor.
data GetOfferingStatusResponse
GetOfferingStatusResponse' :: Maybe Text -> Maybe (HashMap Text OfferingStatus) -> Maybe (HashMap Text OfferingStatus) -> Int -> GetOfferingStatusResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
[$sel:nextToken:GetOfferingStatusResponse'] :: GetOfferingStatusResponse -> Maybe Text

-- | When specified, gets the offering status for the next period.
[$sel:nextPeriod:GetOfferingStatusResponse'] :: GetOfferingStatusResponse -> Maybe (HashMap Text OfferingStatus)

-- | When specified, gets the offering status for the current period.
[$sel:current:GetOfferingStatusResponse'] :: GetOfferingStatusResponse -> Maybe (HashMap Text OfferingStatus)

-- | The response's http status code.
[$sel:httpStatus:GetOfferingStatusResponse'] :: GetOfferingStatusResponse -> Int

-- | Create a value of <a>GetOfferingStatusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetOfferingStatus'</a>,
--   <a>getOfferingStatusResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:nextPeriod:GetOfferingStatusResponse'</a>,
--   <a>getOfferingStatusResponse_nextPeriod</a> - When specified, gets the
--   offering status for the next period.
--   
--   <a>$sel:current:GetOfferingStatusResponse'</a>,
--   <a>getOfferingStatusResponse_current</a> - When specified, gets the
--   offering status for the current period.
--   
--   <a>$sel:httpStatus:GetOfferingStatusResponse'</a>,
--   <a>getOfferingStatusResponse_httpStatus</a> - The response's http
--   status code.
newGetOfferingStatusResponse :: Int -> GetOfferingStatusResponse

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
getOfferingStatusResponse_nextToken :: Lens' GetOfferingStatusResponse (Maybe Text)

-- | When specified, gets the offering status for the next period.
getOfferingStatusResponse_nextPeriod :: Lens' GetOfferingStatusResponse (Maybe (HashMap Text OfferingStatus))

-- | When specified, gets the offering status for the current period.
getOfferingStatusResponse_current :: Lens' GetOfferingStatusResponse (Maybe (HashMap Text OfferingStatus))

-- | The response's http status code.
getOfferingStatusResponse_httpStatus :: Lens' GetOfferingStatusResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance GHC.Show.Show Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance GHC.Read.Read Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatusResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatusResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatusResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatusResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetOfferingStatus.GetOfferingStatus


-- | Returns information about a network profile.
module Network.AWS.DeviceFarm.GetNetworkProfile

-- | <i>See:</i> <a>newGetNetworkProfile</a> smart constructor.
data GetNetworkProfile
GetNetworkProfile' :: Text -> GetNetworkProfile

-- | The ARN of the network profile to return information about.
[$sel:arn:GetNetworkProfile'] :: GetNetworkProfile -> Text

-- | Create a value of <a>GetNetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetNetworkProfile'</a>, <a>getNetworkProfile_arn</a> - The
--   ARN of the network profile to return information about.
newGetNetworkProfile :: Text -> GetNetworkProfile

-- | The ARN of the network profile to return information about.
getNetworkProfile_arn :: Lens' GetNetworkProfile Text

-- | <i>See:</i> <a>newGetNetworkProfileResponse</a> smart constructor.
data GetNetworkProfileResponse
GetNetworkProfileResponse' :: Maybe NetworkProfile -> Int -> GetNetworkProfileResponse

-- | The network profile.
[$sel:networkProfile:GetNetworkProfileResponse'] :: GetNetworkProfileResponse -> Maybe NetworkProfile

-- | The response's http status code.
[$sel:httpStatus:GetNetworkProfileResponse'] :: GetNetworkProfileResponse -> Int

-- | Create a value of <a>GetNetworkProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkProfile:GetNetworkProfileResponse'</a>,
--   <a>getNetworkProfileResponse_networkProfile</a> - The network profile.
--   
--   <a>$sel:httpStatus:GetNetworkProfileResponse'</a>,
--   <a>getNetworkProfileResponse_httpStatus</a> - The response's http
--   status code.
newGetNetworkProfileResponse :: Int -> GetNetworkProfileResponse

-- | The network profile.
getNetworkProfileResponse_networkProfile :: Lens' GetNetworkProfileResponse (Maybe NetworkProfile)

-- | The response's http status code.
getNetworkProfileResponse_httpStatus :: Lens' GetNetworkProfileResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfileResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfileResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfileResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetNetworkProfile.GetNetworkProfile


-- | Gets information about a job.
module Network.AWS.DeviceFarm.GetJob

-- | Represents a request to the get job operation.
--   
--   <i>See:</i> <a>newGetJob</a> smart constructor.
data GetJob
GetJob' :: Text -> GetJob

-- | The job's ARN.
[$sel:arn:GetJob'] :: GetJob -> Text

-- | Create a value of <a>GetJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetJob'</a>, <a>getJob_arn</a> - The job's ARN.
newGetJob :: Text -> GetJob

-- | The job's ARN.
getJob_arn :: Lens' GetJob Text

-- | Represents the result of a get job request.
--   
--   <i>See:</i> <a>newGetJobResponse</a> smart constructor.
data GetJobResponse
GetJobResponse' :: Maybe Job -> Int -> GetJobResponse

-- | An object that contains information about the requested job.
[$sel:job:GetJobResponse'] :: GetJobResponse -> Maybe Job

-- | The response's http status code.
[$sel:httpStatus:GetJobResponse'] :: GetJobResponse -> Int

-- | Create a value of <a>GetJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:GetJobResponse'</a>, <a>getJobResponse_job</a> - An object
--   that contains information about the requested job.
--   
--   <a>$sel:httpStatus:GetJobResponse'</a>,
--   <a>getJobResponse_httpStatus</a> - The response's http status code.
newGetJobResponse :: Int -> GetJobResponse

-- | An object that contains information about the requested job.
getJobResponse_job :: Lens' GetJobResponse (Maybe Job)

-- | The response's http status code.
getJobResponse_httpStatus :: Lens' GetJobResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetJob.GetJob
instance GHC.Show.Show Network.AWS.DeviceFarm.GetJob.GetJob
instance GHC.Read.Read Network.AWS.DeviceFarm.GetJob.GetJob
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetJob.GetJob
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetJob.GetJobResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetJob.GetJobResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetJob.GetJobResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetJob.GetJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetJob.GetJob
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetJob.GetJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetJob.GetJob
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetJob.GetJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetJob.GetJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetJob.GetJob
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetJob.GetJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetJob.GetJob


-- | Returns information about the specified instance profile.
module Network.AWS.DeviceFarm.GetInstanceProfile

-- | <i>See:</i> <a>newGetInstanceProfile</a> smart constructor.
data GetInstanceProfile
GetInstanceProfile' :: Text -> GetInstanceProfile

-- | The Amazon Resource Name (ARN) of an instance profile.
[$sel:arn:GetInstanceProfile'] :: GetInstanceProfile -> Text

-- | Create a value of <a>GetInstanceProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetInstanceProfile'</a>, <a>getInstanceProfile_arn</a> -
--   The Amazon Resource Name (ARN) of an instance profile.
newGetInstanceProfile :: Text -> GetInstanceProfile

-- | The Amazon Resource Name (ARN) of an instance profile.
getInstanceProfile_arn :: Lens' GetInstanceProfile Text

-- | <i>See:</i> <a>newGetInstanceProfileResponse</a> smart constructor.
data GetInstanceProfileResponse
GetInstanceProfileResponse' :: Maybe InstanceProfile -> Int -> GetInstanceProfileResponse

-- | An object that contains information about an instance profile.
[$sel:instanceProfile:GetInstanceProfileResponse'] :: GetInstanceProfileResponse -> Maybe InstanceProfile

-- | The response's http status code.
[$sel:httpStatus:GetInstanceProfileResponse'] :: GetInstanceProfileResponse -> Int

-- | Create a value of <a>GetInstanceProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceProfile:GetInstanceProfileResponse'</a>,
--   <a>getInstanceProfileResponse_instanceProfile</a> - An object that
--   contains information about an instance profile.
--   
--   <a>$sel:httpStatus:GetInstanceProfileResponse'</a>,
--   <a>getInstanceProfileResponse_httpStatus</a> - The response's http
--   status code.
newGetInstanceProfileResponse :: Int -> GetInstanceProfileResponse

-- | An object that contains information about an instance profile.
getInstanceProfileResponse_instanceProfile :: Lens' GetInstanceProfileResponse (Maybe InstanceProfile)

-- | The response's http status code.
getInstanceProfileResponse_httpStatus :: Lens' GetInstanceProfileResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfileResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfileResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfileResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetInstanceProfile.GetInstanceProfile


-- | Gets information about compatibility with a device pool.
module Network.AWS.DeviceFarm.GetDevicePoolCompatibility

-- | Represents a request to the get device pool compatibility operation.
--   
--   <i>See:</i> <a>newGetDevicePoolCompatibility</a> smart constructor.
data GetDevicePoolCompatibility
GetDevicePoolCompatibility' :: Maybe TestType -> Maybe ScheduleRunConfiguration -> Maybe Text -> Maybe ScheduleRunTest -> Text -> GetDevicePoolCompatibility

-- | The test type for the specified device pool.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ.</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT.</li>
--   <li>APPIUM_JAVA_TESTNG.</li>
--   <li>APPIUM_PYTHON.</li>
--   <li>APPIUM_NODE.</li>
--   <li>APPIUM_RUBY.</li>
--   <li>APPIUM_WEB_JAVA_JUNIT.</li>
--   <li>APPIUM_WEB_JAVA_TESTNG.</li>
--   <li>APPIUM_WEB_PYTHON.</li>
--   <li>APPIUM_WEB_NODE.</li>
--   <li>APPIUM_WEB_RUBY.</li>
--   <li>CALABASH.</li>
--   <li>INSTRUMENTATION.</li>
--   <li>UIAUTOMATION.</li>
--   <li>UIAUTOMATOR.</li>
--   <li>XCTEST.</li>
--   <li>XCTEST_UI.</li>
--   </ul>
[$sel:testType:GetDevicePoolCompatibility'] :: GetDevicePoolCompatibility -> Maybe TestType

-- | An object that contains information about the settings for a run.
[$sel:configuration:GetDevicePoolCompatibility'] :: GetDevicePoolCompatibility -> Maybe ScheduleRunConfiguration

-- | The ARN of the app that is associated with the specified device pool.
[$sel:appArn:GetDevicePoolCompatibility'] :: GetDevicePoolCompatibility -> Maybe Text

-- | Information about the uploaded test to be run against the device pool.
[$sel:test:GetDevicePoolCompatibility'] :: GetDevicePoolCompatibility -> Maybe ScheduleRunTest

-- | The device pool's ARN.
[$sel:devicePoolArn:GetDevicePoolCompatibility'] :: GetDevicePoolCompatibility -> Text

-- | Create a value of <a>GetDevicePoolCompatibility</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testType:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_testType</a> - The test type for the
--   specified device pool.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ.</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT.</li>
--   <li>APPIUM_JAVA_TESTNG.</li>
--   <li>APPIUM_PYTHON.</li>
--   <li>APPIUM_NODE.</li>
--   <li>APPIUM_RUBY.</li>
--   <li>APPIUM_WEB_JAVA_JUNIT.</li>
--   <li>APPIUM_WEB_JAVA_TESTNG.</li>
--   <li>APPIUM_WEB_PYTHON.</li>
--   <li>APPIUM_WEB_NODE.</li>
--   <li>APPIUM_WEB_RUBY.</li>
--   <li>CALABASH.</li>
--   <li>INSTRUMENTATION.</li>
--   <li>UIAUTOMATION.</li>
--   <li>UIAUTOMATOR.</li>
--   <li>XCTEST.</li>
--   <li>XCTEST_UI.</li>
--   </ul>
--   
--   <a>$sel:configuration:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_configuration</a> - An object that
--   contains information about the settings for a run.
--   
--   <a>$sel:appArn:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_appArn</a> - The ARN of the app that is
--   associated with the specified device pool.
--   
--   <a>$sel:test:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_test</a> - Information about the
--   uploaded test to be run against the device pool.
--   
--   <a>$sel:devicePoolArn:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_devicePoolArn</a> - The device pool's
--   ARN.
newGetDevicePoolCompatibility :: Text -> GetDevicePoolCompatibility

-- | The test type for the specified device pool.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ.</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT.</li>
--   <li>APPIUM_JAVA_TESTNG.</li>
--   <li>APPIUM_PYTHON.</li>
--   <li>APPIUM_NODE.</li>
--   <li>APPIUM_RUBY.</li>
--   <li>APPIUM_WEB_JAVA_JUNIT.</li>
--   <li>APPIUM_WEB_JAVA_TESTNG.</li>
--   <li>APPIUM_WEB_PYTHON.</li>
--   <li>APPIUM_WEB_NODE.</li>
--   <li>APPIUM_WEB_RUBY.</li>
--   <li>CALABASH.</li>
--   <li>INSTRUMENTATION.</li>
--   <li>UIAUTOMATION.</li>
--   <li>UIAUTOMATOR.</li>
--   <li>XCTEST.</li>
--   <li>XCTEST_UI.</li>
--   </ul>
getDevicePoolCompatibility_testType :: Lens' GetDevicePoolCompatibility (Maybe TestType)

-- | An object that contains information about the settings for a run.
getDevicePoolCompatibility_configuration :: Lens' GetDevicePoolCompatibility (Maybe ScheduleRunConfiguration)

-- | The ARN of the app that is associated with the specified device pool.
getDevicePoolCompatibility_appArn :: Lens' GetDevicePoolCompatibility (Maybe Text)

-- | Information about the uploaded test to be run against the device pool.
getDevicePoolCompatibility_test :: Lens' GetDevicePoolCompatibility (Maybe ScheduleRunTest)

-- | The device pool's ARN.
getDevicePoolCompatibility_devicePoolArn :: Lens' GetDevicePoolCompatibility Text

-- | Represents the result of describe device pool compatibility request.
--   
--   <i>See:</i> <a>newGetDevicePoolCompatibilityResponse</a> smart
--   constructor.
data GetDevicePoolCompatibilityResponse
GetDevicePoolCompatibilityResponse' :: Maybe [DevicePoolCompatibilityResult] -> Maybe [DevicePoolCompatibilityResult] -> Int -> GetDevicePoolCompatibilityResponse

-- | Information about incompatible devices.
[$sel:incompatibleDevices:GetDevicePoolCompatibilityResponse'] :: GetDevicePoolCompatibilityResponse -> Maybe [DevicePoolCompatibilityResult]

-- | Information about compatible devices.
[$sel:compatibleDevices:GetDevicePoolCompatibilityResponse'] :: GetDevicePoolCompatibilityResponse -> Maybe [DevicePoolCompatibilityResult]

-- | The response's http status code.
[$sel:httpStatus:GetDevicePoolCompatibilityResponse'] :: GetDevicePoolCompatibilityResponse -> Int

-- | Create a value of <a>GetDevicePoolCompatibilityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:incompatibleDevices:GetDevicePoolCompatibilityResponse'</a>,
--   <a>getDevicePoolCompatibilityResponse_incompatibleDevices</a> -
--   Information about incompatible devices.
--   
--   <a>$sel:compatibleDevices:GetDevicePoolCompatibilityResponse'</a>,
--   <a>getDevicePoolCompatibilityResponse_compatibleDevices</a> -
--   Information about compatible devices.
--   
--   <a>$sel:httpStatus:GetDevicePoolCompatibilityResponse'</a>,
--   <a>getDevicePoolCompatibilityResponse_httpStatus</a> - The response's
--   http status code.
newGetDevicePoolCompatibilityResponse :: Int -> GetDevicePoolCompatibilityResponse

-- | Information about incompatible devices.
getDevicePoolCompatibilityResponse_incompatibleDevices :: Lens' GetDevicePoolCompatibilityResponse (Maybe [DevicePoolCompatibilityResult])

-- | Information about compatible devices.
getDevicePoolCompatibilityResponse_compatibleDevices :: Lens' GetDevicePoolCompatibilityResponse (Maybe [DevicePoolCompatibilityResult])

-- | The response's http status code.
getDevicePoolCompatibilityResponse_httpStatus :: Lens' GetDevicePoolCompatibilityResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance GHC.Show.Show Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance GHC.Read.Read Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibilityResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibilityResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibilityResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibilityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibilityResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetDevicePoolCompatibility.GetDevicePoolCompatibility


-- | Gets information about a device pool.
module Network.AWS.DeviceFarm.GetDevicePool

-- | Represents a request to the get device pool operation.
--   
--   <i>See:</i> <a>newGetDevicePool</a> smart constructor.
data GetDevicePool
GetDevicePool' :: Text -> GetDevicePool

-- | The device pool's ARN.
[$sel:arn:GetDevicePool'] :: GetDevicePool -> Text

-- | Create a value of <a>GetDevicePool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetDevicePool'</a>, <a>getDevicePool_arn</a> - The device
--   pool's ARN.
newGetDevicePool :: Text -> GetDevicePool

-- | The device pool's ARN.
getDevicePool_arn :: Lens' GetDevicePool Text

-- | Represents the result of a get device pool request.
--   
--   <i>See:</i> <a>newGetDevicePoolResponse</a> smart constructor.
data GetDevicePoolResponse
GetDevicePoolResponse' :: Maybe DevicePool -> Int -> GetDevicePoolResponse

-- | An object that contains information about the requested device pool.
[$sel:devicePool:GetDevicePoolResponse'] :: GetDevicePoolResponse -> Maybe DevicePool

-- | The response's http status code.
[$sel:httpStatus:GetDevicePoolResponse'] :: GetDevicePoolResponse -> Int

-- | Create a value of <a>GetDevicePoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devicePool:GetDevicePoolResponse'</a>,
--   <a>getDevicePoolResponse_devicePool</a> - An object that contains
--   information about the requested device pool.
--   
--   <a>$sel:httpStatus:GetDevicePoolResponse'</a>,
--   <a>getDevicePoolResponse_httpStatus</a> - The response's http status
--   code.
newGetDevicePoolResponse :: Int -> GetDevicePoolResponse

-- | An object that contains information about the requested device pool.
getDevicePoolResponse_devicePool :: Lens' GetDevicePoolResponse (Maybe DevicePool)

-- | The response's http status code.
getDevicePoolResponse_httpStatus :: Lens' GetDevicePoolResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance GHC.Show.Show Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance GHC.Read.Read Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetDevicePool.GetDevicePoolResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetDevicePool.GetDevicePoolResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetDevicePool.GetDevicePoolResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetDevicePool.GetDevicePoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetDevicePool.GetDevicePoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetDevicePool.GetDevicePool


-- | Returns information about a device instance that belongs to a private
--   device fleet.
module Network.AWS.DeviceFarm.GetDeviceInstance

-- | <i>See:</i> <a>newGetDeviceInstance</a> smart constructor.
data GetDeviceInstance
GetDeviceInstance' :: Text -> GetDeviceInstance

-- | The Amazon Resource Name (ARN) of the instance you're requesting
--   information about.
[$sel:arn:GetDeviceInstance'] :: GetDeviceInstance -> Text

-- | Create a value of <a>GetDeviceInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetDeviceInstance'</a>, <a>getDeviceInstance_arn</a> - The
--   Amazon Resource Name (ARN) of the instance you're requesting
--   information about.
newGetDeviceInstance :: Text -> GetDeviceInstance

-- | The Amazon Resource Name (ARN) of the instance you're requesting
--   information about.
getDeviceInstance_arn :: Lens' GetDeviceInstance Text

-- | <i>See:</i> <a>newGetDeviceInstanceResponse</a> smart constructor.
data GetDeviceInstanceResponse
GetDeviceInstanceResponse' :: Maybe DeviceInstance -> Int -> GetDeviceInstanceResponse

-- | An object that contains information about your device instance.
[$sel:deviceInstance:GetDeviceInstanceResponse'] :: GetDeviceInstanceResponse -> Maybe DeviceInstance

-- | The response's http status code.
[$sel:httpStatus:GetDeviceInstanceResponse'] :: GetDeviceInstanceResponse -> Int

-- | Create a value of <a>GetDeviceInstanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceInstance:GetDeviceInstanceResponse'</a>,
--   <a>getDeviceInstanceResponse_deviceInstance</a> - An object that
--   contains information about your device instance.
--   
--   <a>$sel:httpStatus:GetDeviceInstanceResponse'</a>,
--   <a>getDeviceInstanceResponse_httpStatus</a> - The response's http
--   status code.
newGetDeviceInstanceResponse :: Int -> GetDeviceInstanceResponse

-- | An object that contains information about your device instance.
getDeviceInstanceResponse_deviceInstance :: Lens' GetDeviceInstanceResponse (Maybe DeviceInstance)

-- | The response's http status code.
getDeviceInstanceResponse_httpStatus :: Lens' GetDeviceInstanceResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance GHC.Show.Show Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance GHC.Read.Read Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstanceResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstanceResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstanceResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetDeviceInstance.GetDeviceInstance


-- | Gets information about a unique device type.
module Network.AWS.DeviceFarm.GetDevice

-- | Represents a request to the get device request.
--   
--   <i>See:</i> <a>newGetDevice</a> smart constructor.
data GetDevice
GetDevice' :: Text -> GetDevice

-- | The device type's ARN.
[$sel:arn:GetDevice'] :: GetDevice -> Text

-- | Create a value of <a>GetDevice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetDevice'</a>, <a>getDevice_arn</a> - The device type's
--   ARN.
newGetDevice :: Text -> GetDevice

-- | The device type's ARN.
getDevice_arn :: Lens' GetDevice Text

-- | Represents the result of a get device request.
--   
--   <i>See:</i> <a>newGetDeviceResponse</a> smart constructor.
data GetDeviceResponse
GetDeviceResponse' :: Maybe Device -> Int -> GetDeviceResponse

-- | An object that contains information about the requested device.
[$sel:device:GetDeviceResponse'] :: GetDeviceResponse -> Maybe Device

-- | The response's http status code.
[$sel:httpStatus:GetDeviceResponse'] :: GetDeviceResponse -> Int

-- | Create a value of <a>GetDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:device:GetDeviceResponse'</a>, <a>getDeviceResponse_device</a>
--   - An object that contains information about the requested device.
--   
--   <a>$sel:httpStatus:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_httpStatus</a> - The response's http status code.
newGetDeviceResponse :: Int -> GetDeviceResponse

-- | An object that contains information about the requested device.
getDeviceResponse_device :: Lens' GetDeviceResponse (Maybe Device)

-- | The response's http status code.
getDeviceResponse_httpStatus :: Lens' GetDeviceResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetDevice.GetDevice
instance GHC.Show.Show Network.AWS.DeviceFarm.GetDevice.GetDevice
instance GHC.Read.Read Network.AWS.DeviceFarm.GetDevice.GetDevice
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetDevice.GetDevice
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetDevice.GetDeviceResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetDevice.GetDeviceResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetDevice.GetDeviceResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetDevice.GetDeviceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetDevice.GetDevice
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetDevice.GetDeviceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetDevice.GetDevice
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetDevice.GetDevice
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetDevice.GetDevice
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetDevice.GetDevice
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetDevice.GetDevice
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetDevice.GetDevice


-- | Returns the number of unmetered iOS or unmetered Android devices that
--   have been purchased by the account.
module Network.AWS.DeviceFarm.GetAccountSettings

-- | Represents the request sent to retrieve the account settings.
--   
--   <i>See:</i> <a>newGetAccountSettings</a> smart constructor.
data GetAccountSettings
GetAccountSettings' :: GetAccountSettings

-- | Create a value of <a>GetAccountSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetAccountSettings :: GetAccountSettings

-- | Represents the account settings return values from the
--   <tt>GetAccountSettings</tt> request.
--   
--   <i>See:</i> <a>newGetAccountSettingsResponse</a> smart constructor.
data GetAccountSettingsResponse
GetAccountSettingsResponse' :: Maybe AccountSettings -> Int -> GetAccountSettingsResponse

-- | The account settings.
[$sel:accountSettings:GetAccountSettingsResponse'] :: GetAccountSettingsResponse -> Maybe AccountSettings

-- | The response's http status code.
[$sel:httpStatus:GetAccountSettingsResponse'] :: GetAccountSettingsResponse -> Int

-- | Create a value of <a>GetAccountSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountSettings:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_accountSettings</a> - The account
--   settings.
--   
--   <a>$sel:httpStatus:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_httpStatus</a> - The response's http
--   status code.
newGetAccountSettingsResponse :: Int -> GetAccountSettingsResponse

-- | The account settings.
getAccountSettingsResponse_accountSettings :: Lens' GetAccountSettingsResponse (Maybe AccountSettings)

-- | The response's http status code.
getAccountSettingsResponse_httpStatus :: Lens' GetAccountSettingsResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance GHC.Show.Show Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance GHC.Read.Read Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance GHC.Generics.Generic Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettingsResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettingsResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettingsResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.GetAccountSettings.GetAccountSettings


-- | Deletes a configuration for your Amazon Virtual Private Cloud (VPC)
--   endpoint.
module Network.AWS.DeviceFarm.DeleteVPCEConfiguration

-- | <i>See:</i> <a>newDeleteVPCEConfiguration</a> smart constructor.
data DeleteVPCEConfiguration
DeleteVPCEConfiguration' :: Text -> DeleteVPCEConfiguration

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to delete.
[$sel:arn:DeleteVPCEConfiguration'] :: DeleteVPCEConfiguration -> Text

-- | Create a value of <a>DeleteVPCEConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteVPCEConfiguration'</a>,
--   <a>deleteVPCEConfiguration_arn</a> - The Amazon Resource Name (ARN) of
--   the VPC endpoint configuration you want to delete.
newDeleteVPCEConfiguration :: Text -> DeleteVPCEConfiguration

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to delete.
deleteVPCEConfiguration_arn :: Lens' DeleteVPCEConfiguration Text

-- | <i>See:</i> <a>newDeleteVPCEConfigurationResponse</a> smart
--   constructor.
data DeleteVPCEConfigurationResponse
DeleteVPCEConfigurationResponse' :: Int -> DeleteVPCEConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVPCEConfigurationResponse'] :: DeleteVPCEConfigurationResponse -> Int

-- | Create a value of <a>DeleteVPCEConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVPCEConfigurationResponse'</a>,
--   <a>deleteVPCEConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newDeleteVPCEConfigurationResponse :: Int -> DeleteVPCEConfigurationResponse

-- | The response's http status code.
deleteVPCEConfigurationResponse_httpStatus :: Lens' DeleteVPCEConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfigurationResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfigurationResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfigurationResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteVPCEConfiguration.DeleteVPCEConfiguration


-- | Deletes an upload given the upload ARN.
module Network.AWS.DeviceFarm.DeleteUpload

-- | Represents a request to the delete upload operation.
--   
--   <i>See:</i> <a>newDeleteUpload</a> smart constructor.
data DeleteUpload
DeleteUpload' :: Text -> DeleteUpload

-- | Represents the Amazon Resource Name (ARN) of the Device Farm upload to
--   delete.
[$sel:arn:DeleteUpload'] :: DeleteUpload -> Text

-- | Create a value of <a>DeleteUpload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteUpload'</a>, <a>deleteUpload_arn</a> - Represents
--   the Amazon Resource Name (ARN) of the Device Farm upload to delete.
newDeleteUpload :: Text -> DeleteUpload

-- | Represents the Amazon Resource Name (ARN) of the Device Farm upload to
--   delete.
deleteUpload_arn :: Lens' DeleteUpload Text

-- | Represents the result of a delete upload request.
--   
--   <i>See:</i> <a>newDeleteUploadResponse</a> smart constructor.
data DeleteUploadResponse
DeleteUploadResponse' :: Int -> DeleteUploadResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteUploadResponse'] :: DeleteUploadResponse -> Int

-- | Create a value of <a>DeleteUploadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUploadResponse'</a>,
--   <a>deleteUploadResponse_httpStatus</a> - The response's http status
--   code.
newDeleteUploadResponse :: Int -> DeleteUploadResponse

-- | The response's http status code.
deleteUploadResponse_httpStatus :: Lens' DeleteUploadResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteUpload.DeleteUploadResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteUpload.DeleteUploadResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteUpload.DeleteUploadResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteUpload.DeleteUploadResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteUpload.DeleteUploadResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteUpload.DeleteUpload


-- | Deletes a Selenium testing project and all content generated under it.
--   
--   You cannot undo this operation.
--   
--   You cannot delete a project if it has active sessions.
module Network.AWS.DeviceFarm.DeleteTestGridProject

-- | <i>See:</i> <a>newDeleteTestGridProject</a> smart constructor.
data DeleteTestGridProject
DeleteTestGridProject' :: Text -> DeleteTestGridProject

-- | The ARN of the project to delete, from CreateTestGridProject or
--   ListTestGridProjects.
[$sel:projectArn:DeleteTestGridProject'] :: DeleteTestGridProject -> Text

-- | Create a value of <a>DeleteTestGridProject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectArn:DeleteTestGridProject'</a>,
--   <a>deleteTestGridProject_projectArn</a> - The ARN of the project to
--   delete, from CreateTestGridProject or ListTestGridProjects.
newDeleteTestGridProject :: Text -> DeleteTestGridProject

-- | The ARN of the project to delete, from CreateTestGridProject or
--   ListTestGridProjects.
deleteTestGridProject_projectArn :: Lens' DeleteTestGridProject Text

-- | <i>See:</i> <a>newDeleteTestGridProjectResponse</a> smart constructor.
data DeleteTestGridProjectResponse
DeleteTestGridProjectResponse' :: Int -> DeleteTestGridProjectResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTestGridProjectResponse'] :: DeleteTestGridProjectResponse -> Int

-- | Create a value of <a>DeleteTestGridProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTestGridProjectResponse'</a>,
--   <a>deleteTestGridProjectResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTestGridProjectResponse :: Int -> DeleteTestGridProjectResponse

-- | The response's http status code.
deleteTestGridProjectResponse_httpStatus :: Lens' DeleteTestGridProjectResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProjectResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProjectResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProjectResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteTestGridProject.DeleteTestGridProject


-- | Deletes the run, given the run ARN.
--   
--   Deleting this resource does not stop an in-progress run.
module Network.AWS.DeviceFarm.DeleteRun

-- | Represents a request to the delete run operation.
--   
--   <i>See:</i> <a>newDeleteRun</a> smart constructor.
data DeleteRun
DeleteRun' :: Text -> DeleteRun

-- | The Amazon Resource Name (ARN) for the run to delete.
[$sel:arn:DeleteRun'] :: DeleteRun -> Text

-- | Create a value of <a>DeleteRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteRun'</a>, <a>deleteRun_arn</a> - The Amazon Resource
--   Name (ARN) for the run to delete.
newDeleteRun :: Text -> DeleteRun

-- | The Amazon Resource Name (ARN) for the run to delete.
deleteRun_arn :: Lens' DeleteRun Text

-- | Represents the result of a delete run request.
--   
--   <i>See:</i> <a>newDeleteRunResponse</a> smart constructor.
data DeleteRunResponse
DeleteRunResponse' :: Int -> DeleteRunResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRunResponse'] :: DeleteRunResponse -> Int

-- | Create a value of <a>DeleteRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRunResponse'</a>,
--   <a>deleteRunResponse_httpStatus</a> - The response's http status code.
newDeleteRunResponse :: Int -> DeleteRunResponse

-- | The response's http status code.
deleteRunResponse_httpStatus :: Lens' DeleteRunResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteRun.DeleteRunResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteRun.DeleteRunResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteRun.DeleteRunResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteRun.DeleteRunResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteRun.DeleteRunResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteRun.DeleteRun
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteRun.DeleteRun


-- | Deletes a completed remote access session and its results.
module Network.AWS.DeviceFarm.DeleteRemoteAccessSession

-- | Represents the request to delete the specified remote access session.
--   
--   <i>See:</i> <a>newDeleteRemoteAccessSession</a> smart constructor.
data DeleteRemoteAccessSession
DeleteRemoteAccessSession' :: Text -> DeleteRemoteAccessSession

-- | The Amazon Resource Name (ARN) of the session for which you want to
--   delete remote access.
[$sel:arn:DeleteRemoteAccessSession'] :: DeleteRemoteAccessSession -> Text

-- | Create a value of <a>DeleteRemoteAccessSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteRemoteAccessSession'</a>,
--   <a>deleteRemoteAccessSession_arn</a> - The Amazon Resource Name (ARN)
--   of the session for which you want to delete remote access.
newDeleteRemoteAccessSession :: Text -> DeleteRemoteAccessSession

-- | The Amazon Resource Name (ARN) of the session for which you want to
--   delete remote access.
deleteRemoteAccessSession_arn :: Lens' DeleteRemoteAccessSession Text

-- | The response from the server when a request is made to delete the
--   remote access session.
--   
--   <i>See:</i> <a>newDeleteRemoteAccessSessionResponse</a> smart
--   constructor.
data DeleteRemoteAccessSessionResponse
DeleteRemoteAccessSessionResponse' :: Int -> DeleteRemoteAccessSessionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteRemoteAccessSessionResponse'] :: DeleteRemoteAccessSessionResponse -> Int

-- | Create a value of <a>DeleteRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRemoteAccessSessionResponse'</a>,
--   <a>deleteRemoteAccessSessionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteRemoteAccessSessionResponse :: Int -> DeleteRemoteAccessSessionResponse

-- | The response's http status code.
deleteRemoteAccessSessionResponse_httpStatus :: Lens' DeleteRemoteAccessSessionResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSessionResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSessionResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSessionResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteRemoteAccessSession.DeleteRemoteAccessSession


-- | Deletes an AWS Device Farm project, given the project ARN.
--   
--   Deleting this resource does not stop an in-progress run.
module Network.AWS.DeviceFarm.DeleteProject

-- | Represents a request to the delete project operation.
--   
--   <i>See:</i> <a>newDeleteProject</a> smart constructor.
data DeleteProject
DeleteProject' :: Text -> DeleteProject

-- | Represents the Amazon Resource Name (ARN) of the Device Farm project
--   to delete.
[$sel:arn:DeleteProject'] :: DeleteProject -> Text

-- | Create a value of <a>DeleteProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteProject'</a>, <a>deleteProject_arn</a> - Represents
--   the Amazon Resource Name (ARN) of the Device Farm project to delete.
newDeleteProject :: Text -> DeleteProject

-- | Represents the Amazon Resource Name (ARN) of the Device Farm project
--   to delete.
deleteProject_arn :: Lens' DeleteProject Text

-- | Represents the result of a delete project request.
--   
--   <i>See:</i> <a>newDeleteProjectResponse</a> smart constructor.
data DeleteProjectResponse
DeleteProjectResponse' :: Int -> DeleteProjectResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteProjectResponse'] :: DeleteProjectResponse -> Int

-- | Create a value of <a>DeleteProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProjectResponse'</a>,
--   <a>deleteProjectResponse_httpStatus</a> - The response's http status
--   code.
newDeleteProjectResponse :: Int -> DeleteProjectResponse

-- | The response's http status code.
deleteProjectResponse_httpStatus :: Lens' DeleteProjectResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteProject.DeleteProjectResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteProject.DeleteProjectResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteProject.DeleteProjectResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteProject.DeleteProjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteProject.DeleteProjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteProject.DeleteProject
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteProject.DeleteProject


-- | Deletes a network profile.
module Network.AWS.DeviceFarm.DeleteNetworkProfile

-- | <i>See:</i> <a>newDeleteNetworkProfile</a> smart constructor.
data DeleteNetworkProfile
DeleteNetworkProfile' :: Text -> DeleteNetworkProfile

-- | The ARN of the network profile to delete.
[$sel:arn:DeleteNetworkProfile'] :: DeleteNetworkProfile -> Text

-- | Create a value of <a>DeleteNetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteNetworkProfile'</a>, <a>deleteNetworkProfile_arn</a>
--   - The ARN of the network profile to delete.
newDeleteNetworkProfile :: Text -> DeleteNetworkProfile

-- | The ARN of the network profile to delete.
deleteNetworkProfile_arn :: Lens' DeleteNetworkProfile Text

-- | <i>See:</i> <a>newDeleteNetworkProfileResponse</a> smart constructor.
data DeleteNetworkProfileResponse
DeleteNetworkProfileResponse' :: Int -> DeleteNetworkProfileResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteNetworkProfileResponse'] :: DeleteNetworkProfileResponse -> Int

-- | Create a value of <a>DeleteNetworkProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteNetworkProfileResponse'</a>,
--   <a>deleteNetworkProfileResponse_httpStatus</a> - The response's http
--   status code.
newDeleteNetworkProfileResponse :: Int -> DeleteNetworkProfileResponse

-- | The response's http status code.
deleteNetworkProfileResponse_httpStatus :: Lens' DeleteNetworkProfileResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfileResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfileResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfileResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteNetworkProfile.DeleteNetworkProfile


-- | Deletes a profile that can be applied to one or more private device
--   instances.
module Network.AWS.DeviceFarm.DeleteInstanceProfile

-- | <i>See:</i> <a>newDeleteInstanceProfile</a> smart constructor.
data DeleteInstanceProfile
DeleteInstanceProfile' :: Text -> DeleteInstanceProfile

-- | The Amazon Resource Name (ARN) of the instance profile you are
--   requesting to delete.
[$sel:arn:DeleteInstanceProfile'] :: DeleteInstanceProfile -> Text

-- | Create a value of <a>DeleteInstanceProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteInstanceProfile'</a>,
--   <a>deleteInstanceProfile_arn</a> - The Amazon Resource Name (ARN) of
--   the instance profile you are requesting to delete.
newDeleteInstanceProfile :: Text -> DeleteInstanceProfile

-- | The Amazon Resource Name (ARN) of the instance profile you are
--   requesting to delete.
deleteInstanceProfile_arn :: Lens' DeleteInstanceProfile Text

-- | <i>See:</i> <a>newDeleteInstanceProfileResponse</a> smart constructor.
data DeleteInstanceProfileResponse
DeleteInstanceProfileResponse' :: Int -> DeleteInstanceProfileResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteInstanceProfileResponse'] :: DeleteInstanceProfileResponse -> Int

-- | Create a value of <a>DeleteInstanceProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteInstanceProfileResponse'</a>,
--   <a>deleteInstanceProfileResponse_httpStatus</a> - The response's http
--   status code.
newDeleteInstanceProfileResponse :: Int -> DeleteInstanceProfileResponse

-- | The response's http status code.
deleteInstanceProfileResponse_httpStatus :: Lens' DeleteInstanceProfileResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfileResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfileResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfileResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteInstanceProfile.DeleteInstanceProfile


-- | Deletes a device pool given the pool ARN. Does not allow deletion of
--   curated pools owned by the system.
module Network.AWS.DeviceFarm.DeleteDevicePool

-- | Represents a request to the delete device pool operation.
--   
--   <i>See:</i> <a>newDeleteDevicePool</a> smart constructor.
data DeleteDevicePool
DeleteDevicePool' :: Text -> DeleteDevicePool

-- | Represents the Amazon Resource Name (ARN) of the Device Farm device
--   pool to delete.
[$sel:arn:DeleteDevicePool'] :: DeleteDevicePool -> Text

-- | Create a value of <a>DeleteDevicePool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteDevicePool'</a>, <a>deleteDevicePool_arn</a> -
--   Represents the Amazon Resource Name (ARN) of the Device Farm device
--   pool to delete.
newDeleteDevicePool :: Text -> DeleteDevicePool

-- | Represents the Amazon Resource Name (ARN) of the Device Farm device
--   pool to delete.
deleteDevicePool_arn :: Lens' DeleteDevicePool Text

-- | Represents the result of a delete device pool request.
--   
--   <i>See:</i> <a>newDeleteDevicePoolResponse</a> smart constructor.
data DeleteDevicePoolResponse
DeleteDevicePoolResponse' :: Int -> DeleteDevicePoolResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDevicePoolResponse'] :: DeleteDevicePoolResponse -> Int

-- | Create a value of <a>DeleteDevicePoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDevicePoolResponse'</a>,
--   <a>deleteDevicePoolResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDevicePoolResponse :: Int -> DeleteDevicePoolResponse

-- | The response's http status code.
deleteDevicePoolResponse_httpStatus :: Lens' DeleteDevicePoolResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance GHC.Generics.Generic Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePoolResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePoolResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePoolResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.DeleteDevicePool.DeleteDevicePool


-- | Creates a configuration record in Device Farm for your Amazon Virtual
--   Private Cloud (VPC) endpoint.
module Network.AWS.DeviceFarm.CreateVPCEConfiguration

-- | <i>See:</i> <a>newCreateVPCEConfiguration</a> smart constructor.
data CreateVPCEConfiguration
CreateVPCEConfiguration' :: Maybe Text -> Text -> Text -> Text -> CreateVPCEConfiguration

-- | An optional description that provides details about your VPC endpoint
--   configuration.
[$sel:vpceConfigurationDescription:CreateVPCEConfiguration'] :: CreateVPCEConfiguration -> Maybe Text

-- | The friendly name you give to your VPC endpoint configuration, to
--   manage your configurations more easily.
[$sel:vpceConfigurationName:CreateVPCEConfiguration'] :: CreateVPCEConfiguration -> Text

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
[$sel:vpceServiceName:CreateVPCEConfiguration'] :: CreateVPCEConfiguration -> Text

-- | The DNS name of the service running in your VPC that you want Device
--   Farm to test.
[$sel:serviceDnsName:CreateVPCEConfiguration'] :: CreateVPCEConfiguration -> Text

-- | Create a value of <a>CreateVPCEConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfigurationDescription:CreateVPCEConfiguration'</a>,
--   <a>createVPCEConfiguration_vpceConfigurationDescription</a> - An
--   optional description that provides details about your VPC endpoint
--   configuration.
--   
--   <a>$sel:vpceConfigurationName:CreateVPCEConfiguration'</a>,
--   <a>createVPCEConfiguration_vpceConfigurationName</a> - The friendly
--   name you give to your VPC endpoint configuration, to manage your
--   configurations more easily.
--   
--   <a>$sel:vpceServiceName:CreateVPCEConfiguration'</a>,
--   <a>createVPCEConfiguration_vpceServiceName</a> - The name of the VPC
--   endpoint service running in your AWS account that you want Device Farm
--   to test.
--   
--   <a>$sel:serviceDnsName:CreateVPCEConfiguration'</a>,
--   <a>createVPCEConfiguration_serviceDnsName</a> - The DNS name of the
--   service running in your VPC that you want Device Farm to test.
newCreateVPCEConfiguration :: Text -> Text -> Text -> CreateVPCEConfiguration

-- | An optional description that provides details about your VPC endpoint
--   configuration.
createVPCEConfiguration_vpceConfigurationDescription :: Lens' CreateVPCEConfiguration (Maybe Text)

-- | The friendly name you give to your VPC endpoint configuration, to
--   manage your configurations more easily.
createVPCEConfiguration_vpceConfigurationName :: Lens' CreateVPCEConfiguration Text

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
createVPCEConfiguration_vpceServiceName :: Lens' CreateVPCEConfiguration Text

-- | The DNS name of the service running in your VPC that you want Device
--   Farm to test.
createVPCEConfiguration_serviceDnsName :: Lens' CreateVPCEConfiguration Text

-- | <i>See:</i> <a>newCreateVPCEConfigurationResponse</a> smart
--   constructor.
data CreateVPCEConfigurationResponse
CreateVPCEConfigurationResponse' :: Maybe VPCEConfiguration -> Int -> CreateVPCEConfigurationResponse

-- | An object that contains information about your VPC endpoint
--   configuration.
[$sel:vpceConfiguration:CreateVPCEConfigurationResponse'] :: CreateVPCEConfigurationResponse -> Maybe VPCEConfiguration

-- | The response's http status code.
[$sel:httpStatus:CreateVPCEConfigurationResponse'] :: CreateVPCEConfigurationResponse -> Int

-- | Create a value of <a>CreateVPCEConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfiguration:CreateVPCEConfigurationResponse'</a>,
--   <a>createVPCEConfigurationResponse_vpceConfiguration</a> - An object
--   that contains information about your VPC endpoint configuration.
--   
--   <a>$sel:httpStatus:CreateVPCEConfigurationResponse'</a>,
--   <a>createVPCEConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newCreateVPCEConfigurationResponse :: Int -> CreateVPCEConfigurationResponse

-- | An object that contains information about your VPC endpoint
--   configuration.
createVPCEConfigurationResponse_vpceConfiguration :: Lens' CreateVPCEConfigurationResponse (Maybe VPCEConfiguration)

-- | The response's http status code.
createVPCEConfigurationResponse_httpStatus :: Lens' CreateVPCEConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfigurationResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfigurationResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfigurationResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateVPCEConfiguration.CreateVPCEConfiguration


-- | Uploads an app or test scripts.
module Network.AWS.DeviceFarm.CreateUpload

-- | Represents a request to the create upload operation.
--   
--   <i>See:</i> <a>newCreateUpload</a> smart constructor.
data CreateUpload
CreateUpload' :: Maybe Text -> Text -> Text -> UploadType -> CreateUpload

-- | The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
[$sel:contentType:CreateUpload'] :: CreateUpload -> Maybe Text

-- | The ARN of the project for the upload.
[$sel:projectArn:CreateUpload'] :: CreateUpload -> Text

-- | The upload's file name. The name should not contain any forward
--   slashes (<tt>/</tt>). If you are uploading an iOS app, the file name
--   must end with the <tt>.ipa</tt> extension. If you are uploading an
--   Android app, the file name must end with the <tt>.apk</tt> extension.
--   For all others, the file name must end with the <tt>.zip</tt> file
--   extension.
[$sel:name:CreateUpload'] :: CreateUpload -> Text

-- | The upload's upload type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   If you call <tt>CreateUpload</tt> with <tt>WEB_APP</tt> specified, AWS
--   Device Farm throws an <tt>ArgumentException</tt> error.
[$sel:type':CreateUpload'] :: CreateUpload -> UploadType

-- | Create a value of <a>CreateUpload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:CreateUpload'</a>, <a>createUpload_contentType</a>
--   - The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
--   
--   <a>$sel:projectArn:CreateUpload'</a>, <a>createUpload_projectArn</a> -
--   The ARN of the project for the upload.
--   
--   <a>$sel:name:CreateUpload'</a>, <a>createUpload_name</a> - The
--   upload's file name. The name should not contain any forward slashes
--   (<tt>/</tt>). If you are uploading an iOS app, the file name must end
--   with the <tt>.ipa</tt> extension. If you are uploading an Android app,
--   the file name must end with the <tt>.apk</tt> extension. For all
--   others, the file name must end with the <tt>.zip</tt> file extension.
--   
--   <a>$sel:type':CreateUpload'</a>, <a>createUpload_type</a> - The
--   upload's upload type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   If you call <tt>CreateUpload</tt> with <tt>WEB_APP</tt> specified, AWS
--   Device Farm throws an <tt>ArgumentException</tt> error.
newCreateUpload :: Text -> Text -> UploadType -> CreateUpload

-- | The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
createUpload_contentType :: Lens' CreateUpload (Maybe Text)

-- | The ARN of the project for the upload.
createUpload_projectArn :: Lens' CreateUpload Text

-- | The upload's file name. The name should not contain any forward
--   slashes (<tt>/</tt>). If you are uploading an iOS app, the file name
--   must end with the <tt>.ipa</tt> extension. If you are uploading an
--   Android app, the file name must end with the <tt>.apk</tt> extension.
--   For all others, the file name must end with the <tt>.zip</tt> file
--   extension.
createUpload_name :: Lens' CreateUpload Text

-- | The upload's upload type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   If you call <tt>CreateUpload</tt> with <tt>WEB_APP</tt> specified, AWS
--   Device Farm throws an <tt>ArgumentException</tt> error.
createUpload_type :: Lens' CreateUpload UploadType

-- | Represents the result of a create upload request.
--   
--   <i>See:</i> <a>newCreateUploadResponse</a> smart constructor.
data CreateUploadResponse
CreateUploadResponse' :: Maybe Upload -> Int -> CreateUploadResponse

-- | The newly created upload.
[$sel:upload:CreateUploadResponse'] :: CreateUploadResponse -> Maybe Upload

-- | The response's http status code.
[$sel:httpStatus:CreateUploadResponse'] :: CreateUploadResponse -> Int

-- | Create a value of <a>CreateUploadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upload:CreateUploadResponse'</a>,
--   <a>createUploadResponse_upload</a> - The newly created upload.
--   
--   <a>$sel:httpStatus:CreateUploadResponse'</a>,
--   <a>createUploadResponse_httpStatus</a> - The response's http status
--   code.
newCreateUploadResponse :: Int -> CreateUploadResponse

-- | The newly created upload.
createUploadResponse_upload :: Lens' CreateUploadResponse (Maybe Upload)

-- | The response's http status code.
createUploadResponse_httpStatus :: Lens' CreateUploadResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateUpload.CreateUploadResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateUpload.CreateUploadResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateUpload.CreateUploadResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateUpload.CreateUploadResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateUpload.CreateUpload
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateUpload.CreateUpload


-- | Creates a signed, short-term URL that can be passed to a Selenium
--   <tt>RemoteWebDriver</tt> constructor.
module Network.AWS.DeviceFarm.CreateTestGridUrl

-- | <i>See:</i> <a>newCreateTestGridUrl</a> smart constructor.
data CreateTestGridUrl
CreateTestGridUrl' :: Text -> Natural -> CreateTestGridUrl

-- | ARN (from CreateTestGridProject or ListTestGridProjects) to associate
--   with the short-term URL.
[$sel:projectArn:CreateTestGridUrl'] :: CreateTestGridUrl -> Text

-- | Lifetime, in seconds, of the URL.
[$sel:expiresInSeconds:CreateTestGridUrl'] :: CreateTestGridUrl -> Natural

-- | Create a value of <a>CreateTestGridUrl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectArn:CreateTestGridUrl'</a>,
--   <a>createTestGridUrl_projectArn</a> - ARN (from CreateTestGridProject
--   or ListTestGridProjects) to associate with the short-term URL.
--   
--   <a>$sel:expiresInSeconds:CreateTestGridUrl'</a>,
--   <a>createTestGridUrl_expiresInSeconds</a> - Lifetime, in seconds, of
--   the URL.
newCreateTestGridUrl :: Text -> Natural -> CreateTestGridUrl

-- | ARN (from CreateTestGridProject or ListTestGridProjects) to associate
--   with the short-term URL.
createTestGridUrl_projectArn :: Lens' CreateTestGridUrl Text

-- | Lifetime, in seconds, of the URL.
createTestGridUrl_expiresInSeconds :: Lens' CreateTestGridUrl Natural

-- | <i>See:</i> <a>newCreateTestGridUrlResponse</a> smart constructor.
data CreateTestGridUrlResponse
CreateTestGridUrlResponse' :: Maybe (Sensitive Text) -> Maybe POSIX -> Int -> CreateTestGridUrlResponse

-- | A signed URL, expiring in CreateTestGridUrlRequest$expiresInSeconds
--   seconds, to be passed to a <tt>RemoteWebDriver</tt>.
[$sel:url:CreateTestGridUrlResponse'] :: CreateTestGridUrlResponse -> Maybe (Sensitive Text)

-- | The number of seconds the URL from CreateTestGridUrlResult$url stays
--   active.
[$sel:expires:CreateTestGridUrlResponse'] :: CreateTestGridUrlResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:CreateTestGridUrlResponse'] :: CreateTestGridUrlResponse -> Int

-- | Create a value of <a>CreateTestGridUrlResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:CreateTestGridUrlResponse'</a>,
--   <a>createTestGridUrlResponse_url</a> - A signed URL, expiring in
--   CreateTestGridUrlRequest$expiresInSeconds seconds, to be passed to a
--   <tt>RemoteWebDriver</tt>.
--   
--   <a>$sel:expires:CreateTestGridUrlResponse'</a>,
--   <a>createTestGridUrlResponse_expires</a> - The number of seconds the
--   URL from CreateTestGridUrlResult$url stays active.
--   
--   <a>$sel:httpStatus:CreateTestGridUrlResponse'</a>,
--   <a>createTestGridUrlResponse_httpStatus</a> - The response's http
--   status code.
newCreateTestGridUrlResponse :: Int -> CreateTestGridUrlResponse

-- | A signed URL, expiring in CreateTestGridUrlRequest$expiresInSeconds
--   seconds, to be passed to a <tt>RemoteWebDriver</tt>.
createTestGridUrlResponse_url :: Lens' CreateTestGridUrlResponse (Maybe Text)

-- | The number of seconds the URL from CreateTestGridUrlResult$url stays
--   active.
createTestGridUrlResponse_expires :: Lens' CreateTestGridUrlResponse (Maybe UTCTime)

-- | The response's http status code.
createTestGridUrlResponse_httpStatus :: Lens' CreateTestGridUrlResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrlResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrlResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrlResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrlResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateTestGridUrl.CreateTestGridUrl


-- | Creates a Selenium testing project. Projects are used to track
--   TestGridSession instances.
module Network.AWS.DeviceFarm.CreateTestGridProject

-- | <i>See:</i> <a>newCreateTestGridProject</a> smart constructor.
data CreateTestGridProject
CreateTestGridProject' :: Maybe TestGridVpcConfig -> Maybe Text -> Text -> CreateTestGridProject

-- | The VPC security groups and subnets that are attached to a project.
[$sel:vpcConfig:CreateTestGridProject'] :: CreateTestGridProject -> Maybe TestGridVpcConfig

-- | Human-readable description of the project.
[$sel:description:CreateTestGridProject'] :: CreateTestGridProject -> Maybe Text

-- | Human-readable name of the Selenium testing project.
[$sel:name:CreateTestGridProject'] :: CreateTestGridProject -> Text

-- | Create a value of <a>CreateTestGridProject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:CreateTestGridProject'</a>,
--   <a>createTestGridProject_vpcConfig</a> - The VPC security groups and
--   subnets that are attached to a project.
--   
--   <a>$sel:description:CreateTestGridProject'</a>,
--   <a>createTestGridProject_description</a> - Human-readable description
--   of the project.
--   
--   <a>$sel:name:CreateTestGridProject'</a>,
--   <a>createTestGridProject_name</a> - Human-readable name of the
--   Selenium testing project.
newCreateTestGridProject :: Text -> CreateTestGridProject

-- | The VPC security groups and subnets that are attached to a project.
createTestGridProject_vpcConfig :: Lens' CreateTestGridProject (Maybe TestGridVpcConfig)

-- | Human-readable description of the project.
createTestGridProject_description :: Lens' CreateTestGridProject (Maybe Text)

-- | Human-readable name of the Selenium testing project.
createTestGridProject_name :: Lens' CreateTestGridProject Text

-- | <i>See:</i> <a>newCreateTestGridProjectResponse</a> smart constructor.
data CreateTestGridProjectResponse
CreateTestGridProjectResponse' :: Maybe TestGridProject -> Int -> CreateTestGridProjectResponse

-- | ARN of the Selenium testing project that was created.
[$sel:testGridProject:CreateTestGridProjectResponse'] :: CreateTestGridProjectResponse -> Maybe TestGridProject

-- | The response's http status code.
[$sel:httpStatus:CreateTestGridProjectResponse'] :: CreateTestGridProjectResponse -> Int

-- | Create a value of <a>CreateTestGridProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testGridProject:CreateTestGridProjectResponse'</a>,
--   <a>createTestGridProjectResponse_testGridProject</a> - ARN of the
--   Selenium testing project that was created.
--   
--   <a>$sel:httpStatus:CreateTestGridProjectResponse'</a>,
--   <a>createTestGridProjectResponse_httpStatus</a> - The response's http
--   status code.
newCreateTestGridProjectResponse :: Int -> CreateTestGridProjectResponse

-- | ARN of the Selenium testing project that was created.
createTestGridProjectResponse_testGridProject :: Lens' CreateTestGridProjectResponse (Maybe TestGridProject)

-- | The response's http status code.
createTestGridProjectResponse_httpStatus :: Lens' CreateTestGridProjectResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProjectResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProjectResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProjectResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateTestGridProject.CreateTestGridProject


-- | Specifies and starts a remote access session.
module Network.AWS.DeviceFarm.CreateRemoteAccessSession

-- | Creates and submits a request to start a remote access session.
--   
--   <i>See:</i> <a>newCreateRemoteAccessSession</a> smart constructor.
data CreateRemoteAccessSession
CreateRemoteAccessSession' :: Maybe Text -> Maybe InteractionMode -> Maybe CreateRemoteAccessSessionConfiguration -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> Text -> Text -> CreateRemoteAccessSession

-- | Unique identifier for the client. If you want access to multiple
--   devices on the same client, you should pass the same <tt>clientId</tt>
--   value in each call to <tt>CreateRemoteAccessSession</tt>. This
--   identifier is required only if <tt>remoteDebugEnabled</tt> is set to
--   <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:clientId:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe Text

-- | The interaction mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
[$sel:interactionMode:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe InteractionMode

-- | The configuration information for the remote access session request.
[$sel:configuration:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe CreateRemoteAccessSessionConfiguration

-- | The name of the remote access session to create.
[$sel:name:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe Text

-- | Set to <tt>true</tt> to enable remote recording for the remote access
--   session.
[$sel:remoteRecordEnabled:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the device instance for which you
--   want to create a remote access session.
[$sel:instanceArn:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe Text

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information on how Device Farm modifies your uploads during
--   tests, see <a>Do you modify my app?</a>
[$sel:skipAppResign:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe Bool

-- | Ignored. The public key of the <tt>ssh</tt> key pair you want to use
--   for connecting to remote devices in your remote debugging session.
--   This key is required only if <tt>remoteDebugEnabled</tt> is set to
--   <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:sshPublicKey:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe Text

-- | Set to <tt>true</tt> if you want to access devices remotely for
--   debugging in your remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
[$sel:remoteDebugEnabled:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe Bool

-- | The Amazon Resource Name (ARN) for the app to be recorded in the
--   remote access session.
[$sel:remoteRecordAppArn:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Maybe Text

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   create a remote access session.
[$sel:projectArn:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Text

-- | The ARN of the device for which you want to create a remote access
--   session.
[$sel:deviceArn:CreateRemoteAccessSession'] :: CreateRemoteAccessSession -> Text

-- | Create a value of <a>CreateRemoteAccessSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_clientId</a> - Unique identifier for the
--   client. If you want access to multiple devices on the same client, you
--   should pass the same <tt>clientId</tt> value in each call to
--   <tt>CreateRemoteAccessSession</tt>. This identifier is required only
--   if <tt>remoteDebugEnabled</tt> is set to <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:interactionMode:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_interactionMode</a> - The interaction
--   mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
--   
--   <a>$sel:configuration:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_configuration</a> - The configuration
--   information for the remote access session request.
--   
--   <a>$sel:name:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_name</a> - The name of the remote access
--   session to create.
--   
--   <a>$sel:remoteRecordEnabled:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_remoteRecordEnabled</a> - Set to
--   <tt>true</tt> to enable remote recording for the remote access
--   session.
--   
--   <a>$sel:instanceArn:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_instanceArn</a> - The Amazon Resource
--   Name (ARN) of the device instance for which you want to create a
--   remote access session.
--   
--   <a>$sel:skipAppResign:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_skipAppResign</a> - When set to
--   <tt>true</tt>, for private devices, Device Farm does not sign your app
--   again. For public devices, Device Farm always signs your apps again.
--   
--   For more information on how Device Farm modifies your uploads during
--   tests, see <a>Do you modify my app?</a>
--   
--   <a>$sel:sshPublicKey:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_sshPublicKey</a> - Ignored. The public
--   key of the <tt>ssh</tt> key pair you want to use for connecting to
--   remote devices in your remote debugging session. This key is required
--   only if <tt>remoteDebugEnabled</tt> is set to <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:remoteDebugEnabled:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_remoteDebugEnabled</a> - Set to
--   <tt>true</tt> if you want to access devices remotely for debugging in
--   your remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:remoteRecordAppArn:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_remoteRecordAppArn</a> - The Amazon
--   Resource Name (ARN) for the app to be recorded in the remote access
--   session.
--   
--   <a>$sel:projectArn:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_projectArn</a> - The Amazon Resource Name
--   (ARN) of the project for which you want to create a remote access
--   session.
--   
--   <a>$sel:deviceArn:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_deviceArn</a> - The ARN of the device for
--   which you want to create a remote access session.
newCreateRemoteAccessSession :: Text -> Text -> CreateRemoteAccessSession

-- | Unique identifier for the client. If you want access to multiple
--   devices on the same client, you should pass the same <tt>clientId</tt>
--   value in each call to <tt>CreateRemoteAccessSession</tt>. This
--   identifier is required only if <tt>remoteDebugEnabled</tt> is set to
--   <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
createRemoteAccessSession_clientId :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | The interaction mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
createRemoteAccessSession_interactionMode :: Lens' CreateRemoteAccessSession (Maybe InteractionMode)

-- | The configuration information for the remote access session request.
createRemoteAccessSession_configuration :: Lens' CreateRemoteAccessSession (Maybe CreateRemoteAccessSessionConfiguration)

-- | The name of the remote access session to create.
createRemoteAccessSession_name :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | Set to <tt>true</tt> to enable remote recording for the remote access
--   session.
createRemoteAccessSession_remoteRecordEnabled :: Lens' CreateRemoteAccessSession (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the device instance for which you
--   want to create a remote access session.
createRemoteAccessSession_instanceArn :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information on how Device Farm modifies your uploads during
--   tests, see <a>Do you modify my app?</a>
createRemoteAccessSession_skipAppResign :: Lens' CreateRemoteAccessSession (Maybe Bool)

-- | Ignored. The public key of the <tt>ssh</tt> key pair you want to use
--   for connecting to remote devices in your remote debugging session.
--   This key is required only if <tt>remoteDebugEnabled</tt> is set to
--   <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
createRemoteAccessSession_sshPublicKey :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | Set to <tt>true</tt> if you want to access devices remotely for
--   debugging in your remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
createRemoteAccessSession_remoteDebugEnabled :: Lens' CreateRemoteAccessSession (Maybe Bool)

-- | The Amazon Resource Name (ARN) for the app to be recorded in the
--   remote access session.
createRemoteAccessSession_remoteRecordAppArn :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   create a remote access session.
createRemoteAccessSession_projectArn :: Lens' CreateRemoteAccessSession Text

-- | The ARN of the device for which you want to create a remote access
--   session.
createRemoteAccessSession_deviceArn :: Lens' CreateRemoteAccessSession Text

-- | Represents the server response from a request to create a remote
--   access session.
--   
--   <i>See:</i> <a>newCreateRemoteAccessSessionResponse</a> smart
--   constructor.
data CreateRemoteAccessSessionResponse
CreateRemoteAccessSessionResponse' :: Maybe RemoteAccessSession -> Int -> CreateRemoteAccessSessionResponse

-- | A container that describes the remote access session when the request
--   to create a remote access session is sent.
[$sel:remoteAccessSession:CreateRemoteAccessSessionResponse'] :: CreateRemoteAccessSessionResponse -> Maybe RemoteAccessSession

-- | The response's http status code.
[$sel:httpStatus:CreateRemoteAccessSessionResponse'] :: CreateRemoteAccessSessionResponse -> Int

-- | Create a value of <a>CreateRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSession:CreateRemoteAccessSessionResponse'</a>,
--   <a>createRemoteAccessSessionResponse_remoteAccessSession</a> - A
--   container that describes the remote access session when the request to
--   create a remote access session is sent.
--   
--   <a>$sel:httpStatus:CreateRemoteAccessSessionResponse'</a>,
--   <a>createRemoteAccessSessionResponse_httpStatus</a> - The response's
--   http status code.
newCreateRemoteAccessSessionResponse :: Int -> CreateRemoteAccessSessionResponse

-- | A container that describes the remote access session when the request
--   to create a remote access session is sent.
createRemoteAccessSessionResponse_remoteAccessSession :: Lens' CreateRemoteAccessSessionResponse (Maybe RemoteAccessSession)

-- | The response's http status code.
createRemoteAccessSessionResponse_httpStatus :: Lens' CreateRemoteAccessSessionResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSessionResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSessionResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSessionResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSessionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSessionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateRemoteAccessSession.CreateRemoteAccessSession


-- | Creates a project.
module Network.AWS.DeviceFarm.CreateProject

-- | Represents a request to the create project operation.
--   
--   <i>See:</i> <a>newCreateProject</a> smart constructor.
data CreateProject
CreateProject' :: Maybe Int -> Text -> CreateProject

-- | Sets the execution timeout value (in minutes) for a project. All test
--   runs in this project use the specified execution timeout value unless
--   overridden when scheduling a run.
[$sel:defaultJobTimeoutMinutes:CreateProject'] :: CreateProject -> Maybe Int

-- | The project's name.
[$sel:name:CreateProject'] :: CreateProject -> Text

-- | Create a value of <a>CreateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultJobTimeoutMinutes:CreateProject'</a>,
--   <a>createProject_defaultJobTimeoutMinutes</a> - Sets the execution
--   timeout value (in minutes) for a project. All test runs in this
--   project use the specified execution timeout value unless overridden
--   when scheduling a run.
--   
--   <a>$sel:name:CreateProject'</a>, <a>createProject_name</a> - The
--   project's name.
newCreateProject :: Text -> CreateProject

-- | Sets the execution timeout value (in minutes) for a project. All test
--   runs in this project use the specified execution timeout value unless
--   overridden when scheduling a run.
createProject_defaultJobTimeoutMinutes :: Lens' CreateProject (Maybe Int)

-- | The project's name.
createProject_name :: Lens' CreateProject Text

-- | Represents the result of a create project request.
--   
--   <i>See:</i> <a>newCreateProjectResponse</a> smart constructor.
data CreateProjectResponse
CreateProjectResponse' :: Maybe Project -> Int -> CreateProjectResponse

-- | The newly created project.
[$sel:project:CreateProjectResponse'] :: CreateProjectResponse -> Maybe Project

-- | The response's http status code.
[$sel:httpStatus:CreateProjectResponse'] :: CreateProjectResponse -> Int

-- | Create a value of <a>CreateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:CreateProjectResponse'</a>,
--   <a>createProjectResponse_project</a> - The newly created project.
--   
--   <a>$sel:httpStatus:CreateProjectResponse'</a>,
--   <a>createProjectResponse_httpStatus</a> - The response's http status
--   code.
newCreateProjectResponse :: Int -> CreateProjectResponse

-- | The newly created project.
createProjectResponse_project :: Lens' CreateProjectResponse (Maybe Project)

-- | The response's http status code.
createProjectResponse_httpStatus :: Lens' CreateProjectResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateProject.CreateProject
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateProject.CreateProject
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateProject.CreateProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateProject.CreateProject
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateProject.CreateProjectResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateProject.CreateProjectResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateProject.CreateProjectResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateProject.CreateProjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateProject.CreateProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateProject.CreateProjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateProject.CreateProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateProject.CreateProject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateProject.CreateProject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateProject.CreateProject
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateProject.CreateProject
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateProject.CreateProject


-- | Creates a network profile.
module Network.AWS.DeviceFarm.CreateNetworkProfile

-- | <i>See:</i> <a>newCreateNetworkProfile</a> smart constructor.
data CreateNetworkProfile
CreateNetworkProfile' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Natural -> Maybe Natural -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe NetworkProfileType -> Text -> Text -> CreateNetworkProfile

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
[$sel:uplinkJitterMs:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Integer

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
[$sel:downlinkBandwidthBits:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Integer

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
[$sel:downlinkDelayMs:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Integer

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
[$sel:downlinkJitterMs:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Integer

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
[$sel:uplinkLossPercent:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Natural

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
[$sel:downlinkLossPercent:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Natural

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
[$sel:uplinkBandwidthBits:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Integer

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
[$sel:uplinkDelayMs:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Integer

-- | The description of the network profile.
[$sel:description:CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe Text

-- | The type of network profile to create. Valid values are listed here.
[$sel:type':CreateNetworkProfile'] :: CreateNetworkProfile -> Maybe NetworkProfileType

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   create a network profile.
[$sel:projectArn:CreateNetworkProfile'] :: CreateNetworkProfile -> Text

-- | The name for the new network profile.
[$sel:name:CreateNetworkProfile'] :: CreateNetworkProfile -> Text

-- | Create a value of <a>CreateNetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uplinkJitterMs:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_uplinkJitterMs</a> - Time variation in the
--   delay of received packets in milliseconds as an integer from 0 to
--   2000.
--   
--   <a>$sel:downlinkBandwidthBits:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_downlinkBandwidthBits</a> - The data
--   throughput rate in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:downlinkDelayMs:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_downlinkDelayMs</a> - Delay time for all
--   packets to destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkJitterMs:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_downlinkJitterMs</a> - Time variation in the
--   delay of received packets in milliseconds as an integer from 0 to
--   2000.
--   
--   <a>$sel:uplinkLossPercent:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_uplinkLossPercent</a> - Proportion of
--   transmitted packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:downlinkLossPercent:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_downlinkLossPercent</a> - Proportion of
--   received packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:uplinkBandwidthBits:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_uplinkBandwidthBits</a> - The data throughput
--   rate in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:uplinkDelayMs:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_uplinkDelayMs</a> - Delay time for all packets
--   to destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:description:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_description</a> - The description of the
--   network profile.
--   
--   <a>$sel:type':CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_type</a> - The type of network profile to
--   create. Valid values are listed here.
--   
--   <a>$sel:projectArn:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_projectArn</a> - The Amazon Resource Name
--   (ARN) of the project for which you want to create a network profile.
--   
--   <a>$sel:name:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_name</a> - The name for the new network
--   profile.
newCreateNetworkProfile :: Text -> Text -> CreateNetworkProfile

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
createNetworkProfile_uplinkJitterMs :: Lens' CreateNetworkProfile (Maybe Integer)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
createNetworkProfile_downlinkBandwidthBits :: Lens' CreateNetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
createNetworkProfile_downlinkDelayMs :: Lens' CreateNetworkProfile (Maybe Integer)

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
createNetworkProfile_downlinkJitterMs :: Lens' CreateNetworkProfile (Maybe Integer)

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
createNetworkProfile_uplinkLossPercent :: Lens' CreateNetworkProfile (Maybe Natural)

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
createNetworkProfile_downlinkLossPercent :: Lens' CreateNetworkProfile (Maybe Natural)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
createNetworkProfile_uplinkBandwidthBits :: Lens' CreateNetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
createNetworkProfile_uplinkDelayMs :: Lens' CreateNetworkProfile (Maybe Integer)

-- | The description of the network profile.
createNetworkProfile_description :: Lens' CreateNetworkProfile (Maybe Text)

-- | The type of network profile to create. Valid values are listed here.
createNetworkProfile_type :: Lens' CreateNetworkProfile (Maybe NetworkProfileType)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   create a network profile.
createNetworkProfile_projectArn :: Lens' CreateNetworkProfile Text

-- | The name for the new network profile.
createNetworkProfile_name :: Lens' CreateNetworkProfile Text

-- | <i>See:</i> <a>newCreateNetworkProfileResponse</a> smart constructor.
data CreateNetworkProfileResponse
CreateNetworkProfileResponse' :: Maybe NetworkProfile -> Int -> CreateNetworkProfileResponse

-- | The network profile that is returned by the create network profile
--   request.
[$sel:networkProfile:CreateNetworkProfileResponse'] :: CreateNetworkProfileResponse -> Maybe NetworkProfile

-- | The response's http status code.
[$sel:httpStatus:CreateNetworkProfileResponse'] :: CreateNetworkProfileResponse -> Int

-- | Create a value of <a>CreateNetworkProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkProfile:CreateNetworkProfileResponse'</a>,
--   <a>createNetworkProfileResponse_networkProfile</a> - The network
--   profile that is returned by the create network profile request.
--   
--   <a>$sel:httpStatus:CreateNetworkProfileResponse'</a>,
--   <a>createNetworkProfileResponse_httpStatus</a> - The response's http
--   status code.
newCreateNetworkProfileResponse :: Int -> CreateNetworkProfileResponse

-- | The network profile that is returned by the create network profile
--   request.
createNetworkProfileResponse_networkProfile :: Lens' CreateNetworkProfileResponse (Maybe NetworkProfile)

-- | The response's http status code.
createNetworkProfileResponse_httpStatus :: Lens' CreateNetworkProfileResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfileResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfileResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfileResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateNetworkProfile.CreateNetworkProfile


-- | Creates a profile that can be applied to one or more private fleet
--   device instances.
module Network.AWS.DeviceFarm.CreateInstanceProfile

-- | <i>See:</i> <a>newCreateInstanceProfile</a> smart constructor.
data CreateInstanceProfile
CreateInstanceProfile' :: Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Text -> CreateInstanceProfile

-- | An array of strings that specifies the list of app packages that
--   should not be cleaned up from the device after a test run.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
[$sel:excludeAppPackagesFromCleanup:CreateInstanceProfile'] :: CreateInstanceProfile -> Maybe [Text]

-- | The description of your instance profile.
[$sel:description:CreateInstanceProfile'] :: CreateInstanceProfile -> Maybe Text

-- | When set to <tt>true</tt>, Device Farm reboots the instance after a
--   test run. The default value is <tt>true</tt>.
[$sel:rebootAfterUse:CreateInstanceProfile'] :: CreateInstanceProfile -> Maybe Bool

-- | When set to <tt>true</tt>, Device Farm removes app packages after a
--   test run. The default value is <tt>false</tt> for private devices.
[$sel:packageCleanup:CreateInstanceProfile'] :: CreateInstanceProfile -> Maybe Bool

-- | The name of your instance profile.
[$sel:name:CreateInstanceProfile'] :: CreateInstanceProfile -> Text

-- | Create a value of <a>CreateInstanceProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeAppPackagesFromCleanup:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_excludeAppPackagesFromCleanup</a> - An array
--   of strings that specifies the list of app packages that should not be
--   cleaned up from the device after a test run.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
--   
--   <a>$sel:description:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_description</a> - The description of your
--   instance profile.
--   
--   <a>$sel:rebootAfterUse:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_rebootAfterUse</a> - When set to
--   <tt>true</tt>, Device Farm reboots the instance after a test run. The
--   default value is <tt>true</tt>.
--   
--   <a>$sel:packageCleanup:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_packageCleanup</a> - When set to
--   <tt>true</tt>, Device Farm removes app packages after a test run. The
--   default value is <tt>false</tt> for private devices.
--   
--   <a>$sel:name:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_name</a> - The name of your instance profile.
newCreateInstanceProfile :: Text -> CreateInstanceProfile

-- | An array of strings that specifies the list of app packages that
--   should not be cleaned up from the device after a test run.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
createInstanceProfile_excludeAppPackagesFromCleanup :: Lens' CreateInstanceProfile (Maybe [Text])

-- | The description of your instance profile.
createInstanceProfile_description :: Lens' CreateInstanceProfile (Maybe Text)

-- | When set to <tt>true</tt>, Device Farm reboots the instance after a
--   test run. The default value is <tt>true</tt>.
createInstanceProfile_rebootAfterUse :: Lens' CreateInstanceProfile (Maybe Bool)

-- | When set to <tt>true</tt>, Device Farm removes app packages after a
--   test run. The default value is <tt>false</tt> for private devices.
createInstanceProfile_packageCleanup :: Lens' CreateInstanceProfile (Maybe Bool)

-- | The name of your instance profile.
createInstanceProfile_name :: Lens' CreateInstanceProfile Text

-- | <i>See:</i> <a>newCreateInstanceProfileResponse</a> smart constructor.
data CreateInstanceProfileResponse
CreateInstanceProfileResponse' :: Maybe InstanceProfile -> Int -> CreateInstanceProfileResponse

-- | An object that contains information about your instance profile.
[$sel:instanceProfile:CreateInstanceProfileResponse'] :: CreateInstanceProfileResponse -> Maybe InstanceProfile

-- | The response's http status code.
[$sel:httpStatus:CreateInstanceProfileResponse'] :: CreateInstanceProfileResponse -> Int

-- | Create a value of <a>CreateInstanceProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceProfile:CreateInstanceProfileResponse'</a>,
--   <a>createInstanceProfileResponse_instanceProfile</a> - An object that
--   contains information about your instance profile.
--   
--   <a>$sel:httpStatus:CreateInstanceProfileResponse'</a>,
--   <a>createInstanceProfileResponse_httpStatus</a> - The response's http
--   status code.
newCreateInstanceProfileResponse :: Int -> CreateInstanceProfileResponse

-- | An object that contains information about your instance profile.
createInstanceProfileResponse_instanceProfile :: Lens' CreateInstanceProfileResponse (Maybe InstanceProfile)

-- | The response's http status code.
createInstanceProfileResponse_httpStatus :: Lens' CreateInstanceProfileResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfileResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfileResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfileResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateInstanceProfile.CreateInstanceProfile


-- | Creates a device pool.
module Network.AWS.DeviceFarm.CreateDevicePool

-- | Represents a request to the create device pool operation.
--   
--   <i>See:</i> <a>newCreateDevicePool</a> smart constructor.
data CreateDevicePool
CreateDevicePool' :: Maybe Int -> Maybe Text -> Text -> Text -> [Rule] -> CreateDevicePool

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and meet the criteria that
--   you assign for the <tt>rules</tt> parameter. Depending on how many
--   devices meet these constraints, your device pool might contain fewer
--   devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
[$sel:maxDevices:CreateDevicePool'] :: CreateDevicePool -> Maybe Int

-- | The device pool's description.
[$sel:description:CreateDevicePool'] :: CreateDevicePool -> Maybe Text

-- | The ARN of the project for the device pool.
[$sel:projectArn:CreateDevicePool'] :: CreateDevicePool -> Text

-- | The device pool's name.
[$sel:name:CreateDevicePool'] :: CreateDevicePool -> Text

-- | The device pool's rules.
[$sel:rules:CreateDevicePool'] :: CreateDevicePool -> [Rule]

-- | Create a value of <a>CreateDevicePool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxDevices:CreateDevicePool'</a>,
--   <a>createDevicePool_maxDevices</a> - The number of devices that Device
--   Farm can add to your device pool. Device Farm adds devices that are
--   available and meet the criteria that you assign for the <tt>rules</tt>
--   parameter. Depending on how many devices meet these constraints, your
--   device pool might contain fewer devices than the value for this
--   parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   <a>$sel:description:CreateDevicePool'</a>,
--   <a>createDevicePool_description</a> - The device pool's description.
--   
--   <a>$sel:projectArn:CreateDevicePool'</a>,
--   <a>createDevicePool_projectArn</a> - The ARN of the project for the
--   device pool.
--   
--   <a>$sel:name:CreateDevicePool'</a>, <a>createDevicePool_name</a> - The
--   device pool's name.
--   
--   <a>$sel:rules:CreateDevicePool'</a>, <a>createDevicePool_rules</a> -
--   The device pool's rules.
newCreateDevicePool :: Text -> Text -> CreateDevicePool

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and meet the criteria that
--   you assign for the <tt>rules</tt> parameter. Depending on how many
--   devices meet these constraints, your device pool might contain fewer
--   devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
createDevicePool_maxDevices :: Lens' CreateDevicePool (Maybe Int)

-- | The device pool's description.
createDevicePool_description :: Lens' CreateDevicePool (Maybe Text)

-- | The ARN of the project for the device pool.
createDevicePool_projectArn :: Lens' CreateDevicePool Text

-- | The device pool's name.
createDevicePool_name :: Lens' CreateDevicePool Text

-- | The device pool's rules.
createDevicePool_rules :: Lens' CreateDevicePool [Rule]

-- | Represents the result of a create device pool request.
--   
--   <i>See:</i> <a>newCreateDevicePoolResponse</a> smart constructor.
data CreateDevicePoolResponse
CreateDevicePoolResponse' :: Maybe DevicePool -> Int -> CreateDevicePoolResponse

-- | The newly created device pool.
[$sel:devicePool:CreateDevicePoolResponse'] :: CreateDevicePoolResponse -> Maybe DevicePool

-- | The response's http status code.
[$sel:httpStatus:CreateDevicePoolResponse'] :: CreateDevicePoolResponse -> Int

-- | Create a value of <a>CreateDevicePoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devicePool:CreateDevicePoolResponse'</a>,
--   <a>createDevicePoolResponse_devicePool</a> - The newly created device
--   pool.
--   
--   <a>$sel:httpStatus:CreateDevicePoolResponse'</a>,
--   <a>createDevicePoolResponse_httpStatus</a> - The response's http
--   status code.
newCreateDevicePoolResponse :: Int -> CreateDevicePoolResponse

-- | The newly created device pool.
createDevicePoolResponse_devicePool :: Lens' CreateDevicePoolResponse (Maybe DevicePool)

-- | The response's http status code.
createDevicePoolResponse_httpStatus :: Lens' CreateDevicePoolResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance GHC.Generics.Generic Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePoolResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePoolResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePoolResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.CreateDevicePool.CreateDevicePool


-- | Deletes the specified tags from a resource.
module Network.AWS.DeviceFarm.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource or resources from which
--   to delete tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | The keys of the tags to be removed.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Name (ARN) of
--   the resource or resources from which to delete tags. You can associate
--   tags with the following Device Farm resources: <tt>PROJECT</tt>,
--   <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>, <tt>INSTANCE_PROFILE</tt>,
--   <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>, <tt>DEVICE_POOL</tt>,
--   <tt>DEVICE</tt>, and <tt>VPCE_CONFIGURATION</tt>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource or resources from which
--   to delete tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.DeviceFarm.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.DeviceFarm.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UntagResource.UntagResource


-- | Updates information about a private device instance.
module Network.AWS.DeviceFarm.UpdateDeviceInstance

-- | <i>See:</i> <a>newUpdateDeviceInstance</a> smart constructor.
data UpdateDeviceInstance
UpdateDeviceInstance' :: Maybe [Text] -> Maybe Text -> Text -> UpdateDeviceInstance

-- | An array of strings that you want to associate with the device
--   instance.
[$sel:labels:UpdateDeviceInstance'] :: UpdateDeviceInstance -> Maybe [Text]

-- | The ARN of the profile that you want to associate with the device
--   instance.
[$sel:profileArn:UpdateDeviceInstance'] :: UpdateDeviceInstance -> Maybe Text

-- | The Amazon Resource Name (ARN) of the device instance.
[$sel:arn:UpdateDeviceInstance'] :: UpdateDeviceInstance -> Text

-- | Create a value of <a>UpdateDeviceInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labels:UpdateDeviceInstance'</a>,
--   <a>updateDeviceInstance_labels</a> - An array of strings that you want
--   to associate with the device instance.
--   
--   <a>$sel:profileArn:UpdateDeviceInstance'</a>,
--   <a>updateDeviceInstance_profileArn</a> - The ARN of the profile that
--   you want to associate with the device instance.
--   
--   <a>$sel:arn:UpdateDeviceInstance'</a>, <a>updateDeviceInstance_arn</a>
--   - The Amazon Resource Name (ARN) of the device instance.
newUpdateDeviceInstance :: Text -> UpdateDeviceInstance

-- | An array of strings that you want to associate with the device
--   instance.
updateDeviceInstance_labels :: Lens' UpdateDeviceInstance (Maybe [Text])

-- | The ARN of the profile that you want to associate with the device
--   instance.
updateDeviceInstance_profileArn :: Lens' UpdateDeviceInstance (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device instance.
updateDeviceInstance_arn :: Lens' UpdateDeviceInstance Text

-- | <i>See:</i> <a>newUpdateDeviceInstanceResponse</a> smart constructor.
data UpdateDeviceInstanceResponse
UpdateDeviceInstanceResponse' :: Maybe DeviceInstance -> Int -> UpdateDeviceInstanceResponse

-- | An object that contains information about your device instance.
[$sel:deviceInstance:UpdateDeviceInstanceResponse'] :: UpdateDeviceInstanceResponse -> Maybe DeviceInstance

-- | The response's http status code.
[$sel:httpStatus:UpdateDeviceInstanceResponse'] :: UpdateDeviceInstanceResponse -> Int

-- | Create a value of <a>UpdateDeviceInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceInstance:UpdateDeviceInstanceResponse'</a>,
--   <a>updateDeviceInstanceResponse_deviceInstance</a> - An object that
--   contains information about your device instance.
--   
--   <a>$sel:httpStatus:UpdateDeviceInstanceResponse'</a>,
--   <a>updateDeviceInstanceResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceInstanceResponse :: Int -> UpdateDeviceInstanceResponse

-- | An object that contains information about your device instance.
updateDeviceInstanceResponse_deviceInstance :: Lens' UpdateDeviceInstanceResponse (Maybe DeviceInstance)

-- | The response's http status code.
updateDeviceInstanceResponse_httpStatus :: Lens' UpdateDeviceInstanceResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstanceResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstanceResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstanceResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UpdateDeviceInstance.UpdateDeviceInstance


-- | Modifies the name, description, and rules in a device pool given the
--   attributes and the pool ARN. Rule updates are all-or-nothing, meaning
--   they can only be updated as a whole (or not at all).
module Network.AWS.DeviceFarm.UpdateDevicePool

-- | Represents a request to the update device pool operation.
--   
--   <i>See:</i> <a>newUpdateDevicePool</a> smart constructor.
data UpdateDevicePool
UpdateDevicePool' :: Maybe Bool -> Maybe [Rule] -> Maybe Int -> Maybe Text -> Maybe Text -> Text -> UpdateDevicePool

-- | Sets whether the <tt>maxDevices</tt> parameter applies to your device
--   pool. If you set this parameter to <tt>true</tt>, the
--   <tt>maxDevices</tt> parameter does not apply, and Device Farm does not
--   limit the number of devices that it adds to your device pool. In this
--   case, Device Farm adds all available devices that meet the criteria
--   specified in the <tt>rules</tt> parameter.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>maxDevices</tt> parameter in the same request.
[$sel:clearMaxDevices:UpdateDevicePool'] :: UpdateDevicePool -> Maybe Bool

-- | Represents the rules to modify for the device pool. Updating rules is
--   optional. If you update rules for your request, the update replaces
--   the existing rules.
[$sel:rules:UpdateDevicePool'] :: UpdateDevicePool -> Maybe [Rule]

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and that meet the criteria
--   that you assign for the <tt>rules</tt> parameter. Depending on how
--   many devices meet these constraints, your device pool might contain
--   fewer devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>clearMaxDevices</tt> parameter in the same request.
[$sel:maxDevices:UpdateDevicePool'] :: UpdateDevicePool -> Maybe Int

-- | A string that represents the name of the device pool to update.
[$sel:name:UpdateDevicePool'] :: UpdateDevicePool -> Maybe Text

-- | A description of the device pool to update.
[$sel:description:UpdateDevicePool'] :: UpdateDevicePool -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Device Farm device pool to
--   update.
[$sel:arn:UpdateDevicePool'] :: UpdateDevicePool -> Text

-- | Create a value of <a>UpdateDevicePool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clearMaxDevices:UpdateDevicePool'</a>,
--   <a>updateDevicePool_clearMaxDevices</a> - Sets whether the
--   <tt>maxDevices</tt> parameter applies to your device pool. If you set
--   this parameter to <tt>true</tt>, the <tt>maxDevices</tt> parameter
--   does not apply, and Device Farm does not limit the number of devices
--   that it adds to your device pool. In this case, Device Farm adds all
--   available devices that meet the criteria specified in the
--   <tt>rules</tt> parameter.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>maxDevices</tt> parameter in the same request.
--   
--   <a>$sel:rules:UpdateDevicePool'</a>, <a>updateDevicePool_rules</a> -
--   Represents the rules to modify for the device pool. Updating rules is
--   optional. If you update rules for your request, the update replaces
--   the existing rules.
--   
--   <a>$sel:maxDevices:UpdateDevicePool'</a>,
--   <a>updateDevicePool_maxDevices</a> - The number of devices that Device
--   Farm can add to your device pool. Device Farm adds devices that are
--   available and that meet the criteria that you assign for the
--   <tt>rules</tt> parameter. Depending on how many devices meet these
--   constraints, your device pool might contain fewer devices than the
--   value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>clearMaxDevices</tt> parameter in the same request.
--   
--   <a>$sel:name:UpdateDevicePool'</a>, <a>updateDevicePool_name</a> - A
--   string that represents the name of the device pool to update.
--   
--   <a>$sel:description:UpdateDevicePool'</a>,
--   <a>updateDevicePool_description</a> - A description of the device pool
--   to update.
--   
--   <a>$sel:arn:UpdateDevicePool'</a>, <a>updateDevicePool_arn</a> - The
--   Amazon Resource Name (ARN) of the Device Farm device pool to update.
newUpdateDevicePool :: Text -> UpdateDevicePool

-- | Sets whether the <tt>maxDevices</tt> parameter applies to your device
--   pool. If you set this parameter to <tt>true</tt>, the
--   <tt>maxDevices</tt> parameter does not apply, and Device Farm does not
--   limit the number of devices that it adds to your device pool. In this
--   case, Device Farm adds all available devices that meet the criteria
--   specified in the <tt>rules</tt> parameter.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>maxDevices</tt> parameter in the same request.
updateDevicePool_clearMaxDevices :: Lens' UpdateDevicePool (Maybe Bool)

-- | Represents the rules to modify for the device pool. Updating rules is
--   optional. If you update rules for your request, the update replaces
--   the existing rules.
updateDevicePool_rules :: Lens' UpdateDevicePool (Maybe [Rule])

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and that meet the criteria
--   that you assign for the <tt>rules</tt> parameter. Depending on how
--   many devices meet these constraints, your device pool might contain
--   fewer devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>clearMaxDevices</tt> parameter in the same request.
updateDevicePool_maxDevices :: Lens' UpdateDevicePool (Maybe Int)

-- | A string that represents the name of the device pool to update.
updateDevicePool_name :: Lens' UpdateDevicePool (Maybe Text)

-- | A description of the device pool to update.
updateDevicePool_description :: Lens' UpdateDevicePool (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Device Farm device pool to
--   update.
updateDevicePool_arn :: Lens' UpdateDevicePool Text

-- | Represents the result of an update device pool request.
--   
--   <i>See:</i> <a>newUpdateDevicePoolResponse</a> smart constructor.
data UpdateDevicePoolResponse
UpdateDevicePoolResponse' :: Maybe DevicePool -> Int -> UpdateDevicePoolResponse

-- | The device pool you just updated.
[$sel:devicePool:UpdateDevicePoolResponse'] :: UpdateDevicePoolResponse -> Maybe DevicePool

-- | The response's http status code.
[$sel:httpStatus:UpdateDevicePoolResponse'] :: UpdateDevicePoolResponse -> Int

-- | Create a value of <a>UpdateDevicePoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devicePool:UpdateDevicePoolResponse'</a>,
--   <a>updateDevicePoolResponse_devicePool</a> - The device pool you just
--   updated.
--   
--   <a>$sel:httpStatus:UpdateDevicePoolResponse'</a>,
--   <a>updateDevicePoolResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDevicePoolResponse :: Int -> UpdateDevicePoolResponse

-- | The device pool you just updated.
updateDevicePoolResponse_devicePool :: Lens' UpdateDevicePoolResponse (Maybe DevicePool)

-- | The response's http status code.
updateDevicePoolResponse_httpStatus :: Lens' UpdateDevicePoolResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePoolResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePoolResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePoolResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UpdateDevicePool.UpdateDevicePool


-- | Updates information about an existing private device instance profile.
module Network.AWS.DeviceFarm.UpdateInstanceProfile

-- | <i>See:</i> <a>newUpdateInstanceProfile</a> smart constructor.
data UpdateInstanceProfile
UpdateInstanceProfile' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Text -> UpdateInstanceProfile

-- | An array of strings that specifies the list of app packages that
--   should not be cleaned up from the device after a test run is over.
--   
--   The list of packages is only considered if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
[$sel:excludeAppPackagesFromCleanup:UpdateInstanceProfile'] :: UpdateInstanceProfile -> Maybe [Text]

-- | The updated name for your instance profile.
[$sel:name:UpdateInstanceProfile'] :: UpdateInstanceProfile -> Maybe Text

-- | The updated description for your instance profile.
[$sel:description:UpdateInstanceProfile'] :: UpdateInstanceProfile -> Maybe Text

-- | The updated choice for whether you want to reboot the device after
--   use. The default value is <tt>true</tt>.
[$sel:rebootAfterUse:UpdateInstanceProfile'] :: UpdateInstanceProfile -> Maybe Bool

-- | The updated choice for whether you want to specify package cleanup.
--   The default value is <tt>false</tt> for private devices.
[$sel:packageCleanup:UpdateInstanceProfile'] :: UpdateInstanceProfile -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the instance profile.
[$sel:arn:UpdateInstanceProfile'] :: UpdateInstanceProfile -> Text

-- | Create a value of <a>UpdateInstanceProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeAppPackagesFromCleanup:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_excludeAppPackagesFromCleanup</a> - An array
--   of strings that specifies the list of app packages that should not be
--   cleaned up from the device after a test run is over.
--   
--   The list of packages is only considered if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
--   
--   <a>$sel:name:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_name</a> - The updated name for your instance
--   profile.
--   
--   <a>$sel:description:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_description</a> - The updated description for
--   your instance profile.
--   
--   <a>$sel:rebootAfterUse:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_rebootAfterUse</a> - The updated choice for
--   whether you want to reboot the device after use. The default value is
--   <tt>true</tt>.
--   
--   <a>$sel:packageCleanup:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_packageCleanup</a> - The updated choice for
--   whether you want to specify package cleanup. The default value is
--   <tt>false</tt> for private devices.
--   
--   <a>$sel:arn:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_arn</a> - The Amazon Resource Name (ARN) of
--   the instance profile.
newUpdateInstanceProfile :: Text -> UpdateInstanceProfile

-- | An array of strings that specifies the list of app packages that
--   should not be cleaned up from the device after a test run is over.
--   
--   The list of packages is only considered if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
updateInstanceProfile_excludeAppPackagesFromCleanup :: Lens' UpdateInstanceProfile (Maybe [Text])

-- | The updated name for your instance profile.
updateInstanceProfile_name :: Lens' UpdateInstanceProfile (Maybe Text)

-- | The updated description for your instance profile.
updateInstanceProfile_description :: Lens' UpdateInstanceProfile (Maybe Text)

-- | The updated choice for whether you want to reboot the device after
--   use. The default value is <tt>true</tt>.
updateInstanceProfile_rebootAfterUse :: Lens' UpdateInstanceProfile (Maybe Bool)

-- | The updated choice for whether you want to specify package cleanup.
--   The default value is <tt>false</tt> for private devices.
updateInstanceProfile_packageCleanup :: Lens' UpdateInstanceProfile (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the instance profile.
updateInstanceProfile_arn :: Lens' UpdateInstanceProfile Text

-- | <i>See:</i> <a>newUpdateInstanceProfileResponse</a> smart constructor.
data UpdateInstanceProfileResponse
UpdateInstanceProfileResponse' :: Maybe InstanceProfile -> Int -> UpdateInstanceProfileResponse

-- | An object that contains information about your instance profile.
[$sel:instanceProfile:UpdateInstanceProfileResponse'] :: UpdateInstanceProfileResponse -> Maybe InstanceProfile

-- | The response's http status code.
[$sel:httpStatus:UpdateInstanceProfileResponse'] :: UpdateInstanceProfileResponse -> Int

-- | Create a value of <a>UpdateInstanceProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceProfile:UpdateInstanceProfileResponse'</a>,
--   <a>updateInstanceProfileResponse_instanceProfile</a> - An object that
--   contains information about your instance profile.
--   
--   <a>$sel:httpStatus:UpdateInstanceProfileResponse'</a>,
--   <a>updateInstanceProfileResponse_httpStatus</a> - The response's http
--   status code.
newUpdateInstanceProfileResponse :: Int -> UpdateInstanceProfileResponse

-- | An object that contains information about your instance profile.
updateInstanceProfileResponse_instanceProfile :: Lens' UpdateInstanceProfileResponse (Maybe InstanceProfile)

-- | The response's http status code.
updateInstanceProfileResponse_httpStatus :: Lens' UpdateInstanceProfileResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfileResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfileResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfileResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UpdateInstanceProfile.UpdateInstanceProfile


-- | Updates the network profile.
module Network.AWS.DeviceFarm.UpdateNetworkProfile

-- | <i>See:</i> <a>newUpdateNetworkProfile</a> smart constructor.
data UpdateNetworkProfile
UpdateNetworkProfile' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe NetworkProfileType -> Text -> UpdateNetworkProfile

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
[$sel:uplinkJitterMs:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Integer

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
[$sel:downlinkBandwidthBits:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Integer

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
[$sel:downlinkDelayMs:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Integer

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
[$sel:downlinkJitterMs:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Integer

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
[$sel:uplinkLossPercent:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Natural

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
[$sel:downlinkLossPercent:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Natural

-- | The name of the network profile about which you are returning
--   information.
[$sel:name:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Text

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
[$sel:uplinkBandwidthBits:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Integer

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
[$sel:uplinkDelayMs:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Integer

-- | The description of the network profile about which you are returning
--   information.
[$sel:description:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe Text

-- | The type of network profile to return information about. Valid values
--   are listed here.
[$sel:type':UpdateNetworkProfile'] :: UpdateNetworkProfile -> Maybe NetworkProfileType

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   update network profile settings.
[$sel:arn:UpdateNetworkProfile'] :: UpdateNetworkProfile -> Text

-- | Create a value of <a>UpdateNetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uplinkJitterMs:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_uplinkJitterMs</a> - Time variation in the
--   delay of received packets in milliseconds as an integer from 0 to
--   2000.
--   
--   <a>$sel:downlinkBandwidthBits:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_downlinkBandwidthBits</a> - The data
--   throughput rate in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:downlinkDelayMs:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_downlinkDelayMs</a> - Delay time for all
--   packets to destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkJitterMs:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_downlinkJitterMs</a> - Time variation in the
--   delay of received packets in milliseconds as an integer from 0 to
--   2000.
--   
--   <a>$sel:uplinkLossPercent:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_uplinkLossPercent</a> - Proportion of
--   transmitted packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:downlinkLossPercent:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_downlinkLossPercent</a> - Proportion of
--   received packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:name:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_name</a> - The name of the network profile
--   about which you are returning information.
--   
--   <a>$sel:uplinkBandwidthBits:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_uplinkBandwidthBits</a> - The data throughput
--   rate in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:uplinkDelayMs:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_uplinkDelayMs</a> - Delay time for all packets
--   to destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:description:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_description</a> - The description of the
--   network profile about which you are returning information.
--   
--   <a>$sel:type':UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_type</a> - The type of network profile to
--   return information about. Valid values are listed here.
--   
--   <a>$sel:arn:UpdateNetworkProfile'</a>, <a>updateNetworkProfile_arn</a>
--   - The Amazon Resource Name (ARN) of the project for which you want to
--   update network profile settings.
newUpdateNetworkProfile :: Text -> UpdateNetworkProfile

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
updateNetworkProfile_uplinkJitterMs :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
updateNetworkProfile_downlinkBandwidthBits :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
updateNetworkProfile_downlinkDelayMs :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
updateNetworkProfile_downlinkJitterMs :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
updateNetworkProfile_uplinkLossPercent :: Lens' UpdateNetworkProfile (Maybe Natural)

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
updateNetworkProfile_downlinkLossPercent :: Lens' UpdateNetworkProfile (Maybe Natural)

-- | The name of the network profile about which you are returning
--   information.
updateNetworkProfile_name :: Lens' UpdateNetworkProfile (Maybe Text)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
updateNetworkProfile_uplinkBandwidthBits :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
updateNetworkProfile_uplinkDelayMs :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | The description of the network profile about which you are returning
--   information.
updateNetworkProfile_description :: Lens' UpdateNetworkProfile (Maybe Text)

-- | The type of network profile to return information about. Valid values
--   are listed here.
updateNetworkProfile_type :: Lens' UpdateNetworkProfile (Maybe NetworkProfileType)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   update network profile settings.
updateNetworkProfile_arn :: Lens' UpdateNetworkProfile Text

-- | <i>See:</i> <a>newUpdateNetworkProfileResponse</a> smart constructor.
data UpdateNetworkProfileResponse
UpdateNetworkProfileResponse' :: Maybe NetworkProfile -> Int -> UpdateNetworkProfileResponse

-- | A list of the available network profiles.
[$sel:networkProfile:UpdateNetworkProfileResponse'] :: UpdateNetworkProfileResponse -> Maybe NetworkProfile

-- | The response's http status code.
[$sel:httpStatus:UpdateNetworkProfileResponse'] :: UpdateNetworkProfileResponse -> Int

-- | Create a value of <a>UpdateNetworkProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkProfile:UpdateNetworkProfileResponse'</a>,
--   <a>updateNetworkProfileResponse_networkProfile</a> - A list of the
--   available network profiles.
--   
--   <a>$sel:httpStatus:UpdateNetworkProfileResponse'</a>,
--   <a>updateNetworkProfileResponse_httpStatus</a> - The response's http
--   status code.
newUpdateNetworkProfileResponse :: Int -> UpdateNetworkProfileResponse

-- | A list of the available network profiles.
updateNetworkProfileResponse_networkProfile :: Lens' UpdateNetworkProfileResponse (Maybe NetworkProfile)

-- | The response's http status code.
updateNetworkProfileResponse_httpStatus :: Lens' UpdateNetworkProfileResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfileResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfileResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfileResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UpdateNetworkProfile.UpdateNetworkProfile


-- | Modifies the specified project name, given the project ARN and a new
--   name.
module Network.AWS.DeviceFarm.UpdateProject

-- | Represents a request to the update project operation.
--   
--   <i>See:</i> <a>newUpdateProject</a> smart constructor.
data UpdateProject
UpdateProject' :: Maybe Text -> Maybe Int -> Text -> UpdateProject

-- | A string that represents the new name of the project that you are
--   updating.
[$sel:name:UpdateProject'] :: UpdateProject -> Maybe Text

-- | The number of minutes a test run in the project executes before it
--   times out.
[$sel:defaultJobTimeoutMinutes:UpdateProject'] :: UpdateProject -> Maybe Int

-- | The Amazon Resource Name (ARN) of the project whose name to update.
[$sel:arn:UpdateProject'] :: UpdateProject -> Text

-- | Create a value of <a>UpdateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateProject'</a>, <a>updateProject_name</a> - A string
--   that represents the new name of the project that you are updating.
--   
--   <a>$sel:defaultJobTimeoutMinutes:UpdateProject'</a>,
--   <a>updateProject_defaultJobTimeoutMinutes</a> - The number of minutes
--   a test run in the project executes before it times out.
--   
--   <a>$sel:arn:UpdateProject'</a>, <a>updateProject_arn</a> - The Amazon
--   Resource Name (ARN) of the project whose name to update.
newUpdateProject :: Text -> UpdateProject

-- | A string that represents the new name of the project that you are
--   updating.
updateProject_name :: Lens' UpdateProject (Maybe Text)

-- | The number of minutes a test run in the project executes before it
--   times out.
updateProject_defaultJobTimeoutMinutes :: Lens' UpdateProject (Maybe Int)

-- | The Amazon Resource Name (ARN) of the project whose name to update.
updateProject_arn :: Lens' UpdateProject Text

-- | Represents the result of an update project request.
--   
--   <i>See:</i> <a>newUpdateProjectResponse</a> smart constructor.
data UpdateProjectResponse
UpdateProjectResponse' :: Maybe Project -> Int -> UpdateProjectResponse

-- | The project to update.
[$sel:project:UpdateProjectResponse'] :: UpdateProjectResponse -> Maybe Project

-- | The response's http status code.
[$sel:httpStatus:UpdateProjectResponse'] :: UpdateProjectResponse -> Int

-- | Create a value of <a>UpdateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_project</a> - The project to update.
--   
--   <a>$sel:httpStatus:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_httpStatus</a> - The response's http status
--   code.
newUpdateProjectResponse :: Int -> UpdateProjectResponse

-- | The project to update.
updateProjectResponse_project :: Lens' UpdateProjectResponse (Maybe Project)

-- | The response's http status code.
updateProjectResponse_httpStatus :: Lens' UpdateProjectResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateProject.UpdateProjectResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateProject.UpdateProjectResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateProject.UpdateProjectResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateProject.UpdateProjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateProject.UpdateProjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UpdateProject.UpdateProject
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UpdateProject.UpdateProject


-- | Change details of a project.
module Network.AWS.DeviceFarm.UpdateTestGridProject

-- | <i>See:</i> <a>newUpdateTestGridProject</a> smart constructor.
data UpdateTestGridProject
UpdateTestGridProject' :: Maybe TestGridVpcConfig -> Maybe Text -> Maybe Text -> Text -> UpdateTestGridProject

-- | The VPC security groups and subnets that are attached to a project.
[$sel:vpcConfig:UpdateTestGridProject'] :: UpdateTestGridProject -> Maybe TestGridVpcConfig

-- | Human-readable name for the project.
[$sel:name:UpdateTestGridProject'] :: UpdateTestGridProject -> Maybe Text

-- | Human-readable description for the project.
[$sel:description:UpdateTestGridProject'] :: UpdateTestGridProject -> Maybe Text

-- | ARN of the project to update.
[$sel:projectArn:UpdateTestGridProject'] :: UpdateTestGridProject -> Text

-- | Create a value of <a>UpdateTestGridProject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:UpdateTestGridProject'</a>,
--   <a>updateTestGridProject_vpcConfig</a> - The VPC security groups and
--   subnets that are attached to a project.
--   
--   <a>$sel:name:UpdateTestGridProject'</a>,
--   <a>updateTestGridProject_name</a> - Human-readable name for the
--   project.
--   
--   <a>$sel:description:UpdateTestGridProject'</a>,
--   <a>updateTestGridProject_description</a> - Human-readable description
--   for the project.
--   
--   <a>$sel:projectArn:UpdateTestGridProject'</a>,
--   <a>updateTestGridProject_projectArn</a> - ARN of the project to
--   update.
newUpdateTestGridProject :: Text -> UpdateTestGridProject

-- | The VPC security groups and subnets that are attached to a project.
updateTestGridProject_vpcConfig :: Lens' UpdateTestGridProject (Maybe TestGridVpcConfig)

-- | Human-readable name for the project.
updateTestGridProject_name :: Lens' UpdateTestGridProject (Maybe Text)

-- | Human-readable description for the project.
updateTestGridProject_description :: Lens' UpdateTestGridProject (Maybe Text)

-- | ARN of the project to update.
updateTestGridProject_projectArn :: Lens' UpdateTestGridProject Text

-- | <i>See:</i> <a>newUpdateTestGridProjectResponse</a> smart constructor.
data UpdateTestGridProjectResponse
UpdateTestGridProjectResponse' :: Maybe TestGridProject -> Int -> UpdateTestGridProjectResponse

-- | The project, including updated information.
[$sel:testGridProject:UpdateTestGridProjectResponse'] :: UpdateTestGridProjectResponse -> Maybe TestGridProject

-- | The response's http status code.
[$sel:httpStatus:UpdateTestGridProjectResponse'] :: UpdateTestGridProjectResponse -> Int

-- | Create a value of <a>UpdateTestGridProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testGridProject:UpdateTestGridProjectResponse'</a>,
--   <a>updateTestGridProjectResponse_testGridProject</a> - The project,
--   including updated information.
--   
--   <a>$sel:httpStatus:UpdateTestGridProjectResponse'</a>,
--   <a>updateTestGridProjectResponse_httpStatus</a> - The response's http
--   status code.
newUpdateTestGridProjectResponse :: Int -> UpdateTestGridProjectResponse

-- | The project, including updated information.
updateTestGridProjectResponse_testGridProject :: Lens' UpdateTestGridProjectResponse (Maybe TestGridProject)

-- | The response's http status code.
updateTestGridProjectResponse_httpStatus :: Lens' UpdateTestGridProjectResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProjectResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProjectResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProjectResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProjectResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProjectResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UpdateTestGridProject.UpdateTestGridProject


-- | Updates an uploaded test spec.
module Network.AWS.DeviceFarm.UpdateUpload

-- | <i>See:</i> <a>newUpdateUpload</a> smart constructor.
data UpdateUpload
UpdateUpload' :: Maybe Text -> Maybe Bool -> Maybe Text -> Text -> UpdateUpload

-- | The upload's content type (for example, <tt>application/x-yaml</tt>).
[$sel:contentType:UpdateUpload'] :: UpdateUpload -> Maybe Text

-- | Set to true if the YAML file has changed and must be updated.
--   Otherwise, set to false.
[$sel:editContent:UpdateUpload'] :: UpdateUpload -> Maybe Bool

-- | The upload's test spec file name. The name must not contain any
--   forward slashes (/). The test spec file name must end with the
--   <tt>.yaml</tt> or <tt>.yml</tt> file extension.
[$sel:name:UpdateUpload'] :: UpdateUpload -> Maybe Text

-- | The Amazon Resource Name (ARN) of the uploaded test spec.
[$sel:arn:UpdateUpload'] :: UpdateUpload -> Text

-- | Create a value of <a>UpdateUpload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:UpdateUpload'</a>, <a>updateUpload_contentType</a>
--   - The upload's content type (for example,
--   <tt>application/x-yaml</tt>).
--   
--   <a>$sel:editContent:UpdateUpload'</a>, <a>updateUpload_editContent</a>
--   - Set to true if the YAML file has changed and must be updated.
--   Otherwise, set to false.
--   
--   <a>$sel:name:UpdateUpload'</a>, <a>updateUpload_name</a> - The
--   upload's test spec file name. The name must not contain any forward
--   slashes (/). The test spec file name must end with the <tt>.yaml</tt>
--   or <tt>.yml</tt> file extension.
--   
--   <a>$sel:arn:UpdateUpload'</a>, <a>updateUpload_arn</a> - The Amazon
--   Resource Name (ARN) of the uploaded test spec.
newUpdateUpload :: Text -> UpdateUpload

-- | The upload's content type (for example, <tt>application/x-yaml</tt>).
updateUpload_contentType :: Lens' UpdateUpload (Maybe Text)

-- | Set to true if the YAML file has changed and must be updated.
--   Otherwise, set to false.
updateUpload_editContent :: Lens' UpdateUpload (Maybe Bool)

-- | The upload's test spec file name. The name must not contain any
--   forward slashes (/). The test spec file name must end with the
--   <tt>.yaml</tt> or <tt>.yml</tt> file extension.
updateUpload_name :: Lens' UpdateUpload (Maybe Text)

-- | The Amazon Resource Name (ARN) of the uploaded test spec.
updateUpload_arn :: Lens' UpdateUpload Text

-- | <i>See:</i> <a>newUpdateUploadResponse</a> smart constructor.
data UpdateUploadResponse
UpdateUploadResponse' :: Maybe Upload -> Int -> UpdateUploadResponse

-- | A test spec uploaded to Device Farm.
[$sel:upload:UpdateUploadResponse'] :: UpdateUploadResponse -> Maybe Upload

-- | The response's http status code.
[$sel:httpStatus:UpdateUploadResponse'] :: UpdateUploadResponse -> Int

-- | Create a value of <a>UpdateUploadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upload:UpdateUploadResponse'</a>,
--   <a>updateUploadResponse_upload</a> - A test spec uploaded to Device
--   Farm.
--   
--   <a>$sel:httpStatus:UpdateUploadResponse'</a>,
--   <a>updateUploadResponse_httpStatus</a> - The response's http status
--   code.
newUpdateUploadResponse :: Int -> UpdateUploadResponse

-- | A test spec uploaded to Device Farm.
updateUploadResponse_upload :: Lens' UpdateUploadResponse (Maybe Upload)

-- | The response's http status code.
updateUploadResponse_httpStatus :: Lens' UpdateUploadResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateUpload.UpdateUploadResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateUpload.UpdateUploadResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateUpload.UpdateUploadResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateUpload.UpdateUploadResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UpdateUpload.UpdateUpload


-- | Updates information about an Amazon Virtual Private Cloud (VPC)
--   endpoint configuration.
module Network.AWS.DeviceFarm.UpdateVPCEConfiguration

-- | <i>See:</i> <a>newUpdateVPCEConfiguration</a> smart constructor.
data UpdateVPCEConfiguration
UpdateVPCEConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateVPCEConfiguration

-- | The friendly name you give to your VPC endpoint configuration to
--   manage your configurations more easily.
[$sel:vpceConfigurationName:UpdateVPCEConfiguration'] :: UpdateVPCEConfiguration -> Maybe Text

-- | An optional description that provides details about your VPC endpoint
--   configuration.
[$sel:vpceConfigurationDescription:UpdateVPCEConfiguration'] :: UpdateVPCEConfiguration -> Maybe Text

-- | The DNS (domain) name used to connect to your private service in your
--   VPC. The DNS name must not already be in use on the internet.
[$sel:serviceDnsName:UpdateVPCEConfiguration'] :: UpdateVPCEConfiguration -> Maybe Text

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
[$sel:vpceServiceName:UpdateVPCEConfiguration'] :: UpdateVPCEConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to update.
[$sel:arn:UpdateVPCEConfiguration'] :: UpdateVPCEConfiguration -> Text

-- | Create a value of <a>UpdateVPCEConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfigurationName:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_vpceConfigurationName</a> - The friendly
--   name you give to your VPC endpoint configuration to manage your
--   configurations more easily.
--   
--   <a>$sel:vpceConfigurationDescription:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_vpceConfigurationDescription</a> - An
--   optional description that provides details about your VPC endpoint
--   configuration.
--   
--   <a>$sel:serviceDnsName:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_serviceDnsName</a> - The DNS (domain) name
--   used to connect to your private service in your VPC. The DNS name must
--   not already be in use on the internet.
--   
--   <a>$sel:vpceServiceName:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_vpceServiceName</a> - The name of the VPC
--   endpoint service running in your AWS account that you want Device Farm
--   to test.
--   
--   <a>$sel:arn:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_arn</a> - The Amazon Resource Name (ARN) of
--   the VPC endpoint configuration you want to update.
newUpdateVPCEConfiguration :: Text -> UpdateVPCEConfiguration

-- | The friendly name you give to your VPC endpoint configuration to
--   manage your configurations more easily.
updateVPCEConfiguration_vpceConfigurationName :: Lens' UpdateVPCEConfiguration (Maybe Text)

-- | An optional description that provides details about your VPC endpoint
--   configuration.
updateVPCEConfiguration_vpceConfigurationDescription :: Lens' UpdateVPCEConfiguration (Maybe Text)

-- | The DNS (domain) name used to connect to your private service in your
--   VPC. The DNS name must not already be in use on the internet.
updateVPCEConfiguration_serviceDnsName :: Lens' UpdateVPCEConfiguration (Maybe Text)

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
updateVPCEConfiguration_vpceServiceName :: Lens' UpdateVPCEConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to update.
updateVPCEConfiguration_arn :: Lens' UpdateVPCEConfiguration Text

-- | <i>See:</i> <a>newUpdateVPCEConfigurationResponse</a> smart
--   constructor.
data UpdateVPCEConfigurationResponse
UpdateVPCEConfigurationResponse' :: Maybe VPCEConfiguration -> Int -> UpdateVPCEConfigurationResponse

-- | An object that contains information about your VPC endpoint
--   configuration.
[$sel:vpceConfiguration:UpdateVPCEConfigurationResponse'] :: UpdateVPCEConfigurationResponse -> Maybe VPCEConfiguration

-- | The response's http status code.
[$sel:httpStatus:UpdateVPCEConfigurationResponse'] :: UpdateVPCEConfigurationResponse -> Int

-- | Create a value of <a>UpdateVPCEConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfiguration:UpdateVPCEConfigurationResponse'</a>,
--   <a>updateVPCEConfigurationResponse_vpceConfiguration</a> - An object
--   that contains information about your VPC endpoint configuration.
--   
--   <a>$sel:httpStatus:UpdateVPCEConfigurationResponse'</a>,
--   <a>updateVPCEConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newUpdateVPCEConfigurationResponse :: Int -> UpdateVPCEConfigurationResponse

-- | An object that contains information about your VPC endpoint
--   configuration.
updateVPCEConfigurationResponse_vpceConfiguration :: Lens' UpdateVPCEConfigurationResponse (Maybe VPCEConfiguration)

-- | The response's http status code.
updateVPCEConfigurationResponse_httpStatus :: Lens' UpdateVPCEConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance GHC.Generics.Generic Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfigurationResponse
instance GHC.Show.Show Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfigurationResponse
instance GHC.Read.Read Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfigurationResponse
instance GHC.Classes.Eq Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance Control.DeepSeq.NFData Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.DeviceFarm.UpdateVPCEConfiguration.UpdateVPCEConfiguration


module Network.AWS.DeviceFarm.Lens

-- | The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
createUpload_contentType :: Lens' CreateUpload (Maybe Text)

-- | The ARN of the project for the upload.
createUpload_projectArn :: Lens' CreateUpload Text

-- | The upload's file name. The name should not contain any forward
--   slashes (<tt>/</tt>). If you are uploading an iOS app, the file name
--   must end with the <tt>.ipa</tt> extension. If you are uploading an
--   Android app, the file name must end with the <tt>.apk</tt> extension.
--   For all others, the file name must end with the <tt>.zip</tt> file
--   extension.
createUpload_name :: Lens' CreateUpload Text

-- | The upload's upload type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   If you call <tt>CreateUpload</tt> with <tt>WEB_APP</tt> specified, AWS
--   Device Farm throws an <tt>ArgumentException</tt> error.
createUpload_type :: Lens' CreateUpload UploadType

-- | The newly created upload.
createUploadResponse_upload :: Lens' CreateUploadResponse (Maybe Upload)

-- | The response's http status code.
createUploadResponse_httpStatus :: Lens' CreateUploadResponse Int

-- | The VPC security groups and subnets that are attached to a project.
createTestGridProject_vpcConfig :: Lens' CreateTestGridProject (Maybe TestGridVpcConfig)

-- | Human-readable description of the project.
createTestGridProject_description :: Lens' CreateTestGridProject (Maybe Text)

-- | Human-readable name of the Selenium testing project.
createTestGridProject_name :: Lens' CreateTestGridProject Text

-- | ARN of the Selenium testing project that was created.
createTestGridProjectResponse_testGridProject :: Lens' CreateTestGridProjectResponse (Maybe TestGridProject)

-- | The response's http status code.
createTestGridProjectResponse_httpStatus :: Lens' CreateTestGridProjectResponse Int

-- | Pagination token.
listTestGridSessionArtifacts_nextToken :: Lens' ListTestGridSessionArtifacts (Maybe Text)

-- | The maximum number of results to be returned by a request.
listTestGridSessionArtifacts_maxResult :: Lens' ListTestGridSessionArtifacts (Maybe Natural)

-- | Limit results to a specified type of artifact.
listTestGridSessionArtifacts_type :: Lens' ListTestGridSessionArtifacts (Maybe TestGridSessionArtifactCategory)

-- | The ARN of a TestGridSession.
listTestGridSessionArtifacts_sessionArn :: Lens' ListTestGridSessionArtifacts Text

-- | Pagination token.
listTestGridSessionArtifactsResponse_nextToken :: Lens' ListTestGridSessionArtifactsResponse (Maybe Text)

-- | A list of test grid session artifacts for a TestGridSession.
listTestGridSessionArtifactsResponse_artifacts :: Lens' ListTestGridSessionArtifactsResponse (Maybe [TestGridSessionArtifact])

-- | The response's http status code.
listTestGridSessionArtifactsResponse_httpStatus :: Lens' ListTestGridSessionArtifactsResponse Int

-- | Pagination token.
listTestGridSessionActions_nextToken :: Lens' ListTestGridSessionActions (Maybe Text)

-- | The maximum number of sessions to return per response.
listTestGridSessionActions_maxResult :: Lens' ListTestGridSessionActions (Maybe Natural)

-- | The ARN of the session to retrieve.
listTestGridSessionActions_sessionArn :: Lens' ListTestGridSessionActions Text

-- | Pagination token.
listTestGridSessionActionsResponse_nextToken :: Lens' ListTestGridSessionActionsResponse (Maybe Text)

-- | The action taken by the session.
listTestGridSessionActionsResponse_actions :: Lens' ListTestGridSessionActionsResponse (Maybe [TestGridSessionAction])

-- | The response's http status code.
listTestGridSessionActionsResponse_httpStatus :: Lens' ListTestGridSessionActionsResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listSamples_nextToken :: Lens' ListSamples (Maybe Text)

-- | The Amazon Resource Name (ARN) of the job used to list samples.
listSamples_arn :: Lens' ListSamples Text

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listSamplesResponse_nextToken :: Lens' ListSamplesResponse (Maybe Text)

-- | Information about the samples.
listSamplesResponse_samples :: Lens' ListSamplesResponse (Maybe [Sample])

-- | The response's http status code.
listSamplesResponse_httpStatus :: Lens' ListSamplesResponse Int

-- | The ARN of the device pool for the run to be scheduled.
scheduleRun_devicePoolArn :: Lens' ScheduleRun (Maybe Text)

-- | Information about the settings for the run to be scheduled.
scheduleRun_configuration :: Lens' ScheduleRun (Maybe ScheduleRunConfiguration)

-- | The filter criteria used to dynamically select a set of devices for a
--   test run and the maximum number of devices to be included in the run.
--   
--   Either <b><tt>devicePoolArn</tt></b> or
--   <b><tt>deviceSelectionConfiguration</tt></b> is required in a request.
scheduleRun_deviceSelectionConfiguration :: Lens' ScheduleRun (Maybe DeviceSelectionConfiguration)

-- | Specifies configuration information about a test run, such as the
--   execution timeout (in minutes).
scheduleRun_executionConfiguration :: Lens' ScheduleRun (Maybe ExecutionConfiguration)

-- | The name for the run to be scheduled.
scheduleRun_name :: Lens' ScheduleRun (Maybe Text)

-- | The ARN of an application package to run tests against, created with
--   CreateUpload. See ListUploads.
scheduleRun_appArn :: Lens' ScheduleRun (Maybe Text)

-- | The ARN of the project for the run to be scheduled.
scheduleRun_projectArn :: Lens' ScheduleRun Text

-- | Information about the test for the run to be scheduled.
scheduleRun_test :: Lens' ScheduleRun ScheduleRunTest

-- | Information about the scheduled run.
scheduleRunResponse_run :: Lens' ScheduleRunResponse (Maybe Run)

-- | The response's http status code.
scheduleRunResponse_httpStatus :: Lens' ScheduleRunResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listProjects_nextToken :: Lens' ListProjects (Maybe Text)

-- | Optional. If no Amazon Resource Name (ARN) is specified, then AWS
--   Device Farm returns a list of all projects for the AWS account. You
--   can also specify a project ARN.
listProjects_arn :: Lens' ListProjects (Maybe Text)

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listProjectsResponse_nextToken :: Lens' ListProjectsResponse (Maybe Text)

-- | Information about the projects.
listProjectsResponse_projects :: Lens' ListProjectsResponse (Maybe [Project])

-- | The response's http status code.
listProjectsResponse_httpStatus :: Lens' ListProjectsResponse Int

-- | The test type for the specified device pool.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ.</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT.</li>
--   <li>APPIUM_JAVA_TESTNG.</li>
--   <li>APPIUM_PYTHON.</li>
--   <li>APPIUM_NODE.</li>
--   <li>APPIUM_RUBY.</li>
--   <li>APPIUM_WEB_JAVA_JUNIT.</li>
--   <li>APPIUM_WEB_JAVA_TESTNG.</li>
--   <li>APPIUM_WEB_PYTHON.</li>
--   <li>APPIUM_WEB_NODE.</li>
--   <li>APPIUM_WEB_RUBY.</li>
--   <li>CALABASH.</li>
--   <li>INSTRUMENTATION.</li>
--   <li>UIAUTOMATION.</li>
--   <li>UIAUTOMATOR.</li>
--   <li>XCTEST.</li>
--   <li>XCTEST_UI.</li>
--   </ul>
getDevicePoolCompatibility_testType :: Lens' GetDevicePoolCompatibility (Maybe TestType)

-- | An object that contains information about the settings for a run.
getDevicePoolCompatibility_configuration :: Lens' GetDevicePoolCompatibility (Maybe ScheduleRunConfiguration)

-- | The ARN of the app that is associated with the specified device pool.
getDevicePoolCompatibility_appArn :: Lens' GetDevicePoolCompatibility (Maybe Text)

-- | Information about the uploaded test to be run against the device pool.
getDevicePoolCompatibility_test :: Lens' GetDevicePoolCompatibility (Maybe ScheduleRunTest)

-- | The device pool's ARN.
getDevicePoolCompatibility_devicePoolArn :: Lens' GetDevicePoolCompatibility Text

-- | Information about incompatible devices.
getDevicePoolCompatibilityResponse_incompatibleDevices :: Lens' GetDevicePoolCompatibilityResponse (Maybe [DevicePoolCompatibilityResult])

-- | Information about compatible devices.
getDevicePoolCompatibilityResponse_compatibleDevices :: Lens' GetDevicePoolCompatibilityResponse (Maybe [DevicePoolCompatibilityResult])

-- | The response's http status code.
getDevicePoolCompatibilityResponse_httpStatus :: Lens' GetDevicePoolCompatibilityResponse Int

-- | An optional description that provides details about your VPC endpoint
--   configuration.
createVPCEConfiguration_vpceConfigurationDescription :: Lens' CreateVPCEConfiguration (Maybe Text)

-- | The friendly name you give to your VPC endpoint configuration, to
--   manage your configurations more easily.
createVPCEConfiguration_vpceConfigurationName :: Lens' CreateVPCEConfiguration Text

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
createVPCEConfiguration_vpceServiceName :: Lens' CreateVPCEConfiguration Text

-- | The DNS name of the service running in your VPC that you want Device
--   Farm to test.
createVPCEConfiguration_serviceDnsName :: Lens' CreateVPCEConfiguration Text

-- | An object that contains information about your VPC endpoint
--   configuration.
createVPCEConfigurationResponse_vpceConfiguration :: Lens' CreateVPCEConfigurationResponse (Maybe VPCEConfiguration)

-- | The response's http status code.
createVPCEConfigurationResponse_httpStatus :: Lens' CreateVPCEConfigurationResponse Int

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
updateNetworkProfile_uplinkJitterMs :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
updateNetworkProfile_downlinkBandwidthBits :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
updateNetworkProfile_downlinkDelayMs :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
updateNetworkProfile_downlinkJitterMs :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
updateNetworkProfile_uplinkLossPercent :: Lens' UpdateNetworkProfile (Maybe Natural)

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
updateNetworkProfile_downlinkLossPercent :: Lens' UpdateNetworkProfile (Maybe Natural)

-- | The name of the network profile about which you are returning
--   information.
updateNetworkProfile_name :: Lens' UpdateNetworkProfile (Maybe Text)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
updateNetworkProfile_uplinkBandwidthBits :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
updateNetworkProfile_uplinkDelayMs :: Lens' UpdateNetworkProfile (Maybe Integer)

-- | The description of the network profile about which you are returning
--   information.
updateNetworkProfile_description :: Lens' UpdateNetworkProfile (Maybe Text)

-- | The type of network profile to return information about. Valid values
--   are listed here.
updateNetworkProfile_type :: Lens' UpdateNetworkProfile (Maybe NetworkProfileType)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   update network profile settings.
updateNetworkProfile_arn :: Lens' UpdateNetworkProfile Text

-- | A list of the available network profiles.
updateNetworkProfileResponse_networkProfile :: Lens' UpdateNetworkProfileResponse (Maybe NetworkProfile)

-- | The response's http status code.
updateNetworkProfileResponse_httpStatus :: Lens' UpdateNetworkProfileResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listNetworkProfiles_nextToken :: Lens' ListNetworkProfiles (Maybe Text)

-- | The type of network profile to return information about. Valid values
--   are listed here.
listNetworkProfiles_type :: Lens' ListNetworkProfiles (Maybe NetworkProfileType)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list network profiles.
listNetworkProfiles_arn :: Lens' ListNetworkProfiles Text

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listNetworkProfilesResponse_nextToken :: Lens' ListNetworkProfilesResponse (Maybe Text)

-- | A list of the available network profiles.
listNetworkProfilesResponse_networkProfiles :: Lens' ListNetworkProfilesResponse (Maybe [NetworkProfile])

-- | The response's http status code.
listNetworkProfilesResponse_httpStatus :: Lens' ListNetworkProfilesResponse Int

-- | The ARN of the network profile to delete.
deleteNetworkProfile_arn :: Lens' DeleteNetworkProfile Text

-- | The response's http status code.
deleteNetworkProfileResponse_httpStatus :: Lens' DeleteNetworkProfileResponse Int

-- | The Amazon Resource Name (ARN) of the remote access session about
--   which you are requesting information.
installToRemoteAccessSession_remoteAccessSessionArn :: Lens' InstallToRemoteAccessSession Text

-- | The ARN of the app about which you are requesting information.
installToRemoteAccessSession_appArn :: Lens' InstallToRemoteAccessSession Text

-- | An app to upload or that has been uploaded.
installToRemoteAccessSessionResponse_appUpload :: Lens' InstallToRemoteAccessSessionResponse (Maybe Upload)

-- | The response's http status code.
installToRemoteAccessSessionResponse_httpStatus :: Lens' InstallToRemoteAccessSessionResponse Int

-- | Represents the Amazon Resource Name (ARN) of the Device Farm run to
--   stop.
stopRun_arn :: Lens' StopRun Text

-- | The run that was stopped.
stopRunResponse_run :: Lens' StopRunResponse (Maybe Run)

-- | The response's http status code.
stopRunResponse_httpStatus :: Lens' StopRunResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferings_nextToken :: Lens' ListOfferings (Maybe Text)

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferingsResponse_nextToken :: Lens' ListOfferingsResponse (Maybe Text)

-- | A value that represents the list offering results.
listOfferingsResponse_offerings :: Lens' ListOfferingsResponse (Maybe [Offering])

-- | The response's http status code.
listOfferingsResponse_httpStatus :: Lens' ListOfferingsResponse Int

-- | Sets the execution timeout value (in minutes) for a project. All test
--   runs in this project use the specified execution timeout value unless
--   overridden when scheduling a run.
createProject_defaultJobTimeoutMinutes :: Lens' CreateProject (Maybe Int)

-- | The project's name.
createProject_name :: Lens' CreateProject Text

-- | The newly created project.
createProjectResponse_project :: Lens' CreateProjectResponse (Maybe Project)

-- | The response's http status code.
createProjectResponse_httpStatus :: Lens' CreateProjectResponse Int

-- | The job's ARN.
getJob_arn :: Lens' GetJob Text

-- | An object that contains information about the requested job.
getJobResponse_job :: Lens' GetJobResponse (Maybe Job)

-- | The response's http status code.
getJobResponse_httpStatus :: Lens' GetJobResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listDevices_nextToken :: Lens' ListDevices (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project.
listDevices_arn :: Lens' ListDevices (Maybe Text)

-- | Used to select a set of devices. A filter is made up of an attribute,
--   an operator, and one or more values.
--   
--   <ul>
--   <li>Attribute: The aspect of a device such as platform or model used
--   as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this attribute is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li>Operator: The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li>Values: An array of one or more filter values.<ul><li>The IN and
--   NOT_IN operators take a values array that has one or more
--   elements.</li><li>The other operators require an array with a single
--   element.</li><li>In a request, the AVAILABILITY attribute takes the
--   following values: AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li></ul></li>
--   </ul>
listDevices_filters :: Lens' ListDevices (Maybe [DeviceFilter])

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listDevicesResponse_nextToken :: Lens' ListDevicesResponse (Maybe Text)

-- | Information about the devices.
listDevicesResponse_devices :: Lens' ListDevicesResponse (Maybe [Device])

-- | The response's http status code.
listDevicesResponse_httpStatus :: Lens' ListDevicesResponse Int

-- | ARN (from CreateTestGridProject or ListTestGridProjects) to associate
--   with the short-term URL.
createTestGridUrl_projectArn :: Lens' CreateTestGridUrl Text

-- | Lifetime, in seconds, of the URL.
createTestGridUrl_expiresInSeconds :: Lens' CreateTestGridUrl Natural

-- | A signed URL, expiring in CreateTestGridUrlRequest$expiresInSeconds
--   seconds, to be passed to a <tt>RemoteWebDriver</tt>.
createTestGridUrlResponse_url :: Lens' CreateTestGridUrlResponse (Maybe Text)

-- | The number of seconds the URL from CreateTestGridUrlResult$url stays
--   active.
createTestGridUrlResponse_expires :: Lens' CreateTestGridUrlResponse (Maybe UTCTime)

-- | The response's http status code.
createTestGridUrlResponse_httpStatus :: Lens' CreateTestGridUrlResponse Int

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
createNetworkProfile_uplinkJitterMs :: Lens' CreateNetworkProfile (Maybe Integer)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
createNetworkProfile_downlinkBandwidthBits :: Lens' CreateNetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
createNetworkProfile_downlinkDelayMs :: Lens' CreateNetworkProfile (Maybe Integer)

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
createNetworkProfile_downlinkJitterMs :: Lens' CreateNetworkProfile (Maybe Integer)

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
createNetworkProfile_uplinkLossPercent :: Lens' CreateNetworkProfile (Maybe Natural)

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
createNetworkProfile_downlinkLossPercent :: Lens' CreateNetworkProfile (Maybe Natural)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
createNetworkProfile_uplinkBandwidthBits :: Lens' CreateNetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
createNetworkProfile_uplinkDelayMs :: Lens' CreateNetworkProfile (Maybe Integer)

-- | The description of the network profile.
createNetworkProfile_description :: Lens' CreateNetworkProfile (Maybe Text)

-- | The type of network profile to create. Valid values are listed here.
createNetworkProfile_type :: Lens' CreateNetworkProfile (Maybe NetworkProfileType)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   create a network profile.
createNetworkProfile_projectArn :: Lens' CreateNetworkProfile Text

-- | The name for the new network profile.
createNetworkProfile_name :: Lens' CreateNetworkProfile Text

-- | The network profile that is returned by the create network profile
--   request.
createNetworkProfileResponse_networkProfile :: Lens' CreateNetworkProfileResponse (Maybe NetworkProfile)

-- | The response's http status code.
createNetworkProfileResponse_httpStatus :: Lens' CreateNetworkProfileResponse Int

-- | The device type's ARN.
getDevice_arn :: Lens' GetDevice Text

-- | An object that contains information about the requested device.
getDeviceResponse_device :: Lens' GetDeviceResponse (Maybe Device)

-- | The response's http status code.
getDeviceResponse_httpStatus :: Lens' GetDeviceResponse Int

-- | An array of strings that specifies the list of app packages that
--   should not be cleaned up from the device after a test run.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
createInstanceProfile_excludeAppPackagesFromCleanup :: Lens' CreateInstanceProfile (Maybe [Text])

-- | The description of your instance profile.
createInstanceProfile_description :: Lens' CreateInstanceProfile (Maybe Text)

-- | When set to <tt>true</tt>, Device Farm reboots the instance after a
--   test run. The default value is <tt>true</tt>.
createInstanceProfile_rebootAfterUse :: Lens' CreateInstanceProfile (Maybe Bool)

-- | When set to <tt>true</tt>, Device Farm removes app packages after a
--   test run. The default value is <tt>false</tt> for private devices.
createInstanceProfile_packageCleanup :: Lens' CreateInstanceProfile (Maybe Bool)

-- | The name of your instance profile.
createInstanceProfile_name :: Lens' CreateInstanceProfile Text

-- | An object that contains information about your instance profile.
createInstanceProfileResponse_instanceProfile :: Lens' CreateInstanceProfileResponse (Maybe InstanceProfile)

-- | The response's http status code.
createInstanceProfileResponse_httpStatus :: Lens' CreateInstanceProfileResponse Int

-- | The Amazon Resource Name (ARN) of the remote access session to stop.
stopRemoteAccessSession_arn :: Lens' StopRemoteAccessSession Text

-- | A container that represents the metadata from the service about the
--   remote access session you are stopping.
stopRemoteAccessSessionResponse_remoteAccessSession :: Lens' StopRemoteAccessSessionResponse (Maybe RemoteAccessSession)

-- | The response's http status code.
stopRemoteAccessSessionResponse_httpStatus :: Lens' StopRemoteAccessSessionResponse Int

-- | The Amazon Resource Name (ARN) of the resource or resources from which
--   to delete tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listRuns_nextToken :: Lens' ListRuns (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list runs.
listRuns_arn :: Lens' ListRuns Text

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listRunsResponse_nextToken :: Lens' ListRunsResponse (Maybe Text)

-- | Information about the runs.
listRunsResponse_runs :: Lens' ListRunsResponse (Maybe [Run])

-- | The response's http status code.
listRunsResponse_httpStatus :: Lens' ListRunsResponse Int

-- | An array of strings that you want to associate with the device
--   instance.
updateDeviceInstance_labels :: Lens' UpdateDeviceInstance (Maybe [Text])

-- | The ARN of the profile that you want to associate with the device
--   instance.
updateDeviceInstance_profileArn :: Lens' UpdateDeviceInstance (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device instance.
updateDeviceInstance_arn :: Lens' UpdateDeviceInstance Text

-- | An object that contains information about your device instance.
updateDeviceInstanceResponse_deviceInstance :: Lens' UpdateDeviceInstanceResponse (Maybe DeviceInstance)

-- | The response's http status code.
updateDeviceInstanceResponse_httpStatus :: Lens' UpdateDeviceInstanceResponse Int

-- | The Amazon Resource Name (ARN) of the resource or resources to which
--   to add tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
tagResource_resourceARN :: Lens' TagResource Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters. Tag
--   values can have a maximum length of 256 characters.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listDeviceInstances_nextToken :: Lens' ListDeviceInstances (Maybe Text)

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
listDeviceInstances_maxResults :: Lens' ListDeviceInstances (Maybe Int)

-- | An identifier that can be used in the next call to this operation to
--   return the next set of items in the list.
listDeviceInstancesResponse_nextToken :: Lens' ListDeviceInstancesResponse (Maybe Text)

-- | An object that contains information about your device instances.
listDeviceInstancesResponse_deviceInstances :: Lens' ListDeviceInstancesResponse (Maybe [DeviceInstance])

-- | The response's http status code.
listDeviceInstancesResponse_httpStatus :: Lens' ListDeviceInstancesResponse Int

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and meet the criteria that
--   you assign for the <tt>rules</tt> parameter. Depending on how many
--   devices meet these constraints, your device pool might contain fewer
--   devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
createDevicePool_maxDevices :: Lens' CreateDevicePool (Maybe Int)

-- | The device pool's description.
createDevicePool_description :: Lens' CreateDevicePool (Maybe Text)

-- | The ARN of the project for the device pool.
createDevicePool_projectArn :: Lens' CreateDevicePool Text

-- | The device pool's name.
createDevicePool_name :: Lens' CreateDevicePool Text

-- | The device pool's rules.
createDevicePool_rules :: Lens' CreateDevicePool [Rule]

-- | The newly created device pool.
createDevicePoolResponse_devicePool :: Lens' CreateDevicePoolResponse (Maybe DevicePool)

-- | The response's http status code.
createDevicePoolResponse_httpStatus :: Lens' CreateDevicePoolResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listDevicePools_nextToken :: Lens' ListDevicePools (Maybe Text)

-- | The device pools' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
listDevicePools_type :: Lens' ListDevicePools (Maybe DevicePoolType)

-- | The project ARN.
listDevicePools_arn :: Lens' ListDevicePools Text

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listDevicePoolsResponse_nextToken :: Lens' ListDevicePoolsResponse (Maybe Text)

-- | Information about the device pools.
listDevicePoolsResponse_devicePools :: Lens' ListDevicePoolsResponse (Maybe [DevicePool])

-- | The response's http status code.
listDevicePoolsResponse_httpStatus :: Lens' ListDevicePoolsResponse Int

-- | The ARN of the Selenium testing project, from either
--   CreateTestGridProject or ListTestGridProjects.
getTestGridProject_projectArn :: Lens' GetTestGridProject Text

-- | A TestGridProject.
getTestGridProjectResponse_testGridProject :: Lens' GetTestGridProjectResponse (Maybe TestGridProject)

-- | The response's http status code.
getTestGridProjectResponse_httpStatus :: Lens' GetTestGridProjectResponse Int

-- | The upload's ARN.
getUpload_arn :: Lens' GetUpload Text

-- | An app or a set of one or more tests to upload or that have been
--   uploaded.
getUploadResponse_upload :: Lens' GetUploadResponse (Maybe Upload)

-- | The response's http status code.
getUploadResponse_httpStatus :: Lens' GetUploadResponse Int

-- | The upload's content type (for example, <tt>application/x-yaml</tt>).
updateUpload_contentType :: Lens' UpdateUpload (Maybe Text)

-- | Set to true if the YAML file has changed and must be updated.
--   Otherwise, set to false.
updateUpload_editContent :: Lens' UpdateUpload (Maybe Bool)

-- | The upload's test spec file name. The name must not contain any
--   forward slashes (/). The test spec file name must end with the
--   <tt>.yaml</tt> or <tt>.yml</tt> file extension.
updateUpload_name :: Lens' UpdateUpload (Maybe Text)

-- | The Amazon Resource Name (ARN) of the uploaded test spec.
updateUpload_arn :: Lens' UpdateUpload Text

-- | A test spec uploaded to Device Farm.
updateUploadResponse_upload :: Lens' UpdateUploadResponse (Maybe Upload)

-- | The response's http status code.
updateUploadResponse_httpStatus :: Lens' UpdateUploadResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
getOfferingStatus_nextToken :: Lens' GetOfferingStatus (Maybe Text)

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
getOfferingStatusResponse_nextToken :: Lens' GetOfferingStatusResponse (Maybe Text)

-- | When specified, gets the offering status for the next period.
getOfferingStatusResponse_nextPeriod :: Lens' GetOfferingStatusResponse (Maybe (HashMap Text OfferingStatus))

-- | When specified, gets the offering status for the current period.
getOfferingStatusResponse_current :: Lens' GetOfferingStatusResponse (Maybe (HashMap Text OfferingStatus))

-- | The response's http status code.
getOfferingStatusResponse_httpStatus :: Lens' GetOfferingStatusResponse Int

-- | Represents the Amazon Resource Name (ARN) of the Device Farm upload to
--   delete.
deleteUpload_arn :: Lens' DeleteUpload Text

-- | The response's http status code.
deleteUploadResponse_httpStatus :: Lens' DeleteUploadResponse Int

-- | Unique identifier for the client. If you want access to multiple
--   devices on the same client, you should pass the same <tt>clientId</tt>
--   value in each call to <tt>CreateRemoteAccessSession</tt>. This
--   identifier is required only if <tt>remoteDebugEnabled</tt> is set to
--   <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
createRemoteAccessSession_clientId :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | The interaction mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
createRemoteAccessSession_interactionMode :: Lens' CreateRemoteAccessSession (Maybe InteractionMode)

-- | The configuration information for the remote access session request.
createRemoteAccessSession_configuration :: Lens' CreateRemoteAccessSession (Maybe CreateRemoteAccessSessionConfiguration)

-- | The name of the remote access session to create.
createRemoteAccessSession_name :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | Set to <tt>true</tt> to enable remote recording for the remote access
--   session.
createRemoteAccessSession_remoteRecordEnabled :: Lens' CreateRemoteAccessSession (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the device instance for which you
--   want to create a remote access session.
createRemoteAccessSession_instanceArn :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information on how Device Farm modifies your uploads during
--   tests, see <a>Do you modify my app?</a>
createRemoteAccessSession_skipAppResign :: Lens' CreateRemoteAccessSession (Maybe Bool)

-- | Ignored. The public key of the <tt>ssh</tt> key pair you want to use
--   for connecting to remote devices in your remote debugging session.
--   This key is required only if <tt>remoteDebugEnabled</tt> is set to
--   <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
createRemoteAccessSession_sshPublicKey :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | Set to <tt>true</tt> if you want to access devices remotely for
--   debugging in your remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
createRemoteAccessSession_remoteDebugEnabled :: Lens' CreateRemoteAccessSession (Maybe Bool)

-- | The Amazon Resource Name (ARN) for the app to be recorded in the
--   remote access session.
createRemoteAccessSession_remoteRecordAppArn :: Lens' CreateRemoteAccessSession (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   create a remote access session.
createRemoteAccessSession_projectArn :: Lens' CreateRemoteAccessSession Text

-- | The ARN of the device for which you want to create a remote access
--   session.
createRemoteAccessSession_deviceArn :: Lens' CreateRemoteAccessSession Text

-- | A container that describes the remote access session when the request
--   to create a remote access session is sent.
createRemoteAccessSessionResponse_remoteAccessSession :: Lens' CreateRemoteAccessSessionResponse (Maybe RemoteAccessSession)

-- | The response's http status code.
createRemoteAccessSessionResponse_httpStatus :: Lens' CreateRemoteAccessSessionResponse Int

-- | From a response, used to continue a paginated listing.
listTestGridProjects_nextToken :: Lens' ListTestGridProjects (Maybe Text)

-- | Return no more than this number of results.
listTestGridProjects_maxResult :: Lens' ListTestGridProjects (Maybe Natural)

-- | Used for pagination. Pass into ListTestGridProjects to get more
--   results in a paginated request.
listTestGridProjectsResponse_nextToken :: Lens' ListTestGridProjectsResponse (Maybe Text)

-- | The list of TestGridProjects, based on a ListTestGridProjectsRequest.
listTestGridProjectsResponse_testGridProjects :: Lens' ListTestGridProjectsResponse (Maybe [TestGridProject])

-- | The response's http status code.
listTestGridProjectsResponse_httpStatus :: Lens' ListTestGridProjectsResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUploads_nextToken :: Lens' ListUploads (Maybe Text)

-- | The type of upload.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
listUploads_type :: Lens' ListUploads (Maybe UploadType)

-- | The Amazon Resource Name (ARN) of the project for which you want to
--   list uploads.
listUploads_arn :: Lens' ListUploads Text

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listUploadsResponse_nextToken :: Lens' ListUploadsResponse (Maybe Text)

-- | Information about the uploads.
listUploadsResponse_uploads :: Lens' ListUploadsResponse (Maybe [Upload])

-- | The response's http status code.
listUploadsResponse_httpStatus :: Lens' ListUploadsResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listTests_nextToken :: Lens' ListTests (Maybe Text)

-- | The test suite's Amazon Resource Name (ARN).
listTests_arn :: Lens' ListTests Text

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listTestsResponse_nextToken :: Lens' ListTestsResponse (Maybe Text)

-- | Information about the tests.
listTestsResponse_tests :: Lens' ListTestsResponse (Maybe [Test])

-- | The response's http status code.
listTestsResponse_httpStatus :: Lens' ListTestsResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listRemoteAccessSessions_nextToken :: Lens' ListRemoteAccessSessions (Maybe Text)

-- | The Amazon Resource Name (ARN) of the project about which you are
--   requesting information.
listRemoteAccessSessions_arn :: Lens' ListRemoteAccessSessions Text

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listRemoteAccessSessionsResponse_nextToken :: Lens' ListRemoteAccessSessionsResponse (Maybe Text)

-- | A container that represents the metadata from the service about each
--   remote access session you are requesting.
listRemoteAccessSessionsResponse_remoteAccessSessions :: Lens' ListRemoteAccessSessionsResponse (Maybe [RemoteAccessSession])

-- | The response's http status code.
listRemoteAccessSessionsResponse_httpStatus :: Lens' ListRemoteAccessSessionsResponse Int

-- | The run's ARN.
getRun_arn :: Lens' GetRun Text

-- | The run to get results from.
getRunResponse_run :: Lens' GetRunResponse (Maybe Run)

-- | The response's http status code.
getRunResponse_httpStatus :: Lens' GetRunResponse Int

-- | The Amazon Resource Name (ARN) of the session for which you want to
--   delete remote access.
deleteRemoteAccessSession_arn :: Lens' DeleteRemoteAccessSession Text

-- | The response's http status code.
deleteRemoteAccessSessionResponse_httpStatus :: Lens' DeleteRemoteAccessSessionResponse Int

-- | The Amazon Resource Name (ARN) of the instance you're requesting
--   information about.
getDeviceInstance_arn :: Lens' GetDeviceInstance Text

-- | An object that contains information about your device instance.
getDeviceInstanceResponse_deviceInstance :: Lens' GetDeviceInstanceResponse (Maybe DeviceInstance)

-- | The response's http status code.
getDeviceInstanceResponse_httpStatus :: Lens' GetDeviceInstanceResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listSuites_nextToken :: Lens' ListSuites (Maybe Text)

-- | The job's Amazon Resource Name (ARN).
listSuites_arn :: Lens' ListSuites Text

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listSuitesResponse_nextToken :: Lens' ListSuitesResponse (Maybe Text)

-- | Information about the suites.
listSuitesResponse_suites :: Lens' ListSuitesResponse (Maybe [Suite])

-- | The response's http status code.
listSuitesResponse_httpStatus :: Lens' ListSuitesResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listArtifacts_nextToken :: Lens' ListArtifacts (Maybe Text)

-- | The run, job, suite, or test ARN.
listArtifacts_arn :: Lens' ListArtifacts Text

-- | The artifacts' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>FILE</li>
--   <li>LOG</li>
--   <li>SCREENSHOT</li>
--   </ul>
listArtifacts_type :: Lens' ListArtifacts ArtifactCategory

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listArtifactsResponse_nextToken :: Lens' ListArtifactsResponse (Maybe Text)

-- | Information about the artifacts.
listArtifactsResponse_artifacts :: Lens' ListArtifactsResponse (Maybe [Artifact])

-- | The response's http status code.
listArtifactsResponse_httpStatus :: Lens' ListArtifactsResponse Int

-- | Represents the Amazon Resource Name (ARN) of the Device Farm job to
--   stop.
stopJob_arn :: Lens' StopJob Text

-- | The job that was stopped.
stopJobResponse_job :: Lens' StopJobResponse (Maybe Job)

-- | The response's http status code.
stopJobResponse_httpStatus :: Lens' StopJobResponse Int

-- | A string that represents the new name of the project that you are
--   updating.
updateProject_name :: Lens' UpdateProject (Maybe Text)

-- | The number of minutes a test run in the project executes before it
--   times out.
updateProject_defaultJobTimeoutMinutes :: Lens' UpdateProject (Maybe Int)

-- | The Amazon Resource Name (ARN) of the project whose name to update.
updateProject_arn :: Lens' UpdateProject Text

-- | The project to update.
updateProjectResponse_project :: Lens' UpdateProjectResponse (Maybe Project)

-- | The response's http status code.
updateProjectResponse_httpStatus :: Lens' UpdateProjectResponse Int

-- | Represents the Amazon Resource Name (ARN) of the Device Farm project
--   to delete.
deleteProject_arn :: Lens' DeleteProject Text

-- | The response's http status code.
deleteProjectResponse_httpStatus :: Lens' DeleteProjectResponse Int

-- | The Amazon Resource Name (ARN) of an instance profile.
getInstanceProfile_arn :: Lens' GetInstanceProfile Text

-- | An object that contains information about an instance profile.
getInstanceProfileResponse_instanceProfile :: Lens' GetInstanceProfileResponse (Maybe InstanceProfile)

-- | The response's http status code.
getInstanceProfileResponse_httpStatus :: Lens' GetInstanceProfileResponse Int

-- | The friendly name you give to your VPC endpoint configuration to
--   manage your configurations more easily.
updateVPCEConfiguration_vpceConfigurationName :: Lens' UpdateVPCEConfiguration (Maybe Text)

-- | An optional description that provides details about your VPC endpoint
--   configuration.
updateVPCEConfiguration_vpceConfigurationDescription :: Lens' UpdateVPCEConfiguration (Maybe Text)

-- | The DNS (domain) name used to connect to your private service in your
--   VPC. The DNS name must not already be in use on the internet.
updateVPCEConfiguration_serviceDnsName :: Lens' UpdateVPCEConfiguration (Maybe Text)

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
updateVPCEConfiguration_vpceServiceName :: Lens' UpdateVPCEConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to update.
updateVPCEConfiguration_arn :: Lens' UpdateVPCEConfiguration Text

-- | An object that contains information about your VPC endpoint
--   configuration.
updateVPCEConfigurationResponse_vpceConfiguration :: Lens' UpdateVPCEConfigurationResponse (Maybe VPCEConfiguration)

-- | The response's http status code.
updateVPCEConfigurationResponse_httpStatus :: Lens' UpdateVPCEConfigurationResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listVPCEConfigurations_nextToken :: Lens' ListVPCEConfigurations (Maybe Text)

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
listVPCEConfigurations_maxResults :: Lens' ListVPCEConfigurations (Maybe Int)

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listVPCEConfigurationsResponse_nextToken :: Lens' ListVPCEConfigurationsResponse (Maybe Text)

-- | An array of <tt>VPCEConfiguration</tt> objects that contain
--   information about your VPC endpoint configuration.
listVPCEConfigurationsResponse_vpceConfigurations :: Lens' ListVPCEConfigurationsResponse (Maybe [VPCEConfiguration])

-- | The response's http status code.
listVPCEConfigurationsResponse_httpStatus :: Lens' ListVPCEConfigurationsResponse Int

-- | Pagination token.
listTestGridSessions_nextToken :: Lens' ListTestGridSessions (Maybe Text)

-- | Return only sessions in this state.
listTestGridSessions_status :: Lens' ListTestGridSessions (Maybe TestGridSessionStatus)

-- | Return only sessions created before this time.
listTestGridSessions_creationTimeBefore :: Lens' ListTestGridSessions (Maybe UTCTime)

-- | Return only this many results at a time.
listTestGridSessions_maxResult :: Lens' ListTestGridSessions (Maybe Natural)

-- | Return only sessions that ended after this time.
listTestGridSessions_endTimeAfter :: Lens' ListTestGridSessions (Maybe UTCTime)

-- | Return only sessions that ended before this time.
listTestGridSessions_endTimeBefore :: Lens' ListTestGridSessions (Maybe UTCTime)

-- | Return only sessions created after this time.
listTestGridSessions_creationTimeAfter :: Lens' ListTestGridSessions (Maybe UTCTime)

-- | ARN of a TestGridProject.
listTestGridSessions_projectArn :: Lens' ListTestGridSessions Text

-- | Pagination token.
listTestGridSessionsResponse_nextToken :: Lens' ListTestGridSessionsResponse (Maybe Text)

-- | The sessions that match the criteria in a ListTestGridSessionsRequest.
listTestGridSessionsResponse_testGridSessions :: Lens' ListTestGridSessionsResponse (Maybe [TestGridSession])

-- | The response's http status code.
listTestGridSessionsResponse_httpStatus :: Lens' ListTestGridSessionsResponse Int

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to delete.
deleteVPCEConfiguration_arn :: Lens' DeleteVPCEConfiguration Text

-- | The response's http status code.
deleteVPCEConfigurationResponse_httpStatus :: Lens' DeleteVPCEConfigurationResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listUniqueProblems_nextToken :: Lens' ListUniqueProblems (Maybe Text)

-- | The unique problems' ARNs.
listUniqueProblems_arn :: Lens' ListUniqueProblems Text

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listUniqueProblemsResponse_nextToken :: Lens' ListUniqueProblemsResponse (Maybe Text)

-- | Information about the unique problems.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
listUniqueProblemsResponse_uniqueProblems :: Lens' ListUniqueProblemsResponse (Maybe (HashMap ExecutionResult [UniqueProblem]))

-- | The response's http status code.
listUniqueProblemsResponse_httpStatus :: Lens' ListUniqueProblemsResponse Int

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to describe.
getVPCEConfiguration_arn :: Lens' GetVPCEConfiguration Text

-- | An object that contains information about your VPC endpoint
--   configuration.
getVPCEConfigurationResponse_vpceConfiguration :: Lens' GetVPCEConfigurationResponse (Maybe VPCEConfiguration)

-- | The response's http status code.
getVPCEConfigurationResponse_httpStatus :: Lens' GetVPCEConfigurationResponse Int

-- | An ARN that uniquely identifies a TestGridSession.
getTestGridSession_sessionArn :: Lens' GetTestGridSession (Maybe Text)

-- | An ID associated with this session.
getTestGridSession_sessionId :: Lens' GetTestGridSession (Maybe Text)

-- | The ARN for the project that this session belongs to. See
--   CreateTestGridProject and ListTestGridProjects.
getTestGridSession_projectArn :: Lens' GetTestGridSession (Maybe Text)

-- | The TestGridSession that was requested.
getTestGridSessionResponse_testGridSession :: Lens' GetTestGridSessionResponse (Maybe TestGridSession)

-- | The response's http status code.
getTestGridSessionResponse_httpStatus :: Lens' GetTestGridSessionResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listJobs_nextToken :: Lens' ListJobs (Maybe Text)

-- | The run's Amazon Resource Name (ARN).
listJobs_arn :: Lens' ListJobs Text

-- | If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
listJobsResponse_nextToken :: Lens' ListJobsResponse (Maybe Text)

-- | Information about the jobs.
listJobsResponse_jobs :: Lens' ListJobsResponse (Maybe [Job])

-- | The response's http status code.
listJobsResponse_httpStatus :: Lens' ListJobsResponse Int

-- | The ARN of the network profile to return information about.
getNetworkProfile_arn :: Lens' GetNetworkProfile Text

-- | The network profile.
getNetworkProfileResponse_networkProfile :: Lens' GetNetworkProfileResponse (Maybe NetworkProfile)

-- | The response's http status code.
getNetworkProfileResponse_httpStatus :: Lens' GetNetworkProfileResponse Int

-- | The project's ARN.
getProject_arn :: Lens' GetProject Text

-- | The project to get information about.
getProjectResponse_project :: Lens' GetProjectResponse (Maybe Project)

-- | The response's http status code.
getProjectResponse_httpStatus :: Lens' GetProjectResponse Int

-- | An array of strings that specifies the list of app packages that
--   should not be cleaned up from the device after a test run is over.
--   
--   The list of packages is only considered if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
updateInstanceProfile_excludeAppPackagesFromCleanup :: Lens' UpdateInstanceProfile (Maybe [Text])

-- | The updated name for your instance profile.
updateInstanceProfile_name :: Lens' UpdateInstanceProfile (Maybe Text)

-- | The updated description for your instance profile.
updateInstanceProfile_description :: Lens' UpdateInstanceProfile (Maybe Text)

-- | The updated choice for whether you want to reboot the device after
--   use. The default value is <tt>true</tt>.
updateInstanceProfile_rebootAfterUse :: Lens' UpdateInstanceProfile (Maybe Bool)

-- | The updated choice for whether you want to specify package cleanup.
--   The default value is <tt>false</tt> for private devices.
updateInstanceProfile_packageCleanup :: Lens' UpdateInstanceProfile (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the instance profile.
updateInstanceProfile_arn :: Lens' UpdateInstanceProfile Text

-- | An object that contains information about your instance profile.
updateInstanceProfileResponse_instanceProfile :: Lens' UpdateInstanceProfileResponse (Maybe InstanceProfile)

-- | The response's http status code.
updateInstanceProfileResponse_httpStatus :: Lens' UpdateInstanceProfileResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listInstanceProfiles_nextToken :: Lens' ListInstanceProfiles (Maybe Text)

-- | An integer that specifies the maximum number of items you want to
--   return in the API response.
listInstanceProfiles_maxResults :: Lens' ListInstanceProfiles (Maybe Int)

-- | An identifier that can be used in the next call to this operation to
--   return the next set of items in the list.
listInstanceProfilesResponse_nextToken :: Lens' ListInstanceProfilesResponse (Maybe Text)

-- | An object that contains information about your instance profiles.
listInstanceProfilesResponse_instanceProfiles :: Lens' ListInstanceProfilesResponse (Maybe [InstanceProfile])

-- | The response's http status code.
listInstanceProfilesResponse_httpStatus :: Lens' ListInstanceProfilesResponse Int

-- | The Amazon Resource Name (ARN) of the instance profile you are
--   requesting to delete.
deleteInstanceProfile_arn :: Lens' DeleteInstanceProfile Text

-- | The response's http status code.
deleteInstanceProfileResponse_httpStatus :: Lens' DeleteInstanceProfileResponse Int

-- | The ID of a request to renew an offering.
renewOffering_offeringId :: Lens' RenewOffering Text

-- | The quantity requested in an offering renewal.
renewOffering_quantity :: Lens' RenewOffering Int

-- | Represents the status of the offering transaction for the renewal.
renewOfferingResponse_offeringTransaction :: Lens' RenewOfferingResponse (Maybe OfferingTransaction)

-- | The response's http status code.
renewOfferingResponse_httpStatus :: Lens' RenewOfferingResponse Int

-- | The ID of the offering promotion to be applied to the purchase.
purchaseOffering_offeringPromotionId :: Lens' PurchaseOffering (Maybe Text)

-- | The ID of the offering.
purchaseOffering_offeringId :: Lens' PurchaseOffering Text

-- | The number of device slots to purchase in an offering request.
purchaseOffering_quantity :: Lens' PurchaseOffering Int

-- | Represents the offering transaction for the purchase result.
purchaseOfferingResponse_offeringTransaction :: Lens' PurchaseOfferingResponse (Maybe OfferingTransaction)

-- | The response's http status code.
purchaseOfferingResponse_httpStatus :: Lens' PurchaseOfferingResponse Int

-- | The Amazon Resource Name (ARN) for the run to delete.
deleteRun_arn :: Lens' DeleteRun Text

-- | The response's http status code.
deleteRunResponse_httpStatus :: Lens' DeleteRunResponse Int

-- | The Amazon Resource Name (ARN) of the remote access session about
--   which you want to get session information.
getRemoteAccessSession_arn :: Lens' GetRemoteAccessSession Text

-- | A container that lists detailed information about the remote access
--   session.
getRemoteAccessSessionResponse_remoteAccessSession :: Lens' GetRemoteAccessSessionResponse (Maybe RemoteAccessSession)

-- | The response's http status code.
getRemoteAccessSessionResponse_httpStatus :: Lens' GetRemoteAccessSessionResponse Int

-- | The suite's ARN.
getSuite_arn :: Lens' GetSuite Text

-- | A collection of one or more tests.
getSuiteResponse_suite :: Lens' GetSuiteResponse (Maybe Suite)

-- | The response's http status code.
getSuiteResponse_httpStatus :: Lens' GetSuiteResponse Int

-- | The test's ARN.
getTest_arn :: Lens' GetTest Text

-- | A test condition that is evaluated.
getTestResponse_test :: Lens' GetTestResponse (Maybe Test)

-- | The response's http status code.
getTestResponse_httpStatus :: Lens' GetTestResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferingTransactions_nextToken :: Lens' ListOfferingTransactions (Maybe Text)

-- | The audit log of subscriptions you have purchased and modified through
--   AWS Device Farm.
listOfferingTransactionsResponse_offeringTransactions :: Lens' ListOfferingTransactionsResponse (Maybe [OfferingTransaction])

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferingTransactionsResponse_nextToken :: Lens' ListOfferingTransactionsResponse (Maybe Text)

-- | The response's http status code.
listOfferingTransactionsResponse_httpStatus :: Lens' ListOfferingTransactionsResponse Int

-- | Represents the Amazon Resource Name (ARN) of the Device Farm device
--   pool to delete.
deleteDevicePool_arn :: Lens' DeleteDevicePool Text

-- | The response's http status code.
deleteDevicePoolResponse_httpStatus :: Lens' DeleteDevicePoolResponse Int

-- | Sets whether the <tt>maxDevices</tt> parameter applies to your device
--   pool. If you set this parameter to <tt>true</tt>, the
--   <tt>maxDevices</tt> parameter does not apply, and Device Farm does not
--   limit the number of devices that it adds to your device pool. In this
--   case, Device Farm adds all available devices that meet the criteria
--   specified in the <tt>rules</tt> parameter.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>maxDevices</tt> parameter in the same request.
updateDevicePool_clearMaxDevices :: Lens' UpdateDevicePool (Maybe Bool)

-- | Represents the rules to modify for the device pool. Updating rules is
--   optional. If you update rules for your request, the update replaces
--   the existing rules.
updateDevicePool_rules :: Lens' UpdateDevicePool (Maybe [Rule])

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and that meet the criteria
--   that you assign for the <tt>rules</tt> parameter. Depending on how
--   many devices meet these constraints, your device pool might contain
--   fewer devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>clearMaxDevices</tt> parameter in the same request.
updateDevicePool_maxDevices :: Lens' UpdateDevicePool (Maybe Int)

-- | A string that represents the name of the device pool to update.
updateDevicePool_name :: Lens' UpdateDevicePool (Maybe Text)

-- | A description of the device pool to update.
updateDevicePool_description :: Lens' UpdateDevicePool (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Device Farm device pool to
--   update.
updateDevicePool_arn :: Lens' UpdateDevicePool Text

-- | The device pool you just updated.
updateDevicePoolResponse_devicePool :: Lens' UpdateDevicePoolResponse (Maybe DevicePool)

-- | The response's http status code.
updateDevicePoolResponse_httpStatus :: Lens' UpdateDevicePoolResponse Int

-- | The device pool's ARN.
getDevicePool_arn :: Lens' GetDevicePool Text

-- | An object that contains information about the requested device pool.
getDevicePoolResponse_devicePool :: Lens' GetDevicePoolResponse (Maybe DevicePool)

-- | The response's http status code.
getDevicePoolResponse_httpStatus :: Lens' GetDevicePoolResponse Int

-- | The ARN of the project to delete, from CreateTestGridProject or
--   ListTestGridProjects.
deleteTestGridProject_projectArn :: Lens' DeleteTestGridProject Text

-- | The response's http status code.
deleteTestGridProjectResponse_httpStatus :: Lens' DeleteTestGridProjectResponse Int

-- | The Amazon Resource Name (ARN) of the resource or resources for which
--   to list tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
--   Tag keys can have a maximum character length of 128 characters. Tag
--   values can have a maximum length of 256 characters.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The VPC security groups and subnets that are attached to a project.
updateTestGridProject_vpcConfig :: Lens' UpdateTestGridProject (Maybe TestGridVpcConfig)

-- | Human-readable name for the project.
updateTestGridProject_name :: Lens' UpdateTestGridProject (Maybe Text)

-- | Human-readable description for the project.
updateTestGridProject_description :: Lens' UpdateTestGridProject (Maybe Text)

-- | ARN of the project to update.
updateTestGridProject_projectArn :: Lens' UpdateTestGridProject Text

-- | The project, including updated information.
updateTestGridProjectResponse_testGridProject :: Lens' UpdateTestGridProjectResponse (Maybe TestGridProject)

-- | The response's http status code.
updateTestGridProjectResponse_httpStatus :: Lens' UpdateTestGridProjectResponse Int

-- | The account settings.
getAccountSettingsResponse_accountSettings :: Lens' GetAccountSettingsResponse (Maybe AccountSettings)

-- | The response's http status code.
getAccountSettingsResponse_httpStatus :: Lens' GetAccountSettingsResponse Int

-- | An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
listOfferingPromotions_nextToken :: Lens' ListOfferingPromotions (Maybe Text)

-- | An identifier to be used in the next call to this operation, to return
--   the next set of items in the list.
listOfferingPromotionsResponse_nextToken :: Lens' ListOfferingPromotionsResponse (Maybe Text)

-- | Information about the offering promotions.
listOfferingPromotionsResponse_offeringPromotions :: Lens' ListOfferingPromotionsResponse (Maybe [OfferingPromotion])

-- | The response's http status code.
listOfferingPromotionsResponse_httpStatus :: Lens' ListOfferingPromotionsResponse Int

-- | The AWS account number specified in the <tt>AccountSettings</tt>
--   container.
accountSettings_awsAccountNumber :: Lens' AccountSettings (Maybe Text)

-- | The maximum number of device slots that the AWS account can purchase.
--   Each maximum is expressed as an <tt>offering-id:number</tt> pair,
--   where the <tt>offering-id</tt> represents one of the IDs returned by
--   the <tt>ListOfferings</tt> command.
accountSettings_maxSlots :: Lens' AccountSettings (Maybe (HashMap Text Int))

-- | Information about an AWS account's usage of free trial device minutes.
accountSettings_trialMinutes :: Lens' AccountSettings (Maybe TrialMinutes)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
accountSettings_skipAppResign :: Lens' AccountSettings (Maybe Bool)

-- | The maximum number of minutes a test run executes before it times out.
accountSettings_maxJobTimeoutMinutes :: Lens' AccountSettings (Maybe Int)

-- | Returns the unmetered devices you have purchased or want to purchase.
accountSettings_unmeteredDevices :: Lens' AccountSettings (Maybe (HashMap DevicePlatform Int))

-- | Returns the unmetered remote access devices you have purchased or want
--   to purchase.
accountSettings_unmeteredRemoteAccessDevices :: Lens' AccountSettings (Maybe (HashMap DevicePlatform Int))

-- | The default number of minutes (at the account level) a test run
--   executes before it times out. The default value is 150 minutes.
accountSettings_defaultJobTimeoutMinutes :: Lens' AccountSettings (Maybe Int)

-- | The artifact's ARN.
artifact_arn :: Lens' Artifact (Maybe Text)

-- | The artifact's name.
artifact_name :: Lens' Artifact (Maybe Text)

-- | The artifact's file extension.
artifact_extension :: Lens' Artifact (Maybe Text)

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the artifact's file.
artifact_url :: Lens' Artifact (Maybe Text)

-- | The artifact's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>UNKNOWN</li>
--   <li>SCREENSHOT</li>
--   <li>DEVICE_LOG</li>
--   <li>MESSAGE_LOG</li>
--   <li>VIDEO_LOG</li>
--   <li>RESULT_LOG</li>
--   <li>SERVICE_LOG</li>
--   <li>WEBKIT_LOG</li>
--   <li>INSTRUMENTATION_OUTPUT</li>
--   <li>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an
--   Android fuzz test.</li>
--   <li>CALABASH_JSON_OUTPUT</li>
--   <li>CALABASH_PRETTY_OUTPUT</li>
--   <li>CALABASH_STANDARD_OUTPUT</li>
--   <li>CALABASH_JAVA_XML_OUTPUT</li>
--   <li>AUTOMATION_OUTPUT</li>
--   <li>APPIUM_SERVER_OUTPUT</li>
--   <li>APPIUM_JAVA_OUTPUT</li>
--   <li>APPIUM_JAVA_XML_OUTPUT</li>
--   <li>APPIUM_PYTHON_OUTPUT</li>
--   <li>APPIUM_PYTHON_XML_OUTPUT</li>
--   <li>EXPLORER_EVENT_LOG</li>
--   <li>EXPLORER_SUMMARY_LOG</li>
--   <li>APPLICATION_CRASH_REPORT</li>
--   <li>XCTEST_LOG</li>
--   <li>VIDEO</li>
--   <li>CUSTOMER_ARTIFACT</li>
--   <li>CUSTOMER_ARTIFACT_LOG</li>
--   <li>TESTSPEC_OUTPUT</li>
--   </ul>
artifact_type :: Lens' Artifact (Maybe ArtifactType)

-- | The CPU's architecture (for example, x86 or ARM).
cpu_architecture :: Lens' CPU (Maybe Text)

-- | The CPU's frequency.
cpu_frequency :: Lens' CPU (Maybe Text)

-- | The clock speed of the device's CPU, expressed in hertz (Hz). For
--   example, a 1.2 GHz CPU is expressed as 1200000000.
cpu_clock :: Lens' CPU (Maybe Double)

-- | The number of errored entities.
counters_errored :: Lens' Counters (Maybe Int)

-- | The number of warned entities.
counters_warned :: Lens' Counters (Maybe Int)

-- | The number of passed entities.
counters_passed :: Lens' Counters (Maybe Int)

-- | The total number of entities.
counters_total :: Lens' Counters (Maybe Int)

-- | The number of stopped entities.
counters_stopped :: Lens' Counters (Maybe Int)

-- | The number of failed entities.
counters_failed :: Lens' Counters (Maybe Int)

-- | The number of skipped entities.
counters_skipped :: Lens' Counters (Maybe Int)

-- | The billing method for the remote access session.
createRemoteAccessSessionConfiguration_billingMethod :: Lens' CreateRemoteAccessSessionConfiguration (Maybe BillingMethod)

-- | An array of ARNs included in the VPC endpoint configuration.
createRemoteAccessSessionConfiguration_vpceConfigurationArns :: Lens' CreateRemoteAccessSessionConfiguration (Maybe [Text])

-- | Comma-separated list of paths in the test execution environment where
--   the artifacts generated by the customer's tests are pulled from.
customerArtifactPaths_deviceHostPaths :: Lens' CustomerArtifactPaths (Maybe [Text])

-- | Comma-separated list of paths on the iOS device where the artifacts
--   generated by the customer's tests are pulled from.
customerArtifactPaths_iosPaths :: Lens' CustomerArtifactPaths (Maybe [Text])

-- | Comma-separated list of paths on the Android device where the
--   artifacts generated by the customer's tests are pulled from.
customerArtifactPaths_androidPaths :: Lens' CustomerArtifactPaths (Maybe [Text])

-- | The device's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
device_platform :: Lens' Device (Maybe DevicePlatform)

-- | The device's manufacturer name.
device_manufacturer :: Lens' Device (Maybe Text)

-- | The device's model name.
device_model :: Lens' Device (Maybe Text)

-- | The device's total memory size, expressed in bytes.
device_memory :: Lens' Device (Maybe Integer)

-- | Indicates how likely a device is available for a test run. Currently
--   available in the ListDevices and GetDevice API methods.
device_availability :: Lens' Device (Maybe DeviceAvailability)

-- | The name of the fleet to which this device belongs.
device_fleetName :: Lens' Device (Maybe Text)

-- | The type of fleet to which this device belongs. Possible values are
--   PRIVATE and PUBLIC.
device_fleetType :: Lens' Device (Maybe Text)

-- | The device's form factor.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PHONE</li>
--   <li>TABLET</li>
--   </ul>
device_formFactor :: Lens' Device (Maybe DeviceFormFactor)

-- | The device's ARN.
device_arn :: Lens' Device (Maybe Text)

-- | Specifies whether remote access has been enabled for the specified
--   device.
device_remoteAccessEnabled :: Lens' Device (Maybe Bool)

-- | The instances that belong to this device.
device_instances :: Lens' Device (Maybe [DeviceInstance])

-- | The device's display name.
device_name :: Lens' Device (Maybe Text)

-- | The device's image name.
device_image :: Lens' Device (Maybe Text)

-- | The device's carrier.
device_carrier :: Lens' Device (Maybe Text)

-- | The device's operating system type.
device_os :: Lens' Device (Maybe Text)

-- | The device's heap size, expressed in bytes.
device_heapSize :: Lens' Device (Maybe Integer)

-- | The device's radio.
device_radio :: Lens' Device (Maybe Text)

-- | The resolution of the device.
device_resolution :: Lens' Device (Maybe Resolution)

-- | Information about the device's CPU.
device_cpu :: Lens' Device (Maybe CPU)

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the device.
--   
--   Remote debugging is <a>no longer supported</a>.
device_remoteDebugEnabled :: Lens' Device (Maybe Bool)

-- | The device's model ID.
device_modelId :: Lens' Device (Maybe Text)

-- | The aspect of a device such as platform or model used as the selection
--   criteria in a device filter.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model (for example, iPad 5th
--   Gen).Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   </ul>
deviceFilter_attribute :: Lens' DeviceFilter DeviceFilterAttribute

-- | Specifies how Device Farm compares the filter's attribute to the
--   value. See the attribute descriptions.
deviceFilter_operator :: Lens' DeviceFilter RuleOperator

-- | An array of one or more filter values used in a device filter.
--   
--   <b>Operator Values</b>
--   
--   <ul>
--   <li>The IN and NOT_IN operators can take a values array that has more
--   than one element.</li>
--   <li>The other operators require an array with a single element.</li>
--   </ul>
--   
--   <b>Attribute Values</b>
--   
--   <ul>
--   <li>The PLATFORM attribute can be set to ANDROID or IOS.</li>
--   <li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li>
--   <li>The FORM_FACTOR attribute can be set to PHONE or TABLET.</li>
--   <li>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li>
--   </ul>
deviceFilter_values :: Lens' DeviceFilter [Text]

-- | The status of the device instance. Valid values are listed here.
deviceInstance_status :: Lens' DeviceInstance (Maybe InstanceStatus)

-- | Unique device identifier for the device instance.
deviceInstance_udid :: Lens' DeviceInstance (Maybe Text)

-- | The ARN of the device.
deviceInstance_deviceArn :: Lens' DeviceInstance (Maybe Text)

-- | The Amazon Resource Name (ARN) of the device instance.
deviceInstance_arn :: Lens' DeviceInstance (Maybe Text)

-- | An array of strings that describe the device instance.
deviceInstance_labels :: Lens' DeviceInstance (Maybe [Text])

-- | A object that contains information about the instance profile.
deviceInstance_instanceProfile :: Lens' DeviceInstance (Maybe InstanceProfile)

-- | When specified, represents only the sum of unmetered minutes used by
--   the resource to run tests.
deviceMinutes_unmetered :: Lens' DeviceMinutes (Maybe Double)

-- | When specified, represents only the sum of metered minutes used by the
--   resource to run tests.
deviceMinutes_metered :: Lens' DeviceMinutes (Maybe Double)

-- | When specified, represents the total minutes used by the resource to
--   run tests.
deviceMinutes_total :: Lens' DeviceMinutes (Maybe Double)

-- | The device pool's ARN.
devicePool_arn :: Lens' DevicePool (Maybe Text)

-- | Information about the device pool's rules.
devicePool_rules :: Lens' DevicePool (Maybe [Rule])

-- | The number of devices that Device Farm can add to your device pool.
--   Device Farm adds devices that are available and meet the criteria that
--   you assign for the <tt>rules</tt> parameter. Depending on how many
--   devices meet these constraints, your device pool might contain fewer
--   devices than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
devicePool_maxDevices :: Lens' DevicePool (Maybe Int)

-- | The device pool's name.
devicePool_name :: Lens' DevicePool (Maybe Text)

-- | The device pool's description.
devicePool_description :: Lens' DevicePool (Maybe Text)

-- | The device pool's type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
devicePool_type :: Lens' DevicePool (Maybe DevicePoolType)

-- | Information about the compatibility.
devicePoolCompatibilityResult_incompatibilityMessages :: Lens' DevicePoolCompatibilityResult (Maybe [IncompatibilityMessage])

-- | Whether the result was compatible with the device pool.
devicePoolCompatibilityResult_compatible :: Lens' DevicePoolCompatibilityResult (Maybe Bool)

-- | The device (phone or tablet) to return information about.
devicePoolCompatibilityResult_device :: Lens' DevicePoolCompatibilityResult (Maybe Device)

-- | Used to dynamically select a set of devices for a test run. A filter
--   is made up of an attribute, an operator, and one or more values.
--   
--   <ul>
--   <li><b>Attribute</b>The aspect of a device such as platform or model
--   used as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this filter is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li><b>Operator</b>The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li><b>Values</b>An array of one or more filter values.<b>Operator
--   Values</b><ul><li>The IN and NOT_IN operators can take a values array
--   that has more than one element.</li><li>The other operators require an
--   array with a single element.</li></ul><b>Attribute
--   Values</b><ul><li>The PLATFORM attribute can be set to ANDROID or
--   IOS.</li><li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li><li>The
--   FORM_FACTOR attribute can be set to PHONE or TABLET.</li><li>The
--   FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li></ul></li>
--   </ul>
deviceSelectionConfiguration_filters :: Lens' DeviceSelectionConfiguration [DeviceFilter]

-- | The maximum number of devices to be included in a test run.
deviceSelectionConfiguration_maxDevices :: Lens' DeviceSelectionConfiguration Int

-- | The maximum number of devices to be selected by a device filter and
--   included in a test run.
deviceSelectionResult_maxDevices :: Lens' DeviceSelectionResult (Maybe Int)

-- | The filters in a device selection result.
deviceSelectionResult_filters :: Lens' DeviceSelectionResult (Maybe [DeviceFilter])

-- | The number of devices that matched the device filter selection
--   criteria.
deviceSelectionResult_matchedDevicesCount :: Lens' DeviceSelectionResult (Maybe Int)

-- | True if app package cleanup is enabled at the beginning of the test.
--   Otherwise, false.
executionConfiguration_appPackagesCleanup :: Lens' ExecutionConfiguration (Maybe Bool)

-- | Set to true to enable video capture. Otherwise, set to false. The
--   default is true.
executionConfiguration_videoCapture :: Lens' ExecutionConfiguration (Maybe Bool)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
executionConfiguration_skipAppResign :: Lens' ExecutionConfiguration (Maybe Bool)

-- | The number of minutes a test run executes before it times out.
executionConfiguration_jobTimeoutMinutes :: Lens' ExecutionConfiguration (Maybe Int)

-- | True if account cleanup is enabled at the beginning of the test.
--   Otherwise, false.
executionConfiguration_accountsCleanup :: Lens' ExecutionConfiguration (Maybe Bool)

-- | A message about the incompatibility.
incompatibilityMessage_message :: Lens' IncompatibilityMessage (Maybe Text)

-- | The type of incompatibility.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ARN</li>
--   <li>FORM_FACTOR (for example, phone or tablet)</li>
--   <li>MANUFACTURER</li>
--   <li>PLATFORM (for example, Android or iOS)</li>
--   <li>REMOTE_ACCESS_ENABLED</li>
--   <li>APPIUM_VERSION</li>
--   </ul>
incompatibilityMessage_type :: Lens' IncompatibilityMessage (Maybe DeviceAttribute)

-- | An array of strings containing the list of app packages that should
--   not be cleaned up from the device after a test run completes.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
instanceProfile_excludeAppPackagesFromCleanup :: Lens' InstanceProfile (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the instance profile.
instanceProfile_arn :: Lens' InstanceProfile (Maybe Text)

-- | The name of the instance profile.
instanceProfile_name :: Lens' InstanceProfile (Maybe Text)

-- | The description of the instance profile.
instanceProfile_description :: Lens' InstanceProfile (Maybe Text)

-- | When set to <tt>true</tt>, Device Farm reboots the instance after a
--   test run. The default value is <tt>true</tt>.
instanceProfile_rebootAfterUse :: Lens' InstanceProfile (Maybe Bool)

-- | When set to <tt>true</tt>, Device Farm removes app packages after a
--   test run. The default value is <tt>false</tt> for private devices.
instanceProfile_packageCleanup :: Lens' InstanceProfile (Maybe Bool)

-- | The job's result counters.
job_counters :: Lens' Job (Maybe Counters)

-- | The job's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
job_status :: Lens' Job (Maybe ExecutionStatus)

-- | The job's start time.
job_started :: Lens' Job (Maybe UTCTime)

-- | The job's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
job_result :: Lens' Job (Maybe ExecutionResult)

-- | A message about the job's result.
job_message :: Lens' Job (Maybe Text)

-- | The device (phone or tablet).
job_device :: Lens' Job (Maybe Device)

-- | The job's ARN.
job_arn :: Lens' Job (Maybe Text)

-- | This value is set to true if video capture is enabled. Otherwise, it
--   is set to false.
job_videoCapture :: Lens' Job (Maybe Bool)

-- | The endpoint for streaming device video.
job_videoEndpoint :: Lens' Job (Maybe Text)

-- | The job's name.
job_name :: Lens' Job (Maybe Text)

-- | The ARN of the instance.
job_instanceArn :: Lens' Job (Maybe Text)

-- | The job's stop time.
job_stopped :: Lens' Job (Maybe UTCTime)

-- | The job's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
job_type :: Lens' Job (Maybe TestType)

-- | When the job was created.
job_created :: Lens' Job (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the job.
job_deviceMinutes :: Lens' Job (Maybe DeviceMinutes)

-- | The latitude.
location_latitude :: Lens' Location Double

-- | The longitude.
location_longitude :: Lens' Location Double

-- | The numerical amount of an offering or transaction.
monetaryAmount_amount :: Lens' MonetaryAmount (Maybe Double)

-- | The currency code of a monetary amount. For example, <tt>USD</tt>
--   means U.S. dollars.
monetaryAmount_currencyCode :: Lens' MonetaryAmount (Maybe CurrencyCode)

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
networkProfile_uplinkJitterMs :: Lens' NetworkProfile (Maybe Integer)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
networkProfile_downlinkBandwidthBits :: Lens' NetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
networkProfile_downlinkDelayMs :: Lens' NetworkProfile (Maybe Integer)

-- | Time variation in the delay of received packets in milliseconds as an
--   integer from 0 to 2000.
networkProfile_downlinkJitterMs :: Lens' NetworkProfile (Maybe Integer)

-- | Proportion of transmitted packets that fail to arrive from 0 to 100
--   percent.
networkProfile_uplinkLossPercent :: Lens' NetworkProfile (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the network profile.
networkProfile_arn :: Lens' NetworkProfile (Maybe Text)

-- | Proportion of received packets that fail to arrive from 0 to 100
--   percent.
networkProfile_downlinkLossPercent :: Lens' NetworkProfile (Maybe Natural)

-- | The name of the network profile.
networkProfile_name :: Lens' NetworkProfile (Maybe Text)

-- | The data throughput rate in bits per second, as an integer from 0 to
--   104857600.
networkProfile_uplinkBandwidthBits :: Lens' NetworkProfile (Maybe Integer)

-- | Delay time for all packets to destination in milliseconds as an
--   integer from 0 to 2000.
networkProfile_uplinkDelayMs :: Lens' NetworkProfile (Maybe Integer)

-- | The description of the network profile.
networkProfile_description :: Lens' NetworkProfile (Maybe Text)

-- | The type of network profile. Valid values are listed here.
networkProfile_type :: Lens' NetworkProfile (Maybe NetworkProfileType)

-- | The platform of the device (for example, <tt>ANDROID</tt> or
--   <tt>IOS</tt>).
offering_platform :: Lens' Offering (Maybe DevicePlatform)

-- | The ID that corresponds to a device offering.
offering_id :: Lens' Offering (Maybe Text)

-- | A string that describes the offering.
offering_description :: Lens' Offering (Maybe Text)

-- | The type of offering (for example, <tt>RECURRING</tt>) for a device.
offering_type :: Lens' Offering (Maybe OfferingType)

-- | Specifies whether there are recurring charges for the offering.
offering_recurringCharges :: Lens' Offering (Maybe [RecurringCharge])

-- | The ID of the offering promotion.
offeringPromotion_id :: Lens' OfferingPromotion (Maybe Text)

-- | A string that describes the offering promotion.
offeringPromotion_description :: Lens' OfferingPromotion (Maybe Text)

-- | The number of available devices in the offering.
offeringStatus_quantity :: Lens' OfferingStatus (Maybe Int)

-- | Represents the metadata of an offering status.
offeringStatus_offering :: Lens' OfferingStatus (Maybe Offering)

-- | The date on which the offering is effective.
offeringStatus_effectiveOn :: Lens' OfferingStatus (Maybe UTCTime)

-- | The type specified for the offering status.
offeringStatus_type :: Lens' OfferingStatus (Maybe OfferingTransactionType)

-- | The status of an offering transaction.
offeringTransaction_offeringStatus :: Lens' OfferingTransaction (Maybe OfferingStatus)

-- | The date on which an offering transaction was created.
offeringTransaction_createdOn :: Lens' OfferingTransaction (Maybe UTCTime)

-- | The cost of an offering transaction.
offeringTransaction_cost :: Lens' OfferingTransaction (Maybe MonetaryAmount)

-- | The transaction ID of the offering transaction.
offeringTransaction_transactionId :: Lens' OfferingTransaction (Maybe Text)

-- | The ID that corresponds to a device offering promotion.
offeringTransaction_offeringPromotionId :: Lens' OfferingTransaction (Maybe Text)

-- | Information about the associated job.
problem_job :: Lens' Problem (Maybe ProblemDetail)

-- | The problem's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
problem_result :: Lens' Problem (Maybe ExecutionResult)

-- | A message about the problem's result.
problem_message :: Lens' Problem (Maybe Text)

-- | Information about the associated device.
problem_device :: Lens' Problem (Maybe Device)

-- | Information about the associated run.
problem_run :: Lens' Problem (Maybe ProblemDetail)

-- | Information about the associated suite.
problem_suite :: Lens' Problem (Maybe ProblemDetail)

-- | Information about the associated test.
problem_test :: Lens' Problem (Maybe ProblemDetail)

-- | The problem detail's ARN.
problemDetail_arn :: Lens' ProblemDetail (Maybe Text)

-- | The problem detail's name.
problemDetail_name :: Lens' ProblemDetail (Maybe Text)

-- | The project's ARN.
project_arn :: Lens' Project (Maybe Text)

-- | The project's name.
project_name :: Lens' Project (Maybe Text)

-- | When the project was created.
project_created :: Lens' Project (Maybe UTCTime)

-- | The default number of minutes (at the project level) a test run
--   executes before it times out. The default value is 150 minutes.
project_defaultJobTimeoutMinutes :: Lens' Project (Maybe Int)

-- | True if GPS is enabled at the beginning of the test. Otherwise, false.
radios_gps :: Lens' Radios (Maybe Bool)

-- | True if Wi-Fi is enabled at the beginning of the test. Otherwise,
--   false.
radios_wifi :: Lens' Radios (Maybe Bool)

-- | True if Bluetooth is enabled at the beginning of the test. Otherwise,
--   false.
radios_bluetooth :: Lens' Radios (Maybe Bool)

-- | True if NFC is enabled at the beginning of the test. Otherwise, false.
radios_nfc :: Lens' Radios (Maybe Bool)

-- | The cost of the recurring charge.
recurringCharge_cost :: Lens' RecurringCharge (Maybe MonetaryAmount)

-- | The frequency in which charges recur.
recurringCharge_frequency :: Lens' RecurringCharge (Maybe RecurringChargeFrequency)

-- | Unique device identifier for the remote device. Only returned if
--   remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_deviceUdid :: Lens' RemoteAccessSession (Maybe Text)

-- | The status of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PENDING_CONCURRENCY.</li>
--   <li>PENDING_DEVICE.</li>
--   <li>PROCESSING.</li>
--   <li>SCHEDULING.</li>
--   <li>PREPARING.</li>
--   <li>RUNNING.</li>
--   <li>COMPLETED.</li>
--   <li>STOPPING.</li>
--   </ul>
remoteAccessSession_status :: Lens' RemoteAccessSession (Maybe ExecutionStatus)

-- | Unique identifier of your client for the remote access session. Only
--   returned if remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_clientId :: Lens' RemoteAccessSession (Maybe Text)

-- | The interaction mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
remoteAccessSession_interactionMode :: Lens' RemoteAccessSession (Maybe InteractionMode)

-- | The date and time the remote access session was started.
remoteAccessSession_started :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | The result of the remote access session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PASSED.</li>
--   <li>WARNED.</li>
--   <li>FAILED.</li>
--   <li>SKIPPED.</li>
--   <li>ERRORED.</li>
--   <li>STOPPED.</li>
--   </ul>
remoteAccessSession_result :: Lens' RemoteAccessSession (Maybe ExecutionResult)

-- | A message about the remote access session.
remoteAccessSession_message :: Lens' RemoteAccessSession (Maybe Text)

-- | The device (phone or tablet) used in the remote access session.
remoteAccessSession_device :: Lens' RemoteAccessSession (Maybe Device)

-- | The Amazon Resource Name (ARN) of the remote access session.
remoteAccessSession_arn :: Lens' RemoteAccessSession (Maybe Text)

-- | The name of the remote access session.
remoteAccessSession_name :: Lens' RemoteAccessSession (Maybe Text)

-- | This flag is set to <tt>true</tt> if remote recording is enabled for
--   the remote access session.
remoteAccessSession_remoteRecordEnabled :: Lens' RemoteAccessSession (Maybe Bool)

-- | The ARN of the instance.
remoteAccessSession_instanceArn :: Lens' RemoteAccessSession (Maybe Text)

-- | The billing method of the remote access session. Possible values
--   include <tt>METERED</tt> or <tt>UNMETERED</tt>. For more information
--   about metered devices, see <a>AWS Device Farm terminology</a>.
remoteAccessSession_billingMethod :: Lens' RemoteAccessSession (Maybe BillingMethod)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
remoteAccessSession_skipAppResign :: Lens' RemoteAccessSession (Maybe Bool)

-- | The date and time the remote access session was stopped.
remoteAccessSession_stopped :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | IP address of the EC2 host where you need to connect to remotely debug
--   devices. Only returned if remote debugging is enabled for the remote
--   access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_hostAddress :: Lens' RemoteAccessSession (Maybe Text)

-- | The endpoint for the remote access sesssion.
remoteAccessSession_endpoint :: Lens' RemoteAccessSession (Maybe Text)

-- | This flag is set to <tt>true</tt> if remote debugging is enabled for
--   the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
remoteAccessSession_remoteDebugEnabled :: Lens' RemoteAccessSession (Maybe Bool)

-- | The date and time the remote access session was created.
remoteAccessSession_created :: Lens' RemoteAccessSession (Maybe UTCTime)

-- | The number of minutes a device is used in a remote access session
--   (including setup and teardown minutes).
remoteAccessSession_deviceMinutes :: Lens' RemoteAccessSession (Maybe DeviceMinutes)

-- | The ARN for the app to be recorded in the remote access session.
remoteAccessSession_remoteRecordAppArn :: Lens' RemoteAccessSession (Maybe Text)

-- | The screen resolution's height, expressed in pixels.
resolution_height :: Lens' Resolution (Maybe Int)

-- | The screen resolution's width, expressed in pixels.
resolution_width :: Lens' Resolution (Maybe Int)

-- | Specifies how Device Farm compares the rule's attribute to the value.
--   For the operators that are supported by each attribute, see the
--   attribute descriptions.
rule_operator :: Lens' Rule (Maybe RuleOperator)

-- | The rule's stringified attribute. For example, specify the value as
--   <tt>"\"abc\""</tt>.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>APPIUM_VERSION</i> The Appium version for the test.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>.Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model, such as Apple iPad Air 2 or Google
--   Pixel.Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   </ul>
rule_attribute :: Lens' Rule (Maybe DeviceAttribute)

-- | The rule's value.
rule_value :: Lens' Rule (Maybe Text)

-- | The run's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
run_platform :: Lens' Run (Maybe DevicePlatform)

-- | The run's result counters.
run_counters :: Lens' Run (Maybe Counters)

-- | For fuzz tests, this is a seed to use for randomizing the UI fuzz
--   test. Using the same seed value between tests ensures identical event
--   sequences.
run_seed :: Lens' Run (Maybe Int)

-- | For fuzz tests, this is the number of events, between 1 and 10000,
--   that the UI fuzz test should perform.
run_eventCount :: Lens' Run (Maybe Int)

-- | The run's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
run_status :: Lens' Run (Maybe ExecutionStatus)

-- | The run's start time.
run_started :: Lens' Run (Maybe UTCTime)

-- | The results of a device filter used to select the devices for a test
--   run.
run_deviceSelectionResult :: Lens' Run (Maybe DeviceSelectionResult)

-- | The run's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
run_result :: Lens' Run (Maybe ExecutionResult)

-- | The ARN of the device pool for the run.
run_devicePoolArn :: Lens' Run (Maybe Text)

-- | The ARN of the YAML-formatted test specification for the run.
run_testSpecArn :: Lens' Run (Maybe Text)

-- | A message about the run's result.
run_message :: Lens' Run (Maybe Text)

-- | Information about the locale that is used for the run.
run_locale :: Lens' Run (Maybe Text)

-- | The network profile being used for a test run.
run_networkProfile :: Lens' Run (Maybe NetworkProfile)

-- | The run's ARN.
run_arn :: Lens' Run (Maybe Text)

-- | Information about the radio states for the run.
run_radios :: Lens' Run (Maybe Radios)

-- | An app to upload or that has been uploaded.
run_appUpload :: Lens' Run (Maybe Text)

-- | The run's name.
run_name :: Lens' Run (Maybe Text)

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have unmetered device slots, you must set this to
--   <tt>unmetered</tt> to use them. Otherwise, the run is counted toward
--   metered device minutes.
run_billingMethod :: Lens' Run (Maybe BillingMethod)

-- | Supporting field for the result field. Set only if <tt>result</tt> is
--   <tt>SKIPPED</tt>. <tt>PARSING_FAILED</tt> if the result is skipped
--   because of test package parsing failure.
run_resultCode :: Lens' Run (Maybe ExecutionResultCode)

-- | When set to <tt>true</tt>, for private devices, Device Farm does not
--   sign your app again. For public devices, Device Farm always signs your
--   apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
run_skipAppResign :: Lens' Run (Maybe Bool)

-- | Output <tt>CustomerArtifactPaths</tt> object for the test run.
run_customerArtifactPaths :: Lens' Run (Maybe CustomerArtifactPaths)

-- | The total number of completed jobs.
run_completedJobs :: Lens' Run (Maybe Int)

-- | The number of minutes the job executes before it times out.
run_jobTimeoutMinutes :: Lens' Run (Maybe Int)

-- | The run's stop time.
run_stopped :: Lens' Run (Maybe UTCTime)

-- | The total number of jobs for the run.
run_totalJobs :: Lens' Run (Maybe Int)

-- | The Device Farm console URL for the recording of the run.
run_webUrl :: Lens' Run (Maybe Text)

-- | The run's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
run_type :: Lens' Run (Maybe TestType)

-- | When the run was created.
run_created :: Lens' Run (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test
--   run.
run_deviceMinutes :: Lens' Run (Maybe DeviceMinutes)

-- | Information about the location that is used for the run.
run_location :: Lens' Run (Maybe Location)

-- | Read-only URL for an object in an S3 bucket where you can get the
--   parsing results of the test package. If the test package doesn't
--   parse, the reason why it doesn't parse appears in the file that this
--   URL points to.
run_parsingResultUrl :: Lens' Run (Maybe Text)

-- | The sample's ARN.
sample_arn :: Lens' Sample (Maybe Text)

-- | The presigned Amazon S3 URL that can be used with a GET request to
--   download the sample's file.
sample_url :: Lens' Sample (Maybe Text)

-- | The sample's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>CPU: A CPU sample type. This is expressed as the app processing
--   CPU time (including child processes) as reported by process, as a
--   percentage.</li>
--   <li>MEMORY: A memory usage sample type. This is expressed as the total
--   proportional set size of an app process, in kilobytes.</li>
--   <li>NATIVE_AVG_DRAWTIME</li>
--   <li>NATIVE_FPS</li>
--   <li>NATIVE_FRAMES</li>
--   <li>NATIVE_MAX_DRAWTIME</li>
--   <li>NATIVE_MIN_DRAWTIME</li>
--   <li>OPENGL_AVG_DRAWTIME</li>
--   <li>OPENGL_FPS</li>
--   <li>OPENGL_FRAMES</li>
--   <li>OPENGL_MAX_DRAWTIME</li>
--   <li>OPENGL_MIN_DRAWTIME</li>
--   <li>RX</li>
--   <li>RX_RATE: The total number of bytes per second (TCP and UDP) that
--   are sent, by app process.</li>
--   <li>THREADS: A threads sample type. This is expressed as the total
--   number of threads per app process.</li>
--   <li>TX</li>
--   <li>TX_RATE: The total number of bytes per second (TCP and UDP) that
--   are received, by app process.</li>
--   </ul>
sample_type :: Lens' Sample (Maybe SampleType)

-- | A list of upload ARNs for app packages to be installed with your app.
scheduleRunConfiguration_auxiliaryApps :: Lens' ScheduleRunConfiguration (Maybe [Text])

-- | Information about the locale that is used for the run.
scheduleRunConfiguration_locale :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | Information about the radio states for the run.
scheduleRunConfiguration_radios :: Lens' ScheduleRunConfiguration (Maybe Radios)

-- | Specifies the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have purchased unmetered device slots, you must set this
--   parameter to <tt>unmetered</tt> to make use of them. Otherwise, your
--   run counts against your metered time.
scheduleRunConfiguration_billingMethod :: Lens' ScheduleRunConfiguration (Maybe BillingMethod)

-- | Input <tt>CustomerArtifactPaths</tt> object for the scheduled run
--   configuration.
scheduleRunConfiguration_customerArtifactPaths :: Lens' ScheduleRunConfiguration (Maybe CustomerArtifactPaths)

-- | An array of ARNs for your VPC endpoint configurations.
scheduleRunConfiguration_vpceConfigurationArns :: Lens' ScheduleRunConfiguration (Maybe [Text])

-- | Reserved for internal use.
scheduleRunConfiguration_networkProfileArn :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | The ARN of the extra data for the run. The extra data is a .zip file
--   that AWS Device Farm extracts to external data for Android or the
--   app's sandbox for iOS.
scheduleRunConfiguration_extraDataPackageArn :: Lens' ScheduleRunConfiguration (Maybe Text)

-- | Information about the location that is used for the run.
scheduleRunConfiguration_location :: Lens' ScheduleRunConfiguration (Maybe Location)

-- | The ARN of the uploaded test to be run.
scheduleRunTest_testPackageArn :: Lens' ScheduleRunTest (Maybe Text)

-- | The ARN of the YAML-formatted test specification.
scheduleRunTest_testSpecArn :: Lens' ScheduleRunTest (Maybe Text)

-- | The test's filter.
scheduleRunTest_filter :: Lens' ScheduleRunTest (Maybe Text)

-- | The test's parameters, such as test framework parameters and fixture
--   settings. Parameters are represented by name-value pairs of strings.
--   
--   For all tests:
--   
--   <ul>
--   <li><tt>app_performance_monitoring</tt>: Performance monitoring is
--   enabled by default. Set this parameter to false to disable it.</li>
--   </ul>
--   
--   For Calabash tests:
--   
--   <ul>
--   <li>profile: A cucumber profile (for example,
--   <tt>my_profile_name</tt>).</li>
--   <li>tags: You can limit execution to features or scenarios that have
--   (or don't have) certain tags (for example, @smoke or
--   @smoke,~@wip).</li>
--   </ul>
--   
--   For Appium tests (all types):
--   
--   <ul>
--   <li>appium_version: The Appium version. Currently supported values are
--   1.6.5 (and later), latest, and default.<ul><li>latest runs the latest
--   Appium version supported by Device Farm (1.9.1).</li><li>For default,
--   Device Farm selects a compatible version of Appium for the device. The
--   current behavior is to run 1.7.2 on Android devices and iOS 9 and
--   earlier and 1.7.2 for iOS 10 and later.</li><li>This behavior is
--   subject to change.</li></ul></li>
--   </ul>
--   
--   For fuzz tests (Android only):
--   
--   <ul>
--   <li>event_count: The number of events, between 1 and 10000, that the
--   UI fuzz test should perform.</li>
--   <li>throttle: The time, in ms, between 0 and 1000, that the UI fuzz
--   test should wait between events.</li>
--   <li>seed: A seed to use for randomizing the UI fuzz test. Using the
--   same seed value between tests ensures identical event sequences.</li>
--   </ul>
--   
--   For Explorer tests:
--   
--   <ul>
--   <li>username: A user name to use if the Explorer encounters a login
--   form. If not supplied, no user name is inserted.</li>
--   <li>password: A password to use if the Explorer encounters a login
--   form. If not supplied, no password is inserted.</li>
--   </ul>
--   
--   For Instrumentation:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   For XCTest and XCTestUI:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test class: <tt>LoginTests</tt></li><li>Running a multiple test
--   classes: <tt>LoginTests,SmokeTests</tt></li><li>Running a single test:
--   <tt>LoginTests/testValid</tt></li><li>Running multiple tests:
--   <tt>LoginTests/testValid,LoginTests/testInvalid</tt></li></ul></li>
--   </ul>
--   
--   For UIAutomator:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
scheduleRunTest_parameters :: Lens' ScheduleRunTest (Maybe (HashMap Text Text))

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
scheduleRunTest_type :: Lens' ScheduleRunTest TestType

-- | The suite's result counters.
suite_counters :: Lens' Suite (Maybe Counters)

-- | The suite's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
suite_status :: Lens' Suite (Maybe ExecutionStatus)

-- | The suite's start time.
suite_started :: Lens' Suite (Maybe UTCTime)

-- | The suite's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
suite_result :: Lens' Suite (Maybe ExecutionResult)

-- | A message about the suite's result.
suite_message :: Lens' Suite (Maybe Text)

-- | The suite's ARN.
suite_arn :: Lens' Suite (Maybe Text)

-- | The suite's name.
suite_name :: Lens' Suite (Maybe Text)

-- | The suite's stop time.
suite_stopped :: Lens' Suite (Maybe UTCTime)

-- | The suite's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLOREROnly available for Android; an app explorer that
--   traverses an Android app, interacting with it and capturing
--   screenshots at the same time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
suite_type :: Lens' Suite (Maybe TestType)

-- | When the suite was created.
suite_created :: Lens' Suite (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test
--   suite.
suite_deviceMinutes :: Lens' Suite (Maybe DeviceMinutes)

-- | One part of a key-value pair that makes up a tag. A <tt>key</tt> is a
--   general label that acts like a category for more specific tag values.
tag_key :: Lens' Tag Text

-- | The optional part of a key-value pair that makes up a tag. A
--   <tt>value</tt> acts as a descriptor in a tag category (key).
tag_value :: Lens' Tag Text

-- | The test's result counters.
test_counters :: Lens' Test (Maybe Counters)

-- | The test's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
test_status :: Lens' Test (Maybe ExecutionStatus)

-- | The test's start time.
test_started :: Lens' Test (Maybe UTCTime)

-- | The test's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
test_result :: Lens' Test (Maybe ExecutionResult)

-- | A message about the test's result.
test_message :: Lens' Test (Maybe Text)

-- | The test's ARN.
test_arn :: Lens' Test (Maybe Text)

-- | The test's name.
test_name :: Lens' Test (Maybe Text)

-- | The test's stop time.
test_stopped :: Lens' Test (Maybe UTCTime)

-- | The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
test_type :: Lens' Test (Maybe TestType)

-- | When the test was created.
test_created :: Lens' Test (Maybe UTCTime)

-- | Represents the total (metered or unmetered) minutes used by the test.
test_deviceMinutes :: Lens' Test (Maybe DeviceMinutes)

-- | The VPC security groups and subnets that are attached to a project.
testGridProject_vpcConfig :: Lens' TestGridProject (Maybe TestGridVpcConfig)

-- | The ARN for the project.
testGridProject_arn :: Lens' TestGridProject (Maybe Text)

-- | A human-readable name for the project.
testGridProject_name :: Lens' TestGridProject (Maybe Text)

-- | A human-readable description for the project.
testGridProject_description :: Lens' TestGridProject (Maybe Text)

-- | When the project was created.
testGridProject_created :: Lens' TestGridProject (Maybe UTCTime)

-- | The state of the session.
testGridSession_status :: Lens' TestGridSession (Maybe TestGridSessionStatus)

-- | The ARN of the session.
testGridSession_arn :: Lens' TestGridSession (Maybe Text)

-- | A JSON object of options and parameters passed to the Selenium
--   WebDriver.
testGridSession_seleniumProperties :: Lens' TestGridSession (Maybe Text)

-- | The time the session ended.
testGridSession_ended :: Lens' TestGridSession (Maybe UTCTime)

-- | The number of billed minutes that were used for this session.
testGridSession_billingMinutes :: Lens' TestGridSession (Maybe Double)

-- | The time that the session was started.
testGridSession_created :: Lens' TestGridSession (Maybe UTCTime)

-- | The time that the session invoked the action.
testGridSessionAction_started :: Lens' TestGridSessionAction (Maybe UTCTime)

-- | The time, in milliseconds, that the action took to complete in the
--   browser.
testGridSessionAction_duration :: Lens' TestGridSessionAction (Maybe Integer)

-- | HTTP status code returned to the browser when the action was taken.
testGridSessionAction_statusCode :: Lens' TestGridSessionAction (Maybe Text)

-- | The action taken by the session.
testGridSessionAction_action :: Lens' TestGridSessionAction (Maybe Text)

-- | HTTP method that the browser used to make the request.
testGridSessionAction_requestMethod :: Lens' TestGridSessionAction (Maybe Text)

-- | The file name of the artifact.
testGridSessionArtifact_filename :: Lens' TestGridSessionArtifact (Maybe Text)

-- | A semi-stable URL to the content of the object.
testGridSessionArtifact_url :: Lens' TestGridSessionArtifact (Maybe Text)

-- | The kind of artifact.
testGridSessionArtifact_type :: Lens' TestGridSessionArtifact (Maybe TestGridSessionArtifactType)

-- | A list of VPC security group IDs in your Amazon VPC.
testGridVpcConfig_securityGroupIds :: Lens' TestGridVpcConfig (NonEmpty Text)

-- | A list of VPC subnet IDs in your Amazon VPC.
testGridVpcConfig_subnetIds :: Lens' TestGridVpcConfig (NonEmpty Text)

-- | The ID of the Amazon VPC.
testGridVpcConfig_vpcId :: Lens' TestGridVpcConfig Text

-- | The total number of free trial minutes that the account started with.
trialMinutes_total :: Lens' TrialMinutes (Maybe Double)

-- | The number of free trial minutes remaining in the account.
trialMinutes_remaining :: Lens' TrialMinutes (Maybe Double)

-- | A message about the unique problems' result.
uniqueProblem_message :: Lens' UniqueProblem (Maybe Text)

-- | Information about the problems.
uniqueProblem_problems :: Lens' UniqueProblem (Maybe [Problem])

-- | The upload's status.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>FAILED</li>
--   <li>INITIALIZED</li>
--   <li>PROCESSING</li>
--   <li>SUCCEEDED</li>
--   </ul>
upload_status :: Lens' Upload (Maybe UploadStatus)

-- | The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
upload_contentType :: Lens' Upload (Maybe Text)

-- | A message about the upload's result.
upload_message :: Lens' Upload (Maybe Text)

-- | The upload's category. Allowed values include:
--   
--   <ul>
--   <li>CURATED: An upload managed by AWS Device Farm.</li>
--   <li>PRIVATE: An upload managed by the AWS Device Farm customer.</li>
--   </ul>
upload_category :: Lens' Upload (Maybe UploadCategory)

-- | The upload's ARN.
upload_arn :: Lens' Upload (Maybe Text)

-- | The upload's metadata. For example, for Android, this contains
--   information that is parsed from the manifest and is displayed in the
--   AWS Device Farm console after the associated app is uploaded.
upload_metadata :: Lens' Upload (Maybe Text)

-- | The upload's file name.
upload_name :: Lens' Upload (Maybe Text)

-- | The presigned Amazon S3 URL that was used to store a file using a PUT
--   request.
upload_url :: Lens' Upload (Maybe Text)

-- | The upload's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
upload_type :: Lens' Upload (Maybe UploadType)

-- | When the upload was created.
upload_created :: Lens' Upload (Maybe UTCTime)

-- | The friendly name you give to your VPC endpoint configuration to
--   manage your configurations more easily.
vPCEConfiguration_vpceConfigurationName :: Lens' VPCEConfiguration (Maybe Text)

-- | An optional description that provides details about your VPC endpoint
--   configuration.
vPCEConfiguration_vpceConfigurationDescription :: Lens' VPCEConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the VPC endpoint configuration.
vPCEConfiguration_arn :: Lens' VPCEConfiguration (Maybe Text)

-- | The DNS name that maps to the private IP address of the service you
--   want to access.
vPCEConfiguration_serviceDnsName :: Lens' VPCEConfiguration (Maybe Text)

-- | The name of the VPC endpoint service running in your AWS account that
--   you want Device Farm to test.
vPCEConfiguration_vpceServiceName :: Lens' VPCEConfiguration (Maybe Text)


module Network.AWS.DeviceFarm.Waiters


-- | Derived from API version <tt>2015-06-23</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Welcome to the AWS Device Farm API documentation, which contains APIs
--   for:
--   
--   <ul>
--   <li>Testing on desktop browsersDevice Farm makes it possible for you
--   to test your web applications on desktop browsers using Selenium. The
--   APIs for desktop browser testing contain <tt>TestGrid</tt> in their
--   names. For more information, see <a>Testing Web Applications on
--   Selenium with Device Farm</a>.</li>
--   <li>Testing on real mobile devicesDevice Farm makes it possible for
--   you to test apps on physical phones, tablets, and other devices in the
--   cloud. For more information, see the <a>Device Farm Developer
--   Guide</a>.</li>
--   </ul>
module Network.AWS.DeviceFarm

-- | API version <tt>2015-06-23</tt> of the Amazon Device Farm SDK
--   configuration.
defaultService :: Service

-- | Exception gets thrown when a user is not eligible to perform the
--   specified transaction.
_NotEligibleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid argument was specified.
_ArgumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified entity was not found.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The list of tags on the repository is over the limit. The maximum
--   number of tags that can be applied to a repository is 50.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was an error with the update request, or you do not have
--   sufficient permissions to update this VPC endpoint configuration.
_InvalidOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a problem with the service account.
_ServiceAccountException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation was not successful. Try again.
_TagOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An entity with the same name already exists.
_IdempotencyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request doesn't comply with the AWS Identity and Access Management
--   (IAM) tag policy. Correct your request and then retry it.
_TagPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal exception was raised in the service. Contact
--   <a>aws-devicefarm-support@amazon.com</a> if you see this error.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested object could not be deleted.
_CannotDeleteException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A limit was exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Represents a request to the create upload operation.
--   
--   <i>See:</i> <a>newCreateUpload</a> smart constructor.
data CreateUpload
CreateUpload' :: Maybe Text -> Text -> Text -> UploadType -> CreateUpload

-- | Create a value of <a>CreateUpload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:CreateUpload'</a>, <a>createUpload_contentType</a>
--   - The upload's content type (for example,
--   <tt>application/octet-stream</tt>).
--   
--   <a>$sel:projectArn:CreateUpload'</a>, <a>createUpload_projectArn</a> -
--   The ARN of the project for the upload.
--   
--   <a>$sel:name:CreateUpload'</a>, <a>createUpload_name</a> - The
--   upload's file name. The name should not contain any forward slashes
--   (<tt>/</tt>). If you are uploading an iOS app, the file name must end
--   with the <tt>.ipa</tt> extension. If you are uploading an Android app,
--   the file name must end with the <tt>.apk</tt> extension. For all
--   others, the file name must end with the <tt>.zip</tt> file extension.
--   
--   <a>$sel:type':CreateUpload'</a>, <a>createUpload_type</a> - The
--   upload's upload type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   If you call <tt>CreateUpload</tt> with <tt>WEB_APP</tt> specified, AWS
--   Device Farm throws an <tt>ArgumentException</tt> error.
newCreateUpload :: Text -> Text -> UploadType -> CreateUpload

-- | Represents the result of a create upload request.
--   
--   <i>See:</i> <a>newCreateUploadResponse</a> smart constructor.
data CreateUploadResponse
CreateUploadResponse' :: Maybe Upload -> Int -> CreateUploadResponse

-- | Create a value of <a>CreateUploadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upload:CreateUploadResponse'</a>,
--   <a>createUploadResponse_upload</a> - The newly created upload.
--   
--   <a>$sel:httpStatus:CreateUploadResponse'</a>,
--   <a>createUploadResponse_httpStatus</a> - The response's http status
--   code.
newCreateUploadResponse :: Int -> CreateUploadResponse

-- | <i>See:</i> <a>newCreateTestGridProject</a> smart constructor.
data CreateTestGridProject
CreateTestGridProject' :: Maybe TestGridVpcConfig -> Maybe Text -> Text -> CreateTestGridProject

-- | Create a value of <a>CreateTestGridProject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:CreateTestGridProject'</a>,
--   <a>createTestGridProject_vpcConfig</a> - The VPC security groups and
--   subnets that are attached to a project.
--   
--   <a>$sel:description:CreateTestGridProject'</a>,
--   <a>createTestGridProject_description</a> - Human-readable description
--   of the project.
--   
--   <a>$sel:name:CreateTestGridProject'</a>,
--   <a>createTestGridProject_name</a> - Human-readable name of the
--   Selenium testing project.
newCreateTestGridProject :: Text -> CreateTestGridProject

-- | <i>See:</i> <a>newCreateTestGridProjectResponse</a> smart constructor.
data CreateTestGridProjectResponse
CreateTestGridProjectResponse' :: Maybe TestGridProject -> Int -> CreateTestGridProjectResponse

-- | Create a value of <a>CreateTestGridProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testGridProject:CreateTestGridProjectResponse'</a>,
--   <a>createTestGridProjectResponse_testGridProject</a> - ARN of the
--   Selenium testing project that was created.
--   
--   <a>$sel:httpStatus:CreateTestGridProjectResponse'</a>,
--   <a>createTestGridProjectResponse_httpStatus</a> - The response's http
--   status code.
newCreateTestGridProjectResponse :: Int -> CreateTestGridProjectResponse

-- | <i>See:</i> <a>newListTestGridSessionArtifacts</a> smart constructor.
data ListTestGridSessionArtifacts
ListTestGridSessionArtifacts' :: Maybe Text -> Maybe Natural -> Maybe TestGridSessionArtifactCategory -> Text -> ListTestGridSessionArtifacts

-- | Create a value of <a>ListTestGridSessionArtifacts</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifacts_nextToken</a> - Pagination token.
--   
--   <a>$sel:maxResult:ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifacts_maxResult</a> - The maximum number of
--   results to be returned by a request.
--   
--   <a>$sel:type':ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifacts_type</a> - Limit results to a
--   specified type of artifact.
--   
--   <a>$sel:sessionArn:ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifacts_sessionArn</a> - The ARN of a
--   TestGridSession.
newListTestGridSessionArtifacts :: Text -> ListTestGridSessionArtifacts

-- | <i>See:</i> <a>newListTestGridSessionArtifactsResponse</a> smart
--   constructor.
data ListTestGridSessionArtifactsResponse
ListTestGridSessionArtifactsResponse' :: Maybe Text -> Maybe [TestGridSessionArtifact] -> Int -> ListTestGridSessionArtifactsResponse

-- | Create a value of <a>ListTestGridSessionArtifactsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessionArtifacts'</a>,
--   <a>listTestGridSessionArtifactsResponse_nextToken</a> - Pagination
--   token.
--   
--   <a>$sel:artifacts:ListTestGridSessionArtifactsResponse'</a>,
--   <a>listTestGridSessionArtifactsResponse_artifacts</a> - A list of test
--   grid session artifacts for a TestGridSession.
--   
--   <a>$sel:httpStatus:ListTestGridSessionArtifactsResponse'</a>,
--   <a>listTestGridSessionArtifactsResponse_httpStatus</a> - The
--   response's http status code.
newListTestGridSessionArtifactsResponse :: Int -> ListTestGridSessionArtifactsResponse

-- | <i>See:</i> <a>newListTestGridSessionActions</a> smart constructor.
data ListTestGridSessionActions
ListTestGridSessionActions' :: Maybe Text -> Maybe Natural -> Text -> ListTestGridSessionActions

-- | Create a value of <a>ListTestGridSessionActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessionActions'</a>,
--   <a>listTestGridSessionActions_nextToken</a> - Pagination token.
--   
--   <a>$sel:maxResult:ListTestGridSessionActions'</a>,
--   <a>listTestGridSessionActions_maxResult</a> - The maximum number of
--   sessions to return per response.
--   
--   <a>$sel:sessionArn:ListTestGridSessionActions'</a>,
--   <a>listTestGridSessionActions_sessionArn</a> - The ARN of the session
--   to retrieve.
newListTestGridSessionActions :: Text -> ListTestGridSessionActions

-- | <i>See:</i> <a>newListTestGridSessionActionsResponse</a> smart
--   constructor.
data ListTestGridSessionActionsResponse
ListTestGridSessionActionsResponse' :: Maybe Text -> Maybe [TestGridSessionAction] -> Int -> ListTestGridSessionActionsResponse

-- | Create a value of <a>ListTestGridSessionActionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessionActions'</a>,
--   <a>listTestGridSessionActionsResponse_nextToken</a> - Pagination
--   token.
--   
--   <a>$sel:actions:ListTestGridSessionActionsResponse'</a>,
--   <a>listTestGridSessionActionsResponse_actions</a> - The action taken
--   by the session.
--   
--   <a>$sel:httpStatus:ListTestGridSessionActionsResponse'</a>,
--   <a>listTestGridSessionActionsResponse_httpStatus</a> - The response's
--   http status code.
newListTestGridSessionActionsResponse :: Int -> ListTestGridSessionActionsResponse

-- | Represents a request to the list samples operation.
--   
--   <i>See:</i> <a>newListSamples</a> smart constructor.
data ListSamples
ListSamples' :: Maybe Text -> Text -> ListSamples

-- | Create a value of <a>ListSamples</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSamples'</a>, <a>listSamples_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListSamples'</a>, <a>listSamples_arn</a> - The Amazon
--   Resource Name (ARN) of the job used to list samples.
newListSamples :: Text -> ListSamples

-- | Represents the result of a list samples request.
--   
--   <i>See:</i> <a>newListSamplesResponse</a> smart constructor.
data ListSamplesResponse
ListSamplesResponse' :: Maybe Text -> Maybe [Sample] -> Int -> ListSamplesResponse

-- | Create a value of <a>ListSamplesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSamples'</a>,
--   <a>listSamplesResponse_nextToken</a> - If the number of items that are
--   returned is significantly large, this is an identifier that is also
--   returned. It can be used in a subsequent call to this operation to
--   return the next set of items in the list.
--   
--   <a>$sel:samples:ListSamplesResponse'</a>,
--   <a>listSamplesResponse_samples</a> - Information about the samples.
--   
--   <a>$sel:httpStatus:ListSamplesResponse'</a>,
--   <a>listSamplesResponse_httpStatus</a> - The response's http status
--   code.
newListSamplesResponse :: Int -> ListSamplesResponse

-- | Represents a request to the schedule run operation.
--   
--   <i>See:</i> <a>newScheduleRun</a> smart constructor.
data ScheduleRun
ScheduleRun' :: Maybe Text -> Maybe ScheduleRunConfiguration -> Maybe DeviceSelectionConfiguration -> Maybe ExecutionConfiguration -> Maybe Text -> Maybe Text -> Text -> ScheduleRunTest -> ScheduleRun

-- | Create a value of <a>ScheduleRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devicePoolArn:ScheduleRun'</a>,
--   <a>scheduleRun_devicePoolArn</a> - The ARN of the device pool for the
--   run to be scheduled.
--   
--   <a>$sel:configuration:ScheduleRun'</a>,
--   <a>scheduleRun_configuration</a> - Information about the settings for
--   the run to be scheduled.
--   
--   <a>$sel:deviceSelectionConfiguration:ScheduleRun'</a>,
--   <a>scheduleRun_deviceSelectionConfiguration</a> - The filter criteria
--   used to dynamically select a set of devices for a test run and the
--   maximum number of devices to be included in the run.
--   
--   Either <b><tt>devicePoolArn</tt></b> or
--   <b><tt>deviceSelectionConfiguration</tt></b> is required in a request.
--   
--   <a>$sel:executionConfiguration:ScheduleRun'</a>,
--   <a>scheduleRun_executionConfiguration</a> - Specifies configuration
--   information about a test run, such as the execution timeout (in
--   minutes).
--   
--   <a>$sel:name:ScheduleRun'</a>, <a>scheduleRun_name</a> - The name for
--   the run to be scheduled.
--   
--   <a>$sel:appArn:ScheduleRun'</a>, <a>scheduleRun_appArn</a> - The ARN
--   of an application package to run tests against, created with
--   CreateUpload. See ListUploads.
--   
--   <a>$sel:projectArn:ScheduleRun'</a>, <a>scheduleRun_projectArn</a> -
--   The ARN of the project for the run to be scheduled.
--   
--   <a>$sel:test:ScheduleRun'</a>, <a>scheduleRun_test</a> - Information
--   about the test for the run to be scheduled.
newScheduleRun :: Text -> ScheduleRunTest -> ScheduleRun

-- | Represents the result of a schedule run request.
--   
--   <i>See:</i> <a>newScheduleRunResponse</a> smart constructor.
data ScheduleRunResponse
ScheduleRunResponse' :: Maybe Run -> Int -> ScheduleRunResponse

-- | Create a value of <a>ScheduleRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:run:ScheduleRunResponse'</a>, <a>scheduleRunResponse_run</a> -
--   Information about the scheduled run.
--   
--   <a>$sel:httpStatus:ScheduleRunResponse'</a>,
--   <a>scheduleRunResponse_httpStatus</a> - The response's http status
--   code.
newScheduleRunResponse :: Int -> ScheduleRunResponse

-- | Represents a request to the list projects operation.
--   
--   <i>See:</i> <a>newListProjects</a> smart constructor.
data ListProjects
ListProjects' :: Maybe Text -> Maybe Text -> ListProjects

-- | Create a value of <a>ListProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>, <a>listProjects_nextToken</a> -
--   An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
--   
--   <a>$sel:arn:ListProjects'</a>, <a>listProjects_arn</a> - Optional. If
--   no Amazon Resource Name (ARN) is specified, then AWS Device Farm
--   returns a list of all projects for the AWS account. You can also
--   specify a project ARN.
newListProjects :: ListProjects

-- | Represents the result of a list projects request.
--   
--   <i>See:</i> <a>newListProjectsResponse</a> smart constructor.
data ListProjectsResponse
ListProjectsResponse' :: Maybe Text -> Maybe [Project] -> Int -> ListProjectsResponse

-- | Create a value of <a>ListProjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListProjects'</a>,
--   <a>listProjectsResponse_nextToken</a> - If the number of items that
--   are returned is significantly large, this is an identifier that is
--   also returned. It can be used in a subsequent call to this operation
--   to return the next set of items in the list.
--   
--   <a>$sel:projects:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_projects</a> - Information about the projects.
--   
--   <a>$sel:httpStatus:ListProjectsResponse'</a>,
--   <a>listProjectsResponse_httpStatus</a> - The response's http status
--   code.
newListProjectsResponse :: Int -> ListProjectsResponse

-- | Represents a request to the get device pool compatibility operation.
--   
--   <i>See:</i> <a>newGetDevicePoolCompatibility</a> smart constructor.
data GetDevicePoolCompatibility
GetDevicePoolCompatibility' :: Maybe TestType -> Maybe ScheduleRunConfiguration -> Maybe Text -> Maybe ScheduleRunTest -> Text -> GetDevicePoolCompatibility

-- | Create a value of <a>GetDevicePoolCompatibility</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testType:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_testType</a> - The test type for the
--   specified device pool.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ.</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT.</li>
--   <li>APPIUM_JAVA_TESTNG.</li>
--   <li>APPIUM_PYTHON.</li>
--   <li>APPIUM_NODE.</li>
--   <li>APPIUM_RUBY.</li>
--   <li>APPIUM_WEB_JAVA_JUNIT.</li>
--   <li>APPIUM_WEB_JAVA_TESTNG.</li>
--   <li>APPIUM_WEB_PYTHON.</li>
--   <li>APPIUM_WEB_NODE.</li>
--   <li>APPIUM_WEB_RUBY.</li>
--   <li>CALABASH.</li>
--   <li>INSTRUMENTATION.</li>
--   <li>UIAUTOMATION.</li>
--   <li>UIAUTOMATOR.</li>
--   <li>XCTEST.</li>
--   <li>XCTEST_UI.</li>
--   </ul>
--   
--   <a>$sel:configuration:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_configuration</a> - An object that
--   contains information about the settings for a run.
--   
--   <a>$sel:appArn:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_appArn</a> - The ARN of the app that is
--   associated with the specified device pool.
--   
--   <a>$sel:test:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_test</a> - Information about the
--   uploaded test to be run against the device pool.
--   
--   <a>$sel:devicePoolArn:GetDevicePoolCompatibility'</a>,
--   <a>getDevicePoolCompatibility_devicePoolArn</a> - The device pool's
--   ARN.
newGetDevicePoolCompatibility :: Text -> GetDevicePoolCompatibility

-- | Represents the result of describe device pool compatibility request.
--   
--   <i>See:</i> <a>newGetDevicePoolCompatibilityResponse</a> smart
--   constructor.
data GetDevicePoolCompatibilityResponse
GetDevicePoolCompatibilityResponse' :: Maybe [DevicePoolCompatibilityResult] -> Maybe [DevicePoolCompatibilityResult] -> Int -> GetDevicePoolCompatibilityResponse

-- | Create a value of <a>GetDevicePoolCompatibilityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:incompatibleDevices:GetDevicePoolCompatibilityResponse'</a>,
--   <a>getDevicePoolCompatibilityResponse_incompatibleDevices</a> -
--   Information about incompatible devices.
--   
--   <a>$sel:compatibleDevices:GetDevicePoolCompatibilityResponse'</a>,
--   <a>getDevicePoolCompatibilityResponse_compatibleDevices</a> -
--   Information about compatible devices.
--   
--   <a>$sel:httpStatus:GetDevicePoolCompatibilityResponse'</a>,
--   <a>getDevicePoolCompatibilityResponse_httpStatus</a> - The response's
--   http status code.
newGetDevicePoolCompatibilityResponse :: Int -> GetDevicePoolCompatibilityResponse

-- | <i>See:</i> <a>newCreateVPCEConfiguration</a> smart constructor.
data CreateVPCEConfiguration
CreateVPCEConfiguration' :: Maybe Text -> Text -> Text -> Text -> CreateVPCEConfiguration

-- | Create a value of <a>CreateVPCEConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfigurationDescription:CreateVPCEConfiguration'</a>,
--   <a>createVPCEConfiguration_vpceConfigurationDescription</a> - An
--   optional description that provides details about your VPC endpoint
--   configuration.
--   
--   <a>$sel:vpceConfigurationName:CreateVPCEConfiguration'</a>,
--   <a>createVPCEConfiguration_vpceConfigurationName</a> - The friendly
--   name you give to your VPC endpoint configuration, to manage your
--   configurations more easily.
--   
--   <a>$sel:vpceServiceName:CreateVPCEConfiguration'</a>,
--   <a>createVPCEConfiguration_vpceServiceName</a> - The name of the VPC
--   endpoint service running in your AWS account that you want Device Farm
--   to test.
--   
--   <a>$sel:serviceDnsName:CreateVPCEConfiguration'</a>,
--   <a>createVPCEConfiguration_serviceDnsName</a> - The DNS name of the
--   service running in your VPC that you want Device Farm to test.
newCreateVPCEConfiguration :: Text -> Text -> Text -> CreateVPCEConfiguration

-- | <i>See:</i> <a>newCreateVPCEConfigurationResponse</a> smart
--   constructor.
data CreateVPCEConfigurationResponse
CreateVPCEConfigurationResponse' :: Maybe VPCEConfiguration -> Int -> CreateVPCEConfigurationResponse

-- | Create a value of <a>CreateVPCEConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfiguration:CreateVPCEConfigurationResponse'</a>,
--   <a>createVPCEConfigurationResponse_vpceConfiguration</a> - An object
--   that contains information about your VPC endpoint configuration.
--   
--   <a>$sel:httpStatus:CreateVPCEConfigurationResponse'</a>,
--   <a>createVPCEConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newCreateVPCEConfigurationResponse :: Int -> CreateVPCEConfigurationResponse

-- | <i>See:</i> <a>newUpdateNetworkProfile</a> smart constructor.
data UpdateNetworkProfile
UpdateNetworkProfile' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Natural -> Maybe Natural -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe NetworkProfileType -> Text -> UpdateNetworkProfile

-- | Create a value of <a>UpdateNetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uplinkJitterMs:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_uplinkJitterMs</a> - Time variation in the
--   delay of received packets in milliseconds as an integer from 0 to
--   2000.
--   
--   <a>$sel:downlinkBandwidthBits:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_downlinkBandwidthBits</a> - The data
--   throughput rate in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:downlinkDelayMs:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_downlinkDelayMs</a> - Delay time for all
--   packets to destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkJitterMs:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_downlinkJitterMs</a> - Time variation in the
--   delay of received packets in milliseconds as an integer from 0 to
--   2000.
--   
--   <a>$sel:uplinkLossPercent:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_uplinkLossPercent</a> - Proportion of
--   transmitted packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:downlinkLossPercent:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_downlinkLossPercent</a> - Proportion of
--   received packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:name:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_name</a> - The name of the network profile
--   about which you are returning information.
--   
--   <a>$sel:uplinkBandwidthBits:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_uplinkBandwidthBits</a> - The data throughput
--   rate in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:uplinkDelayMs:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_uplinkDelayMs</a> - Delay time for all packets
--   to destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:description:UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_description</a> - The description of the
--   network profile about which you are returning information.
--   
--   <a>$sel:type':UpdateNetworkProfile'</a>,
--   <a>updateNetworkProfile_type</a> - The type of network profile to
--   return information about. Valid values are listed here.
--   
--   <a>$sel:arn:UpdateNetworkProfile'</a>, <a>updateNetworkProfile_arn</a>
--   - The Amazon Resource Name (ARN) of the project for which you want to
--   update network profile settings.
newUpdateNetworkProfile :: Text -> UpdateNetworkProfile

-- | <i>See:</i> <a>newUpdateNetworkProfileResponse</a> smart constructor.
data UpdateNetworkProfileResponse
UpdateNetworkProfileResponse' :: Maybe NetworkProfile -> Int -> UpdateNetworkProfileResponse

-- | Create a value of <a>UpdateNetworkProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkProfile:UpdateNetworkProfileResponse'</a>,
--   <a>updateNetworkProfileResponse_networkProfile</a> - A list of the
--   available network profiles.
--   
--   <a>$sel:httpStatus:UpdateNetworkProfileResponse'</a>,
--   <a>updateNetworkProfileResponse_httpStatus</a> - The response's http
--   status code.
newUpdateNetworkProfileResponse :: Int -> UpdateNetworkProfileResponse

-- | <i>See:</i> <a>newListNetworkProfiles</a> smart constructor.
data ListNetworkProfiles
ListNetworkProfiles' :: Maybe Text -> Maybe NetworkProfileType -> Text -> ListNetworkProfiles

-- | Create a value of <a>ListNetworkProfiles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNetworkProfiles'</a>,
--   <a>listNetworkProfiles_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:type':ListNetworkProfiles'</a>,
--   <a>listNetworkProfiles_type</a> - The type of network profile to
--   return information about. Valid values are listed here.
--   
--   <a>$sel:arn:ListNetworkProfiles'</a>, <a>listNetworkProfiles_arn</a> -
--   The Amazon Resource Name (ARN) of the project for which you want to
--   list network profiles.
newListNetworkProfiles :: Text -> ListNetworkProfiles

-- | <i>See:</i> <a>newListNetworkProfilesResponse</a> smart constructor.
data ListNetworkProfilesResponse
ListNetworkProfilesResponse' :: Maybe Text -> Maybe [NetworkProfile] -> Int -> ListNetworkProfilesResponse

-- | Create a value of <a>ListNetworkProfilesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNetworkProfiles'</a>,
--   <a>listNetworkProfilesResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:networkProfiles:ListNetworkProfilesResponse'</a>,
--   <a>listNetworkProfilesResponse_networkProfiles</a> - A list of the
--   available network profiles.
--   
--   <a>$sel:httpStatus:ListNetworkProfilesResponse'</a>,
--   <a>listNetworkProfilesResponse_httpStatus</a> - The response's http
--   status code.
newListNetworkProfilesResponse :: Int -> ListNetworkProfilesResponse

-- | <i>See:</i> <a>newDeleteNetworkProfile</a> smart constructor.
data DeleteNetworkProfile
DeleteNetworkProfile' :: Text -> DeleteNetworkProfile

-- | Create a value of <a>DeleteNetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteNetworkProfile'</a>, <a>deleteNetworkProfile_arn</a>
--   - The ARN of the network profile to delete.
newDeleteNetworkProfile :: Text -> DeleteNetworkProfile

-- | <i>See:</i> <a>newDeleteNetworkProfileResponse</a> smart constructor.
data DeleteNetworkProfileResponse
DeleteNetworkProfileResponse' :: Int -> DeleteNetworkProfileResponse

-- | Create a value of <a>DeleteNetworkProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteNetworkProfileResponse'</a>,
--   <a>deleteNetworkProfileResponse_httpStatus</a> - The response's http
--   status code.
newDeleteNetworkProfileResponse :: Int -> DeleteNetworkProfileResponse

-- | Represents the request to install an Android application (in .apk
--   format) or an iOS application (in .ipa format) as part of a remote
--   access session.
--   
--   <i>See:</i> <a>newInstallToRemoteAccessSession</a> smart constructor.
data InstallToRemoteAccessSession
InstallToRemoteAccessSession' :: Text -> Text -> InstallToRemoteAccessSession

-- | Create a value of <a>InstallToRemoteAccessSession</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSessionArn:InstallToRemoteAccessSession'</a>,
--   <a>installToRemoteAccessSession_remoteAccessSessionArn</a> - The
--   Amazon Resource Name (ARN) of the remote access session about which
--   you are requesting information.
--   
--   <a>$sel:appArn:InstallToRemoteAccessSession'</a>,
--   <a>installToRemoteAccessSession_appArn</a> - The ARN of the app about
--   which you are requesting information.
newInstallToRemoteAccessSession :: Text -> Text -> InstallToRemoteAccessSession

-- | Represents the response from the server after AWS Device Farm makes a
--   request to install to a remote access session.
--   
--   <i>See:</i> <a>newInstallToRemoteAccessSessionResponse</a> smart
--   constructor.
data InstallToRemoteAccessSessionResponse
InstallToRemoteAccessSessionResponse' :: Maybe Upload -> Int -> InstallToRemoteAccessSessionResponse

-- | Create a value of <a>InstallToRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appUpload:InstallToRemoteAccessSessionResponse'</a>,
--   <a>installToRemoteAccessSessionResponse_appUpload</a> - An app to
--   upload or that has been uploaded.
--   
--   <a>$sel:httpStatus:InstallToRemoteAccessSessionResponse'</a>,
--   <a>installToRemoteAccessSessionResponse_httpStatus</a> - The
--   response's http status code.
newInstallToRemoteAccessSessionResponse :: Int -> InstallToRemoteAccessSessionResponse

-- | Represents the request to stop a specific run.
--   
--   <i>See:</i> <a>newStopRun</a> smart constructor.
data StopRun
StopRun' :: Text -> StopRun

-- | Create a value of <a>StopRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StopRun'</a>, <a>stopRun_arn</a> - Represents the Amazon
--   Resource Name (ARN) of the Device Farm run to stop.
newStopRun :: Text -> StopRun

-- | Represents the results of your stop run attempt.
--   
--   <i>See:</i> <a>newStopRunResponse</a> smart constructor.
data StopRunResponse
StopRunResponse' :: Maybe Run -> Int -> StopRunResponse

-- | Create a value of <a>StopRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:run:StopRunResponse'</a>, <a>stopRunResponse_run</a> - The run
--   that was stopped.
--   
--   <a>$sel:httpStatus:StopRunResponse'</a>,
--   <a>stopRunResponse_httpStatus</a> - The response's http status code.
newStopRunResponse :: Int -> StopRunResponse

-- | Represents the request to list all offerings.
--   
--   <i>See:</i> <a>newListOfferings</a> smart constructor.
data ListOfferings
ListOfferings' :: Maybe Text -> ListOfferings

-- | Create a value of <a>ListOfferings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferings'</a>, <a>listOfferings_nextToken</a> -
--   An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
newListOfferings :: ListOfferings

-- | Represents the return values of the list of offerings.
--   
--   <i>See:</i> <a>newListOfferingsResponse</a> smart constructor.
data ListOfferingsResponse
ListOfferingsResponse' :: Maybe Text -> Maybe [Offering] -> Int -> ListOfferingsResponse

-- | Create a value of <a>ListOfferingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferings'</a>,
--   <a>listOfferingsResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:offerings:ListOfferingsResponse'</a>,
--   <a>listOfferingsResponse_offerings</a> - A value that represents the
--   list offering results.
--   
--   <a>$sel:httpStatus:ListOfferingsResponse'</a>,
--   <a>listOfferingsResponse_httpStatus</a> - The response's http status
--   code.
newListOfferingsResponse :: Int -> ListOfferingsResponse

-- | Represents a request to the create project operation.
--   
--   <i>See:</i> <a>newCreateProject</a> smart constructor.
data CreateProject
CreateProject' :: Maybe Int -> Text -> CreateProject

-- | Create a value of <a>CreateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultJobTimeoutMinutes:CreateProject'</a>,
--   <a>createProject_defaultJobTimeoutMinutes</a> - Sets the execution
--   timeout value (in minutes) for a project. All test runs in this
--   project use the specified execution timeout value unless overridden
--   when scheduling a run.
--   
--   <a>$sel:name:CreateProject'</a>, <a>createProject_name</a> - The
--   project's name.
newCreateProject :: Text -> CreateProject

-- | Represents the result of a create project request.
--   
--   <i>See:</i> <a>newCreateProjectResponse</a> smart constructor.
data CreateProjectResponse
CreateProjectResponse' :: Maybe Project -> Int -> CreateProjectResponse

-- | Create a value of <a>CreateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:CreateProjectResponse'</a>,
--   <a>createProjectResponse_project</a> - The newly created project.
--   
--   <a>$sel:httpStatus:CreateProjectResponse'</a>,
--   <a>createProjectResponse_httpStatus</a> - The response's http status
--   code.
newCreateProjectResponse :: Int -> CreateProjectResponse

-- | Represents a request to the get job operation.
--   
--   <i>See:</i> <a>newGetJob</a> smart constructor.
data GetJob
GetJob' :: Text -> GetJob

-- | Create a value of <a>GetJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetJob'</a>, <a>getJob_arn</a> - The job's ARN.
newGetJob :: Text -> GetJob

-- | Represents the result of a get job request.
--   
--   <i>See:</i> <a>newGetJobResponse</a> smart constructor.
data GetJobResponse
GetJobResponse' :: Maybe Job -> Int -> GetJobResponse

-- | Create a value of <a>GetJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:GetJobResponse'</a>, <a>getJobResponse_job</a> - An object
--   that contains information about the requested job.
--   
--   <a>$sel:httpStatus:GetJobResponse'</a>,
--   <a>getJobResponse_httpStatus</a> - The response's http status code.
newGetJobResponse :: Int -> GetJobResponse

-- | Represents the result of a list devices request.
--   
--   <i>See:</i> <a>newListDevices</a> smart constructor.
data ListDevices
ListDevices' :: Maybe Text -> Maybe Text -> Maybe [DeviceFilter] -> ListDevices

-- | Create a value of <a>ListDevices</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>, <a>listDevices_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListDevices'</a>, <a>listDevices_arn</a> - The Amazon
--   Resource Name (ARN) of the project.
--   
--   <a>$sel:filters:ListDevices'</a>, <a>listDevices_filters</a> - Used to
--   select a set of devices. A filter is made up of an attribute, an
--   operator, and one or more values.
--   
--   <ul>
--   <li>Attribute: The aspect of a device such as platform or model used
--   as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this attribute is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li>Operator: The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li>Values: An array of one or more filter values.<ul><li>The IN and
--   NOT_IN operators take a values array that has one or more
--   elements.</li><li>The other operators require an array with a single
--   element.</li><li>In a request, the AVAILABILITY attribute takes the
--   following values: AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li></ul></li>
--   </ul>
newListDevices :: ListDevices

-- | Represents the result of a list devices operation.
--   
--   <i>See:</i> <a>newListDevicesResponse</a> smart constructor.
data ListDevicesResponse
ListDevicesResponse' :: Maybe Text -> Maybe [Device] -> Int -> ListDevicesResponse

-- | Create a value of <a>ListDevicesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevices'</a>,
--   <a>listDevicesResponse_nextToken</a> - If the number of items that are
--   returned is significantly large, this is an identifier that is also
--   returned. It can be used in a subsequent call to this operation to
--   return the next set of items in the list.
--   
--   <a>$sel:devices:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_devices</a> - Information about the devices.
--   
--   <a>$sel:httpStatus:ListDevicesResponse'</a>,
--   <a>listDevicesResponse_httpStatus</a> - The response's http status
--   code.
newListDevicesResponse :: Int -> ListDevicesResponse

-- | <i>See:</i> <a>newCreateTestGridUrl</a> smart constructor.
data CreateTestGridUrl
CreateTestGridUrl' :: Text -> Natural -> CreateTestGridUrl

-- | Create a value of <a>CreateTestGridUrl</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectArn:CreateTestGridUrl'</a>,
--   <a>createTestGridUrl_projectArn</a> - ARN (from CreateTestGridProject
--   or ListTestGridProjects) to associate with the short-term URL.
--   
--   <a>$sel:expiresInSeconds:CreateTestGridUrl'</a>,
--   <a>createTestGridUrl_expiresInSeconds</a> - Lifetime, in seconds, of
--   the URL.
newCreateTestGridUrl :: Text -> Natural -> CreateTestGridUrl

-- | <i>See:</i> <a>newCreateTestGridUrlResponse</a> smart constructor.
data CreateTestGridUrlResponse
CreateTestGridUrlResponse' :: Maybe (Sensitive Text) -> Maybe POSIX -> Int -> CreateTestGridUrlResponse

-- | Create a value of <a>CreateTestGridUrlResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:url:CreateTestGridUrlResponse'</a>,
--   <a>createTestGridUrlResponse_url</a> - A signed URL, expiring in
--   CreateTestGridUrlRequest$expiresInSeconds seconds, to be passed to a
--   <tt>RemoteWebDriver</tt>.
--   
--   <a>$sel:expires:CreateTestGridUrlResponse'</a>,
--   <a>createTestGridUrlResponse_expires</a> - The number of seconds the
--   URL from CreateTestGridUrlResult$url stays active.
--   
--   <a>$sel:httpStatus:CreateTestGridUrlResponse'</a>,
--   <a>createTestGridUrlResponse_httpStatus</a> - The response's http
--   status code.
newCreateTestGridUrlResponse :: Int -> CreateTestGridUrlResponse

-- | <i>See:</i> <a>newCreateNetworkProfile</a> smart constructor.
data CreateNetworkProfile
CreateNetworkProfile' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Natural -> Maybe Natural -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe NetworkProfileType -> Text -> Text -> CreateNetworkProfile

-- | Create a value of <a>CreateNetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uplinkJitterMs:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_uplinkJitterMs</a> - Time variation in the
--   delay of received packets in milliseconds as an integer from 0 to
--   2000.
--   
--   <a>$sel:downlinkBandwidthBits:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_downlinkBandwidthBits</a> - The data
--   throughput rate in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:downlinkDelayMs:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_downlinkDelayMs</a> - Delay time for all
--   packets to destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkJitterMs:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_downlinkJitterMs</a> - Time variation in the
--   delay of received packets in milliseconds as an integer from 0 to
--   2000.
--   
--   <a>$sel:uplinkLossPercent:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_uplinkLossPercent</a> - Proportion of
--   transmitted packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:downlinkLossPercent:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_downlinkLossPercent</a> - Proportion of
--   received packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:uplinkBandwidthBits:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_uplinkBandwidthBits</a> - The data throughput
--   rate in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:uplinkDelayMs:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_uplinkDelayMs</a> - Delay time for all packets
--   to destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:description:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_description</a> - The description of the
--   network profile.
--   
--   <a>$sel:type':CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_type</a> - The type of network profile to
--   create. Valid values are listed here.
--   
--   <a>$sel:projectArn:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_projectArn</a> - The Amazon Resource Name
--   (ARN) of the project for which you want to create a network profile.
--   
--   <a>$sel:name:CreateNetworkProfile'</a>,
--   <a>createNetworkProfile_name</a> - The name for the new network
--   profile.
newCreateNetworkProfile :: Text -> Text -> CreateNetworkProfile

-- | <i>See:</i> <a>newCreateNetworkProfileResponse</a> smart constructor.
data CreateNetworkProfileResponse
CreateNetworkProfileResponse' :: Maybe NetworkProfile -> Int -> CreateNetworkProfileResponse

-- | Create a value of <a>CreateNetworkProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkProfile:CreateNetworkProfileResponse'</a>,
--   <a>createNetworkProfileResponse_networkProfile</a> - The network
--   profile that is returned by the create network profile request.
--   
--   <a>$sel:httpStatus:CreateNetworkProfileResponse'</a>,
--   <a>createNetworkProfileResponse_httpStatus</a> - The response's http
--   status code.
newCreateNetworkProfileResponse :: Int -> CreateNetworkProfileResponse

-- | Represents a request to the get device request.
--   
--   <i>See:</i> <a>newGetDevice</a> smart constructor.
data GetDevice
GetDevice' :: Text -> GetDevice

-- | Create a value of <a>GetDevice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetDevice'</a>, <a>getDevice_arn</a> - The device type's
--   ARN.
newGetDevice :: Text -> GetDevice

-- | Represents the result of a get device request.
--   
--   <i>See:</i> <a>newGetDeviceResponse</a> smart constructor.
data GetDeviceResponse
GetDeviceResponse' :: Maybe Device -> Int -> GetDeviceResponse

-- | Create a value of <a>GetDeviceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:device:GetDeviceResponse'</a>, <a>getDeviceResponse_device</a>
--   - An object that contains information about the requested device.
--   
--   <a>$sel:httpStatus:GetDeviceResponse'</a>,
--   <a>getDeviceResponse_httpStatus</a> - The response's http status code.
newGetDeviceResponse :: Int -> GetDeviceResponse

-- | <i>See:</i> <a>newCreateInstanceProfile</a> smart constructor.
data CreateInstanceProfile
CreateInstanceProfile' :: Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Text -> CreateInstanceProfile

-- | Create a value of <a>CreateInstanceProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeAppPackagesFromCleanup:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_excludeAppPackagesFromCleanup</a> - An array
--   of strings that specifies the list of app packages that should not be
--   cleaned up from the device after a test run.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
--   
--   <a>$sel:description:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_description</a> - The description of your
--   instance profile.
--   
--   <a>$sel:rebootAfterUse:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_rebootAfterUse</a> - When set to
--   <tt>true</tt>, Device Farm reboots the instance after a test run. The
--   default value is <tt>true</tt>.
--   
--   <a>$sel:packageCleanup:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_packageCleanup</a> - When set to
--   <tt>true</tt>, Device Farm removes app packages after a test run. The
--   default value is <tt>false</tt> for private devices.
--   
--   <a>$sel:name:CreateInstanceProfile'</a>,
--   <a>createInstanceProfile_name</a> - The name of your instance profile.
newCreateInstanceProfile :: Text -> CreateInstanceProfile

-- | <i>See:</i> <a>newCreateInstanceProfileResponse</a> smart constructor.
data CreateInstanceProfileResponse
CreateInstanceProfileResponse' :: Maybe InstanceProfile -> Int -> CreateInstanceProfileResponse

-- | Create a value of <a>CreateInstanceProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceProfile:CreateInstanceProfileResponse'</a>,
--   <a>createInstanceProfileResponse_instanceProfile</a> - An object that
--   contains information about your instance profile.
--   
--   <a>$sel:httpStatus:CreateInstanceProfileResponse'</a>,
--   <a>createInstanceProfileResponse_httpStatus</a> - The response's http
--   status code.
newCreateInstanceProfileResponse :: Int -> CreateInstanceProfileResponse

-- | Represents the request to stop the remote access session.
--   
--   <i>See:</i> <a>newStopRemoteAccessSession</a> smart constructor.
data StopRemoteAccessSession
StopRemoteAccessSession' :: Text -> StopRemoteAccessSession

-- | Create a value of <a>StopRemoteAccessSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StopRemoteAccessSession'</a>,
--   <a>stopRemoteAccessSession_arn</a> - The Amazon Resource Name (ARN) of
--   the remote access session to stop.
newStopRemoteAccessSession :: Text -> StopRemoteAccessSession

-- | Represents the response from the server that describes the remote
--   access session when AWS Device Farm stops the session.
--   
--   <i>See:</i> <a>newStopRemoteAccessSessionResponse</a> smart
--   constructor.
data StopRemoteAccessSessionResponse
StopRemoteAccessSessionResponse' :: Maybe RemoteAccessSession -> Int -> StopRemoteAccessSessionResponse

-- | Create a value of <a>StopRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSession:StopRemoteAccessSessionResponse'</a>,
--   <a>stopRemoteAccessSessionResponse_remoteAccessSession</a> - A
--   container that represents the metadata from the service about the
--   remote access session you are stopping.
--   
--   <a>$sel:httpStatus:StopRemoteAccessSessionResponse'</a>,
--   <a>stopRemoteAccessSessionResponse_httpStatus</a> - The response's
--   http status code.
newStopRemoteAccessSessionResponse :: Int -> StopRemoteAccessSessionResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The Amazon Resource Name (ARN) of
--   the resource or resources from which to delete tags. You can associate
--   tags with the following Device Farm resources: <tt>PROJECT</tt>,
--   <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>, <tt>INSTANCE_PROFILE</tt>,
--   <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>, <tt>DEVICE_POOL</tt>,
--   <tt>DEVICE</tt>, and <tt>VPCE_CONFIGURATION</tt>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | Represents a request to the list runs operation.
--   
--   <i>See:</i> <a>newListRuns</a> smart constructor.
data ListRuns
ListRuns' :: Maybe Text -> Text -> ListRuns

-- | Create a value of <a>ListRuns</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRuns'</a>, <a>listRuns_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListRuns'</a>, <a>listRuns_arn</a> - The Amazon Resource
--   Name (ARN) of the project for which you want to list runs.
newListRuns :: Text -> ListRuns

-- | Represents the result of a list runs request.
--   
--   <i>See:</i> <a>newListRunsResponse</a> smart constructor.
data ListRunsResponse
ListRunsResponse' :: Maybe Text -> Maybe [Run] -> Int -> ListRunsResponse

-- | Create a value of <a>ListRunsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRuns'</a>, <a>listRunsResponse_nextToken</a> -
--   If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
--   
--   <a>$sel:runs:ListRunsResponse'</a>, <a>listRunsResponse_runs</a> -
--   Information about the runs.
--   
--   <a>$sel:httpStatus:ListRunsResponse'</a>,
--   <a>listRunsResponse_httpStatus</a> - The response's http status code.
newListRunsResponse :: Int -> ListRunsResponse

-- | <i>See:</i> <a>newUpdateDeviceInstance</a> smart constructor.
data UpdateDeviceInstance
UpdateDeviceInstance' :: Maybe [Text] -> Maybe Text -> Text -> UpdateDeviceInstance

-- | Create a value of <a>UpdateDeviceInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:labels:UpdateDeviceInstance'</a>,
--   <a>updateDeviceInstance_labels</a> - An array of strings that you want
--   to associate with the device instance.
--   
--   <a>$sel:profileArn:UpdateDeviceInstance'</a>,
--   <a>updateDeviceInstance_profileArn</a> - The ARN of the profile that
--   you want to associate with the device instance.
--   
--   <a>$sel:arn:UpdateDeviceInstance'</a>, <a>updateDeviceInstance_arn</a>
--   - The Amazon Resource Name (ARN) of the device instance.
newUpdateDeviceInstance :: Text -> UpdateDeviceInstance

-- | <i>See:</i> <a>newUpdateDeviceInstanceResponse</a> smart constructor.
data UpdateDeviceInstanceResponse
UpdateDeviceInstanceResponse' :: Maybe DeviceInstance -> Int -> UpdateDeviceInstanceResponse

-- | Create a value of <a>UpdateDeviceInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceInstance:UpdateDeviceInstanceResponse'</a>,
--   <a>updateDeviceInstanceResponse_deviceInstance</a> - An object that
--   contains information about your device instance.
--   
--   <a>$sel:httpStatus:UpdateDeviceInstanceResponse'</a>,
--   <a>updateDeviceInstanceResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceInstanceResponse :: Int -> UpdateDeviceInstanceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The Amazon Resource Name (ARN) of the resource or resources to which
--   to add tags. You can associate tags with the following Device Farm
--   resources: <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add to the resource. A tag is an array of key-value pairs. Tag keys
--   can have a maximum character length of 128 characters. Tag values can
--   have a maximum length of 256 characters.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListDeviceInstances</a> smart constructor.
data ListDeviceInstances
ListDeviceInstances' :: Maybe Text -> Maybe Int -> ListDeviceInstances

-- | Create a value of <a>ListDeviceInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceInstances'</a>,
--   <a>listDeviceInstances_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:maxResults:ListDeviceInstances'</a>,
--   <a>listDeviceInstances_maxResults</a> - An integer that specifies the
--   maximum number of items you want to return in the API response.
newListDeviceInstances :: ListDeviceInstances

-- | <i>See:</i> <a>newListDeviceInstancesResponse</a> smart constructor.
data ListDeviceInstancesResponse
ListDeviceInstancesResponse' :: Maybe Text -> Maybe [DeviceInstance] -> Int -> ListDeviceInstancesResponse

-- | Create a value of <a>ListDeviceInstancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceInstances'</a>,
--   <a>listDeviceInstancesResponse_nextToken</a> - An identifier that can
--   be used in the next call to this operation to return the next set of
--   items in the list.
--   
--   <a>$sel:deviceInstances:ListDeviceInstancesResponse'</a>,
--   <a>listDeviceInstancesResponse_deviceInstances</a> - An object that
--   contains information about your device instances.
--   
--   <a>$sel:httpStatus:ListDeviceInstancesResponse'</a>,
--   <a>listDeviceInstancesResponse_httpStatus</a> - The response's http
--   status code.
newListDeviceInstancesResponse :: Int -> ListDeviceInstancesResponse

-- | Represents a request to the create device pool operation.
--   
--   <i>See:</i> <a>newCreateDevicePool</a> smart constructor.
data CreateDevicePool
CreateDevicePool' :: Maybe Int -> Maybe Text -> Text -> Text -> [Rule] -> CreateDevicePool

-- | Create a value of <a>CreateDevicePool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxDevices:CreateDevicePool'</a>,
--   <a>createDevicePool_maxDevices</a> - The number of devices that Device
--   Farm can add to your device pool. Device Farm adds devices that are
--   available and meet the criteria that you assign for the <tt>rules</tt>
--   parameter. Depending on how many devices meet these constraints, your
--   device pool might contain fewer devices than the value for this
--   parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   <a>$sel:description:CreateDevicePool'</a>,
--   <a>createDevicePool_description</a> - The device pool's description.
--   
--   <a>$sel:projectArn:CreateDevicePool'</a>,
--   <a>createDevicePool_projectArn</a> - The ARN of the project for the
--   device pool.
--   
--   <a>$sel:name:CreateDevicePool'</a>, <a>createDevicePool_name</a> - The
--   device pool's name.
--   
--   <a>$sel:rules:CreateDevicePool'</a>, <a>createDevicePool_rules</a> -
--   The device pool's rules.
newCreateDevicePool :: Text -> Text -> CreateDevicePool

-- | Represents the result of a create device pool request.
--   
--   <i>See:</i> <a>newCreateDevicePoolResponse</a> smart constructor.
data CreateDevicePoolResponse
CreateDevicePoolResponse' :: Maybe DevicePool -> Int -> CreateDevicePoolResponse

-- | Create a value of <a>CreateDevicePoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devicePool:CreateDevicePoolResponse'</a>,
--   <a>createDevicePoolResponse_devicePool</a> - The newly created device
--   pool.
--   
--   <a>$sel:httpStatus:CreateDevicePoolResponse'</a>,
--   <a>createDevicePoolResponse_httpStatus</a> - The response's http
--   status code.
newCreateDevicePoolResponse :: Int -> CreateDevicePoolResponse

-- | Represents the result of a list device pools request.
--   
--   <i>See:</i> <a>newListDevicePools</a> smart constructor.
data ListDevicePools
ListDevicePools' :: Maybe Text -> Maybe DevicePoolType -> Text -> ListDevicePools

-- | Create a value of <a>ListDevicePools</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicePools'</a>,
--   <a>listDevicePools_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:type':ListDevicePools'</a>, <a>listDevicePools_type</a> - The
--   device pools' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
--   
--   <a>$sel:arn:ListDevicePools'</a>, <a>listDevicePools_arn</a> - The
--   project ARN.
newListDevicePools :: Text -> ListDevicePools

-- | Represents the result of a list device pools request.
--   
--   <i>See:</i> <a>newListDevicePoolsResponse</a> smart constructor.
data ListDevicePoolsResponse
ListDevicePoolsResponse' :: Maybe Text -> Maybe [DevicePool] -> Int -> ListDevicePoolsResponse

-- | Create a value of <a>ListDevicePoolsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDevicePools'</a>,
--   <a>listDevicePoolsResponse_nextToken</a> - If the number of items that
--   are returned is significantly large, this is an identifier that is
--   also returned. It can be used in a subsequent call to this operation
--   to return the next set of items in the list.
--   
--   <a>$sel:devicePools:ListDevicePoolsResponse'</a>,
--   <a>listDevicePoolsResponse_devicePools</a> - Information about the
--   device pools.
--   
--   <a>$sel:httpStatus:ListDevicePoolsResponse'</a>,
--   <a>listDevicePoolsResponse_httpStatus</a> - The response's http status
--   code.
newListDevicePoolsResponse :: Int -> ListDevicePoolsResponse

-- | <i>See:</i> <a>newGetTestGridProject</a> smart constructor.
data GetTestGridProject
GetTestGridProject' :: Text -> GetTestGridProject

-- | Create a value of <a>GetTestGridProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectArn:GetTestGridProject'</a>,
--   <a>getTestGridProject_projectArn</a> - The ARN of the Selenium testing
--   project, from either CreateTestGridProject or ListTestGridProjects.
newGetTestGridProject :: Text -> GetTestGridProject

-- | <i>See:</i> <a>newGetTestGridProjectResponse</a> smart constructor.
data GetTestGridProjectResponse
GetTestGridProjectResponse' :: Maybe TestGridProject -> Int -> GetTestGridProjectResponse

-- | Create a value of <a>GetTestGridProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testGridProject:GetTestGridProjectResponse'</a>,
--   <a>getTestGridProjectResponse_testGridProject</a> - A TestGridProject.
--   
--   <a>$sel:httpStatus:GetTestGridProjectResponse'</a>,
--   <a>getTestGridProjectResponse_httpStatus</a> - The response's http
--   status code.
newGetTestGridProjectResponse :: Int -> GetTestGridProjectResponse

-- | Represents a request to the get upload operation.
--   
--   <i>See:</i> <a>newGetUpload</a> smart constructor.
data GetUpload
GetUpload' :: Text -> GetUpload

-- | Create a value of <a>GetUpload</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetUpload'</a>, <a>getUpload_arn</a> - The upload's ARN.
newGetUpload :: Text -> GetUpload

-- | Represents the result of a get upload request.
--   
--   <i>See:</i> <a>newGetUploadResponse</a> smart constructor.
data GetUploadResponse
GetUploadResponse' :: Maybe Upload -> Int -> GetUploadResponse

-- | Create a value of <a>GetUploadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upload:GetUploadResponse'</a>, <a>getUploadResponse_upload</a>
--   - An app or a set of one or more tests to upload or that have been
--   uploaded.
--   
--   <a>$sel:httpStatus:GetUploadResponse'</a>,
--   <a>getUploadResponse_httpStatus</a> - The response's http status code.
newGetUploadResponse :: Int -> GetUploadResponse

-- | <i>See:</i> <a>newUpdateUpload</a> smart constructor.
data UpdateUpload
UpdateUpload' :: Maybe Text -> Maybe Bool -> Maybe Text -> Text -> UpdateUpload

-- | Create a value of <a>UpdateUpload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:UpdateUpload'</a>, <a>updateUpload_contentType</a>
--   - The upload's content type (for example,
--   <tt>application/x-yaml</tt>).
--   
--   <a>$sel:editContent:UpdateUpload'</a>, <a>updateUpload_editContent</a>
--   - Set to true if the YAML file has changed and must be updated.
--   Otherwise, set to false.
--   
--   <a>$sel:name:UpdateUpload'</a>, <a>updateUpload_name</a> - The
--   upload's test spec file name. The name must not contain any forward
--   slashes (/). The test spec file name must end with the <tt>.yaml</tt>
--   or <tt>.yml</tt> file extension.
--   
--   <a>$sel:arn:UpdateUpload'</a>, <a>updateUpload_arn</a> - The Amazon
--   Resource Name (ARN) of the uploaded test spec.
newUpdateUpload :: Text -> UpdateUpload

-- | <i>See:</i> <a>newUpdateUploadResponse</a> smart constructor.
data UpdateUploadResponse
UpdateUploadResponse' :: Maybe Upload -> Int -> UpdateUploadResponse

-- | Create a value of <a>UpdateUploadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:upload:UpdateUploadResponse'</a>,
--   <a>updateUploadResponse_upload</a> - A test spec uploaded to Device
--   Farm.
--   
--   <a>$sel:httpStatus:UpdateUploadResponse'</a>,
--   <a>updateUploadResponse_httpStatus</a> - The response's http status
--   code.
newUpdateUploadResponse :: Int -> UpdateUploadResponse

-- | Represents the request to retrieve the offering status for the
--   specified customer or account.
--   
--   <i>See:</i> <a>newGetOfferingStatus</a> smart constructor.
data GetOfferingStatus
GetOfferingStatus' :: Maybe Text -> GetOfferingStatus

-- | Create a value of <a>GetOfferingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetOfferingStatus'</a>,
--   <a>getOfferingStatus_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
newGetOfferingStatus :: GetOfferingStatus

-- | Returns the status result for a device offering.
--   
--   <i>See:</i> <a>newGetOfferingStatusResponse</a> smart constructor.
data GetOfferingStatusResponse
GetOfferingStatusResponse' :: Maybe Text -> Maybe (HashMap Text OfferingStatus) -> Maybe (HashMap Text OfferingStatus) -> Int -> GetOfferingStatusResponse

-- | Create a value of <a>GetOfferingStatusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetOfferingStatus'</a>,
--   <a>getOfferingStatusResponse_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:nextPeriod:GetOfferingStatusResponse'</a>,
--   <a>getOfferingStatusResponse_nextPeriod</a> - When specified, gets the
--   offering status for the next period.
--   
--   <a>$sel:current:GetOfferingStatusResponse'</a>,
--   <a>getOfferingStatusResponse_current</a> - When specified, gets the
--   offering status for the current period.
--   
--   <a>$sel:httpStatus:GetOfferingStatusResponse'</a>,
--   <a>getOfferingStatusResponse_httpStatus</a> - The response's http
--   status code.
newGetOfferingStatusResponse :: Int -> GetOfferingStatusResponse

-- | Represents a request to the delete upload operation.
--   
--   <i>See:</i> <a>newDeleteUpload</a> smart constructor.
data DeleteUpload
DeleteUpload' :: Text -> DeleteUpload

-- | Create a value of <a>DeleteUpload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteUpload'</a>, <a>deleteUpload_arn</a> - Represents
--   the Amazon Resource Name (ARN) of the Device Farm upload to delete.
newDeleteUpload :: Text -> DeleteUpload

-- | Represents the result of a delete upload request.
--   
--   <i>See:</i> <a>newDeleteUploadResponse</a> smart constructor.
data DeleteUploadResponse
DeleteUploadResponse' :: Int -> DeleteUploadResponse

-- | Create a value of <a>DeleteUploadResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteUploadResponse'</a>,
--   <a>deleteUploadResponse_httpStatus</a> - The response's http status
--   code.
newDeleteUploadResponse :: Int -> DeleteUploadResponse

-- | Creates and submits a request to start a remote access session.
--   
--   <i>See:</i> <a>newCreateRemoteAccessSession</a> smart constructor.
data CreateRemoteAccessSession
CreateRemoteAccessSession' :: Maybe Text -> Maybe InteractionMode -> Maybe CreateRemoteAccessSessionConfiguration -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> Text -> Text -> CreateRemoteAccessSession

-- | Create a value of <a>CreateRemoteAccessSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_clientId</a> - Unique identifier for the
--   client. If you want access to multiple devices on the same client, you
--   should pass the same <tt>clientId</tt> value in each call to
--   <tt>CreateRemoteAccessSession</tt>. This identifier is required only
--   if <tt>remoteDebugEnabled</tt> is set to <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:interactionMode:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_interactionMode</a> - The interaction
--   mode of the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
--   
--   <a>$sel:configuration:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_configuration</a> - The configuration
--   information for the remote access session request.
--   
--   <a>$sel:name:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_name</a> - The name of the remote access
--   session to create.
--   
--   <a>$sel:remoteRecordEnabled:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_remoteRecordEnabled</a> - Set to
--   <tt>true</tt> to enable remote recording for the remote access
--   session.
--   
--   <a>$sel:instanceArn:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_instanceArn</a> - The Amazon Resource
--   Name (ARN) of the device instance for which you want to create a
--   remote access session.
--   
--   <a>$sel:skipAppResign:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_skipAppResign</a> - When set to
--   <tt>true</tt>, for private devices, Device Farm does not sign your app
--   again. For public devices, Device Farm always signs your apps again.
--   
--   For more information on how Device Farm modifies your uploads during
--   tests, see <a>Do you modify my app?</a>
--   
--   <a>$sel:sshPublicKey:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_sshPublicKey</a> - Ignored. The public
--   key of the <tt>ssh</tt> key pair you want to use for connecting to
--   remote devices in your remote debugging session. This key is required
--   only if <tt>remoteDebugEnabled</tt> is set to <tt>true</tt>.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:remoteDebugEnabled:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_remoteDebugEnabled</a> - Set to
--   <tt>true</tt> if you want to access devices remotely for debugging in
--   your remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:remoteRecordAppArn:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_remoteRecordAppArn</a> - The Amazon
--   Resource Name (ARN) for the app to be recorded in the remote access
--   session.
--   
--   <a>$sel:projectArn:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_projectArn</a> - The Amazon Resource Name
--   (ARN) of the project for which you want to create a remote access
--   session.
--   
--   <a>$sel:deviceArn:CreateRemoteAccessSession'</a>,
--   <a>createRemoteAccessSession_deviceArn</a> - The ARN of the device for
--   which you want to create a remote access session.
newCreateRemoteAccessSession :: Text -> Text -> CreateRemoteAccessSession

-- | Represents the server response from a request to create a remote
--   access session.
--   
--   <i>See:</i> <a>newCreateRemoteAccessSessionResponse</a> smart
--   constructor.
data CreateRemoteAccessSessionResponse
CreateRemoteAccessSessionResponse' :: Maybe RemoteAccessSession -> Int -> CreateRemoteAccessSessionResponse

-- | Create a value of <a>CreateRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSession:CreateRemoteAccessSessionResponse'</a>,
--   <a>createRemoteAccessSessionResponse_remoteAccessSession</a> - A
--   container that describes the remote access session when the request to
--   create a remote access session is sent.
--   
--   <a>$sel:httpStatus:CreateRemoteAccessSessionResponse'</a>,
--   <a>createRemoteAccessSessionResponse_httpStatus</a> - The response's
--   http status code.
newCreateRemoteAccessSessionResponse :: Int -> CreateRemoteAccessSessionResponse

-- | <i>See:</i> <a>newListTestGridProjects</a> smart constructor.
data ListTestGridProjects
ListTestGridProjects' :: Maybe Text -> Maybe Natural -> ListTestGridProjects

-- | Create a value of <a>ListTestGridProjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridProjects'</a>,
--   <a>listTestGridProjects_nextToken</a> - From a response, used to
--   continue a paginated listing.
--   
--   <a>$sel:maxResult:ListTestGridProjects'</a>,
--   <a>listTestGridProjects_maxResult</a> - Return no more than this
--   number of results.
newListTestGridProjects :: ListTestGridProjects

-- | <i>See:</i> <a>newListTestGridProjectsResponse</a> smart constructor.
data ListTestGridProjectsResponse
ListTestGridProjectsResponse' :: Maybe Text -> Maybe [TestGridProject] -> Int -> ListTestGridProjectsResponse

-- | Create a value of <a>ListTestGridProjectsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridProjects'</a>,
--   <a>listTestGridProjectsResponse_nextToken</a> - Used for pagination.
--   Pass into ListTestGridProjects to get more results in a paginated
--   request.
--   
--   <a>$sel:testGridProjects:ListTestGridProjectsResponse'</a>,
--   <a>listTestGridProjectsResponse_testGridProjects</a> - The list of
--   TestGridProjects, based on a ListTestGridProjectsRequest.
--   
--   <a>$sel:httpStatus:ListTestGridProjectsResponse'</a>,
--   <a>listTestGridProjectsResponse_httpStatus</a> - The response's http
--   status code.
newListTestGridProjectsResponse :: Int -> ListTestGridProjectsResponse

-- | Represents a request to the list uploads operation.
--   
--   <i>See:</i> <a>newListUploads</a> smart constructor.
data ListUploads
ListUploads' :: Maybe Text -> Maybe UploadType -> Text -> ListUploads

-- | Create a value of <a>ListUploads</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUploads'</a>, <a>listUploads_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:type':ListUploads'</a>, <a>listUploads_type</a> - The type of
--   upload.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   <a>$sel:arn:ListUploads'</a>, <a>listUploads_arn</a> - The Amazon
--   Resource Name (ARN) of the project for which you want to list uploads.
newListUploads :: Text -> ListUploads

-- | Represents the result of a list uploads request.
--   
--   <i>See:</i> <a>newListUploadsResponse</a> smart constructor.
data ListUploadsResponse
ListUploadsResponse' :: Maybe Text -> Maybe [Upload] -> Int -> ListUploadsResponse

-- | Create a value of <a>ListUploadsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUploads'</a>,
--   <a>listUploadsResponse_nextToken</a> - If the number of items that are
--   returned is significantly large, this is an identifier that is also
--   returned. It can be used in a subsequent call to this operation to
--   return the next set of items in the list.
--   
--   <a>$sel:uploads:ListUploadsResponse'</a>,
--   <a>listUploadsResponse_uploads</a> - Information about the uploads.
--   
--   <a>$sel:httpStatus:ListUploadsResponse'</a>,
--   <a>listUploadsResponse_httpStatus</a> - The response's http status
--   code.
newListUploadsResponse :: Int -> ListUploadsResponse

-- | Represents a request to the list tests operation.
--   
--   <i>See:</i> <a>newListTests</a> smart constructor.
data ListTests
ListTests' :: Maybe Text -> Text -> ListTests

-- | Create a value of <a>ListTests</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTests'</a>, <a>listTests_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListTests'</a>, <a>listTests_arn</a> - The test suite's
--   Amazon Resource Name (ARN).
newListTests :: Text -> ListTests

-- | Represents the result of a list tests request.
--   
--   <i>See:</i> <a>newListTestsResponse</a> smart constructor.
data ListTestsResponse
ListTestsResponse' :: Maybe Text -> Maybe [Test] -> Int -> ListTestsResponse

-- | Create a value of <a>ListTestsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTests'</a>, <a>listTestsResponse_nextToken</a> -
--   If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
--   
--   <a>$sel:tests:ListTestsResponse'</a>, <a>listTestsResponse_tests</a> -
--   Information about the tests.
--   
--   <a>$sel:httpStatus:ListTestsResponse'</a>,
--   <a>listTestsResponse_httpStatus</a> - The response's http status code.
newListTestsResponse :: Int -> ListTestsResponse

-- | Represents the request to return information about the remote access
--   session.
--   
--   <i>See:</i> <a>newListRemoteAccessSessions</a> smart constructor.
data ListRemoteAccessSessions
ListRemoteAccessSessions' :: Maybe Text -> Text -> ListRemoteAccessSessions

-- | Create a value of <a>ListRemoteAccessSessions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRemoteAccessSessions'</a>,
--   <a>listRemoteAccessSessions_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:arn:ListRemoteAccessSessions'</a>,
--   <a>listRemoteAccessSessions_arn</a> - The Amazon Resource Name (ARN)
--   of the project about which you are requesting information.
newListRemoteAccessSessions :: Text -> ListRemoteAccessSessions

-- | Represents the response from the server after AWS Device Farm makes a
--   request to return information about the remote access session.
--   
--   <i>See:</i> <a>newListRemoteAccessSessionsResponse</a> smart
--   constructor.
data ListRemoteAccessSessionsResponse
ListRemoteAccessSessionsResponse' :: Maybe Text -> Maybe [RemoteAccessSession] -> Int -> ListRemoteAccessSessionsResponse

-- | Create a value of <a>ListRemoteAccessSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRemoteAccessSessions'</a>,
--   <a>listRemoteAccessSessionsResponse_nextToken</a> - An identifier that
--   was returned from the previous call to this operation, which can be
--   used to return the next set of items in the list.
--   
--   <a>$sel:remoteAccessSessions:ListRemoteAccessSessionsResponse'</a>,
--   <a>listRemoteAccessSessionsResponse_remoteAccessSessions</a> - A
--   container that represents the metadata from the service about each
--   remote access session you are requesting.
--   
--   <a>$sel:httpStatus:ListRemoteAccessSessionsResponse'</a>,
--   <a>listRemoteAccessSessionsResponse_httpStatus</a> - The response's
--   http status code.
newListRemoteAccessSessionsResponse :: Int -> ListRemoteAccessSessionsResponse

-- | Represents a request to the get run operation.
--   
--   <i>See:</i> <a>newGetRun</a> smart constructor.
data GetRun
GetRun' :: Text -> GetRun

-- | Create a value of <a>GetRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetRun'</a>, <a>getRun_arn</a> - The run's ARN.
newGetRun :: Text -> GetRun

-- | Represents the result of a get run request.
--   
--   <i>See:</i> <a>newGetRunResponse</a> smart constructor.
data GetRunResponse
GetRunResponse' :: Maybe Run -> Int -> GetRunResponse

-- | Create a value of <a>GetRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:run:GetRunResponse'</a>, <a>getRunResponse_run</a> - The run
--   to get results from.
--   
--   <a>$sel:httpStatus:GetRunResponse'</a>,
--   <a>getRunResponse_httpStatus</a> - The response's http status code.
newGetRunResponse :: Int -> GetRunResponse

-- | Represents the request to delete the specified remote access session.
--   
--   <i>See:</i> <a>newDeleteRemoteAccessSession</a> smart constructor.
data DeleteRemoteAccessSession
DeleteRemoteAccessSession' :: Text -> DeleteRemoteAccessSession

-- | Create a value of <a>DeleteRemoteAccessSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteRemoteAccessSession'</a>,
--   <a>deleteRemoteAccessSession_arn</a> - The Amazon Resource Name (ARN)
--   of the session for which you want to delete remote access.
newDeleteRemoteAccessSession :: Text -> DeleteRemoteAccessSession

-- | The response from the server when a request is made to delete the
--   remote access session.
--   
--   <i>See:</i> <a>newDeleteRemoteAccessSessionResponse</a> smart
--   constructor.
data DeleteRemoteAccessSessionResponse
DeleteRemoteAccessSessionResponse' :: Int -> DeleteRemoteAccessSessionResponse

-- | Create a value of <a>DeleteRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRemoteAccessSessionResponse'</a>,
--   <a>deleteRemoteAccessSessionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteRemoteAccessSessionResponse :: Int -> DeleteRemoteAccessSessionResponse

-- | <i>See:</i> <a>newGetDeviceInstance</a> smart constructor.
data GetDeviceInstance
GetDeviceInstance' :: Text -> GetDeviceInstance

-- | Create a value of <a>GetDeviceInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetDeviceInstance'</a>, <a>getDeviceInstance_arn</a> - The
--   Amazon Resource Name (ARN) of the instance you're requesting
--   information about.
newGetDeviceInstance :: Text -> GetDeviceInstance

-- | <i>See:</i> <a>newGetDeviceInstanceResponse</a> smart constructor.
data GetDeviceInstanceResponse
GetDeviceInstanceResponse' :: Maybe DeviceInstance -> Int -> GetDeviceInstanceResponse

-- | Create a value of <a>GetDeviceInstanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceInstance:GetDeviceInstanceResponse'</a>,
--   <a>getDeviceInstanceResponse_deviceInstance</a> - An object that
--   contains information about your device instance.
--   
--   <a>$sel:httpStatus:GetDeviceInstanceResponse'</a>,
--   <a>getDeviceInstanceResponse_httpStatus</a> - The response's http
--   status code.
newGetDeviceInstanceResponse :: Int -> GetDeviceInstanceResponse

-- | Represents a request to the list suites operation.
--   
--   <i>See:</i> <a>newListSuites</a> smart constructor.
data ListSuites
ListSuites' :: Maybe Text -> Text -> ListSuites

-- | Create a value of <a>ListSuites</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSuites'</a>, <a>listSuites_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListSuites'</a>, <a>listSuites_arn</a> - The job's Amazon
--   Resource Name (ARN).
newListSuites :: Text -> ListSuites

-- | Represents the result of a list suites request.
--   
--   <i>See:</i> <a>newListSuitesResponse</a> smart constructor.
data ListSuitesResponse
ListSuitesResponse' :: Maybe Text -> Maybe [Suite] -> Int -> ListSuitesResponse

-- | Create a value of <a>ListSuitesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSuites'</a>, <a>listSuitesResponse_nextToken</a>
--   - If the number of items that are returned is significantly large,
--   this is an identifier that is also returned. It can be used in a
--   subsequent call to this operation to return the next set of items in
--   the list.
--   
--   <a>$sel:suites:ListSuitesResponse'</a>,
--   <a>listSuitesResponse_suites</a> - Information about the suites.
--   
--   <a>$sel:httpStatus:ListSuitesResponse'</a>,
--   <a>listSuitesResponse_httpStatus</a> - The response's http status
--   code.
newListSuitesResponse :: Int -> ListSuitesResponse

-- | Represents a request to the list artifacts operation.
--   
--   <i>See:</i> <a>newListArtifacts</a> smart constructor.
data ListArtifacts
ListArtifacts' :: Maybe Text -> Text -> ArtifactCategory -> ListArtifacts

-- | Create a value of <a>ListArtifacts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListArtifacts'</a>, <a>listArtifacts_nextToken</a> -
--   An identifier that was returned from the previous call to this
--   operation, which can be used to return the next set of items in the
--   list.
--   
--   <a>$sel:arn:ListArtifacts'</a>, <a>listArtifacts_arn</a> - The run,
--   job, suite, or test ARN.
--   
--   <a>$sel:type':ListArtifacts'</a>, <a>listArtifacts_type</a> - The
--   artifacts' type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>FILE</li>
--   <li>LOG</li>
--   <li>SCREENSHOT</li>
--   </ul>
newListArtifacts :: Text -> ArtifactCategory -> ListArtifacts

-- | Represents the result of a list artifacts operation.
--   
--   <i>See:</i> <a>newListArtifactsResponse</a> smart constructor.
data ListArtifactsResponse
ListArtifactsResponse' :: Maybe Text -> Maybe [Artifact] -> Int -> ListArtifactsResponse

-- | Create a value of <a>ListArtifactsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListArtifacts'</a>,
--   <a>listArtifactsResponse_nextToken</a> - If the number of items that
--   are returned is significantly large, this is an identifier that is
--   also returned. It can be used in a subsequent call to this operation
--   to return the next set of items in the list.
--   
--   <a>$sel:artifacts:ListArtifactsResponse'</a>,
--   <a>listArtifactsResponse_artifacts</a> - Information about the
--   artifacts.
--   
--   <a>$sel:httpStatus:ListArtifactsResponse'</a>,
--   <a>listArtifactsResponse_httpStatus</a> - The response's http status
--   code.
newListArtifactsResponse :: Int -> ListArtifactsResponse

-- | <i>See:</i> <a>newStopJob</a> smart constructor.
data StopJob
StopJob' :: Text -> StopJob

-- | Create a value of <a>StopJob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StopJob'</a>, <a>stopJob_arn</a> - Represents the Amazon
--   Resource Name (ARN) of the Device Farm job to stop.
newStopJob :: Text -> StopJob

-- | <i>See:</i> <a>newStopJobResponse</a> smart constructor.
data StopJobResponse
StopJobResponse' :: Maybe Job -> Int -> StopJobResponse

-- | Create a value of <a>StopJobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:StopJobResponse'</a>, <a>stopJobResponse_job</a> - The job
--   that was stopped.
--   
--   <a>$sel:httpStatus:StopJobResponse'</a>,
--   <a>stopJobResponse_httpStatus</a> - The response's http status code.
newStopJobResponse :: Int -> StopJobResponse

-- | Represents a request to the update project operation.
--   
--   <i>See:</i> <a>newUpdateProject</a> smart constructor.
data UpdateProject
UpdateProject' :: Maybe Text -> Maybe Int -> Text -> UpdateProject

-- | Create a value of <a>UpdateProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateProject'</a>, <a>updateProject_name</a> - A string
--   that represents the new name of the project that you are updating.
--   
--   <a>$sel:defaultJobTimeoutMinutes:UpdateProject'</a>,
--   <a>updateProject_defaultJobTimeoutMinutes</a> - The number of minutes
--   a test run in the project executes before it times out.
--   
--   <a>$sel:arn:UpdateProject'</a>, <a>updateProject_arn</a> - The Amazon
--   Resource Name (ARN) of the project whose name to update.
newUpdateProject :: Text -> UpdateProject

-- | Represents the result of an update project request.
--   
--   <i>See:</i> <a>newUpdateProjectResponse</a> smart constructor.
data UpdateProjectResponse
UpdateProjectResponse' :: Maybe Project -> Int -> UpdateProjectResponse

-- | Create a value of <a>UpdateProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_project</a> - The project to update.
--   
--   <a>$sel:httpStatus:UpdateProjectResponse'</a>,
--   <a>updateProjectResponse_httpStatus</a> - The response's http status
--   code.
newUpdateProjectResponse :: Int -> UpdateProjectResponse

-- | Represents a request to the delete project operation.
--   
--   <i>See:</i> <a>newDeleteProject</a> smart constructor.
data DeleteProject
DeleteProject' :: Text -> DeleteProject

-- | Create a value of <a>DeleteProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteProject'</a>, <a>deleteProject_arn</a> - Represents
--   the Amazon Resource Name (ARN) of the Device Farm project to delete.
newDeleteProject :: Text -> DeleteProject

-- | Represents the result of a delete project request.
--   
--   <i>See:</i> <a>newDeleteProjectResponse</a> smart constructor.
data DeleteProjectResponse
DeleteProjectResponse' :: Int -> DeleteProjectResponse

-- | Create a value of <a>DeleteProjectResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteProjectResponse'</a>,
--   <a>deleteProjectResponse_httpStatus</a> - The response's http status
--   code.
newDeleteProjectResponse :: Int -> DeleteProjectResponse

-- | <i>See:</i> <a>newGetInstanceProfile</a> smart constructor.
data GetInstanceProfile
GetInstanceProfile' :: Text -> GetInstanceProfile

-- | Create a value of <a>GetInstanceProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetInstanceProfile'</a>, <a>getInstanceProfile_arn</a> -
--   The Amazon Resource Name (ARN) of an instance profile.
newGetInstanceProfile :: Text -> GetInstanceProfile

-- | <i>See:</i> <a>newGetInstanceProfileResponse</a> smart constructor.
data GetInstanceProfileResponse
GetInstanceProfileResponse' :: Maybe InstanceProfile -> Int -> GetInstanceProfileResponse

-- | Create a value of <a>GetInstanceProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceProfile:GetInstanceProfileResponse'</a>,
--   <a>getInstanceProfileResponse_instanceProfile</a> - An object that
--   contains information about an instance profile.
--   
--   <a>$sel:httpStatus:GetInstanceProfileResponse'</a>,
--   <a>getInstanceProfileResponse_httpStatus</a> - The response's http
--   status code.
newGetInstanceProfileResponse :: Int -> GetInstanceProfileResponse

-- | <i>See:</i> <a>newUpdateVPCEConfiguration</a> smart constructor.
data UpdateVPCEConfiguration
UpdateVPCEConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateVPCEConfiguration

-- | Create a value of <a>UpdateVPCEConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfigurationName:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_vpceConfigurationName</a> - The friendly
--   name you give to your VPC endpoint configuration to manage your
--   configurations more easily.
--   
--   <a>$sel:vpceConfigurationDescription:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_vpceConfigurationDescription</a> - An
--   optional description that provides details about your VPC endpoint
--   configuration.
--   
--   <a>$sel:serviceDnsName:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_serviceDnsName</a> - The DNS (domain) name
--   used to connect to your private service in your VPC. The DNS name must
--   not already be in use on the internet.
--   
--   <a>$sel:vpceServiceName:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_vpceServiceName</a> - The name of the VPC
--   endpoint service running in your AWS account that you want Device Farm
--   to test.
--   
--   <a>$sel:arn:UpdateVPCEConfiguration'</a>,
--   <a>updateVPCEConfiguration_arn</a> - The Amazon Resource Name (ARN) of
--   the VPC endpoint configuration you want to update.
newUpdateVPCEConfiguration :: Text -> UpdateVPCEConfiguration

-- | <i>See:</i> <a>newUpdateVPCEConfigurationResponse</a> smart
--   constructor.
data UpdateVPCEConfigurationResponse
UpdateVPCEConfigurationResponse' :: Maybe VPCEConfiguration -> Int -> UpdateVPCEConfigurationResponse

-- | Create a value of <a>UpdateVPCEConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfiguration:UpdateVPCEConfigurationResponse'</a>,
--   <a>updateVPCEConfigurationResponse_vpceConfiguration</a> - An object
--   that contains information about your VPC endpoint configuration.
--   
--   <a>$sel:httpStatus:UpdateVPCEConfigurationResponse'</a>,
--   <a>updateVPCEConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newUpdateVPCEConfigurationResponse :: Int -> UpdateVPCEConfigurationResponse

-- | <i>See:</i> <a>newListVPCEConfigurations</a> smart constructor.
data ListVPCEConfigurations
ListVPCEConfigurations' :: Maybe Text -> Maybe Int -> ListVPCEConfigurations

-- | Create a value of <a>ListVPCEConfigurations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVPCEConfigurations'</a>,
--   <a>listVPCEConfigurations_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:maxResults:ListVPCEConfigurations'</a>,
--   <a>listVPCEConfigurations_maxResults</a> - An integer that specifies
--   the maximum number of items you want to return in the API response.
newListVPCEConfigurations :: ListVPCEConfigurations

-- | <i>See:</i> <a>newListVPCEConfigurationsResponse</a> smart
--   constructor.
data ListVPCEConfigurationsResponse
ListVPCEConfigurationsResponse' :: Maybe Text -> Maybe [VPCEConfiguration] -> Int -> ListVPCEConfigurationsResponse

-- | Create a value of <a>ListVPCEConfigurationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVPCEConfigurations'</a>,
--   <a>listVPCEConfigurationsResponse_nextToken</a> - An identifier that
--   was returned from the previous call to this operation, which can be
--   used to return the next set of items in the list.
--   
--   <a>$sel:vpceConfigurations:ListVPCEConfigurationsResponse'</a>,
--   <a>listVPCEConfigurationsResponse_vpceConfigurations</a> - An array of
--   <tt>VPCEConfiguration</tt> objects that contain information about your
--   VPC endpoint configuration.
--   
--   <a>$sel:httpStatus:ListVPCEConfigurationsResponse'</a>,
--   <a>listVPCEConfigurationsResponse_httpStatus</a> - The response's http
--   status code.
newListVPCEConfigurationsResponse :: Int -> ListVPCEConfigurationsResponse

-- | <i>See:</i> <a>newListTestGridSessions</a> smart constructor.
data ListTestGridSessions
ListTestGridSessions' :: Maybe Text -> Maybe TestGridSessionStatus -> Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Text -> ListTestGridSessions

-- | Create a value of <a>ListTestGridSessions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_nextToken</a> - Pagination token.
--   
--   <a>$sel:status:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_status</a> - Return only sessions in this
--   state.
--   
--   <a>$sel:creationTimeBefore:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_creationTimeBefore</a> - Return only sessions
--   created before this time.
--   
--   <a>$sel:maxResult:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_maxResult</a> - Return only this many results
--   at a time.
--   
--   <a>$sel:endTimeAfter:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_endTimeAfter</a> - Return only sessions that
--   ended after this time.
--   
--   <a>$sel:endTimeBefore:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_endTimeBefore</a> - Return only sessions that
--   ended before this time.
--   
--   <a>$sel:creationTimeAfter:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_creationTimeAfter</a> - Return only sessions
--   created after this time.
--   
--   <a>$sel:projectArn:ListTestGridSessions'</a>,
--   <a>listTestGridSessions_projectArn</a> - ARN of a TestGridProject.
newListTestGridSessions :: Text -> ListTestGridSessions

-- | <i>See:</i> <a>newListTestGridSessionsResponse</a> smart constructor.
data ListTestGridSessionsResponse
ListTestGridSessionsResponse' :: Maybe Text -> Maybe [TestGridSession] -> Int -> ListTestGridSessionsResponse

-- | Create a value of <a>ListTestGridSessionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTestGridSessions'</a>,
--   <a>listTestGridSessionsResponse_nextToken</a> - Pagination token.
--   
--   <a>$sel:testGridSessions:ListTestGridSessionsResponse'</a>,
--   <a>listTestGridSessionsResponse_testGridSessions</a> - The sessions
--   that match the criteria in a ListTestGridSessionsRequest.
--   
--   <a>$sel:httpStatus:ListTestGridSessionsResponse'</a>,
--   <a>listTestGridSessionsResponse_httpStatus</a> - The response's http
--   status code.
newListTestGridSessionsResponse :: Int -> ListTestGridSessionsResponse

-- | <i>See:</i> <a>newDeleteVPCEConfiguration</a> smart constructor.
data DeleteVPCEConfiguration
DeleteVPCEConfiguration' :: Text -> DeleteVPCEConfiguration

-- | Create a value of <a>DeleteVPCEConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteVPCEConfiguration'</a>,
--   <a>deleteVPCEConfiguration_arn</a> - The Amazon Resource Name (ARN) of
--   the VPC endpoint configuration you want to delete.
newDeleteVPCEConfiguration :: Text -> DeleteVPCEConfiguration

-- | <i>See:</i> <a>newDeleteVPCEConfigurationResponse</a> smart
--   constructor.
data DeleteVPCEConfigurationResponse
DeleteVPCEConfigurationResponse' :: Int -> DeleteVPCEConfigurationResponse

-- | Create a value of <a>DeleteVPCEConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVPCEConfigurationResponse'</a>,
--   <a>deleteVPCEConfigurationResponse_httpStatus</a> - The response's
--   http status code.
newDeleteVPCEConfigurationResponse :: Int -> DeleteVPCEConfigurationResponse

-- | Represents a request to the list unique problems operation.
--   
--   <i>See:</i> <a>newListUniqueProblems</a> smart constructor.
data ListUniqueProblems
ListUniqueProblems' :: Maybe Text -> Text -> ListUniqueProblems

-- | Create a value of <a>ListUniqueProblems</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUniqueProblems'</a>,
--   <a>listUniqueProblems_nextToken</a> - An identifier that was returned
--   from the previous call to this operation, which can be used to return
--   the next set of items in the list.
--   
--   <a>$sel:arn:ListUniqueProblems'</a>, <a>listUniqueProblems_arn</a> -
--   The unique problems' ARNs.
newListUniqueProblems :: Text -> ListUniqueProblems

-- | Represents the result of a list unique problems request.
--   
--   <i>See:</i> <a>newListUniqueProblemsResponse</a> smart constructor.
data ListUniqueProblemsResponse
ListUniqueProblemsResponse' :: Maybe Text -> Maybe (HashMap ExecutionResult [UniqueProblem]) -> Int -> ListUniqueProblemsResponse

-- | Create a value of <a>ListUniqueProblemsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUniqueProblems'</a>,
--   <a>listUniqueProblemsResponse_nextToken</a> - If the number of items
--   that are returned is significantly large, this is an identifier that
--   is also returned. It can be used in a subsequent call to this
--   operation to return the next set of items in the list.
--   
--   <a>$sel:uniqueProblems:ListUniqueProblemsResponse'</a>,
--   <a>listUniqueProblemsResponse_uniqueProblems</a> - Information about
--   the unique problems.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:httpStatus:ListUniqueProblemsResponse'</a>,
--   <a>listUniqueProblemsResponse_httpStatus</a> - The response's http
--   status code.
newListUniqueProblemsResponse :: Int -> ListUniqueProblemsResponse

-- | <i>See:</i> <a>newGetVPCEConfiguration</a> smart constructor.
data GetVPCEConfiguration
GetVPCEConfiguration' :: Text -> GetVPCEConfiguration

-- | Create a value of <a>GetVPCEConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetVPCEConfiguration'</a>, <a>getVPCEConfiguration_arn</a>
--   - The Amazon Resource Name (ARN) of the VPC endpoint configuration you
--   want to describe.
newGetVPCEConfiguration :: Text -> GetVPCEConfiguration

-- | <i>See:</i> <a>newGetVPCEConfigurationResponse</a> smart constructor.
data GetVPCEConfigurationResponse
GetVPCEConfigurationResponse' :: Maybe VPCEConfiguration -> Int -> GetVPCEConfigurationResponse

-- | Create a value of <a>GetVPCEConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfiguration:GetVPCEConfigurationResponse'</a>,
--   <a>getVPCEConfigurationResponse_vpceConfiguration</a> - An object that
--   contains information about your VPC endpoint configuration.
--   
--   <a>$sel:httpStatus:GetVPCEConfigurationResponse'</a>,
--   <a>getVPCEConfigurationResponse_httpStatus</a> - The response's http
--   status code.
newGetVPCEConfigurationResponse :: Int -> GetVPCEConfigurationResponse

-- | <i>See:</i> <a>newGetTestGridSession</a> smart constructor.
data GetTestGridSession
GetTestGridSession' :: Maybe Text -> Maybe Text -> Maybe Text -> GetTestGridSession

-- | Create a value of <a>GetTestGridSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sessionArn:GetTestGridSession'</a>,
--   <a>getTestGridSession_sessionArn</a> - An ARN that uniquely identifies
--   a TestGridSession.
--   
--   <a>$sel:sessionId:GetTestGridSession'</a>,
--   <a>getTestGridSession_sessionId</a> - An ID associated with this
--   session.
--   
--   <a>$sel:projectArn:GetTestGridSession'</a>,
--   <a>getTestGridSession_projectArn</a> - The ARN for the project that
--   this session belongs to. See CreateTestGridProject and
--   ListTestGridProjects.
newGetTestGridSession :: GetTestGridSession

-- | <i>See:</i> <a>newGetTestGridSessionResponse</a> smart constructor.
data GetTestGridSessionResponse
GetTestGridSessionResponse' :: Maybe TestGridSession -> Int -> GetTestGridSessionResponse

-- | Create a value of <a>GetTestGridSessionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testGridSession:GetTestGridSessionResponse'</a>,
--   <a>getTestGridSessionResponse_testGridSession</a> - The
--   TestGridSession that was requested.
--   
--   <a>$sel:httpStatus:GetTestGridSessionResponse'</a>,
--   <a>getTestGridSessionResponse_httpStatus</a> - The response's http
--   status code.
newGetTestGridSessionResponse :: Int -> GetTestGridSessionResponse

-- | Represents a request to the list jobs operation.
--   
--   <i>See:</i> <a>newListJobs</a> smart constructor.
data ListJobs
ListJobs' :: Maybe Text -> Text -> ListJobs

-- | Create a value of <a>ListJobs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobs_nextToken</a> - An
--   identifier that was returned from the previous call to this operation,
--   which can be used to return the next set of items in the list.
--   
--   <a>$sel:arn:ListJobs'</a>, <a>listJobs_arn</a> - The run's Amazon
--   Resource Name (ARN).
newListJobs :: Text -> ListJobs

-- | Represents the result of a list jobs request.
--   
--   <i>See:</i> <a>newListJobsResponse</a> smart constructor.
data ListJobsResponse
ListJobsResponse' :: Maybe Text -> Maybe [Job] -> Int -> ListJobsResponse

-- | Create a value of <a>ListJobsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListJobs'</a>, <a>listJobsResponse_nextToken</a> -
--   If the number of items that are returned is significantly large, this
--   is an identifier that is also returned. It can be used in a subsequent
--   call to this operation to return the next set of items in the list.
--   
--   <a>$sel:jobs:ListJobsResponse'</a>, <a>listJobsResponse_jobs</a> -
--   Information about the jobs.
--   
--   <a>$sel:httpStatus:ListJobsResponse'</a>,
--   <a>listJobsResponse_httpStatus</a> - The response's http status code.
newListJobsResponse :: Int -> ListJobsResponse

-- | <i>See:</i> <a>newGetNetworkProfile</a> smart constructor.
data GetNetworkProfile
GetNetworkProfile' :: Text -> GetNetworkProfile

-- | Create a value of <a>GetNetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetNetworkProfile'</a>, <a>getNetworkProfile_arn</a> - The
--   ARN of the network profile to return information about.
newGetNetworkProfile :: Text -> GetNetworkProfile

-- | <i>See:</i> <a>newGetNetworkProfileResponse</a> smart constructor.
data GetNetworkProfileResponse
GetNetworkProfileResponse' :: Maybe NetworkProfile -> Int -> GetNetworkProfileResponse

-- | Create a value of <a>GetNetworkProfileResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:networkProfile:GetNetworkProfileResponse'</a>,
--   <a>getNetworkProfileResponse_networkProfile</a> - The network profile.
--   
--   <a>$sel:httpStatus:GetNetworkProfileResponse'</a>,
--   <a>getNetworkProfileResponse_httpStatus</a> - The response's http
--   status code.
newGetNetworkProfileResponse :: Int -> GetNetworkProfileResponse

-- | Represents a request to the get project operation.
--   
--   <i>See:</i> <a>newGetProject</a> smart constructor.
data GetProject
GetProject' :: Text -> GetProject

-- | Create a value of <a>GetProject</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetProject'</a>, <a>getProject_arn</a> - The project's
--   ARN.
newGetProject :: Text -> GetProject

-- | Represents the result of a get project request.
--   
--   <i>See:</i> <a>newGetProjectResponse</a> smart constructor.
data GetProjectResponse
GetProjectResponse' :: Maybe Project -> Int -> GetProjectResponse

-- | Create a value of <a>GetProjectResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:project:GetProjectResponse'</a>,
--   <a>getProjectResponse_project</a> - The project to get information
--   about.
--   
--   <a>$sel:httpStatus:GetProjectResponse'</a>,
--   <a>getProjectResponse_httpStatus</a> - The response's http status
--   code.
newGetProjectResponse :: Int -> GetProjectResponse

-- | <i>See:</i> <a>newUpdateInstanceProfile</a> smart constructor.
data UpdateInstanceProfile
UpdateInstanceProfile' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> Text -> UpdateInstanceProfile

-- | Create a value of <a>UpdateInstanceProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeAppPackagesFromCleanup:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_excludeAppPackagesFromCleanup</a> - An array
--   of strings that specifies the list of app packages that should not be
--   cleaned up from the device after a test run is over.
--   
--   The list of packages is only considered if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
--   
--   <a>$sel:name:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_name</a> - The updated name for your instance
--   profile.
--   
--   <a>$sel:description:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_description</a> - The updated description for
--   your instance profile.
--   
--   <a>$sel:rebootAfterUse:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_rebootAfterUse</a> - The updated choice for
--   whether you want to reboot the device after use. The default value is
--   <tt>true</tt>.
--   
--   <a>$sel:packageCleanup:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_packageCleanup</a> - The updated choice for
--   whether you want to specify package cleanup. The default value is
--   <tt>false</tt> for private devices.
--   
--   <a>$sel:arn:UpdateInstanceProfile'</a>,
--   <a>updateInstanceProfile_arn</a> - The Amazon Resource Name (ARN) of
--   the instance profile.
newUpdateInstanceProfile :: Text -> UpdateInstanceProfile

-- | <i>See:</i> <a>newUpdateInstanceProfileResponse</a> smart constructor.
data UpdateInstanceProfileResponse
UpdateInstanceProfileResponse' :: Maybe InstanceProfile -> Int -> UpdateInstanceProfileResponse

-- | Create a value of <a>UpdateInstanceProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceProfile:UpdateInstanceProfileResponse'</a>,
--   <a>updateInstanceProfileResponse_instanceProfile</a> - An object that
--   contains information about your instance profile.
--   
--   <a>$sel:httpStatus:UpdateInstanceProfileResponse'</a>,
--   <a>updateInstanceProfileResponse_httpStatus</a> - The response's http
--   status code.
newUpdateInstanceProfileResponse :: Int -> UpdateInstanceProfileResponse

-- | <i>See:</i> <a>newListInstanceProfiles</a> smart constructor.
data ListInstanceProfiles
ListInstanceProfiles' :: Maybe Text -> Maybe Int -> ListInstanceProfiles

-- | Create a value of <a>ListInstanceProfiles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInstanceProfiles'</a>,
--   <a>listInstanceProfiles_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
--   
--   <a>$sel:maxResults:ListInstanceProfiles'</a>,
--   <a>listInstanceProfiles_maxResults</a> - An integer that specifies the
--   maximum number of items you want to return in the API response.
newListInstanceProfiles :: ListInstanceProfiles

-- | <i>See:</i> <a>newListInstanceProfilesResponse</a> smart constructor.
data ListInstanceProfilesResponse
ListInstanceProfilesResponse' :: Maybe Text -> Maybe [InstanceProfile] -> Int -> ListInstanceProfilesResponse

-- | Create a value of <a>ListInstanceProfilesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListInstanceProfiles'</a>,
--   <a>listInstanceProfilesResponse_nextToken</a> - An identifier that can
--   be used in the next call to this operation to return the next set of
--   items in the list.
--   
--   <a>$sel:instanceProfiles:ListInstanceProfilesResponse'</a>,
--   <a>listInstanceProfilesResponse_instanceProfiles</a> - An object that
--   contains information about your instance profiles.
--   
--   <a>$sel:httpStatus:ListInstanceProfilesResponse'</a>,
--   <a>listInstanceProfilesResponse_httpStatus</a> - The response's http
--   status code.
newListInstanceProfilesResponse :: Int -> ListInstanceProfilesResponse

-- | <i>See:</i> <a>newDeleteInstanceProfile</a> smart constructor.
data DeleteInstanceProfile
DeleteInstanceProfile' :: Text -> DeleteInstanceProfile

-- | Create a value of <a>DeleteInstanceProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteInstanceProfile'</a>,
--   <a>deleteInstanceProfile_arn</a> - The Amazon Resource Name (ARN) of
--   the instance profile you are requesting to delete.
newDeleteInstanceProfile :: Text -> DeleteInstanceProfile

-- | <i>See:</i> <a>newDeleteInstanceProfileResponse</a> smart constructor.
data DeleteInstanceProfileResponse
DeleteInstanceProfileResponse' :: Int -> DeleteInstanceProfileResponse

-- | Create a value of <a>DeleteInstanceProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteInstanceProfileResponse'</a>,
--   <a>deleteInstanceProfileResponse_httpStatus</a> - The response's http
--   status code.
newDeleteInstanceProfileResponse :: Int -> DeleteInstanceProfileResponse

-- | A request that represents an offering renewal.
--   
--   <i>See:</i> <a>newRenewOffering</a> smart constructor.
data RenewOffering
RenewOffering' :: Text -> Int -> RenewOffering

-- | Create a value of <a>RenewOffering</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringId:RenewOffering'</a>, <a>renewOffering_offeringId</a>
--   - The ID of a request to renew an offering.
--   
--   <a>$sel:quantity:RenewOffering'</a>, <a>renewOffering_quantity</a> -
--   The quantity requested in an offering renewal.
newRenewOffering :: Text -> Int -> RenewOffering

-- | The result of a renewal offering.
--   
--   <i>See:</i> <a>newRenewOfferingResponse</a> smart constructor.
data RenewOfferingResponse
RenewOfferingResponse' :: Maybe OfferingTransaction -> Int -> RenewOfferingResponse

-- | Create a value of <a>RenewOfferingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringTransaction:RenewOfferingResponse'</a>,
--   <a>renewOfferingResponse_offeringTransaction</a> - Represents the
--   status of the offering transaction for the renewal.
--   
--   <a>$sel:httpStatus:RenewOfferingResponse'</a>,
--   <a>renewOfferingResponse_httpStatus</a> - The response's http status
--   code.
newRenewOfferingResponse :: Int -> RenewOfferingResponse

-- | Represents a request for a purchase offering.
--   
--   <i>See:</i> <a>newPurchaseOffering</a> smart constructor.
data PurchaseOffering
PurchaseOffering' :: Maybe Text -> Text -> Int -> PurchaseOffering

-- | Create a value of <a>PurchaseOffering</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringPromotionId:PurchaseOffering'</a>,
--   <a>purchaseOffering_offeringPromotionId</a> - The ID of the offering
--   promotion to be applied to the purchase.
--   
--   <a>$sel:offeringId:PurchaseOffering'</a>,
--   <a>purchaseOffering_offeringId</a> - The ID of the offering.
--   
--   <a>$sel:quantity:PurchaseOffering'</a>,
--   <a>purchaseOffering_quantity</a> - The number of device slots to
--   purchase in an offering request.
newPurchaseOffering :: Text -> Int -> PurchaseOffering

-- | The result of the purchase offering (for example, success or failure).
--   
--   <i>See:</i> <a>newPurchaseOfferingResponse</a> smart constructor.
data PurchaseOfferingResponse
PurchaseOfferingResponse' :: Maybe OfferingTransaction -> Int -> PurchaseOfferingResponse

-- | Create a value of <a>PurchaseOfferingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringTransaction:PurchaseOfferingResponse'</a>,
--   <a>purchaseOfferingResponse_offeringTransaction</a> - Represents the
--   offering transaction for the purchase result.
--   
--   <a>$sel:httpStatus:PurchaseOfferingResponse'</a>,
--   <a>purchaseOfferingResponse_httpStatus</a> - The response's http
--   status code.
newPurchaseOfferingResponse :: Int -> PurchaseOfferingResponse

-- | Represents a request to the delete run operation.
--   
--   <i>See:</i> <a>newDeleteRun</a> smart constructor.
data DeleteRun
DeleteRun' :: Text -> DeleteRun

-- | Create a value of <a>DeleteRun</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteRun'</a>, <a>deleteRun_arn</a> - The Amazon Resource
--   Name (ARN) for the run to delete.
newDeleteRun :: Text -> DeleteRun

-- | Represents the result of a delete run request.
--   
--   <i>See:</i> <a>newDeleteRunResponse</a> smart constructor.
data DeleteRunResponse
DeleteRunResponse' :: Int -> DeleteRunResponse

-- | Create a value of <a>DeleteRunResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteRunResponse'</a>,
--   <a>deleteRunResponse_httpStatus</a> - The response's http status code.
newDeleteRunResponse :: Int -> DeleteRunResponse

-- | Represents the request to get information about the specified remote
--   access session.
--   
--   <i>See:</i> <a>newGetRemoteAccessSession</a> smart constructor.
data GetRemoteAccessSession
GetRemoteAccessSession' :: Text -> GetRemoteAccessSession

-- | Create a value of <a>GetRemoteAccessSession</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetRemoteAccessSession'</a>,
--   <a>getRemoteAccessSession_arn</a> - The Amazon Resource Name (ARN) of
--   the remote access session about which you want to get session
--   information.
newGetRemoteAccessSession :: Text -> GetRemoteAccessSession

-- | Represents the response from the server that lists detailed
--   information about the remote access session.
--   
--   <i>See:</i> <a>newGetRemoteAccessSessionResponse</a> smart
--   constructor.
data GetRemoteAccessSessionResponse
GetRemoteAccessSessionResponse' :: Maybe RemoteAccessSession -> Int -> GetRemoteAccessSessionResponse

-- | Create a value of <a>GetRemoteAccessSessionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSession:GetRemoteAccessSessionResponse'</a>,
--   <a>getRemoteAccessSessionResponse_remoteAccessSession</a> - A
--   container that lists detailed information about the remote access
--   session.
--   
--   <a>$sel:httpStatus:GetRemoteAccessSessionResponse'</a>,
--   <a>getRemoteAccessSessionResponse_httpStatus</a> - The response's http
--   status code.
newGetRemoteAccessSessionResponse :: Int -> GetRemoteAccessSessionResponse

-- | Represents a request to the get suite operation.
--   
--   <i>See:</i> <a>newGetSuite</a> smart constructor.
data GetSuite
GetSuite' :: Text -> GetSuite

-- | Create a value of <a>GetSuite</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetSuite'</a>, <a>getSuite_arn</a> - The suite's ARN.
newGetSuite :: Text -> GetSuite

-- | Represents the result of a get suite request.
--   
--   <i>See:</i> <a>newGetSuiteResponse</a> smart constructor.
data GetSuiteResponse
GetSuiteResponse' :: Maybe Suite -> Int -> GetSuiteResponse

-- | Create a value of <a>GetSuiteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suite:GetSuiteResponse'</a>, <a>getSuiteResponse_suite</a> - A
--   collection of one or more tests.
--   
--   <a>$sel:httpStatus:GetSuiteResponse'</a>,
--   <a>getSuiteResponse_httpStatus</a> - The response's http status code.
newGetSuiteResponse :: Int -> GetSuiteResponse

-- | Represents a request to the get test operation.
--   
--   <i>See:</i> <a>newGetTest</a> smart constructor.
data GetTest
GetTest' :: Text -> GetTest

-- | Create a value of <a>GetTest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetTest'</a>, <a>getTest_arn</a> - The test's ARN.
newGetTest :: Text -> GetTest

-- | Represents the result of a get test request.
--   
--   <i>See:</i> <a>newGetTestResponse</a> smart constructor.
data GetTestResponse
GetTestResponse' :: Maybe Test -> Int -> GetTestResponse

-- | Create a value of <a>GetTestResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:test:GetTestResponse'</a>, <a>getTestResponse_test</a> - A
--   test condition that is evaluated.
--   
--   <a>$sel:httpStatus:GetTestResponse'</a>,
--   <a>getTestResponse_httpStatus</a> - The response's http status code.
newGetTestResponse :: Int -> GetTestResponse

-- | Represents the request to list the offering transaction history.
--   
--   <i>See:</i> <a>newListOfferingTransactions</a> smart constructor.
data ListOfferingTransactions
ListOfferingTransactions' :: Maybe Text -> ListOfferingTransactions

-- | Create a value of <a>ListOfferingTransactions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferingTransactions'</a>,
--   <a>listOfferingTransactions_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
newListOfferingTransactions :: ListOfferingTransactions

-- | Returns the transaction log of the specified offerings.
--   
--   <i>See:</i> <a>newListOfferingTransactionsResponse</a> smart
--   constructor.
data ListOfferingTransactionsResponse
ListOfferingTransactionsResponse' :: Maybe [OfferingTransaction] -> Maybe Text -> Int -> ListOfferingTransactionsResponse

-- | Create a value of <a>ListOfferingTransactionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringTransactions:ListOfferingTransactionsResponse'</a>,
--   <a>listOfferingTransactionsResponse_offeringTransactions</a> - The
--   audit log of subscriptions you have purchased and modified through AWS
--   Device Farm.
--   
--   <a>$sel:nextToken:ListOfferingTransactions'</a>,
--   <a>listOfferingTransactionsResponse_nextToken</a> - An identifier that
--   was returned from the previous call to this operation, which can be
--   used to return the next set of items in the list.
--   
--   <a>$sel:httpStatus:ListOfferingTransactionsResponse'</a>,
--   <a>listOfferingTransactionsResponse_httpStatus</a> - The response's
--   http status code.
newListOfferingTransactionsResponse :: Int -> ListOfferingTransactionsResponse

-- | Represents a request to the delete device pool operation.
--   
--   <i>See:</i> <a>newDeleteDevicePool</a> smart constructor.
data DeleteDevicePool
DeleteDevicePool' :: Text -> DeleteDevicePool

-- | Create a value of <a>DeleteDevicePool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteDevicePool'</a>, <a>deleteDevicePool_arn</a> -
--   Represents the Amazon Resource Name (ARN) of the Device Farm device
--   pool to delete.
newDeleteDevicePool :: Text -> DeleteDevicePool

-- | Represents the result of a delete device pool request.
--   
--   <i>See:</i> <a>newDeleteDevicePoolResponse</a> smart constructor.
data DeleteDevicePoolResponse
DeleteDevicePoolResponse' :: Int -> DeleteDevicePoolResponse

-- | Create a value of <a>DeleteDevicePoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDevicePoolResponse'</a>,
--   <a>deleteDevicePoolResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDevicePoolResponse :: Int -> DeleteDevicePoolResponse

-- | Represents a request to the update device pool operation.
--   
--   <i>See:</i> <a>newUpdateDevicePool</a> smart constructor.
data UpdateDevicePool
UpdateDevicePool' :: Maybe Bool -> Maybe [Rule] -> Maybe Int -> Maybe Text -> Maybe Text -> Text -> UpdateDevicePool

-- | Create a value of <a>UpdateDevicePool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clearMaxDevices:UpdateDevicePool'</a>,
--   <a>updateDevicePool_clearMaxDevices</a> - Sets whether the
--   <tt>maxDevices</tt> parameter applies to your device pool. If you set
--   this parameter to <tt>true</tt>, the <tt>maxDevices</tt> parameter
--   does not apply, and Device Farm does not limit the number of devices
--   that it adds to your device pool. In this case, Device Farm adds all
--   available devices that meet the criteria specified in the
--   <tt>rules</tt> parameter.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>maxDevices</tt> parameter in the same request.
--   
--   <a>$sel:rules:UpdateDevicePool'</a>, <a>updateDevicePool_rules</a> -
--   Represents the rules to modify for the device pool. Updating rules is
--   optional. If you update rules for your request, the update replaces
--   the existing rules.
--   
--   <a>$sel:maxDevices:UpdateDevicePool'</a>,
--   <a>updateDevicePool_maxDevices</a> - The number of devices that Device
--   Farm can add to your device pool. Device Farm adds devices that are
--   available and that meet the criteria that you assign for the
--   <tt>rules</tt> parameter. Depending on how many devices meet these
--   constraints, your device pool might contain fewer devices than the
--   value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   If you use this parameter in your request, you cannot use the
--   <tt>clearMaxDevices</tt> parameter in the same request.
--   
--   <a>$sel:name:UpdateDevicePool'</a>, <a>updateDevicePool_name</a> - A
--   string that represents the name of the device pool to update.
--   
--   <a>$sel:description:UpdateDevicePool'</a>,
--   <a>updateDevicePool_description</a> - A description of the device pool
--   to update.
--   
--   <a>$sel:arn:UpdateDevicePool'</a>, <a>updateDevicePool_arn</a> - The
--   Amazon Resource Name (ARN) of the Device Farm device pool to update.
newUpdateDevicePool :: Text -> UpdateDevicePool

-- | Represents the result of an update device pool request.
--   
--   <i>See:</i> <a>newUpdateDevicePoolResponse</a> smart constructor.
data UpdateDevicePoolResponse
UpdateDevicePoolResponse' :: Maybe DevicePool -> Int -> UpdateDevicePoolResponse

-- | Create a value of <a>UpdateDevicePoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devicePool:UpdateDevicePoolResponse'</a>,
--   <a>updateDevicePoolResponse_devicePool</a> - The device pool you just
--   updated.
--   
--   <a>$sel:httpStatus:UpdateDevicePoolResponse'</a>,
--   <a>updateDevicePoolResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDevicePoolResponse :: Int -> UpdateDevicePoolResponse

-- | Represents a request to the get device pool operation.
--   
--   <i>See:</i> <a>newGetDevicePool</a> smart constructor.
data GetDevicePool
GetDevicePool' :: Text -> GetDevicePool

-- | Create a value of <a>GetDevicePool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetDevicePool'</a>, <a>getDevicePool_arn</a> - The device
--   pool's ARN.
newGetDevicePool :: Text -> GetDevicePool

-- | Represents the result of a get device pool request.
--   
--   <i>See:</i> <a>newGetDevicePoolResponse</a> smart constructor.
data GetDevicePoolResponse
GetDevicePoolResponse' :: Maybe DevicePool -> Int -> GetDevicePoolResponse

-- | Create a value of <a>GetDevicePoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devicePool:GetDevicePoolResponse'</a>,
--   <a>getDevicePoolResponse_devicePool</a> - An object that contains
--   information about the requested device pool.
--   
--   <a>$sel:httpStatus:GetDevicePoolResponse'</a>,
--   <a>getDevicePoolResponse_httpStatus</a> - The response's http status
--   code.
newGetDevicePoolResponse :: Int -> GetDevicePoolResponse

-- | <i>See:</i> <a>newDeleteTestGridProject</a> smart constructor.
data DeleteTestGridProject
DeleteTestGridProject' :: Text -> DeleteTestGridProject

-- | Create a value of <a>DeleteTestGridProject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:projectArn:DeleteTestGridProject'</a>,
--   <a>deleteTestGridProject_projectArn</a> - The ARN of the project to
--   delete, from CreateTestGridProject or ListTestGridProjects.
newDeleteTestGridProject :: Text -> DeleteTestGridProject

-- | <i>See:</i> <a>newDeleteTestGridProjectResponse</a> smart constructor.
data DeleteTestGridProjectResponse
DeleteTestGridProjectResponse' :: Int -> DeleteTestGridProjectResponse

-- | Create a value of <a>DeleteTestGridProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTestGridProjectResponse'</a>,
--   <a>deleteTestGridProjectResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTestGridProjectResponse :: Int -> DeleteTestGridProjectResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The Amazon Resource Name
--   (ARN) of the resource or resources for which to list tags. You can
--   associate tags with the following Device Farm resources:
--   <tt>PROJECT</tt>, <tt>RUN</tt>, <tt>NETWORK_PROFILE</tt>,
--   <tt>INSTANCE_PROFILE</tt>, <tt>DEVICE_INSTANCE</tt>, <tt>SESSION</tt>,
--   <tt>DEVICE_POOL</tt>, <tt>DEVICE</tt>, and
--   <tt>VPCE_CONFIGURATION</tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags to add to the
--   resource. A tag is an array of key-value pairs. Tag keys can have a
--   maximum character length of 128 characters. Tag values can have a
--   maximum length of 256 characters.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newUpdateTestGridProject</a> smart constructor.
data UpdateTestGridProject
UpdateTestGridProject' :: Maybe TestGridVpcConfig -> Maybe Text -> Maybe Text -> Text -> UpdateTestGridProject

-- | Create a value of <a>UpdateTestGridProject</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:UpdateTestGridProject'</a>,
--   <a>updateTestGridProject_vpcConfig</a> - The VPC security groups and
--   subnets that are attached to a project.
--   
--   <a>$sel:name:UpdateTestGridProject'</a>,
--   <a>updateTestGridProject_name</a> - Human-readable name for the
--   project.
--   
--   <a>$sel:description:UpdateTestGridProject'</a>,
--   <a>updateTestGridProject_description</a> - Human-readable description
--   for the project.
--   
--   <a>$sel:projectArn:UpdateTestGridProject'</a>,
--   <a>updateTestGridProject_projectArn</a> - ARN of the project to
--   update.
newUpdateTestGridProject :: Text -> UpdateTestGridProject

-- | <i>See:</i> <a>newUpdateTestGridProjectResponse</a> smart constructor.
data UpdateTestGridProjectResponse
UpdateTestGridProjectResponse' :: Maybe TestGridProject -> Int -> UpdateTestGridProjectResponse

-- | Create a value of <a>UpdateTestGridProjectResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testGridProject:UpdateTestGridProjectResponse'</a>,
--   <a>updateTestGridProjectResponse_testGridProject</a> - The project,
--   including updated information.
--   
--   <a>$sel:httpStatus:UpdateTestGridProjectResponse'</a>,
--   <a>updateTestGridProjectResponse_httpStatus</a> - The response's http
--   status code.
newUpdateTestGridProjectResponse :: Int -> UpdateTestGridProjectResponse

-- | Represents the request sent to retrieve the account settings.
--   
--   <i>See:</i> <a>newGetAccountSettings</a> smart constructor.
data GetAccountSettings
GetAccountSettings' :: GetAccountSettings

-- | Create a value of <a>GetAccountSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetAccountSettings :: GetAccountSettings

-- | Represents the account settings return values from the
--   <tt>GetAccountSettings</tt> request.
--   
--   <i>See:</i> <a>newGetAccountSettingsResponse</a> smart constructor.
data GetAccountSettingsResponse
GetAccountSettingsResponse' :: Maybe AccountSettings -> Int -> GetAccountSettingsResponse

-- | Create a value of <a>GetAccountSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountSettings:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_accountSettings</a> - The account
--   settings.
--   
--   <a>$sel:httpStatus:GetAccountSettingsResponse'</a>,
--   <a>getAccountSettingsResponse_httpStatus</a> - The response's http
--   status code.
newGetAccountSettingsResponse :: Int -> GetAccountSettingsResponse

-- | <i>See:</i> <a>newListOfferingPromotions</a> smart constructor.
data ListOfferingPromotions
ListOfferingPromotions' :: Maybe Text -> ListOfferingPromotions

-- | Create a value of <a>ListOfferingPromotions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferingPromotions'</a>,
--   <a>listOfferingPromotions_nextToken</a> - An identifier that was
--   returned from the previous call to this operation, which can be used
--   to return the next set of items in the list.
newListOfferingPromotions :: ListOfferingPromotions

-- | <i>See:</i> <a>newListOfferingPromotionsResponse</a> smart
--   constructor.
data ListOfferingPromotionsResponse
ListOfferingPromotionsResponse' :: Maybe Text -> Maybe [OfferingPromotion] -> Int -> ListOfferingPromotionsResponse

-- | Create a value of <a>ListOfferingPromotionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOfferingPromotions'</a>,
--   <a>listOfferingPromotionsResponse_nextToken</a> - An identifier to be
--   used in the next call to this operation, to return the next set of
--   items in the list.
--   
--   <a>$sel:offeringPromotions:ListOfferingPromotionsResponse'</a>,
--   <a>listOfferingPromotionsResponse_offeringPromotions</a> - Information
--   about the offering promotions.
--   
--   <a>$sel:httpStatus:ListOfferingPromotionsResponse'</a>,
--   <a>listOfferingPromotionsResponse_httpStatus</a> - The response's http
--   status code.
newListOfferingPromotionsResponse :: Int -> ListOfferingPromotionsResponse
newtype ArtifactCategory
ArtifactCategory' :: Text -> ArtifactCategory
[fromArtifactCategory] :: ArtifactCategory -> Text
pattern ArtifactCategory_FILE :: ArtifactCategory
pattern ArtifactCategory_LOG :: ArtifactCategory
pattern ArtifactCategory_SCREENSHOT :: ArtifactCategory
newtype ArtifactType
ArtifactType' :: Text -> ArtifactType
[fromArtifactType] :: ArtifactType -> Text
pattern ArtifactType_APPIUM_JAVA_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_JAVA_XML_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_PYTHON_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_PYTHON_XML_OUTPUT :: ArtifactType
pattern ArtifactType_APPIUM_SERVER_OUTPUT :: ArtifactType
pattern ArtifactType_APPLICATION_CRASH_REPORT :: ArtifactType
pattern ArtifactType_AUTOMATION_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_JAVA_XML_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_JSON_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_PRETTY_OUTPUT :: ArtifactType
pattern ArtifactType_CALABASH_STANDARD_OUTPUT :: ArtifactType
pattern ArtifactType_CUSTOMER_ARTIFACT :: ArtifactType
pattern ArtifactType_CUSTOMER_ARTIFACT_LOG :: ArtifactType
pattern ArtifactType_DEVICE_LOG :: ArtifactType
pattern ArtifactType_EXERCISER_MONKEY_OUTPUT :: ArtifactType
pattern ArtifactType_EXPLORER_EVENT_LOG :: ArtifactType
pattern ArtifactType_EXPLORER_SUMMARY_LOG :: ArtifactType
pattern ArtifactType_INSTRUMENTATION_OUTPUT :: ArtifactType
pattern ArtifactType_MESSAGE_LOG :: ArtifactType
pattern ArtifactType_RESULT_LOG :: ArtifactType
pattern ArtifactType_SCREENSHOT :: ArtifactType
pattern ArtifactType_SERVICE_LOG :: ArtifactType
pattern ArtifactType_TESTSPEC_OUTPUT :: ArtifactType
pattern ArtifactType_UNKNOWN :: ArtifactType
pattern ArtifactType_VIDEO :: ArtifactType
pattern ArtifactType_VIDEO_LOG :: ArtifactType
pattern ArtifactType_WEBKIT_LOG :: ArtifactType
pattern ArtifactType_XCTEST_LOG :: ArtifactType
newtype BillingMethod
BillingMethod' :: Text -> BillingMethod
[fromBillingMethod] :: BillingMethod -> Text
pattern BillingMethod_METERED :: BillingMethod
pattern BillingMethod_UNMETERED :: BillingMethod
newtype CurrencyCode
CurrencyCode' :: Text -> CurrencyCode
[fromCurrencyCode] :: CurrencyCode -> Text
pattern CurrencyCode_USD :: CurrencyCode
newtype DeviceAttribute
DeviceAttribute' :: Text -> DeviceAttribute
[fromDeviceAttribute] :: DeviceAttribute -> Text
pattern DeviceAttribute_APPIUM_VERSION :: DeviceAttribute
pattern DeviceAttribute_ARN :: DeviceAttribute
pattern DeviceAttribute_AVAILABILITY :: DeviceAttribute
pattern DeviceAttribute_FLEET_TYPE :: DeviceAttribute
pattern DeviceAttribute_FORM_FACTOR :: DeviceAttribute
pattern DeviceAttribute_INSTANCE_ARN :: DeviceAttribute
pattern DeviceAttribute_INSTANCE_LABELS :: DeviceAttribute
pattern DeviceAttribute_MANUFACTURER :: DeviceAttribute
pattern DeviceAttribute_MODEL :: DeviceAttribute
pattern DeviceAttribute_OS_VERSION :: DeviceAttribute
pattern DeviceAttribute_PLATFORM :: DeviceAttribute
pattern DeviceAttribute_REMOTE_ACCESS_ENABLED :: DeviceAttribute
pattern DeviceAttribute_REMOTE_DEBUG_ENABLED :: DeviceAttribute
newtype DeviceAvailability
DeviceAvailability' :: Text -> DeviceAvailability
[fromDeviceAvailability] :: DeviceAvailability -> Text
pattern DeviceAvailability_AVAILABLE :: DeviceAvailability
pattern DeviceAvailability_BUSY :: DeviceAvailability
pattern DeviceAvailability_HIGHLY_AVAILABLE :: DeviceAvailability
pattern DeviceAvailability_TEMPORARY_NOT_AVAILABLE :: DeviceAvailability
newtype DeviceFilterAttribute
DeviceFilterAttribute' :: Text -> DeviceFilterAttribute
[fromDeviceFilterAttribute] :: DeviceFilterAttribute -> Text
pattern DeviceFilterAttribute_ARN :: DeviceFilterAttribute
pattern DeviceFilterAttribute_AVAILABILITY :: DeviceFilterAttribute
pattern DeviceFilterAttribute_FLEET_TYPE :: DeviceFilterAttribute
pattern DeviceFilterAttribute_FORM_FACTOR :: DeviceFilterAttribute
pattern DeviceFilterAttribute_INSTANCE_ARN :: DeviceFilterAttribute
pattern DeviceFilterAttribute_INSTANCE_LABELS :: DeviceFilterAttribute
pattern DeviceFilterAttribute_MANUFACTURER :: DeviceFilterAttribute
pattern DeviceFilterAttribute_MODEL :: DeviceFilterAttribute
pattern DeviceFilterAttribute_OS_VERSION :: DeviceFilterAttribute
pattern DeviceFilterAttribute_PLATFORM :: DeviceFilterAttribute
pattern DeviceFilterAttribute_REMOTE_ACCESS_ENABLED :: DeviceFilterAttribute
pattern DeviceFilterAttribute_REMOTE_DEBUG_ENABLED :: DeviceFilterAttribute
newtype DeviceFormFactor
DeviceFormFactor' :: Text -> DeviceFormFactor
[fromDeviceFormFactor] :: DeviceFormFactor -> Text
pattern DeviceFormFactor_PHONE :: DeviceFormFactor
pattern DeviceFormFactor_TABLET :: DeviceFormFactor
newtype DevicePlatform
DevicePlatform' :: Text -> DevicePlatform
[fromDevicePlatform] :: DevicePlatform -> Text
pattern DevicePlatform_ANDROID :: DevicePlatform
pattern DevicePlatform_IOS :: DevicePlatform
newtype DevicePoolType
DevicePoolType' :: Text -> DevicePoolType
[fromDevicePoolType] :: DevicePoolType -> Text
pattern DevicePoolType_CURATED :: DevicePoolType
pattern DevicePoolType_PRIVATE :: DevicePoolType
newtype ExecutionResult
ExecutionResult' :: Text -> ExecutionResult
[fromExecutionResult] :: ExecutionResult -> Text
pattern ExecutionResult_ERRORED :: ExecutionResult
pattern ExecutionResult_FAILED :: ExecutionResult
pattern ExecutionResult_PASSED :: ExecutionResult
pattern ExecutionResult_PENDING :: ExecutionResult
pattern ExecutionResult_SKIPPED :: ExecutionResult
pattern ExecutionResult_STOPPED :: ExecutionResult
pattern ExecutionResult_WARNED :: ExecutionResult
newtype ExecutionResultCode
ExecutionResultCode' :: Text -> ExecutionResultCode
[fromExecutionResultCode] :: ExecutionResultCode -> Text
pattern ExecutionResultCode_PARSING_FAILED :: ExecutionResultCode
pattern ExecutionResultCode_VPC_ENDPOINT_SETUP_FAILED :: ExecutionResultCode
newtype ExecutionStatus
ExecutionStatus' :: Text -> ExecutionStatus
[fromExecutionStatus] :: ExecutionStatus -> Text
pattern ExecutionStatus_COMPLETED :: ExecutionStatus
pattern ExecutionStatus_PENDING :: ExecutionStatus
pattern ExecutionStatus_PENDING_CONCURRENCY :: ExecutionStatus
pattern ExecutionStatus_PENDING_DEVICE :: ExecutionStatus
pattern ExecutionStatus_PREPARING :: ExecutionStatus
pattern ExecutionStatus_PROCESSING :: ExecutionStatus
pattern ExecutionStatus_RUNNING :: ExecutionStatus
pattern ExecutionStatus_SCHEDULING :: ExecutionStatus
pattern ExecutionStatus_STOPPING :: ExecutionStatus
newtype InstanceStatus
InstanceStatus' :: Text -> InstanceStatus
[fromInstanceStatus] :: InstanceStatus -> Text
pattern InstanceStatus_AVAILABLE :: InstanceStatus
pattern InstanceStatus_IN_USE :: InstanceStatus
pattern InstanceStatus_NOT_AVAILABLE :: InstanceStatus
pattern InstanceStatus_PREPARING :: InstanceStatus
newtype InteractionMode
InteractionMode' :: Text -> InteractionMode
[fromInteractionMode] :: InteractionMode -> Text
pattern InteractionMode_INTERACTIVE :: InteractionMode
pattern InteractionMode_NO_VIDEO :: InteractionMode
pattern InteractionMode_VIDEO_ONLY :: InteractionMode
newtype NetworkProfileType
NetworkProfileType' :: Text -> NetworkProfileType
[fromNetworkProfileType] :: NetworkProfileType -> Text
pattern NetworkProfileType_CURATED :: NetworkProfileType
pattern NetworkProfileType_PRIVATE :: NetworkProfileType
newtype OfferingTransactionType
OfferingTransactionType' :: Text -> OfferingTransactionType
[fromOfferingTransactionType] :: OfferingTransactionType -> Text
pattern OfferingTransactionType_PURCHASE :: OfferingTransactionType
pattern OfferingTransactionType_RENEW :: OfferingTransactionType
pattern OfferingTransactionType_SYSTEM :: OfferingTransactionType
newtype OfferingType
OfferingType' :: Text -> OfferingType
[fromOfferingType] :: OfferingType -> Text
pattern OfferingType_RECURRING :: OfferingType
newtype RecurringChargeFrequency
RecurringChargeFrequency' :: Text -> RecurringChargeFrequency
[fromRecurringChargeFrequency] :: RecurringChargeFrequency -> Text
pattern RecurringChargeFrequency_MONTHLY :: RecurringChargeFrequency
newtype RuleOperator
RuleOperator' :: Text -> RuleOperator
[fromRuleOperator] :: RuleOperator -> Text
pattern RuleOperator_CONTAINS :: RuleOperator
pattern RuleOperator_EQUALS :: RuleOperator
pattern RuleOperator_GREATER_THAN :: RuleOperator
pattern RuleOperator_GREATER_THAN_OR_EQUALS :: RuleOperator
pattern RuleOperator_IN :: RuleOperator
pattern RuleOperator_LESS_THAN :: RuleOperator
pattern RuleOperator_LESS_THAN_OR_EQUALS :: RuleOperator
pattern RuleOperator_NOT_IN :: RuleOperator
newtype SampleType
SampleType' :: Text -> SampleType
[fromSampleType] :: SampleType -> Text
pattern SampleType_CPU :: SampleType
pattern SampleType_MEMORY :: SampleType
pattern SampleType_NATIVE_AVG_DRAWTIME :: SampleType
pattern SampleType_NATIVE_FPS :: SampleType
pattern SampleType_NATIVE_FRAMES :: SampleType
pattern SampleType_NATIVE_MAX_DRAWTIME :: SampleType
pattern SampleType_NATIVE_MIN_DRAWTIME :: SampleType
pattern SampleType_OPENGL_AVG_DRAWTIME :: SampleType
pattern SampleType_OPENGL_FPS :: SampleType
pattern SampleType_OPENGL_FRAMES :: SampleType
pattern SampleType_OPENGL_MAX_DRAWTIME :: SampleType
pattern SampleType_OPENGL_MIN_DRAWTIME :: SampleType
pattern SampleType_RX :: SampleType
pattern SampleType_RX_RATE :: SampleType
pattern SampleType_THREADS :: SampleType
pattern SampleType_TX :: SampleType
pattern SampleType_TX_RATE :: SampleType
newtype TestGridSessionArtifactCategory
TestGridSessionArtifactCategory' :: Text -> TestGridSessionArtifactCategory
[fromTestGridSessionArtifactCategory] :: TestGridSessionArtifactCategory -> Text
pattern TestGridSessionArtifactCategory_LOG :: TestGridSessionArtifactCategory
pattern TestGridSessionArtifactCategory_VIDEO :: TestGridSessionArtifactCategory
newtype TestGridSessionArtifactType
TestGridSessionArtifactType' :: Text -> TestGridSessionArtifactType
[fromTestGridSessionArtifactType] :: TestGridSessionArtifactType -> Text
pattern TestGridSessionArtifactType_SELENIUM_LOG :: TestGridSessionArtifactType
pattern TestGridSessionArtifactType_UNKNOWN :: TestGridSessionArtifactType
pattern TestGridSessionArtifactType_VIDEO :: TestGridSessionArtifactType
newtype TestGridSessionStatus
TestGridSessionStatus' :: Text -> TestGridSessionStatus
[fromTestGridSessionStatus] :: TestGridSessionStatus -> Text
pattern TestGridSessionStatus_ACTIVE :: TestGridSessionStatus
pattern TestGridSessionStatus_CLOSED :: TestGridSessionStatus
pattern TestGridSessionStatus_ERRORED :: TestGridSessionStatus
newtype TestType
TestType' :: Text -> TestType
[fromTestType] :: TestType -> Text
pattern TestType_APPIUM_JAVA_JUNIT :: TestType
pattern TestType_APPIUM_JAVA_TESTNG :: TestType
pattern TestType_APPIUM_NODE :: TestType
pattern TestType_APPIUM_PYTHON :: TestType
pattern TestType_APPIUM_RUBY :: TestType
pattern TestType_APPIUM_WEB_JAVA_JUNIT :: TestType
pattern TestType_APPIUM_WEB_JAVA_TESTNG :: TestType
pattern TestType_APPIUM_WEB_NODE :: TestType
pattern TestType_APPIUM_WEB_PYTHON :: TestType
pattern TestType_APPIUM_WEB_RUBY :: TestType
pattern TestType_BUILTIN_EXPLORER :: TestType
pattern TestType_BUILTIN_FUZZ :: TestType
pattern TestType_CALABASH :: TestType
pattern TestType_INSTRUMENTATION :: TestType
pattern TestType_REMOTE_ACCESS_RECORD :: TestType
pattern TestType_REMOTE_ACCESS_REPLAY :: TestType
pattern TestType_UIAUTOMATION :: TestType
pattern TestType_UIAUTOMATOR :: TestType
pattern TestType_WEB_PERFORMANCE_PROFILE :: TestType
pattern TestType_XCTEST :: TestType
pattern TestType_XCTEST_UI :: TestType
newtype UploadCategory
UploadCategory' :: Text -> UploadCategory
[fromUploadCategory] :: UploadCategory -> Text
pattern UploadCategory_CURATED :: UploadCategory
pattern UploadCategory_PRIVATE :: UploadCategory
newtype UploadStatus
UploadStatus' :: Text -> UploadStatus
[fromUploadStatus] :: UploadStatus -> Text
pattern UploadStatus_FAILED :: UploadStatus
pattern UploadStatus_INITIALIZED :: UploadStatus
pattern UploadStatus_PROCESSING :: UploadStatus
pattern UploadStatus_SUCCEEDED :: UploadStatus
newtype UploadType
UploadType' :: Text -> UploadType
[fromUploadType] :: UploadType -> Text
pattern UploadType_ANDROID_APP :: UploadType
pattern UploadType_APPIUM_JAVA_JUNIT_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_JAVA_JUNIT_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_JAVA_TESTNG_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_JAVA_TESTNG_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_NODE_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_NODE_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_PYTHON_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_PYTHON_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_RUBY_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_RUBY_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_JUNIT_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_JAVA_TESTNG_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_NODE_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_NODE_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_PYTHON_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_PYTHON_TEST_SPEC :: UploadType
pattern UploadType_APPIUM_WEB_RUBY_TEST_PACKAGE :: UploadType
pattern UploadType_APPIUM_WEB_RUBY_TEST_SPEC :: UploadType
pattern UploadType_CALABASH_TEST_PACKAGE :: UploadType
pattern UploadType_EXTERNAL_DATA :: UploadType
pattern UploadType_INSTRUMENTATION_TEST_PACKAGE :: UploadType
pattern UploadType_INSTRUMENTATION_TEST_SPEC :: UploadType
pattern UploadType_IOS_APP :: UploadType
pattern UploadType_UIAUTOMATION_TEST_PACKAGE :: UploadType
pattern UploadType_UIAUTOMATOR_TEST_PACKAGE :: UploadType
pattern UploadType_WEB_APP :: UploadType
pattern UploadType_XCTEST_TEST_PACKAGE :: UploadType
pattern UploadType_XCTEST_UI_TEST_PACKAGE :: UploadType
pattern UploadType_XCTEST_UI_TEST_SPEC :: UploadType

-- | A container for account-level settings in AWS Device Farm.
--   
--   <i>See:</i> <a>newAccountSettings</a> smart constructor.
data AccountSettings
AccountSettings' :: Maybe Text -> Maybe (HashMap Text Int) -> Maybe TrialMinutes -> Maybe Bool -> Maybe Int -> Maybe (HashMap DevicePlatform Int) -> Maybe (HashMap DevicePlatform Int) -> Maybe Int -> AccountSettings

-- | Create a value of <a>AccountSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:awsAccountNumber:AccountSettings'</a>,
--   <a>accountSettings_awsAccountNumber</a> - The AWS account number
--   specified in the <tt>AccountSettings</tt> container.
--   
--   <a>$sel:maxSlots:AccountSettings'</a>, <a>accountSettings_maxSlots</a>
--   - The maximum number of device slots that the AWS account can
--   purchase. Each maximum is expressed as an <tt>offering-id:number</tt>
--   pair, where the <tt>offering-id</tt> represents one of the IDs
--   returned by the <tt>ListOfferings</tt> command.
--   
--   <a>$sel:trialMinutes:AccountSettings'</a>,
--   <a>accountSettings_trialMinutes</a> - Information about an AWS
--   account's usage of free trial device minutes.
--   
--   <a>$sel:skipAppResign:AccountSettings'</a>,
--   <a>accountSettings_skipAppResign</a> - When set to <tt>true</tt>, for
--   private devices, Device Farm does not sign your app again. For public
--   devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:maxJobTimeoutMinutes:AccountSettings'</a>,
--   <a>accountSettings_maxJobTimeoutMinutes</a> - The maximum number of
--   minutes a test run executes before it times out.
--   
--   <a>$sel:unmeteredDevices:AccountSettings'</a>,
--   <a>accountSettings_unmeteredDevices</a> - Returns the unmetered
--   devices you have purchased or want to purchase.
--   
--   <a>$sel:unmeteredRemoteAccessDevices:AccountSettings'</a>,
--   <a>accountSettings_unmeteredRemoteAccessDevices</a> - Returns the
--   unmetered remote access devices you have purchased or want to
--   purchase.
--   
--   <a>$sel:defaultJobTimeoutMinutes:AccountSettings'</a>,
--   <a>accountSettings_defaultJobTimeoutMinutes</a> - The default number
--   of minutes (at the account level) a test run executes before it times
--   out. The default value is 150 minutes.
newAccountSettings :: AccountSettings

-- | Represents the output of a test. Examples of artifacts include logs
--   and screenshots.
--   
--   <i>See:</i> <a>newArtifact</a> smart constructor.
data Artifact
Artifact' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ArtifactType -> Artifact

-- | Create a value of <a>Artifact</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Artifact'</a>, <a>artifact_arn</a> - The artifact's ARN.
--   
--   <a>$sel:name:Artifact'</a>, <a>artifact_name</a> - The artifact's
--   name.
--   
--   <a>$sel:extension:Artifact'</a>, <a>artifact_extension</a> - The
--   artifact's file extension.
--   
--   <a>$sel:url:Artifact'</a>, <a>artifact_url</a> - The presigned Amazon
--   S3 URL that can be used with a GET request to download the artifact's
--   file.
--   
--   <a>$sel:type':Artifact'</a>, <a>artifact_type</a> - The artifact's
--   type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>UNKNOWN</li>
--   <li>SCREENSHOT</li>
--   <li>DEVICE_LOG</li>
--   <li>MESSAGE_LOG</li>
--   <li>VIDEO_LOG</li>
--   <li>RESULT_LOG</li>
--   <li>SERVICE_LOG</li>
--   <li>WEBKIT_LOG</li>
--   <li>INSTRUMENTATION_OUTPUT</li>
--   <li>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an
--   Android fuzz test.</li>
--   <li>CALABASH_JSON_OUTPUT</li>
--   <li>CALABASH_PRETTY_OUTPUT</li>
--   <li>CALABASH_STANDARD_OUTPUT</li>
--   <li>CALABASH_JAVA_XML_OUTPUT</li>
--   <li>AUTOMATION_OUTPUT</li>
--   <li>APPIUM_SERVER_OUTPUT</li>
--   <li>APPIUM_JAVA_OUTPUT</li>
--   <li>APPIUM_JAVA_XML_OUTPUT</li>
--   <li>APPIUM_PYTHON_OUTPUT</li>
--   <li>APPIUM_PYTHON_XML_OUTPUT</li>
--   <li>EXPLORER_EVENT_LOG</li>
--   <li>EXPLORER_SUMMARY_LOG</li>
--   <li>APPLICATION_CRASH_REPORT</li>
--   <li>XCTEST_LOG</li>
--   <li>VIDEO</li>
--   <li>CUSTOMER_ARTIFACT</li>
--   <li>CUSTOMER_ARTIFACT_LOG</li>
--   <li>TESTSPEC_OUTPUT</li>
--   </ul>
newArtifact :: Artifact

-- | Represents the amount of CPU that an app is using on a physical
--   device. Does not represent system-wide CPU usage.
--   
--   <i>See:</i> <a>newCPU</a> smart constructor.
data CPU
CPU' :: Maybe Text -> Maybe Text -> Maybe Double -> CPU

-- | Create a value of <a>CPU</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:architecture:CPU'</a>, <a>cpu_architecture</a> - The CPU's
--   architecture (for example, x86 or ARM).
--   
--   <a>$sel:frequency:CPU'</a>, <a>cpu_frequency</a> - The CPU's
--   frequency.
--   
--   <a>$sel:clock:CPU'</a>, <a>cpu_clock</a> - The clock speed of the
--   device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is
--   expressed as 1200000000.
newCPU :: CPU

-- | Represents entity counters.
--   
--   <i>See:</i> <a>newCounters</a> smart constructor.
data Counters
Counters' :: Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Maybe Int -> Counters

-- | Create a value of <a>Counters</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errored:Counters'</a>, <a>counters_errored</a> - The number of
--   errored entities.
--   
--   <a>$sel:warned:Counters'</a>, <a>counters_warned</a> - The number of
--   warned entities.
--   
--   <a>$sel:passed:Counters'</a>, <a>counters_passed</a> - The number of
--   passed entities.
--   
--   <a>$sel:total:Counters'</a>, <a>counters_total</a> - The total number
--   of entities.
--   
--   <a>$sel:stopped:Counters'</a>, <a>counters_stopped</a> - The number of
--   stopped entities.
--   
--   <a>$sel:failed:Counters'</a>, <a>counters_failed</a> - The number of
--   failed entities.
--   
--   <a>$sel:skipped:Counters'</a>, <a>counters_skipped</a> - The number of
--   skipped entities.
newCounters :: Counters

-- | Configuration settings for a remote access session, including billing
--   method.
--   
--   <i>See:</i> <a>newCreateRemoteAccessSessionConfiguration</a> smart
--   constructor.
data CreateRemoteAccessSessionConfiguration
CreateRemoteAccessSessionConfiguration' :: Maybe BillingMethod -> Maybe [Text] -> CreateRemoteAccessSessionConfiguration

-- | Create a value of <a>CreateRemoteAccessSessionConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:billingMethod:CreateRemoteAccessSessionConfiguration'</a>,
--   <a>createRemoteAccessSessionConfiguration_billingMethod</a> - The
--   billing method for the remote access session.
--   
--   
--   <a>$sel:vpceConfigurationArns:CreateRemoteAccessSessionConfiguration'</a>,
--   <a>createRemoteAccessSessionConfiguration_vpceConfigurationArns</a> -
--   An array of ARNs included in the VPC endpoint configuration.
newCreateRemoteAccessSessionConfiguration :: CreateRemoteAccessSessionConfiguration

-- | A JSON object that specifies the paths where the artifacts generated
--   by the customer's tests, on the device or in the test environment, are
--   pulled from.
--   
--   Specify <tt>deviceHostPaths</tt> and optionally specify either
--   <tt>iosPaths</tt> or <tt>androidPaths</tt>.
--   
--   For web app tests, you can specify both <tt>iosPaths</tt> and
--   <tt>androidPaths</tt>.
--   
--   <i>See:</i> <a>newCustomerArtifactPaths</a> smart constructor.
data CustomerArtifactPaths
CustomerArtifactPaths' :: Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> CustomerArtifactPaths

-- | Create a value of <a>CustomerArtifactPaths</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceHostPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_deviceHostPaths</a> - Comma-separated list of
--   paths in the test execution environment where the artifacts generated
--   by the customer's tests are pulled from.
--   
--   <a>$sel:iosPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_iosPaths</a> - Comma-separated list of paths
--   on the iOS device where the artifacts generated by the customer's
--   tests are pulled from.
--   
--   <a>$sel:androidPaths:CustomerArtifactPaths'</a>,
--   <a>customerArtifactPaths_androidPaths</a> - Comma-separated list of
--   paths on the Android device where the artifacts generated by the
--   customer's tests are pulled from.
newCustomerArtifactPaths :: CustomerArtifactPaths

-- | Represents a device type that an app is tested against.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe DevicePlatform -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe DeviceAvailability -> Maybe Text -> Maybe Text -> Maybe DeviceFormFactor -> Maybe Text -> Maybe Bool -> Maybe [DeviceInstance] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Resolution -> Maybe CPU -> Maybe Bool -> Maybe Text -> Device

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Device'</a>, <a>device_platform</a> - The device's
--   platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
--   
--   <a>$sel:manufacturer:Device'</a>, <a>device_manufacturer</a> - The
--   device's manufacturer name.
--   
--   <a>$sel:model:Device'</a>, <a>device_model</a> - The device's model
--   name.
--   
--   <a>$sel:memory:Device'</a>, <a>device_memory</a> - The device's total
--   memory size, expressed in bytes.
--   
--   <a>$sel:availability:Device'</a>, <a>device_availability</a> -
--   Indicates how likely a device is available for a test run. Currently
--   available in the ListDevices and GetDevice API methods.
--   
--   <a>$sel:fleetName:Device'</a>, <a>device_fleetName</a> - The name of
--   the fleet to which this device belongs.
--   
--   <a>$sel:fleetType:Device'</a>, <a>device_fleetType</a> - The type of
--   fleet to which this device belongs. Possible values are PRIVATE and
--   PUBLIC.
--   
--   <a>$sel:formFactor:Device'</a>, <a>device_formFactor</a> - The
--   device's form factor.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PHONE</li>
--   <li>TABLET</li>
--   </ul>
--   
--   <a>$sel:arn:Device'</a>, <a>device_arn</a> - The device's ARN.
--   
--   <a>$sel:remoteAccessEnabled:Device'</a>,
--   <a>device_remoteAccessEnabled</a> - Specifies whether remote access
--   has been enabled for the specified device.
--   
--   <a>$sel:instances:Device'</a>, <a>device_instances</a> - The instances
--   that belong to this device.
--   
--   <a>$sel:name:Device'</a>, <a>device_name</a> - The device's display
--   name.
--   
--   <a>$sel:image:Device'</a>, <a>device_image</a> - The device's image
--   name.
--   
--   <a>$sel:carrier:Device'</a>, <a>device_carrier</a> - The device's
--   carrier.
--   
--   <a>$sel:os:Device'</a>, <a>device_os</a> - The device's operating
--   system type.
--   
--   <a>$sel:heapSize:Device'</a>, <a>device_heapSize</a> - The device's
--   heap size, expressed in bytes.
--   
--   <a>$sel:radio:Device'</a>, <a>device_radio</a> - The device's radio.
--   
--   <a>$sel:resolution:Device'</a>, <a>device_resolution</a> - The
--   resolution of the device.
--   
--   <a>$sel:cpu:Device'</a>, <a>device_cpu</a> - Information about the
--   device's CPU.
--   
--   <a>$sel:remoteDebugEnabled:Device'</a>,
--   <a>device_remoteDebugEnabled</a> - This flag is set to <tt>true</tt>
--   if remote debugging is enabled for the device.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:modelId:Device'</a>, <a>device_modelId</a> - The device's
--   model ID.
newDevice :: Device

-- | Represents a device filter used to select a set of devices to be
--   included in a test run. This data structure is passed in as the
--   <tt>deviceSelectionConfiguration</tt> parameter to
--   <tt>ScheduleRun</tt>. For an example of the JSON request syntax, see
--   ScheduleRun.
--   
--   It is also passed in as the <tt>filters</tt> parameter to
--   <tt>ListDevices</tt>. For an example of the JSON request syntax, see
--   ListDevices.
--   
--   <i>See:</i> <a>newDeviceFilter</a> smart constructor.
data DeviceFilter
DeviceFilter' :: DeviceFilterAttribute -> RuleOperator -> [Text] -> DeviceFilter

-- | Create a value of <a>DeviceFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attribute:DeviceFilter'</a>, <a>deviceFilter_attribute</a> -
--   The aspect of a device such as platform or model used as the selection
--   criteria in a device filter.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model (for example, iPad 5th
--   Gen).Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   </ul>
--   
--   <a>$sel:operator:DeviceFilter'</a>, <a>deviceFilter_operator</a> -
--   Specifies how Device Farm compares the filter's attribute to the
--   value. See the attribute descriptions.
--   
--   <a>$sel:values:DeviceFilter'</a>, <a>deviceFilter_values</a> - An
--   array of one or more filter values used in a device filter.
--   
--   <b>Operator Values</b>
--   
--   <ul>
--   <li>The IN and NOT_IN operators can take a values array that has more
--   than one element.</li>
--   <li>The other operators require an array with a single element.</li>
--   </ul>
--   
--   <b>Attribute Values</b>
--   
--   <ul>
--   <li>The PLATFORM attribute can be set to ANDROID or IOS.</li>
--   <li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li>
--   <li>The FORM_FACTOR attribute can be set to PHONE or TABLET.</li>
--   <li>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li>
--   </ul>
newDeviceFilter :: DeviceFilterAttribute -> RuleOperator -> DeviceFilter

-- | Represents the device instance.
--   
--   <i>See:</i> <a>newDeviceInstance</a> smart constructor.
data DeviceInstance
DeviceInstance' :: Maybe InstanceStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe InstanceProfile -> DeviceInstance

-- | Create a value of <a>DeviceInstance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeviceInstance'</a>, <a>deviceInstance_status</a> - The
--   status of the device instance. Valid values are listed here.
--   
--   <a>$sel:udid:DeviceInstance'</a>, <a>deviceInstance_udid</a> - Unique
--   device identifier for the device instance.
--   
--   <a>$sel:deviceArn:DeviceInstance'</a>, <a>deviceInstance_deviceArn</a>
--   - The ARN of the device.
--   
--   <a>$sel:arn:DeviceInstance'</a>, <a>deviceInstance_arn</a> - The
--   Amazon Resource Name (ARN) of the device instance.
--   
--   <a>$sel:labels:DeviceInstance'</a>, <a>deviceInstance_labels</a> - An
--   array of strings that describe the device instance.
--   
--   <a>$sel:instanceProfile:DeviceInstance'</a>,
--   <a>deviceInstance_instanceProfile</a> - A object that contains
--   information about the instance profile.
newDeviceInstance :: DeviceInstance

-- | Represents the total (metered or unmetered) minutes used by the
--   resource to run tests. Contains the sum of minutes consumed by all
--   children.
--   
--   <i>See:</i> <a>newDeviceMinutes</a> smart constructor.
data DeviceMinutes
DeviceMinutes' :: Maybe Double -> Maybe Double -> Maybe Double -> DeviceMinutes

-- | Create a value of <a>DeviceMinutes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unmetered:DeviceMinutes'</a>, <a>deviceMinutes_unmetered</a> -
--   When specified, represents only the sum of unmetered minutes used by
--   the resource to run tests.
--   
--   <a>$sel:metered:DeviceMinutes'</a>, <a>deviceMinutes_metered</a> -
--   When specified, represents only the sum of metered minutes used by the
--   resource to run tests.
--   
--   <a>$sel:total:DeviceMinutes'</a>, <a>deviceMinutes_total</a> - When
--   specified, represents the total minutes used by the resource to run
--   tests.
newDeviceMinutes :: DeviceMinutes

-- | Represents a collection of device types.
--   
--   <i>See:</i> <a>newDevicePool</a> smart constructor.
data DevicePool
DevicePool' :: Maybe Text -> Maybe [Rule] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe DevicePoolType -> DevicePool

-- | Create a value of <a>DevicePool</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DevicePool'</a>, <a>devicePool_arn</a> - The device pool's
--   ARN.
--   
--   <a>$sel:rules:DevicePool'</a>, <a>devicePool_rules</a> - Information
--   about the device pool's rules.
--   
--   <a>$sel:maxDevices:DevicePool'</a>, <a>devicePool_maxDevices</a> - The
--   number of devices that Device Farm can add to your device pool. Device
--   Farm adds devices that are available and meet the criteria that you
--   assign for the <tt>rules</tt> parameter. Depending on how many devices
--   meet these constraints, your device pool might contain fewer devices
--   than the value for this parameter.
--   
--   By specifying the maximum number of devices, you can control the costs
--   that you incur by running tests.
--   
--   <a>$sel:name:DevicePool'</a>, <a>devicePool_name</a> - The device
--   pool's name.
--   
--   <a>$sel:description:DevicePool'</a>, <a>devicePool_description</a> -
--   The device pool's description.
--   
--   <a>$sel:type':DevicePool'</a>, <a>devicePool_type</a> - The device
--   pool's type.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>CURATED: A device pool that is created and managed by AWS Device
--   Farm.</li>
--   <li>PRIVATE: A device pool that is created and managed by the device
--   pool developer.</li>
--   </ul>
newDevicePool :: DevicePool

-- | Represents a device pool compatibility result.
--   
--   <i>See:</i> <a>newDevicePoolCompatibilityResult</a> smart constructor.
data DevicePoolCompatibilityResult
DevicePoolCompatibilityResult' :: Maybe [IncompatibilityMessage] -> Maybe Bool -> Maybe Device -> DevicePoolCompatibilityResult

-- | Create a value of <a>DevicePoolCompatibilityResult</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:incompatibilityMessages:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_incompatibilityMessages</a> -
--   Information about the compatibility.
--   
--   <a>$sel:compatible:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_compatible</a> - Whether the result
--   was compatible with the device pool.
--   
--   <a>$sel:device:DevicePoolCompatibilityResult'</a>,
--   <a>devicePoolCompatibilityResult_device</a> - The device (phone or
--   tablet) to return information about.
newDevicePoolCompatibilityResult :: DevicePoolCompatibilityResult

-- | Represents the device filters used in a test run and the maximum
--   number of devices to be included in the run. It is passed in as the
--   <tt>deviceSelectionConfiguration</tt> request parameter in
--   ScheduleRun.
--   
--   <i>See:</i> <a>newDeviceSelectionConfiguration</a> smart constructor.
data DeviceSelectionConfiguration
DeviceSelectionConfiguration' :: [DeviceFilter] -> Int -> DeviceSelectionConfiguration

-- | Create a value of <a>DeviceSelectionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:DeviceSelectionConfiguration'</a>,
--   <a>deviceSelectionConfiguration_filters</a> - Used to dynamically
--   select a set of devices for a test run. A filter is made up of an
--   attribute, an operator, and one or more values.
--   
--   <ul>
--   <li><b>Attribute</b>The aspect of a device such as platform or model
--   used as the selection criteria in a device filter.Allowed values
--   include:<ul><li>ARN: The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>).</li><li>PLATFORM:
--   The device platform. Valid values are ANDROID or
--   IOS.</li><li>OS_VERSION: The operating system version (for example,
--   10.3.2).</li><li>MODEL: The device model (for example, iPad 5th
--   Gen).</li><li>AVAILABILITY: The current availability of the device.
--   Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.</li><li>FORM_FACTOR: The device form factor.
--   Valid values are PHONE or TABLET.</li><li>MANUFACTURER: The device
--   manufacturer (for example, Apple).</li><li>REMOTE_ACCESS_ENABLED:
--   Whether the device is enabled for remote access. Valid values are TRUE
--   or FALSE.</li><li>REMOTE_DEBUG_ENABLED: Whether the device is enabled
--   for remote debugging. Valid values are TRUE or FALSE. Because remote
--   debugging is <a>no longer supported</a>, this filter is
--   ignored.</li><li>INSTANCE_ARN: The Amazon Resource Name (ARN) of the
--   device instance.</li><li>INSTANCE_LABELS: The label of the device
--   instance.</li><li>FLEET_TYPE: The fleet type. Valid values are PUBLIC
--   or PRIVATE.</li></ul></li>
--   <li><b>Operator</b>The filter operator.<ul><li>The EQUALS operator is
--   available for every attribute except INSTANCE_LABELS.</li><li>The
--   CONTAINS operator is available for the INSTANCE_LABELS and MODEL
--   attributes.</li><li>The IN and NOT_IN operators are available for the
--   ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN
--   attributes.</li><li>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS,
--   and GREATER_THAN_OR_EQUALS operators are also available for the
--   OS_VERSION attribute.</li></ul></li>
--   <li><b>Values</b>An array of one or more filter values.<b>Operator
--   Values</b><ul><li>The IN and NOT_IN operators can take a values array
--   that has more than one element.</li><li>The other operators require an
--   array with a single element.</li></ul><b>Attribute
--   Values</b><ul><li>The PLATFORM attribute can be set to ANDROID or
--   IOS.</li><li>The AVAILABILITY attribute can be set to AVAILABLE,
--   HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</li><li>The
--   FORM_FACTOR attribute can be set to PHONE or TABLET.</li><li>The
--   FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</li></ul></li>
--   </ul>
--   
--   <a>$sel:maxDevices:DeviceSelectionConfiguration'</a>,
--   <a>deviceSelectionConfiguration_maxDevices</a> - The maximum number of
--   devices to be included in a test run.
newDeviceSelectionConfiguration :: Int -> DeviceSelectionConfiguration

-- | Contains the run results requested by the device selection
--   configuration and how many devices were returned. For an example of
--   the JSON response syntax, see ScheduleRun.
--   
--   <i>See:</i> <a>newDeviceSelectionResult</a> smart constructor.
data DeviceSelectionResult
DeviceSelectionResult' :: Maybe Int -> Maybe [DeviceFilter] -> Maybe Int -> DeviceSelectionResult

-- | Create a value of <a>DeviceSelectionResult</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxDevices:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_maxDevices</a> - The maximum number of
--   devices to be selected by a device filter and included in a test run.
--   
--   <a>$sel:filters:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_filters</a> - The filters in a device
--   selection result.
--   
--   <a>$sel:matchedDevicesCount:DeviceSelectionResult'</a>,
--   <a>deviceSelectionResult_matchedDevicesCount</a> - The number of
--   devices that matched the device filter selection criteria.
newDeviceSelectionResult :: DeviceSelectionResult

-- | Represents configuration information about a test run, such as the
--   execution timeout (in minutes).
--   
--   <i>See:</i> <a>newExecutionConfiguration</a> smart constructor.
data ExecutionConfiguration
ExecutionConfiguration' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Int -> Maybe Bool -> ExecutionConfiguration

-- | Create a value of <a>ExecutionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appPackagesCleanup:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_appPackagesCleanup</a> - True if app package
--   cleanup is enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:videoCapture:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_videoCapture</a> - Set to true to enable
--   video capture. Otherwise, set to false. The default is true.
--   
--   <a>$sel:skipAppResign:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_skipAppResign</a> - When set to
--   <tt>true</tt>, for private devices, Device Farm does not sign your app
--   again. For public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:jobTimeoutMinutes:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_jobTimeoutMinutes</a> - The number of
--   minutes a test run executes before it times out.
--   
--   <a>$sel:accountsCleanup:ExecutionConfiguration'</a>,
--   <a>executionConfiguration_accountsCleanup</a> - True if account
--   cleanup is enabled at the beginning of the test. Otherwise, false.
newExecutionConfiguration :: ExecutionConfiguration

-- | Represents information about incompatibility.
--   
--   <i>See:</i> <a>newIncompatibilityMessage</a> smart constructor.
data IncompatibilityMessage
IncompatibilityMessage' :: Maybe Text -> Maybe DeviceAttribute -> IncompatibilityMessage

-- | Create a value of <a>IncompatibilityMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:IncompatibilityMessage'</a>,
--   <a>incompatibilityMessage_message</a> - A message about the
--   incompatibility.
--   
--   <a>$sel:type':IncompatibilityMessage'</a>,
--   <a>incompatibilityMessage_type</a> - The type of incompatibility.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ARN</li>
--   <li>FORM_FACTOR (for example, phone or tablet)</li>
--   <li>MANUFACTURER</li>
--   <li>PLATFORM (for example, Android or iOS)</li>
--   <li>REMOTE_ACCESS_ENABLED</li>
--   <li>APPIUM_VERSION</li>
--   </ul>
newIncompatibilityMessage :: IncompatibilityMessage

-- | Represents the instance profile.
--   
--   <i>See:</i> <a>newInstanceProfile</a> smart constructor.
data InstanceProfile
InstanceProfile' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Bool -> InstanceProfile

-- | Create a value of <a>InstanceProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeAppPackagesFromCleanup:InstanceProfile'</a>,
--   <a>instanceProfile_excludeAppPackagesFromCleanup</a> - An array of
--   strings containing the list of app packages that should not be cleaned
--   up from the device after a test run completes.
--   
--   The list of packages is considered only if you set
--   <tt>packageCleanup</tt> to <tt>true</tt>.
--   
--   <a>$sel:arn:InstanceProfile'</a>, <a>instanceProfile_arn</a> - The
--   Amazon Resource Name (ARN) of the instance profile.
--   
--   <a>$sel:name:InstanceProfile'</a>, <a>instanceProfile_name</a> - The
--   name of the instance profile.
--   
--   <a>$sel:description:InstanceProfile'</a>,
--   <a>instanceProfile_description</a> - The description of the instance
--   profile.
--   
--   <a>$sel:rebootAfterUse:InstanceProfile'</a>,
--   <a>instanceProfile_rebootAfterUse</a> - When set to <tt>true</tt>,
--   Device Farm reboots the instance after a test run. The default value
--   is <tt>true</tt>.
--   
--   <a>$sel:packageCleanup:InstanceProfile'</a>,
--   <a>instanceProfile_packageCleanup</a> - When set to <tt>true</tt>,
--   Device Farm removes app packages after a test run. The default value
--   is <tt>false</tt> for private devices.
newInstanceProfile :: InstanceProfile

-- | Represents a device.
--   
--   <i>See:</i> <a>newJob</a> smart constructor.
data Job
Job' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Job

-- | Create a value of <a>Job</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Job'</a>, <a>job_counters</a> - The job's result
--   counters.
--   
--   <a>$sel:status:Job'</a>, <a>job_status</a> - The job's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Job'</a>, <a>job_started</a> - The job's start time.
--   
--   <a>$sel:result:Job'</a>, <a>job_result</a> - The job's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Job'</a>, <a>job_message</a> - A message about the
--   job's result.
--   
--   <a>$sel:device:Job'</a>, <a>job_device</a> - The device (phone or
--   tablet).
--   
--   <a>$sel:arn:Job'</a>, <a>job_arn</a> - The job's ARN.
--   
--   <a>$sel:videoCapture:Job'</a>, <a>job_videoCapture</a> - This value is
--   set to true if video capture is enabled. Otherwise, it is set to
--   false.
--   
--   <a>$sel:videoEndpoint:Job'</a>, <a>job_videoEndpoint</a> - The
--   endpoint for streaming device video.
--   
--   <a>$sel:name:Job'</a>, <a>job_name</a> - The job's name.
--   
--   <a>$sel:instanceArn:Job'</a>, <a>job_instanceArn</a> - The ARN of the
--   instance.
--   
--   <a>$sel:stopped:Job'</a>, <a>job_stopped</a> - The job's stop time.
--   
--   <a>$sel:type':Job'</a>, <a>job_type</a> - The job's type.
--   
--   Allowed values include the following:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Job'</a>, <a>job_created</a> - When the job was
--   created.
--   
--   <a>$sel:deviceMinutes:Job'</a>, <a>job_deviceMinutes</a> - Represents
--   the total (metered or unmetered) minutes used by the job.
newJob :: Job

-- | Represents a latitude and longitude pair, expressed in geographic
--   coordinate system degrees (for example, 47.6204, -122.3491).
--   
--   Elevation is currently not supported.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Double -> Double -> Location

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:latitude:Location'</a>, <a>location_latitude</a> - The
--   latitude.
--   
--   <a>$sel:longitude:Location'</a>, <a>location_longitude</a> - The
--   longitude.
newLocation :: Double -> Double -> Location

-- | A number that represents the monetary amount for an offering or
--   transaction.
--   
--   <i>See:</i> <a>newMonetaryAmount</a> smart constructor.
data MonetaryAmount
MonetaryAmount' :: Maybe Double -> Maybe CurrencyCode -> MonetaryAmount

-- | Create a value of <a>MonetaryAmount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amount:MonetaryAmount'</a>, <a>monetaryAmount_amount</a> - The
--   numerical amount of an offering or transaction.
--   
--   <a>$sel:currencyCode:MonetaryAmount'</a>,
--   <a>monetaryAmount_currencyCode</a> - The currency code of a monetary
--   amount. For example, <tt>USD</tt> means U.S. dollars.
newMonetaryAmount :: MonetaryAmount

-- | An array of settings that describes characteristics of a network
--   profile.
--   
--   <i>See:</i> <a>newNetworkProfile</a> smart constructor.
data NetworkProfile
NetworkProfile' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Natural -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe NetworkProfileType -> NetworkProfile

-- | Create a value of <a>NetworkProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uplinkJitterMs:NetworkProfile'</a>,
--   <a>networkProfile_uplinkJitterMs</a> - Time variation in the delay of
--   received packets in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkBandwidthBits:NetworkProfile'</a>,
--   <a>networkProfile_downlinkBandwidthBits</a> - The data throughput rate
--   in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:downlinkDelayMs:NetworkProfile'</a>,
--   <a>networkProfile_downlinkDelayMs</a> - Delay time for all packets to
--   destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:downlinkJitterMs:NetworkProfile'</a>,
--   <a>networkProfile_downlinkJitterMs</a> - Time variation in the delay
--   of received packets in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:uplinkLossPercent:NetworkProfile'</a>,
--   <a>networkProfile_uplinkLossPercent</a> - Proportion of transmitted
--   packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:arn:NetworkProfile'</a>, <a>networkProfile_arn</a> - The
--   Amazon Resource Name (ARN) of the network profile.
--   
--   <a>$sel:downlinkLossPercent:NetworkProfile'</a>,
--   <a>networkProfile_downlinkLossPercent</a> - Proportion of received
--   packets that fail to arrive from 0 to 100 percent.
--   
--   <a>$sel:name:NetworkProfile'</a>, <a>networkProfile_name</a> - The
--   name of the network profile.
--   
--   <a>$sel:uplinkBandwidthBits:NetworkProfile'</a>,
--   <a>networkProfile_uplinkBandwidthBits</a> - The data throughput rate
--   in bits per second, as an integer from 0 to 104857600.
--   
--   <a>$sel:uplinkDelayMs:NetworkProfile'</a>,
--   <a>networkProfile_uplinkDelayMs</a> - Delay time for all packets to
--   destination in milliseconds as an integer from 0 to 2000.
--   
--   <a>$sel:description:NetworkProfile'</a>,
--   <a>networkProfile_description</a> - The description of the network
--   profile.
--   
--   <a>$sel:type':NetworkProfile'</a>, <a>networkProfile_type</a> - The
--   type of network profile. Valid values are listed here.
newNetworkProfile :: NetworkProfile

-- | Represents the metadata of a device offering.
--   
--   <i>See:</i> <a>newOffering</a> smart constructor.
data Offering
Offering' :: Maybe DevicePlatform -> Maybe Text -> Maybe Text -> Maybe OfferingType -> Maybe [RecurringCharge] -> Offering

-- | Create a value of <a>Offering</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Offering'</a>, <a>offering_platform</a> - The
--   platform of the device (for example, <tt>ANDROID</tt> or
--   <tt>IOS</tt>).
--   
--   <a>$sel:id:Offering'</a>, <a>offering_id</a> - The ID that corresponds
--   to a device offering.
--   
--   <a>$sel:description:Offering'</a>, <a>offering_description</a> - A
--   string that describes the offering.
--   
--   <a>$sel:type':Offering'</a>, <a>offering_type</a> - The type of
--   offering (for example, <tt>RECURRING</tt>) for a device.
--   
--   <a>$sel:recurringCharges:Offering'</a>,
--   <a>offering_recurringCharges</a> - Specifies whether there are
--   recurring charges for the offering.
newOffering :: Offering

-- | Represents information about an offering promotion.
--   
--   <i>See:</i> <a>newOfferingPromotion</a> smart constructor.
data OfferingPromotion
OfferingPromotion' :: Maybe Text -> Maybe Text -> OfferingPromotion

-- | Create a value of <a>OfferingPromotion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:OfferingPromotion'</a>, <a>offeringPromotion_id</a> - The
--   ID of the offering promotion.
--   
--   <a>$sel:description:OfferingPromotion'</a>,
--   <a>offeringPromotion_description</a> - A string that describes the
--   offering promotion.
newOfferingPromotion :: OfferingPromotion

-- | The status of the offering.
--   
--   <i>See:</i> <a>newOfferingStatus</a> smart constructor.
data OfferingStatus
OfferingStatus' :: Maybe Int -> Maybe Offering -> Maybe POSIX -> Maybe OfferingTransactionType -> OfferingStatus

-- | Create a value of <a>OfferingStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:quantity:OfferingStatus'</a>, <a>offeringStatus_quantity</a> -
--   The number of available devices in the offering.
--   
--   <a>$sel:offering:OfferingStatus'</a>, <a>offeringStatus_offering</a> -
--   Represents the metadata of an offering status.
--   
--   <a>$sel:effectiveOn:OfferingStatus'</a>,
--   <a>offeringStatus_effectiveOn</a> - The date on which the offering is
--   effective.
--   
--   <a>$sel:type':OfferingStatus'</a>, <a>offeringStatus_type</a> - The
--   type specified for the offering status.
newOfferingStatus :: OfferingStatus

-- | Represents the metadata of an offering transaction.
--   
--   <i>See:</i> <a>newOfferingTransaction</a> smart constructor.
data OfferingTransaction
OfferingTransaction' :: Maybe OfferingStatus -> Maybe POSIX -> Maybe MonetaryAmount -> Maybe Text -> Maybe Text -> OfferingTransaction

-- | Create a value of <a>OfferingTransaction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offeringStatus:OfferingTransaction'</a>,
--   <a>offeringTransaction_offeringStatus</a> - The status of an offering
--   transaction.
--   
--   <a>$sel:createdOn:OfferingTransaction'</a>,
--   <a>offeringTransaction_createdOn</a> - The date on which an offering
--   transaction was created.
--   
--   <a>$sel:cost:OfferingTransaction'</a>, <a>offeringTransaction_cost</a>
--   - The cost of an offering transaction.
--   
--   <a>$sel:transactionId:OfferingTransaction'</a>,
--   <a>offeringTransaction_transactionId</a> - The transaction ID of the
--   offering transaction.
--   
--   <a>$sel:offeringPromotionId:OfferingTransaction'</a>,
--   <a>offeringTransaction_offeringPromotionId</a> - The ID that
--   corresponds to a device offering promotion.
newOfferingTransaction :: OfferingTransaction

-- | Represents a specific warning or failure.
--   
--   <i>See:</i> <a>newProblem</a> smart constructor.
data Problem
Problem' :: Maybe ProblemDetail -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe ProblemDetail -> Maybe ProblemDetail -> Maybe ProblemDetail -> Problem

-- | Create a value of <a>Problem</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:job:Problem'</a>, <a>problem_job</a> - Information about the
--   associated job.
--   
--   <a>$sel:result:Problem'</a>, <a>problem_result</a> - The problem's
--   result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Problem'</a>, <a>problem_message</a> - A message about
--   the problem's result.
--   
--   <a>$sel:device:Problem'</a>, <a>problem_device</a> - Information about
--   the associated device.
--   
--   <a>$sel:run:Problem'</a>, <a>problem_run</a> - Information about the
--   associated run.
--   
--   <a>$sel:suite:Problem'</a>, <a>problem_suite</a> - Information about
--   the associated suite.
--   
--   <a>$sel:test:Problem'</a>, <a>problem_test</a> - Information about the
--   associated test.
newProblem :: Problem

-- | Information about a problem detail.
--   
--   <i>See:</i> <a>newProblemDetail</a> smart constructor.
data ProblemDetail
ProblemDetail' :: Maybe Text -> Maybe Text -> ProblemDetail

-- | Create a value of <a>ProblemDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:ProblemDetail'</a>, <a>problemDetail_arn</a> - The problem
--   detail's ARN.
--   
--   <a>$sel:name:ProblemDetail'</a>, <a>problemDetail_name</a> - The
--   problem detail's name.
newProblemDetail :: ProblemDetail

-- | Represents an operating-system neutral workspace for running and
--   managing tests.
--   
--   <i>See:</i> <a>newProject</a> smart constructor.
data Project
Project' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Int -> Project

-- | Create a value of <a>Project</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Project'</a>, <a>project_arn</a> - The project's ARN.
--   
--   <a>$sel:name:Project'</a>, <a>project_name</a> - The project's name.
--   
--   <a>$sel:created:Project'</a>, <a>project_created</a> - When the
--   project was created.
--   
--   <a>$sel:defaultJobTimeoutMinutes:Project'</a>,
--   <a>project_defaultJobTimeoutMinutes</a> - The default number of
--   minutes (at the project level) a test run executes before it times
--   out. The default value is 150 minutes.
newProject :: Project

-- | Represents the set of radios and their states on a device. Examples of
--   radios include Wi-Fi, GPS, Bluetooth, and NFC.
--   
--   <i>See:</i> <a>newRadios</a> smart constructor.
data Radios
Radios' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Radios

-- | Create a value of <a>Radios</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gps:Radios'</a>, <a>radios_gps</a> - True if GPS is enabled at
--   the beginning of the test. Otherwise, false.
--   
--   <a>$sel:wifi:Radios'</a>, <a>radios_wifi</a> - True if Wi-Fi is
--   enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:bluetooth:Radios'</a>, <a>radios_bluetooth</a> - True if
--   Bluetooth is enabled at the beginning of the test. Otherwise, false.
--   
--   <a>$sel:nfc:Radios'</a>, <a>radios_nfc</a> - True if NFC is enabled at
--   the beginning of the test. Otherwise, false.
newRadios :: Radios

-- | Specifies whether charges for devices are recurring.
--   
--   <i>See:</i> <a>newRecurringCharge</a> smart constructor.
data RecurringCharge
RecurringCharge' :: Maybe MonetaryAmount -> Maybe RecurringChargeFrequency -> RecurringCharge

-- | Create a value of <a>RecurringCharge</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cost:RecurringCharge'</a>, <a>recurringCharge_cost</a> - The
--   cost of the recurring charge.
--   
--   <a>$sel:frequency:RecurringCharge'</a>,
--   <a>recurringCharge_frequency</a> - The frequency in which charges
--   recur.
newRecurringCharge :: RecurringCharge

-- | Represents information about the remote access session.
--   
--   <i>See:</i> <a>newRemoteAccessSession</a> smart constructor.
data RemoteAccessSession
RemoteAccessSession' :: Maybe Text -> Maybe ExecutionStatus -> Maybe Text -> Maybe InteractionMode -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Device -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe BillingMethod -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe POSIX -> Maybe DeviceMinutes -> Maybe Text -> RemoteAccessSession

-- | Create a value of <a>RemoteAccessSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceUdid:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_deviceUdid</a> - Unique device identifier for
--   the remote device. Only returned if remote debugging is enabled for
--   the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:status:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_status</a> - The status of the remote access
--   session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PENDING_CONCURRENCY.</li>
--   <li>PENDING_DEVICE.</li>
--   <li>PROCESSING.</li>
--   <li>SCHEDULING.</li>
--   <li>PREPARING.</li>
--   <li>RUNNING.</li>
--   <li>COMPLETED.</li>
--   <li>STOPPING.</li>
--   </ul>
--   
--   <a>$sel:clientId:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_clientId</a> - Unique identifier of your client
--   for the remote access session. Only returned if remote debugging is
--   enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:interactionMode:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_interactionMode</a> - The interaction mode of
--   the remote access session. Valid values are:
--   
--   <ul>
--   <li>INTERACTIVE: You can interact with the iOS device by viewing,
--   touching, and rotating the screen. You cannot run XCUITest
--   framework-based tests in this mode.</li>
--   <li>NO_VIDEO: You are connected to the device, but cannot interact
--   with it or view the screen. This mode has the fastest test execution
--   speed. You can run XCUITest framework-based tests in this mode.</li>
--   <li>VIDEO_ONLY: You can view the screen, but cannot touch or rotate
--   it. You can run XCUITest framework-based tests and watch the screen in
--   this mode.</li>
--   </ul>
--   
--   <a>$sel:started:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_started</a> - The date and time the remote
--   access session was started.
--   
--   <a>$sel:result:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_result</a> - The result of the remote access
--   session. Can be any of the following:
--   
--   <ul>
--   <li>PENDING.</li>
--   <li>PASSED.</li>
--   <li>WARNED.</li>
--   <li>FAILED.</li>
--   <li>SKIPPED.</li>
--   <li>ERRORED.</li>
--   <li>STOPPED.</li>
--   </ul>
--   
--   <a>$sel:message:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_message</a> - A message about the remote access
--   session.
--   
--   <a>$sel:device:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_device</a> - The device (phone or tablet) used
--   in the remote access session.
--   
--   <a>$sel:arn:RemoteAccessSession'</a>, <a>remoteAccessSession_arn</a> -
--   The Amazon Resource Name (ARN) of the remote access session.
--   
--   <a>$sel:name:RemoteAccessSession'</a>, <a>remoteAccessSession_name</a>
--   - The name of the remote access session.
--   
--   <a>$sel:remoteRecordEnabled:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteRecordEnabled</a> - This flag is set to
--   <tt>true</tt> if remote recording is enabled for the remote access
--   session.
--   
--   <a>$sel:instanceArn:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_instanceArn</a> - The ARN of the instance.
--   
--   <a>$sel:billingMethod:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_billingMethod</a> - The billing method of the
--   remote access session. Possible values include <tt>METERED</tt> or
--   <tt>UNMETERED</tt>. For more information about metered devices, see
--   <a>AWS Device Farm terminology</a>.
--   
--   <a>$sel:skipAppResign:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_skipAppResign</a> - When set to <tt>true</tt>,
--   for private devices, Device Farm does not sign your app again. For
--   public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:stopped:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_stopped</a> - The date and time the remote
--   access session was stopped.
--   
--   <a>$sel:hostAddress:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_hostAddress</a> - IP address of the EC2 host
--   where you need to connect to remotely debug devices. Only returned if
--   remote debugging is enabled for the remote access session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:endpoint:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_endpoint</a> - The endpoint for the remote
--   access sesssion.
--   
--   <a>$sel:remoteDebugEnabled:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteDebugEnabled</a> - This flag is set to
--   <tt>true</tt> if remote debugging is enabled for the remote access
--   session.
--   
--   Remote debugging is <a>no longer supported</a>.
--   
--   <a>$sel:created:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_created</a> - The date and time the remote
--   access session was created.
--   
--   <a>$sel:deviceMinutes:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_deviceMinutes</a> - The number of minutes a
--   device is used in a remote access session (including setup and
--   teardown minutes).
--   
--   <a>$sel:remoteRecordAppArn:RemoteAccessSession'</a>,
--   <a>remoteAccessSession_remoteRecordAppArn</a> - The ARN for the app to
--   be recorded in the remote access session.
newRemoteAccessSession :: RemoteAccessSession

-- | Represents the screen resolution of a device in height and width,
--   expressed in pixels.
--   
--   <i>See:</i> <a>newResolution</a> smart constructor.
data Resolution
Resolution' :: Maybe Int -> Maybe Int -> Resolution

-- | Create a value of <a>Resolution</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:height:Resolution'</a>, <a>resolution_height</a> - The screen
--   resolution's height, expressed in pixels.
--   
--   <a>$sel:width:Resolution'</a>, <a>resolution_width</a> - The screen
--   resolution's width, expressed in pixels.
newResolution :: Resolution

-- | Represents a condition for a device pool.
--   
--   <i>See:</i> <a>newRule</a> smart constructor.
data Rule
Rule' :: Maybe RuleOperator -> Maybe DeviceAttribute -> Maybe Text -> Rule

-- | Create a value of <a>Rule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:Rule'</a>, <a>rule_operator</a> - Specifies how
--   Device Farm compares the rule's attribute to the value. For the
--   operators that are supported by each attribute, see the attribute
--   descriptions.
--   
--   <a>$sel:attribute:Rule'</a>, <a>rule_attribute</a> - The rule's
--   stringified attribute. For example, specify the value as
--   <tt>"\"abc\""</tt>.
--   
--   The supported operators for each attribute are provided in the
--   following list.
--   
--   <ul>
--   <li><i>APPIUM_VERSION</i> The Appium version for the test.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>ARN</i> The Amazon Resource Name (ARN) of the device (for
--   example,
--   <tt>arn:aws:devicefarm:us-west-2::device:12345Example</tt>.Supported
--   operators: <tt>EQUALS</tt>, <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>AVAILABILITY</i> The current availability of the device. Valid
--   values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or
--   TEMPORARY_NOT_AVAILABLE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FLEET_TYPE</i> The fleet type. Valid values are PUBLIC or
--   PRIVATE.Supported operators: <tt>EQUALS</tt></li>
--   <li><i>FORM_FACTOR</i> The device form factor. Valid values are PHONE
--   or TABLET.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_ARN</i> The Amazon Resource Name (ARN) of the device
--   instance.Supported operators: <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>INSTANCE_LABELS</i> The label of the device instance.Supported
--   operators: <tt>CONTAINS</tt></li>
--   <li><i>MANUFACTURER</i> The device manufacturer (for example,
--   Apple).Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>MODEL</i> The device model, such as Apple iPad Air 2 or Google
--   Pixel.Supported operators: <tt>CONTAINS</tt>, <tt>EQUALS</tt>,
--   <tt>IN</tt>, <tt>NOT_IN</tt></li>
--   <li><i>OS_VERSION</i> The operating system version (for example,
--   10.3.2).Supported operators: <tt>EQUALS</tt>, <tt>GREATER_THAN</tt>,
--   <tt>GREATER_THAN_OR_EQUALS</tt>, <tt>IN</tt>, <tt>LESS_THAN</tt>,
--   <tt>LESS_THAN_OR_EQUALS</tt>, <tt>NOT_IN</tt></li>
--   <li><i>PLATFORM</i> The device platform. Valid values are ANDROID or
--   IOS.Supported operators: <tt>EQUALS</tt>, <tt>IN</tt>,
--   <tt>NOT_IN</tt></li>
--   <li><i>REMOTE_ACCESS_ENABLED</i> Whether the device is enabled for
--   remote access. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt></li>
--   <li><i>REMOTE_DEBUG_ENABLED</i> Whether the device is enabled for
--   remote debugging. Valid values are TRUE or FALSE.Supported operators:
--   <tt>EQUALS</tt>Because remote debugging is <a>no longer supported</a>,
--   this filter is ignored.</li>
--   </ul>
--   
--   <a>$sel:value:Rule'</a>, <a>rule_value</a> - The rule's value.
newRule :: Rule

-- | Represents a test run on a set of devices with a given app package,
--   test parameters, and so on.
--   
--   <i>See:</i> <a>newRun</a> smart constructor.
data Run
Run' :: Maybe DevicePlatform -> Maybe Counters -> Maybe Int -> Maybe Int -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe DeviceSelectionResult -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe NetworkProfile -> Maybe Text -> Maybe Radios -> Maybe Text -> Maybe Text -> Maybe BillingMethod -> Maybe ExecutionResultCode -> Maybe Bool -> Maybe CustomerArtifactPaths -> Maybe Int -> Maybe Int -> Maybe POSIX -> Maybe Int -> Maybe Text -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Maybe Location -> Maybe Text -> Run

-- | Create a value of <a>Run</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:Run'</a>, <a>run_platform</a> - The run's platform.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>ANDROID</li>
--   <li>IOS</li>
--   </ul>
--   
--   <a>$sel:counters:Run'</a>, <a>run_counters</a> - The run's result
--   counters.
--   
--   <a>$sel:seed:Run'</a>, <a>run_seed</a> - For fuzz tests, this is a
--   seed to use for randomizing the UI fuzz test. Using the same seed
--   value between tests ensures identical event sequences.
--   
--   <a>$sel:eventCount:Run'</a>, <a>run_eventCount</a> - For fuzz tests,
--   this is the number of events, between 1 and 10000, that the UI fuzz
--   test should perform.
--   
--   <a>$sel:status:Run'</a>, <a>run_status</a> - The run's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Run'</a>, <a>run_started</a> - The run's start time.
--   
--   <a>$sel:deviceSelectionResult:Run'</a>,
--   <a>run_deviceSelectionResult</a> - The results of a device filter used
--   to select the devices for a test run.
--   
--   <a>$sel:result:Run'</a>, <a>run_result</a> - The run's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:devicePoolArn:Run'</a>, <a>run_devicePoolArn</a> - The ARN of
--   the device pool for the run.
--   
--   <a>$sel:testSpecArn:Run'</a>, <a>run_testSpecArn</a> - The ARN of the
--   YAML-formatted test specification for the run.
--   
--   <a>$sel:message:Run'</a>, <a>run_message</a> - A message about the
--   run's result.
--   
--   <a>$sel:locale:Run'</a>, <a>run_locale</a> - Information about the
--   locale that is used for the run.
--   
--   <a>$sel:networkProfile:Run'</a>, <a>run_networkProfile</a> - The
--   network profile being used for a test run.
--   
--   <a>$sel:arn:Run'</a>, <a>run_arn</a> - The run's ARN.
--   
--   <a>$sel:radios:Run'</a>, <a>run_radios</a> - Information about the
--   radio states for the run.
--   
--   <a>$sel:appUpload:Run'</a>, <a>run_appUpload</a> - An app to upload or
--   that has been uploaded.
--   
--   <a>$sel:name:Run'</a>, <a>run_name</a> - The run's name.
--   
--   <a>$sel:billingMethod:Run'</a>, <a>run_billingMethod</a> - Specifies
--   the billing method for a test run: <tt>metered</tt> or
--   <tt>unmetered</tt>. If the parameter is not specified, the default
--   value is <tt>metered</tt>.
--   
--   If you have unmetered device slots, you must set this to
--   <tt>unmetered</tt> to use them. Otherwise, the run is counted toward
--   metered device minutes.
--   
--   <a>$sel:resultCode:Run'</a>, <a>run_resultCode</a> - Supporting field
--   for the result field. Set only if <tt>result</tt> is <tt>SKIPPED</tt>.
--   <tt>PARSING_FAILED</tt> if the result is skipped because of test
--   package parsing failure.
--   
--   <a>$sel:skipAppResign:Run'</a>, <a>run_skipAppResign</a> - When set to
--   <tt>true</tt>, for private devices, Device Farm does not sign your app
--   again. For public devices, Device Farm always signs your apps again.
--   
--   For more information about how Device Farm re-signs your apps, see
--   <a>Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.
--   
--   <a>$sel:customerArtifactPaths:Run'</a>,
--   <a>run_customerArtifactPaths</a> - Output
--   <tt>CustomerArtifactPaths</tt> object for the test run.
--   
--   <a>$sel:completedJobs:Run'</a>, <a>run_completedJobs</a> - The total
--   number of completed jobs.
--   
--   <a>$sel:jobTimeoutMinutes:Run'</a>, <a>run_jobTimeoutMinutes</a> - The
--   number of minutes the job executes before it times out.
--   
--   <a>$sel:stopped:Run'</a>, <a>run_stopped</a> - The run's stop time.
--   
--   <a>$sel:totalJobs:Run'</a>, <a>run_totalJobs</a> - The total number of
--   jobs for the run.
--   
--   <a>$sel:webUrl:Run'</a>, <a>run_webUrl</a> - The Device Farm console
--   URL for the recording of the run.
--   
--   <a>$sel:type':Run'</a>, <a>run_type</a> - The run's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Run'</a>, <a>run_created</a> - When the run was
--   created.
--   
--   <a>$sel:deviceMinutes:Run'</a>, <a>run_deviceMinutes</a> - Represents
--   the total (metered or unmetered) minutes used by the test run.
--   
--   <a>$sel:location:Run'</a>, <a>run_location</a> - Information about the
--   location that is used for the run.
--   
--   <a>$sel:parsingResultUrl:Run'</a>, <a>run_parsingResultUrl</a> -
--   Read-only URL for an object in an S3 bucket where you can get the
--   parsing results of the test package. If the test package doesn't
--   parse, the reason why it doesn't parse appears in the file that this
--   URL points to.
newRun :: Run

-- | Represents a sample of performance data.
--   
--   <i>See:</i> <a>newSample</a> smart constructor.
data Sample
Sample' :: Maybe Text -> Maybe Text -> Maybe SampleType -> Sample

-- | Create a value of <a>Sample</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:Sample'</a>, <a>sample_arn</a> - The sample's ARN.
--   
--   <a>$sel:url:Sample'</a>, <a>sample_url</a> - The presigned Amazon S3
--   URL that can be used with a GET request to download the sample's file.
--   
--   <a>$sel:type':Sample'</a>, <a>sample_type</a> - The sample's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>CPU: A CPU sample type. This is expressed as the app processing
--   CPU time (including child processes) as reported by process, as a
--   percentage.</li>
--   <li>MEMORY: A memory usage sample type. This is expressed as the total
--   proportional set size of an app process, in kilobytes.</li>
--   <li>NATIVE_AVG_DRAWTIME</li>
--   <li>NATIVE_FPS</li>
--   <li>NATIVE_FRAMES</li>
--   <li>NATIVE_MAX_DRAWTIME</li>
--   <li>NATIVE_MIN_DRAWTIME</li>
--   <li>OPENGL_AVG_DRAWTIME</li>
--   <li>OPENGL_FPS</li>
--   <li>OPENGL_FRAMES</li>
--   <li>OPENGL_MAX_DRAWTIME</li>
--   <li>OPENGL_MIN_DRAWTIME</li>
--   <li>RX</li>
--   <li>RX_RATE: The total number of bytes per second (TCP and UDP) that
--   are sent, by app process.</li>
--   <li>THREADS: A threads sample type. This is expressed as the total
--   number of threads per app process.</li>
--   <li>TX</li>
--   <li>TX_RATE: The total number of bytes per second (TCP and UDP) that
--   are received, by app process.</li>
--   </ul>
newSample :: Sample

-- | Represents the settings for a run. Includes things like location,
--   radio states, auxiliary apps, and network profiles.
--   
--   <i>See:</i> <a>newScheduleRunConfiguration</a> smart constructor.
data ScheduleRunConfiguration
ScheduleRunConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe Radios -> Maybe BillingMethod -> Maybe CustomerArtifactPaths -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Location -> ScheduleRunConfiguration

-- | Create a value of <a>ScheduleRunConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:auxiliaryApps:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_auxiliaryApps</a> - A list of upload ARNs
--   for app packages to be installed with your app.
--   
--   <a>$sel:locale:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_locale</a> - Information about the locale
--   that is used for the run.
--   
--   <a>$sel:radios:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_radios</a> - Information about the radio
--   states for the run.
--   
--   <a>$sel:billingMethod:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_billingMethod</a> - Specifies the billing
--   method for a test run: <tt>metered</tt> or <tt>unmetered</tt>. If the
--   parameter is not specified, the default value is <tt>metered</tt>.
--   
--   If you have purchased unmetered device slots, you must set this
--   parameter to <tt>unmetered</tt> to make use of them. Otherwise, your
--   run counts against your metered time.
--   
--   <a>$sel:customerArtifactPaths:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_customerArtifactPaths</a> - Input
--   <tt>CustomerArtifactPaths</tt> object for the scheduled run
--   configuration.
--   
--   <a>$sel:vpceConfigurationArns:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_vpceConfigurationArns</a> - An array of
--   ARNs for your VPC endpoint configurations.
--   
--   <a>$sel:networkProfileArn:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_networkProfileArn</a> - Reserved for
--   internal use.
--   
--   <a>$sel:extraDataPackageArn:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_extraDataPackageArn</a> - The ARN of the
--   extra data for the run. The extra data is a .zip file that AWS Device
--   Farm extracts to external data for Android or the app's sandbox for
--   iOS.
--   
--   <a>$sel:location:ScheduleRunConfiguration'</a>,
--   <a>scheduleRunConfiguration_location</a> - Information about the
--   location that is used for the run.
newScheduleRunConfiguration :: ScheduleRunConfiguration

-- | Represents test settings. This data structure is passed in as the test
--   parameter to ScheduleRun. For an example of the JSON request syntax,
--   see ScheduleRun.
--   
--   <i>See:</i> <a>newScheduleRunTest</a> smart constructor.
data ScheduleRunTest
ScheduleRunTest' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> TestType -> ScheduleRunTest

-- | Create a value of <a>ScheduleRunTest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testPackageArn:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_testPackageArn</a> - The ARN of the uploaded test
--   to be run.
--   
--   <a>$sel:testSpecArn:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_testSpecArn</a> - The ARN of the YAML-formatted
--   test specification.
--   
--   <a>$sel:filter':ScheduleRunTest'</a>, <a>scheduleRunTest_filter</a> -
--   The test's filter.
--   
--   <a>$sel:parameters:ScheduleRunTest'</a>,
--   <a>scheduleRunTest_parameters</a> - The test's parameters, such as
--   test framework parameters and fixture settings. Parameters are
--   represented by name-value pairs of strings.
--   
--   For all tests:
--   
--   <ul>
--   <li><tt>app_performance_monitoring</tt>: Performance monitoring is
--   enabled by default. Set this parameter to false to disable it.</li>
--   </ul>
--   
--   For Calabash tests:
--   
--   <ul>
--   <li>profile: A cucumber profile (for example,
--   <tt>my_profile_name</tt>).</li>
--   <li>tags: You can limit execution to features or scenarios that have
--   (or don't have) certain tags (for example, @smoke or
--   @smoke,~@wip).</li>
--   </ul>
--   
--   For Appium tests (all types):
--   
--   <ul>
--   <li>appium_version: The Appium version. Currently supported values are
--   1.6.5 (and later), latest, and default.<ul><li>latest runs the latest
--   Appium version supported by Device Farm (1.9.1).</li><li>For default,
--   Device Farm selects a compatible version of Appium for the device. The
--   current behavior is to run 1.7.2 on Android devices and iOS 9 and
--   earlier and 1.7.2 for iOS 10 and later.</li><li>This behavior is
--   subject to change.</li></ul></li>
--   </ul>
--   
--   For fuzz tests (Android only):
--   
--   <ul>
--   <li>event_count: The number of events, between 1 and 10000, that the
--   UI fuzz test should perform.</li>
--   <li>throttle: The time, in ms, between 0 and 1000, that the UI fuzz
--   test should wait between events.</li>
--   <li>seed: A seed to use for randomizing the UI fuzz test. Using the
--   same seed value between tests ensures identical event sequences.</li>
--   </ul>
--   
--   For Explorer tests:
--   
--   <ul>
--   <li>username: A user name to use if the Explorer encounters a login
--   form. If not supplied, no user name is inserted.</li>
--   <li>password: A password to use if the Explorer encounters a login
--   form. If not supplied, no password is inserted.</li>
--   </ul>
--   
--   For Instrumentation:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   For XCTest and XCTestUI:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test class: <tt>LoginTests</tt></li><li>Running a multiple test
--   classes: <tt>LoginTests,SmokeTests</tt></li><li>Running a single test:
--   <tt>LoginTests/testValid</tt></li><li>Running multiple tests:
--   <tt>LoginTests/testValid,LoginTests/testInvalid</tt></li></ul></li>
--   </ul>
--   
--   For UIAutomator:
--   
--   <ul>
--   <li>filter: A test filter string. Examples:<ul><li>Running a single
--   test case: <tt>com.android.abc.Test1</tt></li><li>Running a single
--   test: <tt>com.android.abc.Test1#smoke</tt></li><li>Running multiple
--   tests:
--   <tt>com.android.abc.Test1,com.android.abc.Test2</tt></li></ul></li>
--   </ul>
--   
--   <a>$sel:type':ScheduleRunTest'</a>, <a>scheduleRunTest_type</a> - The
--   test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORER. For Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
newScheduleRunTest :: TestType -> ScheduleRunTest

-- | Represents a collection of one or more tests.
--   
--   <i>See:</i> <a>newSuite</a> smart constructor.
data Suite
Suite' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Suite

-- | Create a value of <a>Suite</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Suite'</a>, <a>suite_counters</a> - The suite's
--   result counters.
--   
--   <a>$sel:status:Suite'</a>, <a>suite_status</a> - The suite's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Suite'</a>, <a>suite_started</a> - The suite's start
--   time.
--   
--   <a>$sel:result:Suite'</a>, <a>suite_result</a> - The suite's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Suite'</a>, <a>suite_message</a> - A message about the
--   suite's result.
--   
--   <a>$sel:arn:Suite'</a>, <a>suite_arn</a> - The suite's ARN.
--   
--   <a>$sel:name:Suite'</a>, <a>suite_name</a> - The suite's name.
--   
--   <a>$sel:stopped:Suite'</a>, <a>suite_stopped</a> - The suite's stop
--   time.
--   
--   <a>$sel:type':Suite'</a>, <a>suite_type</a> - The suite's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLOREROnly available for Android; an app explorer that
--   traverses an Android app, interacting with it and capturing
--   screenshots at the same time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Suite'</a>, <a>suite_created</a> - When the suite was
--   created.
--   
--   <a>$sel:deviceMinutes:Suite'</a>, <a>suite_deviceMinutes</a> -
--   Represents the total (metered or unmetered) minutes used by the test
--   suite.
newSuite :: Suite

-- | The metadata that you apply to a resource to help you categorize and
--   organize it. Each tag consists of a key and an optional value, both of
--   which you define. Tag keys can have a maximum character length of 128
--   characters. Tag values can have a maximum length of 256 characters.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - One part of a key-value pair
--   that makes up a tag. A <tt>key</tt> is a general label that acts like
--   a category for more specific tag values.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional part of a
--   key-value pair that makes up a tag. A <tt>value</tt> acts as a
--   descriptor in a tag category (key).
newTag :: Text -> Text -> Tag

-- | Represents a condition that is evaluated.
--   
--   <i>See:</i> <a>newTest</a> smart constructor.
data Test
Test' :: Maybe Counters -> Maybe ExecutionStatus -> Maybe POSIX -> Maybe ExecutionResult -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TestType -> Maybe POSIX -> Maybe DeviceMinutes -> Test

-- | Create a value of <a>Test</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:counters:Test'</a>, <a>test_counters</a> - The test's result
--   counters.
--   
--   <a>$sel:status:Test'</a>, <a>test_status</a> - The test's status.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PENDING_CONCURRENCY</li>
--   <li>PENDING_DEVICE</li>
--   <li>PROCESSING</li>
--   <li>SCHEDULING</li>
--   <li>PREPARING</li>
--   <li>RUNNING</li>
--   <li>COMPLETED</li>
--   <li>STOPPING</li>
--   </ul>
--   
--   <a>$sel:started:Test'</a>, <a>test_started</a> - The test's start
--   time.
--   
--   <a>$sel:result:Test'</a>, <a>test_result</a> - The test's result.
--   
--   Allowed values include:
--   
--   <ul>
--   <li>PENDING</li>
--   <li>PASSED</li>
--   <li>WARNED</li>
--   <li>FAILED</li>
--   <li>SKIPPED</li>
--   <li>ERRORED</li>
--   <li>STOPPED</li>
--   </ul>
--   
--   <a>$sel:message:Test'</a>, <a>test_message</a> - A message about the
--   test's result.
--   
--   <a>$sel:arn:Test'</a>, <a>test_arn</a> - The test's ARN.
--   
--   <a>$sel:name:Test'</a>, <a>test_name</a> - The test's name.
--   
--   <a>$sel:stopped:Test'</a>, <a>test_stopped</a> - The test's stop time.
--   
--   <a>$sel:type':Test'</a>, <a>test_type</a> - The test's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>BUILTIN_FUZZ</li>
--   <li>BUILTIN_EXPLORERFor Android, an app explorer that traverses an
--   Android app, interacting with it and capturing screenshots at the same
--   time.</li>
--   <li>APPIUM_JAVA_JUNIT</li>
--   <li>APPIUM_JAVA_TESTNG</li>
--   <li>APPIUM_PYTHON</li>
--   <li>APPIUM_NODE</li>
--   <li>APPIUM_RUBY</li>
--   <li>APPIUM_WEB_JAVA_JUNIT</li>
--   <li>APPIUM_WEB_JAVA_TESTNG</li>
--   <li>APPIUM_WEB_PYTHON</li>
--   <li>APPIUM_WEB_NODE</li>
--   <li>APPIUM_WEB_RUBY</li>
--   <li>CALABASH</li>
--   <li>INSTRUMENTATION</li>
--   <li>UIAUTOMATION</li>
--   <li>UIAUTOMATOR</li>
--   <li>XCTEST</li>
--   <li>XCTEST_UI</li>
--   </ul>
--   
--   <a>$sel:created:Test'</a>, <a>test_created</a> - When the test was
--   created.
--   
--   <a>$sel:deviceMinutes:Test'</a>, <a>test_deviceMinutes</a> -
--   Represents the total (metered or unmetered) minutes used by the test.
newTest :: Test

-- | A Selenium testing project. Projects are used to collect and collate
--   sessions.
--   
--   <i>See:</i> <a>newTestGridProject</a> smart constructor.
data TestGridProject
TestGridProject' :: Maybe TestGridVpcConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> TestGridProject

-- | Create a value of <a>TestGridProject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfig:TestGridProject'</a>,
--   <a>testGridProject_vpcConfig</a> - The VPC security groups and subnets
--   that are attached to a project.
--   
--   <a>$sel:arn:TestGridProject'</a>, <a>testGridProject_arn</a> - The ARN
--   for the project.
--   
--   <a>$sel:name:TestGridProject'</a>, <a>testGridProject_name</a> - A
--   human-readable name for the project.
--   
--   <a>$sel:description:TestGridProject'</a>,
--   <a>testGridProject_description</a> - A human-readable description for
--   the project.
--   
--   <a>$sel:created:TestGridProject'</a>, <a>testGridProject_created</a> -
--   When the project was created.
newTestGridProject :: TestGridProject

-- | A TestGridSession is a single instance of a browser launched from the
--   URL provided by a call to CreateTestGridUrl.
--   
--   <i>See:</i> <a>newTestGridSession</a> smart constructor.
data TestGridSession
TestGridSession' :: Maybe TestGridSessionStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Double -> Maybe POSIX -> TestGridSession

-- | Create a value of <a>TestGridSession</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:TestGridSession'</a>, <a>testGridSession_status</a> -
--   The state of the session.
--   
--   <a>$sel:arn:TestGridSession'</a>, <a>testGridSession_arn</a> - The ARN
--   of the session.
--   
--   <a>$sel:seleniumProperties:TestGridSession'</a>,
--   <a>testGridSession_seleniumProperties</a> - A JSON object of options
--   and parameters passed to the Selenium WebDriver.
--   
--   <a>$sel:ended:TestGridSession'</a>, <a>testGridSession_ended</a> - The
--   time the session ended.
--   
--   <a>$sel:billingMinutes:TestGridSession'</a>,
--   <a>testGridSession_billingMinutes</a> - The number of billed minutes
--   that were used for this session.
--   
--   <a>$sel:created:TestGridSession'</a>, <a>testGridSession_created</a> -
--   The time that the session was started.
newTestGridSession :: TestGridSession

-- | An action taken by a TestGridSession browser instance.
--   
--   <i>See:</i> <a>newTestGridSessionAction</a> smart constructor.
data TestGridSessionAction
TestGridSessionAction' :: Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> TestGridSessionAction

-- | Create a value of <a>TestGridSessionAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:started:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_started</a> - The time that the session
--   invoked the action.
--   
--   <a>$sel:duration:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_duration</a> - The time, in milliseconds,
--   that the action took to complete in the browser.
--   
--   <a>$sel:statusCode:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_statusCode</a> - HTTP status code returned to
--   the browser when the action was taken.
--   
--   <a>$sel:action:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_action</a> - The action taken by the session.
--   
--   <a>$sel:requestMethod:TestGridSessionAction'</a>,
--   <a>testGridSessionAction_requestMethod</a> - HTTP method that the
--   browser used to make the request.
newTestGridSessionAction :: TestGridSessionAction

-- | Artifacts are video and other files that are produced in the process
--   of running a browser in an automated context.
--   
--   Video elements might be broken up into multiple artifacts as they grow
--   in size during creation.
--   
--   <i>See:</i> <a>newTestGridSessionArtifact</a> smart constructor.
data TestGridSessionArtifact
TestGridSessionArtifact' :: Maybe Text -> Maybe (Sensitive Text) -> Maybe TestGridSessionArtifactType -> TestGridSessionArtifact

-- | Create a value of <a>TestGridSessionArtifact</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filename:TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_filename</a> - The file name of the
--   artifact.
--   
--   <a>$sel:url:TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_url</a> - A semi-stable URL to the content
--   of the object.
--   
--   <a>$sel:type':TestGridSessionArtifact'</a>,
--   <a>testGridSessionArtifact_type</a> - The kind of artifact.
newTestGridSessionArtifact :: TestGridSessionArtifact

-- | The VPC security groups and subnets that are attached to a project.
--   
--   <i>See:</i> <a>newTestGridVpcConfig</a> smart constructor.
data TestGridVpcConfig
TestGridVpcConfig' :: NonEmpty Text -> NonEmpty Text -> Text -> TestGridVpcConfig

-- | Create a value of <a>TestGridVpcConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:TestGridVpcConfig'</a>,
--   <a>testGridVpcConfig_securityGroupIds</a> - A list of VPC security
--   group IDs in your Amazon VPC.
--   
--   <a>$sel:subnetIds:TestGridVpcConfig'</a>,
--   <a>testGridVpcConfig_subnetIds</a> - A list of VPC subnet IDs in your
--   Amazon VPC.
--   
--   <a>$sel:vpcId:TestGridVpcConfig'</a>, <a>testGridVpcConfig_vpcId</a> -
--   The ID of the Amazon VPC.
newTestGridVpcConfig :: NonEmpty Text -> NonEmpty Text -> Text -> TestGridVpcConfig

-- | Represents information about free trial device minutes for an AWS
--   account.
--   
--   <i>See:</i> <a>newTrialMinutes</a> smart constructor.
data TrialMinutes
TrialMinutes' :: Maybe Double -> Maybe Double -> TrialMinutes

-- | Create a value of <a>TrialMinutes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:total:TrialMinutes'</a>, <a>trialMinutes_total</a> - The total
--   number of free trial minutes that the account started with.
--   
--   <a>$sel:remaining:TrialMinutes'</a>, <a>trialMinutes_remaining</a> -
--   The number of free trial minutes remaining in the account.
newTrialMinutes :: TrialMinutes

-- | A collection of one or more problems, grouped by their result.
--   
--   <i>See:</i> <a>newUniqueProblem</a> smart constructor.
data UniqueProblem
UniqueProblem' :: Maybe Text -> Maybe [Problem] -> UniqueProblem

-- | Create a value of <a>UniqueProblem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:UniqueProblem'</a>, <a>uniqueProblem_message</a> - A
--   message about the unique problems' result.
--   
--   <a>$sel:problems:UniqueProblem'</a>, <a>uniqueProblem_problems</a> -
--   Information about the problems.
newUniqueProblem :: UniqueProblem

-- | An app or a set of one or more tests to upload or that have been
--   uploaded.
--   
--   <i>See:</i> <a>newUpload</a> smart constructor.
data Upload
Upload' :: Maybe UploadStatus -> Maybe Text -> Maybe Text -> Maybe UploadCategory -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe UploadType -> Maybe POSIX -> Upload

-- | Create a value of <a>Upload</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Upload'</a>, <a>upload_status</a> - The upload's
--   status.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>FAILED</li>
--   <li>INITIALIZED</li>
--   <li>PROCESSING</li>
--   <li>SUCCEEDED</li>
--   </ul>
--   
--   <a>$sel:contentType:Upload'</a>, <a>upload_contentType</a> - The
--   upload's content type (for example,
--   <tt>application/octet-stream</tt>).
--   
--   <a>$sel:message:Upload'</a>, <a>upload_message</a> - A message about
--   the upload's result.
--   
--   <a>$sel:category:Upload'</a>, <a>upload_category</a> - The upload's
--   category. Allowed values include:
--   
--   <ul>
--   <li>CURATED: An upload managed by AWS Device Farm.</li>
--   <li>PRIVATE: An upload managed by the AWS Device Farm customer.</li>
--   </ul>
--   
--   <a>$sel:arn:Upload'</a>, <a>upload_arn</a> - The upload's ARN.
--   
--   <a>$sel:metadata:Upload'</a>, <a>upload_metadata</a> - The upload's
--   metadata. For example, for Android, this contains information that is
--   parsed from the manifest and is displayed in the AWS Device Farm
--   console after the associated app is uploaded.
--   
--   <a>$sel:name:Upload'</a>, <a>upload_name</a> - The upload's file name.
--   
--   <a>$sel:url:Upload'</a>, <a>upload_url</a> - The presigned Amazon S3
--   URL that was used to store a file using a PUT request.
--   
--   <a>$sel:type':Upload'</a>, <a>upload_type</a> - The upload's type.
--   
--   Must be one of the following values:
--   
--   <ul>
--   <li>ANDROID_APP</li>
--   <li>IOS_APP</li>
--   <li>WEB_APP</li>
--   <li>EXTERNAL_DATA</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_RUBY_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_PYTHON_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_NODE_TEST_PACKAGE</li>
--   <li>APPIUM_WEB_RUBY_TEST_PACKAGE</li>
--   <li>CALABASH_TEST_PACKAGE</li>
--   <li>INSTRUMENTATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATION_TEST_PACKAGE</li>
--   <li>UIAUTOMATOR_TEST_PACKAGE</li>
--   <li>XCTEST_TEST_PACKAGE</li>
--   <li>XCTEST_UI_TEST_PACKAGE</li>
--   <li>APPIUM_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_NODE_TEST_SPEC</li>
--   <li>APPIUM_RUBY_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</li>
--   <li>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</li>
--   <li>APPIUM_WEB_PYTHON_TEST_SPEC</li>
--   <li>APPIUM_WEB_NODE_TEST_SPEC</li>
--   <li>APPIUM_WEB_RUBY_TEST_SPEC</li>
--   <li>INSTRUMENTATION_TEST_SPEC</li>
--   <li>XCTEST_UI_TEST_SPEC</li>
--   </ul>
--   
--   <a>$sel:created:Upload'</a>, <a>upload_created</a> - When the upload
--   was created.
newUpload :: Upload

-- | Represents an Amazon Virtual Private Cloud (VPC) endpoint
--   configuration.
--   
--   <i>See:</i> <a>newVPCEConfiguration</a> smart constructor.
data VPCEConfiguration
VPCEConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VPCEConfiguration

-- | Create a value of <a>VPCEConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpceConfigurationName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceConfigurationName</a> - The friendly name you
--   give to your VPC endpoint configuration to manage your configurations
--   more easily.
--   
--   <a>$sel:vpceConfigurationDescription:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceConfigurationDescription</a> - An optional
--   description that provides details about your VPC endpoint
--   configuration.
--   
--   <a>$sel:arn:VPCEConfiguration'</a>, <a>vPCEConfiguration_arn</a> - The
--   Amazon Resource Name (ARN) of the VPC endpoint configuration.
--   
--   <a>$sel:serviceDnsName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_serviceDnsName</a> - The DNS name that maps to
--   the private IP address of the service you want to access.
--   
--   <a>$sel:vpceServiceName:VPCEConfiguration'</a>,
--   <a>vPCEConfiguration_vpceServiceName</a> - The name of the VPC
--   endpoint service running in your AWS account that you want Device Farm
--   to test.
newVPCEConfiguration :: VPCEConfiguration
