-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-datapipelineZSamazonka-datapipeline
@version 1.6.1


module Network.AWS.DataPipeline.Types.Field

-- | A key-value pair that describes a property of a pipeline object. The
--   value is specified as either a string value (<tt>StringValue</tt>) or
--   a reference to another object (<tt>RefValue</tt>) but not as both.
--   
--   <i>See:</i> <a>newField</a> smart constructor.
data Field
Field' :: Maybe Text -> Maybe Text -> Text -> Field

-- | The field value, expressed as a String.
[$sel:stringValue:Field'] :: Field -> Maybe Text

-- | The field value, expressed as the identifier of another object.
[$sel:refValue:Field'] :: Field -> Maybe Text

-- | The field identifier.
[$sel:key:Field'] :: Field -> Text

-- | Create a value of <a>Field</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:Field'</a>, <a>field_stringValue</a> - The field
--   value, expressed as a String.
--   
--   <a>$sel:refValue:Field'</a>, <a>field_refValue</a> - The field value,
--   expressed as the identifier of another object.
--   
--   <a>$sel:key:Field'</a>, <a>field_key</a> - The field identifier.
newField :: Text -> Field

-- | The field value, expressed as a String.
field_stringValue :: Lens' Field (Maybe Text)

-- | The field value, expressed as the identifier of another object.
field_refValue :: Lens' Field (Maybe Text)

-- | The field identifier.
field_key :: Lens' Field Text
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.Field.Field
instance GHC.Show.Show Network.AWS.DataPipeline.Types.Field.Field
instance GHC.Read.Read Network.AWS.DataPipeline.Types.Field.Field
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.Field.Field
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.Field.Field
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.Field.Field
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.Field.Field
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.Field.Field


module Network.AWS.DataPipeline.Types.InstanceIdentity

-- | Identity information for the EC2 instance that is hosting the task
--   runner. You can get this value by calling a metadata URI from the EC2
--   instance. For more information, see <a>Instance Metadata</a> in the
--   <i>Amazon Elastic Compute Cloud User Guide.</i> Passing in this value
--   proves that your task runner is running on an EC2 instance, and
--   ensures the proper AWS Data Pipeline service charges are applied to
--   your pipeline.
--   
--   <i>See:</i> <a>newInstanceIdentity</a> smart constructor.
data InstanceIdentity
InstanceIdentity' :: Maybe Text -> Maybe Text -> InstanceIdentity

-- | A description of an EC2 instance that is generated when the instance
--   is launched and exposed to the instance via the instance metadata
--   service in the form of a JSON representation of an object.
[$sel:document:InstanceIdentity'] :: InstanceIdentity -> Maybe Text

-- | A signature which can be used to verify the accuracy and authenticity
--   of the information provided in the instance identity document.
[$sel:signature:InstanceIdentity'] :: InstanceIdentity -> Maybe Text

-- | Create a value of <a>InstanceIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:InstanceIdentity'</a>,
--   <a>instanceIdentity_document</a> - A description of an EC2 instance
--   that is generated when the instance is launched and exposed to the
--   instance via the instance metadata service in the form of a JSON
--   representation of an object.
--   
--   <a>$sel:signature:InstanceIdentity'</a>,
--   <a>instanceIdentity_signature</a> - A signature which can be used to
--   verify the accuracy and authenticity of the information provided in
--   the instance identity document.
newInstanceIdentity :: InstanceIdentity

-- | A description of an EC2 instance that is generated when the instance
--   is launched and exposed to the instance via the instance metadata
--   service in the form of a JSON representation of an object.
instanceIdentity_document :: Lens' InstanceIdentity (Maybe Text)

-- | A signature which can be used to verify the accuracy and authenticity
--   of the information provided in the instance identity document.
instanceIdentity_signature :: Lens' InstanceIdentity (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.InstanceIdentity.InstanceIdentity
instance GHC.Show.Show Network.AWS.DataPipeline.Types.InstanceIdentity.InstanceIdentity
instance GHC.Read.Read Network.AWS.DataPipeline.Types.InstanceIdentity.InstanceIdentity
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.InstanceIdentity.InstanceIdentity
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.InstanceIdentity.InstanceIdentity
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.InstanceIdentity.InstanceIdentity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.InstanceIdentity.InstanceIdentity


module Network.AWS.DataPipeline.Types.OperatorType
newtype OperatorType
OperatorType' :: Text -> OperatorType
[fromOperatorType] :: OperatorType -> Text
pattern OperatorType_BETWEEN :: OperatorType
pattern OperatorType_EQ :: OperatorType
pattern OperatorType_GE :: OperatorType
pattern OperatorType_LE :: OperatorType
pattern OperatorType_REF_EQ :: OperatorType
instance Network.AWS.Data.XML.ToXML Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Network.AWS.Data.XML.FromXML Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Network.AWS.Data.Log.ToLog Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Network.AWS.Data.Text.ToText Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Network.AWS.Data.Text.FromText Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance GHC.Classes.Ord Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance GHC.Read.Read Network.AWS.DataPipeline.Types.OperatorType.OperatorType
instance GHC.Show.Show Network.AWS.DataPipeline.Types.OperatorType.OperatorType


module Network.AWS.DataPipeline.Types.Operator

-- | Contains a logical operation for comparing the value of a field with a
--   specified value.
--   
--   <i>See:</i> <a>newOperator</a> smart constructor.
data Operator
Operator' :: Maybe [Text] -> Maybe OperatorType -> Operator

-- | The value that the actual field value will be compared with.
[$sel:values:Operator'] :: Operator -> Maybe [Text]

-- | The logical operation to be performed: equal (<tt>EQ</tt>), equal
--   reference (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater
--   than or equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal
--   reference (<tt>REF_EQ</tt>) can be used only with reference fields.
--   The other comparison types can be used only with String fields. The
--   comparison types you can use apply only to certain object fields, as
--   detailed below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   <ul>
--   <li>name</li>
--   <li>@sphere</li>
--   <li>parent</li>
--   <li>@componentParent</li>
--   <li>@instanceParent</li>
--   <li>@status</li>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   The comparison operators <tt>GE</tt>, <tt>LE</tt>, and
--   <tt>BETWEEN</tt> act on the following fields:
--   
--   <ul>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   Note that fields beginning with the at sign (@) are read-only and set
--   by the web service. When you name fields, you should choose names
--   containing only alpha-numeric values, as symbols may be reserved by
--   AWS Data Pipeline. User-defined fields that you add to a pipeline
--   should prefix their name with the string "my".
[$sel:type':Operator'] :: Operator -> Maybe OperatorType

-- | Create a value of <a>Operator</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Operator'</a>, <a>operator_values</a> - The value that
--   the actual field value will be compared with.
--   
--   <a>$sel:type':Operator'</a>, <a>operator_type</a> - The logical
--   operation to be performed: equal (<tt>EQ</tt>), equal reference
--   (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater than or
--   equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal reference
--   (<tt>REF_EQ</tt>) can be used only with reference fields. The other
--   comparison types can be used only with String fields. The comparison
--   types you can use apply only to certain object fields, as detailed
--   below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   <ul>
--   <li>name</li>
--   <li>@sphere</li>
--   <li>parent</li>
--   <li>@componentParent</li>
--   <li>@instanceParent</li>
--   <li>@status</li>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   The comparison operators <tt>GE</tt>, <tt>LE</tt>, and
--   <tt>BETWEEN</tt> act on the following fields:
--   
--   <ul>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   Note that fields beginning with the at sign (@) are read-only and set
--   by the web service. When you name fields, you should choose names
--   containing only alpha-numeric values, as symbols may be reserved by
--   AWS Data Pipeline. User-defined fields that you add to a pipeline
--   should prefix their name with the string "my".
newOperator :: Operator

-- | The value that the actual field value will be compared with.
operator_values :: Lens' Operator (Maybe [Text])

-- | The logical operation to be performed: equal (<tt>EQ</tt>), equal
--   reference (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater
--   than or equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal
--   reference (<tt>REF_EQ</tt>) can be used only with reference fields.
--   The other comparison types can be used only with String fields. The
--   comparison types you can use apply only to certain object fields, as
--   detailed below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   <ul>
--   <li>name</li>
--   <li>@sphere</li>
--   <li>parent</li>
--   <li>@componentParent</li>
--   <li>@instanceParent</li>
--   <li>@status</li>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   The comparison operators <tt>GE</tt>, <tt>LE</tt>, and
--   <tt>BETWEEN</tt> act on the following fields:
--   
--   <ul>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   Note that fields beginning with the at sign (@) are read-only and set
--   by the web service. When you name fields, you should choose names
--   containing only alpha-numeric values, as symbols may be reserved by
--   AWS Data Pipeline. User-defined fields that you add to a pipeline
--   should prefix their name with the string "my".
operator_type :: Lens' Operator (Maybe OperatorType)
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.Operator.Operator
instance GHC.Show.Show Network.AWS.DataPipeline.Types.Operator.Operator
instance GHC.Read.Read Network.AWS.DataPipeline.Types.Operator.Operator
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.Operator.Operator
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.Operator.Operator
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.Operator.Operator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.Operator.Operator


module Network.AWS.DataPipeline.Types.ParameterAttribute

-- | The attributes allowed or specified with a parameter object.
--   
--   <i>See:</i> <a>newParameterAttribute</a> smart constructor.
data ParameterAttribute
ParameterAttribute' :: Text -> Text -> ParameterAttribute

-- | The field identifier.
[$sel:key:ParameterAttribute'] :: ParameterAttribute -> Text

-- | The field value, expressed as a String.
[$sel:stringValue:ParameterAttribute'] :: ParameterAttribute -> Text

-- | Create a value of <a>ParameterAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:ParameterAttribute'</a>, <a>parameterAttribute_key</a> -
--   The field identifier.
--   
--   <a>$sel:stringValue:ParameterAttribute'</a>,
--   <a>parameterAttribute_stringValue</a> - The field value, expressed as
--   a String.
newParameterAttribute :: Text -> Text -> ParameterAttribute

-- | The field identifier.
parameterAttribute_key :: Lens' ParameterAttribute Text

-- | The field value, expressed as a String.
parameterAttribute_stringValue :: Lens' ParameterAttribute Text
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.ParameterAttribute.ParameterAttribute
instance GHC.Show.Show Network.AWS.DataPipeline.Types.ParameterAttribute.ParameterAttribute
instance GHC.Read.Read Network.AWS.DataPipeline.Types.ParameterAttribute.ParameterAttribute
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.ParameterAttribute.ParameterAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.ParameterAttribute.ParameterAttribute
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.ParameterAttribute.ParameterAttribute
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.ParameterAttribute.ParameterAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.ParameterAttribute.ParameterAttribute


module Network.AWS.DataPipeline.Types.ParameterObject

-- | Contains information about a parameter object.
--   
--   <i>See:</i> <a>newParameterObject</a> smart constructor.
data ParameterObject
ParameterObject' :: Text -> [ParameterAttribute] -> ParameterObject

-- | The ID of the parameter object.
[$sel:id:ParameterObject'] :: ParameterObject -> Text

-- | The attributes of the parameter object.
[$sel:attributes:ParameterObject'] :: ParameterObject -> [ParameterAttribute]

-- | Create a value of <a>ParameterObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ParameterObject'</a>, <a>parameterObject_id</a> - The ID of
--   the parameter object.
--   
--   <a>$sel:attributes:ParameterObject'</a>,
--   <a>parameterObject_attributes</a> - The attributes of the parameter
--   object.
newParameterObject :: Text -> ParameterObject

-- | The ID of the parameter object.
parameterObject_id :: Lens' ParameterObject Text

-- | The attributes of the parameter object.
parameterObject_attributes :: Lens' ParameterObject [ParameterAttribute]
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.ParameterObject.ParameterObject
instance GHC.Show.Show Network.AWS.DataPipeline.Types.ParameterObject.ParameterObject
instance GHC.Read.Read Network.AWS.DataPipeline.Types.ParameterObject.ParameterObject
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.ParameterObject.ParameterObject
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.ParameterObject.ParameterObject
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.ParameterObject.ParameterObject
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.ParameterObject.ParameterObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.ParameterObject.ParameterObject


module Network.AWS.DataPipeline.Types.ParameterValue

-- | A value or list of parameter values.
--   
--   <i>See:</i> <a>newParameterValue</a> smart constructor.
data ParameterValue
ParameterValue' :: Text -> Text -> ParameterValue

-- | The ID of the parameter value.
[$sel:id:ParameterValue'] :: ParameterValue -> Text

-- | The field value, expressed as a String.
[$sel:stringValue:ParameterValue'] :: ParameterValue -> Text

-- | Create a value of <a>ParameterValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ParameterValue'</a>, <a>parameterValue_id</a> - The ID of
--   the parameter value.
--   
--   <a>$sel:stringValue:ParameterValue'</a>,
--   <a>parameterValue_stringValue</a> - The field value, expressed as a
--   String.
newParameterValue :: Text -> Text -> ParameterValue

-- | The ID of the parameter value.
parameterValue_id :: Lens' ParameterValue Text

-- | The field value, expressed as a String.
parameterValue_stringValue :: Lens' ParameterValue Text
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.ParameterValue.ParameterValue
instance GHC.Show.Show Network.AWS.DataPipeline.Types.ParameterValue.ParameterValue
instance GHC.Read.Read Network.AWS.DataPipeline.Types.ParameterValue.ParameterValue
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.ParameterValue.ParameterValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.ParameterValue.ParameterValue
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.ParameterValue.ParameterValue
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.ParameterValue.ParameterValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.ParameterValue.ParameterValue


module Network.AWS.DataPipeline.Types.PipelineIdName

-- | Contains the name and identifier of a pipeline.
--   
--   <i>See:</i> <a>newPipelineIdName</a> smart constructor.
data PipelineIdName
PipelineIdName' :: Maybe Text -> Maybe Text -> PipelineIdName

-- | The ID of the pipeline that was assigned by AWS Data Pipeline. This is
--   a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
[$sel:id:PipelineIdName'] :: PipelineIdName -> Maybe Text

-- | The name of the pipeline.
[$sel:name:PipelineIdName'] :: PipelineIdName -> Maybe Text

-- | Create a value of <a>PipelineIdName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:PipelineIdName'</a>, <a>pipelineIdName_id</a> - The ID of
--   the pipeline that was assigned by AWS Data Pipeline. This is a string
--   of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
--   
--   <a>$sel:name:PipelineIdName'</a>, <a>pipelineIdName_name</a> - The
--   name of the pipeline.
newPipelineIdName :: PipelineIdName

-- | The ID of the pipeline that was assigned by AWS Data Pipeline. This is
--   a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
pipelineIdName_id :: Lens' PipelineIdName (Maybe Text)

-- | The name of the pipeline.
pipelineIdName_name :: Lens' PipelineIdName (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.PipelineIdName.PipelineIdName
instance GHC.Show.Show Network.AWS.DataPipeline.Types.PipelineIdName.PipelineIdName
instance GHC.Read.Read Network.AWS.DataPipeline.Types.PipelineIdName.PipelineIdName
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.PipelineIdName.PipelineIdName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.PipelineIdName.PipelineIdName
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.PipelineIdName.PipelineIdName
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.PipelineIdName.PipelineIdName


module Network.AWS.DataPipeline.Types.PipelineObject

-- | Contains information about a pipeline object. This can be a logical,
--   physical, or physical attempt pipeline object. The complete set of
--   components of a pipeline defines the pipeline.
--   
--   <i>See:</i> <a>newPipelineObject</a> smart constructor.
data PipelineObject
PipelineObject' :: Text -> Text -> [Field] -> PipelineObject

-- | The ID of the object.
[$sel:id:PipelineObject'] :: PipelineObject -> Text

-- | The name of the object.
[$sel:name:PipelineObject'] :: PipelineObject -> Text

-- | Key-value pairs that define the properties of the object.
[$sel:fields:PipelineObject'] :: PipelineObject -> [Field]

-- | Create a value of <a>PipelineObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:PipelineObject'</a>, <a>pipelineObject_id</a> - The ID of
--   the object.
--   
--   <a>$sel:name:PipelineObject'</a>, <a>pipelineObject_name</a> - The
--   name of the object.
--   
--   <a>$sel:fields:PipelineObject'</a>, <a>pipelineObject_fields</a> -
--   Key-value pairs that define the properties of the object.
newPipelineObject :: Text -> Text -> PipelineObject

-- | The ID of the object.
pipelineObject_id :: Lens' PipelineObject Text

-- | The name of the object.
pipelineObject_name :: Lens' PipelineObject Text

-- | Key-value pairs that define the properties of the object.
pipelineObject_fields :: Lens' PipelineObject [Field]
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.PipelineObject.PipelineObject
instance GHC.Show.Show Network.AWS.DataPipeline.Types.PipelineObject.PipelineObject
instance GHC.Read.Read Network.AWS.DataPipeline.Types.PipelineObject.PipelineObject
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.PipelineObject.PipelineObject
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.PipelineObject.PipelineObject
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.PipelineObject.PipelineObject
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.PipelineObject.PipelineObject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.PipelineObject.PipelineObject


module Network.AWS.DataPipeline.Types.Selector

-- | A comparision that is used to determine whether a query should return
--   this object.
--   
--   <i>See:</i> <a>newSelector</a> smart constructor.
data Selector
Selector' :: Maybe Operator -> Maybe Text -> Selector
[$sel:operator:Selector'] :: Selector -> Maybe Operator

-- | The name of the field that the operator will be applied to. The field
--   name is the "key" portion of the field definition in the pipeline
--   definition syntax that is used by the AWS Data Pipeline API. If the
--   field is not set on the object, the condition fails.
[$sel:fieldName:Selector'] :: Selector -> Maybe Text

-- | Create a value of <a>Selector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:Selector'</a>, <a>selector_operator</a> -
--   Undocumented member.
--   
--   <a>$sel:fieldName:Selector'</a>, <a>selector_fieldName</a> - The name
--   of the field that the operator will be applied to. The field name is
--   the "key" portion of the field definition in the pipeline definition
--   syntax that is used by the AWS Data Pipeline API. If the field is not
--   set on the object, the condition fails.
newSelector :: Selector

-- | Undocumented member.
selector_operator :: Lens' Selector (Maybe Operator)

-- | The name of the field that the operator will be applied to. The field
--   name is the "key" portion of the field definition in the pipeline
--   definition syntax that is used by the AWS Data Pipeline API. If the
--   field is not set on the object, the condition fails.
selector_fieldName :: Lens' Selector (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.Selector.Selector
instance GHC.Show.Show Network.AWS.DataPipeline.Types.Selector.Selector
instance GHC.Read.Read Network.AWS.DataPipeline.Types.Selector.Selector
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.Selector.Selector
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.Selector.Selector
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.Selector.Selector
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.Selector.Selector


module Network.AWS.DataPipeline.Types.Query

-- | Defines the query to run against an object.
--   
--   <i>See:</i> <a>newQuery</a> smart constructor.
data Query
Query' :: Maybe [Selector] -> Query

-- | List of selectors that define the query. An object must satisfy all of
--   the selectors to match the query.
[$sel:selectors:Query'] :: Query -> Maybe [Selector]

-- | Create a value of <a>Query</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectors:Query'</a>, <a>query_selectors</a> - List of
--   selectors that define the query. An object must satisfy all of the
--   selectors to match the query.
newQuery :: Query

-- | List of selectors that define the query. An object must satisfy all of
--   the selectors to match the query.
query_selectors :: Lens' Query (Maybe [Selector])
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.Query.Query
instance GHC.Show.Show Network.AWS.DataPipeline.Types.Query.Query
instance GHC.Read.Read Network.AWS.DataPipeline.Types.Query.Query
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.Query.Query
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.Query.Query
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.Query.Query
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.Query.Query


module Network.AWS.DataPipeline.Types.Tag

-- | Tags are key/value pairs defined by a user and associated with a
--   pipeline to control access. AWS Data Pipeline allows you to associate
--   ten tags per pipeline. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key name of a tag defined by a user. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
[$sel:key:Tag'] :: Tag -> Text

-- | The optional value portion of a tag defined by a user. For more
--   information, see <a>Controlling User Access to Pipelines</a> in the
--   <i>AWS Data Pipeline Developer Guide</i>.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key name of a tag defined
--   by a user. For more information, see <a>Controlling User Access to
--   Pipelines</a> in the <i>AWS Data Pipeline Developer Guide</i>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional value portion
--   of a tag defined by a user. For more information, see <a>Controlling
--   User Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
newTag :: Text -> Text -> Tag

-- | The key name of a tag defined by a user. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
tag_key :: Lens' Tag Text

-- | The optional value portion of a tag defined by a user. For more
--   information, see <a>Controlling User Access to Pipelines</a> in the
--   <i>AWS Data Pipeline Developer Guide</i>.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.DataPipeline.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.DataPipeline.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.Tag.Tag


module Network.AWS.DataPipeline.Types.PipelineDescription

-- | Contains pipeline metadata.
--   
--   <i>See:</i> <a>newPipelineDescription</a> smart constructor.
data PipelineDescription
PipelineDescription' :: Maybe [Tag] -> Maybe Text -> Text -> Text -> [Field] -> PipelineDescription

-- | A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
[$sel:tags:PipelineDescription'] :: PipelineDescription -> Maybe [Tag]

-- | Description of the pipeline.
[$sel:description:PipelineDescription'] :: PipelineDescription -> Maybe Text

-- | The pipeline identifier that was assigned by AWS Data Pipeline. This
--   is a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
[$sel:pipelineId:PipelineDescription'] :: PipelineDescription -> Text

-- | The name of the pipeline.
[$sel:name:PipelineDescription'] :: PipelineDescription -> Text

-- | A list of read-only fields that contain metadata about the pipeline:
--   @userId, @accountId, and @pipelineState.
[$sel:fields:PipelineDescription'] :: PipelineDescription -> [Field]

-- | Create a value of <a>PipelineDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PipelineDescription'</a>, <a>pipelineDescription_tags</a>
--   - A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
--   
--   <a>$sel:description:PipelineDescription'</a>,
--   <a>pipelineDescription_description</a> - Description of the pipeline.
--   
--   <a>$sel:pipelineId:PipelineDescription'</a>,
--   <a>pipelineDescription_pipelineId</a> - The pipeline identifier that
--   was assigned by AWS Data Pipeline. This is a string of the form
--   <tt>df-297EG78HU43EEXAMPLE</tt>.
--   
--   <a>$sel:name:PipelineDescription'</a>, <a>pipelineDescription_name</a>
--   - The name of the pipeline.
--   
--   <a>$sel:fields:PipelineDescription'</a>,
--   <a>pipelineDescription_fields</a> - A list of read-only fields that
--   contain metadata about the pipeline: @userId, @accountId, and
--   @pipelineState.
newPipelineDescription :: Text -> Text -> PipelineDescription

-- | A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
pipelineDescription_tags :: Lens' PipelineDescription (Maybe [Tag])

-- | Description of the pipeline.
pipelineDescription_description :: Lens' PipelineDescription (Maybe Text)

-- | The pipeline identifier that was assigned by AWS Data Pipeline. This
--   is a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
pipelineDescription_pipelineId :: Lens' PipelineDescription Text

-- | The name of the pipeline.
pipelineDescription_name :: Lens' PipelineDescription Text

-- | A list of read-only fields that contain metadata about the pipeline:
--   @userId, @accountId, and @pipelineState.
pipelineDescription_fields :: Lens' PipelineDescription [Field]
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.PipelineDescription.PipelineDescription
instance GHC.Show.Show Network.AWS.DataPipeline.Types.PipelineDescription.PipelineDescription
instance GHC.Read.Read Network.AWS.DataPipeline.Types.PipelineDescription.PipelineDescription
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.PipelineDescription.PipelineDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.PipelineDescription.PipelineDescription
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.PipelineDescription.PipelineDescription
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.PipelineDescription.PipelineDescription


module Network.AWS.DataPipeline.Types.TaskObject

-- | Contains information about a pipeline task that is assigned to a task
--   runner.
--   
--   <i>See:</i> <a>newTaskObject</a> smart constructor.
data TaskObject
TaskObject' :: Maybe Text -> Maybe (HashMap Text PipelineObject) -> Maybe Text -> Maybe Text -> TaskObject

-- | The ID of the pipeline that provided the task.
[$sel:pipelineId:TaskObject'] :: TaskObject -> Maybe Text

-- | Connection information for the location where the task runner will
--   publish the output of the task.
[$sel:objects:TaskObject'] :: TaskObject -> Maybe (HashMap Text PipelineObject)

-- | An internal identifier for the task. This ID is passed to the
--   SetTaskStatus and ReportTaskProgress actions.
[$sel:taskId:TaskObject'] :: TaskObject -> Maybe Text

-- | The ID of the pipeline task attempt object. AWS Data Pipeline uses
--   this value to track how many times a task is attempted.
[$sel:attemptId:TaskObject'] :: TaskObject -> Maybe Text

-- | Create a value of <a>TaskObject</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:TaskObject'</a>, <a>taskObject_pipelineId</a> - The
--   ID of the pipeline that provided the task.
--   
--   <a>$sel:objects:TaskObject'</a>, <a>taskObject_objects</a> -
--   Connection information for the location where the task runner will
--   publish the output of the task.
--   
--   <a>$sel:taskId:TaskObject'</a>, <a>taskObject_taskId</a> - An internal
--   identifier for the task. This ID is passed to the SetTaskStatus and
--   ReportTaskProgress actions.
--   
--   <a>$sel:attemptId:TaskObject'</a>, <a>taskObject_attemptId</a> - The
--   ID of the pipeline task attempt object. AWS Data Pipeline uses this
--   value to track how many times a task is attempted.
newTaskObject :: TaskObject

-- | The ID of the pipeline that provided the task.
taskObject_pipelineId :: Lens' TaskObject (Maybe Text)

-- | Connection information for the location where the task runner will
--   publish the output of the task.
taskObject_objects :: Lens' TaskObject (Maybe (HashMap Text PipelineObject))

-- | An internal identifier for the task. This ID is passed to the
--   SetTaskStatus and ReportTaskProgress actions.
taskObject_taskId :: Lens' TaskObject (Maybe Text)

-- | The ID of the pipeline task attempt object. AWS Data Pipeline uses
--   this value to track how many times a task is attempted.
taskObject_attemptId :: Lens' TaskObject (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.TaskObject.TaskObject
instance GHC.Show.Show Network.AWS.DataPipeline.Types.TaskObject.TaskObject
instance GHC.Read.Read Network.AWS.DataPipeline.Types.TaskObject.TaskObject
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.TaskObject.TaskObject
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.TaskObject.TaskObject
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.TaskObject.TaskObject
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.TaskObject.TaskObject


module Network.AWS.DataPipeline.Types.TaskStatus
newtype TaskStatus
TaskStatus' :: Text -> TaskStatus
[fromTaskStatus] :: TaskStatus -> Text
pattern TaskStatus_FAILED :: TaskStatus
pattern TaskStatus_FALSE :: TaskStatus
pattern TaskStatus_FINISHED :: TaskStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Text.ToText Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Text.FromText Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance GHC.Classes.Ord Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance GHC.Read.Read Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus
instance GHC.Show.Show Network.AWS.DataPipeline.Types.TaskStatus.TaskStatus


module Network.AWS.DataPipeline.Types.ValidationError

-- | Defines a validation error. Validation errors prevent pipeline
--   activation. The set of validation errors that can be returned are
--   defined by AWS Data Pipeline.
--   
--   <i>See:</i> <a>newValidationError</a> smart constructor.
data ValidationError
ValidationError' :: Maybe Text -> Maybe [Text] -> ValidationError

-- | The identifier of the object that contains the validation error.
[$sel:id:ValidationError'] :: ValidationError -> Maybe Text

-- | A description of the validation error.
[$sel:errors:ValidationError'] :: ValidationError -> Maybe [Text]

-- | Create a value of <a>ValidationError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ValidationError'</a>, <a>validationError_id</a> - The
--   identifier of the object that contains the validation error.
--   
--   <a>$sel:errors:ValidationError'</a>, <a>validationError_errors</a> - A
--   description of the validation error.
newValidationError :: ValidationError

-- | The identifier of the object that contains the validation error.
validationError_id :: Lens' ValidationError (Maybe Text)

-- | A description of the validation error.
validationError_errors :: Lens' ValidationError (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.ValidationError.ValidationError
instance GHC.Show.Show Network.AWS.DataPipeline.Types.ValidationError.ValidationError
instance GHC.Read.Read Network.AWS.DataPipeline.Types.ValidationError.ValidationError
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.ValidationError.ValidationError
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.ValidationError.ValidationError
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.ValidationError.ValidationError
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.ValidationError.ValidationError


module Network.AWS.DataPipeline.Types.ValidationWarning

-- | Defines a validation warning. Validation warnings do not prevent
--   pipeline activation. The set of validation warnings that can be
--   returned are defined by AWS Data Pipeline.
--   
--   <i>See:</i> <a>newValidationWarning</a> smart constructor.
data ValidationWarning
ValidationWarning' :: Maybe [Text] -> Maybe Text -> ValidationWarning

-- | A description of the validation warning.
[$sel:warnings:ValidationWarning'] :: ValidationWarning -> Maybe [Text]

-- | The identifier of the object that contains the validation warning.
[$sel:id:ValidationWarning'] :: ValidationWarning -> Maybe Text

-- | Create a value of <a>ValidationWarning</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:warnings:ValidationWarning'</a>,
--   <a>validationWarning_warnings</a> - A description of the validation
--   warning.
--   
--   <a>$sel:id:ValidationWarning'</a>, <a>validationWarning_id</a> - The
--   identifier of the object that contains the validation warning.
newValidationWarning :: ValidationWarning

-- | A description of the validation warning.
validationWarning_warnings :: Lens' ValidationWarning (Maybe [Text])

-- | The identifier of the object that contains the validation warning.
validationWarning_id :: Lens' ValidationWarning (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DataPipeline.Types.ValidationWarning.ValidationWarning
instance GHC.Show.Show Network.AWS.DataPipeline.Types.ValidationWarning.ValidationWarning
instance GHC.Read.Read Network.AWS.DataPipeline.Types.ValidationWarning.ValidationWarning
instance GHC.Classes.Eq Network.AWS.DataPipeline.Types.ValidationWarning.ValidationWarning
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DataPipeline.Types.ValidationWarning.ValidationWarning
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.Types.ValidationWarning.ValidationWarning
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.Types.ValidationWarning.ValidationWarning


module Network.AWS.DataPipeline.Types

-- | API version <tt>2012-10-29</tt> of the Amazon Data Pipeline SDK
--   configuration.
defaultService :: Service

-- | The specified task was not found.
_TaskNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was not valid. Verify that your request was properly
--   formatted, that the signature was generated with the correct
--   credentials, and that you haven't exceeded any of the service limits
--   for your account.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified pipeline was not found. Verify that you used the correct
--   user and account identifiers.
_PipelineNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified pipeline has been deleted.
_PipelineDeletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal service error occurred.
_InternalServiceError :: AsError a => Getting (First ServiceError) a ServiceError
newtype OperatorType
OperatorType' :: Text -> OperatorType
[fromOperatorType] :: OperatorType -> Text
pattern OperatorType_BETWEEN :: OperatorType
pattern OperatorType_EQ :: OperatorType
pattern OperatorType_GE :: OperatorType
pattern OperatorType_LE :: OperatorType
pattern OperatorType_REF_EQ :: OperatorType
newtype TaskStatus
TaskStatus' :: Text -> TaskStatus
[fromTaskStatus] :: TaskStatus -> Text
pattern TaskStatus_FAILED :: TaskStatus
pattern TaskStatus_FALSE :: TaskStatus
pattern TaskStatus_FINISHED :: TaskStatus

-- | A key-value pair that describes a property of a pipeline object. The
--   value is specified as either a string value (<tt>StringValue</tt>) or
--   a reference to another object (<tt>RefValue</tt>) but not as both.
--   
--   <i>See:</i> <a>newField</a> smart constructor.
data Field
Field' :: Maybe Text -> Maybe Text -> Text -> Field

-- | The field value, expressed as a String.
[$sel:stringValue:Field'] :: Field -> Maybe Text

-- | The field value, expressed as the identifier of another object.
[$sel:refValue:Field'] :: Field -> Maybe Text

-- | The field identifier.
[$sel:key:Field'] :: Field -> Text

-- | Create a value of <a>Field</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:Field'</a>, <a>field_stringValue</a> - The field
--   value, expressed as a String.
--   
--   <a>$sel:refValue:Field'</a>, <a>field_refValue</a> - The field value,
--   expressed as the identifier of another object.
--   
--   <a>$sel:key:Field'</a>, <a>field_key</a> - The field identifier.
newField :: Text -> Field

-- | The field value, expressed as a String.
field_stringValue :: Lens' Field (Maybe Text)

-- | The field value, expressed as the identifier of another object.
field_refValue :: Lens' Field (Maybe Text)

-- | The field identifier.
field_key :: Lens' Field Text

-- | Identity information for the EC2 instance that is hosting the task
--   runner. You can get this value by calling a metadata URI from the EC2
--   instance. For more information, see <a>Instance Metadata</a> in the
--   <i>Amazon Elastic Compute Cloud User Guide.</i> Passing in this value
--   proves that your task runner is running on an EC2 instance, and
--   ensures the proper AWS Data Pipeline service charges are applied to
--   your pipeline.
--   
--   <i>See:</i> <a>newInstanceIdentity</a> smart constructor.
data InstanceIdentity
InstanceIdentity' :: Maybe Text -> Maybe Text -> InstanceIdentity

-- | A description of an EC2 instance that is generated when the instance
--   is launched and exposed to the instance via the instance metadata
--   service in the form of a JSON representation of an object.
[$sel:document:InstanceIdentity'] :: InstanceIdentity -> Maybe Text

-- | A signature which can be used to verify the accuracy and authenticity
--   of the information provided in the instance identity document.
[$sel:signature:InstanceIdentity'] :: InstanceIdentity -> Maybe Text

-- | Create a value of <a>InstanceIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:InstanceIdentity'</a>,
--   <a>instanceIdentity_document</a> - A description of an EC2 instance
--   that is generated when the instance is launched and exposed to the
--   instance via the instance metadata service in the form of a JSON
--   representation of an object.
--   
--   <a>$sel:signature:InstanceIdentity'</a>,
--   <a>instanceIdentity_signature</a> - A signature which can be used to
--   verify the accuracy and authenticity of the information provided in
--   the instance identity document.
newInstanceIdentity :: InstanceIdentity

-- | A description of an EC2 instance that is generated when the instance
--   is launched and exposed to the instance via the instance metadata
--   service in the form of a JSON representation of an object.
instanceIdentity_document :: Lens' InstanceIdentity (Maybe Text)

-- | A signature which can be used to verify the accuracy and authenticity
--   of the information provided in the instance identity document.
instanceIdentity_signature :: Lens' InstanceIdentity (Maybe Text)

-- | Contains a logical operation for comparing the value of a field with a
--   specified value.
--   
--   <i>See:</i> <a>newOperator</a> smart constructor.
data Operator
Operator' :: Maybe [Text] -> Maybe OperatorType -> Operator

-- | The value that the actual field value will be compared with.
[$sel:values:Operator'] :: Operator -> Maybe [Text]

-- | The logical operation to be performed: equal (<tt>EQ</tt>), equal
--   reference (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater
--   than or equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal
--   reference (<tt>REF_EQ</tt>) can be used only with reference fields.
--   The other comparison types can be used only with String fields. The
--   comparison types you can use apply only to certain object fields, as
--   detailed below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   <ul>
--   <li>name</li>
--   <li>@sphere</li>
--   <li>parent</li>
--   <li>@componentParent</li>
--   <li>@instanceParent</li>
--   <li>@status</li>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   The comparison operators <tt>GE</tt>, <tt>LE</tt>, and
--   <tt>BETWEEN</tt> act on the following fields:
--   
--   <ul>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   Note that fields beginning with the at sign (@) are read-only and set
--   by the web service. When you name fields, you should choose names
--   containing only alpha-numeric values, as symbols may be reserved by
--   AWS Data Pipeline. User-defined fields that you add to a pipeline
--   should prefix their name with the string "my".
[$sel:type':Operator'] :: Operator -> Maybe OperatorType

-- | Create a value of <a>Operator</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Operator'</a>, <a>operator_values</a> - The value that
--   the actual field value will be compared with.
--   
--   <a>$sel:type':Operator'</a>, <a>operator_type</a> - The logical
--   operation to be performed: equal (<tt>EQ</tt>), equal reference
--   (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater than or
--   equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal reference
--   (<tt>REF_EQ</tt>) can be used only with reference fields. The other
--   comparison types can be used only with String fields. The comparison
--   types you can use apply only to certain object fields, as detailed
--   below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   <ul>
--   <li>name</li>
--   <li>@sphere</li>
--   <li>parent</li>
--   <li>@componentParent</li>
--   <li>@instanceParent</li>
--   <li>@status</li>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   The comparison operators <tt>GE</tt>, <tt>LE</tt>, and
--   <tt>BETWEEN</tt> act on the following fields:
--   
--   <ul>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   Note that fields beginning with the at sign (@) are read-only and set
--   by the web service. When you name fields, you should choose names
--   containing only alpha-numeric values, as symbols may be reserved by
--   AWS Data Pipeline. User-defined fields that you add to a pipeline
--   should prefix their name with the string "my".
newOperator :: Operator

-- | The value that the actual field value will be compared with.
operator_values :: Lens' Operator (Maybe [Text])

-- | The logical operation to be performed: equal (<tt>EQ</tt>), equal
--   reference (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater
--   than or equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal
--   reference (<tt>REF_EQ</tt>) can be used only with reference fields.
--   The other comparison types can be used only with String fields. The
--   comparison types you can use apply only to certain object fields, as
--   detailed below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   <ul>
--   <li>name</li>
--   <li>@sphere</li>
--   <li>parent</li>
--   <li>@componentParent</li>
--   <li>@instanceParent</li>
--   <li>@status</li>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   The comparison operators <tt>GE</tt>, <tt>LE</tt>, and
--   <tt>BETWEEN</tt> act on the following fields:
--   
--   <ul>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   Note that fields beginning with the at sign (@) are read-only and set
--   by the web service. When you name fields, you should choose names
--   containing only alpha-numeric values, as symbols may be reserved by
--   AWS Data Pipeline. User-defined fields that you add to a pipeline
--   should prefix their name with the string "my".
operator_type :: Lens' Operator (Maybe OperatorType)

-- | The attributes allowed or specified with a parameter object.
--   
--   <i>See:</i> <a>newParameterAttribute</a> smart constructor.
data ParameterAttribute
ParameterAttribute' :: Text -> Text -> ParameterAttribute

-- | The field identifier.
[$sel:key:ParameterAttribute'] :: ParameterAttribute -> Text

-- | The field value, expressed as a String.
[$sel:stringValue:ParameterAttribute'] :: ParameterAttribute -> Text

-- | Create a value of <a>ParameterAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:ParameterAttribute'</a>, <a>parameterAttribute_key</a> -
--   The field identifier.
--   
--   <a>$sel:stringValue:ParameterAttribute'</a>,
--   <a>parameterAttribute_stringValue</a> - The field value, expressed as
--   a String.
newParameterAttribute :: Text -> Text -> ParameterAttribute

-- | The field identifier.
parameterAttribute_key :: Lens' ParameterAttribute Text

-- | The field value, expressed as a String.
parameterAttribute_stringValue :: Lens' ParameterAttribute Text

-- | Contains information about a parameter object.
--   
--   <i>See:</i> <a>newParameterObject</a> smart constructor.
data ParameterObject
ParameterObject' :: Text -> [ParameterAttribute] -> ParameterObject

-- | The ID of the parameter object.
[$sel:id:ParameterObject'] :: ParameterObject -> Text

-- | The attributes of the parameter object.
[$sel:attributes:ParameterObject'] :: ParameterObject -> [ParameterAttribute]

-- | Create a value of <a>ParameterObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ParameterObject'</a>, <a>parameterObject_id</a> - The ID of
--   the parameter object.
--   
--   <a>$sel:attributes:ParameterObject'</a>,
--   <a>parameterObject_attributes</a> - The attributes of the parameter
--   object.
newParameterObject :: Text -> ParameterObject

-- | The ID of the parameter object.
parameterObject_id :: Lens' ParameterObject Text

-- | The attributes of the parameter object.
parameterObject_attributes :: Lens' ParameterObject [ParameterAttribute]

-- | A value or list of parameter values.
--   
--   <i>See:</i> <a>newParameterValue</a> smart constructor.
data ParameterValue
ParameterValue' :: Text -> Text -> ParameterValue

-- | The ID of the parameter value.
[$sel:id:ParameterValue'] :: ParameterValue -> Text

-- | The field value, expressed as a String.
[$sel:stringValue:ParameterValue'] :: ParameterValue -> Text

-- | Create a value of <a>ParameterValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ParameterValue'</a>, <a>parameterValue_id</a> - The ID of
--   the parameter value.
--   
--   <a>$sel:stringValue:ParameterValue'</a>,
--   <a>parameterValue_stringValue</a> - The field value, expressed as a
--   String.
newParameterValue :: Text -> Text -> ParameterValue

-- | The ID of the parameter value.
parameterValue_id :: Lens' ParameterValue Text

-- | The field value, expressed as a String.
parameterValue_stringValue :: Lens' ParameterValue Text

-- | Contains pipeline metadata.
--   
--   <i>See:</i> <a>newPipelineDescription</a> smart constructor.
data PipelineDescription
PipelineDescription' :: Maybe [Tag] -> Maybe Text -> Text -> Text -> [Field] -> PipelineDescription

-- | A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
[$sel:tags:PipelineDescription'] :: PipelineDescription -> Maybe [Tag]

-- | Description of the pipeline.
[$sel:description:PipelineDescription'] :: PipelineDescription -> Maybe Text

-- | The pipeline identifier that was assigned by AWS Data Pipeline. This
--   is a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
[$sel:pipelineId:PipelineDescription'] :: PipelineDescription -> Text

-- | The name of the pipeline.
[$sel:name:PipelineDescription'] :: PipelineDescription -> Text

-- | A list of read-only fields that contain metadata about the pipeline:
--   @userId, @accountId, and @pipelineState.
[$sel:fields:PipelineDescription'] :: PipelineDescription -> [Field]

-- | Create a value of <a>PipelineDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PipelineDescription'</a>, <a>pipelineDescription_tags</a>
--   - A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
--   
--   <a>$sel:description:PipelineDescription'</a>,
--   <a>pipelineDescription_description</a> - Description of the pipeline.
--   
--   <a>$sel:pipelineId:PipelineDescription'</a>,
--   <a>pipelineDescription_pipelineId</a> - The pipeline identifier that
--   was assigned by AWS Data Pipeline. This is a string of the form
--   <tt>df-297EG78HU43EEXAMPLE</tt>.
--   
--   <a>$sel:name:PipelineDescription'</a>, <a>pipelineDescription_name</a>
--   - The name of the pipeline.
--   
--   <a>$sel:fields:PipelineDescription'</a>,
--   <a>pipelineDescription_fields</a> - A list of read-only fields that
--   contain metadata about the pipeline: @userId, @accountId, and
--   @pipelineState.
newPipelineDescription :: Text -> Text -> PipelineDescription

-- | A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
pipelineDescription_tags :: Lens' PipelineDescription (Maybe [Tag])

-- | Description of the pipeline.
pipelineDescription_description :: Lens' PipelineDescription (Maybe Text)

-- | The pipeline identifier that was assigned by AWS Data Pipeline. This
--   is a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
pipelineDescription_pipelineId :: Lens' PipelineDescription Text

-- | The name of the pipeline.
pipelineDescription_name :: Lens' PipelineDescription Text

-- | A list of read-only fields that contain metadata about the pipeline:
--   @userId, @accountId, and @pipelineState.
pipelineDescription_fields :: Lens' PipelineDescription [Field]

-- | Contains the name and identifier of a pipeline.
--   
--   <i>See:</i> <a>newPipelineIdName</a> smart constructor.
data PipelineIdName
PipelineIdName' :: Maybe Text -> Maybe Text -> PipelineIdName

-- | The ID of the pipeline that was assigned by AWS Data Pipeline. This is
--   a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
[$sel:id:PipelineIdName'] :: PipelineIdName -> Maybe Text

-- | The name of the pipeline.
[$sel:name:PipelineIdName'] :: PipelineIdName -> Maybe Text

-- | Create a value of <a>PipelineIdName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:PipelineIdName'</a>, <a>pipelineIdName_id</a> - The ID of
--   the pipeline that was assigned by AWS Data Pipeline. This is a string
--   of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
--   
--   <a>$sel:name:PipelineIdName'</a>, <a>pipelineIdName_name</a> - The
--   name of the pipeline.
newPipelineIdName :: PipelineIdName

-- | The ID of the pipeline that was assigned by AWS Data Pipeline. This is
--   a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
pipelineIdName_id :: Lens' PipelineIdName (Maybe Text)

-- | The name of the pipeline.
pipelineIdName_name :: Lens' PipelineIdName (Maybe Text)

-- | Contains information about a pipeline object. This can be a logical,
--   physical, or physical attempt pipeline object. The complete set of
--   components of a pipeline defines the pipeline.
--   
--   <i>See:</i> <a>newPipelineObject</a> smart constructor.
data PipelineObject
PipelineObject' :: Text -> Text -> [Field] -> PipelineObject

-- | The ID of the object.
[$sel:id:PipelineObject'] :: PipelineObject -> Text

-- | The name of the object.
[$sel:name:PipelineObject'] :: PipelineObject -> Text

-- | Key-value pairs that define the properties of the object.
[$sel:fields:PipelineObject'] :: PipelineObject -> [Field]

-- | Create a value of <a>PipelineObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:PipelineObject'</a>, <a>pipelineObject_id</a> - The ID of
--   the object.
--   
--   <a>$sel:name:PipelineObject'</a>, <a>pipelineObject_name</a> - The
--   name of the object.
--   
--   <a>$sel:fields:PipelineObject'</a>, <a>pipelineObject_fields</a> -
--   Key-value pairs that define the properties of the object.
newPipelineObject :: Text -> Text -> PipelineObject

-- | The ID of the object.
pipelineObject_id :: Lens' PipelineObject Text

-- | The name of the object.
pipelineObject_name :: Lens' PipelineObject Text

-- | Key-value pairs that define the properties of the object.
pipelineObject_fields :: Lens' PipelineObject [Field]

-- | Defines the query to run against an object.
--   
--   <i>See:</i> <a>newQuery</a> smart constructor.
data Query
Query' :: Maybe [Selector] -> Query

-- | List of selectors that define the query. An object must satisfy all of
--   the selectors to match the query.
[$sel:selectors:Query'] :: Query -> Maybe [Selector]

-- | Create a value of <a>Query</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectors:Query'</a>, <a>query_selectors</a> - List of
--   selectors that define the query. An object must satisfy all of the
--   selectors to match the query.
newQuery :: Query

-- | List of selectors that define the query. An object must satisfy all of
--   the selectors to match the query.
query_selectors :: Lens' Query (Maybe [Selector])

-- | A comparision that is used to determine whether a query should return
--   this object.
--   
--   <i>See:</i> <a>newSelector</a> smart constructor.
data Selector
Selector' :: Maybe Operator -> Maybe Text -> Selector
[$sel:operator:Selector'] :: Selector -> Maybe Operator

-- | The name of the field that the operator will be applied to. The field
--   name is the "key" portion of the field definition in the pipeline
--   definition syntax that is used by the AWS Data Pipeline API. If the
--   field is not set on the object, the condition fails.
[$sel:fieldName:Selector'] :: Selector -> Maybe Text

-- | Create a value of <a>Selector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:Selector'</a>, <a>selector_operator</a> -
--   Undocumented member.
--   
--   <a>$sel:fieldName:Selector'</a>, <a>selector_fieldName</a> - The name
--   of the field that the operator will be applied to. The field name is
--   the "key" portion of the field definition in the pipeline definition
--   syntax that is used by the AWS Data Pipeline API. If the field is not
--   set on the object, the condition fails.
newSelector :: Selector

-- | Undocumented member.
selector_operator :: Lens' Selector (Maybe Operator)

-- | The name of the field that the operator will be applied to. The field
--   name is the "key" portion of the field definition in the pipeline
--   definition syntax that is used by the AWS Data Pipeline API. If the
--   field is not set on the object, the condition fails.
selector_fieldName :: Lens' Selector (Maybe Text)

-- | Tags are key/value pairs defined by a user and associated with a
--   pipeline to control access. AWS Data Pipeline allows you to associate
--   ten tags per pipeline. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key name of a tag defined by a user. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
[$sel:key:Tag'] :: Tag -> Text

-- | The optional value portion of a tag defined by a user. For more
--   information, see <a>Controlling User Access to Pipelines</a> in the
--   <i>AWS Data Pipeline Developer Guide</i>.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key name of a tag defined
--   by a user. For more information, see <a>Controlling User Access to
--   Pipelines</a> in the <i>AWS Data Pipeline Developer Guide</i>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional value portion
--   of a tag defined by a user. For more information, see <a>Controlling
--   User Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
newTag :: Text -> Text -> Tag

-- | The key name of a tag defined by a user. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
tag_key :: Lens' Tag Text

-- | The optional value portion of a tag defined by a user. For more
--   information, see <a>Controlling User Access to Pipelines</a> in the
--   <i>AWS Data Pipeline Developer Guide</i>.
tag_value :: Lens' Tag Text

-- | Contains information about a pipeline task that is assigned to a task
--   runner.
--   
--   <i>See:</i> <a>newTaskObject</a> smart constructor.
data TaskObject
TaskObject' :: Maybe Text -> Maybe (HashMap Text PipelineObject) -> Maybe Text -> Maybe Text -> TaskObject

-- | The ID of the pipeline that provided the task.
[$sel:pipelineId:TaskObject'] :: TaskObject -> Maybe Text

-- | Connection information for the location where the task runner will
--   publish the output of the task.
[$sel:objects:TaskObject'] :: TaskObject -> Maybe (HashMap Text PipelineObject)

-- | An internal identifier for the task. This ID is passed to the
--   SetTaskStatus and ReportTaskProgress actions.
[$sel:taskId:TaskObject'] :: TaskObject -> Maybe Text

-- | The ID of the pipeline task attempt object. AWS Data Pipeline uses
--   this value to track how many times a task is attempted.
[$sel:attemptId:TaskObject'] :: TaskObject -> Maybe Text

-- | Create a value of <a>TaskObject</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:TaskObject'</a>, <a>taskObject_pipelineId</a> - The
--   ID of the pipeline that provided the task.
--   
--   <a>$sel:objects:TaskObject'</a>, <a>taskObject_objects</a> -
--   Connection information for the location where the task runner will
--   publish the output of the task.
--   
--   <a>$sel:taskId:TaskObject'</a>, <a>taskObject_taskId</a> - An internal
--   identifier for the task. This ID is passed to the SetTaskStatus and
--   ReportTaskProgress actions.
--   
--   <a>$sel:attemptId:TaskObject'</a>, <a>taskObject_attemptId</a> - The
--   ID of the pipeline task attempt object. AWS Data Pipeline uses this
--   value to track how many times a task is attempted.
newTaskObject :: TaskObject

-- | The ID of the pipeline that provided the task.
taskObject_pipelineId :: Lens' TaskObject (Maybe Text)

-- | Connection information for the location where the task runner will
--   publish the output of the task.
taskObject_objects :: Lens' TaskObject (Maybe (HashMap Text PipelineObject))

-- | An internal identifier for the task. This ID is passed to the
--   SetTaskStatus and ReportTaskProgress actions.
taskObject_taskId :: Lens' TaskObject (Maybe Text)

-- | The ID of the pipeline task attempt object. AWS Data Pipeline uses
--   this value to track how many times a task is attempted.
taskObject_attemptId :: Lens' TaskObject (Maybe Text)

-- | Defines a validation error. Validation errors prevent pipeline
--   activation. The set of validation errors that can be returned are
--   defined by AWS Data Pipeline.
--   
--   <i>See:</i> <a>newValidationError</a> smart constructor.
data ValidationError
ValidationError' :: Maybe Text -> Maybe [Text] -> ValidationError

-- | The identifier of the object that contains the validation error.
[$sel:id:ValidationError'] :: ValidationError -> Maybe Text

-- | A description of the validation error.
[$sel:errors:ValidationError'] :: ValidationError -> Maybe [Text]

-- | Create a value of <a>ValidationError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ValidationError'</a>, <a>validationError_id</a> - The
--   identifier of the object that contains the validation error.
--   
--   <a>$sel:errors:ValidationError'</a>, <a>validationError_errors</a> - A
--   description of the validation error.
newValidationError :: ValidationError

-- | The identifier of the object that contains the validation error.
validationError_id :: Lens' ValidationError (Maybe Text)

-- | A description of the validation error.
validationError_errors :: Lens' ValidationError (Maybe [Text])

-- | Defines a validation warning. Validation warnings do not prevent
--   pipeline activation. The set of validation warnings that can be
--   returned are defined by AWS Data Pipeline.
--   
--   <i>See:</i> <a>newValidationWarning</a> smart constructor.
data ValidationWarning
ValidationWarning' :: Maybe [Text] -> Maybe Text -> ValidationWarning

-- | A description of the validation warning.
[$sel:warnings:ValidationWarning'] :: ValidationWarning -> Maybe [Text]

-- | The identifier of the object that contains the validation warning.
[$sel:id:ValidationWarning'] :: ValidationWarning -> Maybe Text

-- | Create a value of <a>ValidationWarning</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:warnings:ValidationWarning'</a>,
--   <a>validationWarning_warnings</a> - A description of the validation
--   warning.
--   
--   <a>$sel:id:ValidationWarning'</a>, <a>validationWarning_id</a> - The
--   identifier of the object that contains the validation warning.
newValidationWarning :: ValidationWarning

-- | A description of the validation warning.
validationWarning_warnings :: Lens' ValidationWarning (Maybe [Text])

-- | The identifier of the object that contains the validation warning.
validationWarning_id :: Lens' ValidationWarning (Maybe Text)


-- | Task runners call <tt>SetTaskStatus</tt> to notify AWS Data Pipeline
--   that a task is completed and provide information about the final
--   status. A task runner makes this call regardless of whether the task
--   was sucessful. A task runner does not need to call
--   <tt>SetTaskStatus</tt> for tasks that are canceled by the web service
--   during a call to ReportTaskProgress.
module Network.AWS.DataPipeline.SetTaskStatus

-- | Contains the parameters for SetTaskStatus.
--   
--   <i>See:</i> <a>newSetTaskStatus</a> smart constructor.
data SetTaskStatus
SetTaskStatus' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> TaskStatus -> SetTaskStatus

-- | If an error occurred during the task, this value specifies the stack
--   trace associated with the error. This value is set on the physical
--   attempt object. It is used to display error information to the user.
--   The web service does not parse this value.
[$sel:errorStackTrace:SetTaskStatus'] :: SetTaskStatus -> Maybe Text

-- | If an error occurred during the task, this value specifies a text
--   description of the error. This value is set on the physical attempt
--   object. It is used to display error information to the user. The web
--   service does not parse this value.
[$sel:errorMessage:SetTaskStatus'] :: SetTaskStatus -> Maybe Text

-- | If an error occurred during the task, this value specifies the error
--   code. This value is set on the physical attempt object. It is used to
--   display error information to the user. It should not start with string
--   "Service_" which is reserved by the system.
[$sel:errorId:SetTaskStatus'] :: SetTaskStatus -> Maybe Text

-- | The ID of the task assigned to the task runner. This value is provided
--   in the response for PollForTask.
[$sel:taskId:SetTaskStatus'] :: SetTaskStatus -> Text

-- | If <tt>FINISHED</tt>, the task successfully completed. If
--   <tt>FAILED</tt>, the task ended unsuccessfully. Preconditions use
--   false.
[$sel:taskStatus:SetTaskStatus'] :: SetTaskStatus -> TaskStatus

-- | Create a value of <a>SetTaskStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorStackTrace:SetTaskStatus'</a>,
--   <a>setTaskStatus_errorStackTrace</a> - If an error occurred during the
--   task, this value specifies the stack trace associated with the error.
--   This value is set on the physical attempt object. It is used to
--   display error information to the user. The web service does not parse
--   this value.
--   
--   <a>$sel:errorMessage:SetTaskStatus'</a>,
--   <a>setTaskStatus_errorMessage</a> - If an error occurred during the
--   task, this value specifies a text description of the error. This value
--   is set on the physical attempt object. It is used to display error
--   information to the user. The web service does not parse this value.
--   
--   <a>$sel:errorId:SetTaskStatus'</a>, <a>setTaskStatus_errorId</a> - If
--   an error occurred during the task, this value specifies the error
--   code. This value is set on the physical attempt object. It is used to
--   display error information to the user. It should not start with string
--   "Service_" which is reserved by the system.
--   
--   <a>$sel:taskId:SetTaskStatus'</a>, <a>setTaskStatus_taskId</a> - The
--   ID of the task assigned to the task runner. This value is provided in
--   the response for PollForTask.
--   
--   <a>$sel:taskStatus:SetTaskStatus'</a>, <a>setTaskStatus_taskStatus</a>
--   - If <tt>FINISHED</tt>, the task successfully completed. If
--   <tt>FAILED</tt>, the task ended unsuccessfully. Preconditions use
--   false.
newSetTaskStatus :: Text -> TaskStatus -> SetTaskStatus

-- | If an error occurred during the task, this value specifies the stack
--   trace associated with the error. This value is set on the physical
--   attempt object. It is used to display error information to the user.
--   The web service does not parse this value.
setTaskStatus_errorStackTrace :: Lens' SetTaskStatus (Maybe Text)

-- | If an error occurred during the task, this value specifies a text
--   description of the error. This value is set on the physical attempt
--   object. It is used to display error information to the user. The web
--   service does not parse this value.
setTaskStatus_errorMessage :: Lens' SetTaskStatus (Maybe Text)

-- | If an error occurred during the task, this value specifies the error
--   code. This value is set on the physical attempt object. It is used to
--   display error information to the user. It should not start with string
--   "Service_" which is reserved by the system.
setTaskStatus_errorId :: Lens' SetTaskStatus (Maybe Text)

-- | The ID of the task assigned to the task runner. This value is provided
--   in the response for PollForTask.
setTaskStatus_taskId :: Lens' SetTaskStatus Text

-- | If <tt>FINISHED</tt>, the task successfully completed. If
--   <tt>FAILED</tt>, the task ended unsuccessfully. Preconditions use
--   false.
setTaskStatus_taskStatus :: Lens' SetTaskStatus TaskStatus

-- | Contains the output of SetTaskStatus.
--   
--   <i>See:</i> <a>newSetTaskStatusResponse</a> smart constructor.
data SetTaskStatusResponse
SetTaskStatusResponse' :: Int -> SetTaskStatusResponse

-- | The response's http status code.
[$sel:httpStatus:SetTaskStatusResponse'] :: SetTaskStatusResponse -> Int

-- | Create a value of <a>SetTaskStatusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetTaskStatusResponse'</a>,
--   <a>setTaskStatusResponse_httpStatus</a> - The response's http status
--   code.
newSetTaskStatusResponse :: Int -> SetTaskStatusResponse

-- | The response's http status code.
setTaskStatusResponse_httpStatus :: Lens' SetTaskStatusResponse Int
instance GHC.Generics.Generic Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance GHC.Show.Show Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance GHC.Read.Read Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance GHC.Classes.Eq Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance GHC.Generics.Generic Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatusResponse
instance GHC.Show.Show Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatusResponse
instance GHC.Read.Read Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatusResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.SetTaskStatus.SetTaskStatus


-- | Requests that the status of the specified physical or logical pipeline
--   objects be updated in the specified pipeline. This update might not
--   occur immediately, but is eventually consistent. The status that can
--   be set depends on the type of object (for example, DataNode or
--   Activity). You cannot perform this operation on <tt>FINISHED</tt>
--   pipelines and attempting to do so returns
--   <tt>InvalidRequestException</tt>.
module Network.AWS.DataPipeline.SetStatus

-- | Contains the parameters for SetStatus.
--   
--   <i>See:</i> <a>newSetStatus</a> smart constructor.
data SetStatus
SetStatus' :: Text -> [Text] -> Text -> SetStatus

-- | The ID of the pipeline that contains the objects.
[$sel:pipelineId:SetStatus'] :: SetStatus -> Text

-- | The IDs of the objects. The corresponding objects can be either
--   physical or components, but not a mix of both types.
[$sel:objectIds:SetStatus'] :: SetStatus -> [Text]

-- | The status to be set on all the objects specified in
--   <tt>objectIds</tt>. For components, use <tt>PAUSE</tt> or
--   <tt>RESUME</tt>. For instances, use <tt>TRY_CANCEL</tt>,
--   <tt>RERUN</tt>, or <tt>MARK_FINISHED</tt>.
[$sel:status:SetStatus'] :: SetStatus -> Text

-- | Create a value of <a>SetStatus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:SetStatus'</a>, <a>setStatus_pipelineId</a> - The
--   ID of the pipeline that contains the objects.
--   
--   <a>$sel:objectIds:SetStatus'</a>, <a>setStatus_objectIds</a> - The IDs
--   of the objects. The corresponding objects can be either physical or
--   components, but not a mix of both types.
--   
--   <a>$sel:status:SetStatus'</a>, <a>setStatus_status</a> - The status to
--   be set on all the objects specified in <tt>objectIds</tt>. For
--   components, use <tt>PAUSE</tt> or <tt>RESUME</tt>. For instances, use
--   <tt>TRY_CANCEL</tt>, <tt>RERUN</tt>, or <tt>MARK_FINISHED</tt>.
newSetStatus :: Text -> Text -> SetStatus

-- | The ID of the pipeline that contains the objects.
setStatus_pipelineId :: Lens' SetStatus Text

-- | The IDs of the objects. The corresponding objects can be either
--   physical or components, but not a mix of both types.
setStatus_objectIds :: Lens' SetStatus [Text]

-- | The status to be set on all the objects specified in
--   <tt>objectIds</tt>. For components, use <tt>PAUSE</tt> or
--   <tt>RESUME</tt>. For instances, use <tt>TRY_CANCEL</tt>,
--   <tt>RERUN</tt>, or <tt>MARK_FINISHED</tt>.
setStatus_status :: Lens' SetStatus Text

-- | <i>See:</i> <a>newSetStatusResponse</a> smart constructor.
data SetStatusResponse
SetStatusResponse' :: SetStatusResponse

-- | Create a value of <a>SetStatusResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetStatusResponse :: SetStatusResponse
instance GHC.Generics.Generic Network.AWS.DataPipeline.SetStatus.SetStatus
instance GHC.Show.Show Network.AWS.DataPipeline.SetStatus.SetStatus
instance GHC.Read.Read Network.AWS.DataPipeline.SetStatus.SetStatus
instance GHC.Classes.Eq Network.AWS.DataPipeline.SetStatus.SetStatus
instance GHC.Generics.Generic Network.AWS.DataPipeline.SetStatus.SetStatusResponse
instance GHC.Show.Show Network.AWS.DataPipeline.SetStatus.SetStatusResponse
instance GHC.Read.Read Network.AWS.DataPipeline.SetStatus.SetStatusResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.SetStatus.SetStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.SetStatus.SetStatus
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.SetStatus.SetStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.SetStatus.SetStatus
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.SetStatus.SetStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.SetStatus.SetStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.SetStatus.SetStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.SetStatus.SetStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.SetStatus.SetStatus


-- | Task runners call <tt>ReportTaskRunnerHeartbeat</tt> every 15 minutes
--   to indicate that they are operational. If the AWS Data Pipeline Task
--   Runner is launched on a resource managed by AWS Data Pipeline, the web
--   service can use this call to detect when the task runner application
--   has failed and restart a new instance.
module Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat

-- | Contains the parameters for ReportTaskRunnerHeartbeat.
--   
--   <i>See:</i> <a>newReportTaskRunnerHeartbeat</a> smart constructor.
data ReportTaskRunnerHeartbeat
ReportTaskRunnerHeartbeat' :: Maybe Text -> Maybe Text -> Text -> ReportTaskRunnerHeartbeat

-- | The public DNS name of the task runner.
[$sel:hostname:ReportTaskRunnerHeartbeat'] :: ReportTaskRunnerHeartbeat -> Maybe Text

-- | The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt>. There are no wildcard values permitted in
--   <tt>workerGroup</tt>; the string must be an exact, case-sensitive,
--   match.
[$sel:workerGroup:ReportTaskRunnerHeartbeat'] :: ReportTaskRunnerHeartbeat -> Maybe Text

-- | The ID of the task runner. This value should be unique across your AWS
--   account. In the case of AWS Data Pipeline Task Runner launched on a
--   resource managed by AWS Data Pipeline, the web service provides a
--   unique identifier when it launches the application. If you have
--   written a custom task runner, you should assign a unique identifier
--   for the task runner.
[$sel:taskrunnerId:ReportTaskRunnerHeartbeat'] :: ReportTaskRunnerHeartbeat -> Text

-- | Create a value of <a>ReportTaskRunnerHeartbeat</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:ReportTaskRunnerHeartbeat'</a>,
--   <a>reportTaskRunnerHeartbeat_hostname</a> - The public DNS name of the
--   task runner.
--   
--   <a>$sel:workerGroup:ReportTaskRunnerHeartbeat'</a>,
--   <a>reportTaskRunnerHeartbeat_workerGroup</a> - The type of task the
--   task runner is configured to accept and process. The worker group is
--   set as a field on objects in the pipeline when they are created. You
--   can only specify a single value for <tt>workerGroup</tt>. There are no
--   wildcard values permitted in <tt>workerGroup</tt>; the string must be
--   an exact, case-sensitive, match.
--   
--   <a>$sel:taskrunnerId:ReportTaskRunnerHeartbeat'</a>,
--   <a>reportTaskRunnerHeartbeat_taskrunnerId</a> - The ID of the task
--   runner. This value should be unique across your AWS account. In the
--   case of AWS Data Pipeline Task Runner launched on a resource managed
--   by AWS Data Pipeline, the web service provides a unique identifier
--   when it launches the application. If you have written a custom task
--   runner, you should assign a unique identifier for the task runner.
newReportTaskRunnerHeartbeat :: Text -> ReportTaskRunnerHeartbeat

-- | The public DNS name of the task runner.
reportTaskRunnerHeartbeat_hostname :: Lens' ReportTaskRunnerHeartbeat (Maybe Text)

-- | The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt>. There are no wildcard values permitted in
--   <tt>workerGroup</tt>; the string must be an exact, case-sensitive,
--   match.
reportTaskRunnerHeartbeat_workerGroup :: Lens' ReportTaskRunnerHeartbeat (Maybe Text)

-- | The ID of the task runner. This value should be unique across your AWS
--   account. In the case of AWS Data Pipeline Task Runner launched on a
--   resource managed by AWS Data Pipeline, the web service provides a
--   unique identifier when it launches the application. If you have
--   written a custom task runner, you should assign a unique identifier
--   for the task runner.
reportTaskRunnerHeartbeat_taskrunnerId :: Lens' ReportTaskRunnerHeartbeat Text

-- | Contains the output of ReportTaskRunnerHeartbeat.
--   
--   <i>See:</i> <a>newReportTaskRunnerHeartbeatResponse</a> smart
--   constructor.
data ReportTaskRunnerHeartbeatResponse
ReportTaskRunnerHeartbeatResponse' :: Int -> Bool -> ReportTaskRunnerHeartbeatResponse

-- | The response's http status code.
[$sel:httpStatus:ReportTaskRunnerHeartbeatResponse'] :: ReportTaskRunnerHeartbeatResponse -> Int

-- | Indicates whether the calling task runner should terminate.
[$sel:terminate:ReportTaskRunnerHeartbeatResponse'] :: ReportTaskRunnerHeartbeatResponse -> Bool

-- | Create a value of <a>ReportTaskRunnerHeartbeatResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ReportTaskRunnerHeartbeatResponse'</a>,
--   <a>reportTaskRunnerHeartbeatResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:terminate:ReportTaskRunnerHeartbeatResponse'</a>,
--   <a>reportTaskRunnerHeartbeatResponse_terminate</a> - Indicates whether
--   the calling task runner should terminate.
newReportTaskRunnerHeartbeatResponse :: Int -> Bool -> ReportTaskRunnerHeartbeatResponse

-- | The response's http status code.
reportTaskRunnerHeartbeatResponse_httpStatus :: Lens' ReportTaskRunnerHeartbeatResponse Int

-- | Indicates whether the calling task runner should terminate.
reportTaskRunnerHeartbeatResponse_terminate :: Lens' ReportTaskRunnerHeartbeatResponse Bool
instance GHC.Generics.Generic Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance GHC.Show.Show Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance GHC.Read.Read Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance GHC.Classes.Eq Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance GHC.Generics.Generic Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeatResponse
instance GHC.Show.Show Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeatResponse
instance GHC.Read.Read Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeatResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeatResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeatResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.ReportTaskRunnerHeartbeat.ReportTaskRunnerHeartbeat


-- | Task runners call <tt>ReportTaskProgress</tt> when assigned a task to
--   acknowledge that it has the task. If the web service does not receive
--   this acknowledgement within 2 minutes, it assigns the task in a
--   subsequent PollForTask call. After this initial acknowledgement, the
--   task runner only needs to report progress every 15 minutes to maintain
--   its ownership of the task. You can change this reporting time from 15
--   minutes by specifying a <tt>reportProgressTimeout</tt> field in your
--   pipeline.
--   
--   If a task runner does not report its status after 5 minutes, AWS Data
--   Pipeline assumes that the task runner is unable to process the task
--   and reassigns the task in a subsequent response to PollForTask. Task
--   runners should call <tt>ReportTaskProgress</tt> every 60 seconds.
module Network.AWS.DataPipeline.ReportTaskProgress

-- | Contains the parameters for ReportTaskProgress.
--   
--   <i>See:</i> <a>newReportTaskProgress</a> smart constructor.
data ReportTaskProgress
ReportTaskProgress' :: Maybe [Field] -> Text -> ReportTaskProgress

-- | Key-value pairs that define the properties of the
--   ReportTaskProgressInput object.
[$sel:fields:ReportTaskProgress'] :: ReportTaskProgress -> Maybe [Field]

-- | The ID of the task assigned to the task runner. This value is provided
--   in the response for PollForTask.
[$sel:taskId:ReportTaskProgress'] :: ReportTaskProgress -> Text

-- | Create a value of <a>ReportTaskProgress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fields:ReportTaskProgress'</a>,
--   <a>reportTaskProgress_fields</a> - Key-value pairs that define the
--   properties of the ReportTaskProgressInput object.
--   
--   <a>$sel:taskId:ReportTaskProgress'</a>,
--   <a>reportTaskProgress_taskId</a> - The ID of the task assigned to the
--   task runner. This value is provided in the response for PollForTask.
newReportTaskProgress :: Text -> ReportTaskProgress

-- | Key-value pairs that define the properties of the
--   ReportTaskProgressInput object.
reportTaskProgress_fields :: Lens' ReportTaskProgress (Maybe [Field])

-- | The ID of the task assigned to the task runner. This value is provided
--   in the response for PollForTask.
reportTaskProgress_taskId :: Lens' ReportTaskProgress Text

-- | Contains the output of ReportTaskProgress.
--   
--   <i>See:</i> <a>newReportTaskProgressResponse</a> smart constructor.
data ReportTaskProgressResponse
ReportTaskProgressResponse' :: Int -> Bool -> ReportTaskProgressResponse

-- | The response's http status code.
[$sel:httpStatus:ReportTaskProgressResponse'] :: ReportTaskProgressResponse -> Int

-- | If true, the calling task runner should cancel processing of the task.
--   The task runner does not need to call SetTaskStatus for canceled
--   tasks.
[$sel:canceled:ReportTaskProgressResponse'] :: ReportTaskProgressResponse -> Bool

-- | Create a value of <a>ReportTaskProgressResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ReportTaskProgressResponse'</a>,
--   <a>reportTaskProgressResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:canceled:ReportTaskProgressResponse'</a>,
--   <a>reportTaskProgressResponse_canceled</a> - If true, the calling task
--   runner should cancel processing of the task. The task runner does not
--   need to call SetTaskStatus for canceled tasks.
newReportTaskProgressResponse :: Int -> Bool -> ReportTaskProgressResponse

-- | The response's http status code.
reportTaskProgressResponse_httpStatus :: Lens' ReportTaskProgressResponse Int

-- | If true, the calling task runner should cancel processing of the task.
--   The task runner does not need to call SetTaskStatus for canceled
--   tasks.
reportTaskProgressResponse_canceled :: Lens' ReportTaskProgressResponse Bool
instance GHC.Generics.Generic Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance GHC.Show.Show Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance GHC.Read.Read Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance GHC.Classes.Eq Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance GHC.Generics.Generic Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgressResponse
instance GHC.Show.Show Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgressResponse
instance GHC.Read.Read Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgressResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgressResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgressResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.ReportTaskProgress.ReportTaskProgress


-- | Removes existing tags from the specified pipeline.
module Network.AWS.DataPipeline.RemoveTags

-- | Contains the parameters for RemoveTags.
--   
--   <i>See:</i> <a>newRemoveTags</a> smart constructor.
data RemoveTags
RemoveTags' :: Text -> [Text] -> RemoveTags

-- | The ID of the pipeline.
[$sel:pipelineId:RemoveTags'] :: RemoveTags -> Text

-- | The keys of the tags to remove.
[$sel:tagKeys:RemoveTags'] :: RemoveTags -> [Text]

-- | Create a value of <a>RemoveTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:RemoveTags'</a>, <a>removeTags_pipelineId</a> - The
--   ID of the pipeline.
--   
--   <a>$sel:tagKeys:RemoveTags'</a>, <a>removeTags_tagKeys</a> - The keys
--   of the tags to remove.
newRemoveTags :: Text -> RemoveTags

-- | The ID of the pipeline.
removeTags_pipelineId :: Lens' RemoveTags Text

-- | The keys of the tags to remove.
removeTags_tagKeys :: Lens' RemoveTags [Text]

-- | Contains the output of RemoveTags.
--   
--   <i>See:</i> <a>newRemoveTagsResponse</a> smart constructor.
data RemoveTagsResponse
RemoveTagsResponse' :: Int -> RemoveTagsResponse

-- | The response's http status code.
[$sel:httpStatus:RemoveTagsResponse'] :: RemoveTagsResponse -> Int

-- | Create a value of <a>RemoveTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveTagsResponse'</a>,
--   <a>removeTagsResponse_httpStatus</a> - The response's http status
--   code.
newRemoveTagsResponse :: Int -> RemoveTagsResponse

-- | The response's http status code.
removeTagsResponse_httpStatus :: Lens' RemoveTagsResponse Int
instance GHC.Generics.Generic Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance GHC.Show.Show Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance GHC.Read.Read Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance GHC.Classes.Eq Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance GHC.Generics.Generic Network.AWS.DataPipeline.RemoveTags.RemoveTagsResponse
instance GHC.Show.Show Network.AWS.DataPipeline.RemoveTags.RemoveTagsResponse
instance GHC.Read.Read Network.AWS.DataPipeline.RemoveTags.RemoveTagsResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.RemoveTags.RemoveTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.RemoveTags.RemoveTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.RemoveTags.RemoveTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.RemoveTags.RemoveTags


-- | Queries the specified pipeline for the names of objects that match the
--   specified set of conditions.
--   
--   This operation returns paginated results.
module Network.AWS.DataPipeline.QueryObjects

-- | Contains the parameters for QueryObjects.
--   
--   <i>See:</i> <a>newQueryObjects</a> smart constructor.
data QueryObjects
QueryObjects' :: Maybe Query -> Maybe Int -> Maybe Text -> Text -> Text -> QueryObjects

-- | The query that defines the objects to be returned. The <tt>Query</tt>
--   object can contain a maximum of ten selectors. The conditions in the
--   query are limited to top-level String fields in the object. These
--   filters can be applied to components, instances, and attempts.
[$sel:query:QueryObjects'] :: QueryObjects -> Maybe Query

-- | The maximum number of object names that <tt>QueryObjects</tt> will
--   return in a single call. The default value is 100.
[$sel:limit:QueryObjects'] :: QueryObjects -> Maybe Int

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>QueryObjects</tt> with the marker value from the
--   previous call to retrieve the next set of results.
[$sel:marker:QueryObjects'] :: QueryObjects -> Maybe Text

-- | The ID of the pipeline.
[$sel:pipelineId:QueryObjects'] :: QueryObjects -> Text

-- | Indicates whether the query applies to components or instances. The
--   possible values are: <tt>COMPONENT</tt>, <tt>INSTANCE</tt>, and
--   <tt>ATTEMPT</tt>.
[$sel:sphere:QueryObjects'] :: QueryObjects -> Text

-- | Create a value of <a>QueryObjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:query:QueryObjects'</a>, <a>queryObjects_query</a> - The query
--   that defines the objects to be returned. The <tt>Query</tt> object can
--   contain a maximum of ten selectors. The conditions in the query are
--   limited to top-level String fields in the object. These filters can be
--   applied to components, instances, and attempts.
--   
--   <a>$sel:limit:QueryObjects'</a>, <a>queryObjects_limit</a> - The
--   maximum number of object names that <tt>QueryObjects</tt> will return
--   in a single call. The default value is 100.
--   
--   <a>$sel:marker:QueryObjects'</a>, <a>queryObjects_marker</a> - The
--   starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>QueryObjects</tt> with the marker value from the
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:pipelineId:QueryObjects'</a>, <a>queryObjects_pipelineId</a> -
--   The ID of the pipeline.
--   
--   <a>$sel:sphere:QueryObjects'</a>, <a>queryObjects_sphere</a> -
--   Indicates whether the query applies to components or instances. The
--   possible values are: <tt>COMPONENT</tt>, <tt>INSTANCE</tt>, and
--   <tt>ATTEMPT</tt>.
newQueryObjects :: Text -> Text -> QueryObjects

-- | The query that defines the objects to be returned. The <tt>Query</tt>
--   object can contain a maximum of ten selectors. The conditions in the
--   query are limited to top-level String fields in the object. These
--   filters can be applied to components, instances, and attempts.
queryObjects_query :: Lens' QueryObjects (Maybe Query)

-- | The maximum number of object names that <tt>QueryObjects</tt> will
--   return in a single call. The default value is 100.
queryObjects_limit :: Lens' QueryObjects (Maybe Int)

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>QueryObjects</tt> with the marker value from the
--   previous call to retrieve the next set of results.
queryObjects_marker :: Lens' QueryObjects (Maybe Text)

-- | The ID of the pipeline.
queryObjects_pipelineId :: Lens' QueryObjects Text

-- | Indicates whether the query applies to components or instances. The
--   possible values are: <tt>COMPONENT</tt>, <tt>INSTANCE</tt>, and
--   <tt>ATTEMPT</tt>.
queryObjects_sphere :: Lens' QueryObjects Text

-- | Contains the output of QueryObjects.
--   
--   <i>See:</i> <a>newQueryObjectsResponse</a> smart constructor.
data QueryObjectsResponse
QueryObjectsResponse' :: Maybe [Text] -> Maybe Bool -> Maybe Text -> Int -> QueryObjectsResponse

-- | The identifiers that match the query selectors.
[$sel:ids:QueryObjectsResponse'] :: QueryObjectsResponse -> Maybe [Text]

-- | Indicates whether there are more results that can be obtained by a
--   subsequent call.
[$sel:hasMoreResults:QueryObjectsResponse'] :: QueryObjectsResponse -> Maybe Bool

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>QueryObjects</tt> again with this marker value.
--   If the value is null, there are no more results.
[$sel:marker:QueryObjectsResponse'] :: QueryObjectsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:QueryObjectsResponse'] :: QueryObjectsResponse -> Int

-- | Create a value of <a>QueryObjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:QueryObjectsResponse'</a>, <a>queryObjectsResponse_ids</a>
--   - The identifiers that match the query selectors.
--   
--   <a>$sel:hasMoreResults:QueryObjectsResponse'</a>,
--   <a>queryObjectsResponse_hasMoreResults</a> - Indicates whether there
--   are more results that can be obtained by a subsequent call.
--   
--   <a>$sel:marker:QueryObjects'</a>, <a>queryObjectsResponse_marker</a> -
--   The starting point for the next page of results. To view the next page
--   of results, call <tt>QueryObjects</tt> again with this marker value.
--   If the value is null, there are no more results.
--   
--   <a>$sel:httpStatus:QueryObjectsResponse'</a>,
--   <a>queryObjectsResponse_httpStatus</a> - The response's http status
--   code.
newQueryObjectsResponse :: Int -> QueryObjectsResponse

-- | The identifiers that match the query selectors.
queryObjectsResponse_ids :: Lens' QueryObjectsResponse (Maybe [Text])

-- | Indicates whether there are more results that can be obtained by a
--   subsequent call.
queryObjectsResponse_hasMoreResults :: Lens' QueryObjectsResponse (Maybe Bool)

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>QueryObjects</tt> again with this marker value.
--   If the value is null, there are no more results.
queryObjectsResponse_marker :: Lens' QueryObjectsResponse (Maybe Text)

-- | The response's http status code.
queryObjectsResponse_httpStatus :: Lens' QueryObjectsResponse Int
instance GHC.Generics.Generic Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance GHC.Show.Show Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance GHC.Read.Read Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance GHC.Classes.Eq Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance GHC.Generics.Generic Network.AWS.DataPipeline.QueryObjects.QueryObjectsResponse
instance GHC.Show.Show Network.AWS.DataPipeline.QueryObjects.QueryObjectsResponse
instance GHC.Read.Read Network.AWS.DataPipeline.QueryObjects.QueryObjectsResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.QueryObjects.QueryObjectsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.QueryObjects.QueryObjectsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.QueryObjects.QueryObjects
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.QueryObjects.QueryObjects


-- | Adds tasks, schedules, and preconditions to the specified pipeline.
--   You can use <tt>PutPipelineDefinition</tt> to populate a new pipeline.
--   
--   <tt>PutPipelineDefinition</tt> also validates the configuration as it
--   adds it to the pipeline. Changes to the pipeline are saved unless one
--   of the following three validation errors exists in the pipeline.
--   
--   <ol>
--   <li>An object is missing a name or identifier field.</li>
--   <li>A string or reference field is empty.</li>
--   <li>The number of objects in the pipeline exceeds the maximum allowed
--   objects.</li>
--   <li>The pipeline is in a FINISHED state.</li>
--   </ol>
--   
--   Pipeline object definitions are passed to the
--   <tt>PutPipelineDefinition</tt> action and returned by the
--   GetPipelineDefinition action.
module Network.AWS.DataPipeline.PutPipelineDefinition

-- | Contains the parameters for PutPipelineDefinition.
--   
--   <i>See:</i> <a>newPutPipelineDefinition</a> smart constructor.
data PutPipelineDefinition
PutPipelineDefinition' :: Maybe [ParameterValue] -> Maybe [ParameterObject] -> Text -> [PipelineObject] -> PutPipelineDefinition

-- | The parameter values used with the pipeline.
[$sel:parameterValues:PutPipelineDefinition'] :: PutPipelineDefinition -> Maybe [ParameterValue]

-- | The parameter objects used with the pipeline.
[$sel:parameterObjects:PutPipelineDefinition'] :: PutPipelineDefinition -> Maybe [ParameterObject]

-- | The ID of the pipeline.
[$sel:pipelineId:PutPipelineDefinition'] :: PutPipelineDefinition -> Text

-- | The objects that define the pipeline. These objects overwrite the
--   existing pipeline definition.
[$sel:pipelineObjects:PutPipelineDefinition'] :: PutPipelineDefinition -> [PipelineObject]

-- | Create a value of <a>PutPipelineDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValues:PutPipelineDefinition'</a>,
--   <a>putPipelineDefinition_parameterValues</a> - The parameter values
--   used with the pipeline.
--   
--   <a>$sel:parameterObjects:PutPipelineDefinition'</a>,
--   <a>putPipelineDefinition_parameterObjects</a> - The parameter objects
--   used with the pipeline.
--   
--   <a>$sel:pipelineId:PutPipelineDefinition'</a>,
--   <a>putPipelineDefinition_pipelineId</a> - The ID of the pipeline.
--   
--   <a>$sel:pipelineObjects:PutPipelineDefinition'</a>,
--   <a>putPipelineDefinition_pipelineObjects</a> - The objects that define
--   the pipeline. These objects overwrite the existing pipeline
--   definition.
newPutPipelineDefinition :: Text -> PutPipelineDefinition

-- | The parameter values used with the pipeline.
putPipelineDefinition_parameterValues :: Lens' PutPipelineDefinition (Maybe [ParameterValue])

-- | The parameter objects used with the pipeline.
putPipelineDefinition_parameterObjects :: Lens' PutPipelineDefinition (Maybe [ParameterObject])

-- | The ID of the pipeline.
putPipelineDefinition_pipelineId :: Lens' PutPipelineDefinition Text

-- | The objects that define the pipeline. These objects overwrite the
--   existing pipeline definition.
putPipelineDefinition_pipelineObjects :: Lens' PutPipelineDefinition [PipelineObject]

-- | Contains the output of PutPipelineDefinition.
--   
--   <i>See:</i> <a>newPutPipelineDefinitionResponse</a> smart constructor.
data PutPipelineDefinitionResponse
PutPipelineDefinitionResponse' :: Maybe [ValidationError] -> Maybe [ValidationWarning] -> Int -> Bool -> PutPipelineDefinitionResponse

-- | The validation errors that are associated with the objects defined in
--   <tt>pipelineObjects</tt>.
[$sel:validationErrors:PutPipelineDefinitionResponse'] :: PutPipelineDefinitionResponse -> Maybe [ValidationError]

-- | The validation warnings that are associated with the objects defined
--   in <tt>pipelineObjects</tt>.
[$sel:validationWarnings:PutPipelineDefinitionResponse'] :: PutPipelineDefinitionResponse -> Maybe [ValidationWarning]

-- | The response's http status code.
[$sel:httpStatus:PutPipelineDefinitionResponse'] :: PutPipelineDefinitionResponse -> Int

-- | Indicates whether there were validation errors, and the pipeline
--   definition is stored but cannot be activated until you correct the
--   pipeline and call <tt>PutPipelineDefinition</tt> to commit the
--   corrected pipeline.
[$sel:errored:PutPipelineDefinitionResponse'] :: PutPipelineDefinitionResponse -> Bool

-- | Create a value of <a>PutPipelineDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validationErrors:PutPipelineDefinitionResponse'</a>,
--   <a>putPipelineDefinitionResponse_validationErrors</a> - The validation
--   errors that are associated with the objects defined in
--   <tt>pipelineObjects</tt>.
--   
--   <a>$sel:validationWarnings:PutPipelineDefinitionResponse'</a>,
--   <a>putPipelineDefinitionResponse_validationWarnings</a> - The
--   validation warnings that are associated with the objects defined in
--   <tt>pipelineObjects</tt>.
--   
--   <a>$sel:httpStatus:PutPipelineDefinitionResponse'</a>,
--   <a>putPipelineDefinitionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:errored:PutPipelineDefinitionResponse'</a>,
--   <a>putPipelineDefinitionResponse_errored</a> - Indicates whether there
--   were validation errors, and the pipeline definition is stored but
--   cannot be activated until you correct the pipeline and call
--   <tt>PutPipelineDefinition</tt> to commit the corrected pipeline.
newPutPipelineDefinitionResponse :: Int -> Bool -> PutPipelineDefinitionResponse

-- | The validation errors that are associated with the objects defined in
--   <tt>pipelineObjects</tt>.
putPipelineDefinitionResponse_validationErrors :: Lens' PutPipelineDefinitionResponse (Maybe [ValidationError])

-- | The validation warnings that are associated with the objects defined
--   in <tt>pipelineObjects</tt>.
putPipelineDefinitionResponse_validationWarnings :: Lens' PutPipelineDefinitionResponse (Maybe [ValidationWarning])

-- | The response's http status code.
putPipelineDefinitionResponse_httpStatus :: Lens' PutPipelineDefinitionResponse Int

-- | Indicates whether there were validation errors, and the pipeline
--   definition is stored but cannot be activated until you correct the
--   pipeline and call <tt>PutPipelineDefinition</tt> to commit the
--   corrected pipeline.
putPipelineDefinitionResponse_errored :: Lens' PutPipelineDefinitionResponse Bool
instance GHC.Generics.Generic Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance GHC.Show.Show Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance GHC.Read.Read Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance GHC.Classes.Eq Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance GHC.Generics.Generic Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinitionResponse
instance GHC.Show.Show Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinitionResponse
instance GHC.Read.Read Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinitionResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.PutPipelineDefinition.PutPipelineDefinition


-- | Task runners call <tt>PollForTask</tt> to receive a task to perform
--   from AWS Data Pipeline. The task runner specifies which tasks it can
--   perform by setting a value for the <tt>workerGroup</tt> parameter. The
--   task returned can come from any of the pipelines that match the
--   <tt>workerGroup</tt> value passed in by the task runner and that was
--   launched using the IAM user credentials specified by the task runner.
--   
--   If tasks are ready in the work queue, <tt>PollForTask</tt> returns a
--   response immediately. If no tasks are available in the queue,
--   <tt>PollForTask</tt> uses long-polling and holds on to a poll
--   connection for up to a 90 seconds, during which time the first newly
--   scheduled task is handed to the task runner. To accomodate this, set
--   the socket timeout in your task runner to 90 seconds. The task runner
--   should not call <tt>PollForTask</tt> again on the same
--   <tt>workerGroup</tt> until it receives a response, and this can take
--   up to 90 seconds.
module Network.AWS.DataPipeline.PollForTask

-- | Contains the parameters for PollForTask.
--   
--   <i>See:</i> <a>newPollForTask</a> smart constructor.
data PollForTask
PollForTask' :: Maybe Text -> Maybe InstanceIdentity -> Text -> PollForTask

-- | The public DNS name of the calling task runner.
[$sel:hostname:PollForTask'] :: PollForTask -> Maybe Text

-- | Identity information for the EC2 instance that is hosting the task
--   runner. You can get this value from the instance using
--   <tt>http://169.254.169.254/latest/meta-data/instance-id</tt>. For more
--   information, see <a>Instance Metadata</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide.</i> Passing in this value proves that your
--   task runner is running on an EC2 instance, and ensures the proper AWS
--   Data Pipeline service charges are applied to your pipeline.
[$sel:instanceIdentity:PollForTask'] :: PollForTask -> Maybe InstanceIdentity

-- | The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt> in the call to <tt>PollForTask</tt>. There are no
--   wildcard values permitted in <tt>workerGroup</tt>; the string must be
--   an exact, case-sensitive, match.
[$sel:workerGroup:PollForTask'] :: PollForTask -> Text

-- | Create a value of <a>PollForTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:PollForTask'</a>, <a>pollForTask_hostname</a> - The
--   public DNS name of the calling task runner.
--   
--   <a>$sel:instanceIdentity:PollForTask'</a>,
--   <a>pollForTask_instanceIdentity</a> - Identity information for the EC2
--   instance that is hosting the task runner. You can get this value from
--   the instance using
--   <tt>http://169.254.169.254/latest/meta-data/instance-id</tt>. For more
--   information, see <a>Instance Metadata</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide.</i> Passing in this value proves that your
--   task runner is running on an EC2 instance, and ensures the proper AWS
--   Data Pipeline service charges are applied to your pipeline.
--   
--   <a>$sel:workerGroup:PollForTask'</a>, <a>pollForTask_workerGroup</a> -
--   The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt> in the call to <tt>PollForTask</tt>. There are no
--   wildcard values permitted in <tt>workerGroup</tt>; the string must be
--   an exact, case-sensitive, match.
newPollForTask :: Text -> PollForTask

-- | The public DNS name of the calling task runner.
pollForTask_hostname :: Lens' PollForTask (Maybe Text)

-- | Identity information for the EC2 instance that is hosting the task
--   runner. You can get this value from the instance using
--   <tt>http://169.254.169.254/latest/meta-data/instance-id</tt>. For more
--   information, see <a>Instance Metadata</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide.</i> Passing in this value proves that your
--   task runner is running on an EC2 instance, and ensures the proper AWS
--   Data Pipeline service charges are applied to your pipeline.
pollForTask_instanceIdentity :: Lens' PollForTask (Maybe InstanceIdentity)

-- | The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt> in the call to <tt>PollForTask</tt>. There are no
--   wildcard values permitted in <tt>workerGroup</tt>; the string must be
--   an exact, case-sensitive, match.
pollForTask_workerGroup :: Lens' PollForTask Text

-- | Contains the output of PollForTask.
--   
--   <i>See:</i> <a>newPollForTaskResponse</a> smart constructor.
data PollForTaskResponse
PollForTaskResponse' :: Maybe TaskObject -> Int -> PollForTaskResponse

-- | The information needed to complete the task that is being assigned to
--   the task runner. One of the fields returned in this object is
--   <tt>taskId</tt>, which contains an identifier for the task being
--   assigned. The calling task runner uses <tt>taskId</tt> in subsequent
--   calls to ReportTaskProgress and SetTaskStatus.
[$sel:taskObject:PollForTaskResponse'] :: PollForTaskResponse -> Maybe TaskObject

-- | The response's http status code.
[$sel:httpStatus:PollForTaskResponse'] :: PollForTaskResponse -> Int

-- | Create a value of <a>PollForTaskResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskObject:PollForTaskResponse'</a>,
--   <a>pollForTaskResponse_taskObject</a> - The information needed to
--   complete the task that is being assigned to the task runner. One of
--   the fields returned in this object is <tt>taskId</tt>, which contains
--   an identifier for the task being assigned. The calling task runner
--   uses <tt>taskId</tt> in subsequent calls to ReportTaskProgress and
--   SetTaskStatus.
--   
--   <a>$sel:httpStatus:PollForTaskResponse'</a>,
--   <a>pollForTaskResponse_httpStatus</a> - The response's http status
--   code.
newPollForTaskResponse :: Int -> PollForTaskResponse

-- | The information needed to complete the task that is being assigned to
--   the task runner. One of the fields returned in this object is
--   <tt>taskId</tt>, which contains an identifier for the task being
--   assigned. The calling task runner uses <tt>taskId</tt> in subsequent
--   calls to ReportTaskProgress and SetTaskStatus.
pollForTaskResponse_taskObject :: Lens' PollForTaskResponse (Maybe TaskObject)

-- | The response's http status code.
pollForTaskResponse_httpStatus :: Lens' PollForTaskResponse Int
instance GHC.Generics.Generic Network.AWS.DataPipeline.PollForTask.PollForTask
instance GHC.Show.Show Network.AWS.DataPipeline.PollForTask.PollForTask
instance GHC.Read.Read Network.AWS.DataPipeline.PollForTask.PollForTask
instance GHC.Classes.Eq Network.AWS.DataPipeline.PollForTask.PollForTask
instance GHC.Generics.Generic Network.AWS.DataPipeline.PollForTask.PollForTaskResponse
instance GHC.Show.Show Network.AWS.DataPipeline.PollForTask.PollForTaskResponse
instance GHC.Read.Read Network.AWS.DataPipeline.PollForTask.PollForTaskResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.PollForTask.PollForTaskResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.PollForTask.PollForTask
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.PollForTask.PollForTaskResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.PollForTask.PollForTask
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.PollForTask.PollForTask
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.PollForTask.PollForTask
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.PollForTask.PollForTask
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.PollForTask.PollForTask
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.PollForTask.PollForTask


-- | Lists the pipeline identifiers for all active pipelines that you have
--   permission to access.
--   
--   This operation returns paginated results.
module Network.AWS.DataPipeline.ListPipelines

-- | Contains the parameters for ListPipelines.
--   
--   <i>See:</i> <a>newListPipelines</a> smart constructor.
data ListPipelines
ListPipelines' :: Maybe Text -> ListPipelines

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>ListPipelines</tt> with the marker value from the
--   previous call to retrieve the next set of results.
[$sel:marker:ListPipelines'] :: ListPipelines -> Maybe Text

-- | Create a value of <a>ListPipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListPipelines'</a>, <a>listPipelines_marker</a> - The
--   starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>ListPipelines</tt> with the marker value from the
--   previous call to retrieve the next set of results.
newListPipelines :: ListPipelines

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>ListPipelines</tt> with the marker value from the
--   previous call to retrieve the next set of results.
listPipelines_marker :: Lens' ListPipelines (Maybe Text)

-- | Contains the output of ListPipelines.
--   
--   <i>See:</i> <a>newListPipelinesResponse</a> smart constructor.
data ListPipelinesResponse
ListPipelinesResponse' :: Maybe Bool -> Maybe Text -> Int -> [PipelineIdName] -> ListPipelinesResponse

-- | Indicates whether there are more results that can be obtained by a
--   subsequent call.
[$sel:hasMoreResults:ListPipelinesResponse'] :: ListPipelinesResponse -> Maybe Bool

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>ListPipelinesOutput</tt> again with this marker
--   value. If the value is null, there are no more results.
[$sel:marker:ListPipelinesResponse'] :: ListPipelinesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPipelinesResponse'] :: ListPipelinesResponse -> Int

-- | The pipeline identifiers. If you require additional information about
--   the pipelines, you can use these identifiers to call DescribePipelines
--   and GetPipelineDefinition.
[$sel:pipelineIdList:ListPipelinesResponse'] :: ListPipelinesResponse -> [PipelineIdName]

-- | Create a value of <a>ListPipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hasMoreResults:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_hasMoreResults</a> - Indicates whether there
--   are more results that can be obtained by a subsequent call.
--   
--   <a>$sel:marker:ListPipelines'</a>, <a>listPipelinesResponse_marker</a>
--   - The starting point for the next page of results. To view the next
--   page of results, call <tt>ListPipelinesOutput</tt> again with this
--   marker value. If the value is null, there are no more results.
--   
--   <a>$sel:httpStatus:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:pipelineIdList:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_pipelineIdList</a> - The pipeline
--   identifiers. If you require additional information about the
--   pipelines, you can use these identifiers to call DescribePipelines and
--   GetPipelineDefinition.
newListPipelinesResponse :: Int -> ListPipelinesResponse

-- | Indicates whether there are more results that can be obtained by a
--   subsequent call.
listPipelinesResponse_hasMoreResults :: Lens' ListPipelinesResponse (Maybe Bool)

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>ListPipelinesOutput</tt> again with this marker
--   value. If the value is null, there are no more results.
listPipelinesResponse_marker :: Lens' ListPipelinesResponse (Maybe Text)

-- | The response's http status code.
listPipelinesResponse_httpStatus :: Lens' ListPipelinesResponse Int

-- | The pipeline identifiers. If you require additional information about
--   the pipelines, you can use these identifiers to call DescribePipelines
--   and GetPipelineDefinition.
listPipelinesResponse_pipelineIdList :: Lens' ListPipelinesResponse [PipelineIdName]
instance GHC.Generics.Generic Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance GHC.Show.Show Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance GHC.Read.Read Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance GHC.Classes.Eq Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance GHC.Generics.Generic Network.AWS.DataPipeline.ListPipelines.ListPipelinesResponse
instance GHC.Show.Show Network.AWS.DataPipeline.ListPipelines.ListPipelinesResponse
instance GHC.Read.Read Network.AWS.DataPipeline.ListPipelines.ListPipelinesResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.ListPipelines.ListPipelinesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ListPipelines.ListPipelinesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.ListPipelines.ListPipelines
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.ListPipelines.ListPipelines


-- | Gets the definition of the specified pipeline. You can call
--   <tt>GetPipelineDefinition</tt> to retrieve the pipeline definition
--   that you provided using PutPipelineDefinition.
module Network.AWS.DataPipeline.GetPipelineDefinition

-- | Contains the parameters for GetPipelineDefinition.
--   
--   <i>See:</i> <a>newGetPipelineDefinition</a> smart constructor.
data GetPipelineDefinition
GetPipelineDefinition' :: Maybe Text -> Text -> GetPipelineDefinition

-- | The version of the pipeline definition to retrieve. Set this parameter
--   to <tt>latest</tt> (default) to use the last definition saved to the
--   pipeline or <tt>active</tt> to use the last definition that was
--   activated.
[$sel:version:GetPipelineDefinition'] :: GetPipelineDefinition -> Maybe Text

-- | The ID of the pipeline.
[$sel:pipelineId:GetPipelineDefinition'] :: GetPipelineDefinition -> Text

-- | Create a value of <a>GetPipelineDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:GetPipelineDefinition'</a>,
--   <a>getPipelineDefinition_version</a> - The version of the pipeline
--   definition to retrieve. Set this parameter to <tt>latest</tt>
--   (default) to use the last definition saved to the pipeline or
--   <tt>active</tt> to use the last definition that was activated.
--   
--   <a>$sel:pipelineId:GetPipelineDefinition'</a>,
--   <a>getPipelineDefinition_pipelineId</a> - The ID of the pipeline.
newGetPipelineDefinition :: Text -> GetPipelineDefinition

-- | The version of the pipeline definition to retrieve. Set this parameter
--   to <tt>latest</tt> (default) to use the last definition saved to the
--   pipeline or <tt>active</tt> to use the last definition that was
--   activated.
getPipelineDefinition_version :: Lens' GetPipelineDefinition (Maybe Text)

-- | The ID of the pipeline.
getPipelineDefinition_pipelineId :: Lens' GetPipelineDefinition Text

-- | Contains the output of GetPipelineDefinition.
--   
--   <i>See:</i> <a>newGetPipelineDefinitionResponse</a> smart constructor.
data GetPipelineDefinitionResponse
GetPipelineDefinitionResponse' :: Maybe [ParameterValue] -> Maybe [ParameterObject] -> Maybe [PipelineObject] -> Int -> GetPipelineDefinitionResponse

-- | The parameter values used in the pipeline definition.
[$sel:parameterValues:GetPipelineDefinitionResponse'] :: GetPipelineDefinitionResponse -> Maybe [ParameterValue]

-- | The parameter objects used in the pipeline definition.
[$sel:parameterObjects:GetPipelineDefinitionResponse'] :: GetPipelineDefinitionResponse -> Maybe [ParameterObject]

-- | The objects defined in the pipeline.
[$sel:pipelineObjects:GetPipelineDefinitionResponse'] :: GetPipelineDefinitionResponse -> Maybe [PipelineObject]

-- | The response's http status code.
[$sel:httpStatus:GetPipelineDefinitionResponse'] :: GetPipelineDefinitionResponse -> Int

-- | Create a value of <a>GetPipelineDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValues:GetPipelineDefinitionResponse'</a>,
--   <a>getPipelineDefinitionResponse_parameterValues</a> - The parameter
--   values used in the pipeline definition.
--   
--   <a>$sel:parameterObjects:GetPipelineDefinitionResponse'</a>,
--   <a>getPipelineDefinitionResponse_parameterObjects</a> - The parameter
--   objects used in the pipeline definition.
--   
--   <a>$sel:pipelineObjects:GetPipelineDefinitionResponse'</a>,
--   <a>getPipelineDefinitionResponse_pipelineObjects</a> - The objects
--   defined in the pipeline.
--   
--   <a>$sel:httpStatus:GetPipelineDefinitionResponse'</a>,
--   <a>getPipelineDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetPipelineDefinitionResponse :: Int -> GetPipelineDefinitionResponse

-- | The parameter values used in the pipeline definition.
getPipelineDefinitionResponse_parameterValues :: Lens' GetPipelineDefinitionResponse (Maybe [ParameterValue])

-- | The parameter objects used in the pipeline definition.
getPipelineDefinitionResponse_parameterObjects :: Lens' GetPipelineDefinitionResponse (Maybe [ParameterObject])

-- | The objects defined in the pipeline.
getPipelineDefinitionResponse_pipelineObjects :: Lens' GetPipelineDefinitionResponse (Maybe [PipelineObject])

-- | The response's http status code.
getPipelineDefinitionResponse_httpStatus :: Lens' GetPipelineDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance GHC.Show.Show Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance GHC.Read.Read Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance GHC.Classes.Eq Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance GHC.Generics.Generic Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinitionResponse
instance GHC.Show.Show Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinitionResponse
instance GHC.Read.Read Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinitionResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.GetPipelineDefinition.GetPipelineDefinition


-- | Task runners call <tt>EvaluateExpression</tt> to evaluate a string in
--   the context of the specified object. For example, a task runner can
--   evaluate SQL queries stored in Amazon S3.
module Network.AWS.DataPipeline.EvaluateExpression

-- | Contains the parameters for EvaluateExpression.
--   
--   <i>See:</i> <a>newEvaluateExpression</a> smart constructor.
data EvaluateExpression
EvaluateExpression' :: Text -> Text -> Text -> EvaluateExpression

-- | The ID of the pipeline.
[$sel:pipelineId:EvaluateExpression'] :: EvaluateExpression -> Text

-- | The ID of the object.
[$sel:objectId:EvaluateExpression'] :: EvaluateExpression -> Text

-- | The expression to evaluate.
[$sel:expression:EvaluateExpression'] :: EvaluateExpression -> Text

-- | Create a value of <a>EvaluateExpression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:EvaluateExpression'</a>,
--   <a>evaluateExpression_pipelineId</a> - The ID of the pipeline.
--   
--   <a>$sel:objectId:EvaluateExpression'</a>,
--   <a>evaluateExpression_objectId</a> - The ID of the object.
--   
--   <a>$sel:expression:EvaluateExpression'</a>,
--   <a>evaluateExpression_expression</a> - The expression to evaluate.
newEvaluateExpression :: Text -> Text -> Text -> EvaluateExpression

-- | The ID of the pipeline.
evaluateExpression_pipelineId :: Lens' EvaluateExpression Text

-- | The ID of the object.
evaluateExpression_objectId :: Lens' EvaluateExpression Text

-- | The expression to evaluate.
evaluateExpression_expression :: Lens' EvaluateExpression Text

-- | Contains the output of EvaluateExpression.
--   
--   <i>See:</i> <a>newEvaluateExpressionResponse</a> smart constructor.
data EvaluateExpressionResponse
EvaluateExpressionResponse' :: Int -> Text -> EvaluateExpressionResponse

-- | The response's http status code.
[$sel:httpStatus:EvaluateExpressionResponse'] :: EvaluateExpressionResponse -> Int

-- | The evaluated expression.
[$sel:evaluatedExpression:EvaluateExpressionResponse'] :: EvaluateExpressionResponse -> Text

-- | Create a value of <a>EvaluateExpressionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EvaluateExpressionResponse'</a>,
--   <a>evaluateExpressionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:evaluatedExpression:EvaluateExpressionResponse'</a>,
--   <a>evaluateExpressionResponse_evaluatedExpression</a> - The evaluated
--   expression.
newEvaluateExpressionResponse :: Int -> Text -> EvaluateExpressionResponse

-- | The response's http status code.
evaluateExpressionResponse_httpStatus :: Lens' EvaluateExpressionResponse Int

-- | The evaluated expression.
evaluateExpressionResponse_evaluatedExpression :: Lens' EvaluateExpressionResponse Text
instance GHC.Generics.Generic Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance GHC.Show.Show Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance GHC.Read.Read Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance GHC.Classes.Eq Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance GHC.Generics.Generic Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpressionResponse
instance GHC.Show.Show Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpressionResponse
instance GHC.Read.Read Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpressionResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpressionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpressionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.EvaluateExpression.EvaluateExpression


-- | Retrieves metadata about one or more pipelines. The information
--   retrieved includes the name of the pipeline, the pipeline identifier,
--   its current state, and the user account that owns the pipeline. Using
--   account credentials, you can retrieve metadata about pipelines that
--   you or your IAM users have created. If you are using an IAM user
--   account, you can retrieve metadata about only those pipelines for
--   which you have read permissions.
--   
--   To retrieve the full pipeline definition instead of metadata about the
--   pipeline, call GetPipelineDefinition.
module Network.AWS.DataPipeline.DescribePipelines

-- | Contains the parameters for DescribePipelines.
--   
--   <i>See:</i> <a>newDescribePipelines</a> smart constructor.
data DescribePipelines
DescribePipelines' :: [Text] -> DescribePipelines

-- | The IDs of the pipelines to describe. You can pass as many as 25
--   identifiers in a single call. To obtain pipeline IDs, call
--   ListPipelines.
[$sel:pipelineIds:DescribePipelines'] :: DescribePipelines -> [Text]

-- | Create a value of <a>DescribePipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineIds:DescribePipelines'</a>,
--   <a>describePipelines_pipelineIds</a> - The IDs of the pipelines to
--   describe. You can pass as many as 25 identifiers in a single call. To
--   obtain pipeline IDs, call ListPipelines.
newDescribePipelines :: DescribePipelines

-- | The IDs of the pipelines to describe. You can pass as many as 25
--   identifiers in a single call. To obtain pipeline IDs, call
--   ListPipelines.
describePipelines_pipelineIds :: Lens' DescribePipelines [Text]

-- | Contains the output of DescribePipelines.
--   
--   <i>See:</i> <a>newDescribePipelinesResponse</a> smart constructor.
data DescribePipelinesResponse
DescribePipelinesResponse' :: Int -> [PipelineDescription] -> DescribePipelinesResponse

-- | The response's http status code.
[$sel:httpStatus:DescribePipelinesResponse'] :: DescribePipelinesResponse -> Int

-- | An array of descriptions for the specified pipelines.
[$sel:pipelineDescriptionList:DescribePipelinesResponse'] :: DescribePipelinesResponse -> [PipelineDescription]

-- | Create a value of <a>DescribePipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribePipelinesResponse'</a>,
--   <a>describePipelinesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:pipelineDescriptionList:DescribePipelinesResponse'</a>,
--   <a>describePipelinesResponse_pipelineDescriptionList</a> - An array of
--   descriptions for the specified pipelines.
newDescribePipelinesResponse :: Int -> DescribePipelinesResponse

-- | The response's http status code.
describePipelinesResponse_httpStatus :: Lens' DescribePipelinesResponse Int

-- | An array of descriptions for the specified pipelines.
describePipelinesResponse_pipelineDescriptionList :: Lens' DescribePipelinesResponse [PipelineDescription]
instance GHC.Generics.Generic Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance GHC.Show.Show Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance GHC.Read.Read Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance GHC.Classes.Eq Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance GHC.Generics.Generic Network.AWS.DataPipeline.DescribePipelines.DescribePipelinesResponse
instance GHC.Show.Show Network.AWS.DataPipeline.DescribePipelines.DescribePipelinesResponse
instance GHC.Read.Read Network.AWS.DataPipeline.DescribePipelines.DescribePipelinesResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.DescribePipelines.DescribePipelinesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.DescribePipelines.DescribePipelinesResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.DescribePipelines.DescribePipelines
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.DescribePipelines.DescribePipelines


-- | Gets the object definitions for a set of objects associated with the
--   pipeline. Object definitions are composed of a set of fields that
--   define the properties of the object.
--   
--   This operation returns paginated results.
module Network.AWS.DataPipeline.DescribeObjects

-- | Contains the parameters for DescribeObjects.
--   
--   <i>See:</i> <a>newDescribeObjects</a> smart constructor.
data DescribeObjects
DescribeObjects' :: Maybe Bool -> Maybe Text -> Text -> [Text] -> DescribeObjects

-- | Indicates whether any expressions in the object should be evaluated
--   when the object descriptions are returned.
[$sel:evaluateExpressions:DescribeObjects'] :: DescribeObjects -> Maybe Bool

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>DescribeObjects</tt> with the marker value from
--   the previous call to retrieve the next set of results.
[$sel:marker:DescribeObjects'] :: DescribeObjects -> Maybe Text

-- | The ID of the pipeline that contains the object definitions.
[$sel:pipelineId:DescribeObjects'] :: DescribeObjects -> Text

-- | The IDs of the pipeline objects that contain the definitions to be
--   described. You can pass as many as 25 identifiers in a single call to
--   <tt>DescribeObjects</tt>.
[$sel:objectIds:DescribeObjects'] :: DescribeObjects -> [Text]

-- | Create a value of <a>DescribeObjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluateExpressions:DescribeObjects'</a>,
--   <a>describeObjects_evaluateExpressions</a> - Indicates whether any
--   expressions in the object should be evaluated when the object
--   descriptions are returned.
--   
--   <a>$sel:marker:DescribeObjects'</a>, <a>describeObjects_marker</a> -
--   The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>DescribeObjects</tt> with the marker value from
--   the previous call to retrieve the next set of results.
--   
--   <a>$sel:pipelineId:DescribeObjects'</a>,
--   <a>describeObjects_pipelineId</a> - The ID of the pipeline that
--   contains the object definitions.
--   
--   <a>$sel:objectIds:DescribeObjects'</a>,
--   <a>describeObjects_objectIds</a> - The IDs of the pipeline objects
--   that contain the definitions to be described. You can pass as many as
--   25 identifiers in a single call to <tt>DescribeObjects</tt>.
newDescribeObjects :: Text -> DescribeObjects

-- | Indicates whether any expressions in the object should be evaluated
--   when the object descriptions are returned.
describeObjects_evaluateExpressions :: Lens' DescribeObjects (Maybe Bool)

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>DescribeObjects</tt> with the marker value from
--   the previous call to retrieve the next set of results.
describeObjects_marker :: Lens' DescribeObjects (Maybe Text)

-- | The ID of the pipeline that contains the object definitions.
describeObjects_pipelineId :: Lens' DescribeObjects Text

-- | The IDs of the pipeline objects that contain the definitions to be
--   described. You can pass as many as 25 identifiers in a single call to
--   <tt>DescribeObjects</tt>.
describeObjects_objectIds :: Lens' DescribeObjects [Text]

-- | Contains the output of DescribeObjects.
--   
--   <i>See:</i> <a>newDescribeObjectsResponse</a> smart constructor.
data DescribeObjectsResponse
DescribeObjectsResponse' :: Maybe Bool -> Maybe Text -> Int -> [PipelineObject] -> DescribeObjectsResponse

-- | Indicates whether there are more results to return.
[$sel:hasMoreResults:DescribeObjectsResponse'] :: DescribeObjectsResponse -> Maybe Bool

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>DescribeObjects</tt> again with this marker
--   value. If the value is null, there are no more results.
[$sel:marker:DescribeObjectsResponse'] :: DescribeObjectsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeObjectsResponse'] :: DescribeObjectsResponse -> Int

-- | An array of object definitions.
[$sel:pipelineObjects:DescribeObjectsResponse'] :: DescribeObjectsResponse -> [PipelineObject]

-- | Create a value of <a>DescribeObjectsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hasMoreResults:DescribeObjectsResponse'</a>,
--   <a>describeObjectsResponse_hasMoreResults</a> - Indicates whether
--   there are more results to return.
--   
--   <a>$sel:marker:DescribeObjects'</a>,
--   <a>describeObjectsResponse_marker</a> - The starting point for the
--   next page of results. To view the next page of results, call
--   <tt>DescribeObjects</tt> again with this marker value. If the value is
--   null, there are no more results.
--   
--   <a>$sel:httpStatus:DescribeObjectsResponse'</a>,
--   <a>describeObjectsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:pipelineObjects:DescribeObjectsResponse'</a>,
--   <a>describeObjectsResponse_pipelineObjects</a> - An array of object
--   definitions.
newDescribeObjectsResponse :: Int -> DescribeObjectsResponse

-- | Indicates whether there are more results to return.
describeObjectsResponse_hasMoreResults :: Lens' DescribeObjectsResponse (Maybe Bool)

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>DescribeObjects</tt> again with this marker
--   value. If the value is null, there are no more results.
describeObjectsResponse_marker :: Lens' DescribeObjectsResponse (Maybe Text)

-- | The response's http status code.
describeObjectsResponse_httpStatus :: Lens' DescribeObjectsResponse Int

-- | An array of object definitions.
describeObjectsResponse_pipelineObjects :: Lens' DescribeObjectsResponse [PipelineObject]
instance GHC.Generics.Generic Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance GHC.Show.Show Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance GHC.Read.Read Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance GHC.Classes.Eq Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance GHC.Generics.Generic Network.AWS.DataPipeline.DescribeObjects.DescribeObjectsResponse
instance GHC.Show.Show Network.AWS.DataPipeline.DescribeObjects.DescribeObjectsResponse
instance GHC.Read.Read Network.AWS.DataPipeline.DescribeObjects.DescribeObjectsResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.DescribeObjects.DescribeObjectsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.DescribeObjects.DescribeObjectsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.DescribeObjects.DescribeObjects
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.DescribeObjects.DescribeObjects


-- | Deletes a pipeline, its pipeline definition, and its run history. AWS
--   Data Pipeline attempts to cancel instances associated with the
--   pipeline that are currently being processed by task runners.
--   
--   Deleting a pipeline cannot be undone. You cannot query or restore a
--   deleted pipeline. To temporarily pause a pipeline instead of deleting
--   it, call SetStatus with the status set to <tt>PAUSE</tt> on individual
--   components. Components that are paused by SetStatus can be resumed.
module Network.AWS.DataPipeline.DeletePipeline

-- | Contains the parameters for DeletePipeline.
--   
--   <i>See:</i> <a>newDeletePipeline</a> smart constructor.
data DeletePipeline
DeletePipeline' :: Text -> DeletePipeline

-- | The ID of the pipeline.
[$sel:pipelineId:DeletePipeline'] :: DeletePipeline -> Text

-- | Create a value of <a>DeletePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:DeletePipeline'</a>,
--   <a>deletePipeline_pipelineId</a> - The ID of the pipeline.
newDeletePipeline :: Text -> DeletePipeline

-- | The ID of the pipeline.
deletePipeline_pipelineId :: Lens' DeletePipeline Text

-- | <i>See:</i> <a>newDeletePipelineResponse</a> smart constructor.
data DeletePipelineResponse
DeletePipelineResponse' :: DeletePipelineResponse

-- | Create a value of <a>DeletePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePipelineResponse :: DeletePipelineResponse
instance GHC.Generics.Generic Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance GHC.Show.Show Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance GHC.Read.Read Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance GHC.Classes.Eq Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance GHC.Generics.Generic Network.AWS.DataPipeline.DeletePipeline.DeletePipelineResponse
instance GHC.Show.Show Network.AWS.DataPipeline.DeletePipeline.DeletePipelineResponse
instance GHC.Read.Read Network.AWS.DataPipeline.DeletePipeline.DeletePipelineResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.DeletePipeline.DeletePipelineResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.DeletePipeline.DeletePipelineResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.DeletePipeline.DeletePipeline
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.DeletePipeline.DeletePipeline


-- | Deactivates the specified running pipeline. The pipeline is set to the
--   <tt>DEACTIVATING</tt> state until the deactivation process completes.
--   
--   To resume a deactivated pipeline, use ActivatePipeline. By default,
--   the pipeline resumes from the last completed execution. Optionally,
--   you can specify the date and time to resume the pipeline.
module Network.AWS.DataPipeline.DeactivatePipeline

-- | Contains the parameters for DeactivatePipeline.
--   
--   <i>See:</i> <a>newDeactivatePipeline</a> smart constructor.
data DeactivatePipeline
DeactivatePipeline' :: Maybe Bool -> Text -> DeactivatePipeline

-- | Indicates whether to cancel any running objects. The default is true,
--   which sets the state of any running objects to <tt>CANCELED</tt>. If
--   this value is false, the pipeline is deactivated after all running
--   objects finish.
[$sel:cancelActive:DeactivatePipeline'] :: DeactivatePipeline -> Maybe Bool

-- | The ID of the pipeline.
[$sel:pipelineId:DeactivatePipeline'] :: DeactivatePipeline -> Text

-- | Create a value of <a>DeactivatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cancelActive:DeactivatePipeline'</a>,
--   <a>deactivatePipeline_cancelActive</a> - Indicates whether to cancel
--   any running objects. The default is true, which sets the state of any
--   running objects to <tt>CANCELED</tt>. If this value is false, the
--   pipeline is deactivated after all running objects finish.
--   
--   <a>$sel:pipelineId:DeactivatePipeline'</a>,
--   <a>deactivatePipeline_pipelineId</a> - The ID of the pipeline.
newDeactivatePipeline :: Text -> DeactivatePipeline

-- | Indicates whether to cancel any running objects. The default is true,
--   which sets the state of any running objects to <tt>CANCELED</tt>. If
--   this value is false, the pipeline is deactivated after all running
--   objects finish.
deactivatePipeline_cancelActive :: Lens' DeactivatePipeline (Maybe Bool)

-- | The ID of the pipeline.
deactivatePipeline_pipelineId :: Lens' DeactivatePipeline Text

-- | Contains the output of DeactivatePipeline.
--   
--   <i>See:</i> <a>newDeactivatePipelineResponse</a> smart constructor.
data DeactivatePipelineResponse
DeactivatePipelineResponse' :: Int -> DeactivatePipelineResponse

-- | The response's http status code.
[$sel:httpStatus:DeactivatePipelineResponse'] :: DeactivatePipelineResponse -> Int

-- | Create a value of <a>DeactivatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeactivatePipelineResponse'</a>,
--   <a>deactivatePipelineResponse_httpStatus</a> - The response's http
--   status code.
newDeactivatePipelineResponse :: Int -> DeactivatePipelineResponse

-- | The response's http status code.
deactivatePipelineResponse_httpStatus :: Lens' DeactivatePipelineResponse Int
instance GHC.Generics.Generic Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance GHC.Show.Show Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance GHC.Read.Read Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance GHC.Classes.Eq Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance GHC.Generics.Generic Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipelineResponse
instance GHC.Show.Show Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipelineResponse
instance GHC.Read.Read Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipelineResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipelineResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipelineResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.DeactivatePipeline.DeactivatePipeline


-- | Creates a new, empty pipeline. Use PutPipelineDefinition to populate
--   the pipeline.
module Network.AWS.DataPipeline.CreatePipeline

-- | Contains the parameters for CreatePipeline.
--   
--   <i>See:</i> <a>newCreatePipeline</a> smart constructor.
data CreatePipeline
CreatePipeline' :: Maybe [Tag] -> Maybe Text -> Text -> Text -> CreatePipeline

-- | A list of tags to associate with the pipeline at creation. Tags let
--   you control access to pipelines. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
[$sel:tags:CreatePipeline'] :: CreatePipeline -> Maybe [Tag]

-- | The description for the pipeline.
[$sel:description:CreatePipeline'] :: CreatePipeline -> Maybe Text

-- | The name for the pipeline. You can use the same name for multiple
--   pipelines associated with your AWS account, because AWS Data Pipeline
--   assigns each pipeline a unique pipeline identifier.
[$sel:name:CreatePipeline'] :: CreatePipeline -> Text

-- | A unique identifier. This identifier is not the same as the pipeline
--   identifier assigned by AWS Data Pipeline. You are responsible for
--   defining the format and ensuring the uniqueness of this identifier.
--   You use this parameter to ensure idempotency during repeated calls to
--   <tt>CreatePipeline</tt>. For example, if the first call to
--   <tt>CreatePipeline</tt> does not succeed, you can pass in the same
--   unique identifier and pipeline name combination on a subsequent call
--   to <tt>CreatePipeline</tt>. <tt>CreatePipeline</tt> ensures that if a
--   pipeline already exists with the same name and unique identifier, a
--   new pipeline is not created. Instead, you'll receive the pipeline
--   identifier from the previous attempt. The uniqueness of the name and
--   unique identifier combination is scoped to the AWS account or IAM user
--   credentials.
[$sel:uniqueId:CreatePipeline'] :: CreatePipeline -> Text

-- | Create a value of <a>CreatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreatePipeline'</a>, <a>createPipeline_tags</a> - A list
--   of tags to associate with the pipeline at creation. Tags let you
--   control access to pipelines. For more information, see <a>Controlling
--   User Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
--   
--   <a>$sel:description:CreatePipeline'</a>,
--   <a>createPipeline_description</a> - The description for the pipeline.
--   
--   <a>$sel:name:CreatePipeline'</a>, <a>createPipeline_name</a> - The
--   name for the pipeline. You can use the same name for multiple
--   pipelines associated with your AWS account, because AWS Data Pipeline
--   assigns each pipeline a unique pipeline identifier.
--   
--   <a>$sel:uniqueId:CreatePipeline'</a>, <a>createPipeline_uniqueId</a> -
--   A unique identifier. This identifier is not the same as the pipeline
--   identifier assigned by AWS Data Pipeline. You are responsible for
--   defining the format and ensuring the uniqueness of this identifier.
--   You use this parameter to ensure idempotency during repeated calls to
--   <tt>CreatePipeline</tt>. For example, if the first call to
--   <tt>CreatePipeline</tt> does not succeed, you can pass in the same
--   unique identifier and pipeline name combination on a subsequent call
--   to <tt>CreatePipeline</tt>. <tt>CreatePipeline</tt> ensures that if a
--   pipeline already exists with the same name and unique identifier, a
--   new pipeline is not created. Instead, you'll receive the pipeline
--   identifier from the previous attempt. The uniqueness of the name and
--   unique identifier combination is scoped to the AWS account or IAM user
--   credentials.
newCreatePipeline :: Text -> Text -> CreatePipeline

-- | A list of tags to associate with the pipeline at creation. Tags let
--   you control access to pipelines. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
createPipeline_tags :: Lens' CreatePipeline (Maybe [Tag])

-- | The description for the pipeline.
createPipeline_description :: Lens' CreatePipeline (Maybe Text)

-- | The name for the pipeline. You can use the same name for multiple
--   pipelines associated with your AWS account, because AWS Data Pipeline
--   assigns each pipeline a unique pipeline identifier.
createPipeline_name :: Lens' CreatePipeline Text

-- | A unique identifier. This identifier is not the same as the pipeline
--   identifier assigned by AWS Data Pipeline. You are responsible for
--   defining the format and ensuring the uniqueness of this identifier.
--   You use this parameter to ensure idempotency during repeated calls to
--   <tt>CreatePipeline</tt>. For example, if the first call to
--   <tt>CreatePipeline</tt> does not succeed, you can pass in the same
--   unique identifier and pipeline name combination on a subsequent call
--   to <tt>CreatePipeline</tt>. <tt>CreatePipeline</tt> ensures that if a
--   pipeline already exists with the same name and unique identifier, a
--   new pipeline is not created. Instead, you'll receive the pipeline
--   identifier from the previous attempt. The uniqueness of the name and
--   unique identifier combination is scoped to the AWS account or IAM user
--   credentials.
createPipeline_uniqueId :: Lens' CreatePipeline Text

-- | Contains the output of CreatePipeline.
--   
--   <i>See:</i> <a>newCreatePipelineResponse</a> smart constructor.
data CreatePipelineResponse
CreatePipelineResponse' :: Int -> Text -> CreatePipelineResponse

-- | The response's http status code.
[$sel:httpStatus:CreatePipelineResponse'] :: CreatePipelineResponse -> Int

-- | The ID that AWS Data Pipeline assigns the newly created pipeline. For
--   example, <tt>df-06372391ZG65EXAMPLE</tt>.
[$sel:pipelineId:CreatePipelineResponse'] :: CreatePipelineResponse -> Text

-- | Create a value of <a>CreatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:pipelineId:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_pipelineId</a> - The ID that AWS Data
--   Pipeline assigns the newly created pipeline. For example,
--   <tt>df-06372391ZG65EXAMPLE</tt>.
newCreatePipelineResponse :: Int -> Text -> CreatePipelineResponse

-- | The response's http status code.
createPipelineResponse_httpStatus :: Lens' CreatePipelineResponse Int

-- | The ID that AWS Data Pipeline assigns the newly created pipeline. For
--   example, <tt>df-06372391ZG65EXAMPLE</tt>.
createPipelineResponse_pipelineId :: Lens' CreatePipelineResponse Text
instance GHC.Generics.Generic Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance GHC.Show.Show Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance GHC.Read.Read Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance GHC.Classes.Eq Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance GHC.Generics.Generic Network.AWS.DataPipeline.CreatePipeline.CreatePipelineResponse
instance GHC.Show.Show Network.AWS.DataPipeline.CreatePipeline.CreatePipelineResponse
instance GHC.Read.Read Network.AWS.DataPipeline.CreatePipeline.CreatePipelineResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.CreatePipeline.CreatePipelineResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.CreatePipeline.CreatePipelineResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.CreatePipeline.CreatePipeline
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.CreatePipeline.CreatePipeline


-- | Adds or modifies tags for the specified pipeline.
module Network.AWS.DataPipeline.AddTags

-- | Contains the parameters for AddTags.
--   
--   <i>See:</i> <a>newAddTags</a> smart constructor.
data AddTags
AddTags' :: Text -> [Tag] -> AddTags

-- | The ID of the pipeline.
[$sel:pipelineId:AddTags'] :: AddTags -> Text

-- | The tags to add, as key/value pairs.
[$sel:tags:AddTags'] :: AddTags -> [Tag]

-- | Create a value of <a>AddTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:AddTags'</a>, <a>addTags_pipelineId</a> - The ID of
--   the pipeline.
--   
--   <a>$sel:tags:AddTags'</a>, <a>addTags_tags</a> - The tags to add, as
--   key/value pairs.
newAddTags :: Text -> AddTags

-- | The ID of the pipeline.
addTags_pipelineId :: Lens' AddTags Text

-- | The tags to add, as key/value pairs.
addTags_tags :: Lens' AddTags [Tag]

-- | Contains the output of AddTags.
--   
--   <i>See:</i> <a>newAddTagsResponse</a> smart constructor.
data AddTagsResponse
AddTagsResponse' :: Int -> AddTagsResponse

-- | The response's http status code.
[$sel:httpStatus:AddTagsResponse'] :: AddTagsResponse -> Int

-- | Create a value of <a>AddTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddTagsResponse'</a>,
--   <a>addTagsResponse_httpStatus</a> - The response's http status code.
newAddTagsResponse :: Int -> AddTagsResponse

-- | The response's http status code.
addTagsResponse_httpStatus :: Lens' AddTagsResponse Int
instance GHC.Generics.Generic Network.AWS.DataPipeline.AddTags.AddTags
instance GHC.Show.Show Network.AWS.DataPipeline.AddTags.AddTags
instance GHC.Read.Read Network.AWS.DataPipeline.AddTags.AddTags
instance GHC.Classes.Eq Network.AWS.DataPipeline.AddTags.AddTags
instance GHC.Generics.Generic Network.AWS.DataPipeline.AddTags.AddTagsResponse
instance GHC.Show.Show Network.AWS.DataPipeline.AddTags.AddTagsResponse
instance GHC.Read.Read Network.AWS.DataPipeline.AddTags.AddTagsResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.AddTags.AddTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.AddTags.AddTags
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.AddTags.AddTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.AddTags.AddTags
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.AddTags.AddTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.AddTags.AddTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.AddTags.AddTags
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.AddTags.AddTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.AddTags.AddTags


-- | Validates the specified pipeline and starts processing pipeline tasks.
--   If the pipeline does not pass validation, activation fails.
--   
--   If you need to pause the pipeline to investigate an issue with a
--   component, such as a data source or script, call DeactivatePipeline.
--   
--   To activate a finished pipeline, modify the end date for the pipeline
--   and then activate it.
module Network.AWS.DataPipeline.ActivatePipeline

-- | Contains the parameters for ActivatePipeline.
--   
--   <i>See:</i> <a>newActivatePipeline</a> smart constructor.
data ActivatePipeline
ActivatePipeline' :: Maybe [ParameterValue] -> Maybe POSIX -> Text -> ActivatePipeline

-- | A list of parameter values to pass to the pipeline at activation.
[$sel:parameterValues:ActivatePipeline'] :: ActivatePipeline -> Maybe [ParameterValue]

-- | The date and time to resume the pipeline. By default, the pipeline
--   resumes from the last completed execution.
[$sel:startTimestamp:ActivatePipeline'] :: ActivatePipeline -> Maybe POSIX

-- | The ID of the pipeline.
[$sel:pipelineId:ActivatePipeline'] :: ActivatePipeline -> Text

-- | Create a value of <a>ActivatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValues:ActivatePipeline'</a>,
--   <a>activatePipeline_parameterValues</a> - A list of parameter values
--   to pass to the pipeline at activation.
--   
--   <a>$sel:startTimestamp:ActivatePipeline'</a>,
--   <a>activatePipeline_startTimestamp</a> - The date and time to resume
--   the pipeline. By default, the pipeline resumes from the last completed
--   execution.
--   
--   <a>$sel:pipelineId:ActivatePipeline'</a>,
--   <a>activatePipeline_pipelineId</a> - The ID of the pipeline.
newActivatePipeline :: Text -> ActivatePipeline

-- | A list of parameter values to pass to the pipeline at activation.
activatePipeline_parameterValues :: Lens' ActivatePipeline (Maybe [ParameterValue])

-- | The date and time to resume the pipeline. By default, the pipeline
--   resumes from the last completed execution.
activatePipeline_startTimestamp :: Lens' ActivatePipeline (Maybe UTCTime)

-- | The ID of the pipeline.
activatePipeline_pipelineId :: Lens' ActivatePipeline Text

-- | Contains the output of ActivatePipeline.
--   
--   <i>See:</i> <a>newActivatePipelineResponse</a> smart constructor.
data ActivatePipelineResponse
ActivatePipelineResponse' :: Int -> ActivatePipelineResponse

-- | The response's http status code.
[$sel:httpStatus:ActivatePipelineResponse'] :: ActivatePipelineResponse -> Int

-- | Create a value of <a>ActivatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ActivatePipelineResponse'</a>,
--   <a>activatePipelineResponse_httpStatus</a> - The response's http
--   status code.
newActivatePipelineResponse :: Int -> ActivatePipelineResponse

-- | The response's http status code.
activatePipelineResponse_httpStatus :: Lens' ActivatePipelineResponse Int
instance GHC.Generics.Generic Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance GHC.Show.Show Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance GHC.Read.Read Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance GHC.Classes.Eq Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance GHC.Generics.Generic Network.AWS.DataPipeline.ActivatePipeline.ActivatePipelineResponse
instance GHC.Show.Show Network.AWS.DataPipeline.ActivatePipeline.ActivatePipelineResponse
instance GHC.Read.Read Network.AWS.DataPipeline.ActivatePipeline.ActivatePipelineResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.ActivatePipeline.ActivatePipelineResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ActivatePipeline.ActivatePipelineResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.ActivatePipeline.ActivatePipeline


-- | Validates the specified pipeline definition to ensure that it is well
--   formed and can be run without error.
module Network.AWS.DataPipeline.ValidatePipelineDefinition

-- | Contains the parameters for ValidatePipelineDefinition.
--   
--   <i>See:</i> <a>newValidatePipelineDefinition</a> smart constructor.
data ValidatePipelineDefinition
ValidatePipelineDefinition' :: Maybe [ParameterValue] -> Maybe [ParameterObject] -> Text -> [PipelineObject] -> ValidatePipelineDefinition

-- | The parameter values used with the pipeline.
[$sel:parameterValues:ValidatePipelineDefinition'] :: ValidatePipelineDefinition -> Maybe [ParameterValue]

-- | The parameter objects used with the pipeline.
[$sel:parameterObjects:ValidatePipelineDefinition'] :: ValidatePipelineDefinition -> Maybe [ParameterObject]

-- | The ID of the pipeline.
[$sel:pipelineId:ValidatePipelineDefinition'] :: ValidatePipelineDefinition -> Text

-- | The objects that define the pipeline changes to validate against the
--   pipeline.
[$sel:pipelineObjects:ValidatePipelineDefinition'] :: ValidatePipelineDefinition -> [PipelineObject]

-- | Create a value of <a>ValidatePipelineDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValues:ValidatePipelineDefinition'</a>,
--   <a>validatePipelineDefinition_parameterValues</a> - The parameter
--   values used with the pipeline.
--   
--   <a>$sel:parameterObjects:ValidatePipelineDefinition'</a>,
--   <a>validatePipelineDefinition_parameterObjects</a> - The parameter
--   objects used with the pipeline.
--   
--   <a>$sel:pipelineId:ValidatePipelineDefinition'</a>,
--   <a>validatePipelineDefinition_pipelineId</a> - The ID of the pipeline.
--   
--   <a>$sel:pipelineObjects:ValidatePipelineDefinition'</a>,
--   <a>validatePipelineDefinition_pipelineObjects</a> - The objects that
--   define the pipeline changes to validate against the pipeline.
newValidatePipelineDefinition :: Text -> ValidatePipelineDefinition

-- | The parameter values used with the pipeline.
validatePipelineDefinition_parameterValues :: Lens' ValidatePipelineDefinition (Maybe [ParameterValue])

-- | The parameter objects used with the pipeline.
validatePipelineDefinition_parameterObjects :: Lens' ValidatePipelineDefinition (Maybe [ParameterObject])

-- | The ID of the pipeline.
validatePipelineDefinition_pipelineId :: Lens' ValidatePipelineDefinition Text

-- | The objects that define the pipeline changes to validate against the
--   pipeline.
validatePipelineDefinition_pipelineObjects :: Lens' ValidatePipelineDefinition [PipelineObject]

-- | Contains the output of ValidatePipelineDefinition.
--   
--   <i>See:</i> <a>newValidatePipelineDefinitionResponse</a> smart
--   constructor.
data ValidatePipelineDefinitionResponse
ValidatePipelineDefinitionResponse' :: Maybe [ValidationError] -> Maybe [ValidationWarning] -> Int -> Bool -> ValidatePipelineDefinitionResponse

-- | Any validation errors that were found.
[$sel:validationErrors:ValidatePipelineDefinitionResponse'] :: ValidatePipelineDefinitionResponse -> Maybe [ValidationError]

-- | Any validation warnings that were found.
[$sel:validationWarnings:ValidatePipelineDefinitionResponse'] :: ValidatePipelineDefinitionResponse -> Maybe [ValidationWarning]

-- | The response's http status code.
[$sel:httpStatus:ValidatePipelineDefinitionResponse'] :: ValidatePipelineDefinitionResponse -> Int

-- | Indicates whether there were validation errors.
[$sel:errored:ValidatePipelineDefinitionResponse'] :: ValidatePipelineDefinitionResponse -> Bool

-- | Create a value of <a>ValidatePipelineDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validationErrors:ValidatePipelineDefinitionResponse'</a>,
--   <a>validatePipelineDefinitionResponse_validationErrors</a> - Any
--   validation errors that were found.
--   
--   <a>$sel:validationWarnings:ValidatePipelineDefinitionResponse'</a>,
--   <a>validatePipelineDefinitionResponse_validationWarnings</a> - Any
--   validation warnings that were found.
--   
--   <a>$sel:httpStatus:ValidatePipelineDefinitionResponse'</a>,
--   <a>validatePipelineDefinitionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:errored:ValidatePipelineDefinitionResponse'</a>,
--   <a>validatePipelineDefinitionResponse_errored</a> - Indicates whether
--   there were validation errors.
newValidatePipelineDefinitionResponse :: Int -> Bool -> ValidatePipelineDefinitionResponse

-- | Any validation errors that were found.
validatePipelineDefinitionResponse_validationErrors :: Lens' ValidatePipelineDefinitionResponse (Maybe [ValidationError])

-- | Any validation warnings that were found.
validatePipelineDefinitionResponse_validationWarnings :: Lens' ValidatePipelineDefinitionResponse (Maybe [ValidationWarning])

-- | The response's http status code.
validatePipelineDefinitionResponse_httpStatus :: Lens' ValidatePipelineDefinitionResponse Int

-- | Indicates whether there were validation errors.
validatePipelineDefinitionResponse_errored :: Lens' ValidatePipelineDefinitionResponse Bool
instance GHC.Generics.Generic Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance GHC.Show.Show Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance GHC.Read.Read Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance GHC.Classes.Eq Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance GHC.Generics.Generic Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinitionResponse
instance GHC.Show.Show Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinitionResponse
instance GHC.Read.Read Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinitionResponse
instance GHC.Classes.Eq Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance Control.DeepSeq.NFData Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.DataPipeline.ValidatePipelineDefinition.ValidatePipelineDefinition


module Network.AWS.DataPipeline.Lens

-- | The ID of the pipeline.
removeTags_pipelineId :: Lens' RemoveTags Text

-- | The keys of the tags to remove.
removeTags_tagKeys :: Lens' RemoveTags [Text]

-- | The response's http status code.
removeTagsResponse_httpStatus :: Lens' RemoveTagsResponse Int

-- | The query that defines the objects to be returned. The <tt>Query</tt>
--   object can contain a maximum of ten selectors. The conditions in the
--   query are limited to top-level String fields in the object. These
--   filters can be applied to components, instances, and attempts.
queryObjects_query :: Lens' QueryObjects (Maybe Query)

-- | The maximum number of object names that <tt>QueryObjects</tt> will
--   return in a single call. The default value is 100.
queryObjects_limit :: Lens' QueryObjects (Maybe Int)

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>QueryObjects</tt> with the marker value from the
--   previous call to retrieve the next set of results.
queryObjects_marker :: Lens' QueryObjects (Maybe Text)

-- | The ID of the pipeline.
queryObjects_pipelineId :: Lens' QueryObjects Text

-- | Indicates whether the query applies to components or instances. The
--   possible values are: <tt>COMPONENT</tt>, <tt>INSTANCE</tt>, and
--   <tt>ATTEMPT</tt>.
queryObjects_sphere :: Lens' QueryObjects Text

-- | The identifiers that match the query selectors.
queryObjectsResponse_ids :: Lens' QueryObjectsResponse (Maybe [Text])

-- | Indicates whether there are more results that can be obtained by a
--   subsequent call.
queryObjectsResponse_hasMoreResults :: Lens' QueryObjectsResponse (Maybe Bool)

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>QueryObjects</tt> again with this marker value.
--   If the value is null, there are no more results.
queryObjectsResponse_marker :: Lens' QueryObjectsResponse (Maybe Text)

-- | The response's http status code.
queryObjectsResponse_httpStatus :: Lens' QueryObjectsResponse Int

-- | The ID of the pipeline.
evaluateExpression_pipelineId :: Lens' EvaluateExpression Text

-- | The ID of the object.
evaluateExpression_objectId :: Lens' EvaluateExpression Text

-- | The expression to evaluate.
evaluateExpression_expression :: Lens' EvaluateExpression Text

-- | The response's http status code.
evaluateExpressionResponse_httpStatus :: Lens' EvaluateExpressionResponse Int

-- | The evaluated expression.
evaluateExpressionResponse_evaluatedExpression :: Lens' EvaluateExpressionResponse Text

-- | Key-value pairs that define the properties of the
--   ReportTaskProgressInput object.
reportTaskProgress_fields :: Lens' ReportTaskProgress (Maybe [Field])

-- | The ID of the task assigned to the task runner. This value is provided
--   in the response for PollForTask.
reportTaskProgress_taskId :: Lens' ReportTaskProgress Text

-- | The response's http status code.
reportTaskProgressResponse_httpStatus :: Lens' ReportTaskProgressResponse Int

-- | If true, the calling task runner should cancel processing of the task.
--   The task runner does not need to call SetTaskStatus for canceled
--   tasks.
reportTaskProgressResponse_canceled :: Lens' ReportTaskProgressResponse Bool

-- | A list of tags to associate with the pipeline at creation. Tags let
--   you control access to pipelines. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
createPipeline_tags :: Lens' CreatePipeline (Maybe [Tag])

-- | The description for the pipeline.
createPipeline_description :: Lens' CreatePipeline (Maybe Text)

-- | The name for the pipeline. You can use the same name for multiple
--   pipelines associated with your AWS account, because AWS Data Pipeline
--   assigns each pipeline a unique pipeline identifier.
createPipeline_name :: Lens' CreatePipeline Text

-- | A unique identifier. This identifier is not the same as the pipeline
--   identifier assigned by AWS Data Pipeline. You are responsible for
--   defining the format and ensuring the uniqueness of this identifier.
--   You use this parameter to ensure idempotency during repeated calls to
--   <tt>CreatePipeline</tt>. For example, if the first call to
--   <tt>CreatePipeline</tt> does not succeed, you can pass in the same
--   unique identifier and pipeline name combination on a subsequent call
--   to <tt>CreatePipeline</tt>. <tt>CreatePipeline</tt> ensures that if a
--   pipeline already exists with the same name and unique identifier, a
--   new pipeline is not created. Instead, you'll receive the pipeline
--   identifier from the previous attempt. The uniqueness of the name and
--   unique identifier combination is scoped to the AWS account or IAM user
--   credentials.
createPipeline_uniqueId :: Lens' CreatePipeline Text

-- | The response's http status code.
createPipelineResponse_httpStatus :: Lens' CreatePipelineResponse Int

-- | The ID that AWS Data Pipeline assigns the newly created pipeline. For
--   example, <tt>df-06372391ZG65EXAMPLE</tt>.
createPipelineResponse_pipelineId :: Lens' CreatePipelineResponse Text

-- | The ID of the pipeline.
deletePipeline_pipelineId :: Lens' DeletePipeline Text

-- | If an error occurred during the task, this value specifies the stack
--   trace associated with the error. This value is set on the physical
--   attempt object. It is used to display error information to the user.
--   The web service does not parse this value.
setTaskStatus_errorStackTrace :: Lens' SetTaskStatus (Maybe Text)

-- | If an error occurred during the task, this value specifies a text
--   description of the error. This value is set on the physical attempt
--   object. It is used to display error information to the user. The web
--   service does not parse this value.
setTaskStatus_errorMessage :: Lens' SetTaskStatus (Maybe Text)

-- | If an error occurred during the task, this value specifies the error
--   code. This value is set on the physical attempt object. It is used to
--   display error information to the user. It should not start with string
--   "Service_" which is reserved by the system.
setTaskStatus_errorId :: Lens' SetTaskStatus (Maybe Text)

-- | The ID of the task assigned to the task runner. This value is provided
--   in the response for PollForTask.
setTaskStatus_taskId :: Lens' SetTaskStatus Text

-- | If <tt>FINISHED</tt>, the task successfully completed. If
--   <tt>FAILED</tt>, the task ended unsuccessfully. Preconditions use
--   false.
setTaskStatus_taskStatus :: Lens' SetTaskStatus TaskStatus

-- | The response's http status code.
setTaskStatusResponse_httpStatus :: Lens' SetTaskStatusResponse Int

-- | The public DNS name of the task runner.
reportTaskRunnerHeartbeat_hostname :: Lens' ReportTaskRunnerHeartbeat (Maybe Text)

-- | The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt>. There are no wildcard values permitted in
--   <tt>workerGroup</tt>; the string must be an exact, case-sensitive,
--   match.
reportTaskRunnerHeartbeat_workerGroup :: Lens' ReportTaskRunnerHeartbeat (Maybe Text)

-- | The ID of the task runner. This value should be unique across your AWS
--   account. In the case of AWS Data Pipeline Task Runner launched on a
--   resource managed by AWS Data Pipeline, the web service provides a
--   unique identifier when it launches the application. If you have
--   written a custom task runner, you should assign a unique identifier
--   for the task runner.
reportTaskRunnerHeartbeat_taskrunnerId :: Lens' ReportTaskRunnerHeartbeat Text

-- | The response's http status code.
reportTaskRunnerHeartbeatResponse_httpStatus :: Lens' ReportTaskRunnerHeartbeatResponse Int

-- | Indicates whether the calling task runner should terminate.
reportTaskRunnerHeartbeatResponse_terminate :: Lens' ReportTaskRunnerHeartbeatResponse Bool

-- | Indicates whether any expressions in the object should be evaluated
--   when the object descriptions are returned.
describeObjects_evaluateExpressions :: Lens' DescribeObjects (Maybe Bool)

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>DescribeObjects</tt> with the marker value from
--   the previous call to retrieve the next set of results.
describeObjects_marker :: Lens' DescribeObjects (Maybe Text)

-- | The ID of the pipeline that contains the object definitions.
describeObjects_pipelineId :: Lens' DescribeObjects Text

-- | The IDs of the pipeline objects that contain the definitions to be
--   described. You can pass as many as 25 identifiers in a single call to
--   <tt>DescribeObjects</tt>.
describeObjects_objectIds :: Lens' DescribeObjects [Text]

-- | Indicates whether there are more results to return.
describeObjectsResponse_hasMoreResults :: Lens' DescribeObjectsResponse (Maybe Bool)

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>DescribeObjects</tt> again with this marker
--   value. If the value is null, there are no more results.
describeObjectsResponse_marker :: Lens' DescribeObjectsResponse (Maybe Text)

-- | The response's http status code.
describeObjectsResponse_httpStatus :: Lens' DescribeObjectsResponse Int

-- | An array of object definitions.
describeObjectsResponse_pipelineObjects :: Lens' DescribeObjectsResponse [PipelineObject]

-- | The ID of the pipeline.
addTags_pipelineId :: Lens' AddTags Text

-- | The tags to add, as key/value pairs.
addTags_tags :: Lens' AddTags [Tag]

-- | The response's http status code.
addTagsResponse_httpStatus :: Lens' AddTagsResponse Int

-- | The IDs of the pipelines to describe. You can pass as many as 25
--   identifiers in a single call. To obtain pipeline IDs, call
--   ListPipelines.
describePipelines_pipelineIds :: Lens' DescribePipelines [Text]

-- | The response's http status code.
describePipelinesResponse_httpStatus :: Lens' DescribePipelinesResponse Int

-- | An array of descriptions for the specified pipelines.
describePipelinesResponse_pipelineDescriptionList :: Lens' DescribePipelinesResponse [PipelineDescription]

-- | The public DNS name of the calling task runner.
pollForTask_hostname :: Lens' PollForTask (Maybe Text)

-- | Identity information for the EC2 instance that is hosting the task
--   runner. You can get this value from the instance using
--   <tt>http://169.254.169.254/latest/meta-data/instance-id</tt>. For more
--   information, see <a>Instance Metadata</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide.</i> Passing in this value proves that your
--   task runner is running on an EC2 instance, and ensures the proper AWS
--   Data Pipeline service charges are applied to your pipeline.
pollForTask_instanceIdentity :: Lens' PollForTask (Maybe InstanceIdentity)

-- | The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt> in the call to <tt>PollForTask</tt>. There are no
--   wildcard values permitted in <tt>workerGroup</tt>; the string must be
--   an exact, case-sensitive, match.
pollForTask_workerGroup :: Lens' PollForTask Text

-- | The information needed to complete the task that is being assigned to
--   the task runner. One of the fields returned in this object is
--   <tt>taskId</tt>, which contains an identifier for the task being
--   assigned. The calling task runner uses <tt>taskId</tt> in subsequent
--   calls to ReportTaskProgress and SetTaskStatus.
pollForTaskResponse_taskObject :: Lens' PollForTaskResponse (Maybe TaskObject)

-- | The response's http status code.
pollForTaskResponse_httpStatus :: Lens' PollForTaskResponse Int

-- | The parameter values used with the pipeline.
validatePipelineDefinition_parameterValues :: Lens' ValidatePipelineDefinition (Maybe [ParameterValue])

-- | The parameter objects used with the pipeline.
validatePipelineDefinition_parameterObjects :: Lens' ValidatePipelineDefinition (Maybe [ParameterObject])

-- | The ID of the pipeline.
validatePipelineDefinition_pipelineId :: Lens' ValidatePipelineDefinition Text

-- | The objects that define the pipeline changes to validate against the
--   pipeline.
validatePipelineDefinition_pipelineObjects :: Lens' ValidatePipelineDefinition [PipelineObject]

-- | Any validation errors that were found.
validatePipelineDefinitionResponse_validationErrors :: Lens' ValidatePipelineDefinitionResponse (Maybe [ValidationError])

-- | Any validation warnings that were found.
validatePipelineDefinitionResponse_validationWarnings :: Lens' ValidatePipelineDefinitionResponse (Maybe [ValidationWarning])

-- | The response's http status code.
validatePipelineDefinitionResponse_httpStatus :: Lens' ValidatePipelineDefinitionResponse Int

-- | Indicates whether there were validation errors.
validatePipelineDefinitionResponse_errored :: Lens' ValidatePipelineDefinitionResponse Bool

-- | The version of the pipeline definition to retrieve. Set this parameter
--   to <tt>latest</tt> (default) to use the last definition saved to the
--   pipeline or <tt>active</tt> to use the last definition that was
--   activated.
getPipelineDefinition_version :: Lens' GetPipelineDefinition (Maybe Text)

-- | The ID of the pipeline.
getPipelineDefinition_pipelineId :: Lens' GetPipelineDefinition Text

-- | The parameter values used in the pipeline definition.
getPipelineDefinitionResponse_parameterValues :: Lens' GetPipelineDefinitionResponse (Maybe [ParameterValue])

-- | The parameter objects used in the pipeline definition.
getPipelineDefinitionResponse_parameterObjects :: Lens' GetPipelineDefinitionResponse (Maybe [ParameterObject])

-- | The objects defined in the pipeline.
getPipelineDefinitionResponse_pipelineObjects :: Lens' GetPipelineDefinitionResponse (Maybe [PipelineObject])

-- | The response's http status code.
getPipelineDefinitionResponse_httpStatus :: Lens' GetPipelineDefinitionResponse Int

-- | The parameter values used with the pipeline.
putPipelineDefinition_parameterValues :: Lens' PutPipelineDefinition (Maybe [ParameterValue])

-- | The parameter objects used with the pipeline.
putPipelineDefinition_parameterObjects :: Lens' PutPipelineDefinition (Maybe [ParameterObject])

-- | The ID of the pipeline.
putPipelineDefinition_pipelineId :: Lens' PutPipelineDefinition Text

-- | The objects that define the pipeline. These objects overwrite the
--   existing pipeline definition.
putPipelineDefinition_pipelineObjects :: Lens' PutPipelineDefinition [PipelineObject]

-- | The validation errors that are associated with the objects defined in
--   <tt>pipelineObjects</tt>.
putPipelineDefinitionResponse_validationErrors :: Lens' PutPipelineDefinitionResponse (Maybe [ValidationError])

-- | The validation warnings that are associated with the objects defined
--   in <tt>pipelineObjects</tt>.
putPipelineDefinitionResponse_validationWarnings :: Lens' PutPipelineDefinitionResponse (Maybe [ValidationWarning])

-- | The response's http status code.
putPipelineDefinitionResponse_httpStatus :: Lens' PutPipelineDefinitionResponse Int

-- | Indicates whether there were validation errors, and the pipeline
--   definition is stored but cannot be activated until you correct the
--   pipeline and call <tt>PutPipelineDefinition</tt> to commit the
--   corrected pipeline.
putPipelineDefinitionResponse_errored :: Lens' PutPipelineDefinitionResponse Bool

-- | The ID of the pipeline that contains the objects.
setStatus_pipelineId :: Lens' SetStatus Text

-- | The IDs of the objects. The corresponding objects can be either
--   physical or components, but not a mix of both types.
setStatus_objectIds :: Lens' SetStatus [Text]

-- | The status to be set on all the objects specified in
--   <tt>objectIds</tt>. For components, use <tt>PAUSE</tt> or
--   <tt>RESUME</tt>. For instances, use <tt>TRY_CANCEL</tt>,
--   <tt>RERUN</tt>, or <tt>MARK_FINISHED</tt>.
setStatus_status :: Lens' SetStatus Text

-- | The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>ListPipelines</tt> with the marker value from the
--   previous call to retrieve the next set of results.
listPipelines_marker :: Lens' ListPipelines (Maybe Text)

-- | Indicates whether there are more results that can be obtained by a
--   subsequent call.
listPipelinesResponse_hasMoreResults :: Lens' ListPipelinesResponse (Maybe Bool)

-- | The starting point for the next page of results. To view the next page
--   of results, call <tt>ListPipelinesOutput</tt> again with this marker
--   value. If the value is null, there are no more results.
listPipelinesResponse_marker :: Lens' ListPipelinesResponse (Maybe Text)

-- | The response's http status code.
listPipelinesResponse_httpStatus :: Lens' ListPipelinesResponse Int

-- | The pipeline identifiers. If you require additional information about
--   the pipelines, you can use these identifiers to call DescribePipelines
--   and GetPipelineDefinition.
listPipelinesResponse_pipelineIdList :: Lens' ListPipelinesResponse [PipelineIdName]

-- | A list of parameter values to pass to the pipeline at activation.
activatePipeline_parameterValues :: Lens' ActivatePipeline (Maybe [ParameterValue])

-- | The date and time to resume the pipeline. By default, the pipeline
--   resumes from the last completed execution.
activatePipeline_startTimestamp :: Lens' ActivatePipeline (Maybe UTCTime)

-- | The ID of the pipeline.
activatePipeline_pipelineId :: Lens' ActivatePipeline Text

-- | The response's http status code.
activatePipelineResponse_httpStatus :: Lens' ActivatePipelineResponse Int

-- | Indicates whether to cancel any running objects. The default is true,
--   which sets the state of any running objects to <tt>CANCELED</tt>. If
--   this value is false, the pipeline is deactivated after all running
--   objects finish.
deactivatePipeline_cancelActive :: Lens' DeactivatePipeline (Maybe Bool)

-- | The ID of the pipeline.
deactivatePipeline_pipelineId :: Lens' DeactivatePipeline Text

-- | The response's http status code.
deactivatePipelineResponse_httpStatus :: Lens' DeactivatePipelineResponse Int

-- | The field value, expressed as a String.
field_stringValue :: Lens' Field (Maybe Text)

-- | The field value, expressed as the identifier of another object.
field_refValue :: Lens' Field (Maybe Text)

-- | The field identifier.
field_key :: Lens' Field Text

-- | A description of an EC2 instance that is generated when the instance
--   is launched and exposed to the instance via the instance metadata
--   service in the form of a JSON representation of an object.
instanceIdentity_document :: Lens' InstanceIdentity (Maybe Text)

-- | A signature which can be used to verify the accuracy and authenticity
--   of the information provided in the instance identity document.
instanceIdentity_signature :: Lens' InstanceIdentity (Maybe Text)

-- | The value that the actual field value will be compared with.
operator_values :: Lens' Operator (Maybe [Text])

-- | The logical operation to be performed: equal (<tt>EQ</tt>), equal
--   reference (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater
--   than or equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal
--   reference (<tt>REF_EQ</tt>) can be used only with reference fields.
--   The other comparison types can be used only with String fields. The
--   comparison types you can use apply only to certain object fields, as
--   detailed below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   <ul>
--   <li>name</li>
--   <li>@sphere</li>
--   <li>parent</li>
--   <li>@componentParent</li>
--   <li>@instanceParent</li>
--   <li>@status</li>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   The comparison operators <tt>GE</tt>, <tt>LE</tt>, and
--   <tt>BETWEEN</tt> act on the following fields:
--   
--   <ul>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   Note that fields beginning with the at sign (@) are read-only and set
--   by the web service. When you name fields, you should choose names
--   containing only alpha-numeric values, as symbols may be reserved by
--   AWS Data Pipeline. User-defined fields that you add to a pipeline
--   should prefix their name with the string "my".
operator_type :: Lens' Operator (Maybe OperatorType)

-- | The field identifier.
parameterAttribute_key :: Lens' ParameterAttribute Text

-- | The field value, expressed as a String.
parameterAttribute_stringValue :: Lens' ParameterAttribute Text

-- | The ID of the parameter object.
parameterObject_id :: Lens' ParameterObject Text

-- | The attributes of the parameter object.
parameterObject_attributes :: Lens' ParameterObject [ParameterAttribute]

-- | The ID of the parameter value.
parameterValue_id :: Lens' ParameterValue Text

-- | The field value, expressed as a String.
parameterValue_stringValue :: Lens' ParameterValue Text

-- | A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
pipelineDescription_tags :: Lens' PipelineDescription (Maybe [Tag])

-- | Description of the pipeline.
pipelineDescription_description :: Lens' PipelineDescription (Maybe Text)

-- | The pipeline identifier that was assigned by AWS Data Pipeline. This
--   is a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
pipelineDescription_pipelineId :: Lens' PipelineDescription Text

-- | The name of the pipeline.
pipelineDescription_name :: Lens' PipelineDescription Text

-- | A list of read-only fields that contain metadata about the pipeline:
--   @userId, @accountId, and @pipelineState.
pipelineDescription_fields :: Lens' PipelineDescription [Field]

-- | The ID of the pipeline that was assigned by AWS Data Pipeline. This is
--   a string of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
pipelineIdName_id :: Lens' PipelineIdName (Maybe Text)

-- | The name of the pipeline.
pipelineIdName_name :: Lens' PipelineIdName (Maybe Text)

-- | The ID of the object.
pipelineObject_id :: Lens' PipelineObject Text

-- | The name of the object.
pipelineObject_name :: Lens' PipelineObject Text

-- | Key-value pairs that define the properties of the object.
pipelineObject_fields :: Lens' PipelineObject [Field]

-- | List of selectors that define the query. An object must satisfy all of
--   the selectors to match the query.
query_selectors :: Lens' Query (Maybe [Selector])

-- | Undocumented member.
selector_operator :: Lens' Selector (Maybe Operator)

-- | The name of the field that the operator will be applied to. The field
--   name is the "key" portion of the field definition in the pipeline
--   definition syntax that is used by the AWS Data Pipeline API. If the
--   field is not set on the object, the condition fails.
selector_fieldName :: Lens' Selector (Maybe Text)

-- | The key name of a tag defined by a user. For more information, see
--   <a>Controlling User Access to Pipelines</a> in the <i>AWS Data
--   Pipeline Developer Guide</i>.
tag_key :: Lens' Tag Text

-- | The optional value portion of a tag defined by a user. For more
--   information, see <a>Controlling User Access to Pipelines</a> in the
--   <i>AWS Data Pipeline Developer Guide</i>.
tag_value :: Lens' Tag Text

-- | The ID of the pipeline that provided the task.
taskObject_pipelineId :: Lens' TaskObject (Maybe Text)

-- | Connection information for the location where the task runner will
--   publish the output of the task.
taskObject_objects :: Lens' TaskObject (Maybe (HashMap Text PipelineObject))

-- | An internal identifier for the task. This ID is passed to the
--   SetTaskStatus and ReportTaskProgress actions.
taskObject_taskId :: Lens' TaskObject (Maybe Text)

-- | The ID of the pipeline task attempt object. AWS Data Pipeline uses
--   this value to track how many times a task is attempted.
taskObject_attemptId :: Lens' TaskObject (Maybe Text)

-- | The identifier of the object that contains the validation error.
validationError_id :: Lens' ValidationError (Maybe Text)

-- | A description of the validation error.
validationError_errors :: Lens' ValidationError (Maybe [Text])

-- | A description of the validation warning.
validationWarning_warnings :: Lens' ValidationWarning (Maybe [Text])

-- | The identifier of the object that contains the validation warning.
validationWarning_id :: Lens' ValidationWarning (Maybe Text)


module Network.AWS.DataPipeline.Waiters


-- | Derived from API version <tt>2012-10-29</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Data Pipeline configures and manages a data-driven workflow called
--   a pipeline. AWS Data Pipeline handles the details of scheduling and
--   ensuring that data dependencies are met so that your application can
--   focus on processing the data.
--   
--   AWS Data Pipeline provides a JAR implementation of a task runner
--   called AWS Data Pipeline Task Runner. AWS Data Pipeline Task Runner
--   provides logic for common data management scenarios, such as
--   performing database queries and running data analysis using Amazon
--   Elastic MapReduce (Amazon EMR). You can use AWS Data Pipeline Task
--   Runner as your task runner, or you can write your own task runner to
--   provide custom data management.
--   
--   AWS Data Pipeline implements two main sets of functionality. Use the
--   first set to create a pipeline and define data sources, schedules,
--   dependencies, and the transforms to be performed on the data. Use the
--   second set in your task runner application to receive the next task
--   ready for processing. The logic for performing the task, such as
--   querying the data, running data analysis, or converting the data from
--   one format to another, is contained within the task runner. The task
--   runner performs the task assigned to it by the web service, reporting
--   progress to the web service as it does so. When the task is done, the
--   task runner reports the final success or failure of the task to the
--   web service.
module Network.AWS.DataPipeline

-- | API version <tt>2012-10-29</tt> of the Amazon Data Pipeline SDK
--   configuration.
defaultService :: Service

-- | The specified task was not found.
_TaskNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was not valid. Verify that your request was properly
--   formatted, that the signature was generated with the correct
--   credentials, and that you haven't exceeded any of the service limits
--   for your account.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified pipeline was not found. Verify that you used the correct
--   user and account identifiers.
_PipelineNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified pipeline has been deleted.
_PipelineDeletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal service error occurred.
_InternalServiceError :: AsError a => Getting (First ServiceError) a ServiceError

-- | Contains the parameters for RemoveTags.
--   
--   <i>See:</i> <a>newRemoveTags</a> smart constructor.
data RemoveTags
RemoveTags' :: Text -> [Text] -> RemoveTags

-- | Create a value of <a>RemoveTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:RemoveTags'</a>, <a>removeTags_pipelineId</a> - The
--   ID of the pipeline.
--   
--   <a>$sel:tagKeys:RemoveTags'</a>, <a>removeTags_tagKeys</a> - The keys
--   of the tags to remove.
newRemoveTags :: Text -> RemoveTags

-- | Contains the output of RemoveTags.
--   
--   <i>See:</i> <a>newRemoveTagsResponse</a> smart constructor.
data RemoveTagsResponse
RemoveTagsResponse' :: Int -> RemoveTagsResponse

-- | Create a value of <a>RemoveTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RemoveTagsResponse'</a>,
--   <a>removeTagsResponse_httpStatus</a> - The response's http status
--   code.
newRemoveTagsResponse :: Int -> RemoveTagsResponse

-- | Contains the parameters for QueryObjects.
--   
--   <i>See:</i> <a>newQueryObjects</a> smart constructor.
data QueryObjects
QueryObjects' :: Maybe Query -> Maybe Int -> Maybe Text -> Text -> Text -> QueryObjects

-- | Create a value of <a>QueryObjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:query:QueryObjects'</a>, <a>queryObjects_query</a> - The query
--   that defines the objects to be returned. The <tt>Query</tt> object can
--   contain a maximum of ten selectors. The conditions in the query are
--   limited to top-level String fields in the object. These filters can be
--   applied to components, instances, and attempts.
--   
--   <a>$sel:limit:QueryObjects'</a>, <a>queryObjects_limit</a> - The
--   maximum number of object names that <tt>QueryObjects</tt> will return
--   in a single call. The default value is 100.
--   
--   <a>$sel:marker:QueryObjects'</a>, <a>queryObjects_marker</a> - The
--   starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>QueryObjects</tt> with the marker value from the
--   previous call to retrieve the next set of results.
--   
--   <a>$sel:pipelineId:QueryObjects'</a>, <a>queryObjects_pipelineId</a> -
--   The ID of the pipeline.
--   
--   <a>$sel:sphere:QueryObjects'</a>, <a>queryObjects_sphere</a> -
--   Indicates whether the query applies to components or instances. The
--   possible values are: <tt>COMPONENT</tt>, <tt>INSTANCE</tt>, and
--   <tt>ATTEMPT</tt>.
newQueryObjects :: Text -> Text -> QueryObjects

-- | Contains the output of QueryObjects.
--   
--   <i>See:</i> <a>newQueryObjectsResponse</a> smart constructor.
data QueryObjectsResponse
QueryObjectsResponse' :: Maybe [Text] -> Maybe Bool -> Maybe Text -> Int -> QueryObjectsResponse

-- | Create a value of <a>QueryObjectsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ids:QueryObjectsResponse'</a>, <a>queryObjectsResponse_ids</a>
--   - The identifiers that match the query selectors.
--   
--   <a>$sel:hasMoreResults:QueryObjectsResponse'</a>,
--   <a>queryObjectsResponse_hasMoreResults</a> - Indicates whether there
--   are more results that can be obtained by a subsequent call.
--   
--   <a>$sel:marker:QueryObjects'</a>, <a>queryObjectsResponse_marker</a> -
--   The starting point for the next page of results. To view the next page
--   of results, call <tt>QueryObjects</tt> again with this marker value.
--   If the value is null, there are no more results.
--   
--   <a>$sel:httpStatus:QueryObjectsResponse'</a>,
--   <a>queryObjectsResponse_httpStatus</a> - The response's http status
--   code.
newQueryObjectsResponse :: Int -> QueryObjectsResponse

-- | Contains the parameters for EvaluateExpression.
--   
--   <i>See:</i> <a>newEvaluateExpression</a> smart constructor.
data EvaluateExpression
EvaluateExpression' :: Text -> Text -> Text -> EvaluateExpression

-- | Create a value of <a>EvaluateExpression</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:EvaluateExpression'</a>,
--   <a>evaluateExpression_pipelineId</a> - The ID of the pipeline.
--   
--   <a>$sel:objectId:EvaluateExpression'</a>,
--   <a>evaluateExpression_objectId</a> - The ID of the object.
--   
--   <a>$sel:expression:EvaluateExpression'</a>,
--   <a>evaluateExpression_expression</a> - The expression to evaluate.
newEvaluateExpression :: Text -> Text -> Text -> EvaluateExpression

-- | Contains the output of EvaluateExpression.
--   
--   <i>See:</i> <a>newEvaluateExpressionResponse</a> smart constructor.
data EvaluateExpressionResponse
EvaluateExpressionResponse' :: Int -> Text -> EvaluateExpressionResponse

-- | Create a value of <a>EvaluateExpressionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EvaluateExpressionResponse'</a>,
--   <a>evaluateExpressionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:evaluatedExpression:EvaluateExpressionResponse'</a>,
--   <a>evaluateExpressionResponse_evaluatedExpression</a> - The evaluated
--   expression.
newEvaluateExpressionResponse :: Int -> Text -> EvaluateExpressionResponse

-- | Contains the parameters for ReportTaskProgress.
--   
--   <i>See:</i> <a>newReportTaskProgress</a> smart constructor.
data ReportTaskProgress
ReportTaskProgress' :: Maybe [Field] -> Text -> ReportTaskProgress

-- | Create a value of <a>ReportTaskProgress</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fields:ReportTaskProgress'</a>,
--   <a>reportTaskProgress_fields</a> - Key-value pairs that define the
--   properties of the ReportTaskProgressInput object.
--   
--   <a>$sel:taskId:ReportTaskProgress'</a>,
--   <a>reportTaskProgress_taskId</a> - The ID of the task assigned to the
--   task runner. This value is provided in the response for PollForTask.
newReportTaskProgress :: Text -> ReportTaskProgress

-- | Contains the output of ReportTaskProgress.
--   
--   <i>See:</i> <a>newReportTaskProgressResponse</a> smart constructor.
data ReportTaskProgressResponse
ReportTaskProgressResponse' :: Int -> Bool -> ReportTaskProgressResponse

-- | Create a value of <a>ReportTaskProgressResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ReportTaskProgressResponse'</a>,
--   <a>reportTaskProgressResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:canceled:ReportTaskProgressResponse'</a>,
--   <a>reportTaskProgressResponse_canceled</a> - If true, the calling task
--   runner should cancel processing of the task. The task runner does not
--   need to call SetTaskStatus for canceled tasks.
newReportTaskProgressResponse :: Int -> Bool -> ReportTaskProgressResponse

-- | Contains the parameters for CreatePipeline.
--   
--   <i>See:</i> <a>newCreatePipeline</a> smart constructor.
data CreatePipeline
CreatePipeline' :: Maybe [Tag] -> Maybe Text -> Text -> Text -> CreatePipeline

-- | Create a value of <a>CreatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreatePipeline'</a>, <a>createPipeline_tags</a> - A list
--   of tags to associate with the pipeline at creation. Tags let you
--   control access to pipelines. For more information, see <a>Controlling
--   User Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
--   
--   <a>$sel:description:CreatePipeline'</a>,
--   <a>createPipeline_description</a> - The description for the pipeline.
--   
--   <a>$sel:name:CreatePipeline'</a>, <a>createPipeline_name</a> - The
--   name for the pipeline. You can use the same name for multiple
--   pipelines associated with your AWS account, because AWS Data Pipeline
--   assigns each pipeline a unique pipeline identifier.
--   
--   <a>$sel:uniqueId:CreatePipeline'</a>, <a>createPipeline_uniqueId</a> -
--   A unique identifier. This identifier is not the same as the pipeline
--   identifier assigned by AWS Data Pipeline. You are responsible for
--   defining the format and ensuring the uniqueness of this identifier.
--   You use this parameter to ensure idempotency during repeated calls to
--   <tt>CreatePipeline</tt>. For example, if the first call to
--   <tt>CreatePipeline</tt> does not succeed, you can pass in the same
--   unique identifier and pipeline name combination on a subsequent call
--   to <tt>CreatePipeline</tt>. <tt>CreatePipeline</tt> ensures that if a
--   pipeline already exists with the same name and unique identifier, a
--   new pipeline is not created. Instead, you'll receive the pipeline
--   identifier from the previous attempt. The uniqueness of the name and
--   unique identifier combination is scoped to the AWS account or IAM user
--   credentials.
newCreatePipeline :: Text -> Text -> CreatePipeline

-- | Contains the output of CreatePipeline.
--   
--   <i>See:</i> <a>newCreatePipelineResponse</a> smart constructor.
data CreatePipelineResponse
CreatePipelineResponse' :: Int -> Text -> CreatePipelineResponse

-- | Create a value of <a>CreatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:pipelineId:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_pipelineId</a> - The ID that AWS Data
--   Pipeline assigns the newly created pipeline. For example,
--   <tt>df-06372391ZG65EXAMPLE</tt>.
newCreatePipelineResponse :: Int -> Text -> CreatePipelineResponse

-- | Contains the parameters for DeletePipeline.
--   
--   <i>See:</i> <a>newDeletePipeline</a> smart constructor.
data DeletePipeline
DeletePipeline' :: Text -> DeletePipeline

-- | Create a value of <a>DeletePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:DeletePipeline'</a>,
--   <a>deletePipeline_pipelineId</a> - The ID of the pipeline.
newDeletePipeline :: Text -> DeletePipeline

-- | <i>See:</i> <a>newDeletePipelineResponse</a> smart constructor.
data DeletePipelineResponse
DeletePipelineResponse' :: DeletePipelineResponse

-- | Create a value of <a>DeletePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePipelineResponse :: DeletePipelineResponse

-- | Contains the parameters for SetTaskStatus.
--   
--   <i>See:</i> <a>newSetTaskStatus</a> smart constructor.
data SetTaskStatus
SetTaskStatus' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> TaskStatus -> SetTaskStatus

-- | Create a value of <a>SetTaskStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorStackTrace:SetTaskStatus'</a>,
--   <a>setTaskStatus_errorStackTrace</a> - If an error occurred during the
--   task, this value specifies the stack trace associated with the error.
--   This value is set on the physical attempt object. It is used to
--   display error information to the user. The web service does not parse
--   this value.
--   
--   <a>$sel:errorMessage:SetTaskStatus'</a>,
--   <a>setTaskStatus_errorMessage</a> - If an error occurred during the
--   task, this value specifies a text description of the error. This value
--   is set on the physical attempt object. It is used to display error
--   information to the user. The web service does not parse this value.
--   
--   <a>$sel:errorId:SetTaskStatus'</a>, <a>setTaskStatus_errorId</a> - If
--   an error occurred during the task, this value specifies the error
--   code. This value is set on the physical attempt object. It is used to
--   display error information to the user. It should not start with string
--   "Service_" which is reserved by the system.
--   
--   <a>$sel:taskId:SetTaskStatus'</a>, <a>setTaskStatus_taskId</a> - The
--   ID of the task assigned to the task runner. This value is provided in
--   the response for PollForTask.
--   
--   <a>$sel:taskStatus:SetTaskStatus'</a>, <a>setTaskStatus_taskStatus</a>
--   - If <tt>FINISHED</tt>, the task successfully completed. If
--   <tt>FAILED</tt>, the task ended unsuccessfully. Preconditions use
--   false.
newSetTaskStatus :: Text -> TaskStatus -> SetTaskStatus

-- | Contains the output of SetTaskStatus.
--   
--   <i>See:</i> <a>newSetTaskStatusResponse</a> smart constructor.
data SetTaskStatusResponse
SetTaskStatusResponse' :: Int -> SetTaskStatusResponse

-- | Create a value of <a>SetTaskStatusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SetTaskStatusResponse'</a>,
--   <a>setTaskStatusResponse_httpStatus</a> - The response's http status
--   code.
newSetTaskStatusResponse :: Int -> SetTaskStatusResponse

-- | Contains the parameters for ReportTaskRunnerHeartbeat.
--   
--   <i>See:</i> <a>newReportTaskRunnerHeartbeat</a> smart constructor.
data ReportTaskRunnerHeartbeat
ReportTaskRunnerHeartbeat' :: Maybe Text -> Maybe Text -> Text -> ReportTaskRunnerHeartbeat

-- | Create a value of <a>ReportTaskRunnerHeartbeat</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:ReportTaskRunnerHeartbeat'</a>,
--   <a>reportTaskRunnerHeartbeat_hostname</a> - The public DNS name of the
--   task runner.
--   
--   <a>$sel:workerGroup:ReportTaskRunnerHeartbeat'</a>,
--   <a>reportTaskRunnerHeartbeat_workerGroup</a> - The type of task the
--   task runner is configured to accept and process. The worker group is
--   set as a field on objects in the pipeline when they are created. You
--   can only specify a single value for <tt>workerGroup</tt>. There are no
--   wildcard values permitted in <tt>workerGroup</tt>; the string must be
--   an exact, case-sensitive, match.
--   
--   <a>$sel:taskrunnerId:ReportTaskRunnerHeartbeat'</a>,
--   <a>reportTaskRunnerHeartbeat_taskrunnerId</a> - The ID of the task
--   runner. This value should be unique across your AWS account. In the
--   case of AWS Data Pipeline Task Runner launched on a resource managed
--   by AWS Data Pipeline, the web service provides a unique identifier
--   when it launches the application. If you have written a custom task
--   runner, you should assign a unique identifier for the task runner.
newReportTaskRunnerHeartbeat :: Text -> ReportTaskRunnerHeartbeat

-- | Contains the output of ReportTaskRunnerHeartbeat.
--   
--   <i>See:</i> <a>newReportTaskRunnerHeartbeatResponse</a> smart
--   constructor.
data ReportTaskRunnerHeartbeatResponse
ReportTaskRunnerHeartbeatResponse' :: Int -> Bool -> ReportTaskRunnerHeartbeatResponse

-- | Create a value of <a>ReportTaskRunnerHeartbeatResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ReportTaskRunnerHeartbeatResponse'</a>,
--   <a>reportTaskRunnerHeartbeatResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:terminate:ReportTaskRunnerHeartbeatResponse'</a>,
--   <a>reportTaskRunnerHeartbeatResponse_terminate</a> - Indicates whether
--   the calling task runner should terminate.
newReportTaskRunnerHeartbeatResponse :: Int -> Bool -> ReportTaskRunnerHeartbeatResponse

-- | Contains the parameters for DescribeObjects.
--   
--   <i>See:</i> <a>newDescribeObjects</a> smart constructor.
data DescribeObjects
DescribeObjects' :: Maybe Bool -> Maybe Text -> Text -> [Text] -> DescribeObjects

-- | Create a value of <a>DescribeObjects</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:evaluateExpressions:DescribeObjects'</a>,
--   <a>describeObjects_evaluateExpressions</a> - Indicates whether any
--   expressions in the object should be evaluated when the object
--   descriptions are returned.
--   
--   <a>$sel:marker:DescribeObjects'</a>, <a>describeObjects_marker</a> -
--   The starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>DescribeObjects</tt> with the marker value from
--   the previous call to retrieve the next set of results.
--   
--   <a>$sel:pipelineId:DescribeObjects'</a>,
--   <a>describeObjects_pipelineId</a> - The ID of the pipeline that
--   contains the object definitions.
--   
--   <a>$sel:objectIds:DescribeObjects'</a>,
--   <a>describeObjects_objectIds</a> - The IDs of the pipeline objects
--   that contain the definitions to be described. You can pass as many as
--   25 identifiers in a single call to <tt>DescribeObjects</tt>.
newDescribeObjects :: Text -> DescribeObjects

-- | Contains the output of DescribeObjects.
--   
--   <i>See:</i> <a>newDescribeObjectsResponse</a> smart constructor.
data DescribeObjectsResponse
DescribeObjectsResponse' :: Maybe Bool -> Maybe Text -> Int -> [PipelineObject] -> DescribeObjectsResponse

-- | Create a value of <a>DescribeObjectsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hasMoreResults:DescribeObjectsResponse'</a>,
--   <a>describeObjectsResponse_hasMoreResults</a> - Indicates whether
--   there are more results to return.
--   
--   <a>$sel:marker:DescribeObjects'</a>,
--   <a>describeObjectsResponse_marker</a> - The starting point for the
--   next page of results. To view the next page of results, call
--   <tt>DescribeObjects</tt> again with this marker value. If the value is
--   null, there are no more results.
--   
--   <a>$sel:httpStatus:DescribeObjectsResponse'</a>,
--   <a>describeObjectsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:pipelineObjects:DescribeObjectsResponse'</a>,
--   <a>describeObjectsResponse_pipelineObjects</a> - An array of object
--   definitions.
newDescribeObjectsResponse :: Int -> DescribeObjectsResponse

-- | Contains the parameters for AddTags.
--   
--   <i>See:</i> <a>newAddTags</a> smart constructor.
data AddTags
AddTags' :: Text -> [Tag] -> AddTags

-- | Create a value of <a>AddTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:AddTags'</a>, <a>addTags_pipelineId</a> - The ID of
--   the pipeline.
--   
--   <a>$sel:tags:AddTags'</a>, <a>addTags_tags</a> - The tags to add, as
--   key/value pairs.
newAddTags :: Text -> AddTags

-- | Contains the output of AddTags.
--   
--   <i>See:</i> <a>newAddTagsResponse</a> smart constructor.
data AddTagsResponse
AddTagsResponse' :: Int -> AddTagsResponse

-- | Create a value of <a>AddTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddTagsResponse'</a>,
--   <a>addTagsResponse_httpStatus</a> - The response's http status code.
newAddTagsResponse :: Int -> AddTagsResponse

-- | Contains the parameters for DescribePipelines.
--   
--   <i>See:</i> <a>newDescribePipelines</a> smart constructor.
data DescribePipelines
DescribePipelines' :: [Text] -> DescribePipelines

-- | Create a value of <a>DescribePipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineIds:DescribePipelines'</a>,
--   <a>describePipelines_pipelineIds</a> - The IDs of the pipelines to
--   describe. You can pass as many as 25 identifiers in a single call. To
--   obtain pipeline IDs, call ListPipelines.
newDescribePipelines :: DescribePipelines

-- | Contains the output of DescribePipelines.
--   
--   <i>See:</i> <a>newDescribePipelinesResponse</a> smart constructor.
data DescribePipelinesResponse
DescribePipelinesResponse' :: Int -> [PipelineDescription] -> DescribePipelinesResponse

-- | Create a value of <a>DescribePipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribePipelinesResponse'</a>,
--   <a>describePipelinesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:pipelineDescriptionList:DescribePipelinesResponse'</a>,
--   <a>describePipelinesResponse_pipelineDescriptionList</a> - An array of
--   descriptions for the specified pipelines.
newDescribePipelinesResponse :: Int -> DescribePipelinesResponse

-- | Contains the parameters for PollForTask.
--   
--   <i>See:</i> <a>newPollForTask</a> smart constructor.
data PollForTask
PollForTask' :: Maybe Text -> Maybe InstanceIdentity -> Text -> PollForTask

-- | Create a value of <a>PollForTask</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostname:PollForTask'</a>, <a>pollForTask_hostname</a> - The
--   public DNS name of the calling task runner.
--   
--   <a>$sel:instanceIdentity:PollForTask'</a>,
--   <a>pollForTask_instanceIdentity</a> - Identity information for the EC2
--   instance that is hosting the task runner. You can get this value from
--   the instance using
--   <tt>http://169.254.169.254/latest/meta-data/instance-id</tt>. For more
--   information, see <a>Instance Metadata</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide.</i> Passing in this value proves that your
--   task runner is running on an EC2 instance, and ensures the proper AWS
--   Data Pipeline service charges are applied to your pipeline.
--   
--   <a>$sel:workerGroup:PollForTask'</a>, <a>pollForTask_workerGroup</a> -
--   The type of task the task runner is configured to accept and process.
--   The worker group is set as a field on objects in the pipeline when
--   they are created. You can only specify a single value for
--   <tt>workerGroup</tt> in the call to <tt>PollForTask</tt>. There are no
--   wildcard values permitted in <tt>workerGroup</tt>; the string must be
--   an exact, case-sensitive, match.
newPollForTask :: Text -> PollForTask

-- | Contains the output of PollForTask.
--   
--   <i>See:</i> <a>newPollForTaskResponse</a> smart constructor.
data PollForTaskResponse
PollForTaskResponse' :: Maybe TaskObject -> Int -> PollForTaskResponse

-- | Create a value of <a>PollForTaskResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskObject:PollForTaskResponse'</a>,
--   <a>pollForTaskResponse_taskObject</a> - The information needed to
--   complete the task that is being assigned to the task runner. One of
--   the fields returned in this object is <tt>taskId</tt>, which contains
--   an identifier for the task being assigned. The calling task runner
--   uses <tt>taskId</tt> in subsequent calls to ReportTaskProgress and
--   SetTaskStatus.
--   
--   <a>$sel:httpStatus:PollForTaskResponse'</a>,
--   <a>pollForTaskResponse_httpStatus</a> - The response's http status
--   code.
newPollForTaskResponse :: Int -> PollForTaskResponse

-- | Contains the parameters for ValidatePipelineDefinition.
--   
--   <i>See:</i> <a>newValidatePipelineDefinition</a> smart constructor.
data ValidatePipelineDefinition
ValidatePipelineDefinition' :: Maybe [ParameterValue] -> Maybe [ParameterObject] -> Text -> [PipelineObject] -> ValidatePipelineDefinition

-- | Create a value of <a>ValidatePipelineDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValues:ValidatePipelineDefinition'</a>,
--   <a>validatePipelineDefinition_parameterValues</a> - The parameter
--   values used with the pipeline.
--   
--   <a>$sel:parameterObjects:ValidatePipelineDefinition'</a>,
--   <a>validatePipelineDefinition_parameterObjects</a> - The parameter
--   objects used with the pipeline.
--   
--   <a>$sel:pipelineId:ValidatePipelineDefinition'</a>,
--   <a>validatePipelineDefinition_pipelineId</a> - The ID of the pipeline.
--   
--   <a>$sel:pipelineObjects:ValidatePipelineDefinition'</a>,
--   <a>validatePipelineDefinition_pipelineObjects</a> - The objects that
--   define the pipeline changes to validate against the pipeline.
newValidatePipelineDefinition :: Text -> ValidatePipelineDefinition

-- | Contains the output of ValidatePipelineDefinition.
--   
--   <i>See:</i> <a>newValidatePipelineDefinitionResponse</a> smart
--   constructor.
data ValidatePipelineDefinitionResponse
ValidatePipelineDefinitionResponse' :: Maybe [ValidationError] -> Maybe [ValidationWarning] -> Int -> Bool -> ValidatePipelineDefinitionResponse

-- | Create a value of <a>ValidatePipelineDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validationErrors:ValidatePipelineDefinitionResponse'</a>,
--   <a>validatePipelineDefinitionResponse_validationErrors</a> - Any
--   validation errors that were found.
--   
--   <a>$sel:validationWarnings:ValidatePipelineDefinitionResponse'</a>,
--   <a>validatePipelineDefinitionResponse_validationWarnings</a> - Any
--   validation warnings that were found.
--   
--   <a>$sel:httpStatus:ValidatePipelineDefinitionResponse'</a>,
--   <a>validatePipelineDefinitionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:errored:ValidatePipelineDefinitionResponse'</a>,
--   <a>validatePipelineDefinitionResponse_errored</a> - Indicates whether
--   there were validation errors.
newValidatePipelineDefinitionResponse :: Int -> Bool -> ValidatePipelineDefinitionResponse

-- | Contains the parameters for GetPipelineDefinition.
--   
--   <i>See:</i> <a>newGetPipelineDefinition</a> smart constructor.
data GetPipelineDefinition
GetPipelineDefinition' :: Maybe Text -> Text -> GetPipelineDefinition

-- | Create a value of <a>GetPipelineDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:version:GetPipelineDefinition'</a>,
--   <a>getPipelineDefinition_version</a> - The version of the pipeline
--   definition to retrieve. Set this parameter to <tt>latest</tt>
--   (default) to use the last definition saved to the pipeline or
--   <tt>active</tt> to use the last definition that was activated.
--   
--   <a>$sel:pipelineId:GetPipelineDefinition'</a>,
--   <a>getPipelineDefinition_pipelineId</a> - The ID of the pipeline.
newGetPipelineDefinition :: Text -> GetPipelineDefinition

-- | Contains the output of GetPipelineDefinition.
--   
--   <i>See:</i> <a>newGetPipelineDefinitionResponse</a> smart constructor.
data GetPipelineDefinitionResponse
GetPipelineDefinitionResponse' :: Maybe [ParameterValue] -> Maybe [ParameterObject] -> Maybe [PipelineObject] -> Int -> GetPipelineDefinitionResponse

-- | Create a value of <a>GetPipelineDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValues:GetPipelineDefinitionResponse'</a>,
--   <a>getPipelineDefinitionResponse_parameterValues</a> - The parameter
--   values used in the pipeline definition.
--   
--   <a>$sel:parameterObjects:GetPipelineDefinitionResponse'</a>,
--   <a>getPipelineDefinitionResponse_parameterObjects</a> - The parameter
--   objects used in the pipeline definition.
--   
--   <a>$sel:pipelineObjects:GetPipelineDefinitionResponse'</a>,
--   <a>getPipelineDefinitionResponse_pipelineObjects</a> - The objects
--   defined in the pipeline.
--   
--   <a>$sel:httpStatus:GetPipelineDefinitionResponse'</a>,
--   <a>getPipelineDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetPipelineDefinitionResponse :: Int -> GetPipelineDefinitionResponse

-- | Contains the parameters for PutPipelineDefinition.
--   
--   <i>See:</i> <a>newPutPipelineDefinition</a> smart constructor.
data PutPipelineDefinition
PutPipelineDefinition' :: Maybe [ParameterValue] -> Maybe [ParameterObject] -> Text -> [PipelineObject] -> PutPipelineDefinition

-- | Create a value of <a>PutPipelineDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValues:PutPipelineDefinition'</a>,
--   <a>putPipelineDefinition_parameterValues</a> - The parameter values
--   used with the pipeline.
--   
--   <a>$sel:parameterObjects:PutPipelineDefinition'</a>,
--   <a>putPipelineDefinition_parameterObjects</a> - The parameter objects
--   used with the pipeline.
--   
--   <a>$sel:pipelineId:PutPipelineDefinition'</a>,
--   <a>putPipelineDefinition_pipelineId</a> - The ID of the pipeline.
--   
--   <a>$sel:pipelineObjects:PutPipelineDefinition'</a>,
--   <a>putPipelineDefinition_pipelineObjects</a> - The objects that define
--   the pipeline. These objects overwrite the existing pipeline
--   definition.
newPutPipelineDefinition :: Text -> PutPipelineDefinition

-- | Contains the output of PutPipelineDefinition.
--   
--   <i>See:</i> <a>newPutPipelineDefinitionResponse</a> smart constructor.
data PutPipelineDefinitionResponse
PutPipelineDefinitionResponse' :: Maybe [ValidationError] -> Maybe [ValidationWarning] -> Int -> Bool -> PutPipelineDefinitionResponse

-- | Create a value of <a>PutPipelineDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:validationErrors:PutPipelineDefinitionResponse'</a>,
--   <a>putPipelineDefinitionResponse_validationErrors</a> - The validation
--   errors that are associated with the objects defined in
--   <tt>pipelineObjects</tt>.
--   
--   <a>$sel:validationWarnings:PutPipelineDefinitionResponse'</a>,
--   <a>putPipelineDefinitionResponse_validationWarnings</a> - The
--   validation warnings that are associated with the objects defined in
--   <tt>pipelineObjects</tt>.
--   
--   <a>$sel:httpStatus:PutPipelineDefinitionResponse'</a>,
--   <a>putPipelineDefinitionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:errored:PutPipelineDefinitionResponse'</a>,
--   <a>putPipelineDefinitionResponse_errored</a> - Indicates whether there
--   were validation errors, and the pipeline definition is stored but
--   cannot be activated until you correct the pipeline and call
--   <tt>PutPipelineDefinition</tt> to commit the corrected pipeline.
newPutPipelineDefinitionResponse :: Int -> Bool -> PutPipelineDefinitionResponse

-- | Contains the parameters for SetStatus.
--   
--   <i>See:</i> <a>newSetStatus</a> smart constructor.
data SetStatus
SetStatus' :: Text -> [Text] -> Text -> SetStatus

-- | Create a value of <a>SetStatus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:SetStatus'</a>, <a>setStatus_pipelineId</a> - The
--   ID of the pipeline that contains the objects.
--   
--   <a>$sel:objectIds:SetStatus'</a>, <a>setStatus_objectIds</a> - The IDs
--   of the objects. The corresponding objects can be either physical or
--   components, but not a mix of both types.
--   
--   <a>$sel:status:SetStatus'</a>, <a>setStatus_status</a> - The status to
--   be set on all the objects specified in <tt>objectIds</tt>. For
--   components, use <tt>PAUSE</tt> or <tt>RESUME</tt>. For instances, use
--   <tt>TRY_CANCEL</tt>, <tt>RERUN</tt>, or <tt>MARK_FINISHED</tt>.
newSetStatus :: Text -> Text -> SetStatus

-- | <i>See:</i> <a>newSetStatusResponse</a> smart constructor.
data SetStatusResponse
SetStatusResponse' :: SetStatusResponse

-- | Create a value of <a>SetStatusResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetStatusResponse :: SetStatusResponse

-- | Contains the parameters for ListPipelines.
--   
--   <i>See:</i> <a>newListPipelines</a> smart constructor.
data ListPipelines
ListPipelines' :: Maybe Text -> ListPipelines

-- | Create a value of <a>ListPipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListPipelines'</a>, <a>listPipelines_marker</a> - The
--   starting point for the results to be returned. For the first call,
--   this value should be empty. As long as there are more results,
--   continue to call <tt>ListPipelines</tt> with the marker value from the
--   previous call to retrieve the next set of results.
newListPipelines :: ListPipelines

-- | Contains the output of ListPipelines.
--   
--   <i>See:</i> <a>newListPipelinesResponse</a> smart constructor.
data ListPipelinesResponse
ListPipelinesResponse' :: Maybe Bool -> Maybe Text -> Int -> [PipelineIdName] -> ListPipelinesResponse

-- | Create a value of <a>ListPipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hasMoreResults:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_hasMoreResults</a> - Indicates whether there
--   are more results that can be obtained by a subsequent call.
--   
--   <a>$sel:marker:ListPipelines'</a>, <a>listPipelinesResponse_marker</a>
--   - The starting point for the next page of results. To view the next
--   page of results, call <tt>ListPipelinesOutput</tt> again with this
--   marker value. If the value is null, there are no more results.
--   
--   <a>$sel:httpStatus:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:pipelineIdList:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_pipelineIdList</a> - The pipeline
--   identifiers. If you require additional information about the
--   pipelines, you can use these identifiers to call DescribePipelines and
--   GetPipelineDefinition.
newListPipelinesResponse :: Int -> ListPipelinesResponse

-- | Contains the parameters for ActivatePipeline.
--   
--   <i>See:</i> <a>newActivatePipeline</a> smart constructor.
data ActivatePipeline
ActivatePipeline' :: Maybe [ParameterValue] -> Maybe POSIX -> Text -> ActivatePipeline

-- | Create a value of <a>ActivatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValues:ActivatePipeline'</a>,
--   <a>activatePipeline_parameterValues</a> - A list of parameter values
--   to pass to the pipeline at activation.
--   
--   <a>$sel:startTimestamp:ActivatePipeline'</a>,
--   <a>activatePipeline_startTimestamp</a> - The date and time to resume
--   the pipeline. By default, the pipeline resumes from the last completed
--   execution.
--   
--   <a>$sel:pipelineId:ActivatePipeline'</a>,
--   <a>activatePipeline_pipelineId</a> - The ID of the pipeline.
newActivatePipeline :: Text -> ActivatePipeline

-- | Contains the output of ActivatePipeline.
--   
--   <i>See:</i> <a>newActivatePipelineResponse</a> smart constructor.
data ActivatePipelineResponse
ActivatePipelineResponse' :: Int -> ActivatePipelineResponse

-- | Create a value of <a>ActivatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ActivatePipelineResponse'</a>,
--   <a>activatePipelineResponse_httpStatus</a> - The response's http
--   status code.
newActivatePipelineResponse :: Int -> ActivatePipelineResponse

-- | Contains the parameters for DeactivatePipeline.
--   
--   <i>See:</i> <a>newDeactivatePipeline</a> smart constructor.
data DeactivatePipeline
DeactivatePipeline' :: Maybe Bool -> Text -> DeactivatePipeline

-- | Create a value of <a>DeactivatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cancelActive:DeactivatePipeline'</a>,
--   <a>deactivatePipeline_cancelActive</a> - Indicates whether to cancel
--   any running objects. The default is true, which sets the state of any
--   running objects to <tt>CANCELED</tt>. If this value is false, the
--   pipeline is deactivated after all running objects finish.
--   
--   <a>$sel:pipelineId:DeactivatePipeline'</a>,
--   <a>deactivatePipeline_pipelineId</a> - The ID of the pipeline.
newDeactivatePipeline :: Text -> DeactivatePipeline

-- | Contains the output of DeactivatePipeline.
--   
--   <i>See:</i> <a>newDeactivatePipelineResponse</a> smart constructor.
data DeactivatePipelineResponse
DeactivatePipelineResponse' :: Int -> DeactivatePipelineResponse

-- | Create a value of <a>DeactivatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeactivatePipelineResponse'</a>,
--   <a>deactivatePipelineResponse_httpStatus</a> - The response's http
--   status code.
newDeactivatePipelineResponse :: Int -> DeactivatePipelineResponse
newtype OperatorType
OperatorType' :: Text -> OperatorType
[fromOperatorType] :: OperatorType -> Text
pattern OperatorType_BETWEEN :: OperatorType
pattern OperatorType_EQ :: OperatorType
pattern OperatorType_GE :: OperatorType
pattern OperatorType_LE :: OperatorType
pattern OperatorType_REF_EQ :: OperatorType
newtype TaskStatus
TaskStatus' :: Text -> TaskStatus
[fromTaskStatus] :: TaskStatus -> Text
pattern TaskStatus_FAILED :: TaskStatus
pattern TaskStatus_FALSE :: TaskStatus
pattern TaskStatus_FINISHED :: TaskStatus

-- | A key-value pair that describes a property of a pipeline object. The
--   value is specified as either a string value (<tt>StringValue</tt>) or
--   a reference to another object (<tt>RefValue</tt>) but not as both.
--   
--   <i>See:</i> <a>newField</a> smart constructor.
data Field
Field' :: Maybe Text -> Maybe Text -> Text -> Field

-- | Create a value of <a>Field</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stringValue:Field'</a>, <a>field_stringValue</a> - The field
--   value, expressed as a String.
--   
--   <a>$sel:refValue:Field'</a>, <a>field_refValue</a> - The field value,
--   expressed as the identifier of another object.
--   
--   <a>$sel:key:Field'</a>, <a>field_key</a> - The field identifier.
newField :: Text -> Field

-- | Identity information for the EC2 instance that is hosting the task
--   runner. You can get this value by calling a metadata URI from the EC2
--   instance. For more information, see <a>Instance Metadata</a> in the
--   <i>Amazon Elastic Compute Cloud User Guide.</i> Passing in this value
--   proves that your task runner is running on an EC2 instance, and
--   ensures the proper AWS Data Pipeline service charges are applied to
--   your pipeline.
--   
--   <i>See:</i> <a>newInstanceIdentity</a> smart constructor.
data InstanceIdentity
InstanceIdentity' :: Maybe Text -> Maybe Text -> InstanceIdentity

-- | Create a value of <a>InstanceIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:document:InstanceIdentity'</a>,
--   <a>instanceIdentity_document</a> - A description of an EC2 instance
--   that is generated when the instance is launched and exposed to the
--   instance via the instance metadata service in the form of a JSON
--   representation of an object.
--   
--   <a>$sel:signature:InstanceIdentity'</a>,
--   <a>instanceIdentity_signature</a> - A signature which can be used to
--   verify the accuracy and authenticity of the information provided in
--   the instance identity document.
newInstanceIdentity :: InstanceIdentity

-- | Contains a logical operation for comparing the value of a field with a
--   specified value.
--   
--   <i>See:</i> <a>newOperator</a> smart constructor.
data Operator
Operator' :: Maybe [Text] -> Maybe OperatorType -> Operator

-- | Create a value of <a>Operator</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Operator'</a>, <a>operator_values</a> - The value that
--   the actual field value will be compared with.
--   
--   <a>$sel:type':Operator'</a>, <a>operator_type</a> - The logical
--   operation to be performed: equal (<tt>EQ</tt>), equal reference
--   (<tt>REF_EQ</tt>), less than or equal (<tt>LE</tt>), greater than or
--   equal (<tt>GE</tt>), or between (<tt>BETWEEN</tt>). Equal reference
--   (<tt>REF_EQ</tt>) can be used only with reference fields. The other
--   comparison types can be used only with String fields. The comparison
--   types you can use apply only to certain object fields, as detailed
--   below.
--   
--   The comparison operators EQ and REF_EQ act on the following fields:
--   
--   <ul>
--   <li>name</li>
--   <li>@sphere</li>
--   <li>parent</li>
--   <li>@componentParent</li>
--   <li>@instanceParent</li>
--   <li>@status</li>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   The comparison operators <tt>GE</tt>, <tt>LE</tt>, and
--   <tt>BETWEEN</tt> act on the following fields:
--   
--   <ul>
--   <li>@scheduledStartTime</li>
--   <li>@scheduledEndTime</li>
--   <li>@actualStartTime</li>
--   <li>@actualEndTime</li>
--   </ul>
--   
--   Note that fields beginning with the at sign (@) are read-only and set
--   by the web service. When you name fields, you should choose names
--   containing only alpha-numeric values, as symbols may be reserved by
--   AWS Data Pipeline. User-defined fields that you add to a pipeline
--   should prefix their name with the string "my".
newOperator :: Operator

-- | The attributes allowed or specified with a parameter object.
--   
--   <i>See:</i> <a>newParameterAttribute</a> smart constructor.
data ParameterAttribute
ParameterAttribute' :: Text -> Text -> ParameterAttribute

-- | Create a value of <a>ParameterAttribute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:ParameterAttribute'</a>, <a>parameterAttribute_key</a> -
--   The field identifier.
--   
--   <a>$sel:stringValue:ParameterAttribute'</a>,
--   <a>parameterAttribute_stringValue</a> - The field value, expressed as
--   a String.
newParameterAttribute :: Text -> Text -> ParameterAttribute

-- | Contains information about a parameter object.
--   
--   <i>See:</i> <a>newParameterObject</a> smart constructor.
data ParameterObject
ParameterObject' :: Text -> [ParameterAttribute] -> ParameterObject

-- | Create a value of <a>ParameterObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ParameterObject'</a>, <a>parameterObject_id</a> - The ID of
--   the parameter object.
--   
--   <a>$sel:attributes:ParameterObject'</a>,
--   <a>parameterObject_attributes</a> - The attributes of the parameter
--   object.
newParameterObject :: Text -> ParameterObject

-- | A value or list of parameter values.
--   
--   <i>See:</i> <a>newParameterValue</a> smart constructor.
data ParameterValue
ParameterValue' :: Text -> Text -> ParameterValue

-- | Create a value of <a>ParameterValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ParameterValue'</a>, <a>parameterValue_id</a> - The ID of
--   the parameter value.
--   
--   <a>$sel:stringValue:ParameterValue'</a>,
--   <a>parameterValue_stringValue</a> - The field value, expressed as a
--   String.
newParameterValue :: Text -> Text -> ParameterValue

-- | Contains pipeline metadata.
--   
--   <i>See:</i> <a>newPipelineDescription</a> smart constructor.
data PipelineDescription
PipelineDescription' :: Maybe [Tag] -> Maybe Text -> Text -> Text -> [Field] -> PipelineDescription

-- | Create a value of <a>PipelineDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PipelineDescription'</a>, <a>pipelineDescription_tags</a>
--   - A list of tags to associated with a pipeline. Tags let you control
--   access to pipelines. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
--   
--   <a>$sel:description:PipelineDescription'</a>,
--   <a>pipelineDescription_description</a> - Description of the pipeline.
--   
--   <a>$sel:pipelineId:PipelineDescription'</a>,
--   <a>pipelineDescription_pipelineId</a> - The pipeline identifier that
--   was assigned by AWS Data Pipeline. This is a string of the form
--   <tt>df-297EG78HU43EEXAMPLE</tt>.
--   
--   <a>$sel:name:PipelineDescription'</a>, <a>pipelineDescription_name</a>
--   - The name of the pipeline.
--   
--   <a>$sel:fields:PipelineDescription'</a>,
--   <a>pipelineDescription_fields</a> - A list of read-only fields that
--   contain metadata about the pipeline: @userId, @accountId, and
--   @pipelineState.
newPipelineDescription :: Text -> Text -> PipelineDescription

-- | Contains the name and identifier of a pipeline.
--   
--   <i>See:</i> <a>newPipelineIdName</a> smart constructor.
data PipelineIdName
PipelineIdName' :: Maybe Text -> Maybe Text -> PipelineIdName

-- | Create a value of <a>PipelineIdName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:PipelineIdName'</a>, <a>pipelineIdName_id</a> - The ID of
--   the pipeline that was assigned by AWS Data Pipeline. This is a string
--   of the form <tt>df-297EG78HU43EEXAMPLE</tt>.
--   
--   <a>$sel:name:PipelineIdName'</a>, <a>pipelineIdName_name</a> - The
--   name of the pipeline.
newPipelineIdName :: PipelineIdName

-- | Contains information about a pipeline object. This can be a logical,
--   physical, or physical attempt pipeline object. The complete set of
--   components of a pipeline defines the pipeline.
--   
--   <i>See:</i> <a>newPipelineObject</a> smart constructor.
data PipelineObject
PipelineObject' :: Text -> Text -> [Field] -> PipelineObject

-- | Create a value of <a>PipelineObject</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:PipelineObject'</a>, <a>pipelineObject_id</a> - The ID of
--   the object.
--   
--   <a>$sel:name:PipelineObject'</a>, <a>pipelineObject_name</a> - The
--   name of the object.
--   
--   <a>$sel:fields:PipelineObject'</a>, <a>pipelineObject_fields</a> -
--   Key-value pairs that define the properties of the object.
newPipelineObject :: Text -> Text -> PipelineObject

-- | Defines the query to run against an object.
--   
--   <i>See:</i> <a>newQuery</a> smart constructor.
data Query
Query' :: Maybe [Selector] -> Query

-- | Create a value of <a>Query</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectors:Query'</a>, <a>query_selectors</a> - List of
--   selectors that define the query. An object must satisfy all of the
--   selectors to match the query.
newQuery :: Query

-- | A comparision that is used to determine whether a query should return
--   this object.
--   
--   <i>See:</i> <a>newSelector</a> smart constructor.
data Selector
Selector' :: Maybe Operator -> Maybe Text -> Selector

-- | Create a value of <a>Selector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:operator:Selector'</a>, <a>selector_operator</a> -
--   Undocumented member.
--   
--   <a>$sel:fieldName:Selector'</a>, <a>selector_fieldName</a> - The name
--   of the field that the operator will be applied to. The field name is
--   the "key" portion of the field definition in the pipeline definition
--   syntax that is used by the AWS Data Pipeline API. If the field is not
--   set on the object, the condition fails.
newSelector :: Selector

-- | Tags are key/value pairs defined by a user and associated with a
--   pipeline to control access. AWS Data Pipeline allows you to associate
--   ten tags per pipeline. For more information, see <a>Controlling User
--   Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key name of a tag defined
--   by a user. For more information, see <a>Controlling User Access to
--   Pipelines</a> in the <i>AWS Data Pipeline Developer Guide</i>.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The optional value portion
--   of a tag defined by a user. For more information, see <a>Controlling
--   User Access to Pipelines</a> in the <i>AWS Data Pipeline Developer
--   Guide</i>.
newTag :: Text -> Text -> Tag

-- | Contains information about a pipeline task that is assigned to a task
--   runner.
--   
--   <i>See:</i> <a>newTaskObject</a> smart constructor.
data TaskObject
TaskObject' :: Maybe Text -> Maybe (HashMap Text PipelineObject) -> Maybe Text -> Maybe Text -> TaskObject

-- | Create a value of <a>TaskObject</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineId:TaskObject'</a>, <a>taskObject_pipelineId</a> - The
--   ID of the pipeline that provided the task.
--   
--   <a>$sel:objects:TaskObject'</a>, <a>taskObject_objects</a> -
--   Connection information for the location where the task runner will
--   publish the output of the task.
--   
--   <a>$sel:taskId:TaskObject'</a>, <a>taskObject_taskId</a> - An internal
--   identifier for the task. This ID is passed to the SetTaskStatus and
--   ReportTaskProgress actions.
--   
--   <a>$sel:attemptId:TaskObject'</a>, <a>taskObject_attemptId</a> - The
--   ID of the pipeline task attempt object. AWS Data Pipeline uses this
--   value to track how many times a task is attempted.
newTaskObject :: TaskObject

-- | Defines a validation error. Validation errors prevent pipeline
--   activation. The set of validation errors that can be returned are
--   defined by AWS Data Pipeline.
--   
--   <i>See:</i> <a>newValidationError</a> smart constructor.
data ValidationError
ValidationError' :: Maybe Text -> Maybe [Text] -> ValidationError

-- | Create a value of <a>ValidationError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:ValidationError'</a>, <a>validationError_id</a> - The
--   identifier of the object that contains the validation error.
--   
--   <a>$sel:errors:ValidationError'</a>, <a>validationError_errors</a> - A
--   description of the validation error.
newValidationError :: ValidationError

-- | Defines a validation warning. Validation warnings do not prevent
--   pipeline activation. The set of validation warnings that can be
--   returned are defined by AWS Data Pipeline.
--   
--   <i>See:</i> <a>newValidationWarning</a> smart constructor.
data ValidationWarning
ValidationWarning' :: Maybe [Text] -> Maybe Text -> ValidationWarning

-- | Create a value of <a>ValidationWarning</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:warnings:ValidationWarning'</a>,
--   <a>validationWarning_warnings</a> - A description of the validation
--   warning.
--   
--   <a>$sel:id:ValidationWarning'</a>, <a>validationWarning_id</a> - The
--   identifier of the object that contains the validation warning.
newValidationWarning :: ValidationWarning
