-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-dynamodb-daxZSamazonka-dynamodb-dax
@version 1.6.1


module Network.AWS.DAX.Types.ChangeType
newtype ChangeType
ChangeType' :: Text -> ChangeType
[fromChangeType] :: ChangeType -> Text
pattern ChangeType_IMMEDIATE :: ChangeType
pattern ChangeType_REQUIRES_REBOOT :: ChangeType
instance Network.AWS.Data.XML.ToXML Network.AWS.DAX.Types.ChangeType.ChangeType
instance Network.AWS.Data.XML.FromXML Network.AWS.DAX.Types.ChangeType.ChangeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DAX.Types.ChangeType.ChangeType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.ChangeType.ChangeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DAX.Types.ChangeType.ChangeType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.ChangeType.ChangeType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.Types.ChangeType.ChangeType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DAX.Types.ChangeType.ChangeType
instance Network.AWS.Data.Log.ToLog Network.AWS.DAX.Types.ChangeType.ChangeType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DAX.Types.ChangeType.ChangeType
instance Network.AWS.Data.Text.ToText Network.AWS.DAX.Types.ChangeType.ChangeType
instance Network.AWS.Data.Text.FromText Network.AWS.DAX.Types.ChangeType.ChangeType
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.ChangeType.ChangeType
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.ChangeType.ChangeType
instance GHC.Generics.Generic Network.AWS.DAX.Types.ChangeType.ChangeType
instance GHC.Classes.Ord Network.AWS.DAX.Types.ChangeType.ChangeType
instance GHC.Classes.Eq Network.AWS.DAX.Types.ChangeType.ChangeType
instance GHC.Read.Read Network.AWS.DAX.Types.ChangeType.ChangeType
instance GHC.Show.Show Network.AWS.DAX.Types.ChangeType.ChangeType


module Network.AWS.DAX.Types.ClusterEndpointEncryptionType
newtype ClusterEndpointEncryptionType
ClusterEndpointEncryptionType' :: Text -> ClusterEndpointEncryptionType
[fromClusterEndpointEncryptionType] :: ClusterEndpointEncryptionType -> Text
pattern ClusterEndpointEncryptionType_NONE :: ClusterEndpointEncryptionType
pattern ClusterEndpointEncryptionType_TLS :: ClusterEndpointEncryptionType
instance Network.AWS.Data.XML.ToXML Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Network.AWS.Data.XML.FromXML Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Network.AWS.Data.Log.ToLog Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Network.AWS.Data.Text.ToText Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Network.AWS.Data.Text.FromText Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance GHC.Generics.Generic Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance GHC.Classes.Ord Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance GHC.Classes.Eq Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance GHC.Read.Read Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType
instance GHC.Show.Show Network.AWS.DAX.Types.ClusterEndpointEncryptionType.ClusterEndpointEncryptionType


module Network.AWS.DAX.Types.Endpoint

-- | Represents the information required for client programs to connect to
--   the endpoint for a DAX cluster.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Maybe Text -> Endpoint

-- | The DNS hostname of the endpoint.
[$sel:address:Endpoint'] :: Endpoint -> Maybe Text

-- | The port number that applications should use to connect to the
--   endpoint.
[$sel:port:Endpoint'] :: Endpoint -> Maybe Int

-- | The URL that applications should use to connect to the endpoint. The
--   default ports are 8111 for the "dax" protocol and 9111 for the "daxs"
--   protocol.
[$sel:url:Endpoint'] :: Endpoint -> Maybe Text

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the endpoint.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that applications should use to connect to the endpoint.
--   
--   <a>$sel:url:Endpoint'</a>, <a>endpoint_url</a> - The URL that
--   applications should use to connect to the endpoint. The default ports
--   are 8111 for the "dax" protocol and 9111 for the "daxs" protocol.
newEndpoint :: Endpoint

-- | The DNS hostname of the endpoint.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that applications should use to connect to the
--   endpoint.
endpoint_port :: Lens' Endpoint (Maybe Int)

-- | The URL that applications should use to connect to the endpoint. The
--   default ports are 8111 for the "dax" protocol and 9111 for the "daxs"
--   protocol.
endpoint_url :: Lens' Endpoint (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.Endpoint.Endpoint
instance GHC.Show.Show Network.AWS.DAX.Types.Endpoint.Endpoint
instance GHC.Read.Read Network.AWS.DAX.Types.Endpoint.Endpoint
instance GHC.Classes.Eq Network.AWS.DAX.Types.Endpoint.Endpoint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.Endpoint.Endpoint
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.Endpoint.Endpoint
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.Endpoint.Endpoint


module Network.AWS.DAX.Types.IsModifiable
newtype IsModifiable
IsModifiable' :: Text -> IsModifiable
[fromIsModifiable] :: IsModifiable -> Text
pattern IsModifiable_CONDITIONAL :: IsModifiable
pattern IsModifiable_FALSE :: IsModifiable
pattern IsModifiable_TRUE :: IsModifiable
instance Network.AWS.Data.XML.ToXML Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Network.AWS.Data.XML.FromXML Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Network.AWS.Data.Log.ToLog Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Network.AWS.Data.Text.ToText Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Network.AWS.Data.Text.FromText Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance GHC.Generics.Generic Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance GHC.Classes.Ord Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance GHC.Classes.Eq Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance GHC.Read.Read Network.AWS.DAX.Types.IsModifiable.IsModifiable
instance GHC.Show.Show Network.AWS.DAX.Types.IsModifiable.IsModifiable


module Network.AWS.DAX.Types.Node

-- | Represents an individual node within a DAX cluster.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Endpoint -> Node

-- | The current status of the node. For example: <tt>available</tt>.
[$sel:nodeStatus:Node'] :: Node -> Maybe Text

-- | A system-generated identifier for the node.
[$sel:nodeId:Node'] :: Node -> Maybe Text

-- | The status of the parameter group associated with this node. For
--   example, <tt>in-sync</tt>.
[$sel:parameterGroupStatus:Node'] :: Node -> Maybe Text

-- | The Availability Zone (AZ) in which the node has been deployed.
[$sel:availabilityZone:Node'] :: Node -> Maybe Text

-- | The date and time (in UNIX epoch format) when the node was launched.
[$sel:nodeCreateTime:Node'] :: Node -> Maybe POSIX

-- | The endpoint for the node, consisting of a DNS name and a port number.
--   Client applications can connect directly to a node endpoint, if
--   desired (as an alternative to allowing DAX client software to
--   intelligently route requests and responses to nodes in the DAX
--   cluster.
[$sel:endpoint:Node'] :: Node -> Maybe Endpoint

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeStatus:Node'</a>, <a>node_nodeStatus</a> - The current
--   status of the node. For example: <tt>available</tt>.
--   
--   <a>$sel:nodeId:Node'</a>, <a>node_nodeId</a> - A system-generated
--   identifier for the node.
--   
--   <a>$sel:parameterGroupStatus:Node'</a>,
--   <a>node_parameterGroupStatus</a> - The status of the parameter group
--   associated with this node. For example, <tt>in-sync</tt>.
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone (AZ) in which the node has been deployed.
--   
--   <a>$sel:nodeCreateTime:Node'</a>, <a>node_nodeCreateTime</a> - The
--   date and time (in UNIX epoch format) when the node was launched.
--   
--   <a>$sel:endpoint:Node'</a>, <a>node_endpoint</a> - The endpoint for
--   the node, consisting of a DNS name and a port number. Client
--   applications can connect directly to a node endpoint, if desired (as
--   an alternative to allowing DAX client software to intelligently route
--   requests and responses to nodes in the DAX cluster.
newNode :: Node

-- | The current status of the node. For example: <tt>available</tt>.
node_nodeStatus :: Lens' Node (Maybe Text)

-- | A system-generated identifier for the node.
node_nodeId :: Lens' Node (Maybe Text)

-- | The status of the parameter group associated with this node. For
--   example, <tt>in-sync</tt>.
node_parameterGroupStatus :: Lens' Node (Maybe Text)

-- | The Availability Zone (AZ) in which the node has been deployed.
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The date and time (in UNIX epoch format) when the node was launched.
node_nodeCreateTime :: Lens' Node (Maybe UTCTime)

-- | The endpoint for the node, consisting of a DNS name and a port number.
--   Client applications can connect directly to a node endpoint, if
--   desired (as an alternative to allowing DAX client software to
--   intelligently route requests and responses to nodes in the DAX
--   cluster.
node_endpoint :: Lens' Node (Maybe Endpoint)
instance GHC.Generics.Generic Network.AWS.DAX.Types.Node.Node
instance GHC.Show.Show Network.AWS.DAX.Types.Node.Node
instance GHC.Read.Read Network.AWS.DAX.Types.Node.Node
instance GHC.Classes.Eq Network.AWS.DAX.Types.Node.Node
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.Node.Node
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.Node.Node
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.Node.Node


module Network.AWS.DAX.Types.NodeTypeSpecificValue

-- | Represents a parameter value that is applicable to a particular node
--   type.
--   
--   <i>See:</i> <a>newNodeTypeSpecificValue</a> smart constructor.
data NodeTypeSpecificValue
NodeTypeSpecificValue' :: Maybe Text -> Maybe Text -> NodeTypeSpecificValue

-- | The parameter value for this node type.
[$sel:value:NodeTypeSpecificValue'] :: NodeTypeSpecificValue -> Maybe Text

-- | A node type to which the parameter value applies.
[$sel:nodeType:NodeTypeSpecificValue'] :: NodeTypeSpecificValue -> Maybe Text

-- | Create a value of <a>NodeTypeSpecificValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:NodeTypeSpecificValue'</a>,
--   <a>nodeTypeSpecificValue_value</a> - The parameter value for this node
--   type.
--   
--   <a>$sel:nodeType:NodeTypeSpecificValue'</a>,
--   <a>nodeTypeSpecificValue_nodeType</a> - A node type to which the
--   parameter value applies.
newNodeTypeSpecificValue :: NodeTypeSpecificValue

-- | The parameter value for this node type.
nodeTypeSpecificValue_value :: Lens' NodeTypeSpecificValue (Maybe Text)

-- | A node type to which the parameter value applies.
nodeTypeSpecificValue_nodeType :: Lens' NodeTypeSpecificValue (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.NodeTypeSpecificValue.NodeTypeSpecificValue
instance GHC.Show.Show Network.AWS.DAX.Types.NodeTypeSpecificValue.NodeTypeSpecificValue
instance GHC.Read.Read Network.AWS.DAX.Types.NodeTypeSpecificValue.NodeTypeSpecificValue
instance GHC.Classes.Eq Network.AWS.DAX.Types.NodeTypeSpecificValue.NodeTypeSpecificValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.NodeTypeSpecificValue.NodeTypeSpecificValue
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.NodeTypeSpecificValue.NodeTypeSpecificValue
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.NodeTypeSpecificValue.NodeTypeSpecificValue


module Network.AWS.DAX.Types.NotificationConfiguration

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing DAX events to subscribers using Amazon Simple
--   Notification Service (SNS).
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> NotificationConfiguration

-- | The current state of the topic. A value of “active” means that
--   notifications will be sent to the topic. A value of “inactive” means
--   that notifications will not be sent to the topic.
[$sel:topicStatus:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) that identifies the topic.
[$sel:topicArn:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicStatus:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicStatus</a> - The current state of
--   the topic. A value of “active” means that notifications will be sent
--   to the topic. A value of “inactive” means that notifications will not
--   be sent to the topic.
--   
--   <a>$sel:topicArn:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicArn</a> - The Amazon Resource Name
--   (ARN) that identifies the topic.
newNotificationConfiguration :: NotificationConfiguration

-- | The current state of the topic. A value of “active” means that
--   notifications will be sent to the topic. A value of “inactive” means
--   that notifications will not be sent to the topic.
notificationConfiguration_topicStatus :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) that identifies the topic.
notificationConfiguration_topicArn :: Lens' NotificationConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Show.Show Network.AWS.DAX.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Read.Read Network.AWS.DAX.Types.NotificationConfiguration.NotificationConfiguration
instance GHC.Classes.Eq Network.AWS.DAX.Types.NotificationConfiguration.NotificationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.NotificationConfiguration.NotificationConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.NotificationConfiguration.NotificationConfiguration
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.NotificationConfiguration.NotificationConfiguration


module Network.AWS.DAX.Types.ParameterGroup

-- | A named set of parameters that are applied to all of the nodes in a
--   DAX cluster.
--   
--   <i>See:</i> <a>newParameterGroup</a> smart constructor.
data ParameterGroup
ParameterGroup' :: Maybe Text -> Maybe Text -> ParameterGroup

-- | The name of the parameter group.
[$sel:parameterGroupName:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | A description of the parameter group.
[$sel:description:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | Create a value of <a>ParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:ParameterGroup'</a>,
--   <a>parameterGroup_parameterGroupName</a> - The name of the parameter
--   group.
--   
--   <a>$sel:description:ParameterGroup'</a>,
--   <a>parameterGroup_description</a> - A description of the parameter
--   group.
newParameterGroup :: ParameterGroup

-- | The name of the parameter group.
parameterGroup_parameterGroupName :: Lens' ParameterGroup (Maybe Text)

-- | A description of the parameter group.
parameterGroup_description :: Lens' ParameterGroup (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.ParameterGroup.ParameterGroup
instance GHC.Show.Show Network.AWS.DAX.Types.ParameterGroup.ParameterGroup
instance GHC.Read.Read Network.AWS.DAX.Types.ParameterGroup.ParameterGroup
instance GHC.Classes.Eq Network.AWS.DAX.Types.ParameterGroup.ParameterGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.ParameterGroup.ParameterGroup
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.ParameterGroup.ParameterGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.ParameterGroup.ParameterGroup


module Network.AWS.DAX.Types.ParameterGroupStatus

-- | The status of a parameter group.
--   
--   <i>See:</i> <a>newParameterGroupStatus</a> smart constructor.
data ParameterGroupStatus
ParameterGroupStatus' :: Maybe [Text] -> Maybe Text -> Maybe Text -> ParameterGroupStatus

-- | The node IDs of one or more nodes to be rebooted.
[$sel:nodeIdsToReboot:ParameterGroupStatus'] :: ParameterGroupStatus -> Maybe [Text]

-- | The name of the parameter group.
[$sel:parameterGroupName:ParameterGroupStatus'] :: ParameterGroupStatus -> Maybe Text

-- | The status of parameter updates.
[$sel:parameterApplyStatus:ParameterGroupStatus'] :: ParameterGroupStatus -> Maybe Text

-- | Create a value of <a>ParameterGroupStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeIdsToReboot:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_nodeIdsToReboot</a> - The node IDs of one or
--   more nodes to be rebooted.
--   
--   <a>$sel:parameterGroupName:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_parameterGroupName</a> - The name of the
--   parameter group.
--   
--   <a>$sel:parameterApplyStatus:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_parameterApplyStatus</a> - The status of
--   parameter updates.
newParameterGroupStatus :: ParameterGroupStatus

-- | The node IDs of one or more nodes to be rebooted.
parameterGroupStatus_nodeIdsToReboot :: Lens' ParameterGroupStatus (Maybe [Text])

-- | The name of the parameter group.
parameterGroupStatus_parameterGroupName :: Lens' ParameterGroupStatus (Maybe Text)

-- | The status of parameter updates.
parameterGroupStatus_parameterApplyStatus :: Lens' ParameterGroupStatus (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.ParameterGroupStatus.ParameterGroupStatus
instance GHC.Show.Show Network.AWS.DAX.Types.ParameterGroupStatus.ParameterGroupStatus
instance GHC.Read.Read Network.AWS.DAX.Types.ParameterGroupStatus.ParameterGroupStatus
instance GHC.Classes.Eq Network.AWS.DAX.Types.ParameterGroupStatus.ParameterGroupStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.ParameterGroupStatus.ParameterGroupStatus
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.ParameterGroupStatus.ParameterGroupStatus
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.ParameterGroupStatus.ParameterGroupStatus


module Network.AWS.DAX.Types.ParameterNameValue

-- | An individual DAX parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | The value of the parameter.
[$sel:parameterValue:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | The name of the parameter.
[$sel:parameterName:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter.
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter.
newParameterNameValue :: ParameterNameValue

-- | The value of the parameter.
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter.
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.ParameterNameValue.ParameterNameValue
instance GHC.Show.Show Network.AWS.DAX.Types.ParameterNameValue.ParameterNameValue
instance GHC.Read.Read Network.AWS.DAX.Types.ParameterNameValue.ParameterNameValue
instance GHC.Classes.Eq Network.AWS.DAX.Types.ParameterNameValue.ParameterNameValue
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.ParameterNameValue.ParameterNameValue
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.ParameterNameValue.ParameterNameValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.ParameterNameValue.ParameterNameValue


module Network.AWS.DAX.Types.ParameterType
newtype ParameterType
ParameterType' :: Text -> ParameterType
[fromParameterType] :: ParameterType -> Text
pattern ParameterType_DEFAULT :: ParameterType
pattern ParameterType_NODE_TYPE_SPECIFIC :: ParameterType
instance Network.AWS.Data.XML.ToXML Network.AWS.DAX.Types.ParameterType.ParameterType
instance Network.AWS.Data.XML.FromXML Network.AWS.DAX.Types.ParameterType.ParameterType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DAX.Types.ParameterType.ParameterType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.ParameterType.ParameterType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DAX.Types.ParameterType.ParameterType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.ParameterType.ParameterType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.Types.ParameterType.ParameterType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DAX.Types.ParameterType.ParameterType
instance Network.AWS.Data.Log.ToLog Network.AWS.DAX.Types.ParameterType.ParameterType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DAX.Types.ParameterType.ParameterType
instance Network.AWS.Data.Text.ToText Network.AWS.DAX.Types.ParameterType.ParameterType
instance Network.AWS.Data.Text.FromText Network.AWS.DAX.Types.ParameterType.ParameterType
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.ParameterType.ParameterType
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.ParameterType.ParameterType
instance GHC.Generics.Generic Network.AWS.DAX.Types.ParameterType.ParameterType
instance GHC.Classes.Ord Network.AWS.DAX.Types.ParameterType.ParameterType
instance GHC.Classes.Eq Network.AWS.DAX.Types.ParameterType.ParameterType
instance GHC.Read.Read Network.AWS.DAX.Types.ParameterType.ParameterType
instance GHC.Show.Show Network.AWS.DAX.Types.ParameterType.ParameterType


module Network.AWS.DAX.Types.Parameter

-- | Describes an individual setting that controls some aspect of DAX
--   behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe ChangeType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ParameterType -> Maybe Text -> Maybe Text -> Maybe [NodeTypeSpecificValue] -> Maybe Text -> Maybe IsModifiable -> Parameter

-- | The conditions under which changes to this parameter can be applied.
--   For example, <tt>requires-reboot</tt> indicates that a new value for
--   this parameter will only take effect if a node is rebooted.
[$sel:changeType:Parameter'] :: Parameter -> Maybe ChangeType

-- | A range of values within which the parameter can be set.
[$sel:allowedValues:Parameter'] :: Parameter -> Maybe Text

-- | How the parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
[$sel:source:Parameter'] :: Parameter -> Maybe Text

-- | The value for the parameter.
[$sel:parameterValue:Parameter'] :: Parameter -> Maybe Text

-- | Determines whether the parameter can be applied to any nodes, or only
--   nodes of a particular type.
[$sel:parameterType:Parameter'] :: Parameter -> Maybe ParameterType

-- | The name of the parameter.
[$sel:parameterName:Parameter'] :: Parameter -> Maybe Text

-- | A description of the parameter
[$sel:description:Parameter'] :: Parameter -> Maybe Text

-- | A list of node types, and specific parameter values for each node.
[$sel:nodeTypeSpecificValues:Parameter'] :: Parameter -> Maybe [NodeTypeSpecificValue]

-- | The data type of the parameter. For example, <tt>integer</tt>:
[$sel:dataType:Parameter'] :: Parameter -> Maybe Text

-- | Whether the customer is allowed to modify the parameter.
[$sel:isModifiable:Parameter'] :: Parameter -> Maybe IsModifiable

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeType:Parameter'</a>, <a>parameter_changeType</a> - The
--   conditions under which changes to this parameter can be applied. For
--   example, <tt>requires-reboot</tt> indicates that a new value for this
--   parameter will only take effect if a node is rebooted.
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   A range of values within which the parameter can be set.
--   
--   <a>$sel:source:Parameter'</a>, <a>parameter_source</a> - How the
--   parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
--   
--   <a>$sel:parameterValue:Parameter'</a>, <a>parameter_parameterValue</a>
--   - The value for the parameter.
--   
--   <a>$sel:parameterType:Parameter'</a>, <a>parameter_parameterType</a> -
--   Determines whether the parameter can be applied to any nodes, or only
--   nodes of a particular type.
--   
--   <a>$sel:parameterName:Parameter'</a>, <a>parameter_parameterName</a> -
--   The name of the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter
--   
--   <a>$sel:nodeTypeSpecificValues:Parameter'</a>,
--   <a>parameter_nodeTypeSpecificValues</a> - A list of node types, and
--   specific parameter values for each node.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The data
--   type of the parameter. For example, <tt>integer</tt>:
--   
--   <a>$sel:isModifiable:Parameter'</a>, <a>parameter_isModifiable</a> -
--   Whether the customer is allowed to modify the parameter.
newParameter :: Parameter

-- | The conditions under which changes to this parameter can be applied.
--   For example, <tt>requires-reboot</tt> indicates that a new value for
--   this parameter will only take effect if a node is rebooted.
parameter_changeType :: Lens' Parameter (Maybe ChangeType)

-- | A range of values within which the parameter can be set.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | How the parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
parameter_source :: Lens' Parameter (Maybe Text)

-- | The value for the parameter.
parameter_parameterValue :: Lens' Parameter (Maybe Text)

-- | Determines whether the parameter can be applied to any nodes, or only
--   nodes of a particular type.
parameter_parameterType :: Lens' Parameter (Maybe ParameterType)

-- | The name of the parameter.
parameter_parameterName :: Lens' Parameter (Maybe Text)

-- | A description of the parameter
parameter_description :: Lens' Parameter (Maybe Text)

-- | A list of node types, and specific parameter values for each node.
parameter_nodeTypeSpecificValues :: Lens' Parameter (Maybe [NodeTypeSpecificValue])

-- | The data type of the parameter. For example, <tt>integer</tt>:
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | Whether the customer is allowed to modify the parameter.
parameter_isModifiable :: Lens' Parameter (Maybe IsModifiable)
instance GHC.Generics.Generic Network.AWS.DAX.Types.Parameter.Parameter
instance GHC.Show.Show Network.AWS.DAX.Types.Parameter.Parameter
instance GHC.Read.Read Network.AWS.DAX.Types.Parameter.Parameter
instance GHC.Classes.Eq Network.AWS.DAX.Types.Parameter.Parameter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.Parameter.Parameter
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.Parameter.Parameter
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.Parameter.Parameter


module Network.AWS.DAX.Types.SSESpecification

-- | Represents the settings used to enable server-side encryption.
--   
--   <i>See:</i> <a>newSSESpecification</a> smart constructor.
data SSESpecification
SSESpecification' :: Bool -> SSESpecification

-- | Indicates whether server-side encryption is enabled (true) or disabled
--   (false) on the cluster.
[$sel:enabled:SSESpecification'] :: SSESpecification -> Bool

-- | Create a value of <a>SSESpecification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SSESpecification'</a>, <a>sSESpecification_enabled</a>
--   - Indicates whether server-side encryption is enabled (true) or
--   disabled (false) on the cluster.
newSSESpecification :: Bool -> SSESpecification

-- | Indicates whether server-side encryption is enabled (true) or disabled
--   (false) on the cluster.
sSESpecification_enabled :: Lens' SSESpecification Bool
instance GHC.Generics.Generic Network.AWS.DAX.Types.SSESpecification.SSESpecification
instance GHC.Show.Show Network.AWS.DAX.Types.SSESpecification.SSESpecification
instance GHC.Read.Read Network.AWS.DAX.Types.SSESpecification.SSESpecification
instance GHC.Classes.Eq Network.AWS.DAX.Types.SSESpecification.SSESpecification
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.SSESpecification.SSESpecification
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.SSESpecification.SSESpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.SSESpecification.SSESpecification


module Network.AWS.DAX.Types.SSEStatus
newtype SSEStatus
SSEStatus' :: Text -> SSEStatus
[fromSSEStatus] :: SSEStatus -> Text
pattern SSEStatus_DISABLED :: SSEStatus
pattern SSEStatus_DISABLING :: SSEStatus
pattern SSEStatus_ENABLED :: SSEStatus
pattern SSEStatus_ENABLING :: SSEStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Network.AWS.Data.Text.ToText Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Network.AWS.Data.Text.FromText Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance GHC.Generics.Generic Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance GHC.Classes.Ord Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance GHC.Classes.Eq Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance GHC.Read.Read Network.AWS.DAX.Types.SSEStatus.SSEStatus
instance GHC.Show.Show Network.AWS.DAX.Types.SSEStatus.SSEStatus


module Network.AWS.DAX.Types.SSEDescription

-- | The description of the server-side encryption status on the specified
--   DAX cluster.
--   
--   <i>See:</i> <a>newSSEDescription</a> smart constructor.
data SSEDescription
SSEDescription' :: Maybe SSEStatus -> SSEDescription

-- | The current state of server-side encryption:
--   
--   <ul>
--   <li><tt>ENABLING</tt> - Server-side encryption is being enabled.</li>
--   <li><tt>ENABLED</tt> - Server-side encryption is enabled.</li>
--   <li><tt>DISABLING</tt> - Server-side encryption is being
--   disabled.</li>
--   <li><tt>DISABLED</tt> - Server-side encryption is disabled.</li>
--   </ul>
[$sel:status:SSEDescription'] :: SSEDescription -> Maybe SSEStatus

-- | Create a value of <a>SSEDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SSEDescription'</a>, <a>sSEDescription_status</a> - The
--   current state of server-side encryption:
--   
--   <ul>
--   <li><tt>ENABLING</tt> - Server-side encryption is being enabled.</li>
--   <li><tt>ENABLED</tt> - Server-side encryption is enabled.</li>
--   <li><tt>DISABLING</tt> - Server-side encryption is being
--   disabled.</li>
--   <li><tt>DISABLED</tt> - Server-side encryption is disabled.</li>
--   </ul>
newSSEDescription :: SSEDescription

-- | The current state of server-side encryption:
--   
--   <ul>
--   <li><tt>ENABLING</tt> - Server-side encryption is being enabled.</li>
--   <li><tt>ENABLED</tt> - Server-side encryption is enabled.</li>
--   <li><tt>DISABLING</tt> - Server-side encryption is being
--   disabled.</li>
--   <li><tt>DISABLED</tt> - Server-side encryption is disabled.</li>
--   </ul>
sSEDescription_status :: Lens' SSEDescription (Maybe SSEStatus)
instance GHC.Generics.Generic Network.AWS.DAX.Types.SSEDescription.SSEDescription
instance GHC.Show.Show Network.AWS.DAX.Types.SSEDescription.SSEDescription
instance GHC.Read.Read Network.AWS.DAX.Types.SSEDescription.SSEDescription
instance GHC.Classes.Eq Network.AWS.DAX.Types.SSEDescription.SSEDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.SSEDescription.SSEDescription
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.SSEDescription.SSEDescription
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.SSEDescription.SSEDescription


module Network.AWS.DAX.Types.SecurityGroupMembership

-- | An individual VPC security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | The status of this security group.
[$sel:status:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | The unique ID for this security group.
[$sel:securityGroupIdentifier:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of this security
--   group.
--   
--   <a>$sel:securityGroupIdentifier:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupIdentifier</a> - The unique ID
--   for this security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | The status of this security group.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The unique ID for this security group.
securityGroupMembership_securityGroupIdentifier :: Lens' SecurityGroupMembership (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Show.Show Network.AWS.DAX.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Read.Read Network.AWS.DAX.Types.SecurityGroupMembership.SecurityGroupMembership
instance GHC.Classes.Eq Network.AWS.DAX.Types.SecurityGroupMembership.SecurityGroupMembership
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.SecurityGroupMembership.SecurityGroupMembership
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.SecurityGroupMembership.SecurityGroupMembership
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.SecurityGroupMembership.SecurityGroupMembership


module Network.AWS.DAX.Types.Cluster

-- | Contains all of the attributes of a specific DAX cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ParameterGroupStatus -> Maybe ClusterEndpointEncryptionType -> Maybe [Node] -> Maybe NotificationConfiguration -> Maybe [SecurityGroupMembership] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe SSEDescription -> Maybe [Text] -> Maybe Endpoint -> Maybe Text -> Maybe Text -> Cluster

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:Cluster'] :: Cluster -> Maybe Text

-- | The current status of the cluster.
[$sel:status:Cluster'] :: Cluster -> Maybe Text

-- | A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
[$sel:iamRoleArn:Cluster'] :: Cluster -> Maybe Text

-- | The subnet group where the DAX cluster is running.
[$sel:subnetGroup:Cluster'] :: Cluster -> Maybe Text

-- | The total number of nodes in the cluster.
[$sel:totalNodes:Cluster'] :: Cluster -> Maybe Int

-- | The parameter group being used by nodes in the cluster.
[$sel:parameterGroup:Cluster'] :: Cluster -> Maybe ParameterGroupStatus

-- | The type of encryption supported by the cluster's endpoint. Values
--   are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption<tt>TLS</tt> for Transport Layer
--   Security</li>
--   </ul>
[$sel:clusterEndpointEncryptionType:Cluster'] :: Cluster -> Maybe ClusterEndpointEncryptionType

-- | A list of nodes that are currently in the cluster.
[$sel:nodes:Cluster'] :: Cluster -> Maybe [Node]

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing DAX events to subscribers using Amazon Simple
--   Notification Service (SNS).
[$sel:notificationConfiguration:Cluster'] :: Cluster -> Maybe NotificationConfiguration

-- | A list of security groups, and the status of each, for the nodes in
--   the cluster.
[$sel:securityGroups:Cluster'] :: Cluster -> Maybe [SecurityGroupMembership]

-- | The number of nodes in the cluster that are active (i.e., capable of
--   serving requests).
[$sel:activeNodes:Cluster'] :: Cluster -> Maybe Int

-- | A range of time when maintenance of DAX cluster software will be
--   performed. For example: <tt>sun:01:00-sun:09:00</tt>. Cluster
--   maintenance normally takes less than 30 minutes, and is performed
--   automatically within the maintenance window.
[$sel:preferredMaintenanceWindow:Cluster'] :: Cluster -> Maybe Text

-- | The description of the cluster.
[$sel:description:Cluster'] :: Cluster -> Maybe Text

-- | The description of the server-side encryption status on the specified
--   DAX cluster.
[$sel:sSEDescription:Cluster'] :: Cluster -> Maybe SSEDescription

-- | A list of nodes to be removed from the cluster.
[$sel:nodeIdsToRemove:Cluster'] :: Cluster -> Maybe [Text]

-- | The endpoint for this DAX cluster, consisting of a DNS name, a port
--   number, and a URL. Applications should use the URL to configure the
--   DAX client to find their cluster.
[$sel:clusterDiscoveryEndpoint:Cluster'] :: Cluster -> Maybe Endpoint

-- | The node type for the nodes in the cluster. (All nodes in a DAX
--   cluster are of the same type.)
[$sel:nodeType:Cluster'] :: Cluster -> Maybe Text

-- | The name of the DAX cluster.
[$sel:clusterName:Cluster'] :: Cluster -> Maybe Text

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:Cluster'</a>, <a>cluster_clusterArn</a> - The
--   Amazon Resource Name (ARN) that uniquely identifies the cluster.
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The current
--   status of the cluster.
--   
--   <a>$sel:iamRoleArn:Cluster'</a>, <a>cluster_iamRoleArn</a> - A valid
--   Amazon Resource Name (ARN) that identifies an IAM role. At runtime,
--   DAX will assume this role and use the role's permissions to access
--   DynamoDB on your behalf.
--   
--   <a>$sel:subnetGroup:Cluster'</a>, <a>cluster_subnetGroup</a> - The
--   subnet group where the DAX cluster is running.
--   
--   <a>$sel:totalNodes:Cluster'</a>, <a>cluster_totalNodes</a> - The total
--   number of nodes in the cluster.
--   
--   <a>$sel:parameterGroup:Cluster'</a>, <a>cluster_parameterGroup</a> -
--   The parameter group being used by nodes in the cluster.
--   
--   <a>$sel:clusterEndpointEncryptionType:Cluster'</a>,
--   <a>cluster_clusterEndpointEncryptionType</a> - The type of encryption
--   supported by the cluster's endpoint. Values are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption<tt>TLS</tt> for Transport Layer
--   Security</li>
--   </ul>
--   
--   <a>$sel:nodes:Cluster'</a>, <a>cluster_nodes</a> - A list of nodes
--   that are currently in the cluster.
--   
--   <a>$sel:notificationConfiguration:Cluster'</a>,
--   <a>cluster_notificationConfiguration</a> - Describes a notification
--   topic and its status. Notification topics are used for publishing DAX
--   events to subscribers using Amazon Simple Notification Service (SNS).
--   
--   <a>$sel:securityGroups:Cluster'</a>, <a>cluster_securityGroups</a> - A
--   list of security groups, and the status of each, for the nodes in the
--   cluster.
--   
--   <a>$sel:activeNodes:Cluster'</a>, <a>cluster_activeNodes</a> - The
--   number of nodes in the cluster that are active (i.e., capable of
--   serving requests).
--   
--   <a>$sel:preferredMaintenanceWindow:Cluster'</a>,
--   <a>cluster_preferredMaintenanceWindow</a> - A range of time when
--   maintenance of DAX cluster software will be performed. For example:
--   <tt>sun:01:00-sun:09:00</tt>. Cluster maintenance normally takes less
--   than 30 minutes, and is performed automatically within the maintenance
--   window.
--   
--   <a>$sel:description:Cluster'</a>, <a>cluster_description</a> - The
--   description of the cluster.
--   
--   <a>$sel:sSEDescription:Cluster'</a>, <a>cluster_sSEDescription</a> -
--   The description of the server-side encryption status on the specified
--   DAX cluster.
--   
--   <a>$sel:nodeIdsToRemove:Cluster'</a>, <a>cluster_nodeIdsToRemove</a> -
--   A list of nodes to be removed from the cluster.
--   
--   <a>$sel:clusterDiscoveryEndpoint:Cluster'</a>,
--   <a>cluster_clusterDiscoveryEndpoint</a> - The endpoint for this DAX
--   cluster, consisting of a DNS name, a port number, and a URL.
--   Applications should use the URL to configure the DAX client to find
--   their cluster.
--   
--   <a>$sel:nodeType:Cluster'</a>, <a>cluster_nodeType</a> - The node type
--   for the nodes in the cluster. (All nodes in a DAX cluster are of the
--   same type.)
--   
--   <a>$sel:clusterName:Cluster'</a>, <a>cluster_clusterName</a> - The
--   name of the DAX cluster.
newCluster :: Cluster

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
cluster_clusterArn :: Lens' Cluster (Maybe Text)

-- | The current status of the cluster.
cluster_status :: Lens' Cluster (Maybe Text)

-- | A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
cluster_iamRoleArn :: Lens' Cluster (Maybe Text)

-- | The subnet group where the DAX cluster is running.
cluster_subnetGroup :: Lens' Cluster (Maybe Text)

-- | The total number of nodes in the cluster.
cluster_totalNodes :: Lens' Cluster (Maybe Int)

-- | The parameter group being used by nodes in the cluster.
cluster_parameterGroup :: Lens' Cluster (Maybe ParameterGroupStatus)

-- | The type of encryption supported by the cluster's endpoint. Values
--   are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption<tt>TLS</tt> for Transport Layer
--   Security</li>
--   </ul>
cluster_clusterEndpointEncryptionType :: Lens' Cluster (Maybe ClusterEndpointEncryptionType)

-- | A list of nodes that are currently in the cluster.
cluster_nodes :: Lens' Cluster (Maybe [Node])

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing DAX events to subscribers using Amazon Simple
--   Notification Service (SNS).
cluster_notificationConfiguration :: Lens' Cluster (Maybe NotificationConfiguration)

-- | A list of security groups, and the status of each, for the nodes in
--   the cluster.
cluster_securityGroups :: Lens' Cluster (Maybe [SecurityGroupMembership])

-- | The number of nodes in the cluster that are active (i.e., capable of
--   serving requests).
cluster_activeNodes :: Lens' Cluster (Maybe Int)

-- | A range of time when maintenance of DAX cluster software will be
--   performed. For example: <tt>sun:01:00-sun:09:00</tt>. Cluster
--   maintenance normally takes less than 30 minutes, and is performed
--   automatically within the maintenance window.
cluster_preferredMaintenanceWindow :: Lens' Cluster (Maybe Text)

-- | The description of the cluster.
cluster_description :: Lens' Cluster (Maybe Text)

-- | The description of the server-side encryption status on the specified
--   DAX cluster.
cluster_sSEDescription :: Lens' Cluster (Maybe SSEDescription)

-- | A list of nodes to be removed from the cluster.
cluster_nodeIdsToRemove :: Lens' Cluster (Maybe [Text])

-- | The endpoint for this DAX cluster, consisting of a DNS name, a port
--   number, and a URL. Applications should use the URL to configure the
--   DAX client to find their cluster.
cluster_clusterDiscoveryEndpoint :: Lens' Cluster (Maybe Endpoint)

-- | The node type for the nodes in the cluster. (All nodes in a DAX
--   cluster are of the same type.)
cluster_nodeType :: Lens' Cluster (Maybe Text)

-- | The name of the DAX cluster.
cluster_clusterName :: Lens' Cluster (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.Cluster.Cluster
instance GHC.Show.Show Network.AWS.DAX.Types.Cluster.Cluster
instance GHC.Read.Read Network.AWS.DAX.Types.Cluster.Cluster
instance GHC.Classes.Eq Network.AWS.DAX.Types.Cluster.Cluster
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.Cluster.Cluster
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.Cluster.Cluster
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.Cluster.Cluster


module Network.AWS.DAX.Types.SourceType
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_CLUSTER :: SourceType
pattern SourceType_PARAMETER_GROUP :: SourceType
pattern SourceType_SUBNET_GROUP :: SourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.DAX.Types.SourceType.SourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.DAX.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.DAX.Types.SourceType.SourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.DAX.Types.SourceType.SourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.SourceType.SourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.Types.SourceType.SourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.DAX.Types.SourceType.SourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.DAX.Types.SourceType.SourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.DAX.Types.SourceType.SourceType
instance Network.AWS.Data.Text.ToText Network.AWS.DAX.Types.SourceType.SourceType
instance Network.AWS.Data.Text.FromText Network.AWS.DAX.Types.SourceType.SourceType
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.SourceType.SourceType
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.SourceType.SourceType
instance GHC.Generics.Generic Network.AWS.DAX.Types.SourceType.SourceType
instance GHC.Classes.Ord Network.AWS.DAX.Types.SourceType.SourceType
instance GHC.Classes.Eq Network.AWS.DAX.Types.SourceType.SourceType
instance GHC.Read.Read Network.AWS.DAX.Types.SourceType.SourceType
instance GHC.Show.Show Network.AWS.DAX.Types.SourceType.SourceType


module Network.AWS.DAX.Types.Event

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a DAX cluster, adding or
--   removing a node, or rebooting a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe SourceType -> Event

-- | A user-defined message associated with the event.
[$sel:message:Event'] :: Event -> Maybe Text

-- | The source of the event. For example, if the event occurred at the
--   node level, the source would be the node ID.
[$sel:sourceName:Event'] :: Event -> Maybe Text

-- | The date and time when the event occurred.
[$sel:date:Event'] :: Event -> Maybe POSIX

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   node ID, etc.
[$sel:sourceType:Event'] :: Event -> Maybe SourceType

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - A user-defined
--   message associated with the event.
--   
--   <a>$sel:sourceName:Event'</a>, <a>event_sourceName</a> - The source of
--   the event. For example, if the event occurred at the node level, the
--   source would be the node ID.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a node ID, etc.
newEvent :: Event

-- | A user-defined message associated with the event.
event_message :: Lens' Event (Maybe Text)

-- | The source of the event. For example, if the event occurred at the
--   node level, the source would be the node ID.
event_sourceName :: Lens' Event (Maybe Text)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   node ID, etc.
event_sourceType :: Lens' Event (Maybe SourceType)
instance GHC.Generics.Generic Network.AWS.DAX.Types.Event.Event
instance GHC.Show.Show Network.AWS.DAX.Types.Event.Event
instance GHC.Read.Read Network.AWS.DAX.Types.Event.Event
instance GHC.Classes.Eq Network.AWS.DAX.Types.Event.Event
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.Event.Event
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.Event.Event
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.Event.Event


module Network.AWS.DAX.Types.Subnet

-- | Represents the subnet associated with a DAX cluster. This parameter
--   refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC)
--   and used with DAX.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe Text -> Subnet

-- | The system-assigned identifier for the subnet.
[$sel:subnetIdentifier:Subnet'] :: Subnet -> Maybe Text

-- | The Availability Zone (AZ) for the subnet.
[$sel:subnetAvailabilityZone:Subnet'] :: Subnet -> Maybe Text

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIdentifier:Subnet'</a>, <a>subnet_subnetIdentifier</a> -
--   The system-assigned identifier for the subnet.
--   
--   <a>$sel:subnetAvailabilityZone:Subnet'</a>,
--   <a>subnet_subnetAvailabilityZone</a> - The Availability Zone (AZ) for
--   the subnet.
newSubnet :: Subnet

-- | The system-assigned identifier for the subnet.
subnet_subnetIdentifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone (AZ) for the subnet.
subnet_subnetAvailabilityZone :: Lens' Subnet (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.Subnet.Subnet
instance GHC.Show.Show Network.AWS.DAX.Types.Subnet.Subnet
instance GHC.Read.Read Network.AWS.DAX.Types.Subnet.Subnet
instance GHC.Classes.Eq Network.AWS.DAX.Types.Subnet.Subnet
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.Subnet.Subnet
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.Subnet.Subnet
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.Subnet.Subnet


module Network.AWS.DAX.Types.SubnetGroup

-- | Represents the output of one of the following actions:
--   
--   <ul>
--   <li><i>CreateSubnetGroup</i></li>
--   <li><i>ModifySubnetGroup</i></li>
--   </ul>
--   
--   <i>See:</i> <a>newSubnetGroup</a> smart constructor.
data SubnetGroup
SubnetGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Subnet] -> SubnetGroup

-- | The description of the subnet group.
[$sel:description:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | The name of the subnet group.
[$sel:subnetGroupName:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
[$sel:vpcId:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | A list of subnets associated with the subnet group.
[$sel:subnets:SubnetGroup'] :: SubnetGroup -> Maybe [Subnet]

-- | Create a value of <a>SubnetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:SubnetGroup'</a>, <a>subnetGroup_description</a> -
--   The description of the subnet group.
--   
--   <a>$sel:subnetGroupName:SubnetGroup'</a>,
--   <a>subnetGroup_subnetGroupName</a> - The name of the subnet group.
--   
--   <a>$sel:vpcId:SubnetGroup'</a>, <a>subnetGroup_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the subnet group.
--   
--   <a>$sel:subnets:SubnetGroup'</a>, <a>subnetGroup_subnets</a> - A list
--   of subnets associated with the subnet group.
newSubnetGroup :: SubnetGroup

-- | The description of the subnet group.
subnetGroup_description :: Lens' SubnetGroup (Maybe Text)

-- | The name of the subnet group.
subnetGroup_subnetGroupName :: Lens' SubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
subnetGroup_vpcId :: Lens' SubnetGroup (Maybe Text)

-- | A list of subnets associated with the subnet group.
subnetGroup_subnets :: Lens' SubnetGroup (Maybe [Subnet])
instance GHC.Generics.Generic Network.AWS.DAX.Types.SubnetGroup.SubnetGroup
instance GHC.Show.Show Network.AWS.DAX.Types.SubnetGroup.SubnetGroup
instance GHC.Read.Read Network.AWS.DAX.Types.SubnetGroup.SubnetGroup
instance GHC.Classes.Eq Network.AWS.DAX.Types.SubnetGroup.SubnetGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.SubnetGroup.SubnetGroup
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.SubnetGroup.SubnetGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.SubnetGroup.SubnetGroup


module Network.AWS.DAX.Types.Tag

-- | A description of a tag. Every tag is a key-value pair. You can add up
--   to 50 tags to a single DAX cluster.
--   
--   AWS-assigned tag names and values are automatically assigned the
--   <tt>aws:</tt> prefix, which the user cannot assign. AWS-assigned tag
--   names do not count towards the tag limit of 50. User-assigned tag
--   names have the prefix <tt>user:</tt>.
--   
--   You cannot backdate the application of a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The key for the tag. Tag keys are case sensitive. Every DAX cluster
--   can only have one tag with the same key. If you try to add an existing
--   tag (same key), the existing tag value will be updated to the new
--   value.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | The value of the tag. Tag values are case-sensitive and can be null.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. Tag keys
--   are case sensitive. Every DAX cluster can only have one tag with the
--   same key. If you try to add an existing tag (same key), the existing
--   tag value will be updated to the new value.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag. Tag
--   values are case-sensitive and can be null.
newTag :: Tag

-- | The key for the tag. Tag keys are case sensitive. Every DAX cluster
--   can only have one tag with the same key. If you try to add an existing
--   tag (same key), the existing tag value will be updated to the new
--   value.
tag_key :: Lens' Tag (Maybe Text)

-- | The value of the tag. Tag values are case-sensitive and can be null.
tag_value :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Network.AWS.DAX.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.DAX.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.DAX.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.DAX.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.DAX.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.DAX.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.DAX.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.Types.Tag.Tag


module Network.AWS.DAX.Types

-- | API version <tt>2017-04-19</tt> of the Amazon DynamoDB Accelerator
--   (DAX) SDK configuration.
defaultService :: Service

-- | The requested subnet is being used by another subnet group.
_SubnetInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the maximum number of x509 certificates that can be
--   created for encrypted clusters in a 30 day period. Contact AWS
--   customer support to discuss options for continuing to create encrypted
--   clusters.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC network is in an invalid state.
_InvalidVPCNetworkStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of subnets in a subnet group.
_SubnetQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to exceed the maximum number of parameter groups.
_ParameterGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | There are not enough system resources to create the cluster you
--   requested (or to resize an already-existing cluster).
_InsufficientClusterCapacityFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified service linked role (SLR) was not found.
_ServiceLinkedRoleNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two or more incompatible parameters were specified.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cluster ID does not refer to an existing DAX cluster.
_ClusterNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of subnets in a subnet group.
_SubnetGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag does not exist.
_TagNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified subnet group already exists.
_SubnetGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to exceed the maximum number of nodes for your AWS
--   account.
_NodeQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested subnet group name does not refer to an existing subnet
--   group.
_SubnetGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified parameter group already exists.
_ParameterGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified parameter group does not exist.
_ParameterGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value for a parameter is invalid.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | None of the nodes in the cluster have the given node ID.
_NodeNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to exceed the maximum number of nodes for a DAX
--   cluster.
_NodeQuotaForClusterExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a DAX cluster with the given identifier.
_ClusterAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) supplied in the request is not valid.
_InvalidARNFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested DAX cluster is not in the <i>available</i> state.
_InvalidClusterStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded the maximum number of tags for this DAX cluster.
_TagQuotaPerResourceExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified subnet group is currently in use.
_SubnetGroupInUseFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters in a parameter group are in an invalid state.
_InvalidParameterGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to exceed the maximum number of DAX clusters for
--   your AWS account.
_ClusterQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid subnet identifier was specified.
_InvalidSubnet :: AsError a => Getting (First ServiceError) a ServiceError
newtype ChangeType
ChangeType' :: Text -> ChangeType
[fromChangeType] :: ChangeType -> Text
pattern ChangeType_IMMEDIATE :: ChangeType
pattern ChangeType_REQUIRES_REBOOT :: ChangeType
newtype ClusterEndpointEncryptionType
ClusterEndpointEncryptionType' :: Text -> ClusterEndpointEncryptionType
[fromClusterEndpointEncryptionType] :: ClusterEndpointEncryptionType -> Text
pattern ClusterEndpointEncryptionType_NONE :: ClusterEndpointEncryptionType
pattern ClusterEndpointEncryptionType_TLS :: ClusterEndpointEncryptionType
newtype IsModifiable
IsModifiable' :: Text -> IsModifiable
[fromIsModifiable] :: IsModifiable -> Text
pattern IsModifiable_CONDITIONAL :: IsModifiable
pattern IsModifiable_FALSE :: IsModifiable
pattern IsModifiable_TRUE :: IsModifiable
newtype ParameterType
ParameterType' :: Text -> ParameterType
[fromParameterType] :: ParameterType -> Text
pattern ParameterType_DEFAULT :: ParameterType
pattern ParameterType_NODE_TYPE_SPECIFIC :: ParameterType
newtype SSEStatus
SSEStatus' :: Text -> SSEStatus
[fromSSEStatus] :: SSEStatus -> Text
pattern SSEStatus_DISABLED :: SSEStatus
pattern SSEStatus_DISABLING :: SSEStatus
pattern SSEStatus_ENABLED :: SSEStatus
pattern SSEStatus_ENABLING :: SSEStatus
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_CLUSTER :: SourceType
pattern SourceType_PARAMETER_GROUP :: SourceType
pattern SourceType_SUBNET_GROUP :: SourceType

-- | Contains all of the attributes of a specific DAX cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ParameterGroupStatus -> Maybe ClusterEndpointEncryptionType -> Maybe [Node] -> Maybe NotificationConfiguration -> Maybe [SecurityGroupMembership] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe SSEDescription -> Maybe [Text] -> Maybe Endpoint -> Maybe Text -> Maybe Text -> Cluster

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
[$sel:clusterArn:Cluster'] :: Cluster -> Maybe Text

-- | The current status of the cluster.
[$sel:status:Cluster'] :: Cluster -> Maybe Text

-- | A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
[$sel:iamRoleArn:Cluster'] :: Cluster -> Maybe Text

-- | The subnet group where the DAX cluster is running.
[$sel:subnetGroup:Cluster'] :: Cluster -> Maybe Text

-- | The total number of nodes in the cluster.
[$sel:totalNodes:Cluster'] :: Cluster -> Maybe Int

-- | The parameter group being used by nodes in the cluster.
[$sel:parameterGroup:Cluster'] :: Cluster -> Maybe ParameterGroupStatus

-- | The type of encryption supported by the cluster's endpoint. Values
--   are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption<tt>TLS</tt> for Transport Layer
--   Security</li>
--   </ul>
[$sel:clusterEndpointEncryptionType:Cluster'] :: Cluster -> Maybe ClusterEndpointEncryptionType

-- | A list of nodes that are currently in the cluster.
[$sel:nodes:Cluster'] :: Cluster -> Maybe [Node]

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing DAX events to subscribers using Amazon Simple
--   Notification Service (SNS).
[$sel:notificationConfiguration:Cluster'] :: Cluster -> Maybe NotificationConfiguration

-- | A list of security groups, and the status of each, for the nodes in
--   the cluster.
[$sel:securityGroups:Cluster'] :: Cluster -> Maybe [SecurityGroupMembership]

-- | The number of nodes in the cluster that are active (i.e., capable of
--   serving requests).
[$sel:activeNodes:Cluster'] :: Cluster -> Maybe Int

-- | A range of time when maintenance of DAX cluster software will be
--   performed. For example: <tt>sun:01:00-sun:09:00</tt>. Cluster
--   maintenance normally takes less than 30 minutes, and is performed
--   automatically within the maintenance window.
[$sel:preferredMaintenanceWindow:Cluster'] :: Cluster -> Maybe Text

-- | The description of the cluster.
[$sel:description:Cluster'] :: Cluster -> Maybe Text

-- | The description of the server-side encryption status on the specified
--   DAX cluster.
[$sel:sSEDescription:Cluster'] :: Cluster -> Maybe SSEDescription

-- | A list of nodes to be removed from the cluster.
[$sel:nodeIdsToRemove:Cluster'] :: Cluster -> Maybe [Text]

-- | The endpoint for this DAX cluster, consisting of a DNS name, a port
--   number, and a URL. Applications should use the URL to configure the
--   DAX client to find their cluster.
[$sel:clusterDiscoveryEndpoint:Cluster'] :: Cluster -> Maybe Endpoint

-- | The node type for the nodes in the cluster. (All nodes in a DAX
--   cluster are of the same type.)
[$sel:nodeType:Cluster'] :: Cluster -> Maybe Text

-- | The name of the DAX cluster.
[$sel:clusterName:Cluster'] :: Cluster -> Maybe Text

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:Cluster'</a>, <a>cluster_clusterArn</a> - The
--   Amazon Resource Name (ARN) that uniquely identifies the cluster.
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The current
--   status of the cluster.
--   
--   <a>$sel:iamRoleArn:Cluster'</a>, <a>cluster_iamRoleArn</a> - A valid
--   Amazon Resource Name (ARN) that identifies an IAM role. At runtime,
--   DAX will assume this role and use the role's permissions to access
--   DynamoDB on your behalf.
--   
--   <a>$sel:subnetGroup:Cluster'</a>, <a>cluster_subnetGroup</a> - The
--   subnet group where the DAX cluster is running.
--   
--   <a>$sel:totalNodes:Cluster'</a>, <a>cluster_totalNodes</a> - The total
--   number of nodes in the cluster.
--   
--   <a>$sel:parameterGroup:Cluster'</a>, <a>cluster_parameterGroup</a> -
--   The parameter group being used by nodes in the cluster.
--   
--   <a>$sel:clusterEndpointEncryptionType:Cluster'</a>,
--   <a>cluster_clusterEndpointEncryptionType</a> - The type of encryption
--   supported by the cluster's endpoint. Values are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption<tt>TLS</tt> for Transport Layer
--   Security</li>
--   </ul>
--   
--   <a>$sel:nodes:Cluster'</a>, <a>cluster_nodes</a> - A list of nodes
--   that are currently in the cluster.
--   
--   <a>$sel:notificationConfiguration:Cluster'</a>,
--   <a>cluster_notificationConfiguration</a> - Describes a notification
--   topic and its status. Notification topics are used for publishing DAX
--   events to subscribers using Amazon Simple Notification Service (SNS).
--   
--   <a>$sel:securityGroups:Cluster'</a>, <a>cluster_securityGroups</a> - A
--   list of security groups, and the status of each, for the nodes in the
--   cluster.
--   
--   <a>$sel:activeNodes:Cluster'</a>, <a>cluster_activeNodes</a> - The
--   number of nodes in the cluster that are active (i.e., capable of
--   serving requests).
--   
--   <a>$sel:preferredMaintenanceWindow:Cluster'</a>,
--   <a>cluster_preferredMaintenanceWindow</a> - A range of time when
--   maintenance of DAX cluster software will be performed. For example:
--   <tt>sun:01:00-sun:09:00</tt>. Cluster maintenance normally takes less
--   than 30 minutes, and is performed automatically within the maintenance
--   window.
--   
--   <a>$sel:description:Cluster'</a>, <a>cluster_description</a> - The
--   description of the cluster.
--   
--   <a>$sel:sSEDescription:Cluster'</a>, <a>cluster_sSEDescription</a> -
--   The description of the server-side encryption status on the specified
--   DAX cluster.
--   
--   <a>$sel:nodeIdsToRemove:Cluster'</a>, <a>cluster_nodeIdsToRemove</a> -
--   A list of nodes to be removed from the cluster.
--   
--   <a>$sel:clusterDiscoveryEndpoint:Cluster'</a>,
--   <a>cluster_clusterDiscoveryEndpoint</a> - The endpoint for this DAX
--   cluster, consisting of a DNS name, a port number, and a URL.
--   Applications should use the URL to configure the DAX client to find
--   their cluster.
--   
--   <a>$sel:nodeType:Cluster'</a>, <a>cluster_nodeType</a> - The node type
--   for the nodes in the cluster. (All nodes in a DAX cluster are of the
--   same type.)
--   
--   <a>$sel:clusterName:Cluster'</a>, <a>cluster_clusterName</a> - The
--   name of the DAX cluster.
newCluster :: Cluster

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
cluster_clusterArn :: Lens' Cluster (Maybe Text)

-- | The current status of the cluster.
cluster_status :: Lens' Cluster (Maybe Text)

-- | A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
cluster_iamRoleArn :: Lens' Cluster (Maybe Text)

-- | The subnet group where the DAX cluster is running.
cluster_subnetGroup :: Lens' Cluster (Maybe Text)

-- | The total number of nodes in the cluster.
cluster_totalNodes :: Lens' Cluster (Maybe Int)

-- | The parameter group being used by nodes in the cluster.
cluster_parameterGroup :: Lens' Cluster (Maybe ParameterGroupStatus)

-- | The type of encryption supported by the cluster's endpoint. Values
--   are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption<tt>TLS</tt> for Transport Layer
--   Security</li>
--   </ul>
cluster_clusterEndpointEncryptionType :: Lens' Cluster (Maybe ClusterEndpointEncryptionType)

-- | A list of nodes that are currently in the cluster.
cluster_nodes :: Lens' Cluster (Maybe [Node])

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing DAX events to subscribers using Amazon Simple
--   Notification Service (SNS).
cluster_notificationConfiguration :: Lens' Cluster (Maybe NotificationConfiguration)

-- | A list of security groups, and the status of each, for the nodes in
--   the cluster.
cluster_securityGroups :: Lens' Cluster (Maybe [SecurityGroupMembership])

-- | The number of nodes in the cluster that are active (i.e., capable of
--   serving requests).
cluster_activeNodes :: Lens' Cluster (Maybe Int)

-- | A range of time when maintenance of DAX cluster software will be
--   performed. For example: <tt>sun:01:00-sun:09:00</tt>. Cluster
--   maintenance normally takes less than 30 minutes, and is performed
--   automatically within the maintenance window.
cluster_preferredMaintenanceWindow :: Lens' Cluster (Maybe Text)

-- | The description of the cluster.
cluster_description :: Lens' Cluster (Maybe Text)

-- | The description of the server-side encryption status on the specified
--   DAX cluster.
cluster_sSEDescription :: Lens' Cluster (Maybe SSEDescription)

-- | A list of nodes to be removed from the cluster.
cluster_nodeIdsToRemove :: Lens' Cluster (Maybe [Text])

-- | The endpoint for this DAX cluster, consisting of a DNS name, a port
--   number, and a URL. Applications should use the URL to configure the
--   DAX client to find their cluster.
cluster_clusterDiscoveryEndpoint :: Lens' Cluster (Maybe Endpoint)

-- | The node type for the nodes in the cluster. (All nodes in a DAX
--   cluster are of the same type.)
cluster_nodeType :: Lens' Cluster (Maybe Text)

-- | The name of the DAX cluster.
cluster_clusterName :: Lens' Cluster (Maybe Text)

-- | Represents the information required for client programs to connect to
--   the endpoint for a DAX cluster.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Maybe Text -> Endpoint

-- | The DNS hostname of the endpoint.
[$sel:address:Endpoint'] :: Endpoint -> Maybe Text

-- | The port number that applications should use to connect to the
--   endpoint.
[$sel:port:Endpoint'] :: Endpoint -> Maybe Int

-- | The URL that applications should use to connect to the endpoint. The
--   default ports are 8111 for the "dax" protocol and 9111 for the "daxs"
--   protocol.
[$sel:url:Endpoint'] :: Endpoint -> Maybe Text

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the endpoint.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that applications should use to connect to the endpoint.
--   
--   <a>$sel:url:Endpoint'</a>, <a>endpoint_url</a> - The URL that
--   applications should use to connect to the endpoint. The default ports
--   are 8111 for the "dax" protocol and 9111 for the "daxs" protocol.
newEndpoint :: Endpoint

-- | The DNS hostname of the endpoint.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that applications should use to connect to the
--   endpoint.
endpoint_port :: Lens' Endpoint (Maybe Int)

-- | The URL that applications should use to connect to the endpoint. The
--   default ports are 8111 for the "dax" protocol and 9111 for the "daxs"
--   protocol.
endpoint_url :: Lens' Endpoint (Maybe Text)

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a DAX cluster, adding or
--   removing a node, or rebooting a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe SourceType -> Event

-- | A user-defined message associated with the event.
[$sel:message:Event'] :: Event -> Maybe Text

-- | The source of the event. For example, if the event occurred at the
--   node level, the source would be the node ID.
[$sel:sourceName:Event'] :: Event -> Maybe Text

-- | The date and time when the event occurred.
[$sel:date:Event'] :: Event -> Maybe POSIX

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   node ID, etc.
[$sel:sourceType:Event'] :: Event -> Maybe SourceType

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - A user-defined
--   message associated with the event.
--   
--   <a>$sel:sourceName:Event'</a>, <a>event_sourceName</a> - The source of
--   the event. For example, if the event occurred at the node level, the
--   source would be the node ID.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a node ID, etc.
newEvent :: Event

-- | A user-defined message associated with the event.
event_message :: Lens' Event (Maybe Text)

-- | The source of the event. For example, if the event occurred at the
--   node level, the source would be the node ID.
event_sourceName :: Lens' Event (Maybe Text)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   node ID, etc.
event_sourceType :: Lens' Event (Maybe SourceType)

-- | Represents an individual node within a DAX cluster.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Endpoint -> Node

-- | The current status of the node. For example: <tt>available</tt>.
[$sel:nodeStatus:Node'] :: Node -> Maybe Text

-- | A system-generated identifier for the node.
[$sel:nodeId:Node'] :: Node -> Maybe Text

-- | The status of the parameter group associated with this node. For
--   example, <tt>in-sync</tt>.
[$sel:parameterGroupStatus:Node'] :: Node -> Maybe Text

-- | The Availability Zone (AZ) in which the node has been deployed.
[$sel:availabilityZone:Node'] :: Node -> Maybe Text

-- | The date and time (in UNIX epoch format) when the node was launched.
[$sel:nodeCreateTime:Node'] :: Node -> Maybe POSIX

-- | The endpoint for the node, consisting of a DNS name and a port number.
--   Client applications can connect directly to a node endpoint, if
--   desired (as an alternative to allowing DAX client software to
--   intelligently route requests and responses to nodes in the DAX
--   cluster.
[$sel:endpoint:Node'] :: Node -> Maybe Endpoint

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeStatus:Node'</a>, <a>node_nodeStatus</a> - The current
--   status of the node. For example: <tt>available</tt>.
--   
--   <a>$sel:nodeId:Node'</a>, <a>node_nodeId</a> - A system-generated
--   identifier for the node.
--   
--   <a>$sel:parameterGroupStatus:Node'</a>,
--   <a>node_parameterGroupStatus</a> - The status of the parameter group
--   associated with this node. For example, <tt>in-sync</tt>.
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone (AZ) in which the node has been deployed.
--   
--   <a>$sel:nodeCreateTime:Node'</a>, <a>node_nodeCreateTime</a> - The
--   date and time (in UNIX epoch format) when the node was launched.
--   
--   <a>$sel:endpoint:Node'</a>, <a>node_endpoint</a> - The endpoint for
--   the node, consisting of a DNS name and a port number. Client
--   applications can connect directly to a node endpoint, if desired (as
--   an alternative to allowing DAX client software to intelligently route
--   requests and responses to nodes in the DAX cluster.
newNode :: Node

-- | The current status of the node. For example: <tt>available</tt>.
node_nodeStatus :: Lens' Node (Maybe Text)

-- | A system-generated identifier for the node.
node_nodeId :: Lens' Node (Maybe Text)

-- | The status of the parameter group associated with this node. For
--   example, <tt>in-sync</tt>.
node_parameterGroupStatus :: Lens' Node (Maybe Text)

-- | The Availability Zone (AZ) in which the node has been deployed.
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The date and time (in UNIX epoch format) when the node was launched.
node_nodeCreateTime :: Lens' Node (Maybe UTCTime)

-- | The endpoint for the node, consisting of a DNS name and a port number.
--   Client applications can connect directly to a node endpoint, if
--   desired (as an alternative to allowing DAX client software to
--   intelligently route requests and responses to nodes in the DAX
--   cluster.
node_endpoint :: Lens' Node (Maybe Endpoint)

-- | Represents a parameter value that is applicable to a particular node
--   type.
--   
--   <i>See:</i> <a>newNodeTypeSpecificValue</a> smart constructor.
data NodeTypeSpecificValue
NodeTypeSpecificValue' :: Maybe Text -> Maybe Text -> NodeTypeSpecificValue

-- | The parameter value for this node type.
[$sel:value:NodeTypeSpecificValue'] :: NodeTypeSpecificValue -> Maybe Text

-- | A node type to which the parameter value applies.
[$sel:nodeType:NodeTypeSpecificValue'] :: NodeTypeSpecificValue -> Maybe Text

-- | Create a value of <a>NodeTypeSpecificValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:NodeTypeSpecificValue'</a>,
--   <a>nodeTypeSpecificValue_value</a> - The parameter value for this node
--   type.
--   
--   <a>$sel:nodeType:NodeTypeSpecificValue'</a>,
--   <a>nodeTypeSpecificValue_nodeType</a> - A node type to which the
--   parameter value applies.
newNodeTypeSpecificValue :: NodeTypeSpecificValue

-- | The parameter value for this node type.
nodeTypeSpecificValue_value :: Lens' NodeTypeSpecificValue (Maybe Text)

-- | A node type to which the parameter value applies.
nodeTypeSpecificValue_nodeType :: Lens' NodeTypeSpecificValue (Maybe Text)

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing DAX events to subscribers using Amazon Simple
--   Notification Service (SNS).
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> NotificationConfiguration

-- | The current state of the topic. A value of “active” means that
--   notifications will be sent to the topic. A value of “inactive” means
--   that notifications will not be sent to the topic.
[$sel:topicStatus:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) that identifies the topic.
[$sel:topicArn:NotificationConfiguration'] :: NotificationConfiguration -> Maybe Text

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicStatus:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicStatus</a> - The current state of
--   the topic. A value of “active” means that notifications will be sent
--   to the topic. A value of “inactive” means that notifications will not
--   be sent to the topic.
--   
--   <a>$sel:topicArn:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicArn</a> - The Amazon Resource Name
--   (ARN) that identifies the topic.
newNotificationConfiguration :: NotificationConfiguration

-- | The current state of the topic. A value of “active” means that
--   notifications will be sent to the topic. A value of “inactive” means
--   that notifications will not be sent to the topic.
notificationConfiguration_topicStatus :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) that identifies the topic.
notificationConfiguration_topicArn :: Lens' NotificationConfiguration (Maybe Text)

-- | Describes an individual setting that controls some aspect of DAX
--   behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe ChangeType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ParameterType -> Maybe Text -> Maybe Text -> Maybe [NodeTypeSpecificValue] -> Maybe Text -> Maybe IsModifiable -> Parameter

-- | The conditions under which changes to this parameter can be applied.
--   For example, <tt>requires-reboot</tt> indicates that a new value for
--   this parameter will only take effect if a node is rebooted.
[$sel:changeType:Parameter'] :: Parameter -> Maybe ChangeType

-- | A range of values within which the parameter can be set.
[$sel:allowedValues:Parameter'] :: Parameter -> Maybe Text

-- | How the parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
[$sel:source:Parameter'] :: Parameter -> Maybe Text

-- | The value for the parameter.
[$sel:parameterValue:Parameter'] :: Parameter -> Maybe Text

-- | Determines whether the parameter can be applied to any nodes, or only
--   nodes of a particular type.
[$sel:parameterType:Parameter'] :: Parameter -> Maybe ParameterType

-- | The name of the parameter.
[$sel:parameterName:Parameter'] :: Parameter -> Maybe Text

-- | A description of the parameter
[$sel:description:Parameter'] :: Parameter -> Maybe Text

-- | A list of node types, and specific parameter values for each node.
[$sel:nodeTypeSpecificValues:Parameter'] :: Parameter -> Maybe [NodeTypeSpecificValue]

-- | The data type of the parameter. For example, <tt>integer</tt>:
[$sel:dataType:Parameter'] :: Parameter -> Maybe Text

-- | Whether the customer is allowed to modify the parameter.
[$sel:isModifiable:Parameter'] :: Parameter -> Maybe IsModifiable

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeType:Parameter'</a>, <a>parameter_changeType</a> - The
--   conditions under which changes to this parameter can be applied. For
--   example, <tt>requires-reboot</tt> indicates that a new value for this
--   parameter will only take effect if a node is rebooted.
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   A range of values within which the parameter can be set.
--   
--   <a>$sel:source:Parameter'</a>, <a>parameter_source</a> - How the
--   parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
--   
--   <a>$sel:parameterValue:Parameter'</a>, <a>parameter_parameterValue</a>
--   - The value for the parameter.
--   
--   <a>$sel:parameterType:Parameter'</a>, <a>parameter_parameterType</a> -
--   Determines whether the parameter can be applied to any nodes, or only
--   nodes of a particular type.
--   
--   <a>$sel:parameterName:Parameter'</a>, <a>parameter_parameterName</a> -
--   The name of the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter
--   
--   <a>$sel:nodeTypeSpecificValues:Parameter'</a>,
--   <a>parameter_nodeTypeSpecificValues</a> - A list of node types, and
--   specific parameter values for each node.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The data
--   type of the parameter. For example, <tt>integer</tt>:
--   
--   <a>$sel:isModifiable:Parameter'</a>, <a>parameter_isModifiable</a> -
--   Whether the customer is allowed to modify the parameter.
newParameter :: Parameter

-- | The conditions under which changes to this parameter can be applied.
--   For example, <tt>requires-reboot</tt> indicates that a new value for
--   this parameter will only take effect if a node is rebooted.
parameter_changeType :: Lens' Parameter (Maybe ChangeType)

-- | A range of values within which the parameter can be set.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | How the parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
parameter_source :: Lens' Parameter (Maybe Text)

-- | The value for the parameter.
parameter_parameterValue :: Lens' Parameter (Maybe Text)

-- | Determines whether the parameter can be applied to any nodes, or only
--   nodes of a particular type.
parameter_parameterType :: Lens' Parameter (Maybe ParameterType)

-- | The name of the parameter.
parameter_parameterName :: Lens' Parameter (Maybe Text)

-- | A description of the parameter
parameter_description :: Lens' Parameter (Maybe Text)

-- | A list of node types, and specific parameter values for each node.
parameter_nodeTypeSpecificValues :: Lens' Parameter (Maybe [NodeTypeSpecificValue])

-- | The data type of the parameter. For example, <tt>integer</tt>:
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | Whether the customer is allowed to modify the parameter.
parameter_isModifiable :: Lens' Parameter (Maybe IsModifiable)

-- | A named set of parameters that are applied to all of the nodes in a
--   DAX cluster.
--   
--   <i>See:</i> <a>newParameterGroup</a> smart constructor.
data ParameterGroup
ParameterGroup' :: Maybe Text -> Maybe Text -> ParameterGroup

-- | The name of the parameter group.
[$sel:parameterGroupName:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | A description of the parameter group.
[$sel:description:ParameterGroup'] :: ParameterGroup -> Maybe Text

-- | Create a value of <a>ParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:ParameterGroup'</a>,
--   <a>parameterGroup_parameterGroupName</a> - The name of the parameter
--   group.
--   
--   <a>$sel:description:ParameterGroup'</a>,
--   <a>parameterGroup_description</a> - A description of the parameter
--   group.
newParameterGroup :: ParameterGroup

-- | The name of the parameter group.
parameterGroup_parameterGroupName :: Lens' ParameterGroup (Maybe Text)

-- | A description of the parameter group.
parameterGroup_description :: Lens' ParameterGroup (Maybe Text)

-- | The status of a parameter group.
--   
--   <i>See:</i> <a>newParameterGroupStatus</a> smart constructor.
data ParameterGroupStatus
ParameterGroupStatus' :: Maybe [Text] -> Maybe Text -> Maybe Text -> ParameterGroupStatus

-- | The node IDs of one or more nodes to be rebooted.
[$sel:nodeIdsToReboot:ParameterGroupStatus'] :: ParameterGroupStatus -> Maybe [Text]

-- | The name of the parameter group.
[$sel:parameterGroupName:ParameterGroupStatus'] :: ParameterGroupStatus -> Maybe Text

-- | The status of parameter updates.
[$sel:parameterApplyStatus:ParameterGroupStatus'] :: ParameterGroupStatus -> Maybe Text

-- | Create a value of <a>ParameterGroupStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeIdsToReboot:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_nodeIdsToReboot</a> - The node IDs of one or
--   more nodes to be rebooted.
--   
--   <a>$sel:parameterGroupName:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_parameterGroupName</a> - The name of the
--   parameter group.
--   
--   <a>$sel:parameterApplyStatus:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_parameterApplyStatus</a> - The status of
--   parameter updates.
newParameterGroupStatus :: ParameterGroupStatus

-- | The node IDs of one or more nodes to be rebooted.
parameterGroupStatus_nodeIdsToReboot :: Lens' ParameterGroupStatus (Maybe [Text])

-- | The name of the parameter group.
parameterGroupStatus_parameterGroupName :: Lens' ParameterGroupStatus (Maybe Text)

-- | The status of parameter updates.
parameterGroupStatus_parameterApplyStatus :: Lens' ParameterGroupStatus (Maybe Text)

-- | An individual DAX parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | The value of the parameter.
[$sel:parameterValue:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | The name of the parameter.
[$sel:parameterName:ParameterNameValue'] :: ParameterNameValue -> Maybe Text

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter.
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter.
newParameterNameValue :: ParameterNameValue

-- | The value of the parameter.
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter.
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)

-- | The description of the server-side encryption status on the specified
--   DAX cluster.
--   
--   <i>See:</i> <a>newSSEDescription</a> smart constructor.
data SSEDescription
SSEDescription' :: Maybe SSEStatus -> SSEDescription

-- | The current state of server-side encryption:
--   
--   <ul>
--   <li><tt>ENABLING</tt> - Server-side encryption is being enabled.</li>
--   <li><tt>ENABLED</tt> - Server-side encryption is enabled.</li>
--   <li><tt>DISABLING</tt> - Server-side encryption is being
--   disabled.</li>
--   <li><tt>DISABLED</tt> - Server-side encryption is disabled.</li>
--   </ul>
[$sel:status:SSEDescription'] :: SSEDescription -> Maybe SSEStatus

-- | Create a value of <a>SSEDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SSEDescription'</a>, <a>sSEDescription_status</a> - The
--   current state of server-side encryption:
--   
--   <ul>
--   <li><tt>ENABLING</tt> - Server-side encryption is being enabled.</li>
--   <li><tt>ENABLED</tt> - Server-side encryption is enabled.</li>
--   <li><tt>DISABLING</tt> - Server-side encryption is being
--   disabled.</li>
--   <li><tt>DISABLED</tt> - Server-side encryption is disabled.</li>
--   </ul>
newSSEDescription :: SSEDescription

-- | The current state of server-side encryption:
--   
--   <ul>
--   <li><tt>ENABLING</tt> - Server-side encryption is being enabled.</li>
--   <li><tt>ENABLED</tt> - Server-side encryption is enabled.</li>
--   <li><tt>DISABLING</tt> - Server-side encryption is being
--   disabled.</li>
--   <li><tt>DISABLED</tt> - Server-side encryption is disabled.</li>
--   </ul>
sSEDescription_status :: Lens' SSEDescription (Maybe SSEStatus)

-- | Represents the settings used to enable server-side encryption.
--   
--   <i>See:</i> <a>newSSESpecification</a> smart constructor.
data SSESpecification
SSESpecification' :: Bool -> SSESpecification

-- | Indicates whether server-side encryption is enabled (true) or disabled
--   (false) on the cluster.
[$sel:enabled:SSESpecification'] :: SSESpecification -> Bool

-- | Create a value of <a>SSESpecification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SSESpecification'</a>, <a>sSESpecification_enabled</a>
--   - Indicates whether server-side encryption is enabled (true) or
--   disabled (false) on the cluster.
newSSESpecification :: Bool -> SSESpecification

-- | Indicates whether server-side encryption is enabled (true) or disabled
--   (false) on the cluster.
sSESpecification_enabled :: Lens' SSESpecification Bool

-- | An individual VPC security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | The status of this security group.
[$sel:status:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | The unique ID for this security group.
[$sel:securityGroupIdentifier:SecurityGroupMembership'] :: SecurityGroupMembership -> Maybe Text

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of this security
--   group.
--   
--   <a>$sel:securityGroupIdentifier:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupIdentifier</a> - The unique ID
--   for this security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | The status of this security group.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The unique ID for this security group.
securityGroupMembership_securityGroupIdentifier :: Lens' SecurityGroupMembership (Maybe Text)

-- | Represents the subnet associated with a DAX cluster. This parameter
--   refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC)
--   and used with DAX.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe Text -> Subnet

-- | The system-assigned identifier for the subnet.
[$sel:subnetIdentifier:Subnet'] :: Subnet -> Maybe Text

-- | The Availability Zone (AZ) for the subnet.
[$sel:subnetAvailabilityZone:Subnet'] :: Subnet -> Maybe Text

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIdentifier:Subnet'</a>, <a>subnet_subnetIdentifier</a> -
--   The system-assigned identifier for the subnet.
--   
--   <a>$sel:subnetAvailabilityZone:Subnet'</a>,
--   <a>subnet_subnetAvailabilityZone</a> - The Availability Zone (AZ) for
--   the subnet.
newSubnet :: Subnet

-- | The system-assigned identifier for the subnet.
subnet_subnetIdentifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone (AZ) for the subnet.
subnet_subnetAvailabilityZone :: Lens' Subnet (Maybe Text)

-- | Represents the output of one of the following actions:
--   
--   <ul>
--   <li><i>CreateSubnetGroup</i></li>
--   <li><i>ModifySubnetGroup</i></li>
--   </ul>
--   
--   <i>See:</i> <a>newSubnetGroup</a> smart constructor.
data SubnetGroup
SubnetGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Subnet] -> SubnetGroup

-- | The description of the subnet group.
[$sel:description:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | The name of the subnet group.
[$sel:subnetGroupName:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
[$sel:vpcId:SubnetGroup'] :: SubnetGroup -> Maybe Text

-- | A list of subnets associated with the subnet group.
[$sel:subnets:SubnetGroup'] :: SubnetGroup -> Maybe [Subnet]

-- | Create a value of <a>SubnetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:SubnetGroup'</a>, <a>subnetGroup_description</a> -
--   The description of the subnet group.
--   
--   <a>$sel:subnetGroupName:SubnetGroup'</a>,
--   <a>subnetGroup_subnetGroupName</a> - The name of the subnet group.
--   
--   <a>$sel:vpcId:SubnetGroup'</a>, <a>subnetGroup_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the subnet group.
--   
--   <a>$sel:subnets:SubnetGroup'</a>, <a>subnetGroup_subnets</a> - A list
--   of subnets associated with the subnet group.
newSubnetGroup :: SubnetGroup

-- | The description of the subnet group.
subnetGroup_description :: Lens' SubnetGroup (Maybe Text)

-- | The name of the subnet group.
subnetGroup_subnetGroupName :: Lens' SubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
subnetGroup_vpcId :: Lens' SubnetGroup (Maybe Text)

-- | A list of subnets associated with the subnet group.
subnetGroup_subnets :: Lens' SubnetGroup (Maybe [Subnet])

-- | A description of a tag. Every tag is a key-value pair. You can add up
--   to 50 tags to a single DAX cluster.
--   
--   AWS-assigned tag names and values are automatically assigned the
--   <tt>aws:</tt> prefix, which the user cannot assign. AWS-assigned tag
--   names do not count towards the tag limit of 50. User-assigned tag
--   names have the prefix <tt>user:</tt>.
--   
--   You cannot backdate the application of a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The key for the tag. Tag keys are case sensitive. Every DAX cluster
--   can only have one tag with the same key. If you try to add an existing
--   tag (same key), the existing tag value will be updated to the new
--   value.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | The value of the tag. Tag values are case-sensitive and can be null.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. Tag keys
--   are case sensitive. Every DAX cluster can only have one tag with the
--   same key. If you try to add an existing tag (same key), the existing
--   tag value will be updated to the new value.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag. Tag
--   values are case-sensitive and can be null.
newTag :: Tag

-- | The key for the tag. Tag keys are case sensitive. Every DAX cluster
--   can only have one tag with the same key. If you try to add an existing
--   tag (same key), the existing tag value will be updated to the new
--   value.
tag_key :: Lens' Tag (Maybe Text)

-- | The value of the tag. Tag values are case-sensitive and can be null.
tag_value :: Lens' Tag (Maybe Text)


-- | Associates a set of tags with a DAX resource. You can call
--   <tt>TagResource</tt> up to 5 times per second, per account.
module Network.AWS.DAX.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The name of the DAX resource to which tags should be added.
[$sel:resourceName:TagResource'] :: TagResource -> Text

-- | The tags to be assigned to the DAX resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:TagResource'</a>, <a>tagResource_resourceName</a>
--   - The name of the DAX resource to which tags should be added.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   be assigned to the DAX resource.
newTagResource :: Text -> TagResource

-- | The name of the DAX resource to which tags should be added.
tagResource_resourceName :: Lens' TagResource Text

-- | The tags to be assigned to the DAX resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Maybe [Tag] -> Int -> TagResourceResponse

-- | The list of tags that are associated with the DAX resource.
[$sel:tags:TagResourceResponse'] :: TagResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResourceResponse_tags</a> - The
--   list of tags that are associated with the DAX resource.
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The list of tags that are associated with the DAX resource.
tagResourceResponse_tags :: Lens' TagResourceResponse (Maybe [Tag])

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.TagResource.TagResource
instance GHC.Show.Show Network.AWS.DAX.TagResource.TagResource
instance GHC.Read.Read Network.AWS.DAX.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.DAX.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.DAX.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.DAX.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.DAX.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.DAX.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.DAX.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.DAX.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.TagResource.TagResource


-- | Reboots a single node of a DAX cluster. The reboot action takes place
--   as soon as possible. During the reboot, the node status is set to
--   REBOOTING.
--   
--   <tt>RebootNode</tt> restarts the DAX engine process and does not
--   remove the contents of the cache.
module Network.AWS.DAX.RebootNode

-- | <i>See:</i> <a>newRebootNode</a> smart constructor.
data RebootNode
RebootNode' :: Text -> Text -> RebootNode

-- | The name of the DAX cluster containing the node to be rebooted.
[$sel:clusterName:RebootNode'] :: RebootNode -> Text

-- | The system-assigned ID of the node to be rebooted.
[$sel:nodeId:RebootNode'] :: RebootNode -> Text

-- | Create a value of <a>RebootNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:RebootNode'</a>, <a>rebootNode_clusterName</a> -
--   The name of the DAX cluster containing the node to be rebooted.
--   
--   <a>$sel:nodeId:RebootNode'</a>, <a>rebootNode_nodeId</a> - The
--   system-assigned ID of the node to be rebooted.
newRebootNode :: Text -> Text -> RebootNode

-- | The name of the DAX cluster containing the node to be rebooted.
rebootNode_clusterName :: Lens' RebootNode Text

-- | The system-assigned ID of the node to be rebooted.
rebootNode_nodeId :: Lens' RebootNode Text

-- | <i>See:</i> <a>newRebootNodeResponse</a> smart constructor.
data RebootNodeResponse
RebootNodeResponse' :: Maybe Cluster -> Int -> RebootNodeResponse

-- | A description of the DAX cluster after a node has been rebooted.
[$sel:cluster:RebootNodeResponse'] :: RebootNodeResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:RebootNodeResponse'] :: RebootNodeResponse -> Int

-- | Create a value of <a>RebootNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:RebootNodeResponse'</a>,
--   <a>rebootNodeResponse_cluster</a> - A description of the DAX cluster
--   after a node has been rebooted.
--   
--   <a>$sel:httpStatus:RebootNodeResponse'</a>,
--   <a>rebootNodeResponse_httpStatus</a> - The response's http status
--   code.
newRebootNodeResponse :: Int -> RebootNodeResponse

-- | A description of the DAX cluster after a node has been rebooted.
rebootNodeResponse_cluster :: Lens' RebootNodeResponse (Maybe Cluster)

-- | The response's http status code.
rebootNodeResponse_httpStatus :: Lens' RebootNodeResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.RebootNode.RebootNode
instance GHC.Show.Show Network.AWS.DAX.RebootNode.RebootNode
instance GHC.Read.Read Network.AWS.DAX.RebootNode.RebootNode
instance GHC.Classes.Eq Network.AWS.DAX.RebootNode.RebootNode
instance GHC.Generics.Generic Network.AWS.DAX.RebootNode.RebootNodeResponse
instance GHC.Show.Show Network.AWS.DAX.RebootNode.RebootNodeResponse
instance GHC.Read.Read Network.AWS.DAX.RebootNode.RebootNodeResponse
instance GHC.Classes.Eq Network.AWS.DAX.RebootNode.RebootNodeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.RebootNode.RebootNode
instance Control.DeepSeq.NFData Network.AWS.DAX.RebootNode.RebootNodeResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.RebootNode.RebootNode
instance Control.DeepSeq.NFData Network.AWS.DAX.RebootNode.RebootNode
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.RebootNode.RebootNode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.RebootNode.RebootNode
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.RebootNode.RebootNode
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.RebootNode.RebootNode


-- | List all of the tags for a DAX cluster. You can call <tt>ListTags</tt>
--   up to 10 times per second, per account.
--   
--   This operation returns paginated results.
module Network.AWS.DAX.ListTags

-- | <i>See:</i> <a>newListTags</a> smart constructor.
data ListTags
ListTags' :: Maybe Text -> Text -> ListTags

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token.
[$sel:nextToken:ListTags'] :: ListTags -> Maybe Text

-- | The name of the DAX resource to which the tags belong.
[$sel:resourceName:ListTags'] :: ListTags -> Text

-- | Create a value of <a>ListTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTags'</a>, <a>listTags_nextToken</a> - An
--   optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token.
--   
--   <a>$sel:resourceName:ListTags'</a>, <a>listTags_resourceName</a> - The
--   name of the DAX resource to which the tags belong.
newListTags :: Text -> ListTags

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token.
listTags_nextToken :: Lens' ListTags (Maybe Text)

-- | The name of the DAX resource to which the tags belong.
listTags_resourceName :: Lens' ListTags Text

-- | <i>See:</i> <a>newListTagsResponse</a> smart constructor.
data ListTagsResponse
ListTagsResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsResponse

-- | If this value is present, there are additional results to be
--   displayed. To retrieve them, call <tt>ListTags</tt> again, with
--   <tt>NextToken</tt> set to this value.
[$sel:nextToken:ListTagsResponse'] :: ListTagsResponse -> Maybe Text

-- | A list of tags currently associated with the DAX cluster.
[$sel:tags:ListTagsResponse'] :: ListTagsResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsResponse'] :: ListTagsResponse -> Int

-- | Create a value of <a>ListTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTags'</a>, <a>listTagsResponse_nextToken</a> -
--   If this value is present, there are additional results to be
--   displayed. To retrieve them, call <tt>ListTags</tt> again, with
--   <tt>NextToken</tt> set to this value.
--   
--   <a>$sel:tags:ListTagsResponse'</a>, <a>listTagsResponse_tags</a> - A
--   list of tags currently associated with the DAX cluster.
--   
--   <a>$sel:httpStatus:ListTagsResponse'</a>,
--   <a>listTagsResponse_httpStatus</a> - The response's http status code.
newListTagsResponse :: Int -> ListTagsResponse

-- | If this value is present, there are additional results to be
--   displayed. To retrieve them, call <tt>ListTags</tt> again, with
--   <tt>NextToken</tt> set to this value.
listTagsResponse_nextToken :: Lens' ListTagsResponse (Maybe Text)

-- | A list of tags currently associated with the DAX cluster.
listTagsResponse_tags :: Lens' ListTagsResponse (Maybe [Tag])

-- | The response's http status code.
listTagsResponse_httpStatus :: Lens' ListTagsResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.ListTags.ListTags
instance GHC.Show.Show Network.AWS.DAX.ListTags.ListTags
instance GHC.Read.Read Network.AWS.DAX.ListTags.ListTags
instance GHC.Classes.Eq Network.AWS.DAX.ListTags.ListTags
instance GHC.Generics.Generic Network.AWS.DAX.ListTags.ListTagsResponse
instance GHC.Show.Show Network.AWS.DAX.ListTags.ListTagsResponse
instance GHC.Read.Read Network.AWS.DAX.ListTags.ListTagsResponse
instance GHC.Classes.Eq Network.AWS.DAX.ListTags.ListTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.ListTags.ListTags
instance Control.DeepSeq.NFData Network.AWS.DAX.ListTags.ListTagsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DAX.ListTags.ListTags
instance Data.Hashable.Class.Hashable Network.AWS.DAX.ListTags.ListTags
instance Control.DeepSeq.NFData Network.AWS.DAX.ListTags.ListTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.ListTags.ListTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.ListTags.ListTags
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.ListTags.ListTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.ListTags.ListTags


-- | Adds one or more nodes to a DAX cluster.
module Network.AWS.DAX.IncreaseReplicationFactor

-- | <i>See:</i> <a>newIncreaseReplicationFactor</a> smart constructor.
data IncreaseReplicationFactor
IncreaseReplicationFactor' :: Maybe [Text] -> Text -> Int -> IncreaseReplicationFactor

-- | The Availability Zones (AZs) in which the cluster nodes will be
--   created. All nodes belonging to the cluster are placed in these
--   Availability Zones. Use this parameter if you want to distribute the
--   nodes across multiple AZs.
[$sel:availabilityZones:IncreaseReplicationFactor'] :: IncreaseReplicationFactor -> Maybe [Text]

-- | The name of the DAX cluster that will receive additional nodes.
[$sel:clusterName:IncreaseReplicationFactor'] :: IncreaseReplicationFactor -> Text

-- | The new number of nodes for the DAX cluster.
[$sel:newReplicationFactor':IncreaseReplicationFactor'] :: IncreaseReplicationFactor -> Int

-- | Create a value of <a>IncreaseReplicationFactor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZones:IncreaseReplicationFactor'</a>,
--   <a>increaseReplicationFactor_availabilityZones</a> - The Availability
--   Zones (AZs) in which the cluster nodes will be created. All nodes
--   belonging to the cluster are placed in these Availability Zones. Use
--   this parameter if you want to distribute the nodes across multiple
--   AZs.
--   
--   <a>$sel:clusterName:IncreaseReplicationFactor'</a>,
--   <a>increaseReplicationFactor_clusterName</a> - The name of the DAX
--   cluster that will receive additional nodes.
--   
--   <a>$sel:newReplicationFactor':IncreaseReplicationFactor'</a>,
--   <a>increaseReplicationFactor_newReplicationFactor</a> - The new number
--   of nodes for the DAX cluster.
newIncreaseReplicationFactor :: Text -> Int -> IncreaseReplicationFactor

-- | The Availability Zones (AZs) in which the cluster nodes will be
--   created. All nodes belonging to the cluster are placed in these
--   Availability Zones. Use this parameter if you want to distribute the
--   nodes across multiple AZs.
increaseReplicationFactor_availabilityZones :: Lens' IncreaseReplicationFactor (Maybe [Text])

-- | The name of the DAX cluster that will receive additional nodes.
increaseReplicationFactor_clusterName :: Lens' IncreaseReplicationFactor Text

-- | The new number of nodes for the DAX cluster.
increaseReplicationFactor_newReplicationFactor :: Lens' IncreaseReplicationFactor Int

-- | <i>See:</i> <a>newIncreaseReplicationFactorResponse</a> smart
--   constructor.
data IncreaseReplicationFactorResponse
IncreaseReplicationFactorResponse' :: Maybe Cluster -> Int -> IncreaseReplicationFactorResponse

-- | A description of the DAX cluster. with its new replication factor.
[$sel:cluster:IncreaseReplicationFactorResponse'] :: IncreaseReplicationFactorResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:IncreaseReplicationFactorResponse'] :: IncreaseReplicationFactorResponse -> Int

-- | Create a value of <a>IncreaseReplicationFactorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:IncreaseReplicationFactorResponse'</a>,
--   <a>increaseReplicationFactorResponse_cluster</a> - A description of
--   the DAX cluster. with its new replication factor.
--   
--   <a>$sel:httpStatus:IncreaseReplicationFactorResponse'</a>,
--   <a>increaseReplicationFactorResponse_httpStatus</a> - The response's
--   http status code.
newIncreaseReplicationFactorResponse :: Int -> IncreaseReplicationFactorResponse

-- | A description of the DAX cluster. with its new replication factor.
increaseReplicationFactorResponse_cluster :: Lens' IncreaseReplicationFactorResponse (Maybe Cluster)

-- | The response's http status code.
increaseReplicationFactorResponse_httpStatus :: Lens' IncreaseReplicationFactorResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance GHC.Show.Show Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance GHC.Read.Read Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance GHC.Classes.Eq Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance GHC.Generics.Generic Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactorResponse
instance GHC.Show.Show Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactorResponse
instance GHC.Read.Read Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactorResponse
instance GHC.Classes.Eq Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance Control.DeepSeq.NFData Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactorResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance Control.DeepSeq.NFData Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.IncreaseReplicationFactor.IncreaseReplicationFactor


-- | Returns a list of subnet group descriptions. If a subnet group name is
--   specified, the list will contain only the description of that group.
--   
--   This operation returns paginated results.
module Network.AWS.DAX.DescribeSubnetGroups

-- | <i>See:</i> <a>newDescribeSubnetGroups</a> smart constructor.
data DescribeSubnetGroups
DescribeSubnetGroups' :: Maybe Text -> Maybe Int -> Maybe [Text] -> DescribeSubnetGroups

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
[$sel:nextToken:DescribeSubnetGroups'] :: DescribeSubnetGroups -> Maybe Text

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
[$sel:maxResults:DescribeSubnetGroups'] :: DescribeSubnetGroups -> Maybe Int

-- | The name of the subnet group.
[$sel:subnetGroupNames:DescribeSubnetGroups'] :: DescribeSubnetGroups -> Maybe [Text]

-- | Create a value of <a>DescribeSubnetGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_nextToken</a> - An optional token returned
--   from a prior request. Use this token for pagination of results from
--   this action. If this parameter is specified, the response includes
--   only results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_maxResults</a> - The maximum number of results
--   to include in the response. If more results exist than the specified
--   <tt>MaxResults</tt> value, a token is included in the response so that
--   the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:subnetGroupNames:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_subnetGroupNames</a> - The name of the subnet
--   group.
newDescribeSubnetGroups :: DescribeSubnetGroups

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeSubnetGroups_nextToken :: Lens' DescribeSubnetGroups (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeSubnetGroups_maxResults :: Lens' DescribeSubnetGroups (Maybe Int)

-- | The name of the subnet group.
describeSubnetGroups_subnetGroupNames :: Lens' DescribeSubnetGroups (Maybe [Text])

-- | <i>See:</i> <a>newDescribeSubnetGroupsResponse</a> smart constructor.
data DescribeSubnetGroupsResponse
DescribeSubnetGroupsResponse' :: Maybe [SubnetGroup] -> Maybe Text -> Int -> DescribeSubnetGroupsResponse

-- | An array of subnet groups. Each element in the array represents a
--   single subnet group.
[$sel:subnetGroups:DescribeSubnetGroupsResponse'] :: DescribeSubnetGroupsResponse -> Maybe [SubnetGroup]

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:nextToken:DescribeSubnetGroupsResponse'] :: DescribeSubnetGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeSubnetGroupsResponse'] :: DescribeSubnetGroupsResponse -> Int

-- | Create a value of <a>DescribeSubnetGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroups:DescribeSubnetGroupsResponse'</a>,
--   <a>describeSubnetGroupsResponse_subnetGroups</a> - An array of subnet
--   groups. Each element in the array represents a single subnet group.
--   
--   <a>$sel:nextToken:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroupsResponse_nextToken</a> - Provides an identifier
--   to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeSubnetGroupsResponse'</a>,
--   <a>describeSubnetGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSubnetGroupsResponse :: Int -> DescribeSubnetGroupsResponse

-- | An array of subnet groups. Each element in the array represents a
--   single subnet group.
describeSubnetGroupsResponse_subnetGroups :: Lens' DescribeSubnetGroupsResponse (Maybe [SubnetGroup])

-- | Provides an identifier to allow retrieval of paginated results.
describeSubnetGroupsResponse_nextToken :: Lens' DescribeSubnetGroupsResponse (Maybe Text)

-- | The response's http status code.
describeSubnetGroupsResponse_httpStatus :: Lens' DescribeSubnetGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance GHC.Show.Show Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance GHC.Read.Read Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance GHC.Classes.Eq Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance GHC.Generics.Generic Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance GHC.Show.Show Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance GHC.Read.Read Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance GHC.Classes.Eq Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DescribeSubnetGroups.DescribeSubnetGroups


-- | Returns the detailed parameter list for a particular parameter group.
--   
--   This operation returns paginated results.
module Network.AWS.DAX.DescribeParameters

-- | <i>See:</i> <a>newDescribeParameters</a> smart constructor.
data DescribeParameters
DescribeParameters' :: Maybe Text -> Maybe Int -> Maybe Text -> Text -> DescribeParameters

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
[$sel:nextToken:DescribeParameters'] :: DescribeParameters -> Maybe Text

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
[$sel:maxResults:DescribeParameters'] :: DescribeParameters -> Maybe Int

-- | How the parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
[$sel:source:DescribeParameters'] :: DescribeParameters -> Maybe Text

-- | The name of the parameter group.
[$sel:parameterGroupName:DescribeParameters'] :: DescribeParameters -> Text

-- | Create a value of <a>DescribeParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameters'</a>,
--   <a>describeParameters_nextToken</a> - An optional token returned from
--   a prior request. Use this token for pagination of results from this
--   action. If this parameter is specified, the response includes only
--   results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeParameters'</a>,
--   <a>describeParameters_maxResults</a> - The maximum number of results
--   to include in the response. If more results exist than the specified
--   <tt>MaxResults</tt> value, a token is included in the response so that
--   the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:source:DescribeParameters'</a>,
--   <a>describeParameters_source</a> - How the parameter is defined. For
--   example, <tt>system</tt> denotes a system-defined parameter.
--   
--   <a>$sel:parameterGroupName:DescribeParameters'</a>,
--   <a>describeParameters_parameterGroupName</a> - The name of the
--   parameter group.
newDescribeParameters :: Text -> DescribeParameters

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeParameters_nextToken :: Lens' DescribeParameters (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeParameters_maxResults :: Lens' DescribeParameters (Maybe Int)

-- | How the parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
describeParameters_source :: Lens' DescribeParameters (Maybe Text)

-- | The name of the parameter group.
describeParameters_parameterGroupName :: Lens' DescribeParameters Text

-- | <i>See:</i> <a>newDescribeParametersResponse</a> smart constructor.
data DescribeParametersResponse
DescribeParametersResponse' :: Maybe Text -> Maybe [Parameter] -> Int -> DescribeParametersResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:nextToken:DescribeParametersResponse'] :: DescribeParametersResponse -> Maybe Text

-- | A list of parameters within a parameter group. Each element in the
--   list represents one parameter.
[$sel:parameters:DescribeParametersResponse'] :: DescribeParametersResponse -> Maybe [Parameter]

-- | The response's http status code.
[$sel:httpStatus:DescribeParametersResponse'] :: DescribeParametersResponse -> Int

-- | Create a value of <a>DescribeParametersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameters'</a>,
--   <a>describeParametersResponse_nextToken</a> - Provides an identifier
--   to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:DescribeParametersResponse'</a>,
--   <a>describeParametersResponse_parameters</a> - A list of parameters
--   within a parameter group. Each element in the list represents one
--   parameter.
--   
--   <a>$sel:httpStatus:DescribeParametersResponse'</a>,
--   <a>describeParametersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeParametersResponse :: Int -> DescribeParametersResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeParametersResponse_nextToken :: Lens' DescribeParametersResponse (Maybe Text)

-- | A list of parameters within a parameter group. Each element in the
--   list represents one parameter.
describeParametersResponse_parameters :: Lens' DescribeParametersResponse (Maybe [Parameter])

-- | The response's http status code.
describeParametersResponse_httpStatus :: Lens' DescribeParametersResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DescribeParameters.DescribeParameters
instance GHC.Show.Show Network.AWS.DAX.DescribeParameters.DescribeParameters
instance GHC.Read.Read Network.AWS.DAX.DescribeParameters.DescribeParameters
instance GHC.Classes.Eq Network.AWS.DAX.DescribeParameters.DescribeParameters
instance GHC.Generics.Generic Network.AWS.DAX.DescribeParameters.DescribeParametersResponse
instance GHC.Show.Show Network.AWS.DAX.DescribeParameters.DescribeParametersResponse
instance GHC.Read.Read Network.AWS.DAX.DescribeParameters.DescribeParametersResponse
instance GHC.Classes.Eq Network.AWS.DAX.DescribeParameters.DescribeParametersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DescribeParameters.DescribeParameters
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeParameters.DescribeParametersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DAX.DescribeParameters.DescribeParameters
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DescribeParameters.DescribeParameters
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeParameters.DescribeParameters
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DescribeParameters.DescribeParameters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DescribeParameters.DescribeParameters
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DescribeParameters.DescribeParameters
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DescribeParameters.DescribeParameters


-- | Returns a list of parameter group descriptions. If a parameter group
--   name is specified, the list will contain only the descriptions for
--   that group.
--   
--   This operation returns paginated results.
module Network.AWS.DAX.DescribeParameterGroups

-- | <i>See:</i> <a>newDescribeParameterGroups</a> smart constructor.
data DescribeParameterGroups
DescribeParameterGroups' :: Maybe Text -> Maybe Int -> Maybe [Text] -> DescribeParameterGroups

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
[$sel:nextToken:DescribeParameterGroups'] :: DescribeParameterGroups -> Maybe Text

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
[$sel:maxResults:DescribeParameterGroups'] :: DescribeParameterGroups -> Maybe Int

-- | The names of the parameter groups.
[$sel:parameterGroupNames:DescribeParameterGroups'] :: DescribeParameterGroups -> Maybe [Text]

-- | Create a value of <a>DescribeParameterGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_nextToken</a> - An optional token returned
--   from a prior request. Use this token for pagination of results from
--   this action. If this parameter is specified, the response includes
--   only results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_maxResults</a> - The maximum number of
--   results to include in the response. If more results exist than the
--   specified <tt>MaxResults</tt> value, a token is included in the
--   response so that the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:parameterGroupNames:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_parameterGroupNames</a> - The names of the
--   parameter groups.
newDescribeParameterGroups :: DescribeParameterGroups

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeParameterGroups_nextToken :: Lens' DescribeParameterGroups (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeParameterGroups_maxResults :: Lens' DescribeParameterGroups (Maybe Int)

-- | The names of the parameter groups.
describeParameterGroups_parameterGroupNames :: Lens' DescribeParameterGroups (Maybe [Text])

-- | <i>See:</i> <a>newDescribeParameterGroupsResponse</a> smart
--   constructor.
data DescribeParameterGroupsResponse
DescribeParameterGroupsResponse' :: Maybe Text -> Maybe [ParameterGroup] -> Int -> DescribeParameterGroupsResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:nextToken:DescribeParameterGroupsResponse'] :: DescribeParameterGroupsResponse -> Maybe Text

-- | An array of parameter groups. Each element in the array represents one
--   parameter group.
[$sel:parameterGroups:DescribeParameterGroupsResponse'] :: DescribeParameterGroupsResponse -> Maybe [ParameterGroup]

-- | The response's http status code.
[$sel:httpStatus:DescribeParameterGroupsResponse'] :: DescribeParameterGroupsResponse -> Int

-- | Create a value of <a>DescribeParameterGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameterGroups'</a>,
--   <a>describeParameterGroupsResponse_nextToken</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:parameterGroups:DescribeParameterGroupsResponse'</a>,
--   <a>describeParameterGroupsResponse_parameterGroups</a> - An array of
--   parameter groups. Each element in the array represents one parameter
--   group.
--   
--   <a>$sel:httpStatus:DescribeParameterGroupsResponse'</a>,
--   <a>describeParameterGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeParameterGroupsResponse :: Int -> DescribeParameterGroupsResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeParameterGroupsResponse_nextToken :: Lens' DescribeParameterGroupsResponse (Maybe Text)

-- | An array of parameter groups. Each element in the array represents one
--   parameter group.
describeParameterGroupsResponse_parameterGroups :: Lens' DescribeParameterGroupsResponse (Maybe [ParameterGroup])

-- | The response's http status code.
describeParameterGroupsResponse_httpStatus :: Lens' DescribeParameterGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance GHC.Show.Show Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance GHC.Read.Read Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance GHC.Classes.Eq Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance GHC.Generics.Generic Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroupsResponse
instance GHC.Show.Show Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroupsResponse
instance GHC.Read.Read Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroupsResponse
instance GHC.Classes.Eq Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DescribeParameterGroups.DescribeParameterGroups


-- | Returns events related to DAX clusters and parameter groups. You can
--   obtain events specific to a particular DAX cluster or parameter group
--   by providing the name as a parameter.
--   
--   By default, only the events occurring within the last 24 hours are
--   returned; however, you can retrieve up to 14 days' worth of events if
--   necessary.
--   
--   This operation returns paginated results.
module Network.AWS.DAX.DescribeEvents

-- | <i>See:</i> <a>newDescribeEvents</a> smart constructor.
data DescribeEvents
DescribeEvents' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe SourceType -> DescribeEvents

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
[$sel:nextToken:DescribeEvents'] :: DescribeEvents -> Maybe Text

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
[$sel:maxResults:DescribeEvents'] :: DescribeEvents -> Maybe Int

-- | The number of minutes' worth of events to retrieve.
[$sel:duration:DescribeEvents'] :: DescribeEvents -> Maybe Int

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
[$sel:startTime:DescribeEvents'] :: DescribeEvents -> Maybe POSIX

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
[$sel:endTime:DescribeEvents'] :: DescribeEvents -> Maybe POSIX

-- | The identifier of the event source for which events will be returned.
--   If not specified, then all sources are included in the response.
[$sel:sourceName:DescribeEvents'] :: DescribeEvents -> Maybe Text

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
[$sel:sourceType:DescribeEvents'] :: DescribeEvents -> Maybe SourceType

-- | Create a value of <a>DescribeEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvents'</a>, <a>describeEvents_nextToken</a>
--   - An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeEvents'</a>,
--   <a>describeEvents_maxResults</a> - The maximum number of results to
--   include in the response. If more results exist than the specified
--   <tt>MaxResults</tt> value, a token is included in the response so that
--   the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:duration:DescribeEvents'</a>, <a>describeEvents_duration</a> -
--   The number of minutes' worth of events to retrieve.
--   
--   <a>$sel:startTime:DescribeEvents'</a>, <a>describeEvents_startTime</a>
--   - The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
--   
--   <a>$sel:endTime:DescribeEvents'</a>, <a>describeEvents_endTime</a> -
--   The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
--   
--   <a>$sel:sourceName:DescribeEvents'</a>,
--   <a>describeEvents_sourceName</a> - The identifier of the event source
--   for which events will be returned. If not specified, then all sources
--   are included in the response.
--   
--   <a>$sel:sourceType:DescribeEvents'</a>,
--   <a>describeEvents_sourceType</a> - The event source to retrieve events
--   for. If no value is specified, all events are returned.
newDescribeEvents :: DescribeEvents

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeEvents_nextToken :: Lens' DescribeEvents (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeEvents_maxResults :: Lens' DescribeEvents (Maybe Int)

-- | The number of minutes' worth of events to retrieve.
describeEvents_duration :: Lens' DescribeEvents (Maybe Int)

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
describeEvents_startTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
describeEvents_endTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The identifier of the event source for which events will be returned.
--   If not specified, then all sources are included in the response.
describeEvents_sourceName :: Lens' DescribeEvents (Maybe Text)

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
describeEvents_sourceType :: Lens' DescribeEvents (Maybe SourceType)

-- | <i>See:</i> <a>newDescribeEventsResponse</a> smart constructor.
data DescribeEventsResponse
DescribeEventsResponse' :: Maybe Text -> Maybe [Event] -> Int -> DescribeEventsResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:nextToken:DescribeEventsResponse'] :: DescribeEventsResponse -> Maybe Text

-- | An array of events. Each element in the array represents one event.
[$sel:events:DescribeEventsResponse'] :: DescribeEventsResponse -> Maybe [Event]

-- | The response's http status code.
[$sel:httpStatus:DescribeEventsResponse'] :: DescribeEventsResponse -> Int

-- | Create a value of <a>DescribeEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvents'</a>,
--   <a>describeEventsResponse_nextToken</a> - Provides an identifier to
--   allow retrieval of paginated results.
--   
--   <a>$sel:events:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_events</a> - An array of events. Each
--   element in the array represents one event.
--   
--   <a>$sel:httpStatus:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEventsResponse :: Int -> DescribeEventsResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeEventsResponse_nextToken :: Lens' DescribeEventsResponse (Maybe Text)

-- | An array of events. Each element in the array represents one event.
describeEventsResponse_events :: Lens' DescribeEventsResponse (Maybe [Event])

-- | The response's http status code.
describeEventsResponse_httpStatus :: Lens' DescribeEventsResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DescribeEvents.DescribeEvents
instance GHC.Show.Show Network.AWS.DAX.DescribeEvents.DescribeEvents
instance GHC.Read.Read Network.AWS.DAX.DescribeEvents.DescribeEvents
instance GHC.Classes.Eq Network.AWS.DAX.DescribeEvents.DescribeEvents
instance GHC.Generics.Generic Network.AWS.DAX.DescribeEvents.DescribeEventsResponse
instance GHC.Show.Show Network.AWS.DAX.DescribeEvents.DescribeEventsResponse
instance GHC.Read.Read Network.AWS.DAX.DescribeEvents.DescribeEventsResponse
instance GHC.Classes.Eq Network.AWS.DAX.DescribeEvents.DescribeEventsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DescribeEvents.DescribeEvents
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeEvents.DescribeEventsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DAX.DescribeEvents.DescribeEvents
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DescribeEvents.DescribeEvents
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeEvents.DescribeEvents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DescribeEvents.DescribeEvents
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DescribeEvents.DescribeEvents
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DescribeEvents.DescribeEvents
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DescribeEvents.DescribeEvents


-- | Returns the default system parameter information for the DAX caching
--   software.
--   
--   This operation returns paginated results.
module Network.AWS.DAX.DescribeDefaultParameters

-- | <i>See:</i> <a>newDescribeDefaultParameters</a> smart constructor.
data DescribeDefaultParameters
DescribeDefaultParameters' :: Maybe Text -> Maybe Int -> DescribeDefaultParameters

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
[$sel:nextToken:DescribeDefaultParameters'] :: DescribeDefaultParameters -> Maybe Text

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
[$sel:maxResults:DescribeDefaultParameters'] :: DescribeDefaultParameters -> Maybe Int

-- | Create a value of <a>DescribeDefaultParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDefaultParameters'</a>,
--   <a>describeDefaultParameters_nextToken</a> - An optional token
--   returned from a prior request. Use this token for pagination of
--   results from this action. If this parameter is specified, the response
--   includes only results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeDefaultParameters'</a>,
--   <a>describeDefaultParameters_maxResults</a> - The maximum number of
--   results to include in the response. If more results exist than the
--   specified <tt>MaxResults</tt> value, a token is included in the
--   response so that the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
newDescribeDefaultParameters :: DescribeDefaultParameters

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeDefaultParameters_nextToken :: Lens' DescribeDefaultParameters (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeDefaultParameters_maxResults :: Lens' DescribeDefaultParameters (Maybe Int)

-- | <i>See:</i> <a>newDescribeDefaultParametersResponse</a> smart
--   constructor.
data DescribeDefaultParametersResponse
DescribeDefaultParametersResponse' :: Maybe Text -> Maybe [Parameter] -> Int -> DescribeDefaultParametersResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:nextToken:DescribeDefaultParametersResponse'] :: DescribeDefaultParametersResponse -> Maybe Text

-- | A list of parameters. Each element in the list represents one
--   parameter.
[$sel:parameters:DescribeDefaultParametersResponse'] :: DescribeDefaultParametersResponse -> Maybe [Parameter]

-- | The response's http status code.
[$sel:httpStatus:DescribeDefaultParametersResponse'] :: DescribeDefaultParametersResponse -> Int

-- | Create a value of <a>DescribeDefaultParametersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDefaultParameters'</a>,
--   <a>describeDefaultParametersResponse_nextToken</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:DescribeDefaultParametersResponse'</a>,
--   <a>describeDefaultParametersResponse_parameters</a> - A list of
--   parameters. Each element in the list represents one parameter.
--   
--   <a>$sel:httpStatus:DescribeDefaultParametersResponse'</a>,
--   <a>describeDefaultParametersResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDefaultParametersResponse :: Int -> DescribeDefaultParametersResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeDefaultParametersResponse_nextToken :: Lens' DescribeDefaultParametersResponse (Maybe Text)

-- | A list of parameters. Each element in the list represents one
--   parameter.
describeDefaultParametersResponse_parameters :: Lens' DescribeDefaultParametersResponse (Maybe [Parameter])

-- | The response's http status code.
describeDefaultParametersResponse_httpStatus :: Lens' DescribeDefaultParametersResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance GHC.Show.Show Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance GHC.Read.Read Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance GHC.Classes.Eq Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance GHC.Generics.Generic Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParametersResponse
instance GHC.Show.Show Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParametersResponse
instance GHC.Read.Read Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParametersResponse
instance GHC.Classes.Eq Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParametersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParametersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DescribeDefaultParameters.DescribeDefaultParameters


-- | Returns information about all provisioned DAX clusters if no cluster
--   identifier is specified, or about a specific DAX cluster if a cluster
--   identifier is supplied.
--   
--   If the cluster is in the CREATING state, only cluster level
--   information will be displayed until all of the nodes are successfully
--   provisioned.
--   
--   If the cluster is in the DELETING state, only cluster level
--   information will be displayed.
--   
--   If nodes are currently being added to the DAX cluster, node endpoint
--   information and creation time for the additional nodes will not be
--   displayed until they are completely provisioned. When the DAX cluster
--   state is <i>available</i>, the cluster is ready for use.
--   
--   If nodes are currently being removed from the DAX cluster, no endpoint
--   information for the removed nodes is displayed.
--   
--   This operation returns paginated results.
module Network.AWS.DAX.DescribeClusters

-- | <i>See:</i> <a>newDescribeClusters</a> smart constructor.
data DescribeClusters
DescribeClusters' :: Maybe Text -> Maybe Int -> Maybe [Text] -> DescribeClusters

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
[$sel:nextToken:DescribeClusters'] :: DescribeClusters -> Maybe Text

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
[$sel:maxResults:DescribeClusters'] :: DescribeClusters -> Maybe Int

-- | The names of the DAX clusters being described.
[$sel:clusterNames:DescribeClusters'] :: DescribeClusters -> Maybe [Text]

-- | Create a value of <a>DescribeClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeClusters'</a>,
--   <a>describeClusters_nextToken</a> - An optional token returned from a
--   prior request. Use this token for pagination of results from this
--   action. If this parameter is specified, the response includes only
--   results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeClusters'</a>,
--   <a>describeClusters_maxResults</a> - The maximum number of results to
--   include in the response. If more results exist than the specified
--   <tt>MaxResults</tt> value, a token is included in the response so that
--   the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:clusterNames:DescribeClusters'</a>,
--   <a>describeClusters_clusterNames</a> - The names of the DAX clusters
--   being described.
newDescribeClusters :: DescribeClusters

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeClusters_nextToken :: Lens' DescribeClusters (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeClusters_maxResults :: Lens' DescribeClusters (Maybe Int)

-- | The names of the DAX clusters being described.
describeClusters_clusterNames :: Lens' DescribeClusters (Maybe [Text])

-- | <i>See:</i> <a>newDescribeClustersResponse</a> smart constructor.
data DescribeClustersResponse
DescribeClustersResponse' :: Maybe Text -> Maybe [Cluster] -> Int -> DescribeClustersResponse

-- | Provides an identifier to allow retrieval of paginated results.
[$sel:nextToken:DescribeClustersResponse'] :: DescribeClustersResponse -> Maybe Text

-- | The descriptions of your DAX clusters, in response to a
--   <i>DescribeClusters</i> request.
[$sel:clusters:DescribeClustersResponse'] :: DescribeClustersResponse -> Maybe [Cluster]

-- | The response's http status code.
[$sel:httpStatus:DescribeClustersResponse'] :: DescribeClustersResponse -> Int

-- | Create a value of <a>DescribeClustersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeClusters'</a>,
--   <a>describeClustersResponse_nextToken</a> - Provides an identifier to
--   allow retrieval of paginated results.
--   
--   <a>$sel:clusters:DescribeClustersResponse'</a>,
--   <a>describeClustersResponse_clusters</a> - The descriptions of your
--   DAX clusters, in response to a <i>DescribeClusters</i> request.
--   
--   <a>$sel:httpStatus:DescribeClustersResponse'</a>,
--   <a>describeClustersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeClustersResponse :: Int -> DescribeClustersResponse

-- | Provides an identifier to allow retrieval of paginated results.
describeClustersResponse_nextToken :: Lens' DescribeClustersResponse (Maybe Text)

-- | The descriptions of your DAX clusters, in response to a
--   <i>DescribeClusters</i> request.
describeClustersResponse_clusters :: Lens' DescribeClustersResponse (Maybe [Cluster])

-- | The response's http status code.
describeClustersResponse_httpStatus :: Lens' DescribeClustersResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DescribeClusters.DescribeClusters
instance GHC.Show.Show Network.AWS.DAX.DescribeClusters.DescribeClusters
instance GHC.Read.Read Network.AWS.DAX.DescribeClusters.DescribeClusters
instance GHC.Classes.Eq Network.AWS.DAX.DescribeClusters.DescribeClusters
instance GHC.Generics.Generic Network.AWS.DAX.DescribeClusters.DescribeClustersResponse
instance GHC.Show.Show Network.AWS.DAX.DescribeClusters.DescribeClustersResponse
instance GHC.Read.Read Network.AWS.DAX.DescribeClusters.DescribeClustersResponse
instance GHC.Classes.Eq Network.AWS.DAX.DescribeClusters.DescribeClustersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DescribeClusters.DescribeClusters
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeClusters.DescribeClustersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.DAX.DescribeClusters.DescribeClusters
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DescribeClusters.DescribeClusters
instance Control.DeepSeq.NFData Network.AWS.DAX.DescribeClusters.DescribeClusters
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DescribeClusters.DescribeClusters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DescribeClusters.DescribeClusters
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DescribeClusters.DescribeClusters
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DescribeClusters.DescribeClusters


-- | Deletes a subnet group.
--   
--   You cannot delete a subnet group if it is associated with any DAX
--   clusters.
module Network.AWS.DAX.DeleteSubnetGroup

-- | <i>See:</i> <a>newDeleteSubnetGroup</a> smart constructor.
data DeleteSubnetGroup
DeleteSubnetGroup' :: Text -> DeleteSubnetGroup

-- | The name of the subnet group to delete.
[$sel:subnetGroupName:DeleteSubnetGroup'] :: DeleteSubnetGroup -> Text

-- | Create a value of <a>DeleteSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroupName:DeleteSubnetGroup'</a>,
--   <a>deleteSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group to delete.
newDeleteSubnetGroup :: Text -> DeleteSubnetGroup

-- | The name of the subnet group to delete.
deleteSubnetGroup_subnetGroupName :: Lens' DeleteSubnetGroup Text

-- | <i>See:</i> <a>newDeleteSubnetGroupResponse</a> smart constructor.
data DeleteSubnetGroupResponse
DeleteSubnetGroupResponse' :: Maybe Text -> Int -> DeleteSubnetGroupResponse

-- | A user-specified message for this action (i.e., a reason for deleting
--   the subnet group).
[$sel:deletionMessage:DeleteSubnetGroupResponse'] :: DeleteSubnetGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteSubnetGroupResponse'] :: DeleteSubnetGroupResponse -> Int

-- | Create a value of <a>DeleteSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deletionMessage:DeleteSubnetGroupResponse'</a>,
--   <a>deleteSubnetGroupResponse_deletionMessage</a> - A user-specified
--   message for this action (i.e., a reason for deleting the subnet
--   group).
--   
--   <a>$sel:httpStatus:DeleteSubnetGroupResponse'</a>,
--   <a>deleteSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSubnetGroupResponse :: Int -> DeleteSubnetGroupResponse

-- | A user-specified message for this action (i.e., a reason for deleting
--   the subnet group).
deleteSubnetGroupResponse_deletionMessage :: Lens' DeleteSubnetGroupResponse (Maybe Text)

-- | The response's http status code.
deleteSubnetGroupResponse_httpStatus :: Lens' DeleteSubnetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance GHC.Show.Show Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance GHC.Read.Read Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance GHC.Classes.Eq Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance GHC.Generics.Generic Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance GHC.Show.Show Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance GHC.Read.Read Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance GHC.Classes.Eq Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DeleteSubnetGroup.DeleteSubnetGroup


-- | Deletes the specified parameter group. You cannot delete a parameter
--   group if it is associated with any DAX clusters.
module Network.AWS.DAX.DeleteParameterGroup

-- | <i>See:</i> <a>newDeleteParameterGroup</a> smart constructor.
data DeleteParameterGroup
DeleteParameterGroup' :: Text -> DeleteParameterGroup

-- | The name of the parameter group to delete.
[$sel:parameterGroupName:DeleteParameterGroup'] :: DeleteParameterGroup -> Text

-- | Create a value of <a>DeleteParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:DeleteParameterGroup'</a>,
--   <a>deleteParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to delete.
newDeleteParameterGroup :: Text -> DeleteParameterGroup

-- | The name of the parameter group to delete.
deleteParameterGroup_parameterGroupName :: Lens' DeleteParameterGroup Text

-- | <i>See:</i> <a>newDeleteParameterGroupResponse</a> smart constructor.
data DeleteParameterGroupResponse
DeleteParameterGroupResponse' :: Maybe Text -> Int -> DeleteParameterGroupResponse

-- | A user-specified message for this action (i.e., a reason for deleting
--   the parameter group).
[$sel:deletionMessage:DeleteParameterGroupResponse'] :: DeleteParameterGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteParameterGroupResponse'] :: DeleteParameterGroupResponse -> Int

-- | Create a value of <a>DeleteParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deletionMessage:DeleteParameterGroupResponse'</a>,
--   <a>deleteParameterGroupResponse_deletionMessage</a> - A user-specified
--   message for this action (i.e., a reason for deleting the parameter
--   group).
--   
--   <a>$sel:httpStatus:DeleteParameterGroupResponse'</a>,
--   <a>deleteParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteParameterGroupResponse :: Int -> DeleteParameterGroupResponse

-- | A user-specified message for this action (i.e., a reason for deleting
--   the parameter group).
deleteParameterGroupResponse_deletionMessage :: Lens' DeleteParameterGroupResponse (Maybe Text)

-- | The response's http status code.
deleteParameterGroupResponse_httpStatus :: Lens' DeleteParameterGroupResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance GHC.Show.Show Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance GHC.Read.Read Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance GHC.Classes.Eq Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance GHC.Generics.Generic Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroupResponse
instance GHC.Show.Show Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroupResponse
instance GHC.Read.Read Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroupResponse
instance GHC.Classes.Eq Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DeleteParameterGroup.DeleteParameterGroup


-- | Deletes a previously provisioned DAX cluster. <i>DeleteCluster</i>
--   deletes all associated nodes, node endpoints and the DAX cluster
--   itself. When you receive a successful response from this action, DAX
--   immediately begins deleting the cluster; you cannot cancel or revert
--   this action.
module Network.AWS.DAX.DeleteCluster

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Text -> DeleteCluster

-- | The name of the cluster to be deleted.
[$sel:clusterName:DeleteCluster'] :: DeleteCluster -> Text

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DeleteCluster'</a>,
--   <a>deleteCluster_clusterName</a> - The name of the cluster to be
--   deleted.
newDeleteCluster :: Text -> DeleteCluster

-- | The name of the cluster to be deleted.
deleteCluster_clusterName :: Lens' DeleteCluster Text

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Maybe Cluster -> Int -> DeleteClusterResponse

-- | A description of the DAX cluster that is being deleted.
[$sel:cluster:DeleteClusterResponse'] :: DeleteClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:DeleteClusterResponse'] :: DeleteClusterResponse -> Int

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_cluster</a> - A description of the DAX
--   cluster that is being deleted.
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | A description of the DAX cluster that is being deleted.
deleteClusterResponse_cluster :: Lens' DeleteClusterResponse (Maybe Cluster)

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DeleteCluster.DeleteCluster
instance GHC.Show.Show Network.AWS.DAX.DeleteCluster.DeleteCluster
instance GHC.Read.Read Network.AWS.DAX.DeleteCluster.DeleteCluster
instance GHC.Classes.Eq Network.AWS.DAX.DeleteCluster.DeleteCluster
instance GHC.Generics.Generic Network.AWS.DAX.DeleteCluster.DeleteClusterResponse
instance GHC.Show.Show Network.AWS.DAX.DeleteCluster.DeleteClusterResponse
instance GHC.Read.Read Network.AWS.DAX.DeleteCluster.DeleteClusterResponse
instance GHC.Classes.Eq Network.AWS.DAX.DeleteCluster.DeleteClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Network.AWS.DAX.DeleteCluster.DeleteClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Network.AWS.DAX.DeleteCluster.DeleteCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DeleteCluster.DeleteCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DeleteCluster.DeleteCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DeleteCluster.DeleteCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DeleteCluster.DeleteCluster


-- | Removes one or more nodes from a DAX cluster.
--   
--   You cannot use <tt>DecreaseReplicationFactor</tt> to remove the last
--   node in a DAX cluster. If you need to do this, use
--   <tt>DeleteCluster</tt> instead.
module Network.AWS.DAX.DecreaseReplicationFactor

-- | <i>See:</i> <a>newDecreaseReplicationFactor</a> smart constructor.
data DecreaseReplicationFactor
DecreaseReplicationFactor' :: Maybe [Text] -> Maybe [Text] -> Text -> Int -> DecreaseReplicationFactor

-- | The Availability Zone(s) from which to remove nodes.
[$sel:availabilityZones:DecreaseReplicationFactor'] :: DecreaseReplicationFactor -> Maybe [Text]

-- | The unique identifiers of the nodes to be removed from the cluster.
[$sel:nodeIdsToRemove:DecreaseReplicationFactor'] :: DecreaseReplicationFactor -> Maybe [Text]

-- | The name of the DAX cluster from which you want to remove nodes.
[$sel:clusterName:DecreaseReplicationFactor'] :: DecreaseReplicationFactor -> Text

-- | The new number of nodes for the DAX cluster.
[$sel:newReplicationFactor':DecreaseReplicationFactor'] :: DecreaseReplicationFactor -> Int

-- | Create a value of <a>DecreaseReplicationFactor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZones:DecreaseReplicationFactor'</a>,
--   <a>decreaseReplicationFactor_availabilityZones</a> - The Availability
--   Zone(s) from which to remove nodes.
--   
--   <a>$sel:nodeIdsToRemove:DecreaseReplicationFactor'</a>,
--   <a>decreaseReplicationFactor_nodeIdsToRemove</a> - The unique
--   identifiers of the nodes to be removed from the cluster.
--   
--   <a>$sel:clusterName:DecreaseReplicationFactor'</a>,
--   <a>decreaseReplicationFactor_clusterName</a> - The name of the DAX
--   cluster from which you want to remove nodes.
--   
--   <a>$sel:newReplicationFactor':DecreaseReplicationFactor'</a>,
--   <a>decreaseReplicationFactor_newReplicationFactor</a> - The new number
--   of nodes for the DAX cluster.
newDecreaseReplicationFactor :: Text -> Int -> DecreaseReplicationFactor

-- | The Availability Zone(s) from which to remove nodes.
decreaseReplicationFactor_availabilityZones :: Lens' DecreaseReplicationFactor (Maybe [Text])

-- | The unique identifiers of the nodes to be removed from the cluster.
decreaseReplicationFactor_nodeIdsToRemove :: Lens' DecreaseReplicationFactor (Maybe [Text])

-- | The name of the DAX cluster from which you want to remove nodes.
decreaseReplicationFactor_clusterName :: Lens' DecreaseReplicationFactor Text

-- | The new number of nodes for the DAX cluster.
decreaseReplicationFactor_newReplicationFactor :: Lens' DecreaseReplicationFactor Int

-- | <i>See:</i> <a>newDecreaseReplicationFactorResponse</a> smart
--   constructor.
data DecreaseReplicationFactorResponse
DecreaseReplicationFactorResponse' :: Maybe Cluster -> Int -> DecreaseReplicationFactorResponse

-- | A description of the DAX cluster, after you have decreased its
--   replication factor.
[$sel:cluster:DecreaseReplicationFactorResponse'] :: DecreaseReplicationFactorResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:DecreaseReplicationFactorResponse'] :: DecreaseReplicationFactorResponse -> Int

-- | Create a value of <a>DecreaseReplicationFactorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DecreaseReplicationFactorResponse'</a>,
--   <a>decreaseReplicationFactorResponse_cluster</a> - A description of
--   the DAX cluster, after you have decreased its replication factor.
--   
--   <a>$sel:httpStatus:DecreaseReplicationFactorResponse'</a>,
--   <a>decreaseReplicationFactorResponse_httpStatus</a> - The response's
--   http status code.
newDecreaseReplicationFactorResponse :: Int -> DecreaseReplicationFactorResponse

-- | A description of the DAX cluster, after you have decreased its
--   replication factor.
decreaseReplicationFactorResponse_cluster :: Lens' DecreaseReplicationFactorResponse (Maybe Cluster)

-- | The response's http status code.
decreaseReplicationFactorResponse_httpStatus :: Lens' DecreaseReplicationFactorResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance GHC.Show.Show Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance GHC.Read.Read Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance GHC.Classes.Eq Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance GHC.Generics.Generic Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactorResponse
instance GHC.Show.Show Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactorResponse
instance GHC.Read.Read Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactorResponse
instance GHC.Classes.Eq Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance Control.DeepSeq.NFData Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactorResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance Control.DeepSeq.NFData Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.DecreaseReplicationFactor.DecreaseReplicationFactor


-- | Creates a new subnet group.
module Network.AWS.DAX.CreateSubnetGroup

-- | <i>See:</i> <a>newCreateSubnetGroup</a> smart constructor.
data CreateSubnetGroup
CreateSubnetGroup' :: Maybe Text -> Text -> [Text] -> CreateSubnetGroup

-- | A description for the subnet group
[$sel:description:CreateSubnetGroup'] :: CreateSubnetGroup -> Maybe Text

-- | A name for the subnet group. This value is stored as a lowercase
--   string.
[$sel:subnetGroupName:CreateSubnetGroup'] :: CreateSubnetGroup -> Text

-- | A list of VPC subnet IDs for the subnet group.
[$sel:subnetIds:CreateSubnetGroup'] :: CreateSubnetGroup -> [Text]

-- | Create a value of <a>CreateSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_description</a> - A description for the subnet
--   group
--   
--   <a>$sel:subnetGroupName:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_subnetGroupName</a> - A name for the subnet
--   group. This value is stored as a lowercase string.
--   
--   <a>$sel:subnetIds:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_subnetIds</a> - A list of VPC subnet IDs for the
--   subnet group.
newCreateSubnetGroup :: Text -> CreateSubnetGroup

-- | A description for the subnet group
createSubnetGroup_description :: Lens' CreateSubnetGroup (Maybe Text)

-- | A name for the subnet group. This value is stored as a lowercase
--   string.
createSubnetGroup_subnetGroupName :: Lens' CreateSubnetGroup Text

-- | A list of VPC subnet IDs for the subnet group.
createSubnetGroup_subnetIds :: Lens' CreateSubnetGroup [Text]

-- | <i>See:</i> <a>newCreateSubnetGroupResponse</a> smart constructor.
data CreateSubnetGroupResponse
CreateSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> CreateSubnetGroupResponse

-- | Represents the output of a <i>CreateSubnetGroup</i> operation.
[$sel:subnetGroup:CreateSubnetGroupResponse'] :: CreateSubnetGroupResponse -> Maybe SubnetGroup

-- | The response's http status code.
[$sel:httpStatus:CreateSubnetGroupResponse'] :: CreateSubnetGroupResponse -> Int

-- | Create a value of <a>CreateSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:CreateSubnetGroupResponse'</a>,
--   <a>createSubnetGroupResponse_subnetGroup</a> - Represents the output
--   of a <i>CreateSubnetGroup</i> operation.
--   
--   <a>$sel:httpStatus:CreateSubnetGroupResponse'</a>,
--   <a>createSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateSubnetGroupResponse :: Int -> CreateSubnetGroupResponse

-- | Represents the output of a <i>CreateSubnetGroup</i> operation.
createSubnetGroupResponse_subnetGroup :: Lens' CreateSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
createSubnetGroupResponse_httpStatus :: Lens' CreateSubnetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance GHC.Show.Show Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance GHC.Read.Read Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance GHC.Classes.Eq Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance GHC.Generics.Generic Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroupResponse
instance GHC.Show.Show Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroupResponse
instance GHC.Read.Read Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroupResponse
instance GHC.Classes.Eq Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.CreateSubnetGroup.CreateSubnetGroup


-- | Creates a new parameter group. A parameter group is a collection of
--   parameters that you apply to all of the nodes in a DAX cluster.
module Network.AWS.DAX.CreateParameterGroup

-- | <i>See:</i> <a>newCreateParameterGroup</a> smart constructor.
data CreateParameterGroup
CreateParameterGroup' :: Maybe Text -> Text -> CreateParameterGroup

-- | A description of the parameter group.
[$sel:description:CreateParameterGroup'] :: CreateParameterGroup -> Maybe Text

-- | The name of the parameter group to apply to all of the clusters in
--   this replication group.
[$sel:parameterGroupName:CreateParameterGroup'] :: CreateParameterGroup -> Text

-- | Create a value of <a>CreateParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateParameterGroup'</a>,
--   <a>createParameterGroup_description</a> - A description of the
--   parameter group.
--   
--   <a>$sel:parameterGroupName:CreateParameterGroup'</a>,
--   <a>createParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to apply to all of the clusters in this replication
--   group.
newCreateParameterGroup :: Text -> CreateParameterGroup

-- | A description of the parameter group.
createParameterGroup_description :: Lens' CreateParameterGroup (Maybe Text)

-- | The name of the parameter group to apply to all of the clusters in
--   this replication group.
createParameterGroup_parameterGroupName :: Lens' CreateParameterGroup Text

-- | <i>See:</i> <a>newCreateParameterGroupResponse</a> smart constructor.
data CreateParameterGroupResponse
CreateParameterGroupResponse' :: Maybe ParameterGroup -> Int -> CreateParameterGroupResponse

-- | Represents the output of a <i>CreateParameterGroup</i> action.
[$sel:parameterGroup:CreateParameterGroupResponse'] :: CreateParameterGroupResponse -> Maybe ParameterGroup

-- | The response's http status code.
[$sel:httpStatus:CreateParameterGroupResponse'] :: CreateParameterGroupResponse -> Int

-- | Create a value of <a>CreateParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:CreateParameterGroupResponse'</a>,
--   <a>createParameterGroupResponse_parameterGroup</a> - Represents the
--   output of a <i>CreateParameterGroup</i> action.
--   
--   <a>$sel:httpStatus:CreateParameterGroupResponse'</a>,
--   <a>createParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateParameterGroupResponse :: Int -> CreateParameterGroupResponse

-- | Represents the output of a <i>CreateParameterGroup</i> action.
createParameterGroupResponse_parameterGroup :: Lens' CreateParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
createParameterGroupResponse_httpStatus :: Lens' CreateParameterGroupResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance GHC.Show.Show Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance GHC.Read.Read Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance GHC.Classes.Eq Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance GHC.Generics.Generic Network.AWS.DAX.CreateParameterGroup.CreateParameterGroupResponse
instance GHC.Show.Show Network.AWS.DAX.CreateParameterGroup.CreateParameterGroupResponse
instance GHC.Read.Read Network.AWS.DAX.CreateParameterGroup.CreateParameterGroupResponse
instance GHC.Classes.Eq Network.AWS.DAX.CreateParameterGroup.CreateParameterGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.CreateParameterGroup.CreateParameterGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.CreateParameterGroup.CreateParameterGroup


-- | Creates a DAX cluster. All nodes in the cluster run the same DAX
--   caching software.
module Network.AWS.DAX.CreateCluster

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe [Text] -> Maybe [Text] -> Maybe ClusterEndpointEncryptionType -> Maybe SSESpecification -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Int -> Text -> CreateCluster

-- | A list of security group IDs to be assigned to each node in the DAX
--   cluster. (Each of the security group ID is system-generated.)
--   
--   If this parameter is not specified, DAX assigns the default VPC
--   security group to each node.
[$sel:securityGroupIds:CreateCluster'] :: CreateCluster -> Maybe [Text]

-- | The Availability Zones (AZs) in which the cluster nodes will reside
--   after the cluster has been created or updated. If provided, the length
--   of this list must equal the <tt>ReplicationFactor</tt> parameter. If
--   you omit this parameter, DAX will spread the nodes across Availability
--   Zones for the highest availability.
[$sel:availabilityZones:CreateCluster'] :: CreateCluster -> Maybe [Text]

-- | The type of encryption the cluster's endpoint should support. Values
--   are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption</li>
--   <li><tt>TLS</tt> for Transport Layer Security</li>
--   </ul>
[$sel:clusterEndpointEncryptionType:CreateCluster'] :: CreateCluster -> Maybe ClusterEndpointEncryptionType

-- | Represents the settings used to enable server-side encryption on the
--   cluster.
[$sel:sSESpecification:CreateCluster'] :: CreateCluster -> Maybe SSESpecification

-- | Specifies the weekly time range during which maintenance on the DAX
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:05:00-sun:09:00</tt>
--   
--   If you don't specify a preferred maintenance window when you create or
--   modify a cache cluster, DAX assigns a 60-minute maintenance window on
--   a randomly selected day of the week.
[$sel:preferredMaintenanceWindow:CreateCluster'] :: CreateCluster -> Maybe Text

-- | A set of tags to associate with the DAX cluster.
[$sel:tags:CreateCluster'] :: CreateCluster -> Maybe [Tag]

-- | The parameter group to be associated with the DAX cluster.
[$sel:parameterGroupName:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications will be sent.
--   
--   The Amazon SNS topic owner must be same as the DAX cluster owner.
[$sel:notificationTopicArn:CreateCluster'] :: CreateCluster -> Maybe Text

-- | A description of the cluster.
[$sel:description:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The name of the subnet group to be used for the replication group.
--   
--   DAX clusters can only run in an Amazon VPC environment. All of the
--   subnets that you specify in a subnet group must exist in the same VPC.
[$sel:subnetGroupName:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The cluster identifier. This parameter is stored as a lowercase
--   string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 20 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
[$sel:clusterName:CreateCluster'] :: CreateCluster -> Text

-- | The compute and memory capacity of the nodes in the cluster.
[$sel:nodeType:CreateCluster'] :: CreateCluster -> Text

-- | The number of nodes in the DAX cluster. A replication factor of 1 will
--   create a single-node cluster, without any read replicas. For
--   additional fault tolerance, you can create a multiple node cluster
--   with one or more read replicas. To do this, set
--   <tt>ReplicationFactor</tt> to a number between 3 (one primary and two
--   read replicas) and 10 (one primary and nine read replicas). <tt>If the
--   AvailabilityZones</tt> parameter is provided, its length must equal
--   the <tt>ReplicationFactor</tt>.
--   
--   AWS recommends that you have at least two read replicas per cluster.
[$sel:replicationFactor:CreateCluster'] :: CreateCluster -> Int

-- | A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
[$sel:iamRoleArn:CreateCluster'] :: CreateCluster -> Text

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:CreateCluster'</a>,
--   <a>createCluster_securityGroupIds</a> - A list of security group IDs
--   to be assigned to each node in the DAX cluster. (Each of the security
--   group ID is system-generated.)
--   
--   If this parameter is not specified, DAX assigns the default VPC
--   security group to each node.
--   
--   <a>$sel:availabilityZones:CreateCluster'</a>,
--   <a>createCluster_availabilityZones</a> - The Availability Zones (AZs)
--   in which the cluster nodes will reside after the cluster has been
--   created or updated. If provided, the length of this list must equal
--   the <tt>ReplicationFactor</tt> parameter. If you omit this parameter,
--   DAX will spread the nodes across Availability Zones for the highest
--   availability.
--   
--   <a>$sel:clusterEndpointEncryptionType:CreateCluster'</a>,
--   <a>createCluster_clusterEndpointEncryptionType</a> - The type of
--   encryption the cluster's endpoint should support. Values are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption</li>
--   <li><tt>TLS</tt> for Transport Layer Security</li>
--   </ul>
--   
--   <a>$sel:sSESpecification:CreateCluster'</a>,
--   <a>createCluster_sSESpecification</a> - Represents the settings used
--   to enable server-side encryption on the cluster.
--   
--   <a>$sel:preferredMaintenanceWindow:CreateCluster'</a>,
--   <a>createCluster_preferredMaintenanceWindow</a> - Specifies the weekly
--   time range during which maintenance on the DAX cluster is performed.
--   It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H
--   Clock UTC). The minimum maintenance window is a 60 minute period.
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:05:00-sun:09:00</tt>
--   
--   If you don't specify a preferred maintenance window when you create or
--   modify a cache cluster, DAX assigns a 60-minute maintenance window on
--   a randomly selected day of the week.
--   
--   <a>$sel:tags:CreateCluster'</a>, <a>createCluster_tags</a> - A set of
--   tags to associate with the DAX cluster.
--   
--   <a>$sel:parameterGroupName:CreateCluster'</a>,
--   <a>createCluster_parameterGroupName</a> - The parameter group to be
--   associated with the DAX cluster.
--   
--   <a>$sel:notificationTopicArn:CreateCluster'</a>,
--   <a>createCluster_notificationTopicArn</a> - The Amazon Resource Name
--   (ARN) of the Amazon SNS topic to which notifications will be sent.
--   
--   The Amazon SNS topic owner must be same as the DAX cluster owner.
--   
--   <a>$sel:description:CreateCluster'</a>,
--   <a>createCluster_description</a> - A description of the cluster.
--   
--   <a>$sel:subnetGroupName:CreateCluster'</a>,
--   <a>createCluster_subnetGroupName</a> - The name of the subnet group to
--   be used for the replication group.
--   
--   DAX clusters can only run in an Amazon VPC environment. All of the
--   subnets that you specify in a subnet group must exist in the same VPC.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createCluster_clusterName</a> - The cluster identifier. This
--   parameter is stored as a lowercase string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 20 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
--   
--   <a>$sel:nodeType:CreateCluster'</a>, <a>createCluster_nodeType</a> -
--   The compute and memory capacity of the nodes in the cluster.
--   
--   <a>$sel:replicationFactor:CreateCluster'</a>,
--   <a>createCluster_replicationFactor</a> - The number of nodes in the
--   DAX cluster. A replication factor of 1 will create a single-node
--   cluster, without any read replicas. For additional fault tolerance,
--   you can create a multiple node cluster with one or more read replicas.
--   To do this, set <tt>ReplicationFactor</tt> to a number between 3 (one
--   primary and two read replicas) and 10 (one primary and nine read
--   replicas). <tt>If the AvailabilityZones</tt> parameter is provided,
--   its length must equal the <tt>ReplicationFactor</tt>.
--   
--   AWS recommends that you have at least two read replicas per cluster.
--   
--   <a>$sel:iamRoleArn:CreateCluster'</a>, <a>createCluster_iamRoleArn</a>
--   - A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
newCreateCluster :: Text -> Text -> Int -> Text -> CreateCluster

-- | A list of security group IDs to be assigned to each node in the DAX
--   cluster. (Each of the security group ID is system-generated.)
--   
--   If this parameter is not specified, DAX assigns the default VPC
--   security group to each node.
createCluster_securityGroupIds :: Lens' CreateCluster (Maybe [Text])

-- | The Availability Zones (AZs) in which the cluster nodes will reside
--   after the cluster has been created or updated. If provided, the length
--   of this list must equal the <tt>ReplicationFactor</tt> parameter. If
--   you omit this parameter, DAX will spread the nodes across Availability
--   Zones for the highest availability.
createCluster_availabilityZones :: Lens' CreateCluster (Maybe [Text])

-- | The type of encryption the cluster's endpoint should support. Values
--   are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption</li>
--   <li><tt>TLS</tt> for Transport Layer Security</li>
--   </ul>
createCluster_clusterEndpointEncryptionType :: Lens' CreateCluster (Maybe ClusterEndpointEncryptionType)

-- | Represents the settings used to enable server-side encryption on the
--   cluster.
createCluster_sSESpecification :: Lens' CreateCluster (Maybe SSESpecification)

-- | Specifies the weekly time range during which maintenance on the DAX
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:05:00-sun:09:00</tt>
--   
--   If you don't specify a preferred maintenance window when you create or
--   modify a cache cluster, DAX assigns a 60-minute maintenance window on
--   a randomly selected day of the week.
createCluster_preferredMaintenanceWindow :: Lens' CreateCluster (Maybe Text)

-- | A set of tags to associate with the DAX cluster.
createCluster_tags :: Lens' CreateCluster (Maybe [Tag])

-- | The parameter group to be associated with the DAX cluster.
createCluster_parameterGroupName :: Lens' CreateCluster (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications will be sent.
--   
--   The Amazon SNS topic owner must be same as the DAX cluster owner.
createCluster_notificationTopicArn :: Lens' CreateCluster (Maybe Text)

-- | A description of the cluster.
createCluster_description :: Lens' CreateCluster (Maybe Text)

-- | The name of the subnet group to be used for the replication group.
--   
--   DAX clusters can only run in an Amazon VPC environment. All of the
--   subnets that you specify in a subnet group must exist in the same VPC.
createCluster_subnetGroupName :: Lens' CreateCluster (Maybe Text)

-- | The cluster identifier. This parameter is stored as a lowercase
--   string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 20 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
createCluster_clusterName :: Lens' CreateCluster Text

-- | The compute and memory capacity of the nodes in the cluster.
createCluster_nodeType :: Lens' CreateCluster Text

-- | The number of nodes in the DAX cluster. A replication factor of 1 will
--   create a single-node cluster, without any read replicas. For
--   additional fault tolerance, you can create a multiple node cluster
--   with one or more read replicas. To do this, set
--   <tt>ReplicationFactor</tt> to a number between 3 (one primary and two
--   read replicas) and 10 (one primary and nine read replicas). <tt>If the
--   AvailabilityZones</tt> parameter is provided, its length must equal
--   the <tt>ReplicationFactor</tt>.
--   
--   AWS recommends that you have at least two read replicas per cluster.
createCluster_replicationFactor :: Lens' CreateCluster Int

-- | A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
createCluster_iamRoleArn :: Lens' CreateCluster Text

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Cluster -> Int -> CreateClusterResponse

-- | A description of the DAX cluster that you have created.
[$sel:cluster:CreateClusterResponse'] :: CreateClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:CreateClusterResponse'] :: CreateClusterResponse -> Int

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:CreateClusterResponse'</a>,
--   <a>createClusterResponse_cluster</a> - A description of the DAX
--   cluster that you have created.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | A description of the DAX cluster that you have created.
createClusterResponse_cluster :: Lens' CreateClusterResponse (Maybe Cluster)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.CreateCluster.CreateCluster
instance GHC.Show.Show Network.AWS.DAX.CreateCluster.CreateCluster
instance GHC.Read.Read Network.AWS.DAX.CreateCluster.CreateCluster
instance GHC.Classes.Eq Network.AWS.DAX.CreateCluster.CreateCluster
instance GHC.Generics.Generic Network.AWS.DAX.CreateCluster.CreateClusterResponse
instance GHC.Show.Show Network.AWS.DAX.CreateCluster.CreateClusterResponse
instance GHC.Read.Read Network.AWS.DAX.CreateCluster.CreateClusterResponse
instance GHC.Classes.Eq Network.AWS.DAX.CreateCluster.CreateClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Network.AWS.DAX.CreateCluster.CreateClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Network.AWS.DAX.CreateCluster.CreateCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.CreateCluster.CreateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.CreateCluster.CreateCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.CreateCluster.CreateCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.CreateCluster.CreateCluster


-- | Removes the association of tags from a DAX resource. You can call
--   <tt>UntagResource</tt> up to 5 times per second, per account.
module Network.AWS.DAX.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The name of the DAX resource from which the tags should be removed.
[$sel:resourceName:UntagResource'] :: UntagResource -> Text

-- | A list of tag keys. If the DAX cluster has any tags with these keys,
--   then the tags are removed from the cluster.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:UntagResource'</a>,
--   <a>untagResource_resourceName</a> - The name of the DAX resource from
--   which the tags should be removed.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag keys. If the DAX cluster has any tags with these keys,
--   then the tags are removed from the cluster.
newUntagResource :: Text -> UntagResource

-- | The name of the DAX resource from which the tags should be removed.
untagResource_resourceName :: Lens' UntagResource Text

-- | A list of tag keys. If the DAX cluster has any tags with these keys,
--   then the tags are removed from the cluster.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Maybe [Tag] -> Int -> UntagResourceResponse

-- | The tag keys that have been removed from the cluster.
[$sel:tags:UntagResourceResponse'] :: UntagResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_tags</a> - The tag keys that have been
--   removed from the cluster.
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The tag keys that have been removed from the cluster.
untagResourceResponse_tags :: Lens' UntagResourceResponse (Maybe [Tag])

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.DAX.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.DAX.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.DAX.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.DAX.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.DAX.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.DAX.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.DAX.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.DAX.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.DAX.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.UntagResource.UntagResource


-- | Modifies the settings for a DAX cluster. You can use this action to
--   change one or more cluster configuration parameters by specifying the
--   parameters and the new values.
module Network.AWS.DAX.UpdateCluster

-- | <i>See:</i> <a>newUpdateCluster</a> smart constructor.
data UpdateCluster
UpdateCluster' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateCluster

-- | A list of user-specified security group IDs to be assigned to each
--   node in the DAX cluster. If this parameter is not specified, DAX
--   assigns the default VPC security group to each node.
[$sel:securityGroupIds:UpdateCluster'] :: UpdateCluster -> Maybe [Text]

-- | The current state of the topic. A value of “active” means that
--   notifications will be sent to the topic. A value of “inactive” means
--   that notifications will not be sent to the topic.
[$sel:notificationTopicStatus:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | A range of time when maintenance of DAX cluster software will be
--   performed. For example: <tt>sun:01:00-sun:09:00</tt>. Cluster
--   maintenance normally takes less than 30 minutes, and is performed
--   automatically within the maintenance window.
[$sel:preferredMaintenanceWindow:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The name of a parameter group for this cluster.
[$sel:parameterGroupName:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The Amazon Resource Name (ARN) that identifies the topic.
[$sel:notificationTopicArn:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | A description of the changes being made to the cluster.
[$sel:description:UpdateCluster'] :: UpdateCluster -> Maybe Text

-- | The name of the DAX cluster to be modified.
[$sel:clusterName:UpdateCluster'] :: UpdateCluster -> Text

-- | Create a value of <a>UpdateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:UpdateCluster'</a>,
--   <a>updateCluster_securityGroupIds</a> - A list of user-specified
--   security group IDs to be assigned to each node in the DAX cluster. If
--   this parameter is not specified, DAX assigns the default VPC security
--   group to each node.
--   
--   <a>$sel:notificationTopicStatus:UpdateCluster'</a>,
--   <a>updateCluster_notificationTopicStatus</a> - The current state of
--   the topic. A value of “active” means that notifications will be sent
--   to the topic. A value of “inactive” means that notifications will not
--   be sent to the topic.
--   
--   <a>$sel:preferredMaintenanceWindow:UpdateCluster'</a>,
--   <a>updateCluster_preferredMaintenanceWindow</a> - A range of time when
--   maintenance of DAX cluster software will be performed. For example:
--   <tt>sun:01:00-sun:09:00</tt>. Cluster maintenance normally takes less
--   than 30 minutes, and is performed automatically within the maintenance
--   window.
--   
--   <a>$sel:parameterGroupName:UpdateCluster'</a>,
--   <a>updateCluster_parameterGroupName</a> - The name of a parameter
--   group for this cluster.
--   
--   <a>$sel:notificationTopicArn:UpdateCluster'</a>,
--   <a>updateCluster_notificationTopicArn</a> - The Amazon Resource Name
--   (ARN) that identifies the topic.
--   
--   <a>$sel:description:UpdateCluster'</a>,
--   <a>updateCluster_description</a> - A description of the changes being
--   made to the cluster.
--   
--   <a>$sel:clusterName:UpdateCluster'</a>,
--   <a>updateCluster_clusterName</a> - The name of the DAX cluster to be
--   modified.
newUpdateCluster :: Text -> UpdateCluster

-- | A list of user-specified security group IDs to be assigned to each
--   node in the DAX cluster. If this parameter is not specified, DAX
--   assigns the default VPC security group to each node.
updateCluster_securityGroupIds :: Lens' UpdateCluster (Maybe [Text])

-- | The current state of the topic. A value of “active” means that
--   notifications will be sent to the topic. A value of “inactive” means
--   that notifications will not be sent to the topic.
updateCluster_notificationTopicStatus :: Lens' UpdateCluster (Maybe Text)

-- | A range of time when maintenance of DAX cluster software will be
--   performed. For example: <tt>sun:01:00-sun:09:00</tt>. Cluster
--   maintenance normally takes less than 30 minutes, and is performed
--   automatically within the maintenance window.
updateCluster_preferredMaintenanceWindow :: Lens' UpdateCluster (Maybe Text)

-- | The name of a parameter group for this cluster.
updateCluster_parameterGroupName :: Lens' UpdateCluster (Maybe Text)

-- | The Amazon Resource Name (ARN) that identifies the topic.
updateCluster_notificationTopicArn :: Lens' UpdateCluster (Maybe Text)

-- | A description of the changes being made to the cluster.
updateCluster_description :: Lens' UpdateCluster (Maybe Text)

-- | The name of the DAX cluster to be modified.
updateCluster_clusterName :: Lens' UpdateCluster Text

-- | <i>See:</i> <a>newUpdateClusterResponse</a> smart constructor.
data UpdateClusterResponse
UpdateClusterResponse' :: Maybe Cluster -> Int -> UpdateClusterResponse

-- | A description of the DAX cluster, after it has been modified.
[$sel:cluster:UpdateClusterResponse'] :: UpdateClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:UpdateClusterResponse'] :: UpdateClusterResponse -> Int

-- | Create a value of <a>UpdateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_cluster</a> - A description of the DAX
--   cluster, after it has been modified.
--   
--   <a>$sel:httpStatus:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_httpStatus</a> - The response's http status
--   code.
newUpdateClusterResponse :: Int -> UpdateClusterResponse

-- | A description of the DAX cluster, after it has been modified.
updateClusterResponse_cluster :: Lens' UpdateClusterResponse (Maybe Cluster)

-- | The response's http status code.
updateClusterResponse_httpStatus :: Lens' UpdateClusterResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.UpdateCluster.UpdateCluster
instance GHC.Show.Show Network.AWS.DAX.UpdateCluster.UpdateCluster
instance GHC.Read.Read Network.AWS.DAX.UpdateCluster.UpdateCluster
instance GHC.Classes.Eq Network.AWS.DAX.UpdateCluster.UpdateCluster
instance GHC.Generics.Generic Network.AWS.DAX.UpdateCluster.UpdateClusterResponse
instance GHC.Show.Show Network.AWS.DAX.UpdateCluster.UpdateClusterResponse
instance GHC.Read.Read Network.AWS.DAX.UpdateCluster.UpdateClusterResponse
instance GHC.Classes.Eq Network.AWS.DAX.UpdateCluster.UpdateClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.UpdateCluster.UpdateCluster
instance Control.DeepSeq.NFData Network.AWS.DAX.UpdateCluster.UpdateClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.UpdateCluster.UpdateCluster
instance Control.DeepSeq.NFData Network.AWS.DAX.UpdateCluster.UpdateCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.UpdateCluster.UpdateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.UpdateCluster.UpdateCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.UpdateCluster.UpdateCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.UpdateCluster.UpdateCluster


-- | Modifies the parameters of a parameter group. You can modify up to 20
--   parameters in a single request by submitting a list parameter name and
--   value pairs.
module Network.AWS.DAX.UpdateParameterGroup

-- | <i>See:</i> <a>newUpdateParameterGroup</a> smart constructor.
data UpdateParameterGroup
UpdateParameterGroup' :: Text -> [ParameterNameValue] -> UpdateParameterGroup

-- | The name of the parameter group.
[$sel:parameterGroupName:UpdateParameterGroup'] :: UpdateParameterGroup -> Text

-- | An array of name-value pairs for the parameters in the group. Each
--   element in the array represents a single parameter.
--   
--   <tt>record-ttl-millis</tt> and <tt>query-ttl-millis</tt> are the only
--   supported parameter names. For more details, see <a>Configuring TTL
--   Settings</a>.
[$sel:parameterNameValues:UpdateParameterGroup'] :: UpdateParameterGroup -> [ParameterNameValue]

-- | Create a value of <a>UpdateParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:UpdateParameterGroup'</a>,
--   <a>updateParameterGroup_parameterGroupName</a> - The name of the
--   parameter group.
--   
--   <a>$sel:parameterNameValues:UpdateParameterGroup'</a>,
--   <a>updateParameterGroup_parameterNameValues</a> - An array of
--   name-value pairs for the parameters in the group. Each element in the
--   array represents a single parameter.
--   
--   <tt>record-ttl-millis</tt> and <tt>query-ttl-millis</tt> are the only
--   supported parameter names. For more details, see <a>Configuring TTL
--   Settings</a>.
newUpdateParameterGroup :: Text -> UpdateParameterGroup

-- | The name of the parameter group.
updateParameterGroup_parameterGroupName :: Lens' UpdateParameterGroup Text

-- | An array of name-value pairs for the parameters in the group. Each
--   element in the array represents a single parameter.
--   
--   <tt>record-ttl-millis</tt> and <tt>query-ttl-millis</tt> are the only
--   supported parameter names. For more details, see <a>Configuring TTL
--   Settings</a>.
updateParameterGroup_parameterNameValues :: Lens' UpdateParameterGroup [ParameterNameValue]

-- | <i>See:</i> <a>newUpdateParameterGroupResponse</a> smart constructor.
data UpdateParameterGroupResponse
UpdateParameterGroupResponse' :: Maybe ParameterGroup -> Int -> UpdateParameterGroupResponse

-- | The parameter group that has been modified.
[$sel:parameterGroup:UpdateParameterGroupResponse'] :: UpdateParameterGroupResponse -> Maybe ParameterGroup

-- | The response's http status code.
[$sel:httpStatus:UpdateParameterGroupResponse'] :: UpdateParameterGroupResponse -> Int

-- | Create a value of <a>UpdateParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:UpdateParameterGroupResponse'</a>,
--   <a>updateParameterGroupResponse_parameterGroup</a> - The parameter
--   group that has been modified.
--   
--   <a>$sel:httpStatus:UpdateParameterGroupResponse'</a>,
--   <a>updateParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateParameterGroupResponse :: Int -> UpdateParameterGroupResponse

-- | The parameter group that has been modified.
updateParameterGroupResponse_parameterGroup :: Lens' UpdateParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
updateParameterGroupResponse_httpStatus :: Lens' UpdateParameterGroupResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance GHC.Show.Show Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance GHC.Read.Read Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance GHC.Classes.Eq Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance GHC.Generics.Generic Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroupResponse
instance GHC.Show.Show Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroupResponse
instance GHC.Read.Read Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroupResponse
instance GHC.Classes.Eq Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.UpdateParameterGroup.UpdateParameterGroup


-- | Modifies an existing subnet group.
module Network.AWS.DAX.UpdateSubnetGroup

-- | <i>See:</i> <a>newUpdateSubnetGroup</a> smart constructor.
data UpdateSubnetGroup
UpdateSubnetGroup' :: Maybe [Text] -> Maybe Text -> Text -> UpdateSubnetGroup

-- | A list of subnet IDs in the subnet group.
[$sel:subnetIds:UpdateSubnetGroup'] :: UpdateSubnetGroup -> Maybe [Text]

-- | A description of the subnet group.
[$sel:description:UpdateSubnetGroup'] :: UpdateSubnetGroup -> Maybe Text

-- | The name of the subnet group.
[$sel:subnetGroupName:UpdateSubnetGroup'] :: UpdateSubnetGroup -> Text

-- | Create a value of <a>UpdateSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIds:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_subnetIds</a> - A list of subnet IDs in the
--   subnet group.
--   
--   <a>$sel:description:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_description</a> - A description of the subnet
--   group.
--   
--   <a>$sel:subnetGroupName:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group.
newUpdateSubnetGroup :: Text -> UpdateSubnetGroup

-- | A list of subnet IDs in the subnet group.
updateSubnetGroup_subnetIds :: Lens' UpdateSubnetGroup (Maybe [Text])

-- | A description of the subnet group.
updateSubnetGroup_description :: Lens' UpdateSubnetGroup (Maybe Text)

-- | The name of the subnet group.
updateSubnetGroup_subnetGroupName :: Lens' UpdateSubnetGroup Text

-- | <i>See:</i> <a>newUpdateSubnetGroupResponse</a> smart constructor.
data UpdateSubnetGroupResponse
UpdateSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> UpdateSubnetGroupResponse

-- | The subnet group that has been modified.
[$sel:subnetGroup:UpdateSubnetGroupResponse'] :: UpdateSubnetGroupResponse -> Maybe SubnetGroup

-- | The response's http status code.
[$sel:httpStatus:UpdateSubnetGroupResponse'] :: UpdateSubnetGroupResponse -> Int

-- | Create a value of <a>UpdateSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:UpdateSubnetGroupResponse'</a>,
--   <a>updateSubnetGroupResponse_subnetGroup</a> - The subnet group that
--   has been modified.
--   
--   <a>$sel:httpStatus:UpdateSubnetGroupResponse'</a>,
--   <a>updateSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSubnetGroupResponse :: Int -> UpdateSubnetGroupResponse

-- | The subnet group that has been modified.
updateSubnetGroupResponse_subnetGroup :: Lens' UpdateSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
updateSubnetGroupResponse_httpStatus :: Lens' UpdateSubnetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance GHC.Show.Show Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance GHC.Read.Read Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance GHC.Classes.Eq Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance GHC.Generics.Generic Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance GHC.Show.Show Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance GHC.Read.Read Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance GHC.Classes.Eq Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance Control.DeepSeq.NFData Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.DAX.UpdateSubnetGroup.UpdateSubnetGroup


module Network.AWS.DAX.Lens

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeParameters_nextToken :: Lens' DescribeParameters (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeParameters_maxResults :: Lens' DescribeParameters (Maybe Int)

-- | How the parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
describeParameters_source :: Lens' DescribeParameters (Maybe Text)

-- | The name of the parameter group.
describeParameters_parameterGroupName :: Lens' DescribeParameters Text

-- | Provides an identifier to allow retrieval of paginated results.
describeParametersResponse_nextToken :: Lens' DescribeParametersResponse (Maybe Text)

-- | A list of parameters within a parameter group. Each element in the
--   list represents one parameter.
describeParametersResponse_parameters :: Lens' DescribeParametersResponse (Maybe [Parameter])

-- | The response's http status code.
describeParametersResponse_httpStatus :: Lens' DescribeParametersResponse Int

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeClusters_nextToken :: Lens' DescribeClusters (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeClusters_maxResults :: Lens' DescribeClusters (Maybe Int)

-- | The names of the DAX clusters being described.
describeClusters_clusterNames :: Lens' DescribeClusters (Maybe [Text])

-- | Provides an identifier to allow retrieval of paginated results.
describeClustersResponse_nextToken :: Lens' DescribeClustersResponse (Maybe Text)

-- | The descriptions of your DAX clusters, in response to a
--   <i>DescribeClusters</i> request.
describeClustersResponse_clusters :: Lens' DescribeClustersResponse (Maybe [Cluster])

-- | The response's http status code.
describeClustersResponse_httpStatus :: Lens' DescribeClustersResponse Int

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeDefaultParameters_nextToken :: Lens' DescribeDefaultParameters (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeDefaultParameters_maxResults :: Lens' DescribeDefaultParameters (Maybe Int)

-- | Provides an identifier to allow retrieval of paginated results.
describeDefaultParametersResponse_nextToken :: Lens' DescribeDefaultParametersResponse (Maybe Text)

-- | A list of parameters. Each element in the list represents one
--   parameter.
describeDefaultParametersResponse_parameters :: Lens' DescribeDefaultParametersResponse (Maybe [Parameter])

-- | The response's http status code.
describeDefaultParametersResponse_httpStatus :: Lens' DescribeDefaultParametersResponse Int

-- | A list of security group IDs to be assigned to each node in the DAX
--   cluster. (Each of the security group ID is system-generated.)
--   
--   If this parameter is not specified, DAX assigns the default VPC
--   security group to each node.
createCluster_securityGroupIds :: Lens' CreateCluster (Maybe [Text])

-- | The Availability Zones (AZs) in which the cluster nodes will reside
--   after the cluster has been created or updated. If provided, the length
--   of this list must equal the <tt>ReplicationFactor</tt> parameter. If
--   you omit this parameter, DAX will spread the nodes across Availability
--   Zones for the highest availability.
createCluster_availabilityZones :: Lens' CreateCluster (Maybe [Text])

-- | The type of encryption the cluster's endpoint should support. Values
--   are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption</li>
--   <li><tt>TLS</tt> for Transport Layer Security</li>
--   </ul>
createCluster_clusterEndpointEncryptionType :: Lens' CreateCluster (Maybe ClusterEndpointEncryptionType)

-- | Represents the settings used to enable server-side encryption on the
--   cluster.
createCluster_sSESpecification :: Lens' CreateCluster (Maybe SSESpecification)

-- | Specifies the weekly time range during which maintenance on the DAX
--   cluster is performed. It is specified as a range in the format
--   ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
--   window is a 60 minute period. Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:05:00-sun:09:00</tt>
--   
--   If you don't specify a preferred maintenance window when you create or
--   modify a cache cluster, DAX assigns a 60-minute maintenance window on
--   a randomly selected day of the week.
createCluster_preferredMaintenanceWindow :: Lens' CreateCluster (Maybe Text)

-- | A set of tags to associate with the DAX cluster.
createCluster_tags :: Lens' CreateCluster (Maybe [Tag])

-- | The parameter group to be associated with the DAX cluster.
createCluster_parameterGroupName :: Lens' CreateCluster (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon SNS topic to which
--   notifications will be sent.
--   
--   The Amazon SNS topic owner must be same as the DAX cluster owner.
createCluster_notificationTopicArn :: Lens' CreateCluster (Maybe Text)

-- | A description of the cluster.
createCluster_description :: Lens' CreateCluster (Maybe Text)

-- | The name of the subnet group to be used for the replication group.
--   
--   DAX clusters can only run in an Amazon VPC environment. All of the
--   subnets that you specify in a subnet group must exist in the same VPC.
createCluster_subnetGroupName :: Lens' CreateCluster (Maybe Text)

-- | The cluster identifier. This parameter is stored as a lowercase
--   string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 20 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
createCluster_clusterName :: Lens' CreateCluster Text

-- | The compute and memory capacity of the nodes in the cluster.
createCluster_nodeType :: Lens' CreateCluster Text

-- | The number of nodes in the DAX cluster. A replication factor of 1 will
--   create a single-node cluster, without any read replicas. For
--   additional fault tolerance, you can create a multiple node cluster
--   with one or more read replicas. To do this, set
--   <tt>ReplicationFactor</tt> to a number between 3 (one primary and two
--   read replicas) and 10 (one primary and nine read replicas). <tt>If the
--   AvailabilityZones</tt> parameter is provided, its length must equal
--   the <tt>ReplicationFactor</tt>.
--   
--   AWS recommends that you have at least two read replicas per cluster.
createCluster_replicationFactor :: Lens' CreateCluster Int

-- | A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
createCluster_iamRoleArn :: Lens' CreateCluster Text

-- | A description of the DAX cluster that you have created.
createClusterResponse_cluster :: Lens' CreateClusterResponse (Maybe Cluster)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int

-- | The Availability Zone(s) from which to remove nodes.
decreaseReplicationFactor_availabilityZones :: Lens' DecreaseReplicationFactor (Maybe [Text])

-- | The unique identifiers of the nodes to be removed from the cluster.
decreaseReplicationFactor_nodeIdsToRemove :: Lens' DecreaseReplicationFactor (Maybe [Text])

-- | The name of the DAX cluster from which you want to remove nodes.
decreaseReplicationFactor_clusterName :: Lens' DecreaseReplicationFactor Text

-- | The new number of nodes for the DAX cluster.
decreaseReplicationFactor_newReplicationFactor :: Lens' DecreaseReplicationFactor Int

-- | A description of the DAX cluster, after you have decreased its
--   replication factor.
decreaseReplicationFactorResponse_cluster :: Lens' DecreaseReplicationFactorResponse (Maybe Cluster)

-- | The response's http status code.
decreaseReplicationFactorResponse_httpStatus :: Lens' DecreaseReplicationFactorResponse Int

-- | The name of the DAX resource from which the tags should be removed.
untagResource_resourceName :: Lens' UntagResource Text

-- | A list of tag keys. If the DAX cluster has any tags with these keys,
--   then the tags are removed from the cluster.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The tag keys that have been removed from the cluster.
untagResourceResponse_tags :: Lens' UntagResourceResponse (Maybe [Tag])

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The name of the DAX resource to which tags should be added.
tagResource_resourceName :: Lens' TagResource Text

-- | The tags to be assigned to the DAX resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The list of tags that are associated with the DAX resource.
tagResourceResponse_tags :: Lens' TagResourceResponse (Maybe [Tag])

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeParameterGroups_nextToken :: Lens' DescribeParameterGroups (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeParameterGroups_maxResults :: Lens' DescribeParameterGroups (Maybe Int)

-- | The names of the parameter groups.
describeParameterGroups_parameterGroupNames :: Lens' DescribeParameterGroups (Maybe [Text])

-- | Provides an identifier to allow retrieval of paginated results.
describeParameterGroupsResponse_nextToken :: Lens' DescribeParameterGroupsResponse (Maybe Text)

-- | An array of parameter groups. Each element in the array represents one
--   parameter group.
describeParameterGroupsResponse_parameterGroups :: Lens' DescribeParameterGroupsResponse (Maybe [ParameterGroup])

-- | The response's http status code.
describeParameterGroupsResponse_httpStatus :: Lens' DescribeParameterGroupsResponse Int

-- | The Availability Zones (AZs) in which the cluster nodes will be
--   created. All nodes belonging to the cluster are placed in these
--   Availability Zones. Use this parameter if you want to distribute the
--   nodes across multiple AZs.
increaseReplicationFactor_availabilityZones :: Lens' IncreaseReplicationFactor (Maybe [Text])

-- | The name of the DAX cluster that will receive additional nodes.
increaseReplicationFactor_clusterName :: Lens' IncreaseReplicationFactor Text

-- | The new number of nodes for the DAX cluster.
increaseReplicationFactor_newReplicationFactor :: Lens' IncreaseReplicationFactor Int

-- | A description of the DAX cluster. with its new replication factor.
increaseReplicationFactorResponse_cluster :: Lens' IncreaseReplicationFactorResponse (Maybe Cluster)

-- | The response's http status code.
increaseReplicationFactorResponse_httpStatus :: Lens' IncreaseReplicationFactorResponse Int

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeEvents_nextToken :: Lens' DescribeEvents (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeEvents_maxResults :: Lens' DescribeEvents (Maybe Int)

-- | The number of minutes' worth of events to retrieve.
describeEvents_duration :: Lens' DescribeEvents (Maybe Int)

-- | The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
describeEvents_startTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
describeEvents_endTime :: Lens' DescribeEvents (Maybe UTCTime)

-- | The identifier of the event source for which events will be returned.
--   If not specified, then all sources are included in the response.
describeEvents_sourceName :: Lens' DescribeEvents (Maybe Text)

-- | The event source to retrieve events for. If no value is specified, all
--   events are returned.
describeEvents_sourceType :: Lens' DescribeEvents (Maybe SourceType)

-- | Provides an identifier to allow retrieval of paginated results.
describeEventsResponse_nextToken :: Lens' DescribeEventsResponse (Maybe Text)

-- | An array of events. Each element in the array represents one event.
describeEventsResponse_events :: Lens' DescribeEventsResponse (Maybe [Event])

-- | The response's http status code.
describeEventsResponse_httpStatus :: Lens' DescribeEventsResponse Int

-- | The name of the parameter group.
updateParameterGroup_parameterGroupName :: Lens' UpdateParameterGroup Text

-- | An array of name-value pairs for the parameters in the group. Each
--   element in the array represents a single parameter.
--   
--   <tt>record-ttl-millis</tt> and <tt>query-ttl-millis</tt> are the only
--   supported parameter names. For more details, see <a>Configuring TTL
--   Settings</a>.
updateParameterGroup_parameterNameValues :: Lens' UpdateParameterGroup [ParameterNameValue]

-- | The parameter group that has been modified.
updateParameterGroupResponse_parameterGroup :: Lens' UpdateParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
updateParameterGroupResponse_httpStatus :: Lens' UpdateParameterGroupResponse Int

-- | The name of the parameter group to delete.
deleteParameterGroup_parameterGroupName :: Lens' DeleteParameterGroup Text

-- | A user-specified message for this action (i.e., a reason for deleting
--   the parameter group).
deleteParameterGroupResponse_deletionMessage :: Lens' DeleteParameterGroupResponse (Maybe Text)

-- | The response's http status code.
deleteParameterGroupResponse_httpStatus :: Lens' DeleteParameterGroupResponse Int

-- | The name of the DAX cluster containing the node to be rebooted.
rebootNode_clusterName :: Lens' RebootNode Text

-- | The system-assigned ID of the node to be rebooted.
rebootNode_nodeId :: Lens' RebootNode Text

-- | A description of the DAX cluster after a node has been rebooted.
rebootNodeResponse_cluster :: Lens' RebootNodeResponse (Maybe Cluster)

-- | The response's http status code.
rebootNodeResponse_httpStatus :: Lens' RebootNodeResponse Int

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token.
listTags_nextToken :: Lens' ListTags (Maybe Text)

-- | The name of the DAX resource to which the tags belong.
listTags_resourceName :: Lens' ListTags Text

-- | If this value is present, there are additional results to be
--   displayed. To retrieve them, call <tt>ListTags</tt> again, with
--   <tt>NextToken</tt> set to this value.
listTagsResponse_nextToken :: Lens' ListTagsResponse (Maybe Text)

-- | A list of tags currently associated with the DAX cluster.
listTagsResponse_tags :: Lens' ListTagsResponse (Maybe [Tag])

-- | The response's http status code.
listTagsResponse_httpStatus :: Lens' ListTagsResponse Int

-- | A list of user-specified security group IDs to be assigned to each
--   node in the DAX cluster. If this parameter is not specified, DAX
--   assigns the default VPC security group to each node.
updateCluster_securityGroupIds :: Lens' UpdateCluster (Maybe [Text])

-- | The current state of the topic. A value of “active” means that
--   notifications will be sent to the topic. A value of “inactive” means
--   that notifications will not be sent to the topic.
updateCluster_notificationTopicStatus :: Lens' UpdateCluster (Maybe Text)

-- | A range of time when maintenance of DAX cluster software will be
--   performed. For example: <tt>sun:01:00-sun:09:00</tt>. Cluster
--   maintenance normally takes less than 30 minutes, and is performed
--   automatically within the maintenance window.
updateCluster_preferredMaintenanceWindow :: Lens' UpdateCluster (Maybe Text)

-- | The name of a parameter group for this cluster.
updateCluster_parameterGroupName :: Lens' UpdateCluster (Maybe Text)

-- | The Amazon Resource Name (ARN) that identifies the topic.
updateCluster_notificationTopicArn :: Lens' UpdateCluster (Maybe Text)

-- | A description of the changes being made to the cluster.
updateCluster_description :: Lens' UpdateCluster (Maybe Text)

-- | The name of the DAX cluster to be modified.
updateCluster_clusterName :: Lens' UpdateCluster Text

-- | A description of the DAX cluster, after it has been modified.
updateClusterResponse_cluster :: Lens' UpdateClusterResponse (Maybe Cluster)

-- | The response's http status code.
updateClusterResponse_httpStatus :: Lens' UpdateClusterResponse Int

-- | The name of the cluster to be deleted.
deleteCluster_clusterName :: Lens' DeleteCluster Text

-- | A description of the DAX cluster that is being deleted.
deleteClusterResponse_cluster :: Lens' DeleteClusterResponse (Maybe Cluster)

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int

-- | A description for the subnet group
createSubnetGroup_description :: Lens' CreateSubnetGroup (Maybe Text)

-- | A name for the subnet group. This value is stored as a lowercase
--   string.
createSubnetGroup_subnetGroupName :: Lens' CreateSubnetGroup Text

-- | A list of VPC subnet IDs for the subnet group.
createSubnetGroup_subnetIds :: Lens' CreateSubnetGroup [Text]

-- | Represents the output of a <i>CreateSubnetGroup</i> operation.
createSubnetGroupResponse_subnetGroup :: Lens' CreateSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
createSubnetGroupResponse_httpStatus :: Lens' CreateSubnetGroupResponse Int

-- | A list of subnet IDs in the subnet group.
updateSubnetGroup_subnetIds :: Lens' UpdateSubnetGroup (Maybe [Text])

-- | A description of the subnet group.
updateSubnetGroup_description :: Lens' UpdateSubnetGroup (Maybe Text)

-- | The name of the subnet group.
updateSubnetGroup_subnetGroupName :: Lens' UpdateSubnetGroup Text

-- | The subnet group that has been modified.
updateSubnetGroupResponse_subnetGroup :: Lens' UpdateSubnetGroupResponse (Maybe SubnetGroup)

-- | The response's http status code.
updateSubnetGroupResponse_httpStatus :: Lens' UpdateSubnetGroupResponse Int

-- | The name of the subnet group to delete.
deleteSubnetGroup_subnetGroupName :: Lens' DeleteSubnetGroup Text

-- | A user-specified message for this action (i.e., a reason for deleting
--   the subnet group).
deleteSubnetGroupResponse_deletionMessage :: Lens' DeleteSubnetGroupResponse (Maybe Text)

-- | The response's http status code.
deleteSubnetGroupResponse_httpStatus :: Lens' DeleteSubnetGroupResponse Int

-- | An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
describeSubnetGroups_nextToken :: Lens' DescribeSubnetGroups (Maybe Text)

-- | The maximum number of results to include in the response. If more
--   results exist than the specified <tt>MaxResults</tt> value, a token is
--   included in the response so that the remaining results can be
--   retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
describeSubnetGroups_maxResults :: Lens' DescribeSubnetGroups (Maybe Int)

-- | The name of the subnet group.
describeSubnetGroups_subnetGroupNames :: Lens' DescribeSubnetGroups (Maybe [Text])

-- | An array of subnet groups. Each element in the array represents a
--   single subnet group.
describeSubnetGroupsResponse_subnetGroups :: Lens' DescribeSubnetGroupsResponse (Maybe [SubnetGroup])

-- | Provides an identifier to allow retrieval of paginated results.
describeSubnetGroupsResponse_nextToken :: Lens' DescribeSubnetGroupsResponse (Maybe Text)

-- | The response's http status code.
describeSubnetGroupsResponse_httpStatus :: Lens' DescribeSubnetGroupsResponse Int

-- | A description of the parameter group.
createParameterGroup_description :: Lens' CreateParameterGroup (Maybe Text)

-- | The name of the parameter group to apply to all of the clusters in
--   this replication group.
createParameterGroup_parameterGroupName :: Lens' CreateParameterGroup Text

-- | Represents the output of a <i>CreateParameterGroup</i> action.
createParameterGroupResponse_parameterGroup :: Lens' CreateParameterGroupResponse (Maybe ParameterGroup)

-- | The response's http status code.
createParameterGroupResponse_httpStatus :: Lens' CreateParameterGroupResponse Int

-- | The Amazon Resource Name (ARN) that uniquely identifies the cluster.
cluster_clusterArn :: Lens' Cluster (Maybe Text)

-- | The current status of the cluster.
cluster_status :: Lens' Cluster (Maybe Text)

-- | A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
cluster_iamRoleArn :: Lens' Cluster (Maybe Text)

-- | The subnet group where the DAX cluster is running.
cluster_subnetGroup :: Lens' Cluster (Maybe Text)

-- | The total number of nodes in the cluster.
cluster_totalNodes :: Lens' Cluster (Maybe Int)

-- | The parameter group being used by nodes in the cluster.
cluster_parameterGroup :: Lens' Cluster (Maybe ParameterGroupStatus)

-- | The type of encryption supported by the cluster's endpoint. Values
--   are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption<tt>TLS</tt> for Transport Layer
--   Security</li>
--   </ul>
cluster_clusterEndpointEncryptionType :: Lens' Cluster (Maybe ClusterEndpointEncryptionType)

-- | A list of nodes that are currently in the cluster.
cluster_nodes :: Lens' Cluster (Maybe [Node])

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing DAX events to subscribers using Amazon Simple
--   Notification Service (SNS).
cluster_notificationConfiguration :: Lens' Cluster (Maybe NotificationConfiguration)

-- | A list of security groups, and the status of each, for the nodes in
--   the cluster.
cluster_securityGroups :: Lens' Cluster (Maybe [SecurityGroupMembership])

-- | The number of nodes in the cluster that are active (i.e., capable of
--   serving requests).
cluster_activeNodes :: Lens' Cluster (Maybe Int)

-- | A range of time when maintenance of DAX cluster software will be
--   performed. For example: <tt>sun:01:00-sun:09:00</tt>. Cluster
--   maintenance normally takes less than 30 minutes, and is performed
--   automatically within the maintenance window.
cluster_preferredMaintenanceWindow :: Lens' Cluster (Maybe Text)

-- | The description of the cluster.
cluster_description :: Lens' Cluster (Maybe Text)

-- | The description of the server-side encryption status on the specified
--   DAX cluster.
cluster_sSEDescription :: Lens' Cluster (Maybe SSEDescription)

-- | A list of nodes to be removed from the cluster.
cluster_nodeIdsToRemove :: Lens' Cluster (Maybe [Text])

-- | The endpoint for this DAX cluster, consisting of a DNS name, a port
--   number, and a URL. Applications should use the URL to configure the
--   DAX client to find their cluster.
cluster_clusterDiscoveryEndpoint :: Lens' Cluster (Maybe Endpoint)

-- | The node type for the nodes in the cluster. (All nodes in a DAX
--   cluster are of the same type.)
cluster_nodeType :: Lens' Cluster (Maybe Text)

-- | The name of the DAX cluster.
cluster_clusterName :: Lens' Cluster (Maybe Text)

-- | The DNS hostname of the endpoint.
endpoint_address :: Lens' Endpoint (Maybe Text)

-- | The port number that applications should use to connect to the
--   endpoint.
endpoint_port :: Lens' Endpoint (Maybe Int)

-- | The URL that applications should use to connect to the endpoint. The
--   default ports are 8111 for the "dax" protocol and 9111 for the "daxs"
--   protocol.
endpoint_url :: Lens' Endpoint (Maybe Text)

-- | A user-defined message associated with the event.
event_message :: Lens' Event (Maybe Text)

-- | The source of the event. For example, if the event occurred at the
--   node level, the source would be the node ID.
event_sourceName :: Lens' Event (Maybe Text)

-- | The date and time when the event occurred.
event_date :: Lens' Event (Maybe UTCTime)

-- | Specifies the origin of this event - a cluster, a parameter group, a
--   node ID, etc.
event_sourceType :: Lens' Event (Maybe SourceType)

-- | The current status of the node. For example: <tt>available</tt>.
node_nodeStatus :: Lens' Node (Maybe Text)

-- | A system-generated identifier for the node.
node_nodeId :: Lens' Node (Maybe Text)

-- | The status of the parameter group associated with this node. For
--   example, <tt>in-sync</tt>.
node_parameterGroupStatus :: Lens' Node (Maybe Text)

-- | The Availability Zone (AZ) in which the node has been deployed.
node_availabilityZone :: Lens' Node (Maybe Text)

-- | The date and time (in UNIX epoch format) when the node was launched.
node_nodeCreateTime :: Lens' Node (Maybe UTCTime)

-- | The endpoint for the node, consisting of a DNS name and a port number.
--   Client applications can connect directly to a node endpoint, if
--   desired (as an alternative to allowing DAX client software to
--   intelligently route requests and responses to nodes in the DAX
--   cluster.
node_endpoint :: Lens' Node (Maybe Endpoint)

-- | The parameter value for this node type.
nodeTypeSpecificValue_value :: Lens' NodeTypeSpecificValue (Maybe Text)

-- | A node type to which the parameter value applies.
nodeTypeSpecificValue_nodeType :: Lens' NodeTypeSpecificValue (Maybe Text)

-- | The current state of the topic. A value of “active” means that
--   notifications will be sent to the topic. A value of “inactive” means
--   that notifications will not be sent to the topic.
notificationConfiguration_topicStatus :: Lens' NotificationConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) that identifies the topic.
notificationConfiguration_topicArn :: Lens' NotificationConfiguration (Maybe Text)

-- | The conditions under which changes to this parameter can be applied.
--   For example, <tt>requires-reboot</tt> indicates that a new value for
--   this parameter will only take effect if a node is rebooted.
parameter_changeType :: Lens' Parameter (Maybe ChangeType)

-- | A range of values within which the parameter can be set.
parameter_allowedValues :: Lens' Parameter (Maybe Text)

-- | How the parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
parameter_source :: Lens' Parameter (Maybe Text)

-- | The value for the parameter.
parameter_parameterValue :: Lens' Parameter (Maybe Text)

-- | Determines whether the parameter can be applied to any nodes, or only
--   nodes of a particular type.
parameter_parameterType :: Lens' Parameter (Maybe ParameterType)

-- | The name of the parameter.
parameter_parameterName :: Lens' Parameter (Maybe Text)

-- | A description of the parameter
parameter_description :: Lens' Parameter (Maybe Text)

-- | A list of node types, and specific parameter values for each node.
parameter_nodeTypeSpecificValues :: Lens' Parameter (Maybe [NodeTypeSpecificValue])

-- | The data type of the parameter. For example, <tt>integer</tt>:
parameter_dataType :: Lens' Parameter (Maybe Text)

-- | Whether the customer is allowed to modify the parameter.
parameter_isModifiable :: Lens' Parameter (Maybe IsModifiable)

-- | The name of the parameter group.
parameterGroup_parameterGroupName :: Lens' ParameterGroup (Maybe Text)

-- | A description of the parameter group.
parameterGroup_description :: Lens' ParameterGroup (Maybe Text)

-- | The node IDs of one or more nodes to be rebooted.
parameterGroupStatus_nodeIdsToReboot :: Lens' ParameterGroupStatus (Maybe [Text])

-- | The name of the parameter group.
parameterGroupStatus_parameterGroupName :: Lens' ParameterGroupStatus (Maybe Text)

-- | The status of parameter updates.
parameterGroupStatus_parameterApplyStatus :: Lens' ParameterGroupStatus (Maybe Text)

-- | The value of the parameter.
parameterNameValue_parameterValue :: Lens' ParameterNameValue (Maybe Text)

-- | The name of the parameter.
parameterNameValue_parameterName :: Lens' ParameterNameValue (Maybe Text)

-- | The current state of server-side encryption:
--   
--   <ul>
--   <li><tt>ENABLING</tt> - Server-side encryption is being enabled.</li>
--   <li><tt>ENABLED</tt> - Server-side encryption is enabled.</li>
--   <li><tt>DISABLING</tt> - Server-side encryption is being
--   disabled.</li>
--   <li><tt>DISABLED</tt> - Server-side encryption is disabled.</li>
--   </ul>
sSEDescription_status :: Lens' SSEDescription (Maybe SSEStatus)

-- | Indicates whether server-side encryption is enabled (true) or disabled
--   (false) on the cluster.
sSESpecification_enabled :: Lens' SSESpecification Bool

-- | The status of this security group.
securityGroupMembership_status :: Lens' SecurityGroupMembership (Maybe Text)

-- | The unique ID for this security group.
securityGroupMembership_securityGroupIdentifier :: Lens' SecurityGroupMembership (Maybe Text)

-- | The system-assigned identifier for the subnet.
subnet_subnetIdentifier :: Lens' Subnet (Maybe Text)

-- | The Availability Zone (AZ) for the subnet.
subnet_subnetAvailabilityZone :: Lens' Subnet (Maybe Text)

-- | The description of the subnet group.
subnetGroup_description :: Lens' SubnetGroup (Maybe Text)

-- | The name of the subnet group.
subnetGroup_subnetGroupName :: Lens' SubnetGroup (Maybe Text)

-- | The Amazon Virtual Private Cloud identifier (VPC ID) of the subnet
--   group.
subnetGroup_vpcId :: Lens' SubnetGroup (Maybe Text)

-- | A list of subnets associated with the subnet group.
subnetGroup_subnets :: Lens' SubnetGroup (Maybe [Subnet])

-- | The key for the tag. Tag keys are case sensitive. Every DAX cluster
--   can only have one tag with the same key. If you try to add an existing
--   tag (same key), the existing tag value will be updated to the new
--   value.
tag_key :: Lens' Tag (Maybe Text)

-- | The value of the tag. Tag values are case-sensitive and can be null.
tag_value :: Lens' Tag (Maybe Text)


module Network.AWS.DAX.Waiters


-- | Derived from API version <tt>2017-04-19</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   DAX is a managed caching service engineered for Amazon DynamoDB. DAX
--   dramatically speeds up database reads by caching frequently-accessed
--   data from DynamoDB, so applications can access that data with
--   sub-millisecond latency. You can create a DAX cluster easily, using
--   the AWS Management Console. With a few simple modifications to your
--   code, your application can begin taking advantage of the DAX cluster
--   and realize significant improvements in read performance.
module Network.AWS.DAX

-- | API version <tt>2017-04-19</tt> of the Amazon DynamoDB Accelerator
--   (DAX) SDK configuration.
defaultService :: Service

-- | The requested subnet is being used by another subnet group.
_SubnetInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the maximum number of x509 certificates that can be
--   created for encrypted clusters in a 30 day period. Contact AWS
--   customer support to discuss options for continuing to create encrypted
--   clusters.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC network is in an invalid state.
_InvalidVPCNetworkStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of subnets in a subnet group.
_SubnetQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to exceed the maximum number of parameter groups.
_ParameterGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | There are not enough system resources to create the cluster you
--   requested (or to resize an already-existing cluster).
_InsufficientClusterCapacityFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified service linked role (SLR) was not found.
_ServiceLinkedRoleNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two or more incompatible parameters were specified.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested cluster ID does not refer to an existing DAX cluster.
_ClusterNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request cannot be processed because it would exceed the allowed
--   number of subnets in a subnet group.
_SubnetGroupQuotaExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag does not exist.
_TagNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified subnet group already exists.
_SubnetGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to exceed the maximum number of nodes for your AWS
--   account.
_NodeQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested subnet group name does not refer to an existing subnet
--   group.
_SubnetGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified parameter group already exists.
_ParameterGroupAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified parameter group does not exist.
_ParameterGroupNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value for a parameter is invalid.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | None of the nodes in the cluster have the given node ID.
_NodeNotFoundFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to exceed the maximum number of nodes for a DAX
--   cluster.
_NodeQuotaForClusterExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You already have a DAX cluster with the given identifier.
_ClusterAlreadyExistsFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) supplied in the request is not valid.
_InvalidARNFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested DAX cluster is not in the <i>available</i> state.
_InvalidClusterStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded the maximum number of tags for this DAX cluster.
_TagQuotaPerResourceExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified subnet group is currently in use.
_SubnetGroupInUseFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters in a parameter group are in an invalid state.
_InvalidParameterGroupStateFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to exceed the maximum number of DAX clusters for
--   your AWS account.
_ClusterQuotaForCustomerExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid subnet identifier was specified.
_InvalidSubnet :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeParameters</a> smart constructor.
data DescribeParameters
DescribeParameters' :: Maybe Text -> Maybe Int -> Maybe Text -> Text -> DescribeParameters

-- | Create a value of <a>DescribeParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameters'</a>,
--   <a>describeParameters_nextToken</a> - An optional token returned from
--   a prior request. Use this token for pagination of results from this
--   action. If this parameter is specified, the response includes only
--   results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeParameters'</a>,
--   <a>describeParameters_maxResults</a> - The maximum number of results
--   to include in the response. If more results exist than the specified
--   <tt>MaxResults</tt> value, a token is included in the response so that
--   the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:source:DescribeParameters'</a>,
--   <a>describeParameters_source</a> - How the parameter is defined. For
--   example, <tt>system</tt> denotes a system-defined parameter.
--   
--   <a>$sel:parameterGroupName:DescribeParameters'</a>,
--   <a>describeParameters_parameterGroupName</a> - The name of the
--   parameter group.
newDescribeParameters :: Text -> DescribeParameters

-- | <i>See:</i> <a>newDescribeParametersResponse</a> smart constructor.
data DescribeParametersResponse
DescribeParametersResponse' :: Maybe Text -> Maybe [Parameter] -> Int -> DescribeParametersResponse

-- | Create a value of <a>DescribeParametersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameters'</a>,
--   <a>describeParametersResponse_nextToken</a> - Provides an identifier
--   to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:DescribeParametersResponse'</a>,
--   <a>describeParametersResponse_parameters</a> - A list of parameters
--   within a parameter group. Each element in the list represents one
--   parameter.
--   
--   <a>$sel:httpStatus:DescribeParametersResponse'</a>,
--   <a>describeParametersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeParametersResponse :: Int -> DescribeParametersResponse

-- | <i>See:</i> <a>newDescribeClusters</a> smart constructor.
data DescribeClusters
DescribeClusters' :: Maybe Text -> Maybe Int -> Maybe [Text] -> DescribeClusters

-- | Create a value of <a>DescribeClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeClusters'</a>,
--   <a>describeClusters_nextToken</a> - An optional token returned from a
--   prior request. Use this token for pagination of results from this
--   action. If this parameter is specified, the response includes only
--   results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeClusters'</a>,
--   <a>describeClusters_maxResults</a> - The maximum number of results to
--   include in the response. If more results exist than the specified
--   <tt>MaxResults</tt> value, a token is included in the response so that
--   the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:clusterNames:DescribeClusters'</a>,
--   <a>describeClusters_clusterNames</a> - The names of the DAX clusters
--   being described.
newDescribeClusters :: DescribeClusters

-- | <i>See:</i> <a>newDescribeClustersResponse</a> smart constructor.
data DescribeClustersResponse
DescribeClustersResponse' :: Maybe Text -> Maybe [Cluster] -> Int -> DescribeClustersResponse

-- | Create a value of <a>DescribeClustersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeClusters'</a>,
--   <a>describeClustersResponse_nextToken</a> - Provides an identifier to
--   allow retrieval of paginated results.
--   
--   <a>$sel:clusters:DescribeClustersResponse'</a>,
--   <a>describeClustersResponse_clusters</a> - The descriptions of your
--   DAX clusters, in response to a <i>DescribeClusters</i> request.
--   
--   <a>$sel:httpStatus:DescribeClustersResponse'</a>,
--   <a>describeClustersResponse_httpStatus</a> - The response's http
--   status code.
newDescribeClustersResponse :: Int -> DescribeClustersResponse

-- | <i>See:</i> <a>newDescribeDefaultParameters</a> smart constructor.
data DescribeDefaultParameters
DescribeDefaultParameters' :: Maybe Text -> Maybe Int -> DescribeDefaultParameters

-- | Create a value of <a>DescribeDefaultParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDefaultParameters'</a>,
--   <a>describeDefaultParameters_nextToken</a> - An optional token
--   returned from a prior request. Use this token for pagination of
--   results from this action. If this parameter is specified, the response
--   includes only results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeDefaultParameters'</a>,
--   <a>describeDefaultParameters_maxResults</a> - The maximum number of
--   results to include in the response. If more results exist than the
--   specified <tt>MaxResults</tt> value, a token is included in the
--   response so that the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
newDescribeDefaultParameters :: DescribeDefaultParameters

-- | <i>See:</i> <a>newDescribeDefaultParametersResponse</a> smart
--   constructor.
data DescribeDefaultParametersResponse
DescribeDefaultParametersResponse' :: Maybe Text -> Maybe [Parameter] -> Int -> DescribeDefaultParametersResponse

-- | Create a value of <a>DescribeDefaultParametersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeDefaultParameters'</a>,
--   <a>describeDefaultParametersResponse_nextToken</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:parameters:DescribeDefaultParametersResponse'</a>,
--   <a>describeDefaultParametersResponse_parameters</a> - A list of
--   parameters. Each element in the list represents one parameter.
--   
--   <a>$sel:httpStatus:DescribeDefaultParametersResponse'</a>,
--   <a>describeDefaultParametersResponse_httpStatus</a> - The response's
--   http status code.
newDescribeDefaultParametersResponse :: Int -> DescribeDefaultParametersResponse

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe [Text] -> Maybe [Text] -> Maybe ClusterEndpointEncryptionType -> Maybe SSESpecification -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Int -> Text -> CreateCluster

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:CreateCluster'</a>,
--   <a>createCluster_securityGroupIds</a> - A list of security group IDs
--   to be assigned to each node in the DAX cluster. (Each of the security
--   group ID is system-generated.)
--   
--   If this parameter is not specified, DAX assigns the default VPC
--   security group to each node.
--   
--   <a>$sel:availabilityZones:CreateCluster'</a>,
--   <a>createCluster_availabilityZones</a> - The Availability Zones (AZs)
--   in which the cluster nodes will reside after the cluster has been
--   created or updated. If provided, the length of this list must equal
--   the <tt>ReplicationFactor</tt> parameter. If you omit this parameter,
--   DAX will spread the nodes across Availability Zones for the highest
--   availability.
--   
--   <a>$sel:clusterEndpointEncryptionType:CreateCluster'</a>,
--   <a>createCluster_clusterEndpointEncryptionType</a> - The type of
--   encryption the cluster's endpoint should support. Values are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption</li>
--   <li><tt>TLS</tt> for Transport Layer Security</li>
--   </ul>
--   
--   <a>$sel:sSESpecification:CreateCluster'</a>,
--   <a>createCluster_sSESpecification</a> - Represents the settings used
--   to enable server-side encryption on the cluster.
--   
--   <a>$sel:preferredMaintenanceWindow:CreateCluster'</a>,
--   <a>createCluster_preferredMaintenanceWindow</a> - Specifies the weekly
--   time range during which maintenance on the DAX cluster is performed.
--   It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H
--   Clock UTC). The minimum maintenance window is a 60 minute period.
--   Valid values for <tt>ddd</tt> are:
--   
--   <ul>
--   <li><pre>sun</pre></li>
--   <li><pre>mon</pre></li>
--   <li><pre>tue</pre></li>
--   <li><pre>wed</pre></li>
--   <li><pre>thu</pre></li>
--   <li><pre>fri</pre></li>
--   <li><pre>sat</pre></li>
--   </ul>
--   
--   Example: <tt>sun:05:00-sun:09:00</tt>
--   
--   If you don't specify a preferred maintenance window when you create or
--   modify a cache cluster, DAX assigns a 60-minute maintenance window on
--   a randomly selected day of the week.
--   
--   <a>$sel:tags:CreateCluster'</a>, <a>createCluster_tags</a> - A set of
--   tags to associate with the DAX cluster.
--   
--   <a>$sel:parameterGroupName:CreateCluster'</a>,
--   <a>createCluster_parameterGroupName</a> - The parameter group to be
--   associated with the DAX cluster.
--   
--   <a>$sel:notificationTopicArn:CreateCluster'</a>,
--   <a>createCluster_notificationTopicArn</a> - The Amazon Resource Name
--   (ARN) of the Amazon SNS topic to which notifications will be sent.
--   
--   The Amazon SNS topic owner must be same as the DAX cluster owner.
--   
--   <a>$sel:description:CreateCluster'</a>,
--   <a>createCluster_description</a> - A description of the cluster.
--   
--   <a>$sel:subnetGroupName:CreateCluster'</a>,
--   <a>createCluster_subnetGroupName</a> - The name of the subnet group to
--   be used for the replication group.
--   
--   DAX clusters can only run in an Amazon VPC environment. All of the
--   subnets that you specify in a subnet group must exist in the same VPC.
--   
--   <a>$sel:clusterName:CreateCluster'</a>,
--   <a>createCluster_clusterName</a> - The cluster identifier. This
--   parameter is stored as a lowercase string.
--   
--   <b>Constraints:</b>
--   
--   <ul>
--   <li>A name must contain from 1 to 20 alphanumeric characters or
--   hyphens.</li>
--   <li>The first character must be a letter.</li>
--   <li>A name cannot end with a hyphen or contain two consecutive
--   hyphens.</li>
--   </ul>
--   
--   <a>$sel:nodeType:CreateCluster'</a>, <a>createCluster_nodeType</a> -
--   The compute and memory capacity of the nodes in the cluster.
--   
--   <a>$sel:replicationFactor:CreateCluster'</a>,
--   <a>createCluster_replicationFactor</a> - The number of nodes in the
--   DAX cluster. A replication factor of 1 will create a single-node
--   cluster, without any read replicas. For additional fault tolerance,
--   you can create a multiple node cluster with one or more read replicas.
--   To do this, set <tt>ReplicationFactor</tt> to a number between 3 (one
--   primary and two read replicas) and 10 (one primary and nine read
--   replicas). <tt>If the AvailabilityZones</tt> parameter is provided,
--   its length must equal the <tt>ReplicationFactor</tt>.
--   
--   AWS recommends that you have at least two read replicas per cluster.
--   
--   <a>$sel:iamRoleArn:CreateCluster'</a>, <a>createCluster_iamRoleArn</a>
--   - A valid Amazon Resource Name (ARN) that identifies an IAM role. At
--   runtime, DAX will assume this role and use the role's permissions to
--   access DynamoDB on your behalf.
newCreateCluster :: Text -> Text -> Int -> Text -> CreateCluster

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Cluster -> Int -> CreateClusterResponse

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:CreateClusterResponse'</a>,
--   <a>createClusterResponse_cluster</a> - A description of the DAX
--   cluster that you have created.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | <i>See:</i> <a>newDecreaseReplicationFactor</a> smart constructor.
data DecreaseReplicationFactor
DecreaseReplicationFactor' :: Maybe [Text] -> Maybe [Text] -> Text -> Int -> DecreaseReplicationFactor

-- | Create a value of <a>DecreaseReplicationFactor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZones:DecreaseReplicationFactor'</a>,
--   <a>decreaseReplicationFactor_availabilityZones</a> - The Availability
--   Zone(s) from which to remove nodes.
--   
--   <a>$sel:nodeIdsToRemove:DecreaseReplicationFactor'</a>,
--   <a>decreaseReplicationFactor_nodeIdsToRemove</a> - The unique
--   identifiers of the nodes to be removed from the cluster.
--   
--   <a>$sel:clusterName:DecreaseReplicationFactor'</a>,
--   <a>decreaseReplicationFactor_clusterName</a> - The name of the DAX
--   cluster from which you want to remove nodes.
--   
--   <a>$sel:newReplicationFactor':DecreaseReplicationFactor'</a>,
--   <a>decreaseReplicationFactor_newReplicationFactor</a> - The new number
--   of nodes for the DAX cluster.
newDecreaseReplicationFactor :: Text -> Int -> DecreaseReplicationFactor

-- | <i>See:</i> <a>newDecreaseReplicationFactorResponse</a> smart
--   constructor.
data DecreaseReplicationFactorResponse
DecreaseReplicationFactorResponse' :: Maybe Cluster -> Int -> DecreaseReplicationFactorResponse

-- | Create a value of <a>DecreaseReplicationFactorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DecreaseReplicationFactorResponse'</a>,
--   <a>decreaseReplicationFactorResponse_cluster</a> - A description of
--   the DAX cluster, after you have decreased its replication factor.
--   
--   <a>$sel:httpStatus:DecreaseReplicationFactorResponse'</a>,
--   <a>decreaseReplicationFactorResponse_httpStatus</a> - The response's
--   http status code.
newDecreaseReplicationFactorResponse :: Int -> DecreaseReplicationFactorResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:UntagResource'</a>,
--   <a>untagResource_resourceName</a> - The name of the DAX resource from
--   which the tags should be removed.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag keys. If the DAX cluster has any tags with these keys,
--   then the tags are removed from the cluster.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Maybe [Tag] -> Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_tags</a> - The tag keys that have been
--   removed from the cluster.
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceName:TagResource'</a>, <a>tagResource_resourceName</a>
--   - The name of the DAX resource to which tags should be added.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   be assigned to the DAX resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Maybe [Tag] -> Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResourceResponse_tags</a> - The
--   list of tags that are associated with the DAX resource.
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newDescribeParameterGroups</a> smart constructor.
data DescribeParameterGroups
DescribeParameterGroups' :: Maybe Text -> Maybe Int -> Maybe [Text] -> DescribeParameterGroups

-- | Create a value of <a>DescribeParameterGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_nextToken</a> - An optional token returned
--   from a prior request. Use this token for pagination of results from
--   this action. If this parameter is specified, the response includes
--   only results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_maxResults</a> - The maximum number of
--   results to include in the response. If more results exist than the
--   specified <tt>MaxResults</tt> value, a token is included in the
--   response so that the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:parameterGroupNames:DescribeParameterGroups'</a>,
--   <a>describeParameterGroups_parameterGroupNames</a> - The names of the
--   parameter groups.
newDescribeParameterGroups :: DescribeParameterGroups

-- | <i>See:</i> <a>newDescribeParameterGroupsResponse</a> smart
--   constructor.
data DescribeParameterGroupsResponse
DescribeParameterGroupsResponse' :: Maybe Text -> Maybe [ParameterGroup] -> Int -> DescribeParameterGroupsResponse

-- | Create a value of <a>DescribeParameterGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeParameterGroups'</a>,
--   <a>describeParameterGroupsResponse_nextToken</a> - Provides an
--   identifier to allow retrieval of paginated results.
--   
--   <a>$sel:parameterGroups:DescribeParameterGroupsResponse'</a>,
--   <a>describeParameterGroupsResponse_parameterGroups</a> - An array of
--   parameter groups. Each element in the array represents one parameter
--   group.
--   
--   <a>$sel:httpStatus:DescribeParameterGroupsResponse'</a>,
--   <a>describeParameterGroupsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeParameterGroupsResponse :: Int -> DescribeParameterGroupsResponse

-- | <i>See:</i> <a>newIncreaseReplicationFactor</a> smart constructor.
data IncreaseReplicationFactor
IncreaseReplicationFactor' :: Maybe [Text] -> Text -> Int -> IncreaseReplicationFactor

-- | Create a value of <a>IncreaseReplicationFactor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availabilityZones:IncreaseReplicationFactor'</a>,
--   <a>increaseReplicationFactor_availabilityZones</a> - The Availability
--   Zones (AZs) in which the cluster nodes will be created. All nodes
--   belonging to the cluster are placed in these Availability Zones. Use
--   this parameter if you want to distribute the nodes across multiple
--   AZs.
--   
--   <a>$sel:clusterName:IncreaseReplicationFactor'</a>,
--   <a>increaseReplicationFactor_clusterName</a> - The name of the DAX
--   cluster that will receive additional nodes.
--   
--   <a>$sel:newReplicationFactor':IncreaseReplicationFactor'</a>,
--   <a>increaseReplicationFactor_newReplicationFactor</a> - The new number
--   of nodes for the DAX cluster.
newIncreaseReplicationFactor :: Text -> Int -> IncreaseReplicationFactor

-- | <i>See:</i> <a>newIncreaseReplicationFactorResponse</a> smart
--   constructor.
data IncreaseReplicationFactorResponse
IncreaseReplicationFactorResponse' :: Maybe Cluster -> Int -> IncreaseReplicationFactorResponse

-- | Create a value of <a>IncreaseReplicationFactorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:IncreaseReplicationFactorResponse'</a>,
--   <a>increaseReplicationFactorResponse_cluster</a> - A description of
--   the DAX cluster. with its new replication factor.
--   
--   <a>$sel:httpStatus:IncreaseReplicationFactorResponse'</a>,
--   <a>increaseReplicationFactorResponse_httpStatus</a> - The response's
--   http status code.
newIncreaseReplicationFactorResponse :: Int -> IncreaseReplicationFactorResponse

-- | <i>See:</i> <a>newDescribeEvents</a> smart constructor.
data DescribeEvents
DescribeEvents' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe SourceType -> DescribeEvents

-- | Create a value of <a>DescribeEvents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvents'</a>, <a>describeEvents_nextToken</a>
--   - An optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token, up to
--   the value specified by <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeEvents'</a>,
--   <a>describeEvents_maxResults</a> - The maximum number of results to
--   include in the response. If more results exist than the specified
--   <tt>MaxResults</tt> value, a token is included in the response so that
--   the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:duration:DescribeEvents'</a>, <a>describeEvents_duration</a> -
--   The number of minutes' worth of events to retrieve.
--   
--   <a>$sel:startTime:DescribeEvents'</a>, <a>describeEvents_startTime</a>
--   - The beginning of the time interval to retrieve events for, specified
--   in ISO 8601 format.
--   
--   <a>$sel:endTime:DescribeEvents'</a>, <a>describeEvents_endTime</a> -
--   The end of the time interval for which to retrieve events, specified
--   in ISO 8601 format.
--   
--   <a>$sel:sourceName:DescribeEvents'</a>,
--   <a>describeEvents_sourceName</a> - The identifier of the event source
--   for which events will be returned. If not specified, then all sources
--   are included in the response.
--   
--   <a>$sel:sourceType:DescribeEvents'</a>,
--   <a>describeEvents_sourceType</a> - The event source to retrieve events
--   for. If no value is specified, all events are returned.
newDescribeEvents :: DescribeEvents

-- | <i>See:</i> <a>newDescribeEventsResponse</a> smart constructor.
data DescribeEventsResponse
DescribeEventsResponse' :: Maybe Text -> Maybe [Event] -> Int -> DescribeEventsResponse

-- | Create a value of <a>DescribeEventsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeEvents'</a>,
--   <a>describeEventsResponse_nextToken</a> - Provides an identifier to
--   allow retrieval of paginated results.
--   
--   <a>$sel:events:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_events</a> - An array of events. Each
--   element in the array represents one event.
--   
--   <a>$sel:httpStatus:DescribeEventsResponse'</a>,
--   <a>describeEventsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeEventsResponse :: Int -> DescribeEventsResponse

-- | <i>See:</i> <a>newUpdateParameterGroup</a> smart constructor.
data UpdateParameterGroup
UpdateParameterGroup' :: Text -> [ParameterNameValue] -> UpdateParameterGroup

-- | Create a value of <a>UpdateParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:UpdateParameterGroup'</a>,
--   <a>updateParameterGroup_parameterGroupName</a> - The name of the
--   parameter group.
--   
--   <a>$sel:parameterNameValues:UpdateParameterGroup'</a>,
--   <a>updateParameterGroup_parameterNameValues</a> - An array of
--   name-value pairs for the parameters in the group. Each element in the
--   array represents a single parameter.
--   
--   <tt>record-ttl-millis</tt> and <tt>query-ttl-millis</tt> are the only
--   supported parameter names. For more details, see <a>Configuring TTL
--   Settings</a>.
newUpdateParameterGroup :: Text -> UpdateParameterGroup

-- | <i>See:</i> <a>newUpdateParameterGroupResponse</a> smart constructor.
data UpdateParameterGroupResponse
UpdateParameterGroupResponse' :: Maybe ParameterGroup -> Int -> UpdateParameterGroupResponse

-- | Create a value of <a>UpdateParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:UpdateParameterGroupResponse'</a>,
--   <a>updateParameterGroupResponse_parameterGroup</a> - The parameter
--   group that has been modified.
--   
--   <a>$sel:httpStatus:UpdateParameterGroupResponse'</a>,
--   <a>updateParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateParameterGroupResponse :: Int -> UpdateParameterGroupResponse

-- | <i>See:</i> <a>newDeleteParameterGroup</a> smart constructor.
data DeleteParameterGroup
DeleteParameterGroup' :: Text -> DeleteParameterGroup

-- | Create a value of <a>DeleteParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:DeleteParameterGroup'</a>,
--   <a>deleteParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to delete.
newDeleteParameterGroup :: Text -> DeleteParameterGroup

-- | <i>See:</i> <a>newDeleteParameterGroupResponse</a> smart constructor.
data DeleteParameterGroupResponse
DeleteParameterGroupResponse' :: Maybe Text -> Int -> DeleteParameterGroupResponse

-- | Create a value of <a>DeleteParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deletionMessage:DeleteParameterGroupResponse'</a>,
--   <a>deleteParameterGroupResponse_deletionMessage</a> - A user-specified
--   message for this action (i.e., a reason for deleting the parameter
--   group).
--   
--   <a>$sel:httpStatus:DeleteParameterGroupResponse'</a>,
--   <a>deleteParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteParameterGroupResponse :: Int -> DeleteParameterGroupResponse

-- | <i>See:</i> <a>newRebootNode</a> smart constructor.
data RebootNode
RebootNode' :: Text -> Text -> RebootNode

-- | Create a value of <a>RebootNode</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:RebootNode'</a>, <a>rebootNode_clusterName</a> -
--   The name of the DAX cluster containing the node to be rebooted.
--   
--   <a>$sel:nodeId:RebootNode'</a>, <a>rebootNode_nodeId</a> - The
--   system-assigned ID of the node to be rebooted.
newRebootNode :: Text -> Text -> RebootNode

-- | <i>See:</i> <a>newRebootNodeResponse</a> smart constructor.
data RebootNodeResponse
RebootNodeResponse' :: Maybe Cluster -> Int -> RebootNodeResponse

-- | Create a value of <a>RebootNodeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:RebootNodeResponse'</a>,
--   <a>rebootNodeResponse_cluster</a> - A description of the DAX cluster
--   after a node has been rebooted.
--   
--   <a>$sel:httpStatus:RebootNodeResponse'</a>,
--   <a>rebootNodeResponse_httpStatus</a> - The response's http status
--   code.
newRebootNodeResponse :: Int -> RebootNodeResponse

-- | <i>See:</i> <a>newListTags</a> smart constructor.
data ListTags
ListTags' :: Maybe Text -> Text -> ListTags

-- | Create a value of <a>ListTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTags'</a>, <a>listTags_nextToken</a> - An
--   optional token returned from a prior request. Use this token for
--   pagination of results from this action. If this parameter is
--   specified, the response includes only results beyond the token.
--   
--   <a>$sel:resourceName:ListTags'</a>, <a>listTags_resourceName</a> - The
--   name of the DAX resource to which the tags belong.
newListTags :: Text -> ListTags

-- | <i>See:</i> <a>newListTagsResponse</a> smart constructor.
data ListTagsResponse
ListTagsResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsResponse

-- | Create a value of <a>ListTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTags'</a>, <a>listTagsResponse_nextToken</a> -
--   If this value is present, there are additional results to be
--   displayed. To retrieve them, call <tt>ListTags</tt> again, with
--   <tt>NextToken</tt> set to this value.
--   
--   <a>$sel:tags:ListTagsResponse'</a>, <a>listTagsResponse_tags</a> - A
--   list of tags currently associated with the DAX cluster.
--   
--   <a>$sel:httpStatus:ListTagsResponse'</a>,
--   <a>listTagsResponse_httpStatus</a> - The response's http status code.
newListTagsResponse :: Int -> ListTagsResponse

-- | <i>See:</i> <a>newUpdateCluster</a> smart constructor.
data UpdateCluster
UpdateCluster' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateCluster

-- | Create a value of <a>UpdateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:UpdateCluster'</a>,
--   <a>updateCluster_securityGroupIds</a> - A list of user-specified
--   security group IDs to be assigned to each node in the DAX cluster. If
--   this parameter is not specified, DAX assigns the default VPC security
--   group to each node.
--   
--   <a>$sel:notificationTopicStatus:UpdateCluster'</a>,
--   <a>updateCluster_notificationTopicStatus</a> - The current state of
--   the topic. A value of “active” means that notifications will be sent
--   to the topic. A value of “inactive” means that notifications will not
--   be sent to the topic.
--   
--   <a>$sel:preferredMaintenanceWindow:UpdateCluster'</a>,
--   <a>updateCluster_preferredMaintenanceWindow</a> - A range of time when
--   maintenance of DAX cluster software will be performed. For example:
--   <tt>sun:01:00-sun:09:00</tt>. Cluster maintenance normally takes less
--   than 30 minutes, and is performed automatically within the maintenance
--   window.
--   
--   <a>$sel:parameterGroupName:UpdateCluster'</a>,
--   <a>updateCluster_parameterGroupName</a> - The name of a parameter
--   group for this cluster.
--   
--   <a>$sel:notificationTopicArn:UpdateCluster'</a>,
--   <a>updateCluster_notificationTopicArn</a> - The Amazon Resource Name
--   (ARN) that identifies the topic.
--   
--   <a>$sel:description:UpdateCluster'</a>,
--   <a>updateCluster_description</a> - A description of the changes being
--   made to the cluster.
--   
--   <a>$sel:clusterName:UpdateCluster'</a>,
--   <a>updateCluster_clusterName</a> - The name of the DAX cluster to be
--   modified.
newUpdateCluster :: Text -> UpdateCluster

-- | <i>See:</i> <a>newUpdateClusterResponse</a> smart constructor.
data UpdateClusterResponse
UpdateClusterResponse' :: Maybe Cluster -> Int -> UpdateClusterResponse

-- | Create a value of <a>UpdateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_cluster</a> - A description of the DAX
--   cluster, after it has been modified.
--   
--   <a>$sel:httpStatus:UpdateClusterResponse'</a>,
--   <a>updateClusterResponse_httpStatus</a> - The response's http status
--   code.
newUpdateClusterResponse :: Int -> UpdateClusterResponse

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Text -> DeleteCluster

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DeleteCluster'</a>,
--   <a>deleteCluster_clusterName</a> - The name of the cluster to be
--   deleted.
newDeleteCluster :: Text -> DeleteCluster

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Maybe Cluster -> Int -> DeleteClusterResponse

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_cluster</a> - A description of the DAX
--   cluster that is being deleted.
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | <i>See:</i> <a>newCreateSubnetGroup</a> smart constructor.
data CreateSubnetGroup
CreateSubnetGroup' :: Maybe Text -> Text -> [Text] -> CreateSubnetGroup

-- | Create a value of <a>CreateSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_description</a> - A description for the subnet
--   group
--   
--   <a>$sel:subnetGroupName:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_subnetGroupName</a> - A name for the subnet
--   group. This value is stored as a lowercase string.
--   
--   <a>$sel:subnetIds:CreateSubnetGroup'</a>,
--   <a>createSubnetGroup_subnetIds</a> - A list of VPC subnet IDs for the
--   subnet group.
newCreateSubnetGroup :: Text -> CreateSubnetGroup

-- | <i>See:</i> <a>newCreateSubnetGroupResponse</a> smart constructor.
data CreateSubnetGroupResponse
CreateSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> CreateSubnetGroupResponse

-- | Create a value of <a>CreateSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:CreateSubnetGroupResponse'</a>,
--   <a>createSubnetGroupResponse_subnetGroup</a> - Represents the output
--   of a <i>CreateSubnetGroup</i> operation.
--   
--   <a>$sel:httpStatus:CreateSubnetGroupResponse'</a>,
--   <a>createSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateSubnetGroupResponse :: Int -> CreateSubnetGroupResponse

-- | <i>See:</i> <a>newUpdateSubnetGroup</a> smart constructor.
data UpdateSubnetGroup
UpdateSubnetGroup' :: Maybe [Text] -> Maybe Text -> Text -> UpdateSubnetGroup

-- | Create a value of <a>UpdateSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIds:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_subnetIds</a> - A list of subnet IDs in the
--   subnet group.
--   
--   <a>$sel:description:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_description</a> - A description of the subnet
--   group.
--   
--   <a>$sel:subnetGroupName:UpdateSubnetGroup'</a>,
--   <a>updateSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group.
newUpdateSubnetGroup :: Text -> UpdateSubnetGroup

-- | <i>See:</i> <a>newUpdateSubnetGroupResponse</a> smart constructor.
data UpdateSubnetGroupResponse
UpdateSubnetGroupResponse' :: Maybe SubnetGroup -> Int -> UpdateSubnetGroupResponse

-- | Create a value of <a>UpdateSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroup:UpdateSubnetGroupResponse'</a>,
--   <a>updateSubnetGroupResponse_subnetGroup</a> - The subnet group that
--   has been modified.
--   
--   <a>$sel:httpStatus:UpdateSubnetGroupResponse'</a>,
--   <a>updateSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateSubnetGroupResponse :: Int -> UpdateSubnetGroupResponse

-- | <i>See:</i> <a>newDeleteSubnetGroup</a> smart constructor.
data DeleteSubnetGroup
DeleteSubnetGroup' :: Text -> DeleteSubnetGroup

-- | Create a value of <a>DeleteSubnetGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroupName:DeleteSubnetGroup'</a>,
--   <a>deleteSubnetGroup_subnetGroupName</a> - The name of the subnet
--   group to delete.
newDeleteSubnetGroup :: Text -> DeleteSubnetGroup

-- | <i>See:</i> <a>newDeleteSubnetGroupResponse</a> smart constructor.
data DeleteSubnetGroupResponse
DeleteSubnetGroupResponse' :: Maybe Text -> Int -> DeleteSubnetGroupResponse

-- | Create a value of <a>DeleteSubnetGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deletionMessage:DeleteSubnetGroupResponse'</a>,
--   <a>deleteSubnetGroupResponse_deletionMessage</a> - A user-specified
--   message for this action (i.e., a reason for deleting the subnet
--   group).
--   
--   <a>$sel:httpStatus:DeleteSubnetGroupResponse'</a>,
--   <a>deleteSubnetGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteSubnetGroupResponse :: Int -> DeleteSubnetGroupResponse

-- | <i>See:</i> <a>newDescribeSubnetGroups</a> smart constructor.
data DescribeSubnetGroups
DescribeSubnetGroups' :: Maybe Text -> Maybe Int -> Maybe [Text] -> DescribeSubnetGroups

-- | Create a value of <a>DescribeSubnetGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_nextToken</a> - An optional token returned
--   from a prior request. Use this token for pagination of results from
--   this action. If this parameter is specified, the response includes
--   only results beyond the token, up to the value specified by
--   <tt>MaxResults</tt>.
--   
--   <a>$sel:maxResults:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_maxResults</a> - The maximum number of results
--   to include in the response. If more results exist than the specified
--   <tt>MaxResults</tt> value, a token is included in the response so that
--   the remaining results can be retrieved.
--   
--   The value for <tt>MaxResults</tt> must be between 20 and 100.
--   
--   <a>$sel:subnetGroupNames:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroups_subnetGroupNames</a> - The name of the subnet
--   group.
newDescribeSubnetGroups :: DescribeSubnetGroups

-- | <i>See:</i> <a>newDescribeSubnetGroupsResponse</a> smart constructor.
data DescribeSubnetGroupsResponse
DescribeSubnetGroupsResponse' :: Maybe [SubnetGroup] -> Maybe Text -> Int -> DescribeSubnetGroupsResponse

-- | Create a value of <a>DescribeSubnetGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetGroups:DescribeSubnetGroupsResponse'</a>,
--   <a>describeSubnetGroupsResponse_subnetGroups</a> - An array of subnet
--   groups. Each element in the array represents a single subnet group.
--   
--   <a>$sel:nextToken:DescribeSubnetGroups'</a>,
--   <a>describeSubnetGroupsResponse_nextToken</a> - Provides an identifier
--   to allow retrieval of paginated results.
--   
--   <a>$sel:httpStatus:DescribeSubnetGroupsResponse'</a>,
--   <a>describeSubnetGroupsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeSubnetGroupsResponse :: Int -> DescribeSubnetGroupsResponse

-- | <i>See:</i> <a>newCreateParameterGroup</a> smart constructor.
data CreateParameterGroup
CreateParameterGroup' :: Maybe Text -> Text -> CreateParameterGroup

-- | Create a value of <a>CreateParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateParameterGroup'</a>,
--   <a>createParameterGroup_description</a> - A description of the
--   parameter group.
--   
--   <a>$sel:parameterGroupName:CreateParameterGroup'</a>,
--   <a>createParameterGroup_parameterGroupName</a> - The name of the
--   parameter group to apply to all of the clusters in this replication
--   group.
newCreateParameterGroup :: Text -> CreateParameterGroup

-- | <i>See:</i> <a>newCreateParameterGroupResponse</a> smart constructor.
data CreateParameterGroupResponse
CreateParameterGroupResponse' :: Maybe ParameterGroup -> Int -> CreateParameterGroupResponse

-- | Create a value of <a>CreateParameterGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroup:CreateParameterGroupResponse'</a>,
--   <a>createParameterGroupResponse_parameterGroup</a> - Represents the
--   output of a <i>CreateParameterGroup</i> action.
--   
--   <a>$sel:httpStatus:CreateParameterGroupResponse'</a>,
--   <a>createParameterGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateParameterGroupResponse :: Int -> CreateParameterGroupResponse
newtype ChangeType
ChangeType' :: Text -> ChangeType
[fromChangeType] :: ChangeType -> Text
pattern ChangeType_IMMEDIATE :: ChangeType
pattern ChangeType_REQUIRES_REBOOT :: ChangeType
newtype ClusterEndpointEncryptionType
ClusterEndpointEncryptionType' :: Text -> ClusterEndpointEncryptionType
[fromClusterEndpointEncryptionType] :: ClusterEndpointEncryptionType -> Text
pattern ClusterEndpointEncryptionType_NONE :: ClusterEndpointEncryptionType
pattern ClusterEndpointEncryptionType_TLS :: ClusterEndpointEncryptionType
newtype IsModifiable
IsModifiable' :: Text -> IsModifiable
[fromIsModifiable] :: IsModifiable -> Text
pattern IsModifiable_CONDITIONAL :: IsModifiable
pattern IsModifiable_FALSE :: IsModifiable
pattern IsModifiable_TRUE :: IsModifiable
newtype ParameterType
ParameterType' :: Text -> ParameterType
[fromParameterType] :: ParameterType -> Text
pattern ParameterType_DEFAULT :: ParameterType
pattern ParameterType_NODE_TYPE_SPECIFIC :: ParameterType
newtype SSEStatus
SSEStatus' :: Text -> SSEStatus
[fromSSEStatus] :: SSEStatus -> Text
pattern SSEStatus_DISABLED :: SSEStatus
pattern SSEStatus_DISABLING :: SSEStatus
pattern SSEStatus_ENABLED :: SSEStatus
pattern SSEStatus_ENABLING :: SSEStatus
newtype SourceType
SourceType' :: Text -> SourceType
[fromSourceType] :: SourceType -> Text
pattern SourceType_CLUSTER :: SourceType
pattern SourceType_PARAMETER_GROUP :: SourceType
pattern SourceType_SUBNET_GROUP :: SourceType

-- | Contains all of the attributes of a specific DAX cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ParameterGroupStatus -> Maybe ClusterEndpointEncryptionType -> Maybe [Node] -> Maybe NotificationConfiguration -> Maybe [SecurityGroupMembership] -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe SSEDescription -> Maybe [Text] -> Maybe Endpoint -> Maybe Text -> Maybe Text -> Cluster

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterArn:Cluster'</a>, <a>cluster_clusterArn</a> - The
--   Amazon Resource Name (ARN) that uniquely identifies the cluster.
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The current
--   status of the cluster.
--   
--   <a>$sel:iamRoleArn:Cluster'</a>, <a>cluster_iamRoleArn</a> - A valid
--   Amazon Resource Name (ARN) that identifies an IAM role. At runtime,
--   DAX will assume this role and use the role's permissions to access
--   DynamoDB on your behalf.
--   
--   <a>$sel:subnetGroup:Cluster'</a>, <a>cluster_subnetGroup</a> - The
--   subnet group where the DAX cluster is running.
--   
--   <a>$sel:totalNodes:Cluster'</a>, <a>cluster_totalNodes</a> - The total
--   number of nodes in the cluster.
--   
--   <a>$sel:parameterGroup:Cluster'</a>, <a>cluster_parameterGroup</a> -
--   The parameter group being used by nodes in the cluster.
--   
--   <a>$sel:clusterEndpointEncryptionType:Cluster'</a>,
--   <a>cluster_clusterEndpointEncryptionType</a> - The type of encryption
--   supported by the cluster's endpoint. Values are:
--   
--   <ul>
--   <li><tt>NONE</tt> for no encryption<tt>TLS</tt> for Transport Layer
--   Security</li>
--   </ul>
--   
--   <a>$sel:nodes:Cluster'</a>, <a>cluster_nodes</a> - A list of nodes
--   that are currently in the cluster.
--   
--   <a>$sel:notificationConfiguration:Cluster'</a>,
--   <a>cluster_notificationConfiguration</a> - Describes a notification
--   topic and its status. Notification topics are used for publishing DAX
--   events to subscribers using Amazon Simple Notification Service (SNS).
--   
--   <a>$sel:securityGroups:Cluster'</a>, <a>cluster_securityGroups</a> - A
--   list of security groups, and the status of each, for the nodes in the
--   cluster.
--   
--   <a>$sel:activeNodes:Cluster'</a>, <a>cluster_activeNodes</a> - The
--   number of nodes in the cluster that are active (i.e., capable of
--   serving requests).
--   
--   <a>$sel:preferredMaintenanceWindow:Cluster'</a>,
--   <a>cluster_preferredMaintenanceWindow</a> - A range of time when
--   maintenance of DAX cluster software will be performed. For example:
--   <tt>sun:01:00-sun:09:00</tt>. Cluster maintenance normally takes less
--   than 30 minutes, and is performed automatically within the maintenance
--   window.
--   
--   <a>$sel:description:Cluster'</a>, <a>cluster_description</a> - The
--   description of the cluster.
--   
--   <a>$sel:sSEDescription:Cluster'</a>, <a>cluster_sSEDescription</a> -
--   The description of the server-side encryption status on the specified
--   DAX cluster.
--   
--   <a>$sel:nodeIdsToRemove:Cluster'</a>, <a>cluster_nodeIdsToRemove</a> -
--   A list of nodes to be removed from the cluster.
--   
--   <a>$sel:clusterDiscoveryEndpoint:Cluster'</a>,
--   <a>cluster_clusterDiscoveryEndpoint</a> - The endpoint for this DAX
--   cluster, consisting of a DNS name, a port number, and a URL.
--   Applications should use the URL to configure the DAX client to find
--   their cluster.
--   
--   <a>$sel:nodeType:Cluster'</a>, <a>cluster_nodeType</a> - The node type
--   for the nodes in the cluster. (All nodes in a DAX cluster are of the
--   same type.)
--   
--   <a>$sel:clusterName:Cluster'</a>, <a>cluster_clusterName</a> - The
--   name of the DAX cluster.
newCluster :: Cluster

-- | Represents the information required for client programs to connect to
--   the endpoint for a DAX cluster.
--   
--   <i>See:</i> <a>newEndpoint</a> smart constructor.
data Endpoint
Endpoint' :: Maybe Text -> Maybe Int -> Maybe Text -> Endpoint

-- | Create a value of <a>Endpoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:address:Endpoint'</a>, <a>endpoint_address</a> - The DNS
--   hostname of the endpoint.
--   
--   <a>$sel:port:Endpoint'</a>, <a>endpoint_port</a> - The port number
--   that applications should use to connect to the endpoint.
--   
--   <a>$sel:url:Endpoint'</a>, <a>endpoint_url</a> - The URL that
--   applications should use to connect to the endpoint. The default ports
--   are 8111 for the "dax" protocol and 9111 for the "daxs" protocol.
newEndpoint :: Endpoint

-- | Represents a single occurrence of something interesting within the
--   system. Some examples of events are creating a DAX cluster, adding or
--   removing a node, or rebooting a node.
--   
--   <i>See:</i> <a>newEvent</a> smart constructor.
data Event
Event' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe SourceType -> Event

-- | Create a value of <a>Event</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:Event'</a>, <a>event_message</a> - A user-defined
--   message associated with the event.
--   
--   <a>$sel:sourceName:Event'</a>, <a>event_sourceName</a> - The source of
--   the event. For example, if the event occurred at the node level, the
--   source would be the node ID.
--   
--   <a>$sel:date:Event'</a>, <a>event_date</a> - The date and time when
--   the event occurred.
--   
--   <a>$sel:sourceType:Event'</a>, <a>event_sourceType</a> - Specifies the
--   origin of this event - a cluster, a parameter group, a node ID, etc.
newEvent :: Event

-- | Represents an individual node within a DAX cluster.
--   
--   <i>See:</i> <a>newNode</a> smart constructor.
data Node
Node' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Endpoint -> Node

-- | Create a value of <a>Node</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeStatus:Node'</a>, <a>node_nodeStatus</a> - The current
--   status of the node. For example: <tt>available</tt>.
--   
--   <a>$sel:nodeId:Node'</a>, <a>node_nodeId</a> - A system-generated
--   identifier for the node.
--   
--   <a>$sel:parameterGroupStatus:Node'</a>,
--   <a>node_parameterGroupStatus</a> - The status of the parameter group
--   associated with this node. For example, <tt>in-sync</tt>.
--   
--   <a>$sel:availabilityZone:Node'</a>, <a>node_availabilityZone</a> - The
--   Availability Zone (AZ) in which the node has been deployed.
--   
--   <a>$sel:nodeCreateTime:Node'</a>, <a>node_nodeCreateTime</a> - The
--   date and time (in UNIX epoch format) when the node was launched.
--   
--   <a>$sel:endpoint:Node'</a>, <a>node_endpoint</a> - The endpoint for
--   the node, consisting of a DNS name and a port number. Client
--   applications can connect directly to a node endpoint, if desired (as
--   an alternative to allowing DAX client software to intelligently route
--   requests and responses to nodes in the DAX cluster.
newNode :: Node

-- | Represents a parameter value that is applicable to a particular node
--   type.
--   
--   <i>See:</i> <a>newNodeTypeSpecificValue</a> smart constructor.
data NodeTypeSpecificValue
NodeTypeSpecificValue' :: Maybe Text -> Maybe Text -> NodeTypeSpecificValue

-- | Create a value of <a>NodeTypeSpecificValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:NodeTypeSpecificValue'</a>,
--   <a>nodeTypeSpecificValue_value</a> - The parameter value for this node
--   type.
--   
--   <a>$sel:nodeType:NodeTypeSpecificValue'</a>,
--   <a>nodeTypeSpecificValue_nodeType</a> - A node type to which the
--   parameter value applies.
newNodeTypeSpecificValue :: NodeTypeSpecificValue

-- | Describes a notification topic and its status. Notification topics are
--   used for publishing DAX events to subscribers using Amazon Simple
--   Notification Service (SNS).
--   
--   <i>See:</i> <a>newNotificationConfiguration</a> smart constructor.
data NotificationConfiguration
NotificationConfiguration' :: Maybe Text -> Maybe Text -> NotificationConfiguration

-- | Create a value of <a>NotificationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:topicStatus:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicStatus</a> - The current state of
--   the topic. A value of “active” means that notifications will be sent
--   to the topic. A value of “inactive” means that notifications will not
--   be sent to the topic.
--   
--   <a>$sel:topicArn:NotificationConfiguration'</a>,
--   <a>notificationConfiguration_topicArn</a> - The Amazon Resource Name
--   (ARN) that identifies the topic.
newNotificationConfiguration :: NotificationConfiguration

-- | Describes an individual setting that controls some aspect of DAX
--   behavior.
--   
--   <i>See:</i> <a>newParameter</a> smart constructor.
data Parameter
Parameter' :: Maybe ChangeType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ParameterType -> Maybe Text -> Maybe Text -> Maybe [NodeTypeSpecificValue] -> Maybe Text -> Maybe IsModifiable -> Parameter

-- | Create a value of <a>Parameter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:changeType:Parameter'</a>, <a>parameter_changeType</a> - The
--   conditions under which changes to this parameter can be applied. For
--   example, <tt>requires-reboot</tt> indicates that a new value for this
--   parameter will only take effect if a node is rebooted.
--   
--   <a>$sel:allowedValues:Parameter'</a>, <a>parameter_allowedValues</a> -
--   A range of values within which the parameter can be set.
--   
--   <a>$sel:source:Parameter'</a>, <a>parameter_source</a> - How the
--   parameter is defined. For example, <tt>system</tt> denotes a
--   system-defined parameter.
--   
--   <a>$sel:parameterValue:Parameter'</a>, <a>parameter_parameterValue</a>
--   - The value for the parameter.
--   
--   <a>$sel:parameterType:Parameter'</a>, <a>parameter_parameterType</a> -
--   Determines whether the parameter can be applied to any nodes, or only
--   nodes of a particular type.
--   
--   <a>$sel:parameterName:Parameter'</a>, <a>parameter_parameterName</a> -
--   The name of the parameter.
--   
--   <a>$sel:description:Parameter'</a>, <a>parameter_description</a> - A
--   description of the parameter
--   
--   <a>$sel:nodeTypeSpecificValues:Parameter'</a>,
--   <a>parameter_nodeTypeSpecificValues</a> - A list of node types, and
--   specific parameter values for each node.
--   
--   <a>$sel:dataType:Parameter'</a>, <a>parameter_dataType</a> - The data
--   type of the parameter. For example, <tt>integer</tt>:
--   
--   <a>$sel:isModifiable:Parameter'</a>, <a>parameter_isModifiable</a> -
--   Whether the customer is allowed to modify the parameter.
newParameter :: Parameter

-- | A named set of parameters that are applied to all of the nodes in a
--   DAX cluster.
--   
--   <i>See:</i> <a>newParameterGroup</a> smart constructor.
data ParameterGroup
ParameterGroup' :: Maybe Text -> Maybe Text -> ParameterGroup

-- | Create a value of <a>ParameterGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterGroupName:ParameterGroup'</a>,
--   <a>parameterGroup_parameterGroupName</a> - The name of the parameter
--   group.
--   
--   <a>$sel:description:ParameterGroup'</a>,
--   <a>parameterGroup_description</a> - A description of the parameter
--   group.
newParameterGroup :: ParameterGroup

-- | The status of a parameter group.
--   
--   <i>See:</i> <a>newParameterGroupStatus</a> smart constructor.
data ParameterGroupStatus
ParameterGroupStatus' :: Maybe [Text] -> Maybe Text -> Maybe Text -> ParameterGroupStatus

-- | Create a value of <a>ParameterGroupStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodeIdsToReboot:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_nodeIdsToReboot</a> - The node IDs of one or
--   more nodes to be rebooted.
--   
--   <a>$sel:parameterGroupName:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_parameterGroupName</a> - The name of the
--   parameter group.
--   
--   <a>$sel:parameterApplyStatus:ParameterGroupStatus'</a>,
--   <a>parameterGroupStatus_parameterApplyStatus</a> - The status of
--   parameter updates.
newParameterGroupStatus :: ParameterGroupStatus

-- | An individual DAX parameter.
--   
--   <i>See:</i> <a>newParameterNameValue</a> smart constructor.
data ParameterNameValue
ParameterNameValue' :: Maybe Text -> Maybe Text -> ParameterNameValue

-- | Create a value of <a>ParameterNameValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameterValue:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterValue</a> - The value of the parameter.
--   
--   <a>$sel:parameterName:ParameterNameValue'</a>,
--   <a>parameterNameValue_parameterName</a> - The name of the parameter.
newParameterNameValue :: ParameterNameValue

-- | The description of the server-side encryption status on the specified
--   DAX cluster.
--   
--   <i>See:</i> <a>newSSEDescription</a> smart constructor.
data SSEDescription
SSEDescription' :: Maybe SSEStatus -> SSEDescription

-- | Create a value of <a>SSEDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SSEDescription'</a>, <a>sSEDescription_status</a> - The
--   current state of server-side encryption:
--   
--   <ul>
--   <li><tt>ENABLING</tt> - Server-side encryption is being enabled.</li>
--   <li><tt>ENABLED</tt> - Server-side encryption is enabled.</li>
--   <li><tt>DISABLING</tt> - Server-side encryption is being
--   disabled.</li>
--   <li><tt>DISABLED</tt> - Server-side encryption is disabled.</li>
--   </ul>
newSSEDescription :: SSEDescription

-- | Represents the settings used to enable server-side encryption.
--   
--   <i>See:</i> <a>newSSESpecification</a> smart constructor.
data SSESpecification
SSESpecification' :: Bool -> SSESpecification

-- | Create a value of <a>SSESpecification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:SSESpecification'</a>, <a>sSESpecification_enabled</a>
--   - Indicates whether server-side encryption is enabled (true) or
--   disabled (false) on the cluster.
newSSESpecification :: Bool -> SSESpecification

-- | An individual VPC security group and its status.
--   
--   <i>See:</i> <a>newSecurityGroupMembership</a> smart constructor.
data SecurityGroupMembership
SecurityGroupMembership' :: Maybe Text -> Maybe Text -> SecurityGroupMembership

-- | Create a value of <a>SecurityGroupMembership</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_status</a> - The status of this security
--   group.
--   
--   <a>$sel:securityGroupIdentifier:SecurityGroupMembership'</a>,
--   <a>securityGroupMembership_securityGroupIdentifier</a> - The unique ID
--   for this security group.
newSecurityGroupMembership :: SecurityGroupMembership

-- | Represents the subnet associated with a DAX cluster. This parameter
--   refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC)
--   and used with DAX.
--   
--   <i>See:</i> <a>newSubnet</a> smart constructor.
data Subnet
Subnet' :: Maybe Text -> Maybe Text -> Subnet

-- | Create a value of <a>Subnet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnetIdentifier:Subnet'</a>, <a>subnet_subnetIdentifier</a> -
--   The system-assigned identifier for the subnet.
--   
--   <a>$sel:subnetAvailabilityZone:Subnet'</a>,
--   <a>subnet_subnetAvailabilityZone</a> - The Availability Zone (AZ) for
--   the subnet.
newSubnet :: Subnet

-- | Represents the output of one of the following actions:
--   
--   <ul>
--   <li><i>CreateSubnetGroup</i></li>
--   <li><i>ModifySubnetGroup</i></li>
--   </ul>
--   
--   <i>See:</i> <a>newSubnetGroup</a> smart constructor.
data SubnetGroup
SubnetGroup' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Subnet] -> SubnetGroup

-- | Create a value of <a>SubnetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:SubnetGroup'</a>, <a>subnetGroup_description</a> -
--   The description of the subnet group.
--   
--   <a>$sel:subnetGroupName:SubnetGroup'</a>,
--   <a>subnetGroup_subnetGroupName</a> - The name of the subnet group.
--   
--   <a>$sel:vpcId:SubnetGroup'</a>, <a>subnetGroup_vpcId</a> - The Amazon
--   Virtual Private Cloud identifier (VPC ID) of the subnet group.
--   
--   <a>$sel:subnets:SubnetGroup'</a>, <a>subnetGroup_subnets</a> - A list
--   of subnets associated with the subnet group.
newSubnetGroup :: SubnetGroup

-- | A description of a tag. Every tag is a key-value pair. You can add up
--   to 50 tags to a single DAX cluster.
--   
--   AWS-assigned tag names and values are automatically assigned the
--   <tt>aws:</tt> prefix, which the user cannot assign. AWS-assigned tag
--   names do not count towards the tag limit of 50. User-assigned tag
--   names have the prefix <tt>user:</tt>.
--   
--   You cannot backdate the application of a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. Tag keys
--   are case sensitive. Every DAX cluster can only have one tag with the
--   same key. If you try to add an existing tag (same key), the existing
--   tag value will be updated to the new value.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag. Tag
--   values are case-sensitive and can be null.
newTag :: Tag
