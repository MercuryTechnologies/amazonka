-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-lex-modelsZSamazonka-lex-models
@version 1.6.1


module Network.AWS.LexModels.Types.BuiltinIntentSlot

-- | Provides information about a slot used in a built-in intent.
--   
--   <i>See:</i> <a>newBuiltinIntentSlot</a> smart constructor.
data BuiltinIntentSlot
BuiltinIntentSlot' :: Maybe Text -> BuiltinIntentSlot

-- | A list of the slots defined for the intent.
[$sel:name:BuiltinIntentSlot'] :: BuiltinIntentSlot -> Maybe Text

-- | Create a value of <a>BuiltinIntentSlot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BuiltinIntentSlot'</a>, <a>builtinIntentSlot_name</a> - A
--   list of the slots defined for the intent.
newBuiltinIntentSlot :: BuiltinIntentSlot

-- | A list of the slots defined for the intent.
builtinIntentSlot_name :: Lens' BuiltinIntentSlot (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.BuiltinIntentSlot.BuiltinIntentSlot
instance GHC.Show.Show Network.AWS.LexModels.Types.BuiltinIntentSlot.BuiltinIntentSlot
instance GHC.Read.Read Network.AWS.LexModels.Types.BuiltinIntentSlot.BuiltinIntentSlot
instance GHC.Classes.Eq Network.AWS.LexModels.Types.BuiltinIntentSlot.BuiltinIntentSlot
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.BuiltinIntentSlot.BuiltinIntentSlot
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.BuiltinIntentSlot.BuiltinIntentSlot
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.BuiltinIntentSlot.BuiltinIntentSlot


module Network.AWS.LexModels.Types.ChannelStatus
newtype ChannelStatus
ChannelStatus' :: Text -> ChannelStatus
[fromChannelStatus] :: ChannelStatus -> Text
pattern ChannelStatus_CREATED :: ChannelStatus
pattern ChannelStatus_FAILED :: ChannelStatus
pattern ChannelStatus_IN_PROGRESS :: ChannelStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance GHC.Read.Read Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus
instance GHC.Show.Show Network.AWS.LexModels.Types.ChannelStatus.ChannelStatus


module Network.AWS.LexModels.Types.ChannelType
newtype ChannelType
ChannelType' :: Text -> ChannelType
[fromChannelType] :: ChannelType -> Text
pattern ChannelType_Facebook :: ChannelType
pattern ChannelType_Kik :: ChannelType
pattern ChannelType_Slack :: ChannelType
pattern ChannelType_Twilio_Sms :: ChannelType
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ChannelType.ChannelType
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ChannelType.ChannelType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ChannelType.ChannelType
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ChannelType.ChannelType
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ChannelType.ChannelType
instance GHC.Read.Read Network.AWS.LexModels.Types.ChannelType.ChannelType
instance GHC.Show.Show Network.AWS.LexModels.Types.ChannelType.ChannelType


module Network.AWS.LexModels.Types.BotChannelAssociation

-- | Represents an association between an Amazon Lex bot and an external
--   messaging platform.
--   
--   <i>See:</i> <a>newBotChannelAssociation</a> smart constructor.
data BotChannelAssociation
BotChannelAssociation' :: Maybe Text -> Maybe POSIX -> Maybe ChannelStatus -> Maybe (Sensitive (HashMap Text Text)) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChannelType -> BotChannelAssociation

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
[$sel:botAlias:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | The date that the association between the Amazon Lex bot and the
--   channel was created.
[$sel:createdDate:BotChannelAssociation'] :: BotChannelAssociation -> Maybe POSIX

-- | The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
[$sel:status:BotChannelAssociation'] :: BotChannelAssociation -> Maybe ChannelStatus

-- | Provides information necessary to communicate with the messaging
--   platform.
[$sel:botConfiguration:BotChannelAssociation'] :: BotChannelAssociation -> Maybe (Sensitive (HashMap Text Text))

-- | The name of the Amazon Lex bot to which this association is being
--   made.
--   
--   Currently, Amazon Lex supports associations with Facebook and Slack,
--   and Twilio.
[$sel:botName:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | The name of the association between the bot and the channel.
[$sel:name:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
[$sel:failureReason:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | A text description of the association you are creating.
[$sel:description:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | Specifies the type of association by indicating the type of channel
--   being established between the Amazon Lex bot and the external
--   messaging platform.
[$sel:type':BotChannelAssociation'] :: BotChannelAssociation -> Maybe ChannelType

-- | Create a value of <a>BotChannelAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botAlias:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botAlias</a> - An alias pointing to the
--   specific version of the Amazon Lex bot to which this association is
--   being made.
--   
--   <a>$sel:createdDate:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_createdDate</a> - The date that the
--   association between the Amazon Lex bot and the channel was created.
--   
--   <a>$sel:status:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_status</a> - The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
--   
--   <a>$sel:botConfiguration:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botConfiguration</a> - Provides information
--   necessary to communicate with the messaging platform.
--   
--   <a>$sel:botName:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botName</a> - The name of the Amazon Lex bot
--   to which this association is being made.
--   
--   Currently, Amazon Lex supports associations with Facebook and Slack,
--   and Twilio.
--   
--   <a>$sel:name:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_name</a> - The name of the association
--   between the bot and the channel.
--   
--   <a>$sel:failureReason:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   create the association.
--   
--   <a>$sel:description:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_description</a> - A text description of the
--   association you are creating.
--   
--   <a>$sel:type':BotChannelAssociation'</a>,
--   <a>botChannelAssociation_type</a> - Specifies the type of association
--   by indicating the type of channel being established between the Amazon
--   Lex bot and the external messaging platform.
newBotChannelAssociation :: BotChannelAssociation

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
botChannelAssociation_botAlias :: Lens' BotChannelAssociation (Maybe Text)

-- | The date that the association between the Amazon Lex bot and the
--   channel was created.
botChannelAssociation_createdDate :: Lens' BotChannelAssociation (Maybe UTCTime)

-- | The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
botChannelAssociation_status :: Lens' BotChannelAssociation (Maybe ChannelStatus)

-- | Provides information necessary to communicate with the messaging
--   platform.
botChannelAssociation_botConfiguration :: Lens' BotChannelAssociation (Maybe (HashMap Text Text))

-- | The name of the Amazon Lex bot to which this association is being
--   made.
--   
--   Currently, Amazon Lex supports associations with Facebook and Slack,
--   and Twilio.
botChannelAssociation_botName :: Lens' BotChannelAssociation (Maybe Text)

-- | The name of the association between the bot and the channel.
botChannelAssociation_name :: Lens' BotChannelAssociation (Maybe Text)

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
botChannelAssociation_failureReason :: Lens' BotChannelAssociation (Maybe Text)

-- | A text description of the association you are creating.
botChannelAssociation_description :: Lens' BotChannelAssociation (Maybe Text)

-- | Specifies the type of association by indicating the type of channel
--   being established between the Amazon Lex bot and the external
--   messaging platform.
botChannelAssociation_type :: Lens' BotChannelAssociation (Maybe ChannelType)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.BotChannelAssociation.BotChannelAssociation
instance GHC.Show.Show Network.AWS.LexModels.Types.BotChannelAssociation.BotChannelAssociation
instance GHC.Classes.Eq Network.AWS.LexModels.Types.BotChannelAssociation.BotChannelAssociation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.BotChannelAssociation.BotChannelAssociation
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.BotChannelAssociation.BotChannelAssociation
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.BotChannelAssociation.BotChannelAssociation


module Network.AWS.LexModels.Types.CodeHook

-- | Specifies a Lambda function that verifies requests to a bot or
--   fulfills the user's request to a bot..
--   
--   <i>See:</i> <a>newCodeHook</a> smart constructor.
data CodeHook
CodeHook' :: Text -> Text -> CodeHook

-- | The Amazon Resource Name (ARN) of the Lambda function.
[$sel:uri:CodeHook'] :: CodeHook -> Text

-- | The version of the request-response that you want Amazon Lex to use to
--   invoke your Lambda function. For more information, see using-lambda.
[$sel:messageVersion:CodeHook'] :: CodeHook -> Text

-- | Create a value of <a>CodeHook</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:CodeHook'</a>, <a>codeHook_uri</a> - The Amazon Resource
--   Name (ARN) of the Lambda function.
--   
--   <a>$sel:messageVersion:CodeHook'</a>, <a>codeHook_messageVersion</a> -
--   The version of the request-response that you want Amazon Lex to use to
--   invoke your Lambda function. For more information, see using-lambda.
newCodeHook :: Text -> Text -> CodeHook

-- | The Amazon Resource Name (ARN) of the Lambda function.
codeHook_uri :: Lens' CodeHook Text

-- | The version of the request-response that you want Amazon Lex to use to
--   invoke your Lambda function. For more information, see using-lambda.
codeHook_messageVersion :: Lens' CodeHook Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.CodeHook.CodeHook
instance GHC.Show.Show Network.AWS.LexModels.Types.CodeHook.CodeHook
instance GHC.Read.Read Network.AWS.LexModels.Types.CodeHook.CodeHook
instance GHC.Classes.Eq Network.AWS.LexModels.Types.CodeHook.CodeHook
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.CodeHook.CodeHook
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.CodeHook.CodeHook
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.CodeHook.CodeHook
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.CodeHook.CodeHook


module Network.AWS.LexModels.Types.ContentType
newtype ContentType
ContentType' :: Text -> ContentType
[fromContentType] :: ContentType -> Text
pattern ContentType_CustomPayload :: ContentType
pattern ContentType_PlainText :: ContentType
pattern ContentType_SSML :: ContentType
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ContentType.ContentType
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ContentType.ContentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ContentType.ContentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ContentType.ContentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ContentType.ContentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ContentType.ContentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ContentType.ContentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ContentType.ContentType
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ContentType.ContentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ContentType.ContentType
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ContentType.ContentType
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ContentType.ContentType
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ContentType.ContentType
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ContentType.ContentType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ContentType.ContentType
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ContentType.ContentType
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ContentType.ContentType
instance GHC.Read.Read Network.AWS.LexModels.Types.ContentType.ContentType
instance GHC.Show.Show Network.AWS.LexModels.Types.ContentType.ContentType


module Network.AWS.LexModels.Types.Destination
newtype Destination
Destination' :: Text -> Destination
[fromDestination] :: Destination -> Text
pattern Destination_CLOUDWATCH_LOGS :: Destination
pattern Destination_S3 :: Destination
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.Destination.Destination
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.Destination.Destination
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.Destination.Destination
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.Destination.Destination
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.Destination.Destination
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.Destination.Destination
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.Destination.Destination
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.Destination.Destination
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.Destination.Destination
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.Destination.Destination
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.Destination.Destination
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.Destination.Destination
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.Destination.Destination
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.Destination.Destination
instance GHC.Generics.Generic Network.AWS.LexModels.Types.Destination.Destination
instance GHC.Classes.Ord Network.AWS.LexModels.Types.Destination.Destination
instance GHC.Classes.Eq Network.AWS.LexModels.Types.Destination.Destination
instance GHC.Read.Read Network.AWS.LexModels.Types.Destination.Destination
instance GHC.Show.Show Network.AWS.LexModels.Types.Destination.Destination


module Network.AWS.LexModels.Types.EnumerationValue

-- | Each slot type can have a set of values. Each enumeration value
--   represents a value the slot type can take.
--   
--   For example, a pizza ordering bot could have a slot type that
--   specifies the type of crust that the pizza should have. The slot type
--   could include the values
--   
--   <ul>
--   <li>thick</li>
--   <li>thin</li>
--   <li>stuffed</li>
--   </ul>
--   
--   <i>See:</i> <a>newEnumerationValue</a> smart constructor.
data EnumerationValue
EnumerationValue' :: Maybe [Text] -> Text -> EnumerationValue

-- | Additional values related to the slot type value.
[$sel:synonyms:EnumerationValue'] :: EnumerationValue -> Maybe [Text]

-- | The value of the slot type.
[$sel:value:EnumerationValue'] :: EnumerationValue -> Text

-- | Create a value of <a>EnumerationValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:synonyms:EnumerationValue'</a>,
--   <a>enumerationValue_synonyms</a> - Additional values related to the
--   slot type value.
--   
--   <a>$sel:value:EnumerationValue'</a>, <a>enumerationValue_value</a> -
--   The value of the slot type.
newEnumerationValue :: Text -> EnumerationValue

-- | Additional values related to the slot type value.
enumerationValue_synonyms :: Lens' EnumerationValue (Maybe [Text])

-- | The value of the slot type.
enumerationValue_value :: Lens' EnumerationValue Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.EnumerationValue.EnumerationValue
instance GHC.Show.Show Network.AWS.LexModels.Types.EnumerationValue.EnumerationValue
instance GHC.Read.Read Network.AWS.LexModels.Types.EnumerationValue.EnumerationValue
instance GHC.Classes.Eq Network.AWS.LexModels.Types.EnumerationValue.EnumerationValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.EnumerationValue.EnumerationValue
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.EnumerationValue.EnumerationValue
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.EnumerationValue.EnumerationValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.EnumerationValue.EnumerationValue


module Network.AWS.LexModels.Types.ExportStatus
newtype ExportStatus
ExportStatus' :: Text -> ExportStatus
[fromExportStatus] :: ExportStatus -> Text
pattern ExportStatus_FAILED :: ExportStatus
pattern ExportStatus_IN_PROGRESS :: ExportStatus
pattern ExportStatus_READY :: ExportStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance GHC.Read.Read Network.AWS.LexModels.Types.ExportStatus.ExportStatus
instance GHC.Show.Show Network.AWS.LexModels.Types.ExportStatus.ExportStatus


module Network.AWS.LexModels.Types.ExportType
newtype ExportType
ExportType' :: Text -> ExportType
[fromExportType] :: ExportType -> Text
pattern ExportType_ALEXA_SKILLS_KIT :: ExportType
pattern ExportType_LEX :: ExportType
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ExportType.ExportType
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ExportType.ExportType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ExportType.ExportType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ExportType.ExportType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ExportType.ExportType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ExportType.ExportType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ExportType.ExportType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ExportType.ExportType
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ExportType.ExportType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ExportType.ExportType
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ExportType.ExportType
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ExportType.ExportType
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ExportType.ExportType
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ExportType.ExportType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ExportType.ExportType
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ExportType.ExportType
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ExportType.ExportType
instance GHC.Read.Read Network.AWS.LexModels.Types.ExportType.ExportType
instance GHC.Show.Show Network.AWS.LexModels.Types.ExportType.ExportType


module Network.AWS.LexModels.Types.FulfillmentActivityType
newtype FulfillmentActivityType
FulfillmentActivityType' :: Text -> FulfillmentActivityType
[fromFulfillmentActivityType] :: FulfillmentActivityType -> Text
pattern FulfillmentActivityType_CodeHook :: FulfillmentActivityType
pattern FulfillmentActivityType_ReturnIntent :: FulfillmentActivityType
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance GHC.Classes.Ord Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance GHC.Classes.Eq Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance GHC.Read.Read Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType
instance GHC.Show.Show Network.AWS.LexModels.Types.FulfillmentActivityType.FulfillmentActivityType


module Network.AWS.LexModels.Types.FulfillmentActivity

-- | Describes how the intent is fulfilled after the user provides all of
--   the information required for the intent. You can provide a Lambda
--   function to process the intent, or you can return the intent
--   information to the client application. We recommend that you use a
--   Lambda function so that the relevant logic lives in the Cloud and
--   limit the client-side code primarily to presentation. If you need to
--   update the logic, you only update the Lambda function; you don't need
--   to upgrade your client application.
--   
--   Consider the following examples:
--   
--   <ul>
--   <li>In a pizza ordering application, after the user provides all of
--   the information for placing an order, you use a Lambda function to
--   place an order with a pizzeria.</li>
--   <li>In a gaming application, when a user says "pick up a rock," this
--   information must go back to the client application so that it can
--   perform the operation and update the graphics. In this case, you want
--   Amazon Lex to return the intent data to the client.</li>
--   </ul>
--   
--   <i>See:</i> <a>newFulfillmentActivity</a> smart constructor.
data FulfillmentActivity
FulfillmentActivity' :: Maybe CodeHook -> FulfillmentActivityType -> FulfillmentActivity

-- | A description of the Lambda function that is run to fulfill the
--   intent.
[$sel:codeHook:FulfillmentActivity'] :: FulfillmentActivity -> Maybe CodeHook

-- | How the intent should be fulfilled, either by running a Lambda
--   function or by returning the slot data to the client application.
[$sel:type':FulfillmentActivity'] :: FulfillmentActivity -> FulfillmentActivityType

-- | Create a value of <a>FulfillmentActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeHook:FulfillmentActivity'</a>,
--   <a>fulfillmentActivity_codeHook</a> - A description of the Lambda
--   function that is run to fulfill the intent.
--   
--   <a>$sel:type':FulfillmentActivity'</a>,
--   <a>fulfillmentActivity_type</a> - How the intent should be fulfilled,
--   either by running a Lambda function or by returning the slot data to
--   the client application.
newFulfillmentActivity :: FulfillmentActivityType -> FulfillmentActivity

-- | A description of the Lambda function that is run to fulfill the
--   intent.
fulfillmentActivity_codeHook :: Lens' FulfillmentActivity (Maybe CodeHook)

-- | How the intent should be fulfilled, either by running a Lambda
--   function or by returning the slot data to the client application.
fulfillmentActivity_type :: Lens' FulfillmentActivity FulfillmentActivityType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.FulfillmentActivity.FulfillmentActivity
instance GHC.Show.Show Network.AWS.LexModels.Types.FulfillmentActivity.FulfillmentActivity
instance GHC.Read.Read Network.AWS.LexModels.Types.FulfillmentActivity.FulfillmentActivity
instance GHC.Classes.Eq Network.AWS.LexModels.Types.FulfillmentActivity.FulfillmentActivity
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.FulfillmentActivity.FulfillmentActivity
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.FulfillmentActivity.FulfillmentActivity
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.FulfillmentActivity.FulfillmentActivity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.FulfillmentActivity.FulfillmentActivity


module Network.AWS.LexModels.Types.ImportStatus
newtype ImportStatus
ImportStatus' :: Text -> ImportStatus
[fromImportStatus] :: ImportStatus -> Text
pattern ImportStatus_COMPLETE :: ImportStatus
pattern ImportStatus_FAILED :: ImportStatus
pattern ImportStatus_IN_PROGRESS :: ImportStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance GHC.Read.Read Network.AWS.LexModels.Types.ImportStatus.ImportStatus
instance GHC.Show.Show Network.AWS.LexModels.Types.ImportStatus.ImportStatus


module Network.AWS.LexModels.Types.InputContext

-- | The name of a context that must be active for an intent to be selected
--   by Amazon Lex.
--   
--   <i>See:</i> <a>newInputContext</a> smart constructor.
data InputContext
InputContext' :: Text -> InputContext

-- | The name of the context.
[$sel:name:InputContext'] :: InputContext -> Text

-- | Create a value of <a>InputContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InputContext'</a>, <a>inputContext_name</a> - The name of
--   the context.
newInputContext :: Text -> InputContext

-- | The name of the context.
inputContext_name :: Lens' InputContext Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.InputContext.InputContext
instance GHC.Show.Show Network.AWS.LexModels.Types.InputContext.InputContext
instance GHC.Read.Read Network.AWS.LexModels.Types.InputContext.InputContext
instance GHC.Classes.Eq Network.AWS.LexModels.Types.InputContext.InputContext
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.InputContext.InputContext
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.InputContext.InputContext
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.InputContext.InputContext
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.InputContext.InputContext


module Network.AWS.LexModels.Types.Intent

-- | Identifies the specific version of an intent.
--   
--   <i>See:</i> <a>newIntent</a> smart constructor.
data Intent
Intent' :: Text -> Text -> Intent

-- | The name of the intent.
[$sel:intentName:Intent'] :: Intent -> Text

-- | The version of the intent.
[$sel:intentVersion:Intent'] :: Intent -> Text

-- | Create a value of <a>Intent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:intentName:Intent'</a>, <a>intent_intentName</a> - The name of
--   the intent.
--   
--   <a>$sel:intentVersion:Intent'</a>, <a>intent_intentVersion</a> - The
--   version of the intent.
newIntent :: Text -> Text -> Intent

-- | The name of the intent.
intent_intentName :: Lens' Intent Text

-- | The version of the intent.
intent_intentVersion :: Lens' Intent Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.Intent.Intent
instance GHC.Show.Show Network.AWS.LexModels.Types.Intent.Intent
instance GHC.Read.Read Network.AWS.LexModels.Types.Intent.Intent
instance GHC.Classes.Eq Network.AWS.LexModels.Types.Intent.Intent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.Intent.Intent
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.Intent.Intent
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.Intent.Intent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.Intent.Intent


module Network.AWS.LexModels.Types.IntentMetadata

-- | Provides information about an intent.
--   
--   <i>See:</i> <a>newIntentMetadata</a> smart constructor.
data IntentMetadata
IntentMetadata' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> IntentMetadata

-- | The date that the intent was created.
[$sel:createdDate:IntentMetadata'] :: IntentMetadata -> Maybe POSIX

-- | The date that the intent was updated. When you create an intent, the
--   creation date and last updated date are the same.
[$sel:lastUpdatedDate:IntentMetadata'] :: IntentMetadata -> Maybe POSIX

-- | The version of the intent.
[$sel:version:IntentMetadata'] :: IntentMetadata -> Maybe Text

-- | The name of the intent.
[$sel:name:IntentMetadata'] :: IntentMetadata -> Maybe Text

-- | A description of the intent.
[$sel:description:IntentMetadata'] :: IntentMetadata -> Maybe Text

-- | Create a value of <a>IntentMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:IntentMetadata'</a>,
--   <a>intentMetadata_createdDate</a> - The date that the intent was
--   created.
--   
--   <a>$sel:lastUpdatedDate:IntentMetadata'</a>,
--   <a>intentMetadata_lastUpdatedDate</a> - The date that the intent was
--   updated. When you create an intent, the creation date and last updated
--   date are the same.
--   
--   <a>$sel:version:IntentMetadata'</a>, <a>intentMetadata_version</a> -
--   The version of the intent.
--   
--   <a>$sel:name:IntentMetadata'</a>, <a>intentMetadata_name</a> - The
--   name of the intent.
--   
--   <a>$sel:description:IntentMetadata'</a>,
--   <a>intentMetadata_description</a> - A description of the intent.
newIntentMetadata :: IntentMetadata

-- | The date that the intent was created.
intentMetadata_createdDate :: Lens' IntentMetadata (Maybe UTCTime)

-- | The date that the intent was updated. When you create an intent, the
--   creation date and last updated date are the same.
intentMetadata_lastUpdatedDate :: Lens' IntentMetadata (Maybe UTCTime)

-- | The version of the intent.
intentMetadata_version :: Lens' IntentMetadata (Maybe Text)

-- | The name of the intent.
intentMetadata_name :: Lens' IntentMetadata (Maybe Text)

-- | A description of the intent.
intentMetadata_description :: Lens' IntentMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.IntentMetadata.IntentMetadata
instance GHC.Show.Show Network.AWS.LexModels.Types.IntentMetadata.IntentMetadata
instance GHC.Read.Read Network.AWS.LexModels.Types.IntentMetadata.IntentMetadata
instance GHC.Classes.Eq Network.AWS.LexModels.Types.IntentMetadata.IntentMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.IntentMetadata.IntentMetadata
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.IntentMetadata.IntentMetadata
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.IntentMetadata.IntentMetadata


module Network.AWS.LexModels.Types.KendraConfiguration

-- | Provides configuration information for the AMAZON.KendraSearchIntent
--   intent. When you use this intent, Amazon Lex searches the specified
--   Amazon Kendra index and returns documents from the index that match
--   the user's utterance. For more information, see
--   <a>AMAZON.KendraSearchIntent</a>.
--   
--   <i>See:</i> <a>newKendraConfiguration</a> smart constructor.
data KendraConfiguration
KendraConfiguration' :: Maybe Text -> Text -> Text -> KendraConfiguration

-- | A query filter that Amazon Lex sends to Amazon Kendra to filter the
--   response from the query. The filter is in the format defined by Amazon
--   Kendra. For more information, see <a>Filtering queries</a>.
--   
--   You can override this filter string with a new filter string at
--   runtime.
[$sel:queryFilterString:KendraConfiguration'] :: KendraConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Kendra index that you
--   want the AMAZON.KendraSearchIntent intent to search. The index must be
--   in the same account and Region as the Amazon Lex bot. If the Amazon
--   Kendra index does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
[$sel:kendraIndex:KendraConfiguration'] :: KendraConfiguration -> Text

-- | The Amazon Resource Name (ARN) of an IAM role that has permission to
--   search the Amazon Kendra index. The role must be in the same account
--   and Region as the Amazon Lex bot. If the role does not exist, you get
--   an exception when you call the <tt>PutIntent</tt> operation.
[$sel:role':KendraConfiguration'] :: KendraConfiguration -> Text

-- | Create a value of <a>KendraConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryFilterString:KendraConfiguration'</a>,
--   <a>kendraConfiguration_queryFilterString</a> - A query filter that
--   Amazon Lex sends to Amazon Kendra to filter the response from the
--   query. The filter is in the format defined by Amazon Kendra. For more
--   information, see <a>Filtering queries</a>.
--   
--   You can override this filter string with a new filter string at
--   runtime.
--   
--   <a>$sel:kendraIndex:KendraConfiguration'</a>,
--   <a>kendraConfiguration_kendraIndex</a> - The Amazon Resource Name
--   (ARN) of the Amazon Kendra index that you want the
--   AMAZON.KendraSearchIntent intent to search. The index must be in the
--   same account and Region as the Amazon Lex bot. If the Amazon Kendra
--   index does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
--   
--   <a>$sel:role':KendraConfiguration'</a>,
--   <a>kendraConfiguration_role</a> - The Amazon Resource Name (ARN) of an
--   IAM role that has permission to search the Amazon Kendra index. The
--   role must be in the same account and Region as the Amazon Lex bot. If
--   the role does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
newKendraConfiguration :: Text -> Text -> KendraConfiguration

-- | A query filter that Amazon Lex sends to Amazon Kendra to filter the
--   response from the query. The filter is in the format defined by Amazon
--   Kendra. For more information, see <a>Filtering queries</a>.
--   
--   You can override this filter string with a new filter string at
--   runtime.
kendraConfiguration_queryFilterString :: Lens' KendraConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Kendra index that you
--   want the AMAZON.KendraSearchIntent intent to search. The index must be
--   in the same account and Region as the Amazon Lex bot. If the Amazon
--   Kendra index does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
kendraConfiguration_kendraIndex :: Lens' KendraConfiguration Text

-- | The Amazon Resource Name (ARN) of an IAM role that has permission to
--   search the Amazon Kendra index. The role must be in the same account
--   and Region as the Amazon Lex bot. If the role does not exist, you get
--   an exception when you call the <tt>PutIntent</tt> operation.
kendraConfiguration_role :: Lens' KendraConfiguration Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.KendraConfiguration.KendraConfiguration
instance GHC.Show.Show Network.AWS.LexModels.Types.KendraConfiguration.KendraConfiguration
instance GHC.Read.Read Network.AWS.LexModels.Types.KendraConfiguration.KendraConfiguration
instance GHC.Classes.Eq Network.AWS.LexModels.Types.KendraConfiguration.KendraConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.KendraConfiguration.KendraConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.KendraConfiguration.KendraConfiguration
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.KendraConfiguration.KendraConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.KendraConfiguration.KendraConfiguration


module Network.AWS.LexModels.Types.LexStatus
newtype LexStatus
LexStatus' :: Text -> LexStatus
[fromLexStatus] :: LexStatus -> Text
pattern LexStatus_BUILDING :: LexStatus
pattern LexStatus_FAILED :: LexStatus
pattern LexStatus_NOT_BUILT :: LexStatus
pattern LexStatus_READY :: LexStatus
pattern LexStatus_READY_BASIC_TESTING :: LexStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.LexStatus.LexStatus
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.LexStatus.LexStatus
instance GHC.Generics.Generic Network.AWS.LexModels.Types.LexStatus.LexStatus
instance GHC.Classes.Ord Network.AWS.LexModels.Types.LexStatus.LexStatus
instance GHC.Classes.Eq Network.AWS.LexModels.Types.LexStatus.LexStatus
instance GHC.Read.Read Network.AWS.LexModels.Types.LexStatus.LexStatus
instance GHC.Show.Show Network.AWS.LexModels.Types.LexStatus.LexStatus


module Network.AWS.LexModels.Types.BotMetadata

-- | Provides information about a bot. .
--   
--   <i>See:</i> <a>newBotMetadata</a> smart constructor.
data BotMetadata
BotMetadata' :: Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> BotMetadata

-- | The date that the bot was created.
[$sel:createdDate:BotMetadata'] :: BotMetadata -> Maybe POSIX

-- | The status of the bot.
[$sel:status:BotMetadata'] :: BotMetadata -> Maybe LexStatus

-- | The date that the bot was updated. When you create a bot, the creation
--   date and last updated date are the same.
[$sel:lastUpdatedDate:BotMetadata'] :: BotMetadata -> Maybe POSIX

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
[$sel:version:BotMetadata'] :: BotMetadata -> Maybe Text

-- | The name of the bot.
[$sel:name:BotMetadata'] :: BotMetadata -> Maybe Text

-- | A description of the bot.
[$sel:description:BotMetadata'] :: BotMetadata -> Maybe Text

-- | Create a value of <a>BotMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:BotMetadata'</a>, <a>botMetadata_createdDate</a> -
--   The date that the bot was created.
--   
--   <a>$sel:status:BotMetadata'</a>, <a>botMetadata_status</a> - The
--   status of the bot.
--   
--   <a>$sel:lastUpdatedDate:BotMetadata'</a>,
--   <a>botMetadata_lastUpdatedDate</a> - The date that the bot was
--   updated. When you create a bot, the creation date and last updated
--   date are the same.
--   
--   <a>$sel:version:BotMetadata'</a>, <a>botMetadata_version</a> - The
--   version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
--   
--   <a>$sel:name:BotMetadata'</a>, <a>botMetadata_name</a> - The name of
--   the bot.
--   
--   <a>$sel:description:BotMetadata'</a>, <a>botMetadata_description</a> -
--   A description of the bot.
newBotMetadata :: BotMetadata

-- | The date that the bot was created.
botMetadata_createdDate :: Lens' BotMetadata (Maybe UTCTime)

-- | The status of the bot.
botMetadata_status :: Lens' BotMetadata (Maybe LexStatus)

-- | The date that the bot was updated. When you create a bot, the creation
--   date and last updated date are the same.
botMetadata_lastUpdatedDate :: Lens' BotMetadata (Maybe UTCTime)

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
botMetadata_version :: Lens' BotMetadata (Maybe Text)

-- | The name of the bot.
botMetadata_name :: Lens' BotMetadata (Maybe Text)

-- | A description of the bot.
botMetadata_description :: Lens' BotMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.BotMetadata.BotMetadata
instance GHC.Show.Show Network.AWS.LexModels.Types.BotMetadata.BotMetadata
instance GHC.Read.Read Network.AWS.LexModels.Types.BotMetadata.BotMetadata
instance GHC.Classes.Eq Network.AWS.LexModels.Types.BotMetadata.BotMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.BotMetadata.BotMetadata
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.BotMetadata.BotMetadata
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.BotMetadata.BotMetadata


module Network.AWS.LexModels.Types.Locale
newtype Locale
Locale' :: Text -> Locale
[fromLocale] :: Locale -> Text
pattern Locale_De_DE :: Locale
pattern Locale_En_AU :: Locale
pattern Locale_En_GB :: Locale
pattern Locale_En_IN :: Locale
pattern Locale_En_US :: Locale
pattern Locale_Es_419 :: Locale
pattern Locale_Es_ES :: Locale
pattern Locale_Es_US :: Locale
pattern Locale_Fr_CA :: Locale
pattern Locale_Fr_FR :: Locale
pattern Locale_It_IT :: Locale
pattern Locale_Ja_JP :: Locale
pattern Locale_Ko_KR :: Locale
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.Locale.Locale
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.Locale.Locale
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.Locale.Locale
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.Locale.Locale
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.Locale.Locale
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.Locale.Locale
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.Locale.Locale
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.Locale.Locale
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.Locale.Locale
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.Locale.Locale
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.Locale.Locale
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.Locale.Locale
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.Locale.Locale
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.Locale.Locale
instance GHC.Generics.Generic Network.AWS.LexModels.Types.Locale.Locale
instance GHC.Classes.Ord Network.AWS.LexModels.Types.Locale.Locale
instance GHC.Classes.Eq Network.AWS.LexModels.Types.Locale.Locale
instance GHC.Read.Read Network.AWS.LexModels.Types.Locale.Locale
instance GHC.Show.Show Network.AWS.LexModels.Types.Locale.Locale


module Network.AWS.LexModels.Types.BuiltinSlotTypeMetadata

-- | Provides information about a built in slot type.
--   
--   <i>See:</i> <a>newBuiltinSlotTypeMetadata</a> smart constructor.
data BuiltinSlotTypeMetadata
BuiltinSlotTypeMetadata' :: Maybe Text -> Maybe [Locale] -> BuiltinSlotTypeMetadata

-- | A unique identifier for the built-in slot type. To find the signature
--   for a slot type, see <a>Slot Type Reference</a> in the <i>Alexa Skills
--   Kit</i>.
[$sel:signature:BuiltinSlotTypeMetadata'] :: BuiltinSlotTypeMetadata -> Maybe Text

-- | A list of target locales for the slot.
[$sel:supportedLocales:BuiltinSlotTypeMetadata'] :: BuiltinSlotTypeMetadata -> Maybe [Locale]

-- | Create a value of <a>BuiltinSlotTypeMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signature:BuiltinSlotTypeMetadata'</a>,
--   <a>builtinSlotTypeMetadata_signature</a> - A unique identifier for the
--   built-in slot type. To find the signature for a slot type, see <a>Slot
--   Type Reference</a> in the <i>Alexa Skills Kit</i>.
--   
--   <a>$sel:supportedLocales:BuiltinSlotTypeMetadata'</a>,
--   <a>builtinSlotTypeMetadata_supportedLocales</a> - A list of target
--   locales for the slot.
newBuiltinSlotTypeMetadata :: BuiltinSlotTypeMetadata

-- | A unique identifier for the built-in slot type. To find the signature
--   for a slot type, see <a>Slot Type Reference</a> in the <i>Alexa Skills
--   Kit</i>.
builtinSlotTypeMetadata_signature :: Lens' BuiltinSlotTypeMetadata (Maybe Text)

-- | A list of target locales for the slot.
builtinSlotTypeMetadata_supportedLocales :: Lens' BuiltinSlotTypeMetadata (Maybe [Locale])
instance GHC.Generics.Generic Network.AWS.LexModels.Types.BuiltinSlotTypeMetadata.BuiltinSlotTypeMetadata
instance GHC.Show.Show Network.AWS.LexModels.Types.BuiltinSlotTypeMetadata.BuiltinSlotTypeMetadata
instance GHC.Read.Read Network.AWS.LexModels.Types.BuiltinSlotTypeMetadata.BuiltinSlotTypeMetadata
instance GHC.Classes.Eq Network.AWS.LexModels.Types.BuiltinSlotTypeMetadata.BuiltinSlotTypeMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.BuiltinSlotTypeMetadata.BuiltinSlotTypeMetadata
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.BuiltinSlotTypeMetadata.BuiltinSlotTypeMetadata
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.BuiltinSlotTypeMetadata.BuiltinSlotTypeMetadata


module Network.AWS.LexModels.Types.BuiltinIntentMetadata

-- | Provides metadata for a built-in intent.
--   
--   <i>See:</i> <a>newBuiltinIntentMetadata</a> smart constructor.
data BuiltinIntentMetadata
BuiltinIntentMetadata' :: Maybe Text -> Maybe [Locale] -> BuiltinIntentMetadata

-- | A unique identifier for the built-in intent. To find the signature for
--   an intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
[$sel:signature:BuiltinIntentMetadata'] :: BuiltinIntentMetadata -> Maybe Text

-- | A list of identifiers for the locales that the intent supports.
[$sel:supportedLocales:BuiltinIntentMetadata'] :: BuiltinIntentMetadata -> Maybe [Locale]

-- | Create a value of <a>BuiltinIntentMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signature:BuiltinIntentMetadata'</a>,
--   <a>builtinIntentMetadata_signature</a> - A unique identifier for the
--   built-in intent. To find the signature for an intent, see <a>Standard
--   Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
--   
--   <a>$sel:supportedLocales:BuiltinIntentMetadata'</a>,
--   <a>builtinIntentMetadata_supportedLocales</a> - A list of identifiers
--   for the locales that the intent supports.
newBuiltinIntentMetadata :: BuiltinIntentMetadata

-- | A unique identifier for the built-in intent. To find the signature for
--   an intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
builtinIntentMetadata_signature :: Lens' BuiltinIntentMetadata (Maybe Text)

-- | A list of identifiers for the locales that the intent supports.
builtinIntentMetadata_supportedLocales :: Lens' BuiltinIntentMetadata (Maybe [Locale])
instance GHC.Generics.Generic Network.AWS.LexModels.Types.BuiltinIntentMetadata.BuiltinIntentMetadata
instance GHC.Show.Show Network.AWS.LexModels.Types.BuiltinIntentMetadata.BuiltinIntentMetadata
instance GHC.Read.Read Network.AWS.LexModels.Types.BuiltinIntentMetadata.BuiltinIntentMetadata
instance GHC.Classes.Eq Network.AWS.LexModels.Types.BuiltinIntentMetadata.BuiltinIntentMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.BuiltinIntentMetadata.BuiltinIntentMetadata
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.BuiltinIntentMetadata.BuiltinIntentMetadata
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.BuiltinIntentMetadata.BuiltinIntentMetadata


module Network.AWS.LexModels.Types.LogType
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_AUDIO :: LogType
pattern LogType_TEXT :: LogType
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.LogType.LogType
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.LogType.LogType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.LogType.LogType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.LogType.LogType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.LogType.LogType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.LogType.LogType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.LogType.LogType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.LogType.LogType
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.LogType.LogType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.LogType.LogType
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.LogType.LogType
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.LogType.LogType
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.LogType.LogType
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.LogType.LogType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.LogType.LogType
instance GHC.Classes.Ord Network.AWS.LexModels.Types.LogType.LogType
instance GHC.Classes.Eq Network.AWS.LexModels.Types.LogType.LogType
instance GHC.Read.Read Network.AWS.LexModels.Types.LogType.LogType
instance GHC.Show.Show Network.AWS.LexModels.Types.LogType.LogType


module Network.AWS.LexModels.Types.LogSettingsResponse

-- | The settings for conversation logs.
--   
--   <i>See:</i> <a>newLogSettingsResponse</a> smart constructor.
data LogSettingsResponse
LogSettingsResponse' :: Maybe Text -> Maybe LogType -> Maybe Text -> Maybe Destination -> Maybe Text -> LogSettingsResponse

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs are delivered.
[$sel:resourceArn:LogSettingsResponse'] :: LogSettingsResponse -> Maybe Text

-- | The type of logging that is enabled.
[$sel:logType:LogSettingsResponse'] :: LogSettingsResponse -> Maybe LogType

-- | The Amazon Resource Name (ARN) of the key used to encrypt audio logs
--   in an S3 bucket.
[$sel:kmsKeyArn:LogSettingsResponse'] :: LogSettingsResponse -> Maybe Text

-- | The destination where logs are delivered.
[$sel:destination:LogSettingsResponse'] :: LogSettingsResponse -> Maybe Destination

-- | The resource prefix is the first part of the S3 object key within the
--   S3 bucket that you specified to contain audio logs. For CloudWatch
--   Logs it is the prefix of the log stream name within the log group that
--   you specified.
[$sel:resourcePrefix:LogSettingsResponse'] :: LogSettingsResponse -> Maybe Text

-- | Create a value of <a>LogSettingsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are
--   delivered.
--   
--   <a>$sel:logType:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_logType</a> - The type of logging that is
--   enabled.
--   
--   <a>$sel:kmsKeyArn:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the key used to encrypt audio logs in an S3 bucket.
--   
--   <a>$sel:destination:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_destination</a> - The destination where logs
--   are delivered.
--   
--   <a>$sel:resourcePrefix:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_resourcePrefix</a> - The resource prefix is the
--   first part of the S3 object key within the S3 bucket that you
--   specified to contain audio logs. For CloudWatch Logs it is the prefix
--   of the log stream name within the log group that you specified.
newLogSettingsResponse :: LogSettingsResponse

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs are delivered.
logSettingsResponse_resourceArn :: Lens' LogSettingsResponse (Maybe Text)

-- | The type of logging that is enabled.
logSettingsResponse_logType :: Lens' LogSettingsResponse (Maybe LogType)

-- | The Amazon Resource Name (ARN) of the key used to encrypt audio logs
--   in an S3 bucket.
logSettingsResponse_kmsKeyArn :: Lens' LogSettingsResponse (Maybe Text)

-- | The destination where logs are delivered.
logSettingsResponse_destination :: Lens' LogSettingsResponse (Maybe Destination)

-- | The resource prefix is the first part of the S3 object key within the
--   S3 bucket that you specified to contain audio logs. For CloudWatch
--   Logs it is the prefix of the log stream name within the log group that
--   you specified.
logSettingsResponse_resourcePrefix :: Lens' LogSettingsResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.LogSettingsResponse.LogSettingsResponse
instance GHC.Show.Show Network.AWS.LexModels.Types.LogSettingsResponse.LogSettingsResponse
instance GHC.Read.Read Network.AWS.LexModels.Types.LogSettingsResponse.LogSettingsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.Types.LogSettingsResponse.LogSettingsResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.LogSettingsResponse.LogSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.LogSettingsResponse.LogSettingsResponse
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.LogSettingsResponse.LogSettingsResponse


module Network.AWS.LexModels.Types.ConversationLogsResponse

-- | Contains information about conversation log settings.
--   
--   <i>See:</i> <a>newConversationLogsResponse</a> smart constructor.
data ConversationLogsResponse
ConversationLogsResponse' :: Maybe Text -> Maybe [LogSettingsResponse] -> ConversationLogsResponse

-- | The Amazon Resource Name (ARN) of the IAM role used to write your logs
--   to CloudWatch Logs or an S3 bucket.
[$sel:iamRoleArn:ConversationLogsResponse'] :: ConversationLogsResponse -> Maybe Text

-- | The settings for your conversation logs. You can log text, audio, or
--   both.
[$sel:logSettings:ConversationLogsResponse'] :: ConversationLogsResponse -> Maybe [LogSettingsResponse]

-- | Create a value of <a>ConversationLogsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iamRoleArn:ConversationLogsResponse'</a>,
--   <a>conversationLogsResponse_iamRoleArn</a> - The Amazon Resource Name
--   (ARN) of the IAM role used to write your logs to CloudWatch Logs or an
--   S3 bucket.
--   
--   <a>$sel:logSettings:ConversationLogsResponse'</a>,
--   <a>conversationLogsResponse_logSettings</a> - The settings for your
--   conversation logs. You can log text, audio, or both.
newConversationLogsResponse :: ConversationLogsResponse

-- | The Amazon Resource Name (ARN) of the IAM role used to write your logs
--   to CloudWatch Logs or an S3 bucket.
conversationLogsResponse_iamRoleArn :: Lens' ConversationLogsResponse (Maybe Text)

-- | The settings for your conversation logs. You can log text, audio, or
--   both.
conversationLogsResponse_logSettings :: Lens' ConversationLogsResponse (Maybe [LogSettingsResponse])
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ConversationLogsResponse.ConversationLogsResponse
instance GHC.Show.Show Network.AWS.LexModels.Types.ConversationLogsResponse.ConversationLogsResponse
instance GHC.Read.Read Network.AWS.LexModels.Types.ConversationLogsResponse.ConversationLogsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ConversationLogsResponse.ConversationLogsResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ConversationLogsResponse.ConversationLogsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ConversationLogsResponse.ConversationLogsResponse
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ConversationLogsResponse.ConversationLogsResponse


module Network.AWS.LexModels.Types.BotAliasMetadata

-- | Provides information about a bot alias.
--   
--   <i>See:</i> <a>newBotAliasMetadata</a> smart constructor.
data BotAliasMetadata
BotAliasMetadata' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConversationLogsResponse -> BotAliasMetadata

-- | The date that the bot alias was created.
[$sel:createdDate:BotAliasMetadata'] :: BotAliasMetadata -> Maybe POSIX

-- | The name of the bot to which the alias points.
[$sel:botName:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and last updated date are the same.
[$sel:lastUpdatedDate:BotAliasMetadata'] :: BotAliasMetadata -> Maybe POSIX

-- | The version of the Amazon Lex bot to which the alias points.
[$sel:botVersion:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | The name of the bot alias.
[$sel:name:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | A description of the bot alias.
[$sel:description:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | Checksum of the bot alias.
[$sel:checksum:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | Settings that determine how Amazon Lex uses conversation logs for the
--   alias.
[$sel:conversationLogs:BotAliasMetadata'] :: BotAliasMetadata -> Maybe ConversationLogsResponse

-- | Create a value of <a>BotAliasMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_createdDate</a> - The date that the bot alias was
--   created.
--   
--   <a>$sel:botName:BotAliasMetadata'</a>, <a>botAliasMetadata_botName</a>
--   - The name of the bot to which the alias points.
--   
--   <a>$sel:lastUpdatedDate:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_lastUpdatedDate</a> - The date that the bot alias
--   was updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:botVersion:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_botVersion</a> - The version of the Amazon Lex bot
--   to which the alias points.
--   
--   <a>$sel:name:BotAliasMetadata'</a>, <a>botAliasMetadata_name</a> - The
--   name of the bot alias.
--   
--   <a>$sel:description:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_description</a> - A description of the bot alias.
--   
--   <a>$sel:checksum:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_checksum</a> - Checksum of the bot alias.
--   
--   <a>$sel:conversationLogs:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_conversationLogs</a> - Settings that determine how
--   Amazon Lex uses conversation logs for the alias.
newBotAliasMetadata :: BotAliasMetadata

-- | The date that the bot alias was created.
botAliasMetadata_createdDate :: Lens' BotAliasMetadata (Maybe UTCTime)

-- | The name of the bot to which the alias points.
botAliasMetadata_botName :: Lens' BotAliasMetadata (Maybe Text)

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and last updated date are the same.
botAliasMetadata_lastUpdatedDate :: Lens' BotAliasMetadata (Maybe UTCTime)

-- | The version of the Amazon Lex bot to which the alias points.
botAliasMetadata_botVersion :: Lens' BotAliasMetadata (Maybe Text)

-- | The name of the bot alias.
botAliasMetadata_name :: Lens' BotAliasMetadata (Maybe Text)

-- | A description of the bot alias.
botAliasMetadata_description :: Lens' BotAliasMetadata (Maybe Text)

-- | Checksum of the bot alias.
botAliasMetadata_checksum :: Lens' BotAliasMetadata (Maybe Text)

-- | Settings that determine how Amazon Lex uses conversation logs for the
--   alias.
botAliasMetadata_conversationLogs :: Lens' BotAliasMetadata (Maybe ConversationLogsResponse)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.BotAliasMetadata.BotAliasMetadata
instance GHC.Show.Show Network.AWS.LexModels.Types.BotAliasMetadata.BotAliasMetadata
instance GHC.Read.Read Network.AWS.LexModels.Types.BotAliasMetadata.BotAliasMetadata
instance GHC.Classes.Eq Network.AWS.LexModels.Types.BotAliasMetadata.BotAliasMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.BotAliasMetadata.BotAliasMetadata
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.BotAliasMetadata.BotAliasMetadata
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.BotAliasMetadata.BotAliasMetadata


module Network.AWS.LexModels.Types.LogSettingsRequest

-- | Settings used to configure delivery mode and destination for
--   conversation logs.
--   
--   <i>See:</i> <a>newLogSettingsRequest</a> smart constructor.
data LogSettingsRequest
LogSettingsRequest' :: Maybe Text -> LogType -> Destination -> Text -> LogSettingsRequest

-- | The Amazon Resource Name (ARN) of the AWS KMS customer managed key for
--   encrypting audio logs delivered to an S3 bucket. The key does not
--   apply to CloudWatch Logs and is optional for S3 buckets.
[$sel:kmsKeyArn:LogSettingsRequest'] :: LogSettingsRequest -> Maybe Text

-- | The type of logging to enable. Text logs are delivered to a CloudWatch
--   Logs log group. Audio logs are delivered to an S3 bucket.
[$sel:logType:LogSettingsRequest'] :: LogSettingsRequest -> LogType

-- | Where the logs will be delivered. Text logs are delivered to a
--   CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.
[$sel:destination:LogSettingsRequest'] :: LogSettingsRequest -> Destination

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs should be delivered.
[$sel:resourceArn:LogSettingsRequest'] :: LogSettingsRequest -> Text

-- | Create a value of <a>LogSettingsRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the AWS KMS customer managed key for encrypting audio logs
--   delivered to an S3 bucket. The key does not apply to CloudWatch Logs
--   and is optional for S3 buckets.
--   
--   <a>$sel:logType:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_logType</a> - The type of logging to enable.
--   Text logs are delivered to a CloudWatch Logs log group. Audio logs are
--   delivered to an S3 bucket.
--   
--   <a>$sel:destination:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_destination</a> - Where the logs will be
--   delivered. Text logs are delivered to a CloudWatch Logs log group.
--   Audio logs are delivered to an S3 bucket.
--   
--   <a>$sel:resourceArn:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_resourceArn</a> - The Amazon Resource Name (ARN)
--   of the CloudWatch Logs log group or S3 bucket where the logs should be
--   delivered.
newLogSettingsRequest :: LogType -> Destination -> Text -> LogSettingsRequest

-- | The Amazon Resource Name (ARN) of the AWS KMS customer managed key for
--   encrypting audio logs delivered to an S3 bucket. The key does not
--   apply to CloudWatch Logs and is optional for S3 buckets.
logSettingsRequest_kmsKeyArn :: Lens' LogSettingsRequest (Maybe Text)

-- | The type of logging to enable. Text logs are delivered to a CloudWatch
--   Logs log group. Audio logs are delivered to an S3 bucket.
logSettingsRequest_logType :: Lens' LogSettingsRequest LogType

-- | Where the logs will be delivered. Text logs are delivered to a
--   CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.
logSettingsRequest_destination :: Lens' LogSettingsRequest Destination

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs should be delivered.
logSettingsRequest_resourceArn :: Lens' LogSettingsRequest Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.LogSettingsRequest.LogSettingsRequest
instance GHC.Show.Show Network.AWS.LexModels.Types.LogSettingsRequest.LogSettingsRequest
instance GHC.Read.Read Network.AWS.LexModels.Types.LogSettingsRequest.LogSettingsRequest
instance GHC.Classes.Eq Network.AWS.LexModels.Types.LogSettingsRequest.LogSettingsRequest
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.LogSettingsRequest.LogSettingsRequest
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.LogSettingsRequest.LogSettingsRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.LogSettingsRequest.LogSettingsRequest


module Network.AWS.LexModels.Types.ConversationLogsRequest

-- | Provides the settings needed for conversation logs.
--   
--   <i>See:</i> <a>newConversationLogsRequest</a> smart constructor.
data ConversationLogsRequest
ConversationLogsRequest' :: [LogSettingsRequest] -> Text -> ConversationLogsRequest

-- | The settings for your conversation logs. You can log the conversation
--   text, conversation audio, or both.
[$sel:logSettings:ConversationLogsRequest'] :: ConversationLogsRequest -> [LogSettingsRequest]

-- | The Amazon Resource Name (ARN) of an IAM role with permission to write
--   to your CloudWatch Logs for text logs and your S3 bucket for audio
--   logs. If audio encryption is enabled, this role also provides access
--   permission for the AWS KMS key used for encrypting audio logs. For
--   more information, see <a>Creating an IAM Role and Policy for
--   Conversation Logs</a>.
[$sel:iamRoleArn:ConversationLogsRequest'] :: ConversationLogsRequest -> Text

-- | Create a value of <a>ConversationLogsRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logSettings:ConversationLogsRequest'</a>,
--   <a>conversationLogsRequest_logSettings</a> - The settings for your
--   conversation logs. You can log the conversation text, conversation
--   audio, or both.
--   
--   <a>$sel:iamRoleArn:ConversationLogsRequest'</a>,
--   <a>conversationLogsRequest_iamRoleArn</a> - The Amazon Resource Name
--   (ARN) of an IAM role with permission to write to your CloudWatch Logs
--   for text logs and your S3 bucket for audio logs. If audio encryption
--   is enabled, this role also provides access permission for the AWS KMS
--   key used for encrypting audio logs. For more information, see
--   <a>Creating an IAM Role and Policy for Conversation Logs</a>.
newConversationLogsRequest :: Text -> ConversationLogsRequest

-- | The settings for your conversation logs. You can log the conversation
--   text, conversation audio, or both.
conversationLogsRequest_logSettings :: Lens' ConversationLogsRequest [LogSettingsRequest]

-- | The Amazon Resource Name (ARN) of an IAM role with permission to write
--   to your CloudWatch Logs for text logs and your S3 bucket for audio
--   logs. If audio encryption is enabled, this role also provides access
--   permission for the AWS KMS key used for encrypting audio logs. For
--   more information, see <a>Creating an IAM Role and Policy for
--   Conversation Logs</a>.
conversationLogsRequest_iamRoleArn :: Lens' ConversationLogsRequest Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ConversationLogsRequest.ConversationLogsRequest
instance GHC.Show.Show Network.AWS.LexModels.Types.ConversationLogsRequest.ConversationLogsRequest
instance GHC.Read.Read Network.AWS.LexModels.Types.ConversationLogsRequest.ConversationLogsRequest
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ConversationLogsRequest.ConversationLogsRequest
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ConversationLogsRequest.ConversationLogsRequest
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ConversationLogsRequest.ConversationLogsRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ConversationLogsRequest.ConversationLogsRequest


module Network.AWS.LexModels.Types.MergeStrategy
newtype MergeStrategy
MergeStrategy' :: Text -> MergeStrategy
[fromMergeStrategy] :: MergeStrategy -> Text
pattern MergeStrategy_FAIL_ON_CONFLICT :: MergeStrategy
pattern MergeStrategy_OVERWRITE_LATEST :: MergeStrategy
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance GHC.Generics.Generic Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance GHC.Classes.Ord Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance GHC.Classes.Eq Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance GHC.Read.Read Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy
instance GHC.Show.Show Network.AWS.LexModels.Types.MergeStrategy.MergeStrategy


module Network.AWS.LexModels.Types.Message

-- | The message object that provides the message text and its type.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe Natural -> ContentType -> Text -> Message

-- | Identifies the message group that the message belongs to. When a group
--   is assigned to a message, Amazon Lex returns one message from each
--   group in the response.
[$sel:groupNumber:Message'] :: Message -> Maybe Natural

-- | The content type of the message string.
[$sel:contentType:Message'] :: Message -> ContentType

-- | The text of the message.
[$sel:content:Message'] :: Message -> Text

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupNumber:Message'</a>, <a>message_groupNumber</a> -
--   Identifies the message group that the message belongs to. When a group
--   is assigned to a message, Amazon Lex returns one message from each
--   group in the response.
--   
--   <a>$sel:contentType:Message'</a>, <a>message_contentType</a> - The
--   content type of the message string.
--   
--   <a>$sel:content:Message'</a>, <a>message_content</a> - The text of the
--   message.
newMessage :: ContentType -> Text -> Message

-- | Identifies the message group that the message belongs to. When a group
--   is assigned to a message, Amazon Lex returns one message from each
--   group in the response.
message_groupNumber :: Lens' Message (Maybe Natural)

-- | The content type of the message string.
message_contentType :: Lens' Message ContentType

-- | The text of the message.
message_content :: Lens' Message Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.Message.Message
instance GHC.Show.Show Network.AWS.LexModels.Types.Message.Message
instance GHC.Read.Read Network.AWS.LexModels.Types.Message.Message
instance GHC.Classes.Eq Network.AWS.LexModels.Types.Message.Message
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.Message.Message
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.Message.Message
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.Message.Message
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.Message.Message


module Network.AWS.LexModels.Types.MigrationAlertType
newtype MigrationAlertType
MigrationAlertType' :: Text -> MigrationAlertType
[fromMigrationAlertType] :: MigrationAlertType -> Text
pattern MigrationAlertType_ERROR :: MigrationAlertType
pattern MigrationAlertType_WARN :: MigrationAlertType
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance GHC.Classes.Ord Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance GHC.Classes.Eq Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance GHC.Read.Read Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType
instance GHC.Show.Show Network.AWS.LexModels.Types.MigrationAlertType.MigrationAlertType


module Network.AWS.LexModels.Types.MigrationAlert

-- | Provides information about alerts and warnings that Amazon Lex sends
--   during a migration. The alerts include information about how to
--   resolve the issue.
--   
--   <i>See:</i> <a>newMigrationAlert</a> smart constructor.
data MigrationAlert
MigrationAlert' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe MigrationAlertType -> MigrationAlert

-- | A message that describes why the alert was issued.
[$sel:message:MigrationAlert'] :: MigrationAlert -> Maybe Text

-- | Additional details about the alert.
[$sel:details:MigrationAlert'] :: MigrationAlert -> Maybe [Text]

-- | A link to the Amazon Lex documentation that describes how to resolve
--   the alert.
[$sel:referenceURLs:MigrationAlert'] :: MigrationAlert -> Maybe [Text]

-- | The type of alert. There are two kinds of alerts:
--   
--   <ul>
--   <li><tt>ERROR</tt> - There was an issue with the migration that can't
--   be resolved. The migration stops.</li>
--   <li><tt>WARN</tt> - There was an issue with the migration that
--   requires manual changes to the new Amazon Lex V2 bot. The migration
--   continues.</li>
--   </ul>
[$sel:type':MigrationAlert'] :: MigrationAlert -> Maybe MigrationAlertType

-- | Create a value of <a>MigrationAlert</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:MigrationAlert'</a>, <a>migrationAlert_message</a> - A
--   message that describes why the alert was issued.
--   
--   <a>$sel:details:MigrationAlert'</a>, <a>migrationAlert_details</a> -
--   Additional details about the alert.
--   
--   <a>$sel:referenceURLs:MigrationAlert'</a>,
--   <a>migrationAlert_referenceURLs</a> - A link to the Amazon Lex
--   documentation that describes how to resolve the alert.
--   
--   <a>$sel:type':MigrationAlert'</a>, <a>migrationAlert_type</a> - The
--   type of alert. There are two kinds of alerts:
--   
--   <ul>
--   <li><tt>ERROR</tt> - There was an issue with the migration that can't
--   be resolved. The migration stops.</li>
--   <li><tt>WARN</tt> - There was an issue with the migration that
--   requires manual changes to the new Amazon Lex V2 bot. The migration
--   continues.</li>
--   </ul>
newMigrationAlert :: MigrationAlert

-- | A message that describes why the alert was issued.
migrationAlert_message :: Lens' MigrationAlert (Maybe Text)

-- | Additional details about the alert.
migrationAlert_details :: Lens' MigrationAlert (Maybe [Text])

-- | A link to the Amazon Lex documentation that describes how to resolve
--   the alert.
migrationAlert_referenceURLs :: Lens' MigrationAlert (Maybe [Text])

-- | The type of alert. There are two kinds of alerts:
--   
--   <ul>
--   <li><tt>ERROR</tt> - There was an issue with the migration that can't
--   be resolved. The migration stops.</li>
--   <li><tt>WARN</tt> - There was an issue with the migration that
--   requires manual changes to the new Amazon Lex V2 bot. The migration
--   continues.</li>
--   </ul>
migrationAlert_type :: Lens' MigrationAlert (Maybe MigrationAlertType)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.MigrationAlert.MigrationAlert
instance GHC.Show.Show Network.AWS.LexModels.Types.MigrationAlert.MigrationAlert
instance GHC.Read.Read Network.AWS.LexModels.Types.MigrationAlert.MigrationAlert
instance GHC.Classes.Eq Network.AWS.LexModels.Types.MigrationAlert.MigrationAlert
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.MigrationAlert.MigrationAlert
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.MigrationAlert.MigrationAlert
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.MigrationAlert.MigrationAlert


module Network.AWS.LexModels.Types.MigrationSortAttribute
newtype MigrationSortAttribute
MigrationSortAttribute' :: Text -> MigrationSortAttribute
[fromMigrationSortAttribute] :: MigrationSortAttribute -> Text
pattern MigrationSortAttribute_MIGRATION_DATE_TIME :: MigrationSortAttribute
pattern MigrationSortAttribute_V1_BOT_NAME :: MigrationSortAttribute
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance GHC.Generics.Generic Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance GHC.Classes.Ord Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance GHC.Classes.Eq Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance GHC.Read.Read Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute
instance GHC.Show.Show Network.AWS.LexModels.Types.MigrationSortAttribute.MigrationSortAttribute


module Network.AWS.LexModels.Types.MigrationStatus
newtype MigrationStatus
MigrationStatus' :: Text -> MigrationStatus
[fromMigrationStatus] :: MigrationStatus -> Text
pattern MigrationStatus_COMPLETED :: MigrationStatus
pattern MigrationStatus_FAILED :: MigrationStatus
pattern MigrationStatus_IN_PROGRESS :: MigrationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance GHC.Generics.Generic Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance GHC.Classes.Ord Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance GHC.Classes.Eq Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance GHC.Read.Read Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus
instance GHC.Show.Show Network.AWS.LexModels.Types.MigrationStatus.MigrationStatus


module Network.AWS.LexModels.Types.MigrationStrategy
newtype MigrationStrategy
MigrationStrategy' :: Text -> MigrationStrategy
[fromMigrationStrategy] :: MigrationStrategy -> Text
pattern MigrationStrategy_CREATE_NEW :: MigrationStrategy
pattern MigrationStrategy_UPDATE_EXISTING :: MigrationStrategy
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance GHC.Generics.Generic Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance GHC.Classes.Ord Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance GHC.Classes.Eq Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance GHC.Read.Read Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy
instance GHC.Show.Show Network.AWS.LexModels.Types.MigrationStrategy.MigrationStrategy


module Network.AWS.LexModels.Types.MigrationSummary

-- | Provides information about migrating a bot from Amazon Lex V1 to
--   Amazon Lex V2.
--   
--   <i>See:</i> <a>newMigrationSummary</a> smart constructor.
data MigrationSummary
MigrationSummary' :: Maybe Text -> Maybe Text -> Maybe Locale -> Maybe POSIX -> Maybe MigrationStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MigrationStatus -> MigrationSummary

-- | The version of the Amazon Lex V1 bot that is the source of the
--   migration.
[$sel:v1BotVersion:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The unique identifier that Amazon Lex assigned to the migration.
[$sel:migrationId:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The locale of the Amazon Lex V1 bot that is the source of the
--   migration.
[$sel:v1BotLocale:MigrationSummary'] :: MigrationSummary -> Maybe Locale

-- | The date and time that the migration started.
[$sel:migrationTimestamp:MigrationSummary'] :: MigrationSummary -> Maybe POSIX

-- | The strategy used to conduct the migration.
[$sel:migrationStrategy:MigrationSummary'] :: MigrationSummary -> Maybe MigrationStrategy

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
[$sel:v2BotRole:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The name of the Amazon Lex V1 bot that is the source of the migration.
[$sel:v1BotName:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The unique identifier of the Amazon Lex V2 that is the destination of
--   the migration.
[$sel:v2BotId:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The status of the operation. When the status is <tt>COMPLETE</tt> the
--   bot is available in Amazon Lex V2. There may be alerts and warnings
--   that need to be resolved to complete the migration.
[$sel:migrationStatus:MigrationSummary'] :: MigrationSummary -> Maybe MigrationStatus

-- | Create a value of <a>MigrationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotVersion:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotVersion</a> - The version of the Amazon Lex
--   V1 bot that is the source of the migration.
--   
--   <a>$sel:migrationId:MigrationSummary'</a>,
--   <a>migrationSummary_migrationId</a> - The unique identifier that
--   Amazon Lex assigned to the migration.
--   
--   <a>$sel:v1BotLocale:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotLocale</a> - The locale of the Amazon Lex V1
--   bot that is the source of the migration.
--   
--   <a>$sel:migrationTimestamp:MigrationSummary'</a>,
--   <a>migrationSummary_migrationTimestamp</a> - The date and time that
--   the migration started.
--   
--   <a>$sel:migrationStrategy:MigrationSummary'</a>,
--   <a>migrationSummary_migrationStrategy</a> - The strategy used to
--   conduct the migration.
--   
--   <a>$sel:v2BotRole:MigrationSummary'</a>,
--   <a>migrationSummary_v2BotRole</a> - The IAM role that Amazon Lex uses
--   to run the Amazon Lex V2 bot.
--   
--   <a>$sel:v1BotName:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotName</a> - The name of the Amazon Lex V1 bot
--   that is the source of the migration.
--   
--   <a>$sel:v2BotId:MigrationSummary'</a>, <a>migrationSummary_v2BotId</a>
--   - The unique identifier of the Amazon Lex V2 that is the destination
--   of the migration.
--   
--   <a>$sel:migrationStatus:MigrationSummary'</a>,
--   <a>migrationSummary_migrationStatus</a> - The status of the operation.
--   When the status is <tt>COMPLETE</tt> the bot is available in Amazon
--   Lex V2. There may be alerts and warnings that need to be resolved to
--   complete the migration.
newMigrationSummary :: MigrationSummary

-- | The version of the Amazon Lex V1 bot that is the source of the
--   migration.
migrationSummary_v1BotVersion :: Lens' MigrationSummary (Maybe Text)

-- | The unique identifier that Amazon Lex assigned to the migration.
migrationSummary_migrationId :: Lens' MigrationSummary (Maybe Text)

-- | The locale of the Amazon Lex V1 bot that is the source of the
--   migration.
migrationSummary_v1BotLocale :: Lens' MigrationSummary (Maybe Locale)

-- | The date and time that the migration started.
migrationSummary_migrationTimestamp :: Lens' MigrationSummary (Maybe UTCTime)

-- | The strategy used to conduct the migration.
migrationSummary_migrationStrategy :: Lens' MigrationSummary (Maybe MigrationStrategy)

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
migrationSummary_v2BotRole :: Lens' MigrationSummary (Maybe Text)

-- | The name of the Amazon Lex V1 bot that is the source of the migration.
migrationSummary_v1BotName :: Lens' MigrationSummary (Maybe Text)

-- | The unique identifier of the Amazon Lex V2 that is the destination of
--   the migration.
migrationSummary_v2BotId :: Lens' MigrationSummary (Maybe Text)

-- | The status of the operation. When the status is <tt>COMPLETE</tt> the
--   bot is available in Amazon Lex V2. There may be alerts and warnings
--   that need to be resolved to complete the migration.
migrationSummary_migrationStatus :: Lens' MigrationSummary (Maybe MigrationStatus)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.MigrationSummary.MigrationSummary
instance GHC.Show.Show Network.AWS.LexModels.Types.MigrationSummary.MigrationSummary
instance GHC.Read.Read Network.AWS.LexModels.Types.MigrationSummary.MigrationSummary
instance GHC.Classes.Eq Network.AWS.LexModels.Types.MigrationSummary.MigrationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.MigrationSummary.MigrationSummary
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.MigrationSummary.MigrationSummary
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.MigrationSummary.MigrationSummary


module Network.AWS.LexModels.Types.ObfuscationSetting
newtype ObfuscationSetting
ObfuscationSetting' :: Text -> ObfuscationSetting
[fromObfuscationSetting] :: ObfuscationSetting -> Text
pattern ObfuscationSetting_DEFAULT_OBFUSCATION :: ObfuscationSetting
pattern ObfuscationSetting_NONE :: ObfuscationSetting
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance GHC.Read.Read Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting
instance GHC.Show.Show Network.AWS.LexModels.Types.ObfuscationSetting.ObfuscationSetting


module Network.AWS.LexModels.Types.OutputContext

-- | The specification of an output context that is set when an intent is
--   fulfilled.
--   
--   <i>See:</i> <a>newOutputContext</a> smart constructor.
data OutputContext
OutputContext' :: Text -> Natural -> Natural -> OutputContext

-- | The name of the context.
[$sel:name:OutputContext'] :: OutputContext -> Text

-- | The number of seconds that the context should be active after it is
--   first sent in a <tt>PostContent</tt> or <tt>PostText</tt> response.
--   You can set the value between 5 and 86,400 seconds (24 hours).
[$sel:timeToLiveInSeconds:OutputContext'] :: OutputContext -> Natural

-- | The number of conversation turns that the context should be active. A
--   conversation turn is one <tt>PostContent</tt> or <tt>PostText</tt>
--   request and the corresponding response from Amazon Lex.
[$sel:turnsToLive:OutputContext'] :: OutputContext -> Natural

-- | Create a value of <a>OutputContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:OutputContext'</a>, <a>outputContext_name</a> - The name
--   of the context.
--   
--   <a>$sel:timeToLiveInSeconds:OutputContext'</a>,
--   <a>outputContext_timeToLiveInSeconds</a> - The number of seconds that
--   the context should be active after it is first sent in a
--   <tt>PostContent</tt> or <tt>PostText</tt> response. You can set the
--   value between 5 and 86,400 seconds (24 hours).
--   
--   <a>$sel:turnsToLive:OutputContext'</a>,
--   <a>outputContext_turnsToLive</a> - The number of conversation turns
--   that the context should be active. A conversation turn is one
--   <tt>PostContent</tt> or <tt>PostText</tt> request and the
--   corresponding response from Amazon Lex.
newOutputContext :: Text -> Natural -> Natural -> OutputContext

-- | The name of the context.
outputContext_name :: Lens' OutputContext Text

-- | The number of seconds that the context should be active after it is
--   first sent in a <tt>PostContent</tt> or <tt>PostText</tt> response.
--   You can set the value between 5 and 86,400 seconds (24 hours).
outputContext_timeToLiveInSeconds :: Lens' OutputContext Natural

-- | The number of conversation turns that the context should be active. A
--   conversation turn is one <tt>PostContent</tt> or <tt>PostText</tt>
--   request and the corresponding response from Amazon Lex.
outputContext_turnsToLive :: Lens' OutputContext Natural
instance GHC.Generics.Generic Network.AWS.LexModels.Types.OutputContext.OutputContext
instance GHC.Show.Show Network.AWS.LexModels.Types.OutputContext.OutputContext
instance GHC.Read.Read Network.AWS.LexModels.Types.OutputContext.OutputContext
instance GHC.Classes.Eq Network.AWS.LexModels.Types.OutputContext.OutputContext
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.OutputContext.OutputContext
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.OutputContext.OutputContext
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.OutputContext.OutputContext
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.OutputContext.OutputContext


module Network.AWS.LexModels.Types.ProcessBehavior
newtype ProcessBehavior
ProcessBehavior' :: Text -> ProcessBehavior
[fromProcessBehavior] :: ProcessBehavior -> Text
pattern ProcessBehavior_BUILD :: ProcessBehavior
pattern ProcessBehavior_SAVE :: ProcessBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance GHC.Read.Read Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior
instance GHC.Show.Show Network.AWS.LexModels.Types.ProcessBehavior.ProcessBehavior


module Network.AWS.LexModels.Types.Prompt

-- | Obtains information from the user. To define a prompt, provide one or
--   more messages and specify the number of attempts to get information
--   from the user. If you provide more than one message, Amazon Lex
--   chooses one of the messages to use to prompt the user. For more
--   information, see how-it-works.
--   
--   <i>See:</i> <a>newPrompt</a> smart constructor.
data Prompt
Prompt' :: Maybe Text -> NonEmpty Message -> Natural -> Prompt

-- | A response card. Amazon Lex uses this prompt at runtime, in the
--   <tt>PostText</tt> API response. It substitutes session attributes and
--   slot values for placeholders in the response card. For more
--   information, see ex-resp-card.
[$sel:responseCard:Prompt'] :: Prompt -> Maybe Text

-- | An array of objects, each of which provides a message string and its
--   type. You can specify the message string in plain text or in Speech
--   Synthesis Markup Language (SSML).
[$sel:messages:Prompt'] :: Prompt -> NonEmpty Message

-- | The number of times to prompt the user for information.
[$sel:maxAttempts:Prompt'] :: Prompt -> Natural

-- | Create a value of <a>Prompt</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Prompt'</a>, <a>prompt_responseCard</a> - A
--   response card. Amazon Lex uses this prompt at runtime, in the
--   <tt>PostText</tt> API response. It substitutes session attributes and
--   slot values for placeholders in the response card. For more
--   information, see ex-resp-card.
--   
--   <a>$sel:messages:Prompt'</a>, <a>prompt_messages</a> - An array of
--   objects, each of which provides a message string and its type. You can
--   specify the message string in plain text or in Speech Synthesis Markup
--   Language (SSML).
--   
--   <a>$sel:maxAttempts:Prompt'</a>, <a>prompt_maxAttempts</a> - The
--   number of times to prompt the user for information.
newPrompt :: NonEmpty Message -> Natural -> Prompt

-- | A response card. Amazon Lex uses this prompt at runtime, in the
--   <tt>PostText</tt> API response. It substitutes session attributes and
--   slot values for placeholders in the response card. For more
--   information, see ex-resp-card.
prompt_responseCard :: Lens' Prompt (Maybe Text)

-- | An array of objects, each of which provides a message string and its
--   type. You can specify the message string in plain text or in Speech
--   Synthesis Markup Language (SSML).
prompt_messages :: Lens' Prompt (NonEmpty Message)

-- | The number of times to prompt the user for information.
prompt_maxAttempts :: Lens' Prompt Natural
instance GHC.Generics.Generic Network.AWS.LexModels.Types.Prompt.Prompt
instance GHC.Show.Show Network.AWS.LexModels.Types.Prompt.Prompt
instance GHC.Read.Read Network.AWS.LexModels.Types.Prompt.Prompt
instance GHC.Classes.Eq Network.AWS.LexModels.Types.Prompt.Prompt
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.Prompt.Prompt
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.Prompt.Prompt
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.Prompt.Prompt
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.Prompt.Prompt


module Network.AWS.LexModels.Types.ResourceType
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_BOT :: ResourceType
pattern ResourceType_INTENT :: ResourceType
pattern ResourceType_SLOT_TYPE :: ResourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.ResourceType.ResourceType
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.ResourceType.ResourceType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.ResourceType.ResourceType
instance GHC.Classes.Ord Network.AWS.LexModels.Types.ResourceType.ResourceType
instance GHC.Classes.Eq Network.AWS.LexModels.Types.ResourceType.ResourceType
instance GHC.Read.Read Network.AWS.LexModels.Types.ResourceType.ResourceType
instance GHC.Show.Show Network.AWS.LexModels.Types.ResourceType.ResourceType


module Network.AWS.LexModels.Types.SlotConstraint
newtype SlotConstraint
SlotConstraint' :: Text -> SlotConstraint
[fromSlotConstraint] :: SlotConstraint -> Text
pattern SlotConstraint_Optional :: SlotConstraint
pattern SlotConstraint_Required :: SlotConstraint
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance GHC.Generics.Generic Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance GHC.Classes.Ord Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance GHC.Classes.Eq Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance GHC.Read.Read Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint
instance GHC.Show.Show Network.AWS.LexModels.Types.SlotConstraint.SlotConstraint


module Network.AWS.LexModels.Types.SlotDefaultValue

-- | A default value for a slot.
--   
--   <i>See:</i> <a>newSlotDefaultValue</a> smart constructor.
data SlotDefaultValue
SlotDefaultValue' :: Text -> SlotDefaultValue

-- | The default value for the slot. You can specify one of the following:
--   
--   <ul>
--   <li><tt>#context-name.slot-name</tt> - The slot value "slot-name" in
--   the context "context-name."</li>
--   <li><tt>{attribute}</tt> - The slot value of the session attribute
--   "attribute."</li>
--   <li><tt>'value'</tt> - The discrete value "value."</li>
--   </ul>
[$sel:defaultValue:SlotDefaultValue'] :: SlotDefaultValue -> Text

-- | Create a value of <a>SlotDefaultValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:SlotDefaultValue'</a>,
--   <a>slotDefaultValue_defaultValue</a> - The default value for the slot.
--   You can specify one of the following:
--   
--   <ul>
--   <li><tt>#context-name.slot-name</tt> - The slot value "slot-name" in
--   the context "context-name."</li>
--   <li><tt>{attribute}</tt> - The slot value of the session attribute
--   "attribute."</li>
--   <li><tt>'value'</tt> - The discrete value "value."</li>
--   </ul>
newSlotDefaultValue :: Text -> SlotDefaultValue

-- | The default value for the slot. You can specify one of the following:
--   
--   <ul>
--   <li><tt>#context-name.slot-name</tt> - The slot value "slot-name" in
--   the context "context-name."</li>
--   <li><tt>{attribute}</tt> - The slot value of the session attribute
--   "attribute."</li>
--   <li><tt>'value'</tt> - The discrete value "value."</li>
--   </ul>
slotDefaultValue_defaultValue :: Lens' SlotDefaultValue Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.SlotDefaultValue.SlotDefaultValue
instance GHC.Show.Show Network.AWS.LexModels.Types.SlotDefaultValue.SlotDefaultValue
instance GHC.Read.Read Network.AWS.LexModels.Types.SlotDefaultValue.SlotDefaultValue
instance GHC.Classes.Eq Network.AWS.LexModels.Types.SlotDefaultValue.SlotDefaultValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.SlotDefaultValue.SlotDefaultValue
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.SlotDefaultValue.SlotDefaultValue
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.SlotDefaultValue.SlotDefaultValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.SlotDefaultValue.SlotDefaultValue


module Network.AWS.LexModels.Types.SlotDefaultValueSpec

-- | Contains the default values for a slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot.
--   
--   <i>See:</i> <a>newSlotDefaultValueSpec</a> smart constructor.
data SlotDefaultValueSpec
SlotDefaultValueSpec' :: [SlotDefaultValue] -> SlotDefaultValueSpec

-- | The default values for a slot. You can specify more than one default.
--   For example, you can specify a default value to use from a matching
--   context variable, a session attribute, or a fixed value.
--   
--   The default value chosen is selected based on the order that you
--   specify them in the list. For example, if you specify a context
--   variable and a fixed value in that order, Amazon Lex uses the context
--   variable if it is available, else it uses the fixed value.
[$sel:defaultValueList:SlotDefaultValueSpec'] :: SlotDefaultValueSpec -> [SlotDefaultValue]

-- | Create a value of <a>SlotDefaultValueSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValueList:SlotDefaultValueSpec'</a>,
--   <a>slotDefaultValueSpec_defaultValueList</a> - The default values for
--   a slot. You can specify more than one default. For example, you can
--   specify a default value to use from a matching context variable, a
--   session attribute, or a fixed value.
--   
--   The default value chosen is selected based on the order that you
--   specify them in the list. For example, if you specify a context
--   variable and a fixed value in that order, Amazon Lex uses the context
--   variable if it is available, else it uses the fixed value.
newSlotDefaultValueSpec :: SlotDefaultValueSpec

-- | The default values for a slot. You can specify more than one default.
--   For example, you can specify a default value to use from a matching
--   context variable, a session attribute, or a fixed value.
--   
--   The default value chosen is selected based on the order that you
--   specify them in the list. For example, if you specify a context
--   variable and a fixed value in that order, Amazon Lex uses the context
--   variable if it is available, else it uses the fixed value.
slotDefaultValueSpec_defaultValueList :: Lens' SlotDefaultValueSpec [SlotDefaultValue]
instance GHC.Generics.Generic Network.AWS.LexModels.Types.SlotDefaultValueSpec.SlotDefaultValueSpec
instance GHC.Show.Show Network.AWS.LexModels.Types.SlotDefaultValueSpec.SlotDefaultValueSpec
instance GHC.Read.Read Network.AWS.LexModels.Types.SlotDefaultValueSpec.SlotDefaultValueSpec
instance GHC.Classes.Eq Network.AWS.LexModels.Types.SlotDefaultValueSpec.SlotDefaultValueSpec
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.SlotDefaultValueSpec.SlotDefaultValueSpec
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.SlotDefaultValueSpec.SlotDefaultValueSpec
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.SlotDefaultValueSpec.SlotDefaultValueSpec
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.SlotDefaultValueSpec.SlotDefaultValueSpec


module Network.AWS.LexModels.Types.Slot

-- | Identifies the version of a specific slot.
--   
--   <i>See:</i> <a>newSlot</a> smart constructor.
data Slot
Slot' :: Maybe Text -> Maybe Text -> Maybe Prompt -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe Text -> Maybe SlotDefaultValueSpec -> Maybe ObfuscationSetting -> Text -> SlotConstraint -> Slot

-- | A set of possible responses for the slot type used by text-based
--   clients. A user chooses an option from the response card, instead of
--   using text to reply.
[$sel:responseCard:Slot'] :: Slot -> Maybe Text

-- | The type of the slot, either a custom slot type that you defined or
--   one of the built-in slot types.
[$sel:slotType:Slot'] :: Slot -> Maybe Text

-- | The prompt that Amazon Lex uses to elicit the slot value from the
--   user.
[$sel:valueElicitationPrompt:Slot'] :: Slot -> Maybe Prompt

-- | The version of the slot type.
[$sel:slotTypeVersion:Slot'] :: Slot -> Maybe Text

-- | Directs Amazon Lex the order in which to elicit this slot value from
--   the user. For example, if the intent has two slots with priorities 1
--   and 2, AWS Amazon Lex first elicits a value for the slot with priority
--   1.
--   
--   If multiple slots share the same priority, the order in which Amazon
--   Lex elicits values is arbitrary.
[$sel:priority:Slot'] :: Slot -> Maybe Natural

-- | If you know a specific pattern with which users might respond to an
--   Amazon Lex request for a slot value, you can provide those utterances
--   to improve accuracy. This is optional. In most cases, Amazon Lex is
--   capable of understanding user utterances.
[$sel:sampleUtterances:Slot'] :: Slot -> Maybe [Text]

-- | A description of the slot.
[$sel:description:Slot'] :: Slot -> Maybe Text

-- | A list of default values for the slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot. You can specify
--   default values from context variables, session attributes, and defined
--   values.
[$sel:defaultValueSpec:Slot'] :: Slot -> Maybe SlotDefaultValueSpec

-- | Determines whether a slot is obfuscated in conversation logs and
--   stored utterances. When you obfuscate a slot, the value is replaced by
--   the slot name in curly braces ({}). For example, if the slot name is
--   "full_name", obfuscated values are replaced with "{full_name}". For
--   more information, see <a>Slot Obfuscation</a> .
[$sel:obfuscationSetting:Slot'] :: Slot -> Maybe ObfuscationSetting

-- | The name of the slot.
[$sel:name:Slot'] :: Slot -> Text

-- | Specifies whether the slot is required or optional.
[$sel:slotConstraint:Slot'] :: Slot -> SlotConstraint

-- | Create a value of <a>Slot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Slot'</a>, <a>slot_responseCard</a> - A set of
--   possible responses for the slot type used by text-based clients. A
--   user chooses an option from the response card, instead of using text
--   to reply.
--   
--   <a>$sel:slotType:Slot'</a>, <a>slot_slotType</a> - The type of the
--   slot, either a custom slot type that you defined or one of the
--   built-in slot types.
--   
--   <a>$sel:valueElicitationPrompt:Slot'</a>,
--   <a>slot_valueElicitationPrompt</a> - The prompt that Amazon Lex uses
--   to elicit the slot value from the user.
--   
--   <a>$sel:slotTypeVersion:Slot'</a>, <a>slot_slotTypeVersion</a> - The
--   version of the slot type.
--   
--   <a>$sel:priority:Slot'</a>, <a>slot_priority</a> - Directs Amazon Lex
--   the order in which to elicit this slot value from the user. For
--   example, if the intent has two slots with priorities 1 and 2, AWS
--   Amazon Lex first elicits a value for the slot with priority 1.
--   
--   If multiple slots share the same priority, the order in which Amazon
--   Lex elicits values is arbitrary.
--   
--   <a>$sel:sampleUtterances:Slot'</a>, <a>slot_sampleUtterances</a> - If
--   you know a specific pattern with which users might respond to an
--   Amazon Lex request for a slot value, you can provide those utterances
--   to improve accuracy. This is optional. In most cases, Amazon Lex is
--   capable of understanding user utterances.
--   
--   <a>$sel:description:Slot'</a>, <a>slot_description</a> - A description
--   of the slot.
--   
--   <a>$sel:defaultValueSpec:Slot'</a>, <a>slot_defaultValueSpec</a> - A
--   list of default values for the slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot. You can specify
--   default values from context variables, session attributes, and defined
--   values.
--   
--   <a>$sel:obfuscationSetting:Slot'</a>, <a>slot_obfuscationSetting</a> -
--   Determines whether a slot is obfuscated in conversation logs and
--   stored utterances. When you obfuscate a slot, the value is replaced by
--   the slot name in curly braces ({}). For example, if the slot name is
--   "full_name", obfuscated values are replaced with "{full_name}". For
--   more information, see <a>Slot Obfuscation</a> .
--   
--   <a>$sel:name:Slot'</a>, <a>slot_name</a> - The name of the slot.
--   
--   <a>$sel:slotConstraint:Slot'</a>, <a>slot_slotConstraint</a> -
--   Specifies whether the slot is required or optional.
newSlot :: Text -> SlotConstraint -> Slot

-- | A set of possible responses for the slot type used by text-based
--   clients. A user chooses an option from the response card, instead of
--   using text to reply.
slot_responseCard :: Lens' Slot (Maybe Text)

-- | The type of the slot, either a custom slot type that you defined or
--   one of the built-in slot types.
slot_slotType :: Lens' Slot (Maybe Text)

-- | The prompt that Amazon Lex uses to elicit the slot value from the
--   user.
slot_valueElicitationPrompt :: Lens' Slot (Maybe Prompt)

-- | The version of the slot type.
slot_slotTypeVersion :: Lens' Slot (Maybe Text)

-- | Directs Amazon Lex the order in which to elicit this slot value from
--   the user. For example, if the intent has two slots with priorities 1
--   and 2, AWS Amazon Lex first elicits a value for the slot with priority
--   1.
--   
--   If multiple slots share the same priority, the order in which Amazon
--   Lex elicits values is arbitrary.
slot_priority :: Lens' Slot (Maybe Natural)

-- | If you know a specific pattern with which users might respond to an
--   Amazon Lex request for a slot value, you can provide those utterances
--   to improve accuracy. This is optional. In most cases, Amazon Lex is
--   capable of understanding user utterances.
slot_sampleUtterances :: Lens' Slot (Maybe [Text])

-- | A description of the slot.
slot_description :: Lens' Slot (Maybe Text)

-- | A list of default values for the slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot. You can specify
--   default values from context variables, session attributes, and defined
--   values.
slot_defaultValueSpec :: Lens' Slot (Maybe SlotDefaultValueSpec)

-- | Determines whether a slot is obfuscated in conversation logs and
--   stored utterances. When you obfuscate a slot, the value is replaced by
--   the slot name in curly braces ({}). For example, if the slot name is
--   "full_name", obfuscated values are replaced with "{full_name}". For
--   more information, see <a>Slot Obfuscation</a> .
slot_obfuscationSetting :: Lens' Slot (Maybe ObfuscationSetting)

-- | The name of the slot.
slot_name :: Lens' Slot Text

-- | Specifies whether the slot is required or optional.
slot_slotConstraint :: Lens' Slot SlotConstraint
instance GHC.Generics.Generic Network.AWS.LexModels.Types.Slot.Slot
instance GHC.Show.Show Network.AWS.LexModels.Types.Slot.Slot
instance GHC.Read.Read Network.AWS.LexModels.Types.Slot.Slot
instance GHC.Classes.Eq Network.AWS.LexModels.Types.Slot.Slot
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.Slot.Slot
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.Slot.Slot
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.Slot.Slot
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.Slot.Slot


module Network.AWS.LexModels.Types.SlotTypeMetadata

-- | Provides information about a slot type..
--   
--   <i>See:</i> <a>newSlotTypeMetadata</a> smart constructor.
data SlotTypeMetadata
SlotTypeMetadata' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> SlotTypeMetadata

-- | The date that the slot type was created.
[$sel:createdDate:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe POSIX

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last updated date are the same.
[$sel:lastUpdatedDate:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe POSIX

-- | The version of the slot type.
[$sel:version:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe Text

-- | The name of the slot type.
[$sel:name:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe Text

-- | A description of the slot type.
[$sel:description:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe Text

-- | Create a value of <a>SlotTypeMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_createdDate</a> - The date that the slot type was
--   created.
--   
--   <a>$sel:lastUpdatedDate:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_lastUpdatedDate</a> - The date that the slot type
--   was updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:version:SlotTypeMetadata'</a>, <a>slotTypeMetadata_version</a>
--   - The version of the slot type.
--   
--   <a>$sel:name:SlotTypeMetadata'</a>, <a>slotTypeMetadata_name</a> - The
--   name of the slot type.
--   
--   <a>$sel:description:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_description</a> - A description of the slot type.
newSlotTypeMetadata :: SlotTypeMetadata

-- | The date that the slot type was created.
slotTypeMetadata_createdDate :: Lens' SlotTypeMetadata (Maybe UTCTime)

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last updated date are the same.
slotTypeMetadata_lastUpdatedDate :: Lens' SlotTypeMetadata (Maybe UTCTime)

-- | The version of the slot type.
slotTypeMetadata_version :: Lens' SlotTypeMetadata (Maybe Text)

-- | The name of the slot type.
slotTypeMetadata_name :: Lens' SlotTypeMetadata (Maybe Text)

-- | A description of the slot type.
slotTypeMetadata_description :: Lens' SlotTypeMetadata (Maybe Text)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.SlotTypeMetadata.SlotTypeMetadata
instance GHC.Show.Show Network.AWS.LexModels.Types.SlotTypeMetadata.SlotTypeMetadata
instance GHC.Read.Read Network.AWS.LexModels.Types.SlotTypeMetadata.SlotTypeMetadata
instance GHC.Classes.Eq Network.AWS.LexModels.Types.SlotTypeMetadata.SlotTypeMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.SlotTypeMetadata.SlotTypeMetadata
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.SlotTypeMetadata.SlotTypeMetadata
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.SlotTypeMetadata.SlotTypeMetadata


module Network.AWS.LexModels.Types.SlotTypeRegexConfiguration

-- | Provides a regular expression used to validate the value of a slot.
--   
--   <i>See:</i> <a>newSlotTypeRegexConfiguration</a> smart constructor.
data SlotTypeRegexConfiguration
SlotTypeRegexConfiguration' :: Text -> SlotTypeRegexConfiguration

-- | A regular expression used to validate the value of a slot.
--   
--   Use a standard regular expression. Amazon Lex supports the following
--   characters in the regular expression:
--   
--   <ul>
--   <li>A-Z, a-z</li>
--   <li>0-9</li>
--   <li>Unicode characters ("\ u&lt;Unicode&gt;")</li>
--   </ul>
--   
--   Represent Unicode characters with four digits, for example "\u0041" or
--   "\u005A".
--   
--   The following regular expression operators are not supported:
--   
--   <ul>
--   <li>Infinite repeaters: *, +, or {x,} with no upper bound.</li>
--   <li>Wild card (.)</li>
--   </ul>
[$sel:pattern':SlotTypeRegexConfiguration'] :: SlotTypeRegexConfiguration -> Text

-- | Create a value of <a>SlotTypeRegexConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pattern':SlotTypeRegexConfiguration'</a>,
--   <a>slotTypeRegexConfiguration_pattern</a> - A regular expression used
--   to validate the value of a slot.
--   
--   Use a standard regular expression. Amazon Lex supports the following
--   characters in the regular expression:
--   
--   <ul>
--   <li>A-Z, a-z</li>
--   <li>0-9</li>
--   <li>Unicode characters ("\ u&lt;Unicode&gt;")</li>
--   </ul>
--   
--   Represent Unicode characters with four digits, for example "\u0041" or
--   "\u005A".
--   
--   The following regular expression operators are not supported:
--   
--   <ul>
--   <li>Infinite repeaters: *, +, or {x,} with no upper bound.</li>
--   <li>Wild card (.)</li>
--   </ul>
newSlotTypeRegexConfiguration :: Text -> SlotTypeRegexConfiguration

-- | A regular expression used to validate the value of a slot.
--   
--   Use a standard regular expression. Amazon Lex supports the following
--   characters in the regular expression:
--   
--   <ul>
--   <li>A-Z, a-z</li>
--   <li>0-9</li>
--   <li>Unicode characters ("\ u&lt;Unicode&gt;")</li>
--   </ul>
--   
--   Represent Unicode characters with four digits, for example "\u0041" or
--   "\u005A".
--   
--   The following regular expression operators are not supported:
--   
--   <ul>
--   <li>Infinite repeaters: *, +, or {x,} with no upper bound.</li>
--   <li>Wild card (.)</li>
--   </ul>
slotTypeRegexConfiguration_pattern :: Lens' SlotTypeRegexConfiguration Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.SlotTypeRegexConfiguration.SlotTypeRegexConfiguration
instance GHC.Show.Show Network.AWS.LexModels.Types.SlotTypeRegexConfiguration.SlotTypeRegexConfiguration
instance GHC.Read.Read Network.AWS.LexModels.Types.SlotTypeRegexConfiguration.SlotTypeRegexConfiguration
instance GHC.Classes.Eq Network.AWS.LexModels.Types.SlotTypeRegexConfiguration.SlotTypeRegexConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.SlotTypeRegexConfiguration.SlotTypeRegexConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.SlotTypeRegexConfiguration.SlotTypeRegexConfiguration
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.SlotTypeRegexConfiguration.SlotTypeRegexConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.SlotTypeRegexConfiguration.SlotTypeRegexConfiguration


module Network.AWS.LexModels.Types.SlotTypeConfiguration

-- | Provides configuration information for a slot type.
--   
--   <i>See:</i> <a>newSlotTypeConfiguration</a> smart constructor.
data SlotTypeConfiguration
SlotTypeConfiguration' :: Maybe SlotTypeRegexConfiguration -> SlotTypeConfiguration

-- | A regular expression used to validate the value of a slot.
[$sel:regexConfiguration:SlotTypeConfiguration'] :: SlotTypeConfiguration -> Maybe SlotTypeRegexConfiguration

-- | Create a value of <a>SlotTypeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regexConfiguration:SlotTypeConfiguration'</a>,
--   <a>slotTypeConfiguration_regexConfiguration</a> - A regular expression
--   used to validate the value of a slot.
newSlotTypeConfiguration :: SlotTypeConfiguration

-- | A regular expression used to validate the value of a slot.
slotTypeConfiguration_regexConfiguration :: Lens' SlotTypeConfiguration (Maybe SlotTypeRegexConfiguration)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.SlotTypeConfiguration.SlotTypeConfiguration
instance GHC.Show.Show Network.AWS.LexModels.Types.SlotTypeConfiguration.SlotTypeConfiguration
instance GHC.Read.Read Network.AWS.LexModels.Types.SlotTypeConfiguration.SlotTypeConfiguration
instance GHC.Classes.Eq Network.AWS.LexModels.Types.SlotTypeConfiguration.SlotTypeConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.SlotTypeConfiguration.SlotTypeConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.SlotTypeConfiguration.SlotTypeConfiguration
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.SlotTypeConfiguration.SlotTypeConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.SlotTypeConfiguration.SlotTypeConfiguration


module Network.AWS.LexModels.Types.SlotValueSelectionStrategy
newtype SlotValueSelectionStrategy
SlotValueSelectionStrategy' :: Text -> SlotValueSelectionStrategy
[fromSlotValueSelectionStrategy] :: SlotValueSelectionStrategy -> Text
pattern SlotValueSelectionStrategy_ORIGINAL_VALUE :: SlotValueSelectionStrategy
pattern SlotValueSelectionStrategy_TOP_RESOLUTION :: SlotValueSelectionStrategy
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance GHC.Generics.Generic Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance GHC.Classes.Ord Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance GHC.Classes.Eq Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance GHC.Read.Read Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy
instance GHC.Show.Show Network.AWS.LexModels.Types.SlotValueSelectionStrategy.SlotValueSelectionStrategy


module Network.AWS.LexModels.Types.SortOrder
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.SortOrder.SortOrder
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.SortOrder.SortOrder
instance GHC.Generics.Generic Network.AWS.LexModels.Types.SortOrder.SortOrder
instance GHC.Classes.Ord Network.AWS.LexModels.Types.SortOrder.SortOrder
instance GHC.Classes.Eq Network.AWS.LexModels.Types.SortOrder.SortOrder
instance GHC.Read.Read Network.AWS.LexModels.Types.SortOrder.SortOrder
instance GHC.Show.Show Network.AWS.LexModels.Types.SortOrder.SortOrder


module Network.AWS.LexModels.Types.Statement

-- | A collection of messages that convey information to the user. At
--   runtime, Amazon Lex selects the message to convey.
--   
--   <i>See:</i> <a>newStatement</a> smart constructor.
data Statement
Statement' :: Maybe Text -> NonEmpty Message -> Statement

-- | At runtime, if the client is using the <a>PostText</a> API, Amazon Lex
--   includes the response card in the response. It substitutes all of the
--   session attributes and slot values for placeholders in the response
--   card.
[$sel:responseCard:Statement'] :: Statement -> Maybe Text

-- | A collection of message objects.
[$sel:messages:Statement'] :: Statement -> NonEmpty Message

-- | Create a value of <a>Statement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Statement'</a>, <a>statement_responseCard</a> -
--   At runtime, if the client is using the <a>PostText</a> API, Amazon Lex
--   includes the response card in the response. It substitutes all of the
--   session attributes and slot values for placeholders in the response
--   card.
--   
--   <a>$sel:messages:Statement'</a>, <a>statement_messages</a> - A
--   collection of message objects.
newStatement :: NonEmpty Message -> Statement

-- | At runtime, if the client is using the <a>PostText</a> API, Amazon Lex
--   includes the response card in the response. It substitutes all of the
--   session attributes and slot values for placeholders in the response
--   card.
statement_responseCard :: Lens' Statement (Maybe Text)

-- | A collection of message objects.
statement_messages :: Lens' Statement (NonEmpty Message)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.Statement.Statement
instance GHC.Show.Show Network.AWS.LexModels.Types.Statement.Statement
instance GHC.Read.Read Network.AWS.LexModels.Types.Statement.Statement
instance GHC.Classes.Eq Network.AWS.LexModels.Types.Statement.Statement
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.Statement.Statement
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.Statement.Statement
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.Statement.Statement
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.Statement.Statement


module Network.AWS.LexModels.Types.FollowUpPrompt

-- | A prompt for additional activity after an intent is fulfilled. For
--   example, after the <tt>OrderPizza</tt> intent is fulfilled, you might
--   prompt the user to find out whether the user wants to order drinks.
--   
--   <i>See:</i> <a>newFollowUpPrompt</a> smart constructor.
data FollowUpPrompt
FollowUpPrompt' :: Prompt -> Statement -> FollowUpPrompt

-- | Prompts for information from the user.
[$sel:prompt:FollowUpPrompt'] :: FollowUpPrompt -> Prompt

-- | If the user answers "no" to the question defined in the
--   <tt>prompt</tt> field, Amazon Lex responds with this statement to
--   acknowledge that the intent was canceled.
[$sel:rejectionStatement:FollowUpPrompt'] :: FollowUpPrompt -> Statement

-- | Create a value of <a>FollowUpPrompt</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prompt:FollowUpPrompt'</a>, <a>followUpPrompt_prompt</a> -
--   Prompts for information from the user.
--   
--   <a>$sel:rejectionStatement:FollowUpPrompt'</a>,
--   <a>followUpPrompt_rejectionStatement</a> - If the user answers "no" to
--   the question defined in the <tt>prompt</tt> field, Amazon Lex responds
--   with this statement to acknowledge that the intent was canceled.
newFollowUpPrompt :: Prompt -> Statement -> FollowUpPrompt

-- | Prompts for information from the user.
followUpPrompt_prompt :: Lens' FollowUpPrompt Prompt

-- | If the user answers "no" to the question defined in the
--   <tt>prompt</tt> field, Amazon Lex responds with this statement to
--   acknowledge that the intent was canceled.
followUpPrompt_rejectionStatement :: Lens' FollowUpPrompt Statement
instance GHC.Generics.Generic Network.AWS.LexModels.Types.FollowUpPrompt.FollowUpPrompt
instance GHC.Show.Show Network.AWS.LexModels.Types.FollowUpPrompt.FollowUpPrompt
instance GHC.Read.Read Network.AWS.LexModels.Types.FollowUpPrompt.FollowUpPrompt
instance GHC.Classes.Eq Network.AWS.LexModels.Types.FollowUpPrompt.FollowUpPrompt
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.FollowUpPrompt.FollowUpPrompt
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.FollowUpPrompt.FollowUpPrompt
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.FollowUpPrompt.FollowUpPrompt
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.FollowUpPrompt.FollowUpPrompt


module Network.AWS.LexModels.Types.StatusType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Detected :: StatusType
pattern StatusType_Missed :: StatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.LexModels.Types.StatusType.StatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.LexModels.Types.StatusType.StatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.LexModels.Types.StatusType.StatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.StatusType.StatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.LexModels.Types.StatusType.StatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.StatusType.StatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.Types.StatusType.StatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.LexModels.Types.StatusType.StatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.LexModels.Types.StatusType.StatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.LexModels.Types.StatusType.StatusType
instance Network.AWS.Data.Text.ToText Network.AWS.LexModels.Types.StatusType.StatusType
instance Network.AWS.Data.Text.FromText Network.AWS.LexModels.Types.StatusType.StatusType
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.StatusType.StatusType
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.StatusType.StatusType
instance GHC.Generics.Generic Network.AWS.LexModels.Types.StatusType.StatusType
instance GHC.Classes.Ord Network.AWS.LexModels.Types.StatusType.StatusType
instance GHC.Classes.Eq Network.AWS.LexModels.Types.StatusType.StatusType
instance GHC.Read.Read Network.AWS.LexModels.Types.StatusType.StatusType
instance GHC.Show.Show Network.AWS.LexModels.Types.StatusType.StatusType


module Network.AWS.LexModels.Types.Tag

-- | A list of key/value pairs that identify a bot, bot alias, or bot
--   channel. Tag keys and values can consist of Unicode letters, digits,
--   white space, and any of the following symbols: _ . : / = + - @.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key for the tag. Keys are not case-sensitive and must be unique.
[$sel:key:Tag'] :: Tag -> Text

-- | The value associated with a key. The value may be an empty string but
--   it can't be null.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. Keys are
--   not case-sensitive and must be unique.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value associated with a
--   key. The value may be an empty string but it can't be null.
newTag :: Text -> Text -> Tag

-- | The key for the tag. Keys are not case-sensitive and must be unique.
tag_key :: Lens' Tag Text

-- | The value associated with a key. The value may be an empty string but
--   it can't be null.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.LexModels.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.LexModels.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.LexModels.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.LexModels.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.Types.Tag.Tag


module Network.AWS.LexModels.Types.UtteranceData

-- | Provides information about a single utterance that was made to your
--   bot.
--   
--   <i>See:</i> <a>newUtteranceData</a> smart constructor.
data UtteranceData
UtteranceData' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe POSIX -> Maybe POSIX -> UtteranceData

-- | The text that was entered by the user or the text representation of an
--   audio clip.
[$sel:utteranceString:UtteranceData'] :: UtteranceData -> Maybe Text

-- | The total number of individuals that used the utterance.
[$sel:distinctUsers:UtteranceData'] :: UtteranceData -> Maybe Int

-- | The number of times that the utterance was processed.
[$sel:count:UtteranceData'] :: UtteranceData -> Maybe Int

-- | The date that the utterance was last recorded.
[$sel:lastUtteredDate:UtteranceData'] :: UtteranceData -> Maybe POSIX

-- | The date that the utterance was first recorded.
[$sel:firstUtteredDate:UtteranceData'] :: UtteranceData -> Maybe POSIX

-- | Create a value of <a>UtteranceData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:utteranceString:UtteranceData'</a>,
--   <a>utteranceData_utteranceString</a> - The text that was entered by
--   the user or the text representation of an audio clip.
--   
--   <a>$sel:distinctUsers:UtteranceData'</a>,
--   <a>utteranceData_distinctUsers</a> - The total number of individuals
--   that used the utterance.
--   
--   <a>$sel:count:UtteranceData'</a>, <a>utteranceData_count</a> - The
--   number of times that the utterance was processed.
--   
--   <a>$sel:lastUtteredDate:UtteranceData'</a>,
--   <a>utteranceData_lastUtteredDate</a> - The date that the utterance was
--   last recorded.
--   
--   <a>$sel:firstUtteredDate:UtteranceData'</a>,
--   <a>utteranceData_firstUtteredDate</a> - The date that the utterance
--   was first recorded.
newUtteranceData :: UtteranceData

-- | The text that was entered by the user or the text representation of an
--   audio clip.
utteranceData_utteranceString :: Lens' UtteranceData (Maybe Text)

-- | The total number of individuals that used the utterance.
utteranceData_distinctUsers :: Lens' UtteranceData (Maybe Int)

-- | The number of times that the utterance was processed.
utteranceData_count :: Lens' UtteranceData (Maybe Int)

-- | The date that the utterance was last recorded.
utteranceData_lastUtteredDate :: Lens' UtteranceData (Maybe UTCTime)

-- | The date that the utterance was first recorded.
utteranceData_firstUtteredDate :: Lens' UtteranceData (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.LexModels.Types.UtteranceData.UtteranceData
instance GHC.Show.Show Network.AWS.LexModels.Types.UtteranceData.UtteranceData
instance GHC.Read.Read Network.AWS.LexModels.Types.UtteranceData.UtteranceData
instance GHC.Classes.Eq Network.AWS.LexModels.Types.UtteranceData.UtteranceData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.UtteranceData.UtteranceData
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.UtteranceData.UtteranceData
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.UtteranceData.UtteranceData


module Network.AWS.LexModels.Types.UtteranceList

-- | Provides a list of utterances that have been made to a specific
--   version of your bot. The list contains a maximum of 100 utterances.
--   
--   <i>See:</i> <a>newUtteranceList</a> smart constructor.
data UtteranceList
UtteranceList' :: Maybe Text -> Maybe [UtteranceData] -> UtteranceList

-- | The version of the bot that processed the list.
[$sel:botVersion:UtteranceList'] :: UtteranceList -> Maybe Text

-- | One or more UtteranceData objects that contain information about the
--   utterances that have been made to a bot. The maximum number of object
--   is 100.
[$sel:utterances:UtteranceList'] :: UtteranceList -> Maybe [UtteranceData]

-- | Create a value of <a>UtteranceList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botVersion:UtteranceList'</a>, <a>utteranceList_botVersion</a>
--   - The version of the bot that processed the list.
--   
--   <a>$sel:utterances:UtteranceList'</a>, <a>utteranceList_utterances</a>
--   - One or more UtteranceData objects that contain information about the
--   utterances that have been made to a bot. The maximum number of object
--   is 100.
newUtteranceList :: UtteranceList

-- | The version of the bot that processed the list.
utteranceList_botVersion :: Lens' UtteranceList (Maybe Text)

-- | One or more UtteranceData objects that contain information about the
--   utterances that have been made to a bot. The maximum number of object
--   is 100.
utteranceList_utterances :: Lens' UtteranceList (Maybe [UtteranceData])
instance GHC.Generics.Generic Network.AWS.LexModels.Types.UtteranceList.UtteranceList
instance GHC.Show.Show Network.AWS.LexModels.Types.UtteranceList.UtteranceList
instance GHC.Read.Read Network.AWS.LexModels.Types.UtteranceList.UtteranceList
instance GHC.Classes.Eq Network.AWS.LexModels.Types.UtteranceList.UtteranceList
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.LexModels.Types.UtteranceList.UtteranceList
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.Types.UtteranceList.UtteranceList
instance Control.DeepSeq.NFData Network.AWS.LexModels.Types.UtteranceList.UtteranceList


module Network.AWS.LexModels.Types

-- | API version <tt>2017-04-19</tt> of the Amazon Lex Model Building
--   Service SDK configuration.
defaultService :: Service

-- | The resource specified in the request was not found. Check the
--   resource and try again.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is not well formed. For example, a value is invalid or a
--   required field is missing. Check the field values, and try again.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your IAM user or role does not have permission to call the Amazon Lex
--   V2 APIs required to migrate your bot.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a conflict processing the request. Try your request again.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeded a limit. Try your request again.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you are attempting to delete is referred to by
--   another resource. Use this information to remove references to the
--   resource that you are trying to delete.
--   
--   The body of the exception contains a JSON object that describes the
--   resource.
--   
--   <pre>
--   { "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,
--   </pre>
--   
--   <pre>
--   "resourceReference": {
--   </pre>
--   
--   <pre>
--   "name": string, "version": string } }
--   </pre>
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal Amazon Lex error occurred. Try your request again.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The checksum of the resource that you are trying to change does not
--   match the checksum in the request. Check the resource's checksum and
--   try again.
_PreconditionFailedException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ChannelStatus
ChannelStatus' :: Text -> ChannelStatus
[fromChannelStatus] :: ChannelStatus -> Text
pattern ChannelStatus_CREATED :: ChannelStatus
pattern ChannelStatus_FAILED :: ChannelStatus
pattern ChannelStatus_IN_PROGRESS :: ChannelStatus
newtype ChannelType
ChannelType' :: Text -> ChannelType
[fromChannelType] :: ChannelType -> Text
pattern ChannelType_Facebook :: ChannelType
pattern ChannelType_Kik :: ChannelType
pattern ChannelType_Slack :: ChannelType
pattern ChannelType_Twilio_Sms :: ChannelType
newtype ContentType
ContentType' :: Text -> ContentType
[fromContentType] :: ContentType -> Text
pattern ContentType_CustomPayload :: ContentType
pattern ContentType_PlainText :: ContentType
pattern ContentType_SSML :: ContentType
newtype Destination
Destination' :: Text -> Destination
[fromDestination] :: Destination -> Text
pattern Destination_CLOUDWATCH_LOGS :: Destination
pattern Destination_S3 :: Destination
newtype ExportStatus
ExportStatus' :: Text -> ExportStatus
[fromExportStatus] :: ExportStatus -> Text
pattern ExportStatus_FAILED :: ExportStatus
pattern ExportStatus_IN_PROGRESS :: ExportStatus
pattern ExportStatus_READY :: ExportStatus
newtype ExportType
ExportType' :: Text -> ExportType
[fromExportType] :: ExportType -> Text
pattern ExportType_ALEXA_SKILLS_KIT :: ExportType
pattern ExportType_LEX :: ExportType
newtype FulfillmentActivityType
FulfillmentActivityType' :: Text -> FulfillmentActivityType
[fromFulfillmentActivityType] :: FulfillmentActivityType -> Text
pattern FulfillmentActivityType_CodeHook :: FulfillmentActivityType
pattern FulfillmentActivityType_ReturnIntent :: FulfillmentActivityType
newtype ImportStatus
ImportStatus' :: Text -> ImportStatus
[fromImportStatus] :: ImportStatus -> Text
pattern ImportStatus_COMPLETE :: ImportStatus
pattern ImportStatus_FAILED :: ImportStatus
pattern ImportStatus_IN_PROGRESS :: ImportStatus
newtype LexStatus
LexStatus' :: Text -> LexStatus
[fromLexStatus] :: LexStatus -> Text
pattern LexStatus_BUILDING :: LexStatus
pattern LexStatus_FAILED :: LexStatus
pattern LexStatus_NOT_BUILT :: LexStatus
pattern LexStatus_READY :: LexStatus
pattern LexStatus_READY_BASIC_TESTING :: LexStatus
newtype Locale
Locale' :: Text -> Locale
[fromLocale] :: Locale -> Text
pattern Locale_De_DE :: Locale
pattern Locale_En_AU :: Locale
pattern Locale_En_GB :: Locale
pattern Locale_En_IN :: Locale
pattern Locale_En_US :: Locale
pattern Locale_Es_419 :: Locale
pattern Locale_Es_ES :: Locale
pattern Locale_Es_US :: Locale
pattern Locale_Fr_CA :: Locale
pattern Locale_Fr_FR :: Locale
pattern Locale_It_IT :: Locale
pattern Locale_Ja_JP :: Locale
pattern Locale_Ko_KR :: Locale
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_AUDIO :: LogType
pattern LogType_TEXT :: LogType
newtype MergeStrategy
MergeStrategy' :: Text -> MergeStrategy
[fromMergeStrategy] :: MergeStrategy -> Text
pattern MergeStrategy_FAIL_ON_CONFLICT :: MergeStrategy
pattern MergeStrategy_OVERWRITE_LATEST :: MergeStrategy
newtype MigrationAlertType
MigrationAlertType' :: Text -> MigrationAlertType
[fromMigrationAlertType] :: MigrationAlertType -> Text
pattern MigrationAlertType_ERROR :: MigrationAlertType
pattern MigrationAlertType_WARN :: MigrationAlertType
newtype MigrationSortAttribute
MigrationSortAttribute' :: Text -> MigrationSortAttribute
[fromMigrationSortAttribute] :: MigrationSortAttribute -> Text
pattern MigrationSortAttribute_MIGRATION_DATE_TIME :: MigrationSortAttribute
pattern MigrationSortAttribute_V1_BOT_NAME :: MigrationSortAttribute
newtype MigrationStatus
MigrationStatus' :: Text -> MigrationStatus
[fromMigrationStatus] :: MigrationStatus -> Text
pattern MigrationStatus_COMPLETED :: MigrationStatus
pattern MigrationStatus_FAILED :: MigrationStatus
pattern MigrationStatus_IN_PROGRESS :: MigrationStatus
newtype MigrationStrategy
MigrationStrategy' :: Text -> MigrationStrategy
[fromMigrationStrategy] :: MigrationStrategy -> Text
pattern MigrationStrategy_CREATE_NEW :: MigrationStrategy
pattern MigrationStrategy_UPDATE_EXISTING :: MigrationStrategy
newtype ObfuscationSetting
ObfuscationSetting' :: Text -> ObfuscationSetting
[fromObfuscationSetting] :: ObfuscationSetting -> Text
pattern ObfuscationSetting_DEFAULT_OBFUSCATION :: ObfuscationSetting
pattern ObfuscationSetting_NONE :: ObfuscationSetting
newtype ProcessBehavior
ProcessBehavior' :: Text -> ProcessBehavior
[fromProcessBehavior] :: ProcessBehavior -> Text
pattern ProcessBehavior_BUILD :: ProcessBehavior
pattern ProcessBehavior_SAVE :: ProcessBehavior
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_BOT :: ResourceType
pattern ResourceType_INTENT :: ResourceType
pattern ResourceType_SLOT_TYPE :: ResourceType
newtype SlotConstraint
SlotConstraint' :: Text -> SlotConstraint
[fromSlotConstraint] :: SlotConstraint -> Text
pattern SlotConstraint_Optional :: SlotConstraint
pattern SlotConstraint_Required :: SlotConstraint
newtype SlotValueSelectionStrategy
SlotValueSelectionStrategy' :: Text -> SlotValueSelectionStrategy
[fromSlotValueSelectionStrategy] :: SlotValueSelectionStrategy -> Text
pattern SlotValueSelectionStrategy_ORIGINAL_VALUE :: SlotValueSelectionStrategy
pattern SlotValueSelectionStrategy_TOP_RESOLUTION :: SlotValueSelectionStrategy
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Detected :: StatusType
pattern StatusType_Missed :: StatusType

-- | Provides information about a bot alias.
--   
--   <i>See:</i> <a>newBotAliasMetadata</a> smart constructor.
data BotAliasMetadata
BotAliasMetadata' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConversationLogsResponse -> BotAliasMetadata

-- | The date that the bot alias was created.
[$sel:createdDate:BotAliasMetadata'] :: BotAliasMetadata -> Maybe POSIX

-- | The name of the bot to which the alias points.
[$sel:botName:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and last updated date are the same.
[$sel:lastUpdatedDate:BotAliasMetadata'] :: BotAliasMetadata -> Maybe POSIX

-- | The version of the Amazon Lex bot to which the alias points.
[$sel:botVersion:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | The name of the bot alias.
[$sel:name:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | A description of the bot alias.
[$sel:description:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | Checksum of the bot alias.
[$sel:checksum:BotAliasMetadata'] :: BotAliasMetadata -> Maybe Text

-- | Settings that determine how Amazon Lex uses conversation logs for the
--   alias.
[$sel:conversationLogs:BotAliasMetadata'] :: BotAliasMetadata -> Maybe ConversationLogsResponse

-- | Create a value of <a>BotAliasMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_createdDate</a> - The date that the bot alias was
--   created.
--   
--   <a>$sel:botName:BotAliasMetadata'</a>, <a>botAliasMetadata_botName</a>
--   - The name of the bot to which the alias points.
--   
--   <a>$sel:lastUpdatedDate:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_lastUpdatedDate</a> - The date that the bot alias
--   was updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:botVersion:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_botVersion</a> - The version of the Amazon Lex bot
--   to which the alias points.
--   
--   <a>$sel:name:BotAliasMetadata'</a>, <a>botAliasMetadata_name</a> - The
--   name of the bot alias.
--   
--   <a>$sel:description:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_description</a> - A description of the bot alias.
--   
--   <a>$sel:checksum:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_checksum</a> - Checksum of the bot alias.
--   
--   <a>$sel:conversationLogs:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_conversationLogs</a> - Settings that determine how
--   Amazon Lex uses conversation logs for the alias.
newBotAliasMetadata :: BotAliasMetadata

-- | The date that the bot alias was created.
botAliasMetadata_createdDate :: Lens' BotAliasMetadata (Maybe UTCTime)

-- | The name of the bot to which the alias points.
botAliasMetadata_botName :: Lens' BotAliasMetadata (Maybe Text)

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and last updated date are the same.
botAliasMetadata_lastUpdatedDate :: Lens' BotAliasMetadata (Maybe UTCTime)

-- | The version of the Amazon Lex bot to which the alias points.
botAliasMetadata_botVersion :: Lens' BotAliasMetadata (Maybe Text)

-- | The name of the bot alias.
botAliasMetadata_name :: Lens' BotAliasMetadata (Maybe Text)

-- | A description of the bot alias.
botAliasMetadata_description :: Lens' BotAliasMetadata (Maybe Text)

-- | Checksum of the bot alias.
botAliasMetadata_checksum :: Lens' BotAliasMetadata (Maybe Text)

-- | Settings that determine how Amazon Lex uses conversation logs for the
--   alias.
botAliasMetadata_conversationLogs :: Lens' BotAliasMetadata (Maybe ConversationLogsResponse)

-- | Represents an association between an Amazon Lex bot and an external
--   messaging platform.
--   
--   <i>See:</i> <a>newBotChannelAssociation</a> smart constructor.
data BotChannelAssociation
BotChannelAssociation' :: Maybe Text -> Maybe POSIX -> Maybe ChannelStatus -> Maybe (Sensitive (HashMap Text Text)) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChannelType -> BotChannelAssociation

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
[$sel:botAlias:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | The date that the association between the Amazon Lex bot and the
--   channel was created.
[$sel:createdDate:BotChannelAssociation'] :: BotChannelAssociation -> Maybe POSIX

-- | The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
[$sel:status:BotChannelAssociation'] :: BotChannelAssociation -> Maybe ChannelStatus

-- | Provides information necessary to communicate with the messaging
--   platform.
[$sel:botConfiguration:BotChannelAssociation'] :: BotChannelAssociation -> Maybe (Sensitive (HashMap Text Text))

-- | The name of the Amazon Lex bot to which this association is being
--   made.
--   
--   Currently, Amazon Lex supports associations with Facebook and Slack,
--   and Twilio.
[$sel:botName:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | The name of the association between the bot and the channel.
[$sel:name:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
[$sel:failureReason:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | A text description of the association you are creating.
[$sel:description:BotChannelAssociation'] :: BotChannelAssociation -> Maybe Text

-- | Specifies the type of association by indicating the type of channel
--   being established between the Amazon Lex bot and the external
--   messaging platform.
[$sel:type':BotChannelAssociation'] :: BotChannelAssociation -> Maybe ChannelType

-- | Create a value of <a>BotChannelAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botAlias:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botAlias</a> - An alias pointing to the
--   specific version of the Amazon Lex bot to which this association is
--   being made.
--   
--   <a>$sel:createdDate:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_createdDate</a> - The date that the
--   association between the Amazon Lex bot and the channel was created.
--   
--   <a>$sel:status:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_status</a> - The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
--   
--   <a>$sel:botConfiguration:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botConfiguration</a> - Provides information
--   necessary to communicate with the messaging platform.
--   
--   <a>$sel:botName:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botName</a> - The name of the Amazon Lex bot
--   to which this association is being made.
--   
--   Currently, Amazon Lex supports associations with Facebook and Slack,
--   and Twilio.
--   
--   <a>$sel:name:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_name</a> - The name of the association
--   between the bot and the channel.
--   
--   <a>$sel:failureReason:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   create the association.
--   
--   <a>$sel:description:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_description</a> - A text description of the
--   association you are creating.
--   
--   <a>$sel:type':BotChannelAssociation'</a>,
--   <a>botChannelAssociation_type</a> - Specifies the type of association
--   by indicating the type of channel being established between the Amazon
--   Lex bot and the external messaging platform.
newBotChannelAssociation :: BotChannelAssociation

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
botChannelAssociation_botAlias :: Lens' BotChannelAssociation (Maybe Text)

-- | The date that the association between the Amazon Lex bot and the
--   channel was created.
botChannelAssociation_createdDate :: Lens' BotChannelAssociation (Maybe UTCTime)

-- | The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
botChannelAssociation_status :: Lens' BotChannelAssociation (Maybe ChannelStatus)

-- | Provides information necessary to communicate with the messaging
--   platform.
botChannelAssociation_botConfiguration :: Lens' BotChannelAssociation (Maybe (HashMap Text Text))

-- | The name of the Amazon Lex bot to which this association is being
--   made.
--   
--   Currently, Amazon Lex supports associations with Facebook and Slack,
--   and Twilio.
botChannelAssociation_botName :: Lens' BotChannelAssociation (Maybe Text)

-- | The name of the association between the bot and the channel.
botChannelAssociation_name :: Lens' BotChannelAssociation (Maybe Text)

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
botChannelAssociation_failureReason :: Lens' BotChannelAssociation (Maybe Text)

-- | A text description of the association you are creating.
botChannelAssociation_description :: Lens' BotChannelAssociation (Maybe Text)

-- | Specifies the type of association by indicating the type of channel
--   being established between the Amazon Lex bot and the external
--   messaging platform.
botChannelAssociation_type :: Lens' BotChannelAssociation (Maybe ChannelType)

-- | Provides information about a bot. .
--   
--   <i>See:</i> <a>newBotMetadata</a> smart constructor.
data BotMetadata
BotMetadata' :: Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> BotMetadata

-- | The date that the bot was created.
[$sel:createdDate:BotMetadata'] :: BotMetadata -> Maybe POSIX

-- | The status of the bot.
[$sel:status:BotMetadata'] :: BotMetadata -> Maybe LexStatus

-- | The date that the bot was updated. When you create a bot, the creation
--   date and last updated date are the same.
[$sel:lastUpdatedDate:BotMetadata'] :: BotMetadata -> Maybe POSIX

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
[$sel:version:BotMetadata'] :: BotMetadata -> Maybe Text

-- | The name of the bot.
[$sel:name:BotMetadata'] :: BotMetadata -> Maybe Text

-- | A description of the bot.
[$sel:description:BotMetadata'] :: BotMetadata -> Maybe Text

-- | Create a value of <a>BotMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:BotMetadata'</a>, <a>botMetadata_createdDate</a> -
--   The date that the bot was created.
--   
--   <a>$sel:status:BotMetadata'</a>, <a>botMetadata_status</a> - The
--   status of the bot.
--   
--   <a>$sel:lastUpdatedDate:BotMetadata'</a>,
--   <a>botMetadata_lastUpdatedDate</a> - The date that the bot was
--   updated. When you create a bot, the creation date and last updated
--   date are the same.
--   
--   <a>$sel:version:BotMetadata'</a>, <a>botMetadata_version</a> - The
--   version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
--   
--   <a>$sel:name:BotMetadata'</a>, <a>botMetadata_name</a> - The name of
--   the bot.
--   
--   <a>$sel:description:BotMetadata'</a>, <a>botMetadata_description</a> -
--   A description of the bot.
newBotMetadata :: BotMetadata

-- | The date that the bot was created.
botMetadata_createdDate :: Lens' BotMetadata (Maybe UTCTime)

-- | The status of the bot.
botMetadata_status :: Lens' BotMetadata (Maybe LexStatus)

-- | The date that the bot was updated. When you create a bot, the creation
--   date and last updated date are the same.
botMetadata_lastUpdatedDate :: Lens' BotMetadata (Maybe UTCTime)

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
botMetadata_version :: Lens' BotMetadata (Maybe Text)

-- | The name of the bot.
botMetadata_name :: Lens' BotMetadata (Maybe Text)

-- | A description of the bot.
botMetadata_description :: Lens' BotMetadata (Maybe Text)

-- | Provides metadata for a built-in intent.
--   
--   <i>See:</i> <a>newBuiltinIntentMetadata</a> smart constructor.
data BuiltinIntentMetadata
BuiltinIntentMetadata' :: Maybe Text -> Maybe [Locale] -> BuiltinIntentMetadata

-- | A unique identifier for the built-in intent. To find the signature for
--   an intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
[$sel:signature:BuiltinIntentMetadata'] :: BuiltinIntentMetadata -> Maybe Text

-- | A list of identifiers for the locales that the intent supports.
[$sel:supportedLocales:BuiltinIntentMetadata'] :: BuiltinIntentMetadata -> Maybe [Locale]

-- | Create a value of <a>BuiltinIntentMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signature:BuiltinIntentMetadata'</a>,
--   <a>builtinIntentMetadata_signature</a> - A unique identifier for the
--   built-in intent. To find the signature for an intent, see <a>Standard
--   Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
--   
--   <a>$sel:supportedLocales:BuiltinIntentMetadata'</a>,
--   <a>builtinIntentMetadata_supportedLocales</a> - A list of identifiers
--   for the locales that the intent supports.
newBuiltinIntentMetadata :: BuiltinIntentMetadata

-- | A unique identifier for the built-in intent. To find the signature for
--   an intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
builtinIntentMetadata_signature :: Lens' BuiltinIntentMetadata (Maybe Text)

-- | A list of identifiers for the locales that the intent supports.
builtinIntentMetadata_supportedLocales :: Lens' BuiltinIntentMetadata (Maybe [Locale])

-- | Provides information about a slot used in a built-in intent.
--   
--   <i>See:</i> <a>newBuiltinIntentSlot</a> smart constructor.
data BuiltinIntentSlot
BuiltinIntentSlot' :: Maybe Text -> BuiltinIntentSlot

-- | A list of the slots defined for the intent.
[$sel:name:BuiltinIntentSlot'] :: BuiltinIntentSlot -> Maybe Text

-- | Create a value of <a>BuiltinIntentSlot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BuiltinIntentSlot'</a>, <a>builtinIntentSlot_name</a> - A
--   list of the slots defined for the intent.
newBuiltinIntentSlot :: BuiltinIntentSlot

-- | A list of the slots defined for the intent.
builtinIntentSlot_name :: Lens' BuiltinIntentSlot (Maybe Text)

-- | Provides information about a built in slot type.
--   
--   <i>See:</i> <a>newBuiltinSlotTypeMetadata</a> smart constructor.
data BuiltinSlotTypeMetadata
BuiltinSlotTypeMetadata' :: Maybe Text -> Maybe [Locale] -> BuiltinSlotTypeMetadata

-- | A unique identifier for the built-in slot type. To find the signature
--   for a slot type, see <a>Slot Type Reference</a> in the <i>Alexa Skills
--   Kit</i>.
[$sel:signature:BuiltinSlotTypeMetadata'] :: BuiltinSlotTypeMetadata -> Maybe Text

-- | A list of target locales for the slot.
[$sel:supportedLocales:BuiltinSlotTypeMetadata'] :: BuiltinSlotTypeMetadata -> Maybe [Locale]

-- | Create a value of <a>BuiltinSlotTypeMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signature:BuiltinSlotTypeMetadata'</a>,
--   <a>builtinSlotTypeMetadata_signature</a> - A unique identifier for the
--   built-in slot type. To find the signature for a slot type, see <a>Slot
--   Type Reference</a> in the <i>Alexa Skills Kit</i>.
--   
--   <a>$sel:supportedLocales:BuiltinSlotTypeMetadata'</a>,
--   <a>builtinSlotTypeMetadata_supportedLocales</a> - A list of target
--   locales for the slot.
newBuiltinSlotTypeMetadata :: BuiltinSlotTypeMetadata

-- | A unique identifier for the built-in slot type. To find the signature
--   for a slot type, see <a>Slot Type Reference</a> in the <i>Alexa Skills
--   Kit</i>.
builtinSlotTypeMetadata_signature :: Lens' BuiltinSlotTypeMetadata (Maybe Text)

-- | A list of target locales for the slot.
builtinSlotTypeMetadata_supportedLocales :: Lens' BuiltinSlotTypeMetadata (Maybe [Locale])

-- | Specifies a Lambda function that verifies requests to a bot or
--   fulfills the user's request to a bot..
--   
--   <i>See:</i> <a>newCodeHook</a> smart constructor.
data CodeHook
CodeHook' :: Text -> Text -> CodeHook

-- | The Amazon Resource Name (ARN) of the Lambda function.
[$sel:uri:CodeHook'] :: CodeHook -> Text

-- | The version of the request-response that you want Amazon Lex to use to
--   invoke your Lambda function. For more information, see using-lambda.
[$sel:messageVersion:CodeHook'] :: CodeHook -> Text

-- | Create a value of <a>CodeHook</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:CodeHook'</a>, <a>codeHook_uri</a> - The Amazon Resource
--   Name (ARN) of the Lambda function.
--   
--   <a>$sel:messageVersion:CodeHook'</a>, <a>codeHook_messageVersion</a> -
--   The version of the request-response that you want Amazon Lex to use to
--   invoke your Lambda function. For more information, see using-lambda.
newCodeHook :: Text -> Text -> CodeHook

-- | The Amazon Resource Name (ARN) of the Lambda function.
codeHook_uri :: Lens' CodeHook Text

-- | The version of the request-response that you want Amazon Lex to use to
--   invoke your Lambda function. For more information, see using-lambda.
codeHook_messageVersion :: Lens' CodeHook Text

-- | Provides the settings needed for conversation logs.
--   
--   <i>See:</i> <a>newConversationLogsRequest</a> smart constructor.
data ConversationLogsRequest
ConversationLogsRequest' :: [LogSettingsRequest] -> Text -> ConversationLogsRequest

-- | The settings for your conversation logs. You can log the conversation
--   text, conversation audio, or both.
[$sel:logSettings:ConversationLogsRequest'] :: ConversationLogsRequest -> [LogSettingsRequest]

-- | The Amazon Resource Name (ARN) of an IAM role with permission to write
--   to your CloudWatch Logs for text logs and your S3 bucket for audio
--   logs. If audio encryption is enabled, this role also provides access
--   permission for the AWS KMS key used for encrypting audio logs. For
--   more information, see <a>Creating an IAM Role and Policy for
--   Conversation Logs</a>.
[$sel:iamRoleArn:ConversationLogsRequest'] :: ConversationLogsRequest -> Text

-- | Create a value of <a>ConversationLogsRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logSettings:ConversationLogsRequest'</a>,
--   <a>conversationLogsRequest_logSettings</a> - The settings for your
--   conversation logs. You can log the conversation text, conversation
--   audio, or both.
--   
--   <a>$sel:iamRoleArn:ConversationLogsRequest'</a>,
--   <a>conversationLogsRequest_iamRoleArn</a> - The Amazon Resource Name
--   (ARN) of an IAM role with permission to write to your CloudWatch Logs
--   for text logs and your S3 bucket for audio logs. If audio encryption
--   is enabled, this role also provides access permission for the AWS KMS
--   key used for encrypting audio logs. For more information, see
--   <a>Creating an IAM Role and Policy for Conversation Logs</a>.
newConversationLogsRequest :: Text -> ConversationLogsRequest

-- | The settings for your conversation logs. You can log the conversation
--   text, conversation audio, or both.
conversationLogsRequest_logSettings :: Lens' ConversationLogsRequest [LogSettingsRequest]

-- | The Amazon Resource Name (ARN) of an IAM role with permission to write
--   to your CloudWatch Logs for text logs and your S3 bucket for audio
--   logs. If audio encryption is enabled, this role also provides access
--   permission for the AWS KMS key used for encrypting audio logs. For
--   more information, see <a>Creating an IAM Role and Policy for
--   Conversation Logs</a>.
conversationLogsRequest_iamRoleArn :: Lens' ConversationLogsRequest Text

-- | Contains information about conversation log settings.
--   
--   <i>See:</i> <a>newConversationLogsResponse</a> smart constructor.
data ConversationLogsResponse
ConversationLogsResponse' :: Maybe Text -> Maybe [LogSettingsResponse] -> ConversationLogsResponse

-- | The Amazon Resource Name (ARN) of the IAM role used to write your logs
--   to CloudWatch Logs or an S3 bucket.
[$sel:iamRoleArn:ConversationLogsResponse'] :: ConversationLogsResponse -> Maybe Text

-- | The settings for your conversation logs. You can log text, audio, or
--   both.
[$sel:logSettings:ConversationLogsResponse'] :: ConversationLogsResponse -> Maybe [LogSettingsResponse]

-- | Create a value of <a>ConversationLogsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iamRoleArn:ConversationLogsResponse'</a>,
--   <a>conversationLogsResponse_iamRoleArn</a> - The Amazon Resource Name
--   (ARN) of the IAM role used to write your logs to CloudWatch Logs or an
--   S3 bucket.
--   
--   <a>$sel:logSettings:ConversationLogsResponse'</a>,
--   <a>conversationLogsResponse_logSettings</a> - The settings for your
--   conversation logs. You can log text, audio, or both.
newConversationLogsResponse :: ConversationLogsResponse

-- | The Amazon Resource Name (ARN) of the IAM role used to write your logs
--   to CloudWatch Logs or an S3 bucket.
conversationLogsResponse_iamRoleArn :: Lens' ConversationLogsResponse (Maybe Text)

-- | The settings for your conversation logs. You can log text, audio, or
--   both.
conversationLogsResponse_logSettings :: Lens' ConversationLogsResponse (Maybe [LogSettingsResponse])

-- | Each slot type can have a set of values. Each enumeration value
--   represents a value the slot type can take.
--   
--   For example, a pizza ordering bot could have a slot type that
--   specifies the type of crust that the pizza should have. The slot type
--   could include the values
--   
--   <ul>
--   <li>thick</li>
--   <li>thin</li>
--   <li>stuffed</li>
--   </ul>
--   
--   <i>See:</i> <a>newEnumerationValue</a> smart constructor.
data EnumerationValue
EnumerationValue' :: Maybe [Text] -> Text -> EnumerationValue

-- | Additional values related to the slot type value.
[$sel:synonyms:EnumerationValue'] :: EnumerationValue -> Maybe [Text]

-- | The value of the slot type.
[$sel:value:EnumerationValue'] :: EnumerationValue -> Text

-- | Create a value of <a>EnumerationValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:synonyms:EnumerationValue'</a>,
--   <a>enumerationValue_synonyms</a> - Additional values related to the
--   slot type value.
--   
--   <a>$sel:value:EnumerationValue'</a>, <a>enumerationValue_value</a> -
--   The value of the slot type.
newEnumerationValue :: Text -> EnumerationValue

-- | Additional values related to the slot type value.
enumerationValue_synonyms :: Lens' EnumerationValue (Maybe [Text])

-- | The value of the slot type.
enumerationValue_value :: Lens' EnumerationValue Text

-- | A prompt for additional activity after an intent is fulfilled. For
--   example, after the <tt>OrderPizza</tt> intent is fulfilled, you might
--   prompt the user to find out whether the user wants to order drinks.
--   
--   <i>See:</i> <a>newFollowUpPrompt</a> smart constructor.
data FollowUpPrompt
FollowUpPrompt' :: Prompt -> Statement -> FollowUpPrompt

-- | Prompts for information from the user.
[$sel:prompt:FollowUpPrompt'] :: FollowUpPrompt -> Prompt

-- | If the user answers "no" to the question defined in the
--   <tt>prompt</tt> field, Amazon Lex responds with this statement to
--   acknowledge that the intent was canceled.
[$sel:rejectionStatement:FollowUpPrompt'] :: FollowUpPrompt -> Statement

-- | Create a value of <a>FollowUpPrompt</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prompt:FollowUpPrompt'</a>, <a>followUpPrompt_prompt</a> -
--   Prompts for information from the user.
--   
--   <a>$sel:rejectionStatement:FollowUpPrompt'</a>,
--   <a>followUpPrompt_rejectionStatement</a> - If the user answers "no" to
--   the question defined in the <tt>prompt</tt> field, Amazon Lex responds
--   with this statement to acknowledge that the intent was canceled.
newFollowUpPrompt :: Prompt -> Statement -> FollowUpPrompt

-- | Prompts for information from the user.
followUpPrompt_prompt :: Lens' FollowUpPrompt Prompt

-- | If the user answers "no" to the question defined in the
--   <tt>prompt</tt> field, Amazon Lex responds with this statement to
--   acknowledge that the intent was canceled.
followUpPrompt_rejectionStatement :: Lens' FollowUpPrompt Statement

-- | Describes how the intent is fulfilled after the user provides all of
--   the information required for the intent. You can provide a Lambda
--   function to process the intent, or you can return the intent
--   information to the client application. We recommend that you use a
--   Lambda function so that the relevant logic lives in the Cloud and
--   limit the client-side code primarily to presentation. If you need to
--   update the logic, you only update the Lambda function; you don't need
--   to upgrade your client application.
--   
--   Consider the following examples:
--   
--   <ul>
--   <li>In a pizza ordering application, after the user provides all of
--   the information for placing an order, you use a Lambda function to
--   place an order with a pizzeria.</li>
--   <li>In a gaming application, when a user says "pick up a rock," this
--   information must go back to the client application so that it can
--   perform the operation and update the graphics. In this case, you want
--   Amazon Lex to return the intent data to the client.</li>
--   </ul>
--   
--   <i>See:</i> <a>newFulfillmentActivity</a> smart constructor.
data FulfillmentActivity
FulfillmentActivity' :: Maybe CodeHook -> FulfillmentActivityType -> FulfillmentActivity

-- | A description of the Lambda function that is run to fulfill the
--   intent.
[$sel:codeHook:FulfillmentActivity'] :: FulfillmentActivity -> Maybe CodeHook

-- | How the intent should be fulfilled, either by running a Lambda
--   function or by returning the slot data to the client application.
[$sel:type':FulfillmentActivity'] :: FulfillmentActivity -> FulfillmentActivityType

-- | Create a value of <a>FulfillmentActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeHook:FulfillmentActivity'</a>,
--   <a>fulfillmentActivity_codeHook</a> - A description of the Lambda
--   function that is run to fulfill the intent.
--   
--   <a>$sel:type':FulfillmentActivity'</a>,
--   <a>fulfillmentActivity_type</a> - How the intent should be fulfilled,
--   either by running a Lambda function or by returning the slot data to
--   the client application.
newFulfillmentActivity :: FulfillmentActivityType -> FulfillmentActivity

-- | A description of the Lambda function that is run to fulfill the
--   intent.
fulfillmentActivity_codeHook :: Lens' FulfillmentActivity (Maybe CodeHook)

-- | How the intent should be fulfilled, either by running a Lambda
--   function or by returning the slot data to the client application.
fulfillmentActivity_type :: Lens' FulfillmentActivity FulfillmentActivityType

-- | The name of a context that must be active for an intent to be selected
--   by Amazon Lex.
--   
--   <i>See:</i> <a>newInputContext</a> smart constructor.
data InputContext
InputContext' :: Text -> InputContext

-- | The name of the context.
[$sel:name:InputContext'] :: InputContext -> Text

-- | Create a value of <a>InputContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InputContext'</a>, <a>inputContext_name</a> - The name of
--   the context.
newInputContext :: Text -> InputContext

-- | The name of the context.
inputContext_name :: Lens' InputContext Text

-- | Identifies the specific version of an intent.
--   
--   <i>See:</i> <a>newIntent</a> smart constructor.
data Intent
Intent' :: Text -> Text -> Intent

-- | The name of the intent.
[$sel:intentName:Intent'] :: Intent -> Text

-- | The version of the intent.
[$sel:intentVersion:Intent'] :: Intent -> Text

-- | Create a value of <a>Intent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:intentName:Intent'</a>, <a>intent_intentName</a> - The name of
--   the intent.
--   
--   <a>$sel:intentVersion:Intent'</a>, <a>intent_intentVersion</a> - The
--   version of the intent.
newIntent :: Text -> Text -> Intent

-- | The name of the intent.
intent_intentName :: Lens' Intent Text

-- | The version of the intent.
intent_intentVersion :: Lens' Intent Text

-- | Provides information about an intent.
--   
--   <i>See:</i> <a>newIntentMetadata</a> smart constructor.
data IntentMetadata
IntentMetadata' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> IntentMetadata

-- | The date that the intent was created.
[$sel:createdDate:IntentMetadata'] :: IntentMetadata -> Maybe POSIX

-- | The date that the intent was updated. When you create an intent, the
--   creation date and last updated date are the same.
[$sel:lastUpdatedDate:IntentMetadata'] :: IntentMetadata -> Maybe POSIX

-- | The version of the intent.
[$sel:version:IntentMetadata'] :: IntentMetadata -> Maybe Text

-- | The name of the intent.
[$sel:name:IntentMetadata'] :: IntentMetadata -> Maybe Text

-- | A description of the intent.
[$sel:description:IntentMetadata'] :: IntentMetadata -> Maybe Text

-- | Create a value of <a>IntentMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:IntentMetadata'</a>,
--   <a>intentMetadata_createdDate</a> - The date that the intent was
--   created.
--   
--   <a>$sel:lastUpdatedDate:IntentMetadata'</a>,
--   <a>intentMetadata_lastUpdatedDate</a> - The date that the intent was
--   updated. When you create an intent, the creation date and last updated
--   date are the same.
--   
--   <a>$sel:version:IntentMetadata'</a>, <a>intentMetadata_version</a> -
--   The version of the intent.
--   
--   <a>$sel:name:IntentMetadata'</a>, <a>intentMetadata_name</a> - The
--   name of the intent.
--   
--   <a>$sel:description:IntentMetadata'</a>,
--   <a>intentMetadata_description</a> - A description of the intent.
newIntentMetadata :: IntentMetadata

-- | The date that the intent was created.
intentMetadata_createdDate :: Lens' IntentMetadata (Maybe UTCTime)

-- | The date that the intent was updated. When you create an intent, the
--   creation date and last updated date are the same.
intentMetadata_lastUpdatedDate :: Lens' IntentMetadata (Maybe UTCTime)

-- | The version of the intent.
intentMetadata_version :: Lens' IntentMetadata (Maybe Text)

-- | The name of the intent.
intentMetadata_name :: Lens' IntentMetadata (Maybe Text)

-- | A description of the intent.
intentMetadata_description :: Lens' IntentMetadata (Maybe Text)

-- | Provides configuration information for the AMAZON.KendraSearchIntent
--   intent. When you use this intent, Amazon Lex searches the specified
--   Amazon Kendra index and returns documents from the index that match
--   the user's utterance. For more information, see
--   <a>AMAZON.KendraSearchIntent</a>.
--   
--   <i>See:</i> <a>newKendraConfiguration</a> smart constructor.
data KendraConfiguration
KendraConfiguration' :: Maybe Text -> Text -> Text -> KendraConfiguration

-- | A query filter that Amazon Lex sends to Amazon Kendra to filter the
--   response from the query. The filter is in the format defined by Amazon
--   Kendra. For more information, see <a>Filtering queries</a>.
--   
--   You can override this filter string with a new filter string at
--   runtime.
[$sel:queryFilterString:KendraConfiguration'] :: KendraConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Amazon Kendra index that you
--   want the AMAZON.KendraSearchIntent intent to search. The index must be
--   in the same account and Region as the Amazon Lex bot. If the Amazon
--   Kendra index does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
[$sel:kendraIndex:KendraConfiguration'] :: KendraConfiguration -> Text

-- | The Amazon Resource Name (ARN) of an IAM role that has permission to
--   search the Amazon Kendra index. The role must be in the same account
--   and Region as the Amazon Lex bot. If the role does not exist, you get
--   an exception when you call the <tt>PutIntent</tt> operation.
[$sel:role':KendraConfiguration'] :: KendraConfiguration -> Text

-- | Create a value of <a>KendraConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryFilterString:KendraConfiguration'</a>,
--   <a>kendraConfiguration_queryFilterString</a> - A query filter that
--   Amazon Lex sends to Amazon Kendra to filter the response from the
--   query. The filter is in the format defined by Amazon Kendra. For more
--   information, see <a>Filtering queries</a>.
--   
--   You can override this filter string with a new filter string at
--   runtime.
--   
--   <a>$sel:kendraIndex:KendraConfiguration'</a>,
--   <a>kendraConfiguration_kendraIndex</a> - The Amazon Resource Name
--   (ARN) of the Amazon Kendra index that you want the
--   AMAZON.KendraSearchIntent intent to search. The index must be in the
--   same account and Region as the Amazon Lex bot. If the Amazon Kendra
--   index does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
--   
--   <a>$sel:role':KendraConfiguration'</a>,
--   <a>kendraConfiguration_role</a> - The Amazon Resource Name (ARN) of an
--   IAM role that has permission to search the Amazon Kendra index. The
--   role must be in the same account and Region as the Amazon Lex bot. If
--   the role does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
newKendraConfiguration :: Text -> Text -> KendraConfiguration

-- | A query filter that Amazon Lex sends to Amazon Kendra to filter the
--   response from the query. The filter is in the format defined by Amazon
--   Kendra. For more information, see <a>Filtering queries</a>.
--   
--   You can override this filter string with a new filter string at
--   runtime.
kendraConfiguration_queryFilterString :: Lens' KendraConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Kendra index that you
--   want the AMAZON.KendraSearchIntent intent to search. The index must be
--   in the same account and Region as the Amazon Lex bot. If the Amazon
--   Kendra index does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
kendraConfiguration_kendraIndex :: Lens' KendraConfiguration Text

-- | The Amazon Resource Name (ARN) of an IAM role that has permission to
--   search the Amazon Kendra index. The role must be in the same account
--   and Region as the Amazon Lex bot. If the role does not exist, you get
--   an exception when you call the <tt>PutIntent</tt> operation.
kendraConfiguration_role :: Lens' KendraConfiguration Text

-- | Settings used to configure delivery mode and destination for
--   conversation logs.
--   
--   <i>See:</i> <a>newLogSettingsRequest</a> smart constructor.
data LogSettingsRequest
LogSettingsRequest' :: Maybe Text -> LogType -> Destination -> Text -> LogSettingsRequest

-- | The Amazon Resource Name (ARN) of the AWS KMS customer managed key for
--   encrypting audio logs delivered to an S3 bucket. The key does not
--   apply to CloudWatch Logs and is optional for S3 buckets.
[$sel:kmsKeyArn:LogSettingsRequest'] :: LogSettingsRequest -> Maybe Text

-- | The type of logging to enable. Text logs are delivered to a CloudWatch
--   Logs log group. Audio logs are delivered to an S3 bucket.
[$sel:logType:LogSettingsRequest'] :: LogSettingsRequest -> LogType

-- | Where the logs will be delivered. Text logs are delivered to a
--   CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.
[$sel:destination:LogSettingsRequest'] :: LogSettingsRequest -> Destination

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs should be delivered.
[$sel:resourceArn:LogSettingsRequest'] :: LogSettingsRequest -> Text

-- | Create a value of <a>LogSettingsRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the AWS KMS customer managed key for encrypting audio logs
--   delivered to an S3 bucket. The key does not apply to CloudWatch Logs
--   and is optional for S3 buckets.
--   
--   <a>$sel:logType:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_logType</a> - The type of logging to enable.
--   Text logs are delivered to a CloudWatch Logs log group. Audio logs are
--   delivered to an S3 bucket.
--   
--   <a>$sel:destination:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_destination</a> - Where the logs will be
--   delivered. Text logs are delivered to a CloudWatch Logs log group.
--   Audio logs are delivered to an S3 bucket.
--   
--   <a>$sel:resourceArn:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_resourceArn</a> - The Amazon Resource Name (ARN)
--   of the CloudWatch Logs log group or S3 bucket where the logs should be
--   delivered.
newLogSettingsRequest :: LogType -> Destination -> Text -> LogSettingsRequest

-- | The Amazon Resource Name (ARN) of the AWS KMS customer managed key for
--   encrypting audio logs delivered to an S3 bucket. The key does not
--   apply to CloudWatch Logs and is optional for S3 buckets.
logSettingsRequest_kmsKeyArn :: Lens' LogSettingsRequest (Maybe Text)

-- | The type of logging to enable. Text logs are delivered to a CloudWatch
--   Logs log group. Audio logs are delivered to an S3 bucket.
logSettingsRequest_logType :: Lens' LogSettingsRequest LogType

-- | Where the logs will be delivered. Text logs are delivered to a
--   CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.
logSettingsRequest_destination :: Lens' LogSettingsRequest Destination

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs should be delivered.
logSettingsRequest_resourceArn :: Lens' LogSettingsRequest Text

-- | The settings for conversation logs.
--   
--   <i>See:</i> <a>newLogSettingsResponse</a> smart constructor.
data LogSettingsResponse
LogSettingsResponse' :: Maybe Text -> Maybe LogType -> Maybe Text -> Maybe Destination -> Maybe Text -> LogSettingsResponse

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs are delivered.
[$sel:resourceArn:LogSettingsResponse'] :: LogSettingsResponse -> Maybe Text

-- | The type of logging that is enabled.
[$sel:logType:LogSettingsResponse'] :: LogSettingsResponse -> Maybe LogType

-- | The Amazon Resource Name (ARN) of the key used to encrypt audio logs
--   in an S3 bucket.
[$sel:kmsKeyArn:LogSettingsResponse'] :: LogSettingsResponse -> Maybe Text

-- | The destination where logs are delivered.
[$sel:destination:LogSettingsResponse'] :: LogSettingsResponse -> Maybe Destination

-- | The resource prefix is the first part of the S3 object key within the
--   S3 bucket that you specified to contain audio logs. For CloudWatch
--   Logs it is the prefix of the log stream name within the log group that
--   you specified.
[$sel:resourcePrefix:LogSettingsResponse'] :: LogSettingsResponse -> Maybe Text

-- | Create a value of <a>LogSettingsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are
--   delivered.
--   
--   <a>$sel:logType:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_logType</a> - The type of logging that is
--   enabled.
--   
--   <a>$sel:kmsKeyArn:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the key used to encrypt audio logs in an S3 bucket.
--   
--   <a>$sel:destination:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_destination</a> - The destination where logs
--   are delivered.
--   
--   <a>$sel:resourcePrefix:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_resourcePrefix</a> - The resource prefix is the
--   first part of the S3 object key within the S3 bucket that you
--   specified to contain audio logs. For CloudWatch Logs it is the prefix
--   of the log stream name within the log group that you specified.
newLogSettingsResponse :: LogSettingsResponse

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs are delivered.
logSettingsResponse_resourceArn :: Lens' LogSettingsResponse (Maybe Text)

-- | The type of logging that is enabled.
logSettingsResponse_logType :: Lens' LogSettingsResponse (Maybe LogType)

-- | The Amazon Resource Name (ARN) of the key used to encrypt audio logs
--   in an S3 bucket.
logSettingsResponse_kmsKeyArn :: Lens' LogSettingsResponse (Maybe Text)

-- | The destination where logs are delivered.
logSettingsResponse_destination :: Lens' LogSettingsResponse (Maybe Destination)

-- | The resource prefix is the first part of the S3 object key within the
--   S3 bucket that you specified to contain audio logs. For CloudWatch
--   Logs it is the prefix of the log stream name within the log group that
--   you specified.
logSettingsResponse_resourcePrefix :: Lens' LogSettingsResponse (Maybe Text)

-- | The message object that provides the message text and its type.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe Natural -> ContentType -> Text -> Message

-- | Identifies the message group that the message belongs to. When a group
--   is assigned to a message, Amazon Lex returns one message from each
--   group in the response.
[$sel:groupNumber:Message'] :: Message -> Maybe Natural

-- | The content type of the message string.
[$sel:contentType:Message'] :: Message -> ContentType

-- | The text of the message.
[$sel:content:Message'] :: Message -> Text

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupNumber:Message'</a>, <a>message_groupNumber</a> -
--   Identifies the message group that the message belongs to. When a group
--   is assigned to a message, Amazon Lex returns one message from each
--   group in the response.
--   
--   <a>$sel:contentType:Message'</a>, <a>message_contentType</a> - The
--   content type of the message string.
--   
--   <a>$sel:content:Message'</a>, <a>message_content</a> - The text of the
--   message.
newMessage :: ContentType -> Text -> Message

-- | Identifies the message group that the message belongs to. When a group
--   is assigned to a message, Amazon Lex returns one message from each
--   group in the response.
message_groupNumber :: Lens' Message (Maybe Natural)

-- | The content type of the message string.
message_contentType :: Lens' Message ContentType

-- | The text of the message.
message_content :: Lens' Message Text

-- | Provides information about alerts and warnings that Amazon Lex sends
--   during a migration. The alerts include information about how to
--   resolve the issue.
--   
--   <i>See:</i> <a>newMigrationAlert</a> smart constructor.
data MigrationAlert
MigrationAlert' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe MigrationAlertType -> MigrationAlert

-- | A message that describes why the alert was issued.
[$sel:message:MigrationAlert'] :: MigrationAlert -> Maybe Text

-- | Additional details about the alert.
[$sel:details:MigrationAlert'] :: MigrationAlert -> Maybe [Text]

-- | A link to the Amazon Lex documentation that describes how to resolve
--   the alert.
[$sel:referenceURLs:MigrationAlert'] :: MigrationAlert -> Maybe [Text]

-- | The type of alert. There are two kinds of alerts:
--   
--   <ul>
--   <li><tt>ERROR</tt> - There was an issue with the migration that can't
--   be resolved. The migration stops.</li>
--   <li><tt>WARN</tt> - There was an issue with the migration that
--   requires manual changes to the new Amazon Lex V2 bot. The migration
--   continues.</li>
--   </ul>
[$sel:type':MigrationAlert'] :: MigrationAlert -> Maybe MigrationAlertType

-- | Create a value of <a>MigrationAlert</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:MigrationAlert'</a>, <a>migrationAlert_message</a> - A
--   message that describes why the alert was issued.
--   
--   <a>$sel:details:MigrationAlert'</a>, <a>migrationAlert_details</a> -
--   Additional details about the alert.
--   
--   <a>$sel:referenceURLs:MigrationAlert'</a>,
--   <a>migrationAlert_referenceURLs</a> - A link to the Amazon Lex
--   documentation that describes how to resolve the alert.
--   
--   <a>$sel:type':MigrationAlert'</a>, <a>migrationAlert_type</a> - The
--   type of alert. There are two kinds of alerts:
--   
--   <ul>
--   <li><tt>ERROR</tt> - There was an issue with the migration that can't
--   be resolved. The migration stops.</li>
--   <li><tt>WARN</tt> - There was an issue with the migration that
--   requires manual changes to the new Amazon Lex V2 bot. The migration
--   continues.</li>
--   </ul>
newMigrationAlert :: MigrationAlert

-- | A message that describes why the alert was issued.
migrationAlert_message :: Lens' MigrationAlert (Maybe Text)

-- | Additional details about the alert.
migrationAlert_details :: Lens' MigrationAlert (Maybe [Text])

-- | A link to the Amazon Lex documentation that describes how to resolve
--   the alert.
migrationAlert_referenceURLs :: Lens' MigrationAlert (Maybe [Text])

-- | The type of alert. There are two kinds of alerts:
--   
--   <ul>
--   <li><tt>ERROR</tt> - There was an issue with the migration that can't
--   be resolved. The migration stops.</li>
--   <li><tt>WARN</tt> - There was an issue with the migration that
--   requires manual changes to the new Amazon Lex V2 bot. The migration
--   continues.</li>
--   </ul>
migrationAlert_type :: Lens' MigrationAlert (Maybe MigrationAlertType)

-- | Provides information about migrating a bot from Amazon Lex V1 to
--   Amazon Lex V2.
--   
--   <i>See:</i> <a>newMigrationSummary</a> smart constructor.
data MigrationSummary
MigrationSummary' :: Maybe Text -> Maybe Text -> Maybe Locale -> Maybe POSIX -> Maybe MigrationStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MigrationStatus -> MigrationSummary

-- | The version of the Amazon Lex V1 bot that is the source of the
--   migration.
[$sel:v1BotVersion:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The unique identifier that Amazon Lex assigned to the migration.
[$sel:migrationId:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The locale of the Amazon Lex V1 bot that is the source of the
--   migration.
[$sel:v1BotLocale:MigrationSummary'] :: MigrationSummary -> Maybe Locale

-- | The date and time that the migration started.
[$sel:migrationTimestamp:MigrationSummary'] :: MigrationSummary -> Maybe POSIX

-- | The strategy used to conduct the migration.
[$sel:migrationStrategy:MigrationSummary'] :: MigrationSummary -> Maybe MigrationStrategy

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
[$sel:v2BotRole:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The name of the Amazon Lex V1 bot that is the source of the migration.
[$sel:v1BotName:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The unique identifier of the Amazon Lex V2 that is the destination of
--   the migration.
[$sel:v2BotId:MigrationSummary'] :: MigrationSummary -> Maybe Text

-- | The status of the operation. When the status is <tt>COMPLETE</tt> the
--   bot is available in Amazon Lex V2. There may be alerts and warnings
--   that need to be resolved to complete the migration.
[$sel:migrationStatus:MigrationSummary'] :: MigrationSummary -> Maybe MigrationStatus

-- | Create a value of <a>MigrationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotVersion:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotVersion</a> - The version of the Amazon Lex
--   V1 bot that is the source of the migration.
--   
--   <a>$sel:migrationId:MigrationSummary'</a>,
--   <a>migrationSummary_migrationId</a> - The unique identifier that
--   Amazon Lex assigned to the migration.
--   
--   <a>$sel:v1BotLocale:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotLocale</a> - The locale of the Amazon Lex V1
--   bot that is the source of the migration.
--   
--   <a>$sel:migrationTimestamp:MigrationSummary'</a>,
--   <a>migrationSummary_migrationTimestamp</a> - The date and time that
--   the migration started.
--   
--   <a>$sel:migrationStrategy:MigrationSummary'</a>,
--   <a>migrationSummary_migrationStrategy</a> - The strategy used to
--   conduct the migration.
--   
--   <a>$sel:v2BotRole:MigrationSummary'</a>,
--   <a>migrationSummary_v2BotRole</a> - The IAM role that Amazon Lex uses
--   to run the Amazon Lex V2 bot.
--   
--   <a>$sel:v1BotName:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotName</a> - The name of the Amazon Lex V1 bot
--   that is the source of the migration.
--   
--   <a>$sel:v2BotId:MigrationSummary'</a>, <a>migrationSummary_v2BotId</a>
--   - The unique identifier of the Amazon Lex V2 that is the destination
--   of the migration.
--   
--   <a>$sel:migrationStatus:MigrationSummary'</a>,
--   <a>migrationSummary_migrationStatus</a> - The status of the operation.
--   When the status is <tt>COMPLETE</tt> the bot is available in Amazon
--   Lex V2. There may be alerts and warnings that need to be resolved to
--   complete the migration.
newMigrationSummary :: MigrationSummary

-- | The version of the Amazon Lex V1 bot that is the source of the
--   migration.
migrationSummary_v1BotVersion :: Lens' MigrationSummary (Maybe Text)

-- | The unique identifier that Amazon Lex assigned to the migration.
migrationSummary_migrationId :: Lens' MigrationSummary (Maybe Text)

-- | The locale of the Amazon Lex V1 bot that is the source of the
--   migration.
migrationSummary_v1BotLocale :: Lens' MigrationSummary (Maybe Locale)

-- | The date and time that the migration started.
migrationSummary_migrationTimestamp :: Lens' MigrationSummary (Maybe UTCTime)

-- | The strategy used to conduct the migration.
migrationSummary_migrationStrategy :: Lens' MigrationSummary (Maybe MigrationStrategy)

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
migrationSummary_v2BotRole :: Lens' MigrationSummary (Maybe Text)

-- | The name of the Amazon Lex V1 bot that is the source of the migration.
migrationSummary_v1BotName :: Lens' MigrationSummary (Maybe Text)

-- | The unique identifier of the Amazon Lex V2 that is the destination of
--   the migration.
migrationSummary_v2BotId :: Lens' MigrationSummary (Maybe Text)

-- | The status of the operation. When the status is <tt>COMPLETE</tt> the
--   bot is available in Amazon Lex V2. There may be alerts and warnings
--   that need to be resolved to complete the migration.
migrationSummary_migrationStatus :: Lens' MigrationSummary (Maybe MigrationStatus)

-- | The specification of an output context that is set when an intent is
--   fulfilled.
--   
--   <i>See:</i> <a>newOutputContext</a> smart constructor.
data OutputContext
OutputContext' :: Text -> Natural -> Natural -> OutputContext

-- | The name of the context.
[$sel:name:OutputContext'] :: OutputContext -> Text

-- | The number of seconds that the context should be active after it is
--   first sent in a <tt>PostContent</tt> or <tt>PostText</tt> response.
--   You can set the value between 5 and 86,400 seconds (24 hours).
[$sel:timeToLiveInSeconds:OutputContext'] :: OutputContext -> Natural

-- | The number of conversation turns that the context should be active. A
--   conversation turn is one <tt>PostContent</tt> or <tt>PostText</tt>
--   request and the corresponding response from Amazon Lex.
[$sel:turnsToLive:OutputContext'] :: OutputContext -> Natural

-- | Create a value of <a>OutputContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:OutputContext'</a>, <a>outputContext_name</a> - The name
--   of the context.
--   
--   <a>$sel:timeToLiveInSeconds:OutputContext'</a>,
--   <a>outputContext_timeToLiveInSeconds</a> - The number of seconds that
--   the context should be active after it is first sent in a
--   <tt>PostContent</tt> or <tt>PostText</tt> response. You can set the
--   value between 5 and 86,400 seconds (24 hours).
--   
--   <a>$sel:turnsToLive:OutputContext'</a>,
--   <a>outputContext_turnsToLive</a> - The number of conversation turns
--   that the context should be active. A conversation turn is one
--   <tt>PostContent</tt> or <tt>PostText</tt> request and the
--   corresponding response from Amazon Lex.
newOutputContext :: Text -> Natural -> Natural -> OutputContext

-- | The name of the context.
outputContext_name :: Lens' OutputContext Text

-- | The number of seconds that the context should be active after it is
--   first sent in a <tt>PostContent</tt> or <tt>PostText</tt> response.
--   You can set the value between 5 and 86,400 seconds (24 hours).
outputContext_timeToLiveInSeconds :: Lens' OutputContext Natural

-- | The number of conversation turns that the context should be active. A
--   conversation turn is one <tt>PostContent</tt> or <tt>PostText</tt>
--   request and the corresponding response from Amazon Lex.
outputContext_turnsToLive :: Lens' OutputContext Natural

-- | Obtains information from the user. To define a prompt, provide one or
--   more messages and specify the number of attempts to get information
--   from the user. If you provide more than one message, Amazon Lex
--   chooses one of the messages to use to prompt the user. For more
--   information, see how-it-works.
--   
--   <i>See:</i> <a>newPrompt</a> smart constructor.
data Prompt
Prompt' :: Maybe Text -> NonEmpty Message -> Natural -> Prompt

-- | A response card. Amazon Lex uses this prompt at runtime, in the
--   <tt>PostText</tt> API response. It substitutes session attributes and
--   slot values for placeholders in the response card. For more
--   information, see ex-resp-card.
[$sel:responseCard:Prompt'] :: Prompt -> Maybe Text

-- | An array of objects, each of which provides a message string and its
--   type. You can specify the message string in plain text or in Speech
--   Synthesis Markup Language (SSML).
[$sel:messages:Prompt'] :: Prompt -> NonEmpty Message

-- | The number of times to prompt the user for information.
[$sel:maxAttempts:Prompt'] :: Prompt -> Natural

-- | Create a value of <a>Prompt</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Prompt'</a>, <a>prompt_responseCard</a> - A
--   response card. Amazon Lex uses this prompt at runtime, in the
--   <tt>PostText</tt> API response. It substitutes session attributes and
--   slot values for placeholders in the response card. For more
--   information, see ex-resp-card.
--   
--   <a>$sel:messages:Prompt'</a>, <a>prompt_messages</a> - An array of
--   objects, each of which provides a message string and its type. You can
--   specify the message string in plain text or in Speech Synthesis Markup
--   Language (SSML).
--   
--   <a>$sel:maxAttempts:Prompt'</a>, <a>prompt_maxAttempts</a> - The
--   number of times to prompt the user for information.
newPrompt :: NonEmpty Message -> Natural -> Prompt

-- | A response card. Amazon Lex uses this prompt at runtime, in the
--   <tt>PostText</tt> API response. It substitutes session attributes and
--   slot values for placeholders in the response card. For more
--   information, see ex-resp-card.
prompt_responseCard :: Lens' Prompt (Maybe Text)

-- | An array of objects, each of which provides a message string and its
--   type. You can specify the message string in plain text or in Speech
--   Synthesis Markup Language (SSML).
prompt_messages :: Lens' Prompt (NonEmpty Message)

-- | The number of times to prompt the user for information.
prompt_maxAttempts :: Lens' Prompt Natural

-- | Identifies the version of a specific slot.
--   
--   <i>See:</i> <a>newSlot</a> smart constructor.
data Slot
Slot' :: Maybe Text -> Maybe Text -> Maybe Prompt -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe Text -> Maybe SlotDefaultValueSpec -> Maybe ObfuscationSetting -> Text -> SlotConstraint -> Slot

-- | A set of possible responses for the slot type used by text-based
--   clients. A user chooses an option from the response card, instead of
--   using text to reply.
[$sel:responseCard:Slot'] :: Slot -> Maybe Text

-- | The type of the slot, either a custom slot type that you defined or
--   one of the built-in slot types.
[$sel:slotType:Slot'] :: Slot -> Maybe Text

-- | The prompt that Amazon Lex uses to elicit the slot value from the
--   user.
[$sel:valueElicitationPrompt:Slot'] :: Slot -> Maybe Prompt

-- | The version of the slot type.
[$sel:slotTypeVersion:Slot'] :: Slot -> Maybe Text

-- | Directs Amazon Lex the order in which to elicit this slot value from
--   the user. For example, if the intent has two slots with priorities 1
--   and 2, AWS Amazon Lex first elicits a value for the slot with priority
--   1.
--   
--   If multiple slots share the same priority, the order in which Amazon
--   Lex elicits values is arbitrary.
[$sel:priority:Slot'] :: Slot -> Maybe Natural

-- | If you know a specific pattern with which users might respond to an
--   Amazon Lex request for a slot value, you can provide those utterances
--   to improve accuracy. This is optional. In most cases, Amazon Lex is
--   capable of understanding user utterances.
[$sel:sampleUtterances:Slot'] :: Slot -> Maybe [Text]

-- | A description of the slot.
[$sel:description:Slot'] :: Slot -> Maybe Text

-- | A list of default values for the slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot. You can specify
--   default values from context variables, session attributes, and defined
--   values.
[$sel:defaultValueSpec:Slot'] :: Slot -> Maybe SlotDefaultValueSpec

-- | Determines whether a slot is obfuscated in conversation logs and
--   stored utterances. When you obfuscate a slot, the value is replaced by
--   the slot name in curly braces ({}). For example, if the slot name is
--   "full_name", obfuscated values are replaced with "{full_name}". For
--   more information, see <a>Slot Obfuscation</a> .
[$sel:obfuscationSetting:Slot'] :: Slot -> Maybe ObfuscationSetting

-- | The name of the slot.
[$sel:name:Slot'] :: Slot -> Text

-- | Specifies whether the slot is required or optional.
[$sel:slotConstraint:Slot'] :: Slot -> SlotConstraint

-- | Create a value of <a>Slot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Slot'</a>, <a>slot_responseCard</a> - A set of
--   possible responses for the slot type used by text-based clients. A
--   user chooses an option from the response card, instead of using text
--   to reply.
--   
--   <a>$sel:slotType:Slot'</a>, <a>slot_slotType</a> - The type of the
--   slot, either a custom slot type that you defined or one of the
--   built-in slot types.
--   
--   <a>$sel:valueElicitationPrompt:Slot'</a>,
--   <a>slot_valueElicitationPrompt</a> - The prompt that Amazon Lex uses
--   to elicit the slot value from the user.
--   
--   <a>$sel:slotTypeVersion:Slot'</a>, <a>slot_slotTypeVersion</a> - The
--   version of the slot type.
--   
--   <a>$sel:priority:Slot'</a>, <a>slot_priority</a> - Directs Amazon Lex
--   the order in which to elicit this slot value from the user. For
--   example, if the intent has two slots with priorities 1 and 2, AWS
--   Amazon Lex first elicits a value for the slot with priority 1.
--   
--   If multiple slots share the same priority, the order in which Amazon
--   Lex elicits values is arbitrary.
--   
--   <a>$sel:sampleUtterances:Slot'</a>, <a>slot_sampleUtterances</a> - If
--   you know a specific pattern with which users might respond to an
--   Amazon Lex request for a slot value, you can provide those utterances
--   to improve accuracy. This is optional. In most cases, Amazon Lex is
--   capable of understanding user utterances.
--   
--   <a>$sel:description:Slot'</a>, <a>slot_description</a> - A description
--   of the slot.
--   
--   <a>$sel:defaultValueSpec:Slot'</a>, <a>slot_defaultValueSpec</a> - A
--   list of default values for the slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot. You can specify
--   default values from context variables, session attributes, and defined
--   values.
--   
--   <a>$sel:obfuscationSetting:Slot'</a>, <a>slot_obfuscationSetting</a> -
--   Determines whether a slot is obfuscated in conversation logs and
--   stored utterances. When you obfuscate a slot, the value is replaced by
--   the slot name in curly braces ({}). For example, if the slot name is
--   "full_name", obfuscated values are replaced with "{full_name}". For
--   more information, see <a>Slot Obfuscation</a> .
--   
--   <a>$sel:name:Slot'</a>, <a>slot_name</a> - The name of the slot.
--   
--   <a>$sel:slotConstraint:Slot'</a>, <a>slot_slotConstraint</a> -
--   Specifies whether the slot is required or optional.
newSlot :: Text -> SlotConstraint -> Slot

-- | A set of possible responses for the slot type used by text-based
--   clients. A user chooses an option from the response card, instead of
--   using text to reply.
slot_responseCard :: Lens' Slot (Maybe Text)

-- | The type of the slot, either a custom slot type that you defined or
--   one of the built-in slot types.
slot_slotType :: Lens' Slot (Maybe Text)

-- | The prompt that Amazon Lex uses to elicit the slot value from the
--   user.
slot_valueElicitationPrompt :: Lens' Slot (Maybe Prompt)

-- | The version of the slot type.
slot_slotTypeVersion :: Lens' Slot (Maybe Text)

-- | Directs Amazon Lex the order in which to elicit this slot value from
--   the user. For example, if the intent has two slots with priorities 1
--   and 2, AWS Amazon Lex first elicits a value for the slot with priority
--   1.
--   
--   If multiple slots share the same priority, the order in which Amazon
--   Lex elicits values is arbitrary.
slot_priority :: Lens' Slot (Maybe Natural)

-- | If you know a specific pattern with which users might respond to an
--   Amazon Lex request for a slot value, you can provide those utterances
--   to improve accuracy. This is optional. In most cases, Amazon Lex is
--   capable of understanding user utterances.
slot_sampleUtterances :: Lens' Slot (Maybe [Text])

-- | A description of the slot.
slot_description :: Lens' Slot (Maybe Text)

-- | A list of default values for the slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot. You can specify
--   default values from context variables, session attributes, and defined
--   values.
slot_defaultValueSpec :: Lens' Slot (Maybe SlotDefaultValueSpec)

-- | Determines whether a slot is obfuscated in conversation logs and
--   stored utterances. When you obfuscate a slot, the value is replaced by
--   the slot name in curly braces ({}). For example, if the slot name is
--   "full_name", obfuscated values are replaced with "{full_name}". For
--   more information, see <a>Slot Obfuscation</a> .
slot_obfuscationSetting :: Lens' Slot (Maybe ObfuscationSetting)

-- | The name of the slot.
slot_name :: Lens' Slot Text

-- | Specifies whether the slot is required or optional.
slot_slotConstraint :: Lens' Slot SlotConstraint

-- | A default value for a slot.
--   
--   <i>See:</i> <a>newSlotDefaultValue</a> smart constructor.
data SlotDefaultValue
SlotDefaultValue' :: Text -> SlotDefaultValue

-- | The default value for the slot. You can specify one of the following:
--   
--   <ul>
--   <li><tt>#context-name.slot-name</tt> - The slot value "slot-name" in
--   the context "context-name."</li>
--   <li><tt>{attribute}</tt> - The slot value of the session attribute
--   "attribute."</li>
--   <li><tt>'value'</tt> - The discrete value "value."</li>
--   </ul>
[$sel:defaultValue:SlotDefaultValue'] :: SlotDefaultValue -> Text

-- | Create a value of <a>SlotDefaultValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:SlotDefaultValue'</a>,
--   <a>slotDefaultValue_defaultValue</a> - The default value for the slot.
--   You can specify one of the following:
--   
--   <ul>
--   <li><tt>#context-name.slot-name</tt> - The slot value "slot-name" in
--   the context "context-name."</li>
--   <li><tt>{attribute}</tt> - The slot value of the session attribute
--   "attribute."</li>
--   <li><tt>'value'</tt> - The discrete value "value."</li>
--   </ul>
newSlotDefaultValue :: Text -> SlotDefaultValue

-- | The default value for the slot. You can specify one of the following:
--   
--   <ul>
--   <li><tt>#context-name.slot-name</tt> - The slot value "slot-name" in
--   the context "context-name."</li>
--   <li><tt>{attribute}</tt> - The slot value of the session attribute
--   "attribute."</li>
--   <li><tt>'value'</tt> - The discrete value "value."</li>
--   </ul>
slotDefaultValue_defaultValue :: Lens' SlotDefaultValue Text

-- | Contains the default values for a slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot.
--   
--   <i>See:</i> <a>newSlotDefaultValueSpec</a> smart constructor.
data SlotDefaultValueSpec
SlotDefaultValueSpec' :: [SlotDefaultValue] -> SlotDefaultValueSpec

-- | The default values for a slot. You can specify more than one default.
--   For example, you can specify a default value to use from a matching
--   context variable, a session attribute, or a fixed value.
--   
--   The default value chosen is selected based on the order that you
--   specify them in the list. For example, if you specify a context
--   variable and a fixed value in that order, Amazon Lex uses the context
--   variable if it is available, else it uses the fixed value.
[$sel:defaultValueList:SlotDefaultValueSpec'] :: SlotDefaultValueSpec -> [SlotDefaultValue]

-- | Create a value of <a>SlotDefaultValueSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValueList:SlotDefaultValueSpec'</a>,
--   <a>slotDefaultValueSpec_defaultValueList</a> - The default values for
--   a slot. You can specify more than one default. For example, you can
--   specify a default value to use from a matching context variable, a
--   session attribute, or a fixed value.
--   
--   The default value chosen is selected based on the order that you
--   specify them in the list. For example, if you specify a context
--   variable and a fixed value in that order, Amazon Lex uses the context
--   variable if it is available, else it uses the fixed value.
newSlotDefaultValueSpec :: SlotDefaultValueSpec

-- | The default values for a slot. You can specify more than one default.
--   For example, you can specify a default value to use from a matching
--   context variable, a session attribute, or a fixed value.
--   
--   The default value chosen is selected based on the order that you
--   specify them in the list. For example, if you specify a context
--   variable and a fixed value in that order, Amazon Lex uses the context
--   variable if it is available, else it uses the fixed value.
slotDefaultValueSpec_defaultValueList :: Lens' SlotDefaultValueSpec [SlotDefaultValue]

-- | Provides configuration information for a slot type.
--   
--   <i>See:</i> <a>newSlotTypeConfiguration</a> smart constructor.
data SlotTypeConfiguration
SlotTypeConfiguration' :: Maybe SlotTypeRegexConfiguration -> SlotTypeConfiguration

-- | A regular expression used to validate the value of a slot.
[$sel:regexConfiguration:SlotTypeConfiguration'] :: SlotTypeConfiguration -> Maybe SlotTypeRegexConfiguration

-- | Create a value of <a>SlotTypeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regexConfiguration:SlotTypeConfiguration'</a>,
--   <a>slotTypeConfiguration_regexConfiguration</a> - A regular expression
--   used to validate the value of a slot.
newSlotTypeConfiguration :: SlotTypeConfiguration

-- | A regular expression used to validate the value of a slot.
slotTypeConfiguration_regexConfiguration :: Lens' SlotTypeConfiguration (Maybe SlotTypeRegexConfiguration)

-- | Provides information about a slot type..
--   
--   <i>See:</i> <a>newSlotTypeMetadata</a> smart constructor.
data SlotTypeMetadata
SlotTypeMetadata' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> SlotTypeMetadata

-- | The date that the slot type was created.
[$sel:createdDate:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe POSIX

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last updated date are the same.
[$sel:lastUpdatedDate:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe POSIX

-- | The version of the slot type.
[$sel:version:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe Text

-- | The name of the slot type.
[$sel:name:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe Text

-- | A description of the slot type.
[$sel:description:SlotTypeMetadata'] :: SlotTypeMetadata -> Maybe Text

-- | Create a value of <a>SlotTypeMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_createdDate</a> - The date that the slot type was
--   created.
--   
--   <a>$sel:lastUpdatedDate:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_lastUpdatedDate</a> - The date that the slot type
--   was updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:version:SlotTypeMetadata'</a>, <a>slotTypeMetadata_version</a>
--   - The version of the slot type.
--   
--   <a>$sel:name:SlotTypeMetadata'</a>, <a>slotTypeMetadata_name</a> - The
--   name of the slot type.
--   
--   <a>$sel:description:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_description</a> - A description of the slot type.
newSlotTypeMetadata :: SlotTypeMetadata

-- | The date that the slot type was created.
slotTypeMetadata_createdDate :: Lens' SlotTypeMetadata (Maybe UTCTime)

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last updated date are the same.
slotTypeMetadata_lastUpdatedDate :: Lens' SlotTypeMetadata (Maybe UTCTime)

-- | The version of the slot type.
slotTypeMetadata_version :: Lens' SlotTypeMetadata (Maybe Text)

-- | The name of the slot type.
slotTypeMetadata_name :: Lens' SlotTypeMetadata (Maybe Text)

-- | A description of the slot type.
slotTypeMetadata_description :: Lens' SlotTypeMetadata (Maybe Text)

-- | Provides a regular expression used to validate the value of a slot.
--   
--   <i>See:</i> <a>newSlotTypeRegexConfiguration</a> smart constructor.
data SlotTypeRegexConfiguration
SlotTypeRegexConfiguration' :: Text -> SlotTypeRegexConfiguration

-- | A regular expression used to validate the value of a slot.
--   
--   Use a standard regular expression. Amazon Lex supports the following
--   characters in the regular expression:
--   
--   <ul>
--   <li>A-Z, a-z</li>
--   <li>0-9</li>
--   <li>Unicode characters ("\ u&lt;Unicode&gt;")</li>
--   </ul>
--   
--   Represent Unicode characters with four digits, for example "\u0041" or
--   "\u005A".
--   
--   The following regular expression operators are not supported:
--   
--   <ul>
--   <li>Infinite repeaters: *, +, or {x,} with no upper bound.</li>
--   <li>Wild card (.)</li>
--   </ul>
[$sel:pattern':SlotTypeRegexConfiguration'] :: SlotTypeRegexConfiguration -> Text

-- | Create a value of <a>SlotTypeRegexConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pattern':SlotTypeRegexConfiguration'</a>,
--   <a>slotTypeRegexConfiguration_pattern</a> - A regular expression used
--   to validate the value of a slot.
--   
--   Use a standard regular expression. Amazon Lex supports the following
--   characters in the regular expression:
--   
--   <ul>
--   <li>A-Z, a-z</li>
--   <li>0-9</li>
--   <li>Unicode characters ("\ u&lt;Unicode&gt;")</li>
--   </ul>
--   
--   Represent Unicode characters with four digits, for example "\u0041" or
--   "\u005A".
--   
--   The following regular expression operators are not supported:
--   
--   <ul>
--   <li>Infinite repeaters: *, +, or {x,} with no upper bound.</li>
--   <li>Wild card (.)</li>
--   </ul>
newSlotTypeRegexConfiguration :: Text -> SlotTypeRegexConfiguration

-- | A regular expression used to validate the value of a slot.
--   
--   Use a standard regular expression. Amazon Lex supports the following
--   characters in the regular expression:
--   
--   <ul>
--   <li>A-Z, a-z</li>
--   <li>0-9</li>
--   <li>Unicode characters ("\ u&lt;Unicode&gt;")</li>
--   </ul>
--   
--   Represent Unicode characters with four digits, for example "\u0041" or
--   "\u005A".
--   
--   The following regular expression operators are not supported:
--   
--   <ul>
--   <li>Infinite repeaters: *, +, or {x,} with no upper bound.</li>
--   <li>Wild card (.)</li>
--   </ul>
slotTypeRegexConfiguration_pattern :: Lens' SlotTypeRegexConfiguration Text

-- | A collection of messages that convey information to the user. At
--   runtime, Amazon Lex selects the message to convey.
--   
--   <i>See:</i> <a>newStatement</a> smart constructor.
data Statement
Statement' :: Maybe Text -> NonEmpty Message -> Statement

-- | At runtime, if the client is using the <a>PostText</a> API, Amazon Lex
--   includes the response card in the response. It substitutes all of the
--   session attributes and slot values for placeholders in the response
--   card.
[$sel:responseCard:Statement'] :: Statement -> Maybe Text

-- | A collection of message objects.
[$sel:messages:Statement'] :: Statement -> NonEmpty Message

-- | Create a value of <a>Statement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Statement'</a>, <a>statement_responseCard</a> -
--   At runtime, if the client is using the <a>PostText</a> API, Amazon Lex
--   includes the response card in the response. It substitutes all of the
--   session attributes and slot values for placeholders in the response
--   card.
--   
--   <a>$sel:messages:Statement'</a>, <a>statement_messages</a> - A
--   collection of message objects.
newStatement :: NonEmpty Message -> Statement

-- | At runtime, if the client is using the <a>PostText</a> API, Amazon Lex
--   includes the response card in the response. It substitutes all of the
--   session attributes and slot values for placeholders in the response
--   card.
statement_responseCard :: Lens' Statement (Maybe Text)

-- | A collection of message objects.
statement_messages :: Lens' Statement (NonEmpty Message)

-- | A list of key/value pairs that identify a bot, bot alias, or bot
--   channel. Tag keys and values can consist of Unicode letters, digits,
--   white space, and any of the following symbols: _ . : / = + - @.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The key for the tag. Keys are not case-sensitive and must be unique.
[$sel:key:Tag'] :: Tag -> Text

-- | The value associated with a key. The value may be an empty string but
--   it can't be null.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. Keys are
--   not case-sensitive and must be unique.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value associated with a
--   key. The value may be an empty string but it can't be null.
newTag :: Text -> Text -> Tag

-- | The key for the tag. Keys are not case-sensitive and must be unique.
tag_key :: Lens' Tag Text

-- | The value associated with a key. The value may be an empty string but
--   it can't be null.
tag_value :: Lens' Tag Text

-- | Provides information about a single utterance that was made to your
--   bot.
--   
--   <i>See:</i> <a>newUtteranceData</a> smart constructor.
data UtteranceData
UtteranceData' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe POSIX -> Maybe POSIX -> UtteranceData

-- | The text that was entered by the user or the text representation of an
--   audio clip.
[$sel:utteranceString:UtteranceData'] :: UtteranceData -> Maybe Text

-- | The total number of individuals that used the utterance.
[$sel:distinctUsers:UtteranceData'] :: UtteranceData -> Maybe Int

-- | The number of times that the utterance was processed.
[$sel:count:UtteranceData'] :: UtteranceData -> Maybe Int

-- | The date that the utterance was last recorded.
[$sel:lastUtteredDate:UtteranceData'] :: UtteranceData -> Maybe POSIX

-- | The date that the utterance was first recorded.
[$sel:firstUtteredDate:UtteranceData'] :: UtteranceData -> Maybe POSIX

-- | Create a value of <a>UtteranceData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:utteranceString:UtteranceData'</a>,
--   <a>utteranceData_utteranceString</a> - The text that was entered by
--   the user or the text representation of an audio clip.
--   
--   <a>$sel:distinctUsers:UtteranceData'</a>,
--   <a>utteranceData_distinctUsers</a> - The total number of individuals
--   that used the utterance.
--   
--   <a>$sel:count:UtteranceData'</a>, <a>utteranceData_count</a> - The
--   number of times that the utterance was processed.
--   
--   <a>$sel:lastUtteredDate:UtteranceData'</a>,
--   <a>utteranceData_lastUtteredDate</a> - The date that the utterance was
--   last recorded.
--   
--   <a>$sel:firstUtteredDate:UtteranceData'</a>,
--   <a>utteranceData_firstUtteredDate</a> - The date that the utterance
--   was first recorded.
newUtteranceData :: UtteranceData

-- | The text that was entered by the user or the text representation of an
--   audio clip.
utteranceData_utteranceString :: Lens' UtteranceData (Maybe Text)

-- | The total number of individuals that used the utterance.
utteranceData_distinctUsers :: Lens' UtteranceData (Maybe Int)

-- | The number of times that the utterance was processed.
utteranceData_count :: Lens' UtteranceData (Maybe Int)

-- | The date that the utterance was last recorded.
utteranceData_lastUtteredDate :: Lens' UtteranceData (Maybe UTCTime)

-- | The date that the utterance was first recorded.
utteranceData_firstUtteredDate :: Lens' UtteranceData (Maybe UTCTime)

-- | Provides a list of utterances that have been made to a specific
--   version of your bot. The list contains a maximum of 100 utterances.
--   
--   <i>See:</i> <a>newUtteranceList</a> smart constructor.
data UtteranceList
UtteranceList' :: Maybe Text -> Maybe [UtteranceData] -> UtteranceList

-- | The version of the bot that processed the list.
[$sel:botVersion:UtteranceList'] :: UtteranceList -> Maybe Text

-- | One or more UtteranceData objects that contain information about the
--   utterances that have been made to a bot. The maximum number of object
--   is 100.
[$sel:utterances:UtteranceList'] :: UtteranceList -> Maybe [UtteranceData]

-- | Create a value of <a>UtteranceList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botVersion:UtteranceList'</a>, <a>utteranceList_botVersion</a>
--   - The version of the bot that processed the list.
--   
--   <a>$sel:utterances:UtteranceList'</a>, <a>utteranceList_utterances</a>
--   - One or more UtteranceData objects that contain information about the
--   utterances that have been made to a bot. The maximum number of object
--   is 100.
newUtteranceList :: UtteranceList

-- | The version of the bot that processed the list.
utteranceList_botVersion :: Lens' UtteranceList (Maybe Text)

-- | One or more UtteranceData objects that contain information about the
--   utterances that have been made to a bot. The maximum number of object
--   is 100.
utteranceList_utterances :: Lens' UtteranceList (Maybe [UtteranceData])


-- | Adds the specified tags to the specified resource. If a tag key
--   already exists, the existing value is replaced with the new value.
module Network.AWS.LexModels.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel
--   to tag.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A list of tag keys to add to the resource. If a tag key already
--   exists, the existing value is replaced with the new value.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel
--   to tag.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of tag
--   keys to add to the resource. If a tag key already exists, the existing
--   value is replaced with the new value.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel
--   to tag.
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tag keys to add to the resource. If a tag key already
--   exists, the existing value is replaced with the new value.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.TagResource.TagResource
instance GHC.Show.Show Network.AWS.LexModels.TagResource.TagResource
instance GHC.Read.Read Network.AWS.LexModels.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.LexModels.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.LexModels.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.LexModels.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.LexModels.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.LexModels.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.LexModels.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.LexModels.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.TagResource.TagResource


-- | Starts migrating a bot from Amazon Lex V1 to Amazon Lex V2. Migrate
--   your bot when you want to take advantage of the new features of Amazon
--   Lex V2.
--   
--   For more information, see <a>Migrating a bot</a> in the <i>Amazon Lex
--   developer guide</i>.
module Network.AWS.LexModels.StartMigration

-- | <i>See:</i> <a>newStartMigration</a> smart constructor.
data StartMigration
StartMigration' :: Text -> Text -> Text -> Text -> MigrationStrategy -> StartMigration

-- | The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex
--   V2.
[$sel:v1BotName:StartMigration'] :: StartMigration -> Text

-- | The version of the bot to migrate to Amazon Lex V2. You can migrate
--   the <tt>$LATEST</tt> version as well as any numbered version.
[$sel:v1BotVersion:StartMigration'] :: StartMigration -> Text

-- | The name of the Amazon Lex V2 bot that you are migrating the Amazon
--   Lex V1 bot to.
--   
--   <ul>
--   <li>If the Amazon Lex V2 bot doesn't exist, you must use the
--   <tt>CREATE_NEW</tt> migration strategy.</li>
--   <li>If the Amazon Lex V2 bot exists, you must use the
--   <tt>UPDATE_EXISTING</tt> migration strategy to change the contents of
--   the Amazon Lex V2 bot.</li>
--   </ul>
[$sel:v2BotName:StartMigration'] :: StartMigration -> Text

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
[$sel:v2BotRole:StartMigration'] :: StartMigration -> Text

-- | The strategy used to conduct the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
[$sel:migrationStrategy:StartMigration'] :: StartMigration -> MigrationStrategy

-- | Create a value of <a>StartMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotName:StartMigration'</a>, <a>startMigration_v1BotName</a>
--   - The name of the Amazon Lex V1 bot that you are migrating to Amazon
--   Lex V2.
--   
--   <a>$sel:v1BotVersion:StartMigration'</a>,
--   <a>startMigration_v1BotVersion</a> - The version of the bot to migrate
--   to Amazon Lex V2. You can migrate the <tt>$LATEST</tt> version as well
--   as any numbered version.
--   
--   <a>$sel:v2BotName:StartMigration'</a>, <a>startMigration_v2BotName</a>
--   - The name of the Amazon Lex V2 bot that you are migrating the Amazon
--   Lex V1 bot to.
--   
--   <ul>
--   <li>If the Amazon Lex V2 bot doesn't exist, you must use the
--   <tt>CREATE_NEW</tt> migration strategy.</li>
--   <li>If the Amazon Lex V2 bot exists, you must use the
--   <tt>UPDATE_EXISTING</tt> migration strategy to change the contents of
--   the Amazon Lex V2 bot.</li>
--   </ul>
--   
--   <a>$sel:v2BotRole:StartMigration'</a>, <a>startMigration_v2BotRole</a>
--   - The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
--   
--   <a>$sel:migrationStrategy:StartMigration'</a>,
--   <a>startMigration_migrationStrategy</a> - The strategy used to conduct
--   the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
newStartMigration :: Text -> Text -> Text -> Text -> MigrationStrategy -> StartMigration

-- | The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex
--   V2.
startMigration_v1BotName :: Lens' StartMigration Text

-- | The version of the bot to migrate to Amazon Lex V2. You can migrate
--   the <tt>$LATEST</tt> version as well as any numbered version.
startMigration_v1BotVersion :: Lens' StartMigration Text

-- | The name of the Amazon Lex V2 bot that you are migrating the Amazon
--   Lex V1 bot to.
--   
--   <ul>
--   <li>If the Amazon Lex V2 bot doesn't exist, you must use the
--   <tt>CREATE_NEW</tt> migration strategy.</li>
--   <li>If the Amazon Lex V2 bot exists, you must use the
--   <tt>UPDATE_EXISTING</tt> migration strategy to change the contents of
--   the Amazon Lex V2 bot.</li>
--   </ul>
startMigration_v2BotName :: Lens' StartMigration Text

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
startMigration_v2BotRole :: Lens' StartMigration Text

-- | The strategy used to conduct the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
startMigration_migrationStrategy :: Lens' StartMigration MigrationStrategy

-- | <i>See:</i> <a>newStartMigrationResponse</a> smart constructor.
data StartMigrationResponse
StartMigrationResponse' :: Maybe Text -> Maybe Text -> Maybe Locale -> Maybe POSIX -> Maybe MigrationStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartMigrationResponse

-- | The version of the bot to migrate to Amazon Lex V2.
[$sel:v1BotVersion:StartMigrationResponse'] :: StartMigrationResponse -> Maybe Text

-- | The unique identifier that Amazon Lex assigned to the migration.
[$sel:migrationId:StartMigrationResponse'] :: StartMigrationResponse -> Maybe Text

-- | The locale used for the Amazon Lex V1 bot.
[$sel:v1BotLocale:StartMigrationResponse'] :: StartMigrationResponse -> Maybe Locale

-- | The date and time that the migration started.
[$sel:migrationTimestamp:StartMigrationResponse'] :: StartMigrationResponse -> Maybe POSIX

-- | The strategy used to conduct the migration.
[$sel:migrationStrategy:StartMigrationResponse'] :: StartMigrationResponse -> Maybe MigrationStrategy

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
[$sel:v2BotRole:StartMigrationResponse'] :: StartMigrationResponse -> Maybe Text

-- | The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex
--   V2.
[$sel:v1BotName:StartMigrationResponse'] :: StartMigrationResponse -> Maybe Text

-- | The unique identifier for the Amazon Lex V2 bot.
[$sel:v2BotId:StartMigrationResponse'] :: StartMigrationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartMigrationResponse'] :: StartMigrationResponse -> Int

-- | Create a value of <a>StartMigrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotVersion:StartMigration'</a>,
--   <a>startMigrationResponse_v1BotVersion</a> - The version of the bot to
--   migrate to Amazon Lex V2.
--   
--   <a>$sel:migrationId:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_migrationId</a> - The unique identifier that
--   Amazon Lex assigned to the migration.
--   
--   <a>$sel:v1BotLocale:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_v1BotLocale</a> - The locale used for the
--   Amazon Lex V1 bot.
--   
--   <a>$sel:migrationTimestamp:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_migrationTimestamp</a> - The date and time
--   that the migration started.
--   
--   <a>$sel:migrationStrategy:StartMigration'</a>,
--   <a>startMigrationResponse_migrationStrategy</a> - The strategy used to
--   conduct the migration.
--   
--   <a>$sel:v2BotRole:StartMigration'</a>,
--   <a>startMigrationResponse_v2BotRole</a> - The IAM role that Amazon Lex
--   uses to run the Amazon Lex V2 bot.
--   
--   <a>$sel:v1BotName:StartMigration'</a>,
--   <a>startMigrationResponse_v1BotName</a> - The name of the Amazon Lex
--   V1 bot that you are migrating to Amazon Lex V2.
--   
--   <a>$sel:v2BotId:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_v2BotId</a> - The unique identifier for the
--   Amazon Lex V2 bot.
--   
--   <a>$sel:httpStatus:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_httpStatus</a> - The response's http status
--   code.
newStartMigrationResponse :: Int -> StartMigrationResponse

-- | The version of the bot to migrate to Amazon Lex V2.
startMigrationResponse_v1BotVersion :: Lens' StartMigrationResponse (Maybe Text)

-- | The unique identifier that Amazon Lex assigned to the migration.
startMigrationResponse_migrationId :: Lens' StartMigrationResponse (Maybe Text)

-- | The locale used for the Amazon Lex V1 bot.
startMigrationResponse_v1BotLocale :: Lens' StartMigrationResponse (Maybe Locale)

-- | The date and time that the migration started.
startMigrationResponse_migrationTimestamp :: Lens' StartMigrationResponse (Maybe UTCTime)

-- | The strategy used to conduct the migration.
startMigrationResponse_migrationStrategy :: Lens' StartMigrationResponse (Maybe MigrationStrategy)

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
startMigrationResponse_v2BotRole :: Lens' StartMigrationResponse (Maybe Text)

-- | The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex
--   V2.
startMigrationResponse_v1BotName :: Lens' StartMigrationResponse (Maybe Text)

-- | The unique identifier for the Amazon Lex V2 bot.
startMigrationResponse_v2BotId :: Lens' StartMigrationResponse (Maybe Text)

-- | The response's http status code.
startMigrationResponse_httpStatus :: Lens' StartMigrationResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.StartMigration.StartMigration
instance GHC.Show.Show Network.AWS.LexModels.StartMigration.StartMigration
instance GHC.Read.Read Network.AWS.LexModels.StartMigration.StartMigration
instance GHC.Classes.Eq Network.AWS.LexModels.StartMigration.StartMigration
instance GHC.Generics.Generic Network.AWS.LexModels.StartMigration.StartMigrationResponse
instance GHC.Show.Show Network.AWS.LexModels.StartMigration.StartMigrationResponse
instance GHC.Read.Read Network.AWS.LexModels.StartMigration.StartMigrationResponse
instance GHC.Classes.Eq Network.AWS.LexModels.StartMigration.StartMigrationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.StartMigration.StartMigration
instance Control.DeepSeq.NFData Network.AWS.LexModels.StartMigration.StartMigrationResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.StartMigration.StartMigration
instance Control.DeepSeq.NFData Network.AWS.LexModels.StartMigration.StartMigration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.StartMigration.StartMigration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.StartMigration.StartMigration
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.StartMigration.StartMigration
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.StartMigration.StartMigration


-- | Starts a job to import a resource to Amazon Lex.
module Network.AWS.LexModels.StartImport

-- | <i>See:</i> <a>newStartImport</a> smart constructor.
data StartImport
StartImport' :: Maybe [Tag] -> Base64 -> ResourceType -> MergeStrategy -> StartImport

-- | A list of tags to add to the imported bot. You can only add tags when
--   you import a bot, you can't add tags to an intent or slot type.
[$sel:tags:StartImport'] :: StartImport -> Maybe [Tag]

-- | A zip archive in binary format. The archive should contain one file, a
--   JSON file containing the resource to import. The resource should match
--   the type specified in the <tt>resourceType</tt> field.
[$sel:payload:StartImport'] :: StartImport -> Base64

-- | Specifies the type of resource to export. Each resource also exports
--   any resources that it depends on.
--   
--   <ul>
--   <li>A bot exports dependent intents.</li>
--   <li>An intent exports dependent slot types.</li>
--   </ul>
[$sel:resourceType:StartImport'] :: StartImport -> ResourceType

-- | Specifies the action that the <tt>StartImport</tt> operation should
--   take when there is an existing resource with the same name.
--   
--   <ul>
--   <li>FAIL_ON_CONFLICT - The import operation is stopped on the first
--   conflict between a resource in the import file and an existing
--   resource. The name of the resource causing the conflict is in the
--   <tt>failureReason</tt> field of the response to the <tt>GetImport</tt>
--   operation.OVERWRITE_LATEST - The import operation proceeds even if
--   there is a conflict with an existing resource. The $LASTEST version of
--   the existing resource is overwritten with the data from the import
--   file.</li>
--   </ul>
[$sel:mergeStrategy:StartImport'] :: StartImport -> MergeStrategy

-- | Create a value of <a>StartImport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:StartImport'</a>, <a>startImport_tags</a> - A list of
--   tags to add to the imported bot. You can only add tags when you import
--   a bot, you can't add tags to an intent or slot type.
--   
--   <a>$sel:payload:StartImport'</a>, <a>startImport_payload</a> - A zip
--   archive in binary format. The archive should contain one file, a JSON
--   file containing the resource to import. The resource should match the
--   type specified in the <tt>resourceType</tt> field.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:resourceType:StartImport'</a>, <a>startImport_resourceType</a>
--   - Specifies the type of resource to export. Each resource also exports
--   any resources that it depends on.
--   
--   <ul>
--   <li>A bot exports dependent intents.</li>
--   <li>An intent exports dependent slot types.</li>
--   </ul>
--   
--   <a>$sel:mergeStrategy:StartImport'</a>,
--   <a>startImport_mergeStrategy</a> - Specifies the action that the
--   <tt>StartImport</tt> operation should take when there is an existing
--   resource with the same name.
--   
--   <ul>
--   <li>FAIL_ON_CONFLICT - The import operation is stopped on the first
--   conflict between a resource in the import file and an existing
--   resource. The name of the resource causing the conflict is in the
--   <tt>failureReason</tt> field of the response to the <tt>GetImport</tt>
--   operation.OVERWRITE_LATEST - The import operation proceeds even if
--   there is a conflict with an existing resource. The $LASTEST version of
--   the existing resource is overwritten with the data from the import
--   file.</li>
--   </ul>
newStartImport :: ByteString -> ResourceType -> MergeStrategy -> StartImport

-- | A list of tags to add to the imported bot. You can only add tags when
--   you import a bot, you can't add tags to an intent or slot type.
startImport_tags :: Lens' StartImport (Maybe [Tag])

-- | A zip archive in binary format. The archive should contain one file, a
--   JSON file containing the resource to import. The resource should match
--   the type specified in the <tt>resourceType</tt> field.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
startImport_payload :: Lens' StartImport ByteString

-- | Specifies the type of resource to export. Each resource also exports
--   any resources that it depends on.
--   
--   <ul>
--   <li>A bot exports dependent intents.</li>
--   <li>An intent exports dependent slot types.</li>
--   </ul>
startImport_resourceType :: Lens' StartImport ResourceType

-- | Specifies the action that the <tt>StartImport</tt> operation should
--   take when there is an existing resource with the same name.
--   
--   <ul>
--   <li>FAIL_ON_CONFLICT - The import operation is stopped on the first
--   conflict between a resource in the import file and an existing
--   resource. The name of the resource causing the conflict is in the
--   <tt>failureReason</tt> field of the response to the <tt>GetImport</tt>
--   operation.OVERWRITE_LATEST - The import operation proceeds even if
--   there is a conflict with an existing resource. The $LASTEST version of
--   the existing resource is overwritten with the data from the import
--   file.</li>
--   </ul>
startImport_mergeStrategy :: Lens' StartImport MergeStrategy

-- | <i>See:</i> <a>newStartImportResponse</a> smart constructor.
data StartImportResponse
StartImportResponse' :: Maybe POSIX -> Maybe MergeStrategy -> Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe ImportStatus -> Maybe [Tag] -> Int -> StartImportResponse

-- | A timestamp for the date and time that the import job was requested.
[$sel:createdDate:StartImportResponse'] :: StartImportResponse -> Maybe POSIX

-- | The action to take when there is a merge conflict.
[$sel:mergeStrategy:StartImportResponse'] :: StartImportResponse -> Maybe MergeStrategy

-- | The identifier for the specific import job.
[$sel:importId:StartImportResponse'] :: StartImportResponse -> Maybe Text

-- | The type of resource to import.
[$sel:resourceType:StartImportResponse'] :: StartImportResponse -> Maybe ResourceType

-- | The name given to the import job.
[$sel:name:StartImportResponse'] :: StartImportResponse -> Maybe Text

-- | The status of the import job. If the status is <tt>FAILED</tt>, you
--   can get the reason for the failure using the <tt>GetImport</tt>
--   operation.
[$sel:importStatus:StartImportResponse'] :: StartImportResponse -> Maybe ImportStatus

-- | A list of tags added to the imported bot.
[$sel:tags:StartImportResponse'] :: StartImportResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:StartImportResponse'] :: StartImportResponse -> Int

-- | Create a value of <a>StartImportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:StartImportResponse'</a>,
--   <a>startImportResponse_createdDate</a> - A timestamp for the date and
--   time that the import job was requested.
--   
--   <a>$sel:mergeStrategy:StartImport'</a>,
--   <a>startImportResponse_mergeStrategy</a> - The action to take when
--   there is a merge conflict.
--   
--   <a>$sel:importId:StartImportResponse'</a>,
--   <a>startImportResponse_importId</a> - The identifier for the specific
--   import job.
--   
--   <a>$sel:resourceType:StartImport'</a>,
--   <a>startImportResponse_resourceType</a> - The type of resource to
--   import.
--   
--   <a>$sel:name:StartImportResponse'</a>, <a>startImportResponse_name</a>
--   - The name given to the import job.
--   
--   <a>$sel:importStatus:StartImportResponse'</a>,
--   <a>startImportResponse_importStatus</a> - The status of the import
--   job. If the status is <tt>FAILED</tt>, you can get the reason for the
--   failure using the <tt>GetImport</tt> operation.
--   
--   <a>$sel:tags:StartImport'</a>, <a>startImportResponse_tags</a> - A
--   list of tags added to the imported bot.
--   
--   <a>$sel:httpStatus:StartImportResponse'</a>,
--   <a>startImportResponse_httpStatus</a> - The response's http status
--   code.
newStartImportResponse :: Int -> StartImportResponse

-- | A timestamp for the date and time that the import job was requested.
startImportResponse_createdDate :: Lens' StartImportResponse (Maybe UTCTime)

-- | The action to take when there is a merge conflict.
startImportResponse_mergeStrategy :: Lens' StartImportResponse (Maybe MergeStrategy)

-- | The identifier for the specific import job.
startImportResponse_importId :: Lens' StartImportResponse (Maybe Text)

-- | The type of resource to import.
startImportResponse_resourceType :: Lens' StartImportResponse (Maybe ResourceType)

-- | The name given to the import job.
startImportResponse_name :: Lens' StartImportResponse (Maybe Text)

-- | The status of the import job. If the status is <tt>FAILED</tt>, you
--   can get the reason for the failure using the <tt>GetImport</tt>
--   operation.
startImportResponse_importStatus :: Lens' StartImportResponse (Maybe ImportStatus)

-- | A list of tags added to the imported bot.
startImportResponse_tags :: Lens' StartImportResponse (Maybe [Tag])

-- | The response's http status code.
startImportResponse_httpStatus :: Lens' StartImportResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.StartImport.StartImport
instance GHC.Show.Show Network.AWS.LexModels.StartImport.StartImport
instance GHC.Read.Read Network.AWS.LexModels.StartImport.StartImport
instance GHC.Classes.Eq Network.AWS.LexModels.StartImport.StartImport
instance GHC.Generics.Generic Network.AWS.LexModels.StartImport.StartImportResponse
instance GHC.Show.Show Network.AWS.LexModels.StartImport.StartImportResponse
instance GHC.Read.Read Network.AWS.LexModels.StartImport.StartImportResponse
instance GHC.Classes.Eq Network.AWS.LexModels.StartImport.StartImportResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.StartImport.StartImport
instance Control.DeepSeq.NFData Network.AWS.LexModels.StartImport.StartImportResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.StartImport.StartImport
instance Control.DeepSeq.NFData Network.AWS.LexModels.StartImport.StartImport
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.StartImport.StartImport
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.StartImport.StartImport
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.StartImport.StartImport
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.StartImport.StartImport


-- | Creates a custom slot type or replaces an existing custom slot type.
--   
--   To create a custom slot type, specify a name for the slot type and a
--   set of enumeration values, which are the values that a slot of this
--   type can assume. For more information, see how-it-works.
--   
--   If you specify the name of an existing slot type, the fields in the
--   request replace the existing values in the <tt>$LATEST</tt> version of
--   the slot type. Amazon Lex removes the fields that you don't provide in
--   the request. If you don't specify required fields, Amazon Lex throws
--   an exception. When you update the <tt>$LATEST</tt> version of a slot
--   type, if a bot uses the <tt>$LATEST</tt> version of an intent that
--   contains the slot type, the bot's <tt>status</tt> field is set to
--   <tt>NOT_BUILT</tt>.
--   
--   This operation requires permissions for the <tt>lex:PutSlotType</tt>
--   action.
module Network.AWS.LexModels.PutSlotType

-- | <i>See:</i> <a>newPutSlotType</a> smart constructor.
data PutSlotType
PutSlotType' :: Maybe [SlotTypeConfiguration] -> Maybe [EnumerationValue] -> Maybe SlotValueSelectionStrategy -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Text -> PutSlotType

-- | Configuration information that extends the parent built-in slot type.
--   The configuration is added to the settings for the parent slot type.
[$sel:slotTypeConfigurations:PutSlotType'] :: PutSlotType -> Maybe [SlotTypeConfiguration]

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take. Each value can have a list of
--   <tt>synonyms</tt>, which are additional values that help train the
--   machine learning model about the values that it resolves for a slot.
--   
--   A regular expression slot type doesn't require enumeration values. All
--   other slot types require a list of enumeration values.
--   
--   When Amazon Lex resolves a slot value, it generates a resolution list
--   that contains up to five possible values for the slot. If you are
--   using a Lambda function, this resolution list is passed to the
--   function. If you are not using a Lambda function you can choose to
--   return the value that the user entered or the first value in the
--   resolution list as the slot value. The <tt>valueSelectionStrategy</tt>
--   field indicates the option to use.
[$sel:enumerationValues:PutSlotType'] :: PutSlotType -> Maybe [EnumerationValue]

-- | Determines the slot resolution strategy that Amazon Lex uses to return
--   slot type values. The field can be set to one of the following values:
--   
--   <ul>
--   <li><tt>ORIGINAL_VALUE</tt> - Returns the value entered by the user,
--   if the user value is similar to the slot value.</li>
--   <li><tt>TOP_RESOLUTION</tt> - If there is a resolution list for the
--   slot, return the first value in the resolution list as the slot type
--   value. If there is no resolution list, null is returned.</li>
--   </ul>
--   
--   If you don't specify the <tt>valueSelectionStrategy</tt>, the default
--   is <tt>ORIGINAL_VALUE</tt>.
[$sel:valueSelectionStrategy:PutSlotType'] :: PutSlotType -> Maybe SlotValueSelectionStrategy

-- | The built-in slot type used as the parent of the slot type. When you
--   define a parent slot type, the new slot type has all of the same
--   configuration as the parent.
--   
--   Only <tt>AMAZON.AlphaNumeric</tt> is supported.
[$sel:parentSlotTypeSignature:PutSlotType'] :: PutSlotType -> Maybe Text

-- | A description of the slot type.
[$sel:description:PutSlotType'] :: PutSlotType -> Maybe Text

-- | When set to <tt>true</tt> a new numbered version of the slot type is
--   created. This is the same as calling the
--   <tt>CreateSlotTypeVersion</tt> operation. If you do not specify
--   <tt>createVersion</tt>, the default is <tt>false</tt>.
[$sel:createVersion:PutSlotType'] :: PutSlotType -> Maybe Bool

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new slot type, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a slot type, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
[$sel:checksum:PutSlotType'] :: PutSlotType -> Maybe Text

-- | The name of the slot type. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in slot type name, or a built-in slot
--   type name with "AMAZON." removed. For example, because there is a
--   built-in slot type called <tt>AMAZON.DATE</tt>, you can't create a
--   custom slot type called <tt>DATE</tt>.
--   
--   For a list of built-in slot types, see <a>Slot Type Reference</a> in
--   the <i>Alexa Skills Kit</i>.
[$sel:name:PutSlotType'] :: PutSlotType -> Text

-- | Create a value of <a>PutSlotType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypeConfigurations:PutSlotType'</a>,
--   <a>putSlotType_slotTypeConfigurations</a> - Configuration information
--   that extends the parent built-in slot type. The configuration is added
--   to the settings for the parent slot type.
--   
--   <a>$sel:enumerationValues:PutSlotType'</a>,
--   <a>putSlotType_enumerationValues</a> - A list of
--   <tt>EnumerationValue</tt> objects that defines the values that the
--   slot type can take. Each value can have a list of <tt>synonyms</tt>,
--   which are additional values that help train the machine learning model
--   about the values that it resolves for a slot.
--   
--   A regular expression slot type doesn't require enumeration values. All
--   other slot types require a list of enumeration values.
--   
--   When Amazon Lex resolves a slot value, it generates a resolution list
--   that contains up to five possible values for the slot. If you are
--   using a Lambda function, this resolution list is passed to the
--   function. If you are not using a Lambda function you can choose to
--   return the value that the user entered or the first value in the
--   resolution list as the slot value. The <tt>valueSelectionStrategy</tt>
--   field indicates the option to use.
--   
--   <a>$sel:valueSelectionStrategy:PutSlotType'</a>,
--   <a>putSlotType_valueSelectionStrategy</a> - Determines the slot
--   resolution strategy that Amazon Lex uses to return slot type values.
--   The field can be set to one of the following values:
--   
--   <ul>
--   <li><tt>ORIGINAL_VALUE</tt> - Returns the value entered by the user,
--   if the user value is similar to the slot value.</li>
--   <li><tt>TOP_RESOLUTION</tt> - If there is a resolution list for the
--   slot, return the first value in the resolution list as the slot type
--   value. If there is no resolution list, null is returned.</li>
--   </ul>
--   
--   If you don't specify the <tt>valueSelectionStrategy</tt>, the default
--   is <tt>ORIGINAL_VALUE</tt>.
--   
--   <a>$sel:parentSlotTypeSignature:PutSlotType'</a>,
--   <a>putSlotType_parentSlotTypeSignature</a> - The built-in slot type
--   used as the parent of the slot type. When you define a parent slot
--   type, the new slot type has all of the same configuration as the
--   parent.
--   
--   Only <tt>AMAZON.AlphaNumeric</tt> is supported.
--   
--   <a>$sel:description:PutSlotType'</a>, <a>putSlotType_description</a> -
--   A description of the slot type.
--   
--   <a>$sel:createVersion:PutSlotType'</a>,
--   <a>putSlotType_createVersion</a> - When set to <tt>true</tt> a new
--   numbered version of the slot type is created. This is the same as
--   calling the <tt>CreateSlotTypeVersion</tt> operation. If you do not
--   specify <tt>createVersion</tt>, the default is <tt>false</tt>.
--   
--   <a>$sel:checksum:PutSlotType'</a>, <a>putSlotType_checksum</a> -
--   Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new slot type, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a slot type, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
--   
--   <a>$sel:name:PutSlotType'</a>, <a>putSlotType_name</a> - The name of
--   the slot type. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in slot type name, or a built-in slot
--   type name with "AMAZON." removed. For example, because there is a
--   built-in slot type called <tt>AMAZON.DATE</tt>, you can't create a
--   custom slot type called <tt>DATE</tt>.
--   
--   For a list of built-in slot types, see <a>Slot Type Reference</a> in
--   the <i>Alexa Skills Kit</i>.
newPutSlotType :: Text -> PutSlotType

-- | Configuration information that extends the parent built-in slot type.
--   The configuration is added to the settings for the parent slot type.
putSlotType_slotTypeConfigurations :: Lens' PutSlotType (Maybe [SlotTypeConfiguration])

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take. Each value can have a list of
--   <tt>synonyms</tt>, which are additional values that help train the
--   machine learning model about the values that it resolves for a slot.
--   
--   A regular expression slot type doesn't require enumeration values. All
--   other slot types require a list of enumeration values.
--   
--   When Amazon Lex resolves a slot value, it generates a resolution list
--   that contains up to five possible values for the slot. If you are
--   using a Lambda function, this resolution list is passed to the
--   function. If you are not using a Lambda function you can choose to
--   return the value that the user entered or the first value in the
--   resolution list as the slot value. The <tt>valueSelectionStrategy</tt>
--   field indicates the option to use.
putSlotType_enumerationValues :: Lens' PutSlotType (Maybe [EnumerationValue])

-- | Determines the slot resolution strategy that Amazon Lex uses to return
--   slot type values. The field can be set to one of the following values:
--   
--   <ul>
--   <li><tt>ORIGINAL_VALUE</tt> - Returns the value entered by the user,
--   if the user value is similar to the slot value.</li>
--   <li><tt>TOP_RESOLUTION</tt> - If there is a resolution list for the
--   slot, return the first value in the resolution list as the slot type
--   value. If there is no resolution list, null is returned.</li>
--   </ul>
--   
--   If you don't specify the <tt>valueSelectionStrategy</tt>, the default
--   is <tt>ORIGINAL_VALUE</tt>.
putSlotType_valueSelectionStrategy :: Lens' PutSlotType (Maybe SlotValueSelectionStrategy)

-- | The built-in slot type used as the parent of the slot type. When you
--   define a parent slot type, the new slot type has all of the same
--   configuration as the parent.
--   
--   Only <tt>AMAZON.AlphaNumeric</tt> is supported.
putSlotType_parentSlotTypeSignature :: Lens' PutSlotType (Maybe Text)

-- | A description of the slot type.
putSlotType_description :: Lens' PutSlotType (Maybe Text)

-- | When set to <tt>true</tt> a new numbered version of the slot type is
--   created. This is the same as calling the
--   <tt>CreateSlotTypeVersion</tt> operation. If you do not specify
--   <tt>createVersion</tt>, the default is <tt>false</tt>.
putSlotType_createVersion :: Lens' PutSlotType (Maybe Bool)

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new slot type, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a slot type, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
putSlotType_checksum :: Lens' PutSlotType (Maybe Text)

-- | The name of the slot type. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in slot type name, or a built-in slot
--   type name with "AMAZON." removed. For example, because there is a
--   built-in slot type called <tt>AMAZON.DATE</tt>, you can't create a
--   custom slot type called <tt>DATE</tt>.
--   
--   For a list of built-in slot types, see <a>Slot Type Reference</a> in
--   the <i>Alexa Skills Kit</i>.
putSlotType_name :: Lens' PutSlotType Text

-- | <i>See:</i> <a>newPutSlotTypeResponse</a> smart constructor.
data PutSlotTypeResponse
PutSlotTypeResponse' :: Maybe [SlotTypeConfiguration] -> Maybe POSIX -> Maybe [EnumerationValue] -> Maybe POSIX -> Maybe SlotValueSelectionStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Int -> PutSlotTypeResponse

-- | Configuration information that extends the parent built-in slot type.
[$sel:slotTypeConfigurations:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe [SlotTypeConfiguration]

-- | The date that the slot type was created.
[$sel:createdDate:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe POSIX

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
[$sel:enumerationValues:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe [EnumerationValue]

-- | The date that the slot type was updated. When you create a slot type,
--   the creation date and last update date are the same.
[$sel:lastUpdatedDate:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe POSIX

-- | The slot resolution strategy that Amazon Lex uses to determine the
--   value of the slot. For more information, see PutSlotType.
[$sel:valueSelectionStrategy:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe SlotValueSelectionStrategy

-- | The version of the slot type. For a new slot type, the version is
--   always <tt>$LATEST</tt>.
[$sel:version:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe Text

-- | The name of the slot type.
[$sel:name:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe Text

-- | The built-in slot type used as the parent of the slot type.
[$sel:parentSlotTypeSignature:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe Text

-- | A description of the slot type.
[$sel:description:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe Text

-- | <tt>True</tt> if a new version of the slot type was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
[$sel:createVersion:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe Bool

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
[$sel:checksum:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutSlotTypeResponse'] :: PutSlotTypeResponse -> Int

-- | Create a value of <a>PutSlotTypeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypeConfigurations:PutSlotType'</a>,
--   <a>putSlotTypeResponse_slotTypeConfigurations</a> - Configuration
--   information that extends the parent built-in slot type.
--   
--   <a>$sel:createdDate:PutSlotTypeResponse'</a>,
--   <a>putSlotTypeResponse_createdDate</a> - The date that the slot type
--   was created.
--   
--   <a>$sel:enumerationValues:PutSlotType'</a>,
--   <a>putSlotTypeResponse_enumerationValues</a> - A list of
--   <tt>EnumerationValue</tt> objects that defines the values that the
--   slot type can take.
--   
--   <a>$sel:lastUpdatedDate:PutSlotTypeResponse'</a>,
--   <a>putSlotTypeResponse_lastUpdatedDate</a> - The date that the slot
--   type was updated. When you create a slot type, the creation date and
--   last update date are the same.
--   
--   <a>$sel:valueSelectionStrategy:PutSlotType'</a>,
--   <a>putSlotTypeResponse_valueSelectionStrategy</a> - The slot
--   resolution strategy that Amazon Lex uses to determine the value of the
--   slot. For more information, see PutSlotType.
--   
--   <a>$sel:version:PutSlotTypeResponse'</a>,
--   <a>putSlotTypeResponse_version</a> - The version of the slot type. For
--   a new slot type, the version is always <tt>$LATEST</tt>.
--   
--   <a>$sel:name:PutSlotType'</a>, <a>putSlotTypeResponse_name</a> - The
--   name of the slot type.
--   
--   <a>$sel:parentSlotTypeSignature:PutSlotType'</a>,
--   <a>putSlotTypeResponse_parentSlotTypeSignature</a> - The built-in slot
--   type used as the parent of the slot type.
--   
--   <a>$sel:description:PutSlotType'</a>,
--   <a>putSlotTypeResponse_description</a> - A description of the slot
--   type.
--   
--   <a>$sel:createVersion:PutSlotType'</a>,
--   <a>putSlotTypeResponse_createVersion</a> - <tt>True</tt> if a new
--   version of the slot type was created. If the <tt>createVersion</tt>
--   field was not specified in the request, the <tt>createVersion</tt>
--   field is set to false in the response.
--   
--   <a>$sel:checksum:PutSlotType'</a>, <a>putSlotTypeResponse_checksum</a>
--   - Checksum of the <tt>$LATEST</tt> version of the slot type.
--   
--   <a>$sel:httpStatus:PutSlotTypeResponse'</a>,
--   <a>putSlotTypeResponse_httpStatus</a> - The response's http status
--   code.
newPutSlotTypeResponse :: Int -> PutSlotTypeResponse

-- | Configuration information that extends the parent built-in slot type.
putSlotTypeResponse_slotTypeConfigurations :: Lens' PutSlotTypeResponse (Maybe [SlotTypeConfiguration])

-- | The date that the slot type was created.
putSlotTypeResponse_createdDate :: Lens' PutSlotTypeResponse (Maybe UTCTime)

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
putSlotTypeResponse_enumerationValues :: Lens' PutSlotTypeResponse (Maybe [EnumerationValue])

-- | The date that the slot type was updated. When you create a slot type,
--   the creation date and last update date are the same.
putSlotTypeResponse_lastUpdatedDate :: Lens' PutSlotTypeResponse (Maybe UTCTime)

-- | The slot resolution strategy that Amazon Lex uses to determine the
--   value of the slot. For more information, see PutSlotType.
putSlotTypeResponse_valueSelectionStrategy :: Lens' PutSlotTypeResponse (Maybe SlotValueSelectionStrategy)

-- | The version of the slot type. For a new slot type, the version is
--   always <tt>$LATEST</tt>.
putSlotTypeResponse_version :: Lens' PutSlotTypeResponse (Maybe Text)

-- | The name of the slot type.
putSlotTypeResponse_name :: Lens' PutSlotTypeResponse (Maybe Text)

-- | The built-in slot type used as the parent of the slot type.
putSlotTypeResponse_parentSlotTypeSignature :: Lens' PutSlotTypeResponse (Maybe Text)

-- | A description of the slot type.
putSlotTypeResponse_description :: Lens' PutSlotTypeResponse (Maybe Text)

-- | <tt>True</tt> if a new version of the slot type was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
putSlotTypeResponse_createVersion :: Lens' PutSlotTypeResponse (Maybe Bool)

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
putSlotTypeResponse_checksum :: Lens' PutSlotTypeResponse (Maybe Text)

-- | The response's http status code.
putSlotTypeResponse_httpStatus :: Lens' PutSlotTypeResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.PutSlotType.PutSlotType
instance GHC.Show.Show Network.AWS.LexModels.PutSlotType.PutSlotType
instance GHC.Read.Read Network.AWS.LexModels.PutSlotType.PutSlotType
instance GHC.Classes.Eq Network.AWS.LexModels.PutSlotType.PutSlotType
instance GHC.Generics.Generic Network.AWS.LexModels.PutSlotType.PutSlotTypeResponse
instance GHC.Show.Show Network.AWS.LexModels.PutSlotType.PutSlotTypeResponse
instance GHC.Read.Read Network.AWS.LexModels.PutSlotType.PutSlotTypeResponse
instance GHC.Classes.Eq Network.AWS.LexModels.PutSlotType.PutSlotTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.PutSlotType.PutSlotType
instance Control.DeepSeq.NFData Network.AWS.LexModels.PutSlotType.PutSlotTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.PutSlotType.PutSlotType
instance Control.DeepSeq.NFData Network.AWS.LexModels.PutSlotType.PutSlotType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.PutSlotType.PutSlotType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.PutSlotType.PutSlotType
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.PutSlotType.PutSlotType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.PutSlotType.PutSlotType


-- | Creates an intent or replaces an existing intent.
--   
--   To define the interaction between the user and your bot, you use one
--   or more intents. For a pizza ordering bot, for example, you would
--   create an <tt>OrderPizza</tt> intent.
--   
--   To create an intent or replace an existing intent, you must provide
--   the following:
--   
--   <ul>
--   <li>Intent name. For example, <tt>OrderPizza</tt>.</li>
--   <li>Sample utterances. For example, "Can I order a pizza, please." and
--   "I want to order a pizza."</li>
--   <li>Information to be gathered. You specify slot types for the
--   information that your bot will request from the user. You can specify
--   standard slot types, such as a date or a time, or custom slot types
--   such as the size and crust of a pizza.</li>
--   <li>How the intent will be fulfilled. You can provide a Lambda
--   function or configure the intent to return the intent information to
--   the client application. If you use a Lambda function, when all of the
--   intent information is available, Amazon Lex invokes your Lambda
--   function. If you configure your intent to return the intent
--   information to the client application.</li>
--   </ul>
--   
--   You can specify other optional information in the request, such as:
--   
--   <ul>
--   <li>A confirmation prompt to ask the user to confirm an intent. For
--   example, "Shall I order your pizza?"</li>
--   <li>A conclusion statement to send to the user after the intent has
--   been fulfilled. For example, "I placed your pizza order."</li>
--   <li>A follow-up prompt that asks the user for additional activity. For
--   example, asking "Do you want to order a drink with your pizza?"</li>
--   </ul>
--   
--   If you specify an existing intent name to update the intent, Amazon
--   Lex replaces the values in the <tt>$LATEST</tt> version of the intent
--   with the values in the request. Amazon Lex removes fields that you
--   don't provide in the request. If you don't specify the required
--   fields, Amazon Lex throws an exception. When you update the
--   <tt>$LATEST</tt> version of an intent, the <tt>status</tt> field of
--   any bot that uses the <tt>$LATEST</tt> version of the intent is set to
--   <tt>NOT_BUILT</tt>.
--   
--   For more information, see how-it-works.
--   
--   This operation requires permissions for the <tt>lex:PutIntent</tt>
--   action.
module Network.AWS.LexModels.PutIntent

-- | <i>See:</i> <a>newPutIntent</a> smart constructor.
data PutIntent
PutIntent' :: Maybe KendraConfiguration -> Maybe Text -> Maybe CodeHook -> Maybe Statement -> Maybe Statement -> Maybe [InputContext] -> Maybe [Slot] -> Maybe FulfillmentActivity -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Prompt -> Maybe [OutputContext] -> Maybe FollowUpPrompt -> Maybe Text -> Text -> PutIntent

-- | Configuration information required to use the
--   <tt>AMAZON.KendraSearchIntent</tt> intent to connect to an Amazon
--   Kendra index. For more information, see
--   <a>AMAZON.KendraSearchIntent</a>.
[$sel:kendraConfiguration:PutIntent'] :: PutIntent -> Maybe KendraConfiguration

-- | A unique identifier for the built-in intent to base this intent on. To
--   find the signature for an intent, see <a>Standard Built-in Intents</a>
--   in the <i>Alexa Skills Kit</i>.
[$sel:parentIntentSignature:PutIntent'] :: PutIntent -> Maybe Text

-- | Specifies a Lambda function to invoke for each user input. You can
--   invoke this Lambda function to personalize user interaction.
--   
--   For example, suppose your bot determines that the user is John. Your
--   Lambda function might retrieve John's information from a backend
--   database and prepopulate some of the values. For example, if you find
--   that John is gluten intolerant, you might set the corresponding intent
--   slot, <tt>GlutenIntolerant</tt>, to true. You might find John's phone
--   number and set the corresponding session attribute.
[$sel:dialogCodeHook:PutIntent'] :: PutIntent -> Maybe CodeHook

-- | The statement that you want Amazon Lex to convey to the user after the
--   intent is successfully fulfilled by the Lambda function.
--   
--   This element is relevant only if you provide a Lambda function in the
--   <tt>fulfillmentActivity</tt>. If you return the intent to the client
--   application, you can't specify this element.
--   
--   The <tt>followUpPrompt</tt> and <tt>conclusionStatement</tt> are
--   mutually exclusive. You can specify only one.
[$sel:conclusionStatement:PutIntent'] :: PutIntent -> Maybe Statement

-- | When the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
--   
--   You must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
[$sel:rejectionStatement:PutIntent'] :: PutIntent -> Maybe Statement

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
[$sel:inputContexts:PutIntent'] :: PutIntent -> Maybe [InputContext]

-- | An array of intent slots. At runtime, Amazon Lex elicits required slot
--   values from the user using prompts defined in the slots. For more
--   information, see how-it-works.
[$sel:slots:PutIntent'] :: PutIntent -> Maybe [Slot]

-- | Required. Describes how the intent is fulfilled. For example, after a
--   user provides all of the information for a pizza order,
--   <tt>fulfillmentActivity</tt> defines how the bot places an order with
--   a local pizza store.
--   
--   You might configure Amazon Lex to return all of the intent information
--   to the client application, or direct it to invoke a Lambda function
--   that can process the intent (for example, place an order with a
--   pizzeria).
[$sel:fulfillmentActivity:PutIntent'] :: PutIntent -> Maybe FulfillmentActivity

-- | An array of utterances (strings) that a user might say to signal the
--   intent. For example, "I want {PizzaSize} pizza", "Order {Quantity}
--   {PizzaSize} pizzas".
--   
--   In each utterance, a slot name is enclosed in curly braces.
[$sel:sampleUtterances:PutIntent'] :: PutIntent -> Maybe [Text]

-- | A description of the intent.
[$sel:description:PutIntent'] :: PutIntent -> Maybe Text

-- | When set to <tt>true</tt> a new numbered version of the intent is
--   created. This is the same as calling the <tt>CreateIntentVersion</tt>
--   operation. If you do not specify <tt>createVersion</tt>, the default
--   is <tt>false</tt>.
[$sel:createVersion:PutIntent'] :: PutIntent -> Maybe Bool

-- | Prompts the user to confirm the intent. This question should have a
--   yes or no answer.
--   
--   Amazon Lex uses this prompt to ensure that the user acknowledges that
--   the intent is ready for fulfillment. For example, with the
--   <tt>OrderPizza</tt> intent, you might want to confirm that the order
--   is correct before placing it. For other intents, such as intents that
--   simply respond to user questions, you might not need to ask the user
--   for confirmation before providing the information.
--   
--   You you must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
[$sel:confirmationPrompt:PutIntent'] :: PutIntent -> Maybe Prompt

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
[$sel:outputContexts:PutIntent'] :: PutIntent -> Maybe [OutputContext]

-- | Amazon Lex uses this prompt to solicit additional activity after
--   fulfilling an intent. For example, after the <tt>OrderPizza</tt>
--   intent is fulfilled, you might prompt the user to order a drink.
--   
--   The action that Amazon Lex takes depends on the user's response, as
--   follows:
--   
--   <ul>
--   <li>If the user says "Yes" it responds with the clarification prompt
--   that is configured for the bot.</li>
--   <li>if the user says "Yes" and continues with an utterance that
--   triggers an intent it starts a conversation for the intent.</li>
--   <li>If the user says "No" it responds with the rejection statement
--   configured for the the follow-up prompt.</li>
--   <li>If it doesn't recognize the utterance it repeats the follow-up
--   prompt again.</li>
--   </ul>
--   
--   The <tt>followUpPrompt</tt> field and the <tt>conclusionStatement</tt>
--   field are mutually exclusive. You can specify only one.
[$sel:followUpPrompt:PutIntent'] :: PutIntent -> Maybe FollowUpPrompt

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new intent, leave the <tt>checksum</tt> field blank.
--   If you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a intent, set the <tt>checksum</tt> field to
--   the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
[$sel:checksum:PutIntent'] :: PutIntent -> Maybe Text

-- | The name of the intent. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in intent name, or a built-in intent name
--   with "AMAZON." removed. For example, because there is a built-in
--   intent called <tt>AMAZON.HelpIntent</tt>, you can't create a custom
--   intent called <tt>HelpIntent</tt>.
--   
--   For a list of built-in intents, see <a>Standard Built-in Intents</a>
--   in the <i>Alexa Skills Kit</i>.
[$sel:name:PutIntent'] :: PutIntent -> Text

-- | Create a value of <a>PutIntent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kendraConfiguration:PutIntent'</a>,
--   <a>putIntent_kendraConfiguration</a> - Configuration information
--   required to use the <tt>AMAZON.KendraSearchIntent</tt> intent to
--   connect to an Amazon Kendra index. For more information, see
--   <a>AMAZON.KendraSearchIntent</a>.
--   
--   <a>$sel:parentIntentSignature:PutIntent'</a>,
--   <a>putIntent_parentIntentSignature</a> - A unique identifier for the
--   built-in intent to base this intent on. To find the signature for an
--   intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
--   
--   <a>$sel:dialogCodeHook:PutIntent'</a>, <a>putIntent_dialogCodeHook</a>
--   - Specifies a Lambda function to invoke for each user input. You can
--   invoke this Lambda function to personalize user interaction.
--   
--   For example, suppose your bot determines that the user is John. Your
--   Lambda function might retrieve John's information from a backend
--   database and prepopulate some of the values. For example, if you find
--   that John is gluten intolerant, you might set the corresponding intent
--   slot, <tt>GlutenIntolerant</tt>, to true. You might find John's phone
--   number and set the corresponding session attribute.
--   
--   <a>$sel:conclusionStatement:PutIntent'</a>,
--   <a>putIntent_conclusionStatement</a> - The statement that you want
--   Amazon Lex to convey to the user after the intent is successfully
--   fulfilled by the Lambda function.
--   
--   This element is relevant only if you provide a Lambda function in the
--   <tt>fulfillmentActivity</tt>. If you return the intent to the client
--   application, you can't specify this element.
--   
--   The <tt>followUpPrompt</tt> and <tt>conclusionStatement</tt> are
--   mutually exclusive. You can specify only one.
--   
--   <a>$sel:rejectionStatement:PutIntent'</a>,
--   <a>putIntent_rejectionStatement</a> - When the user answers "no" to
--   the question defined in <tt>confirmationPrompt</tt>, Amazon Lex
--   responds with this statement to acknowledge that the intent was
--   canceled.
--   
--   You must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
--   
--   <a>$sel:inputContexts:PutIntent'</a>, <a>putIntent_inputContexts</a> -
--   An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
--   
--   <a>$sel:slots:PutIntent'</a>, <a>putIntent_slots</a> - An array of
--   intent slots. At runtime, Amazon Lex elicits required slot values from
--   the user using prompts defined in the slots. For more information, see
--   how-it-works.
--   
--   <a>$sel:fulfillmentActivity:PutIntent'</a>,
--   <a>putIntent_fulfillmentActivity</a> - Required. Describes how the
--   intent is fulfilled. For example, after a user provides all of the
--   information for a pizza order, <tt>fulfillmentActivity</tt> defines
--   how the bot places an order with a local pizza store.
--   
--   You might configure Amazon Lex to return all of the intent information
--   to the client application, or direct it to invoke a Lambda function
--   that can process the intent (for example, place an order with a
--   pizzeria).
--   
--   <a>$sel:sampleUtterances:PutIntent'</a>,
--   <a>putIntent_sampleUtterances</a> - An array of utterances (strings)
--   that a user might say to signal the intent. For example, "I want
--   {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas".
--   
--   In each utterance, a slot name is enclosed in curly braces.
--   
--   <a>$sel:description:PutIntent'</a>, <a>putIntent_description</a> - A
--   description of the intent.
--   
--   <a>$sel:createVersion:PutIntent'</a>, <a>putIntent_createVersion</a> -
--   When set to <tt>true</tt> a new numbered version of the intent is
--   created. This is the same as calling the <tt>CreateIntentVersion</tt>
--   operation. If you do not specify <tt>createVersion</tt>, the default
--   is <tt>false</tt>.
--   
--   <a>$sel:confirmationPrompt:PutIntent'</a>,
--   <a>putIntent_confirmationPrompt</a> - Prompts the user to confirm the
--   intent. This question should have a yes or no answer.
--   
--   Amazon Lex uses this prompt to ensure that the user acknowledges that
--   the intent is ready for fulfillment. For example, with the
--   <tt>OrderPizza</tt> intent, you might want to confirm that the order
--   is correct before placing it. For other intents, such as intents that
--   simply respond to user questions, you might not need to ask the user
--   for confirmation before providing the information.
--   
--   You you must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
--   
--   <a>$sel:outputContexts:PutIntent'</a>, <a>putIntent_outputContexts</a>
--   - An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
--   
--   <a>$sel:followUpPrompt:PutIntent'</a>, <a>putIntent_followUpPrompt</a>
--   - Amazon Lex uses this prompt to solicit additional activity after
--   fulfilling an intent. For example, after the <tt>OrderPizza</tt>
--   intent is fulfilled, you might prompt the user to order a drink.
--   
--   The action that Amazon Lex takes depends on the user's response, as
--   follows:
--   
--   <ul>
--   <li>If the user says "Yes" it responds with the clarification prompt
--   that is configured for the bot.</li>
--   <li>if the user says "Yes" and continues with an utterance that
--   triggers an intent it starts a conversation for the intent.</li>
--   <li>If the user says "No" it responds with the rejection statement
--   configured for the the follow-up prompt.</li>
--   <li>If it doesn't recognize the utterance it repeats the follow-up
--   prompt again.</li>
--   </ul>
--   
--   The <tt>followUpPrompt</tt> field and the <tt>conclusionStatement</tt>
--   field are mutually exclusive. You can specify only one.
--   
--   <a>$sel:checksum:PutIntent'</a>, <a>putIntent_checksum</a> -
--   Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new intent, leave the <tt>checksum</tt> field blank.
--   If you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a intent, set the <tt>checksum</tt> field to
--   the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
--   
--   <a>$sel:name:PutIntent'</a>, <a>putIntent_name</a> - The name of the
--   intent. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in intent name, or a built-in intent name
--   with "AMAZON." removed. For example, because there is a built-in
--   intent called <tt>AMAZON.HelpIntent</tt>, you can't create a custom
--   intent called <tt>HelpIntent</tt>.
--   
--   For a list of built-in intents, see <a>Standard Built-in Intents</a>
--   in the <i>Alexa Skills Kit</i>.
newPutIntent :: Text -> PutIntent

-- | Configuration information required to use the
--   <tt>AMAZON.KendraSearchIntent</tt> intent to connect to an Amazon
--   Kendra index. For more information, see
--   <a>AMAZON.KendraSearchIntent</a>.
putIntent_kendraConfiguration :: Lens' PutIntent (Maybe KendraConfiguration)

-- | A unique identifier for the built-in intent to base this intent on. To
--   find the signature for an intent, see <a>Standard Built-in Intents</a>
--   in the <i>Alexa Skills Kit</i>.
putIntent_parentIntentSignature :: Lens' PutIntent (Maybe Text)

-- | Specifies a Lambda function to invoke for each user input. You can
--   invoke this Lambda function to personalize user interaction.
--   
--   For example, suppose your bot determines that the user is John. Your
--   Lambda function might retrieve John's information from a backend
--   database and prepopulate some of the values. For example, if you find
--   that John is gluten intolerant, you might set the corresponding intent
--   slot, <tt>GlutenIntolerant</tt>, to true. You might find John's phone
--   number and set the corresponding session attribute.
putIntent_dialogCodeHook :: Lens' PutIntent (Maybe CodeHook)

-- | The statement that you want Amazon Lex to convey to the user after the
--   intent is successfully fulfilled by the Lambda function.
--   
--   This element is relevant only if you provide a Lambda function in the
--   <tt>fulfillmentActivity</tt>. If you return the intent to the client
--   application, you can't specify this element.
--   
--   The <tt>followUpPrompt</tt> and <tt>conclusionStatement</tt> are
--   mutually exclusive. You can specify only one.
putIntent_conclusionStatement :: Lens' PutIntent (Maybe Statement)

-- | When the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
--   
--   You must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
putIntent_rejectionStatement :: Lens' PutIntent (Maybe Statement)

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
putIntent_inputContexts :: Lens' PutIntent (Maybe [InputContext])

-- | An array of intent slots. At runtime, Amazon Lex elicits required slot
--   values from the user using prompts defined in the slots. For more
--   information, see how-it-works.
putIntent_slots :: Lens' PutIntent (Maybe [Slot])

-- | Required. Describes how the intent is fulfilled. For example, after a
--   user provides all of the information for a pizza order,
--   <tt>fulfillmentActivity</tt> defines how the bot places an order with
--   a local pizza store.
--   
--   You might configure Amazon Lex to return all of the intent information
--   to the client application, or direct it to invoke a Lambda function
--   that can process the intent (for example, place an order with a
--   pizzeria).
putIntent_fulfillmentActivity :: Lens' PutIntent (Maybe FulfillmentActivity)

-- | An array of utterances (strings) that a user might say to signal the
--   intent. For example, "I want {PizzaSize} pizza", "Order {Quantity}
--   {PizzaSize} pizzas".
--   
--   In each utterance, a slot name is enclosed in curly braces.
putIntent_sampleUtterances :: Lens' PutIntent (Maybe [Text])

-- | A description of the intent.
putIntent_description :: Lens' PutIntent (Maybe Text)

-- | When set to <tt>true</tt> a new numbered version of the intent is
--   created. This is the same as calling the <tt>CreateIntentVersion</tt>
--   operation. If you do not specify <tt>createVersion</tt>, the default
--   is <tt>false</tt>.
putIntent_createVersion :: Lens' PutIntent (Maybe Bool)

-- | Prompts the user to confirm the intent. This question should have a
--   yes or no answer.
--   
--   Amazon Lex uses this prompt to ensure that the user acknowledges that
--   the intent is ready for fulfillment. For example, with the
--   <tt>OrderPizza</tt> intent, you might want to confirm that the order
--   is correct before placing it. For other intents, such as intents that
--   simply respond to user questions, you might not need to ask the user
--   for confirmation before providing the information.
--   
--   You you must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
putIntent_confirmationPrompt :: Lens' PutIntent (Maybe Prompt)

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
putIntent_outputContexts :: Lens' PutIntent (Maybe [OutputContext])

-- | Amazon Lex uses this prompt to solicit additional activity after
--   fulfilling an intent. For example, after the <tt>OrderPizza</tt>
--   intent is fulfilled, you might prompt the user to order a drink.
--   
--   The action that Amazon Lex takes depends on the user's response, as
--   follows:
--   
--   <ul>
--   <li>If the user says "Yes" it responds with the clarification prompt
--   that is configured for the bot.</li>
--   <li>if the user says "Yes" and continues with an utterance that
--   triggers an intent it starts a conversation for the intent.</li>
--   <li>If the user says "No" it responds with the rejection statement
--   configured for the the follow-up prompt.</li>
--   <li>If it doesn't recognize the utterance it repeats the follow-up
--   prompt again.</li>
--   </ul>
--   
--   The <tt>followUpPrompt</tt> field and the <tt>conclusionStatement</tt>
--   field are mutually exclusive. You can specify only one.
putIntent_followUpPrompt :: Lens' PutIntent (Maybe FollowUpPrompt)

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new intent, leave the <tt>checksum</tt> field blank.
--   If you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a intent, set the <tt>checksum</tt> field to
--   the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
putIntent_checksum :: Lens' PutIntent (Maybe Text)

-- | The name of the intent. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in intent name, or a built-in intent name
--   with "AMAZON." removed. For example, because there is a built-in
--   intent called <tt>AMAZON.HelpIntent</tt>, you can't create a custom
--   intent called <tt>HelpIntent</tt>.
--   
--   For a list of built-in intents, see <a>Standard Built-in Intents</a>
--   in the <i>Alexa Skills Kit</i>.
putIntent_name :: Lens' PutIntent Text

-- | <i>See:</i> <a>newPutIntentResponse</a> smart constructor.
data PutIntentResponse
PutIntentResponse' :: Maybe KendraConfiguration -> Maybe POSIX -> Maybe Text -> Maybe CodeHook -> Maybe Statement -> Maybe POSIX -> Maybe Statement -> Maybe [InputContext] -> Maybe Text -> Maybe [Slot] -> Maybe FulfillmentActivity -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Prompt -> Maybe [OutputContext] -> Maybe FollowUpPrompt -> Maybe Text -> Int -> PutIntentResponse

-- | Configuration information, if any, required to connect to an Amazon
--   Kendra index and use the <tt>AMAZON.KendraSearchIntent</tt> intent.
[$sel:kendraConfiguration:PutIntentResponse'] :: PutIntentResponse -> Maybe KendraConfiguration

-- | The date that the intent was created.
[$sel:createdDate:PutIntentResponse'] :: PutIntentResponse -> Maybe POSIX

-- | A unique identifier for the built-in intent that this intent is based
--   on.
[$sel:parentIntentSignature:PutIntentResponse'] :: PutIntentResponse -> Maybe Text

-- | If defined in the intent, Amazon Lex invokes this Lambda function for
--   each user input.
[$sel:dialogCodeHook:PutIntentResponse'] :: PutIntentResponse -> Maybe CodeHook

-- | After the Lambda function specified in
--   the<tt>fulfillmentActivity</tt>intent fulfills the intent, Amazon Lex
--   conveys this statement to the user.
[$sel:conclusionStatement:PutIntentResponse'] :: PutIntentResponse -> Maybe Statement

-- | The date that the intent was updated. When you create a resource, the
--   creation date and last update dates are the same.
[$sel:lastUpdatedDate:PutIntentResponse'] :: PutIntentResponse -> Maybe POSIX

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt> Amazon Lex responds with this statement to
--   acknowledge that the intent was canceled.
[$sel:rejectionStatement:PutIntentResponse'] :: PutIntentResponse -> Maybe Statement

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
[$sel:inputContexts:PutIntentResponse'] :: PutIntentResponse -> Maybe [InputContext]

-- | The version of the intent. For a new intent, the version is always
--   <tt>$LATEST</tt>.
[$sel:version:PutIntentResponse'] :: PutIntentResponse -> Maybe Text

-- | An array of intent slots that are configured for the intent.
[$sel:slots:PutIntentResponse'] :: PutIntentResponse -> Maybe [Slot]

-- | If defined in the intent, Amazon Lex invokes this Lambda function to
--   fulfill the intent after the user provides all of the information
--   required by the intent.
[$sel:fulfillmentActivity:PutIntentResponse'] :: PutIntentResponse -> Maybe FulfillmentActivity

-- | The name of the intent.
[$sel:name:PutIntentResponse'] :: PutIntentResponse -> Maybe Text

-- | An array of sample utterances that are configured for the intent.
[$sel:sampleUtterances:PutIntentResponse'] :: PutIntentResponse -> Maybe [Text]

-- | A description of the intent.
[$sel:description:PutIntentResponse'] :: PutIntentResponse -> Maybe Text

-- | <tt>True</tt> if a new version of the intent was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
[$sel:createVersion:PutIntentResponse'] :: PutIntentResponse -> Maybe Bool

-- | If defined in the intent, Amazon Lex prompts the user to confirm the
--   intent before fulfilling it.
[$sel:confirmationPrompt:PutIntentResponse'] :: PutIntentResponse -> Maybe Prompt

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
[$sel:outputContexts:PutIntentResponse'] :: PutIntentResponse -> Maybe [OutputContext]

-- | If defined in the intent, Amazon Lex uses this prompt to solicit
--   additional user activity after the intent is fulfilled.
[$sel:followUpPrompt:PutIntentResponse'] :: PutIntentResponse -> Maybe FollowUpPrompt

-- | Checksum of the <tt>$LATEST</tt>version of the intent created or
--   updated.
[$sel:checksum:PutIntentResponse'] :: PutIntentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutIntentResponse'] :: PutIntentResponse -> Int

-- | Create a value of <a>PutIntentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kendraConfiguration:PutIntent'</a>,
--   <a>putIntentResponse_kendraConfiguration</a> - Configuration
--   information, if any, required to connect to an Amazon Kendra index and
--   use the <tt>AMAZON.KendraSearchIntent</tt> intent.
--   
--   <a>$sel:createdDate:PutIntentResponse'</a>,
--   <a>putIntentResponse_createdDate</a> - The date that the intent was
--   created.
--   
--   <a>$sel:parentIntentSignature:PutIntent'</a>,
--   <a>putIntentResponse_parentIntentSignature</a> - A unique identifier
--   for the built-in intent that this intent is based on.
--   
--   <a>$sel:dialogCodeHook:PutIntent'</a>,
--   <a>putIntentResponse_dialogCodeHook</a> - If defined in the intent,
--   Amazon Lex invokes this Lambda function for each user input.
--   
--   <a>$sel:conclusionStatement:PutIntent'</a>,
--   <a>putIntentResponse_conclusionStatement</a> - After the Lambda
--   function specified in the<tt>fulfillmentActivity</tt>intent fulfills
--   the intent, Amazon Lex conveys this statement to the user.
--   
--   <a>$sel:lastUpdatedDate:PutIntentResponse'</a>,
--   <a>putIntentResponse_lastUpdatedDate</a> - The date that the intent
--   was updated. When you create a resource, the creation date and last
--   update dates are the same.
--   
--   <a>$sel:rejectionStatement:PutIntent'</a>,
--   <a>putIntentResponse_rejectionStatement</a> - If the user answers "no"
--   to the question defined in <tt>confirmationPrompt</tt> Amazon Lex
--   responds with this statement to acknowledge that the intent was
--   canceled.
--   
--   <a>$sel:inputContexts:PutIntent'</a>,
--   <a>putIntentResponse_inputContexts</a> - An array of
--   <tt>InputContext</tt> objects that lists the contexts that must be
--   active for Amazon Lex to choose the intent in a conversation with the
--   user.
--   
--   <a>$sel:version:PutIntentResponse'</a>,
--   <a>putIntentResponse_version</a> - The version of the intent. For a
--   new intent, the version is always <tt>$LATEST</tt>.
--   
--   <a>$sel:slots:PutIntent'</a>, <a>putIntentResponse_slots</a> - An
--   array of intent slots that are configured for the intent.
--   
--   <a>$sel:fulfillmentActivity:PutIntent'</a>,
--   <a>putIntentResponse_fulfillmentActivity</a> - If defined in the
--   intent, Amazon Lex invokes this Lambda function to fulfill the intent
--   after the user provides all of the information required by the intent.
--   
--   <a>$sel:name:PutIntent'</a>, <a>putIntentResponse_name</a> - The name
--   of the intent.
--   
--   <a>$sel:sampleUtterances:PutIntent'</a>,
--   <a>putIntentResponse_sampleUtterances</a> - An array of sample
--   utterances that are configured for the intent.
--   
--   <a>$sel:description:PutIntent'</a>,
--   <a>putIntentResponse_description</a> - A description of the intent.
--   
--   <a>$sel:createVersion:PutIntent'</a>,
--   <a>putIntentResponse_createVersion</a> - <tt>True</tt> if a new
--   version of the intent was created. If the <tt>createVersion</tt> field
--   was not specified in the request, the <tt>createVersion</tt> field is
--   set to false in the response.
--   
--   <a>$sel:confirmationPrompt:PutIntent'</a>,
--   <a>putIntentResponse_confirmationPrompt</a> - If defined in the
--   intent, Amazon Lex prompts the user to confirm the intent before
--   fulfilling it.
--   
--   <a>$sel:outputContexts:PutIntent'</a>,
--   <a>putIntentResponse_outputContexts</a> - An array of
--   <tt>OutputContext</tt> objects that lists the contexts that the intent
--   activates when the intent is fulfilled.
--   
--   <a>$sel:followUpPrompt:PutIntent'</a>,
--   <a>putIntentResponse_followUpPrompt</a> - If defined in the intent,
--   Amazon Lex uses this prompt to solicit additional user activity after
--   the intent is fulfilled.
--   
--   <a>$sel:checksum:PutIntent'</a>, <a>putIntentResponse_checksum</a> -
--   Checksum of the <tt>$LATEST</tt>version of the intent created or
--   updated.
--   
--   <a>$sel:httpStatus:PutIntentResponse'</a>,
--   <a>putIntentResponse_httpStatus</a> - The response's http status code.
newPutIntentResponse :: Int -> PutIntentResponse

-- | Configuration information, if any, required to connect to an Amazon
--   Kendra index and use the <tt>AMAZON.KendraSearchIntent</tt> intent.
putIntentResponse_kendraConfiguration :: Lens' PutIntentResponse (Maybe KendraConfiguration)

-- | The date that the intent was created.
putIntentResponse_createdDate :: Lens' PutIntentResponse (Maybe UTCTime)

-- | A unique identifier for the built-in intent that this intent is based
--   on.
putIntentResponse_parentIntentSignature :: Lens' PutIntentResponse (Maybe Text)

-- | If defined in the intent, Amazon Lex invokes this Lambda function for
--   each user input.
putIntentResponse_dialogCodeHook :: Lens' PutIntentResponse (Maybe CodeHook)

-- | After the Lambda function specified in
--   the<tt>fulfillmentActivity</tt>intent fulfills the intent, Amazon Lex
--   conveys this statement to the user.
putIntentResponse_conclusionStatement :: Lens' PutIntentResponse (Maybe Statement)

-- | The date that the intent was updated. When you create a resource, the
--   creation date and last update dates are the same.
putIntentResponse_lastUpdatedDate :: Lens' PutIntentResponse (Maybe UTCTime)

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt> Amazon Lex responds with this statement to
--   acknowledge that the intent was canceled.
putIntentResponse_rejectionStatement :: Lens' PutIntentResponse (Maybe Statement)

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
putIntentResponse_inputContexts :: Lens' PutIntentResponse (Maybe [InputContext])

-- | The version of the intent. For a new intent, the version is always
--   <tt>$LATEST</tt>.
putIntentResponse_version :: Lens' PutIntentResponse (Maybe Text)

-- | An array of intent slots that are configured for the intent.
putIntentResponse_slots :: Lens' PutIntentResponse (Maybe [Slot])

-- | If defined in the intent, Amazon Lex invokes this Lambda function to
--   fulfill the intent after the user provides all of the information
--   required by the intent.
putIntentResponse_fulfillmentActivity :: Lens' PutIntentResponse (Maybe FulfillmentActivity)

-- | The name of the intent.
putIntentResponse_name :: Lens' PutIntentResponse (Maybe Text)

-- | An array of sample utterances that are configured for the intent.
putIntentResponse_sampleUtterances :: Lens' PutIntentResponse (Maybe [Text])

-- | A description of the intent.
putIntentResponse_description :: Lens' PutIntentResponse (Maybe Text)

-- | <tt>True</tt> if a new version of the intent was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
putIntentResponse_createVersion :: Lens' PutIntentResponse (Maybe Bool)

-- | If defined in the intent, Amazon Lex prompts the user to confirm the
--   intent before fulfilling it.
putIntentResponse_confirmationPrompt :: Lens' PutIntentResponse (Maybe Prompt)

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
putIntentResponse_outputContexts :: Lens' PutIntentResponse (Maybe [OutputContext])

-- | If defined in the intent, Amazon Lex uses this prompt to solicit
--   additional user activity after the intent is fulfilled.
putIntentResponse_followUpPrompt :: Lens' PutIntentResponse (Maybe FollowUpPrompt)

-- | Checksum of the <tt>$LATEST</tt>version of the intent created or
--   updated.
putIntentResponse_checksum :: Lens' PutIntentResponse (Maybe Text)

-- | The response's http status code.
putIntentResponse_httpStatus :: Lens' PutIntentResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.PutIntent.PutIntent
instance GHC.Show.Show Network.AWS.LexModels.PutIntent.PutIntent
instance GHC.Read.Read Network.AWS.LexModels.PutIntent.PutIntent
instance GHC.Classes.Eq Network.AWS.LexModels.PutIntent.PutIntent
instance GHC.Generics.Generic Network.AWS.LexModels.PutIntent.PutIntentResponse
instance GHC.Show.Show Network.AWS.LexModels.PutIntent.PutIntentResponse
instance GHC.Read.Read Network.AWS.LexModels.PutIntent.PutIntentResponse
instance GHC.Classes.Eq Network.AWS.LexModels.PutIntent.PutIntentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.PutIntent.PutIntent
instance Control.DeepSeq.NFData Network.AWS.LexModels.PutIntent.PutIntentResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.PutIntent.PutIntent
instance Control.DeepSeq.NFData Network.AWS.LexModels.PutIntent.PutIntent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.PutIntent.PutIntent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.PutIntent.PutIntent
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.PutIntent.PutIntent
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.PutIntent.PutIntent


-- | Creates an alias for the specified version of the bot or replaces an
--   alias for the specified bot. To change the version of the bot that the
--   alias points to, replace the alias. For more information about
--   aliases, see versioning-aliases.
--   
--   This operation requires permissions for the <tt>lex:PutBotAlias</tt>
--   action.
module Network.AWS.LexModels.PutBotAlias

-- | <i>See:</i> <a>newPutBotAlias</a> smart constructor.
data PutBotAlias
PutBotAlias' :: Maybe [Tag] -> Maybe Text -> Maybe Text -> Maybe ConversationLogsRequest -> Text -> Text -> Text -> PutBotAlias

-- | A list of tags to add to the bot alias. You can only add tags when you
--   create an alias, you can't use the <tt>PutBotAlias</tt> operation to
--   update the tags on a bot alias. To update tags, use the
--   <tt>TagResource</tt> operation.
[$sel:tags:PutBotAlias'] :: PutBotAlias -> Maybe [Tag]

-- | A description of the alias.
[$sel:description:PutBotAlias'] :: PutBotAlias -> Maybe Text

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot alias, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a bot alias, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
[$sel:checksum:PutBotAlias'] :: PutBotAlias -> Maybe Text

-- | Settings for conversation logs for the alias.
[$sel:conversationLogs:PutBotAlias'] :: PutBotAlias -> Maybe ConversationLogsRequest

-- | The name of the alias. The name is <i>not</i> case sensitive.
[$sel:name:PutBotAlias'] :: PutBotAlias -> Text

-- | The version of the bot.
[$sel:botVersion:PutBotAlias'] :: PutBotAlias -> Text

-- | The name of the bot.
[$sel:botName:PutBotAlias'] :: PutBotAlias -> Text

-- | Create a value of <a>PutBotAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutBotAlias'</a>, <a>putBotAlias_tags</a> - A list of
--   tags to add to the bot alias. You can only add tags when you create an
--   alias, you can't use the <tt>PutBotAlias</tt> operation to update the
--   tags on a bot alias. To update tags, use the <tt>TagResource</tt>
--   operation.
--   
--   <a>$sel:description:PutBotAlias'</a>, <a>putBotAlias_description</a> -
--   A description of the alias.
--   
--   <a>$sel:checksum:PutBotAlias'</a>, <a>putBotAlias_checksum</a> -
--   Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot alias, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a bot alias, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
--   
--   <a>$sel:conversationLogs:PutBotAlias'</a>,
--   <a>putBotAlias_conversationLogs</a> - Settings for conversation logs
--   for the alias.
--   
--   <a>$sel:name:PutBotAlias'</a>, <a>putBotAlias_name</a> - The name of
--   the alias. The name is <i>not</i> case sensitive.
--   
--   <a>$sel:botVersion:PutBotAlias'</a>, <a>putBotAlias_botVersion</a> -
--   The version of the bot.
--   
--   <a>$sel:botName:PutBotAlias'</a>, <a>putBotAlias_botName</a> - The
--   name of the bot.
newPutBotAlias :: Text -> Text -> Text -> PutBotAlias

-- | A list of tags to add to the bot alias. You can only add tags when you
--   create an alias, you can't use the <tt>PutBotAlias</tt> operation to
--   update the tags on a bot alias. To update tags, use the
--   <tt>TagResource</tt> operation.
putBotAlias_tags :: Lens' PutBotAlias (Maybe [Tag])

-- | A description of the alias.
putBotAlias_description :: Lens' PutBotAlias (Maybe Text)

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot alias, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a bot alias, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
putBotAlias_checksum :: Lens' PutBotAlias (Maybe Text)

-- | Settings for conversation logs for the alias.
putBotAlias_conversationLogs :: Lens' PutBotAlias (Maybe ConversationLogsRequest)

-- | The name of the alias. The name is <i>not</i> case sensitive.
putBotAlias_name :: Lens' PutBotAlias Text

-- | The version of the bot.
putBotAlias_botVersion :: Lens' PutBotAlias Text

-- | The name of the bot.
putBotAlias_botName :: Lens' PutBotAlias Text

-- | <i>See:</i> <a>newPutBotAliasResponse</a> smart constructor.
data PutBotAliasResponse
PutBotAliasResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe Text -> Maybe ConversationLogsResponse -> Int -> PutBotAliasResponse

-- | The date that the bot alias was created.
[$sel:createdDate:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe POSIX

-- | The name of the bot that the alias points to.
[$sel:botName:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe Text

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and the last updated date are the same.
[$sel:lastUpdatedDate:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe POSIX

-- | The version of the bot that the alias points to.
[$sel:botVersion:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe Text

-- | The name of the alias.
[$sel:name:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe Text

-- | A list of tags associated with a bot.
[$sel:tags:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe [Tag]

-- | A description of the alias.
[$sel:description:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe Text

-- | The checksum for the current version of the alias.
[$sel:checksum:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe Text

-- | The settings that determine how Amazon Lex uses conversation logs for
--   the alias.
[$sel:conversationLogs:PutBotAliasResponse'] :: PutBotAliasResponse -> Maybe ConversationLogsResponse

-- | The response's http status code.
[$sel:httpStatus:PutBotAliasResponse'] :: PutBotAliasResponse -> Int

-- | Create a value of <a>PutBotAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:PutBotAliasResponse'</a>,
--   <a>putBotAliasResponse_createdDate</a> - The date that the bot alias
--   was created.
--   
--   <a>$sel:botName:PutBotAlias'</a>, <a>putBotAliasResponse_botName</a> -
--   The name of the bot that the alias points to.
--   
--   <a>$sel:lastUpdatedDate:PutBotAliasResponse'</a>,
--   <a>putBotAliasResponse_lastUpdatedDate</a> - The date that the bot
--   alias was updated. When you create a resource, the creation date and
--   the last updated date are the same.
--   
--   <a>$sel:botVersion:PutBotAlias'</a>,
--   <a>putBotAliasResponse_botVersion</a> - The version of the bot that
--   the alias points to.
--   
--   <a>$sel:name:PutBotAlias'</a>, <a>putBotAliasResponse_name</a> - The
--   name of the alias.
--   
--   <a>$sel:tags:PutBotAlias'</a>, <a>putBotAliasResponse_tags</a> - A
--   list of tags associated with a bot.
--   
--   <a>$sel:description:PutBotAlias'</a>,
--   <a>putBotAliasResponse_description</a> - A description of the alias.
--   
--   <a>$sel:checksum:PutBotAlias'</a>, <a>putBotAliasResponse_checksum</a>
--   - The checksum for the current version of the alias.
--   
--   <a>$sel:conversationLogs:PutBotAlias'</a>,
--   <a>putBotAliasResponse_conversationLogs</a> - The settings that
--   determine how Amazon Lex uses conversation logs for the alias.
--   
--   <a>$sel:httpStatus:PutBotAliasResponse'</a>,
--   <a>putBotAliasResponse_httpStatus</a> - The response's http status
--   code.
newPutBotAliasResponse :: Int -> PutBotAliasResponse

-- | The date that the bot alias was created.
putBotAliasResponse_createdDate :: Lens' PutBotAliasResponse (Maybe UTCTime)

-- | The name of the bot that the alias points to.
putBotAliasResponse_botName :: Lens' PutBotAliasResponse (Maybe Text)

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and the last updated date are the same.
putBotAliasResponse_lastUpdatedDate :: Lens' PutBotAliasResponse (Maybe UTCTime)

-- | The version of the bot that the alias points to.
putBotAliasResponse_botVersion :: Lens' PutBotAliasResponse (Maybe Text)

-- | The name of the alias.
putBotAliasResponse_name :: Lens' PutBotAliasResponse (Maybe Text)

-- | A list of tags associated with a bot.
putBotAliasResponse_tags :: Lens' PutBotAliasResponse (Maybe [Tag])

-- | A description of the alias.
putBotAliasResponse_description :: Lens' PutBotAliasResponse (Maybe Text)

-- | The checksum for the current version of the alias.
putBotAliasResponse_checksum :: Lens' PutBotAliasResponse (Maybe Text)

-- | The settings that determine how Amazon Lex uses conversation logs for
--   the alias.
putBotAliasResponse_conversationLogs :: Lens' PutBotAliasResponse (Maybe ConversationLogsResponse)

-- | The response's http status code.
putBotAliasResponse_httpStatus :: Lens' PutBotAliasResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance GHC.Show.Show Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance GHC.Read.Read Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance GHC.Classes.Eq Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance GHC.Generics.Generic Network.AWS.LexModels.PutBotAlias.PutBotAliasResponse
instance GHC.Show.Show Network.AWS.LexModels.PutBotAlias.PutBotAliasResponse
instance GHC.Read.Read Network.AWS.LexModels.PutBotAlias.PutBotAliasResponse
instance GHC.Classes.Eq Network.AWS.LexModels.PutBotAlias.PutBotAliasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance Control.DeepSeq.NFData Network.AWS.LexModels.PutBotAlias.PutBotAliasResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance Control.DeepSeq.NFData Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.PutBotAlias.PutBotAlias
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.PutBotAlias.PutBotAlias


-- | Creates an Amazon Lex conversational bot or replaces an existing bot.
--   When you create or update a bot you are only required to specify a
--   name, a locale, and whether the bot is directed toward children under
--   age 13. You can use this to add intents later, or to remove intents
--   from an existing bot. When you create a bot with the minimum
--   information, the bot is created or updated but Amazon Lex returns the
--   @<tt> response </tt>FAILED@. You can build the bot after you add one
--   or more intents. For more information about Amazon Lex bots, see
--   how-it-works.
--   
--   If you specify the name of an existing bot, the fields in the request
--   replace the existing values in the <tt>$LATEST</tt> version of the
--   bot. Amazon Lex removes any fields that you don't provide values for
--   in the request, except for the <tt>idleTTLInSeconds</tt> and
--   <tt>privacySettings</tt> fields, which are set to their default
--   values. If you don't specify values for required fields, Amazon Lex
--   throws an exception.
--   
--   This operation requires permissions for the <tt>lex:PutBot</tt>
--   action. For more information, see security-iam.
module Network.AWS.LexModels.PutBot

-- | <i>See:</i> <a>newPutBot</a> smart constructor.
data PutBot
PutBot' :: Maybe Statement -> Maybe ProcessBehavior -> Maybe Text -> Maybe Prompt -> Maybe Double -> Maybe Bool -> Maybe Natural -> Maybe [Intent] -> Maybe [Tag] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Text -> Locale -> Bool -> PutBot

-- | When Amazon Lex can't understand the user's input in context, it tries
--   to elicit the information a few times. After that, Amazon Lex sends
--   the message defined in <tt>abortStatement</tt> to the user, and then
--   cancels the conversation. To set the number of retries, use the
--   <tt>valueElicitationPrompt</tt> field for the slot type.
--   
--   For example, in a pizza ordering bot, Amazon Lex might ask a user
--   "What type of crust would you like?" If the user's response is not one
--   of the expected responses (for example, "thin crust, "deep dish,"
--   etc.), Amazon Lex tries to elicit a correct response a few more times.
--   
--   For example, in a pizza ordering application, <tt>OrderPizza</tt>
--   might be one of the intents. This intent might require the
--   <tt>CrustType</tt> slot. You specify the
--   <tt>valueElicitationPrompt</tt> field when you create the
--   <tt>CrustType</tt> slot.
--   
--   If you have defined a fallback intent the cancel statement will not be
--   sent to the user, the fallback intent is used instead. For more
--   information, see <a>AMAZON.FallbackIntent</a>.
[$sel:abortStatement:PutBot'] :: PutBot -> Maybe Statement

-- | If you set the <tt>processBehavior</tt> element to <tt>BUILD</tt>,
--   Amazon Lex builds the bot so that it can be run. If you set the
--   element to <tt>SAVE</tt> Amazon Lex saves the bot, but doesn't build
--   it.
--   
--   If you don't specify this value, the default value is <tt>BUILD</tt>.
[$sel:processBehavior:PutBot'] :: PutBot -> Maybe ProcessBehavior

-- | The Amazon Polly voice ID that you want Amazon Lex to use for voice
--   interactions with the user. The locale configured for the voice must
--   match the locale of the bot. For more information, see <a>Voices in
--   Amazon Polly</a> in the <i>Amazon Polly Developer Guide</i>.
[$sel:voiceId:PutBot'] :: PutBot -> Maybe Text

-- | When Amazon Lex doesn't understand the user's intent, it uses this
--   message to get clarification. To specify how many times Amazon Lex
--   should repeat the clarification prompt, use the <tt>maxAttempts</tt>
--   field. If Amazon Lex still doesn't understand, it sends the message in
--   the <tt>abortStatement</tt> field.
--   
--   When you create a clarification prompt, make sure that it suggests the
--   correct response from the user. for example, for a bot that orders
--   pizza and drinks, you might create this clarification prompt: "What
--   would you like to do? You can say 'Order a pizza' or 'Order a drink.'"
--   
--   If you have defined a fallback intent, it will be invoked if the
--   clarification prompt is repeated the number of times defined in the
--   <tt>maxAttempts</tt> field. For more information, see
--   <a>AMAZON.FallbackIntent</a>.
--   
--   If you don't define a clarification prompt, at runtime Amazon Lex will
--   return a 400 Bad Request exception in three cases:
--   
--   <ul>
--   <li>Follow-up prompt - When the user responds to a follow-up prompt
--   but does not provide an intent. For example, in response to a
--   follow-up prompt that says "Would you like anything else today?" the
--   user says "Yes." Amazon Lex will return a 400 Bad Request exception
--   because it does not have a clarification prompt to send to the user to
--   get an intent.</li>
--   <li>Lambda function - When using a Lambda function, you return an
--   <tt>ElicitIntent</tt> dialog type. Since Amazon Lex does not have a
--   clarification prompt to get an intent from the user, it returns a 400
--   Bad Request exception.</li>
--   <li>PutSession operation - When using the <tt>PutSession</tt>
--   operation, you send an <tt>ElicitIntent</tt> dialog type. Since Amazon
--   Lex does not have a clarification prompt to get an intent from the
--   user, it returns a 400 Bad Request exception.</li>
--   </ul>
[$sel:clarificationPrompt:PutBot'] :: PutBot -> Maybe Prompt

-- | Determines the threshold where Amazon Lex will insert the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> and
--   <tt>AMAZON.KendraSearchIntent</tt> are only inserted if they are
--   configured for the bot.
--   
--   You must set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> to use confidence scores in the following regions.
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default.
--   
--   For example, suppose a bot is configured with the confidence threshold
--   of 0.80 and the <tt>AMAZON.FallbackIntent</tt>. Amazon Lex returns
--   three alternative intents with the following confidence scores:
--   IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the
--   <tt>PostText</tt> operation would be:
--   
--   <ul>
--   <li>AMAZON.FallbackIntent</li>
--   <li>IntentA</li>
--   <li>IntentB</li>
--   <li>IntentC</li>
--   </ul>
[$sel:nluIntentConfidenceThreshold:PutBot'] :: PutBot -> Maybe Double

-- | Set to <tt>true</tt> to enable access to natural language
--   understanding improvements.
--   
--   When you set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> you can use the <tt>nluIntentConfidenceThreshold</tt>
--   parameter to configure confidence scores. For more information, see
--   <a>Confidence Scores</a>.
--   
--   You can only set the <tt>enableModelImprovements</tt> parameter in
--   certain Regions. If you set the parameter to <tt>true</tt>, your bot
--   has access to accuracy improvements.
--   
--   The Regions where you can set the <tt>enableModelImprovements</tt>
--   parameter to <tt>true</tt> are:
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default. In these Regions setting the
--   parameter to <tt>false</tt> throws a <tt>ValidationException</tt>
--   exception.
[$sel:enableModelImprovements:PutBot'] :: PutBot -> Maybe Bool

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation.
--   
--   A user interaction session remains active for the amount of time
--   specified. If no conversation occurs during this time, the session
--   expires and Amazon Lex deletes any data provided before the timeout.
--   
--   For example, suppose that a user chooses the OrderPizza intent, but
--   gets sidetracked halfway through placing an order. If the user doesn't
--   complete the order within the specified time, Amazon Lex discards the
--   slot information that it gathered, and the user must start over.
--   
--   If you don't include the <tt>idleSessionTTLInSeconds</tt> element in a
--   <tt>PutBot</tt> operation request, Amazon Lex uses the default value.
--   This is also true if the request replaces an existing bot.
--   
--   The default is 300 seconds (5 minutes).
[$sel:idleSessionTTLInSeconds:PutBot'] :: PutBot -> Maybe Natural

-- | An array of <tt>Intent</tt> objects. Each intent represents a command
--   that a user can express. For example, a pizza ordering bot might
--   support an OrderPizza intent. For more information, see how-it-works.
[$sel:intents:PutBot'] :: PutBot -> Maybe [Intent]

-- | A list of tags to add to the bot. You can only add tags when you
--   create a bot, you can't use the <tt>PutBot</tt> operation to update
--   the tags on a bot. To update tags, use the <tt>TagResource</tt>
--   operation.
[$sel:tags:PutBot'] :: PutBot -> Maybe [Tag]

-- | A description of the bot.
[$sel:description:PutBot'] :: PutBot -> Maybe Text

-- | When set to <tt>true</tt> a new numbered version of the bot is
--   created. This is the same as calling the <tt>CreateBotVersion</tt>
--   operation. If you don't specify <tt>createVersion</tt>, the default is
--   <tt>false</tt>.
[$sel:createVersion:PutBot'] :: PutBot -> Maybe Bool

-- | When set to <tt>true</tt> user utterances are sent to Amazon
--   Comprehend for sentiment analysis. If you don't specify
--   <tt>detectSentiment</tt>, the default is <tt>false</tt>.
[$sel:detectSentiment:PutBot'] :: PutBot -> Maybe Bool

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot, leave the <tt>checksum</tt> field blank. If
--   you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a bot, set the <tt>checksum</tt> field to the
--   checksum of the most recent revision of the <tt>$LATEST</tt> version.
--   If you don't specify the <tt> checksum</tt> field, or if the checksum
--   does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
[$sel:checksum:PutBot'] :: PutBot -> Maybe Text

-- | The name of the bot. The name is <i>not</i> case sensitive.
[$sel:name:PutBot'] :: PutBot -> Text

-- | Specifies the target locale for the bot. Any intent used in the bot
--   must be compatible with the locale of the bot.
--   
--   The default is <tt>en-US</tt>.
[$sel:locale:PutBot'] :: PutBot -> Locale

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
[$sel:childDirected:PutBot'] :: PutBot -> Bool

-- | Create a value of <a>PutBot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abortStatement:PutBot'</a>, <a>putBot_abortStatement</a> -
--   When Amazon Lex can't understand the user's input in context, it tries
--   to elicit the information a few times. After that, Amazon Lex sends
--   the message defined in <tt>abortStatement</tt> to the user, and then
--   cancels the conversation. To set the number of retries, use the
--   <tt>valueElicitationPrompt</tt> field for the slot type.
--   
--   For example, in a pizza ordering bot, Amazon Lex might ask a user
--   "What type of crust would you like?" If the user's response is not one
--   of the expected responses (for example, "thin crust, "deep dish,"
--   etc.), Amazon Lex tries to elicit a correct response a few more times.
--   
--   For example, in a pizza ordering application, <tt>OrderPizza</tt>
--   might be one of the intents. This intent might require the
--   <tt>CrustType</tt> slot. You specify the
--   <tt>valueElicitationPrompt</tt> field when you create the
--   <tt>CrustType</tt> slot.
--   
--   If you have defined a fallback intent the cancel statement will not be
--   sent to the user, the fallback intent is used instead. For more
--   information, see <a>AMAZON.FallbackIntent</a>.
--   
--   <a>$sel:processBehavior:PutBot'</a>, <a>putBot_processBehavior</a> -
--   If you set the <tt>processBehavior</tt> element to <tt>BUILD</tt>,
--   Amazon Lex builds the bot so that it can be run. If you set the
--   element to <tt>SAVE</tt> Amazon Lex saves the bot, but doesn't build
--   it.
--   
--   If you don't specify this value, the default value is <tt>BUILD</tt>.
--   
--   <a>$sel:voiceId:PutBot'</a>, <a>putBot_voiceId</a> - The Amazon Polly
--   voice ID that you want Amazon Lex to use for voice interactions with
--   the user. The locale configured for the voice must match the locale of
--   the bot. For more information, see <a>Voices in Amazon Polly</a> in
--   the <i>Amazon Polly Developer Guide</i>.
--   
--   <a>$sel:clarificationPrompt:PutBot'</a>,
--   <a>putBot_clarificationPrompt</a> - When Amazon Lex doesn't understand
--   the user's intent, it uses this message to get clarification. To
--   specify how many times Amazon Lex should repeat the clarification
--   prompt, use the <tt>maxAttempts</tt> field. If Amazon Lex still
--   doesn't understand, it sends the message in the
--   <tt>abortStatement</tt> field.
--   
--   When you create a clarification prompt, make sure that it suggests the
--   correct response from the user. for example, for a bot that orders
--   pizza and drinks, you might create this clarification prompt: "What
--   would you like to do? You can say 'Order a pizza' or 'Order a drink.'"
--   
--   If you have defined a fallback intent, it will be invoked if the
--   clarification prompt is repeated the number of times defined in the
--   <tt>maxAttempts</tt> field. For more information, see
--   <a>AMAZON.FallbackIntent</a>.
--   
--   If you don't define a clarification prompt, at runtime Amazon Lex will
--   return a 400 Bad Request exception in three cases:
--   
--   <ul>
--   <li>Follow-up prompt - When the user responds to a follow-up prompt
--   but does not provide an intent. For example, in response to a
--   follow-up prompt that says "Would you like anything else today?" the
--   user says "Yes." Amazon Lex will return a 400 Bad Request exception
--   because it does not have a clarification prompt to send to the user to
--   get an intent.</li>
--   <li>Lambda function - When using a Lambda function, you return an
--   <tt>ElicitIntent</tt> dialog type. Since Amazon Lex does not have a
--   clarification prompt to get an intent from the user, it returns a 400
--   Bad Request exception.</li>
--   <li>PutSession operation - When using the <tt>PutSession</tt>
--   operation, you send an <tt>ElicitIntent</tt> dialog type. Since Amazon
--   Lex does not have a clarification prompt to get an intent from the
--   user, it returns a 400 Bad Request exception.</li>
--   </ul>
--   
--   <a>$sel:nluIntentConfidenceThreshold:PutBot'</a>,
--   <a>putBot_nluIntentConfidenceThreshold</a> - Determines the threshold
--   where Amazon Lex will insert the <tt>AMAZON.FallbackIntent</tt>,
--   <tt>AMAZON.KendraSearchIntent</tt>, or both when returning alternative
--   intents in a <a>PostContent</a> or <a>PostText</a> response.
--   <tt>AMAZON.FallbackIntent</tt> and <tt>AMAZON.KendraSearchIntent</tt>
--   are only inserted if they are configured for the bot.
--   
--   You must set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> to use confidence scores in the following regions.
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default.
--   
--   For example, suppose a bot is configured with the confidence threshold
--   of 0.80 and the <tt>AMAZON.FallbackIntent</tt>. Amazon Lex returns
--   three alternative intents with the following confidence scores:
--   IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the
--   <tt>PostText</tt> operation would be:
--   
--   <ul>
--   <li>AMAZON.FallbackIntent</li>
--   <li>IntentA</li>
--   <li>IntentB</li>
--   <li>IntentC</li>
--   </ul>
--   
--   <a>$sel:enableModelImprovements:PutBot'</a>,
--   <a>putBot_enableModelImprovements</a> - Set to <tt>true</tt> to enable
--   access to natural language understanding improvements.
--   
--   When you set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> you can use the <tt>nluIntentConfidenceThreshold</tt>
--   parameter to configure confidence scores. For more information, see
--   <a>Confidence Scores</a>.
--   
--   You can only set the <tt>enableModelImprovements</tt> parameter in
--   certain Regions. If you set the parameter to <tt>true</tt>, your bot
--   has access to accuracy improvements.
--   
--   The Regions where you can set the <tt>enableModelImprovements</tt>
--   parameter to <tt>true</tt> are:
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default. In these Regions setting the
--   parameter to <tt>false</tt> throws a <tt>ValidationException</tt>
--   exception.
--   
--   <a>$sel:idleSessionTTLInSeconds:PutBot'</a>,
--   <a>putBot_idleSessionTTLInSeconds</a> - The maximum time in seconds
--   that Amazon Lex retains the data gathered in a conversation.
--   
--   A user interaction session remains active for the amount of time
--   specified. If no conversation occurs during this time, the session
--   expires and Amazon Lex deletes any data provided before the timeout.
--   
--   For example, suppose that a user chooses the OrderPizza intent, but
--   gets sidetracked halfway through placing an order. If the user doesn't
--   complete the order within the specified time, Amazon Lex discards the
--   slot information that it gathered, and the user must start over.
--   
--   If you don't include the <tt>idleSessionTTLInSeconds</tt> element in a
--   <tt>PutBot</tt> operation request, Amazon Lex uses the default value.
--   This is also true if the request replaces an existing bot.
--   
--   The default is 300 seconds (5 minutes).
--   
--   <a>$sel:intents:PutBot'</a>, <a>putBot_intents</a> - An array of
--   <tt>Intent</tt> objects. Each intent represents a command that a user
--   can express. For example, a pizza ordering bot might support an
--   OrderPizza intent. For more information, see how-it-works.
--   
--   <a>$sel:tags:PutBot'</a>, <a>putBot_tags</a> - A list of tags to add
--   to the bot. You can only add tags when you create a bot, you can't use
--   the <tt>PutBot</tt> operation to update the tags on a bot. To update
--   tags, use the <tt>TagResource</tt> operation.
--   
--   <a>$sel:description:PutBot'</a>, <a>putBot_description</a> - A
--   description of the bot.
--   
--   <a>$sel:createVersion:PutBot'</a>, <a>putBot_createVersion</a> - When
--   set to <tt>true</tt> a new numbered version of the bot is created.
--   This is the same as calling the <tt>CreateBotVersion</tt> operation.
--   If you don't specify <tt>createVersion</tt>, the default is
--   <tt>false</tt>.
--   
--   <a>$sel:detectSentiment:PutBot'</a>, <a>putBot_detectSentiment</a> -
--   When set to <tt>true</tt> user utterances are sent to Amazon
--   Comprehend for sentiment analysis. If you don't specify
--   <tt>detectSentiment</tt>, the default is <tt>false</tt>.
--   
--   <a>$sel:checksum:PutBot'</a>, <a>putBot_checksum</a> - Identifies a
--   specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot, leave the <tt>checksum</tt> field blank. If
--   you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a bot, set the <tt>checksum</tt> field to the
--   checksum of the most recent revision of the <tt>$LATEST</tt> version.
--   If you don't specify the <tt> checksum</tt> field, or if the checksum
--   does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
--   
--   <a>$sel:name:PutBot'</a>, <a>putBot_name</a> - The name of the bot.
--   The name is <i>not</i> case sensitive.
--   
--   <a>$sel:locale:PutBot'</a>, <a>putBot_locale</a> - Specifies the
--   target locale for the bot. Any intent used in the bot must be
--   compatible with the locale of the bot.
--   
--   The default is <tt>en-US</tt>.
--   
--   <a>$sel:childDirected:PutBot'</a>, <a>putBot_childDirected</a> - For
--   each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
newPutBot :: Text -> Locale -> Bool -> PutBot

-- | When Amazon Lex can't understand the user's input in context, it tries
--   to elicit the information a few times. After that, Amazon Lex sends
--   the message defined in <tt>abortStatement</tt> to the user, and then
--   cancels the conversation. To set the number of retries, use the
--   <tt>valueElicitationPrompt</tt> field for the slot type.
--   
--   For example, in a pizza ordering bot, Amazon Lex might ask a user
--   "What type of crust would you like?" If the user's response is not one
--   of the expected responses (for example, "thin crust, "deep dish,"
--   etc.), Amazon Lex tries to elicit a correct response a few more times.
--   
--   For example, in a pizza ordering application, <tt>OrderPizza</tt>
--   might be one of the intents. This intent might require the
--   <tt>CrustType</tt> slot. You specify the
--   <tt>valueElicitationPrompt</tt> field when you create the
--   <tt>CrustType</tt> slot.
--   
--   If you have defined a fallback intent the cancel statement will not be
--   sent to the user, the fallback intent is used instead. For more
--   information, see <a>AMAZON.FallbackIntent</a>.
putBot_abortStatement :: Lens' PutBot (Maybe Statement)

-- | If you set the <tt>processBehavior</tt> element to <tt>BUILD</tt>,
--   Amazon Lex builds the bot so that it can be run. If you set the
--   element to <tt>SAVE</tt> Amazon Lex saves the bot, but doesn't build
--   it.
--   
--   If you don't specify this value, the default value is <tt>BUILD</tt>.
putBot_processBehavior :: Lens' PutBot (Maybe ProcessBehavior)

-- | The Amazon Polly voice ID that you want Amazon Lex to use for voice
--   interactions with the user. The locale configured for the voice must
--   match the locale of the bot. For more information, see <a>Voices in
--   Amazon Polly</a> in the <i>Amazon Polly Developer Guide</i>.
putBot_voiceId :: Lens' PutBot (Maybe Text)

-- | When Amazon Lex doesn't understand the user's intent, it uses this
--   message to get clarification. To specify how many times Amazon Lex
--   should repeat the clarification prompt, use the <tt>maxAttempts</tt>
--   field. If Amazon Lex still doesn't understand, it sends the message in
--   the <tt>abortStatement</tt> field.
--   
--   When you create a clarification prompt, make sure that it suggests the
--   correct response from the user. for example, for a bot that orders
--   pizza and drinks, you might create this clarification prompt: "What
--   would you like to do? You can say 'Order a pizza' or 'Order a drink.'"
--   
--   If you have defined a fallback intent, it will be invoked if the
--   clarification prompt is repeated the number of times defined in the
--   <tt>maxAttempts</tt> field. For more information, see
--   <a>AMAZON.FallbackIntent</a>.
--   
--   If you don't define a clarification prompt, at runtime Amazon Lex will
--   return a 400 Bad Request exception in three cases:
--   
--   <ul>
--   <li>Follow-up prompt - When the user responds to a follow-up prompt
--   but does not provide an intent. For example, in response to a
--   follow-up prompt that says "Would you like anything else today?" the
--   user says "Yes." Amazon Lex will return a 400 Bad Request exception
--   because it does not have a clarification prompt to send to the user to
--   get an intent.</li>
--   <li>Lambda function - When using a Lambda function, you return an
--   <tt>ElicitIntent</tt> dialog type. Since Amazon Lex does not have a
--   clarification prompt to get an intent from the user, it returns a 400
--   Bad Request exception.</li>
--   <li>PutSession operation - When using the <tt>PutSession</tt>
--   operation, you send an <tt>ElicitIntent</tt> dialog type. Since Amazon
--   Lex does not have a clarification prompt to get an intent from the
--   user, it returns a 400 Bad Request exception.</li>
--   </ul>
putBot_clarificationPrompt :: Lens' PutBot (Maybe Prompt)

-- | Determines the threshold where Amazon Lex will insert the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> and
--   <tt>AMAZON.KendraSearchIntent</tt> are only inserted if they are
--   configured for the bot.
--   
--   You must set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> to use confidence scores in the following regions.
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default.
--   
--   For example, suppose a bot is configured with the confidence threshold
--   of 0.80 and the <tt>AMAZON.FallbackIntent</tt>. Amazon Lex returns
--   three alternative intents with the following confidence scores:
--   IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the
--   <tt>PostText</tt> operation would be:
--   
--   <ul>
--   <li>AMAZON.FallbackIntent</li>
--   <li>IntentA</li>
--   <li>IntentB</li>
--   <li>IntentC</li>
--   </ul>
putBot_nluIntentConfidenceThreshold :: Lens' PutBot (Maybe Double)

-- | Set to <tt>true</tt> to enable access to natural language
--   understanding improvements.
--   
--   When you set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> you can use the <tt>nluIntentConfidenceThreshold</tt>
--   parameter to configure confidence scores. For more information, see
--   <a>Confidence Scores</a>.
--   
--   You can only set the <tt>enableModelImprovements</tt> parameter in
--   certain Regions. If you set the parameter to <tt>true</tt>, your bot
--   has access to accuracy improvements.
--   
--   The Regions where you can set the <tt>enableModelImprovements</tt>
--   parameter to <tt>true</tt> are:
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default. In these Regions setting the
--   parameter to <tt>false</tt> throws a <tt>ValidationException</tt>
--   exception.
putBot_enableModelImprovements :: Lens' PutBot (Maybe Bool)

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation.
--   
--   A user interaction session remains active for the amount of time
--   specified. If no conversation occurs during this time, the session
--   expires and Amazon Lex deletes any data provided before the timeout.
--   
--   For example, suppose that a user chooses the OrderPizza intent, but
--   gets sidetracked halfway through placing an order. If the user doesn't
--   complete the order within the specified time, Amazon Lex discards the
--   slot information that it gathered, and the user must start over.
--   
--   If you don't include the <tt>idleSessionTTLInSeconds</tt> element in a
--   <tt>PutBot</tt> operation request, Amazon Lex uses the default value.
--   This is also true if the request replaces an existing bot.
--   
--   The default is 300 seconds (5 minutes).
putBot_idleSessionTTLInSeconds :: Lens' PutBot (Maybe Natural)

-- | An array of <tt>Intent</tt> objects. Each intent represents a command
--   that a user can express. For example, a pizza ordering bot might
--   support an OrderPizza intent. For more information, see how-it-works.
putBot_intents :: Lens' PutBot (Maybe [Intent])

-- | A list of tags to add to the bot. You can only add tags when you
--   create a bot, you can't use the <tt>PutBot</tt> operation to update
--   the tags on a bot. To update tags, use the <tt>TagResource</tt>
--   operation.
putBot_tags :: Lens' PutBot (Maybe [Tag])

-- | A description of the bot.
putBot_description :: Lens' PutBot (Maybe Text)

-- | When set to <tt>true</tt> a new numbered version of the bot is
--   created. This is the same as calling the <tt>CreateBotVersion</tt>
--   operation. If you don't specify <tt>createVersion</tt>, the default is
--   <tt>false</tt>.
putBot_createVersion :: Lens' PutBot (Maybe Bool)

-- | When set to <tt>true</tt> user utterances are sent to Amazon
--   Comprehend for sentiment analysis. If you don't specify
--   <tt>detectSentiment</tt>, the default is <tt>false</tt>.
putBot_detectSentiment :: Lens' PutBot (Maybe Bool)

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot, leave the <tt>checksum</tt> field blank. If
--   you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a bot, set the <tt>checksum</tt> field to the
--   checksum of the most recent revision of the <tt>$LATEST</tt> version.
--   If you don't specify the <tt> checksum</tt> field, or if the checksum
--   does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
putBot_checksum :: Lens' PutBot (Maybe Text)

-- | The name of the bot. The name is <i>not</i> case sensitive.
putBot_name :: Lens' PutBot Text

-- | Specifies the target locale for the bot. Any intent used in the bot
--   must be compatible with the locale of the bot.
--   
--   The default is <tt>en-US</tt>.
putBot_locale :: Lens' PutBot Locale

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
putBot_childDirected :: Lens' PutBot Bool

-- | <i>See:</i> <a>newPutBotResponse</a> smart constructor.
data PutBotResponse
PutBotResponse' :: Maybe Statement -> Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Prompt -> Maybe Double -> Maybe Locale -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [Intent] -> Maybe Text -> Maybe [Tag] -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Int -> PutBotResponse

-- | The message that Amazon Lex uses to cancel a conversation. For more
--   information, see PutBot.
[$sel:abortStatement:PutBotResponse'] :: PutBotResponse -> Maybe Statement

-- | The date that the bot was created.
[$sel:createdDate:PutBotResponse'] :: PutBotResponse -> Maybe POSIX

-- | When you send a request to create a bot with <tt>processBehavior</tt>
--   set to <tt>BUILD</tt>, Amazon Lex sets the <tt>status</tt> response
--   element to <tt>BUILDING</tt>.
--   
--   In the <tt>READY_BASIC_TESTING</tt> state you can test the bot with
--   user inputs that exactly match the utterances configured for the bot's
--   intents and values in the slot types.
--   
--   If Amazon Lex can't build the bot, Amazon Lex sets <tt>status</tt> to
--   <tt>FAILED</tt>. Amazon Lex returns the reason for the failure in the
--   <tt>failureReason</tt> response element.
--   
--   When you set <tt>processBehavior</tt> to <tt>SAVE</tt>, Amazon Lex
--   sets the status code to <tt>NOT BUILT</tt>.
--   
--   When the bot is in the <tt>READY</tt> state you can test and publish
--   the bot.
[$sel:status:PutBotResponse'] :: PutBotResponse -> Maybe LexStatus

-- | The date that the bot was updated. When you create a resource, the
--   creation date and last updated date are the same.
[$sel:lastUpdatedDate:PutBotResponse'] :: PutBotResponse -> Maybe POSIX

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interaction
--   with the user. For more information, see PutBot.
[$sel:voiceId:PutBotResponse'] :: PutBotResponse -> Maybe Text

-- | The prompts that Amazon Lex uses when it doesn't understand the user's
--   intent. For more information, see PutBot.
[$sel:clarificationPrompt:PutBotResponse'] :: PutBotResponse -> Maybe Prompt

-- | The score that determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
[$sel:nluIntentConfidenceThreshold:PutBotResponse'] :: PutBotResponse -> Maybe Double

-- | The target locale for the bot.
[$sel:locale:PutBotResponse'] :: PutBotResponse -> Maybe Locale

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
[$sel:enableModelImprovements:PutBotResponse'] :: PutBotResponse -> Maybe Bool

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
[$sel:version:PutBotResponse'] :: PutBotResponse -> Maybe Text

-- | The maximum length of time that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
[$sel:idleSessionTTLInSeconds:PutBotResponse'] :: PutBotResponse -> Maybe Natural

-- | The name of the bot.
[$sel:name:PutBotResponse'] :: PutBotResponse -> Maybe Text

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
[$sel:intents:PutBotResponse'] :: PutBotResponse -> Maybe [Intent]

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to build the bot.
[$sel:failureReason:PutBotResponse'] :: PutBotResponse -> Maybe Text

-- | A list of tags associated with the bot.
[$sel:tags:PutBotResponse'] :: PutBotResponse -> Maybe [Tag]

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
[$sel:childDirected:PutBotResponse'] :: PutBotResponse -> Maybe Bool

-- | A description of the bot.
[$sel:description:PutBotResponse'] :: PutBotResponse -> Maybe Text

-- | <tt>True</tt> if a new version of the bot was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
[$sel:createVersion:PutBotResponse'] :: PutBotResponse -> Maybe Bool

-- | <tt>true</tt> if the bot is configured to send user utterances to
--   Amazon Comprehend for sentiment analysis. If the
--   <tt>detectSentiment</tt> field was not specified in the request, the
--   <tt>detectSentiment</tt> field is <tt>false</tt> in the response.
[$sel:detectSentiment:PutBotResponse'] :: PutBotResponse -> Maybe Bool

-- | Checksum of the bot that you created.
[$sel:checksum:PutBotResponse'] :: PutBotResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutBotResponse'] :: PutBotResponse -> Int

-- | Create a value of <a>PutBotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abortStatement:PutBot'</a>,
--   <a>putBotResponse_abortStatement</a> - The message that Amazon Lex
--   uses to cancel a conversation. For more information, see PutBot.
--   
--   <a>$sel:createdDate:PutBotResponse'</a>,
--   <a>putBotResponse_createdDate</a> - The date that the bot was created.
--   
--   <a>$sel:status:PutBotResponse'</a>, <a>putBotResponse_status</a> -
--   When you send a request to create a bot with <tt>processBehavior</tt>
--   set to <tt>BUILD</tt>, Amazon Lex sets the <tt>status</tt> response
--   element to <tt>BUILDING</tt>.
--   
--   In the <tt>READY_BASIC_TESTING</tt> state you can test the bot with
--   user inputs that exactly match the utterances configured for the bot's
--   intents and values in the slot types.
--   
--   If Amazon Lex can't build the bot, Amazon Lex sets <tt>status</tt> to
--   <tt>FAILED</tt>. Amazon Lex returns the reason for the failure in the
--   <tt>failureReason</tt> response element.
--   
--   When you set <tt>processBehavior</tt> to <tt>SAVE</tt>, Amazon Lex
--   sets the status code to <tt>NOT BUILT</tt>.
--   
--   When the bot is in the <tt>READY</tt> state you can test and publish
--   the bot.
--   
--   <a>$sel:lastUpdatedDate:PutBotResponse'</a>,
--   <a>putBotResponse_lastUpdatedDate</a> - The date that the bot was
--   updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:voiceId:PutBot'</a>, <a>putBotResponse_voiceId</a> - The
--   Amazon Polly voice ID that Amazon Lex uses for voice interaction with
--   the user. For more information, see PutBot.
--   
--   <a>$sel:clarificationPrompt:PutBot'</a>,
--   <a>putBotResponse_clarificationPrompt</a> - The prompts that Amazon
--   Lex uses when it doesn't understand the user's intent. For more
--   information, see PutBot.
--   
--   <a>$sel:nluIntentConfidenceThreshold:PutBot'</a>,
--   <a>putBotResponse_nluIntentConfidenceThreshold</a> - The score that
--   determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
--   
--   <a>$sel:locale:PutBot'</a>, <a>putBotResponse_locale</a> - The target
--   locale for the bot.
--   
--   <a>$sel:enableModelImprovements:PutBot'</a>,
--   <a>putBotResponse_enableModelImprovements</a> - Indicates whether the
--   bot uses accuracy improvements. <tt>true</tt> indicates that the bot
--   is using the improvements, otherwise, <tt>false</tt>.
--   
--   <a>$sel:version:PutBotResponse'</a>, <a>putBotResponse_version</a> -
--   The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
--   
--   <a>$sel:idleSessionTTLInSeconds:PutBot'</a>,
--   <a>putBotResponse_idleSessionTTLInSeconds</a> - The maximum length of
--   time that Amazon Lex retains the data gathered in a conversation. For
--   more information, see PutBot.
--   
--   <a>$sel:name:PutBot'</a>, <a>putBotResponse_name</a> - The name of the
--   bot.
--   
--   <a>$sel:intents:PutBot'</a>, <a>putBotResponse_intents</a> - An array
--   of <tt>Intent</tt> objects. For more information, see PutBot.
--   
--   <a>$sel:failureReason:PutBotResponse'</a>,
--   <a>putBotResponse_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   build the bot.
--   
--   <a>$sel:tags:PutBot'</a>, <a>putBotResponse_tags</a> - A list of tags
--   associated with the bot.
--   
--   <a>$sel:childDirected:PutBot'</a>, <a>putBotResponse_childDirected</a>
--   - For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
--   
--   <a>$sel:description:PutBot'</a>, <a>putBotResponse_description</a> - A
--   description of the bot.
--   
--   <a>$sel:createVersion:PutBot'</a>, <a>putBotResponse_createVersion</a>
--   - <tt>True</tt> if a new version of the bot was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
--   
--   <a>$sel:detectSentiment:PutBot'</a>,
--   <a>putBotResponse_detectSentiment</a> - <tt>true</tt> if the bot is
--   configured to send user utterances to Amazon Comprehend for sentiment
--   analysis. If the <tt>detectSentiment</tt> field was not specified in
--   the request, the <tt>detectSentiment</tt> field is <tt>false</tt> in
--   the response.
--   
--   <a>$sel:checksum:PutBot'</a>, <a>putBotResponse_checksum</a> -
--   Checksum of the bot that you created.
--   
--   <a>$sel:httpStatus:PutBotResponse'</a>,
--   <a>putBotResponse_httpStatus</a> - The response's http status code.
newPutBotResponse :: Int -> PutBotResponse

-- | The message that Amazon Lex uses to cancel a conversation. For more
--   information, see PutBot.
putBotResponse_abortStatement :: Lens' PutBotResponse (Maybe Statement)

-- | The date that the bot was created.
putBotResponse_createdDate :: Lens' PutBotResponse (Maybe UTCTime)

-- | When you send a request to create a bot with <tt>processBehavior</tt>
--   set to <tt>BUILD</tt>, Amazon Lex sets the <tt>status</tt> response
--   element to <tt>BUILDING</tt>.
--   
--   In the <tt>READY_BASIC_TESTING</tt> state you can test the bot with
--   user inputs that exactly match the utterances configured for the bot's
--   intents and values in the slot types.
--   
--   If Amazon Lex can't build the bot, Amazon Lex sets <tt>status</tt> to
--   <tt>FAILED</tt>. Amazon Lex returns the reason for the failure in the
--   <tt>failureReason</tt> response element.
--   
--   When you set <tt>processBehavior</tt> to <tt>SAVE</tt>, Amazon Lex
--   sets the status code to <tt>NOT BUILT</tt>.
--   
--   When the bot is in the <tt>READY</tt> state you can test and publish
--   the bot.
putBotResponse_status :: Lens' PutBotResponse (Maybe LexStatus)

-- | The date that the bot was updated. When you create a resource, the
--   creation date and last updated date are the same.
putBotResponse_lastUpdatedDate :: Lens' PutBotResponse (Maybe UTCTime)

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interaction
--   with the user. For more information, see PutBot.
putBotResponse_voiceId :: Lens' PutBotResponse (Maybe Text)

-- | The prompts that Amazon Lex uses when it doesn't understand the user's
--   intent. For more information, see PutBot.
putBotResponse_clarificationPrompt :: Lens' PutBotResponse (Maybe Prompt)

-- | The score that determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
putBotResponse_nluIntentConfidenceThreshold :: Lens' PutBotResponse (Maybe Double)

-- | The target locale for the bot.
putBotResponse_locale :: Lens' PutBotResponse (Maybe Locale)

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
putBotResponse_enableModelImprovements :: Lens' PutBotResponse (Maybe Bool)

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
putBotResponse_version :: Lens' PutBotResponse (Maybe Text)

-- | The maximum length of time that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
putBotResponse_idleSessionTTLInSeconds :: Lens' PutBotResponse (Maybe Natural)

-- | The name of the bot.
putBotResponse_name :: Lens' PutBotResponse (Maybe Text)

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
putBotResponse_intents :: Lens' PutBotResponse (Maybe [Intent])

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to build the bot.
putBotResponse_failureReason :: Lens' PutBotResponse (Maybe Text)

-- | A list of tags associated with the bot.
putBotResponse_tags :: Lens' PutBotResponse (Maybe [Tag])

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
putBotResponse_childDirected :: Lens' PutBotResponse (Maybe Bool)

-- | A description of the bot.
putBotResponse_description :: Lens' PutBotResponse (Maybe Text)

-- | <tt>True</tt> if a new version of the bot was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
putBotResponse_createVersion :: Lens' PutBotResponse (Maybe Bool)

-- | <tt>true</tt> if the bot is configured to send user utterances to
--   Amazon Comprehend for sentiment analysis. If the
--   <tt>detectSentiment</tt> field was not specified in the request, the
--   <tt>detectSentiment</tt> field is <tt>false</tt> in the response.
putBotResponse_detectSentiment :: Lens' PutBotResponse (Maybe Bool)

-- | Checksum of the bot that you created.
putBotResponse_checksum :: Lens' PutBotResponse (Maybe Text)

-- | The response's http status code.
putBotResponse_httpStatus :: Lens' PutBotResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.PutBot.PutBot
instance GHC.Show.Show Network.AWS.LexModels.PutBot.PutBot
instance GHC.Read.Read Network.AWS.LexModels.PutBot.PutBot
instance GHC.Classes.Eq Network.AWS.LexModels.PutBot.PutBot
instance GHC.Generics.Generic Network.AWS.LexModels.PutBot.PutBotResponse
instance GHC.Show.Show Network.AWS.LexModels.PutBot.PutBotResponse
instance GHC.Read.Read Network.AWS.LexModels.PutBot.PutBotResponse
instance GHC.Classes.Eq Network.AWS.LexModels.PutBot.PutBotResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.PutBot.PutBot
instance Control.DeepSeq.NFData Network.AWS.LexModels.PutBot.PutBotResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.PutBot.PutBot
instance Control.DeepSeq.NFData Network.AWS.LexModels.PutBot.PutBot
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.PutBot.PutBot
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.PutBot.PutBot
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.PutBot.PutBot
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.PutBot.PutBot


-- | Gets a list of tags associated with the specified resource. Only bots,
--   bot aliases, and bot channels can have tags associated with them.
module Network.AWS.LexModels.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource to get a list of tags
--   for.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource to get a list of tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource to get a list of tags
--   for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The tags associated with a resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags associated with a
--   resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags associated with a resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.LexModels.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.LexModels.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.LexModels.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.LexModels.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.LexModels.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.ListTagsForResource.ListTagsForResource


-- | Use the <tt>GetUtterancesView</tt> operation to get information about
--   the utterances that your users have made to your bot. You can use this
--   list to tune the utterances that your bot responds to.
--   
--   For example, say that you have created a bot to order flowers. After
--   your users have used your bot for a while, use the
--   <tt>GetUtterancesView</tt> operation to see the requests that they
--   have made and whether they have been successful. You might find that
--   the utterance "I want flowers" is not being recognized. You could add
--   this utterance to the <tt>OrderFlowers</tt> intent so that your bot
--   recognizes that utterance.
--   
--   After you publish a new version of a bot, you can get information
--   about the old version and the new so that you can compare the
--   performance across the two versions.
--   
--   Utterance statistics are generated once a day. Data is available for
--   the last 15 days. You can request information for up to 5 versions of
--   your bot in each request. Amazon Lex returns the most frequent
--   utterances received by the bot in the last 15 days. The response
--   contains information about a maximum of 100 utterances for each
--   version.
--   
--   If you set <tt>childDirected</tt> field to true when you created your
--   bot, if you are using slot obfuscation with one or more slots, or if
--   you opted out of participating in improving Amazon Lex, utterances are
--   not available.
--   
--   This operation requires permissions for the
--   <tt>lex:GetUtterancesView</tt> action.
module Network.AWS.LexModels.GetUtterancesView

-- | <i>See:</i> <a>newGetUtterancesView</a> smart constructor.
data GetUtterancesView
GetUtterancesView' :: Text -> NonEmpty Text -> StatusType -> GetUtterancesView

-- | The name of the bot for which utterance information should be
--   returned.
[$sel:botName:GetUtterancesView'] :: GetUtterancesView -> Text

-- | An array of bot versions for which utterance information should be
--   returned. The limit is 5 versions per request.
[$sel:botVersions:GetUtterancesView'] :: GetUtterancesView -> NonEmpty Text

-- | To return utterances that were recognized and handled, use
--   <tt>Detected</tt>. To return utterances that were not recognized, use
--   <tt>Missed</tt>.
[$sel:statusType:GetUtterancesView'] :: GetUtterancesView -> StatusType

-- | Create a value of <a>GetUtterancesView</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botName:GetUtterancesView'</a>,
--   <a>getUtterancesView_botName</a> - The name of the bot for which
--   utterance information should be returned.
--   
--   <a>$sel:botVersions:GetUtterancesView'</a>,
--   <a>getUtterancesView_botVersions</a> - An array of bot versions for
--   which utterance information should be returned. The limit is 5
--   versions per request.
--   
--   <a>$sel:statusType:GetUtterancesView'</a>,
--   <a>getUtterancesView_statusType</a> - To return utterances that were
--   recognized and handled, use <tt>Detected</tt>. To return utterances
--   that were not recognized, use <tt>Missed</tt>.
newGetUtterancesView :: Text -> NonEmpty Text -> StatusType -> GetUtterancesView

-- | The name of the bot for which utterance information should be
--   returned.
getUtterancesView_botName :: Lens' GetUtterancesView Text

-- | An array of bot versions for which utterance information should be
--   returned. The limit is 5 versions per request.
getUtterancesView_botVersions :: Lens' GetUtterancesView (NonEmpty Text)

-- | To return utterances that were recognized and handled, use
--   <tt>Detected</tt>. To return utterances that were not recognized, use
--   <tt>Missed</tt>.
getUtterancesView_statusType :: Lens' GetUtterancesView StatusType

-- | <i>See:</i> <a>newGetUtterancesViewResponse</a> smart constructor.
data GetUtterancesViewResponse
GetUtterancesViewResponse' :: Maybe Text -> Maybe [UtteranceList] -> Int -> GetUtterancesViewResponse

-- | The name of the bot for which utterance information was returned.
[$sel:botName:GetUtterancesViewResponse'] :: GetUtterancesViewResponse -> Maybe Text

-- | An array of UtteranceList objects, each containing a list of
--   UtteranceData objects describing the utterances that were processed by
--   your bot. The response contains a maximum of 100
--   <tt>UtteranceData</tt> objects for each version. Amazon Lex returns
--   the most frequent utterances received by the bot in the last 15 days.
[$sel:utterances:GetUtterancesViewResponse'] :: GetUtterancesViewResponse -> Maybe [UtteranceList]

-- | The response's http status code.
[$sel:httpStatus:GetUtterancesViewResponse'] :: GetUtterancesViewResponse -> Int

-- | Create a value of <a>GetUtterancesViewResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botName:GetUtterancesView'</a>,
--   <a>getUtterancesViewResponse_botName</a> - The name of the bot for
--   which utterance information was returned.
--   
--   <a>$sel:utterances:GetUtterancesViewResponse'</a>,
--   <a>getUtterancesViewResponse_utterances</a> - An array of
--   UtteranceList objects, each containing a list of UtteranceData objects
--   describing the utterances that were processed by your bot. The
--   response contains a maximum of 100 <tt>UtteranceData</tt> objects for
--   each version. Amazon Lex returns the most frequent utterances received
--   by the bot in the last 15 days.
--   
--   <a>$sel:httpStatus:GetUtterancesViewResponse'</a>,
--   <a>getUtterancesViewResponse_httpStatus</a> - The response's http
--   status code.
newGetUtterancesViewResponse :: Int -> GetUtterancesViewResponse

-- | The name of the bot for which utterance information was returned.
getUtterancesViewResponse_botName :: Lens' GetUtterancesViewResponse (Maybe Text)

-- | An array of UtteranceList objects, each containing a list of
--   UtteranceData objects describing the utterances that were processed by
--   your bot. The response contains a maximum of 100
--   <tt>UtteranceData</tt> objects for each version. Amazon Lex returns
--   the most frequent utterances received by the bot in the last 15 days.
getUtterancesViewResponse_utterances :: Lens' GetUtterancesViewResponse (Maybe [UtteranceList])

-- | The response's http status code.
getUtterancesViewResponse_httpStatus :: Lens' GetUtterancesViewResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance GHC.Show.Show Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance GHC.Read.Read Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance GHC.Classes.Eq Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance GHC.Generics.Generic Network.AWS.LexModels.GetUtterancesView.GetUtterancesViewResponse
instance GHC.Show.Show Network.AWS.LexModels.GetUtterancesView.GetUtterancesViewResponse
instance GHC.Read.Read Network.AWS.LexModels.GetUtterancesView.GetUtterancesViewResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetUtterancesView.GetUtterancesViewResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetUtterancesView.GetUtterancesViewResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetUtterancesView.GetUtterancesView
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetUtterancesView.GetUtterancesView


-- | Returns slot type information as follows:
--   
--   <ul>
--   <li>If you specify the <tt>nameContains</tt> field, returns the
--   <tt>$LATEST</tt> version of all slot types that contain the specified
--   string.</li>
--   <li>If you don't specify the <tt>nameContains</tt> field, returns
--   information about the <tt>$LATEST</tt> version of all slot types.</li>
--   </ul>
--   
--   The operation requires permission for the <tt>lex:GetSlotTypes</tt>
--   action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetSlotTypes

-- | <i>See:</i> <a>newGetSlotTypes</a> smart constructor.
data GetSlotTypes
GetSlotTypes' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetSlotTypes

-- | Substring to match in slot type names. A slot type will be returned if
--   any part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
[$sel:nameContains:GetSlotTypes'] :: GetSlotTypes -> Maybe Text

-- | A pagination token that fetches the next page of slot types. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch next page of slot types,
--   specify the pagination token in the next request.
[$sel:nextToken:GetSlotTypes'] :: GetSlotTypes -> Maybe Text

-- | The maximum number of slot types to return in the response. The
--   default is 10.
[$sel:maxResults:GetSlotTypes'] :: GetSlotTypes -> Maybe Natural

-- | Create a value of <a>GetSlotTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetSlotTypes'</a>,
--   <a>getSlotTypes_nameContains</a> - Substring to match in slot type
--   names. A slot type will be returned if any part of its name matches
--   the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetSlotTypes'</a>, <a>getSlotTypes_nextToken</a> - A
--   pagination token that fetches the next page of slot types. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch next page of slot types,
--   specify the pagination token in the next request.
--   
--   <a>$sel:maxResults:GetSlotTypes'</a>, <a>getSlotTypes_maxResults</a> -
--   The maximum number of slot types to return in the response. The
--   default is 10.
newGetSlotTypes :: GetSlotTypes

-- | Substring to match in slot type names. A slot type will be returned if
--   any part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
getSlotTypes_nameContains :: Lens' GetSlotTypes (Maybe Text)

-- | A pagination token that fetches the next page of slot types. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch next page of slot types,
--   specify the pagination token in the next request.
getSlotTypes_nextToken :: Lens' GetSlotTypes (Maybe Text)

-- | The maximum number of slot types to return in the response. The
--   default is 10.
getSlotTypes_maxResults :: Lens' GetSlotTypes (Maybe Natural)

-- | <i>See:</i> <a>newGetSlotTypesResponse</a> smart constructor.
data GetSlotTypesResponse
GetSlotTypesResponse' :: Maybe [SlotTypeMetadata] -> Maybe Text -> Int -> GetSlotTypesResponse

-- | An array of objects, one for each slot type, that provides information
--   such as the name of the slot type, the version, and a description.
[$sel:slotTypes:GetSlotTypesResponse'] :: GetSlotTypesResponse -> Maybe [SlotTypeMetadata]

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of slot types.
[$sel:nextToken:GetSlotTypesResponse'] :: GetSlotTypesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSlotTypesResponse'] :: GetSlotTypesResponse -> Int

-- | Create a value of <a>GetSlotTypesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypes:GetSlotTypesResponse'</a>,
--   <a>getSlotTypesResponse_slotTypes</a> - An array of objects, one for
--   each slot type, that provides information such as the name of the slot
--   type, the version, and a description.
--   
--   <a>$sel:nextToken:GetSlotTypes'</a>,
--   <a>getSlotTypesResponse_nextToken</a> - If the response is truncated,
--   it includes a pagination token that you can specify in your next
--   request to fetch the next page of slot types.
--   
--   <a>$sel:httpStatus:GetSlotTypesResponse'</a>,
--   <a>getSlotTypesResponse_httpStatus</a> - The response's http status
--   code.
newGetSlotTypesResponse :: Int -> GetSlotTypesResponse

-- | An array of objects, one for each slot type, that provides information
--   such as the name of the slot type, the version, and a description.
getSlotTypesResponse_slotTypes :: Lens' GetSlotTypesResponse (Maybe [SlotTypeMetadata])

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of slot types.
getSlotTypesResponse_nextToken :: Lens' GetSlotTypesResponse (Maybe Text)

-- | The response's http status code.
getSlotTypesResponse_httpStatus :: Lens' GetSlotTypesResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance GHC.Show.Show Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance GHC.Read.Read Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance GHC.Classes.Eq Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance GHC.Generics.Generic Network.AWS.LexModels.GetSlotTypes.GetSlotTypesResponse
instance GHC.Show.Show Network.AWS.LexModels.GetSlotTypes.GetSlotTypesResponse
instance GHC.Read.Read Network.AWS.LexModels.GetSlotTypes.GetSlotTypesResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetSlotTypes.GetSlotTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetSlotTypes.GetSlotTypesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetSlotTypes.GetSlotTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetSlotTypes.GetSlotTypes


-- | Gets information about all versions of a slot type.
--   
--   The <tt>GetSlotTypeVersions</tt> operation returns a
--   <tt>SlotTypeMetadata</tt> object for each version of a slot type. For
--   example, if a slot type has three numbered versions, the
--   <tt>GetSlotTypeVersions</tt> operation returns four
--   <tt>SlotTypeMetadata</tt> objects in the response, one for each
--   numbered version and one for the <tt>$LATEST</tt> version.
--   
--   The <tt>GetSlotTypeVersions</tt> operation always returns at least one
--   version, the <tt>$LATEST</tt> version.
--   
--   This operation requires permissions for the
--   <tt>lex:GetSlotTypeVersions</tt> action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetSlotTypeVersions

-- | <i>See:</i> <a>newGetSlotTypeVersions</a> smart constructor.
data GetSlotTypeVersions
GetSlotTypeVersions' :: Maybe Text -> Maybe Natural -> Text -> GetSlotTypeVersions

-- | A pagination token for fetching the next page of slot type versions.
--   If the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
[$sel:nextToken:GetSlotTypeVersions'] :: GetSlotTypeVersions -> Maybe Text

-- | The maximum number of slot type versions to return in the response.
--   The default is 10.
[$sel:maxResults:GetSlotTypeVersions'] :: GetSlotTypeVersions -> Maybe Natural

-- | The name of the slot type for which versions should be returned.
[$sel:name:GetSlotTypeVersions'] :: GetSlotTypeVersions -> Text

-- | Create a value of <a>GetSlotTypeVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSlotTypeVersions'</a>,
--   <a>getSlotTypeVersions_nextToken</a> - A pagination token for fetching
--   the next page of slot type versions. If the response to this call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of versions, specify the pagination token in the
--   next request.
--   
--   <a>$sel:maxResults:GetSlotTypeVersions'</a>,
--   <a>getSlotTypeVersions_maxResults</a> - The maximum number of slot
--   type versions to return in the response. The default is 10.
--   
--   <a>$sel:name:GetSlotTypeVersions'</a>, <a>getSlotTypeVersions_name</a>
--   - The name of the slot type for which versions should be returned.
newGetSlotTypeVersions :: Text -> GetSlotTypeVersions

-- | A pagination token for fetching the next page of slot type versions.
--   If the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
getSlotTypeVersions_nextToken :: Lens' GetSlotTypeVersions (Maybe Text)

-- | The maximum number of slot type versions to return in the response.
--   The default is 10.
getSlotTypeVersions_maxResults :: Lens' GetSlotTypeVersions (Maybe Natural)

-- | The name of the slot type for which versions should be returned.
getSlotTypeVersions_name :: Lens' GetSlotTypeVersions Text

-- | <i>See:</i> <a>newGetSlotTypeVersionsResponse</a> smart constructor.
data GetSlotTypeVersionsResponse
GetSlotTypeVersionsResponse' :: Maybe [SlotTypeMetadata] -> Maybe Text -> Int -> GetSlotTypeVersionsResponse

-- | An array of <tt>SlotTypeMetadata</tt> objects, one for each numbered
--   version of the slot type plus one for the <tt>$LATEST</tt> version.
[$sel:slotTypes:GetSlotTypeVersionsResponse'] :: GetSlotTypeVersionsResponse -> Maybe [SlotTypeMetadata]

-- | A pagination token for fetching the next page of slot type versions.
--   If the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
[$sel:nextToken:GetSlotTypeVersionsResponse'] :: GetSlotTypeVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSlotTypeVersionsResponse'] :: GetSlotTypeVersionsResponse -> Int

-- | Create a value of <a>GetSlotTypeVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypes:GetSlotTypeVersionsResponse'</a>,
--   <a>getSlotTypeVersionsResponse_slotTypes</a> - An array of
--   <tt>SlotTypeMetadata</tt> objects, one for each numbered version of
--   the slot type plus one for the <tt>$LATEST</tt> version.
--   
--   <a>$sel:nextToken:GetSlotTypeVersions'</a>,
--   <a>getSlotTypeVersionsResponse_nextToken</a> - A pagination token for
--   fetching the next page of slot type versions. If the response to this
--   call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of versions, specify the pagination
--   token in the next request.
--   
--   <a>$sel:httpStatus:GetSlotTypeVersionsResponse'</a>,
--   <a>getSlotTypeVersionsResponse_httpStatus</a> - The response's http
--   status code.
newGetSlotTypeVersionsResponse :: Int -> GetSlotTypeVersionsResponse

-- | An array of <tt>SlotTypeMetadata</tt> objects, one for each numbered
--   version of the slot type plus one for the <tt>$LATEST</tt> version.
getSlotTypeVersionsResponse_slotTypes :: Lens' GetSlotTypeVersionsResponse (Maybe [SlotTypeMetadata])

-- | A pagination token for fetching the next page of slot type versions.
--   If the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
getSlotTypeVersionsResponse_nextToken :: Lens' GetSlotTypeVersionsResponse (Maybe Text)

-- | The response's http status code.
getSlotTypeVersionsResponse_httpStatus :: Lens' GetSlotTypeVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance GHC.Show.Show Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance GHC.Read.Read Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance GHC.Classes.Eq Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance GHC.Generics.Generic Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersionsResponse
instance GHC.Show.Show Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersionsResponse
instance GHC.Read.Read Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersionsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetSlotTypeVersions.GetSlotTypeVersions


-- | Returns information about a specific version of a slot type. In
--   addition to specifying the slot type name, you must specify the slot
--   type version.
--   
--   This operation requires permissions for the <tt>lex:GetSlotType</tt>
--   action.
module Network.AWS.LexModels.GetSlotType

-- | <i>See:</i> <a>newGetSlotType</a> smart constructor.
data GetSlotType
GetSlotType' :: Text -> Text -> GetSlotType

-- | The name of the slot type. The name is case sensitive.
[$sel:name:GetSlotType'] :: GetSlotType -> Text

-- | The version of the slot type.
[$sel:version:GetSlotType'] :: GetSlotType -> Text

-- | Create a value of <a>GetSlotType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetSlotType'</a>, <a>getSlotType_name</a> - The name of
--   the slot type. The name is case sensitive.
--   
--   <a>$sel:version:GetSlotType'</a>, <a>getSlotType_version</a> - The
--   version of the slot type.
newGetSlotType :: Text -> Text -> GetSlotType

-- | The name of the slot type. The name is case sensitive.
getSlotType_name :: Lens' GetSlotType Text

-- | The version of the slot type.
getSlotType_version :: Lens' GetSlotType Text

-- | <i>See:</i> <a>newGetSlotTypeResponse</a> smart constructor.
data GetSlotTypeResponse
GetSlotTypeResponse' :: Maybe [SlotTypeConfiguration] -> Maybe POSIX -> Maybe [EnumerationValue] -> Maybe POSIX -> Maybe SlotValueSelectionStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetSlotTypeResponse

-- | Configuration information that extends the parent built-in slot type.
[$sel:slotTypeConfigurations:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe [SlotTypeConfiguration]

-- | The date that the slot type was created.
[$sel:createdDate:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe POSIX

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
[$sel:enumerationValues:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe [EnumerationValue]

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last update date are the same.
[$sel:lastUpdatedDate:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe POSIX

-- | The strategy that Amazon Lex uses to determine the value of the slot.
--   For more information, see PutSlotType.
[$sel:valueSelectionStrategy:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe SlotValueSelectionStrategy

-- | The version of the slot type.
[$sel:version:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe Text

-- | The name of the slot type.
[$sel:name:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe Text

-- | The built-in slot type used as a parent for the slot type.
[$sel:parentSlotTypeSignature:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe Text

-- | A description of the slot type.
[$sel:description:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe Text

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
[$sel:checksum:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSlotTypeResponse'] :: GetSlotTypeResponse -> Int

-- | Create a value of <a>GetSlotTypeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypeConfigurations:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_slotTypeConfigurations</a> - Configuration
--   information that extends the parent built-in slot type.
--   
--   <a>$sel:createdDate:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_createdDate</a> - The date that the slot type
--   was created.
--   
--   <a>$sel:enumerationValues:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_enumerationValues</a> - A list of
--   <tt>EnumerationValue</tt> objects that defines the values that the
--   slot type can take.
--   
--   <a>$sel:lastUpdatedDate:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_lastUpdatedDate</a> - The date that the slot
--   type was updated. When you create a resource, the creation date and
--   last update date are the same.
--   
--   <a>$sel:valueSelectionStrategy:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_valueSelectionStrategy</a> - The strategy that
--   Amazon Lex uses to determine the value of the slot. For more
--   information, see PutSlotType.
--   
--   <a>$sel:version:GetSlotType'</a>, <a>getSlotTypeResponse_version</a> -
--   The version of the slot type.
--   
--   <a>$sel:name:GetSlotType'</a>, <a>getSlotTypeResponse_name</a> - The
--   name of the slot type.
--   
--   <a>$sel:parentSlotTypeSignature:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_parentSlotTypeSignature</a> - The built-in slot
--   type used as a parent for the slot type.
--   
--   <a>$sel:description:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_description</a> - A description of the slot
--   type.
--   
--   <a>$sel:checksum:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_checksum</a> - Checksum of the <tt>$LATEST</tt>
--   version of the slot type.
--   
--   <a>$sel:httpStatus:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_httpStatus</a> - The response's http status
--   code.
newGetSlotTypeResponse :: Int -> GetSlotTypeResponse

-- | Configuration information that extends the parent built-in slot type.
getSlotTypeResponse_slotTypeConfigurations :: Lens' GetSlotTypeResponse (Maybe [SlotTypeConfiguration])

-- | The date that the slot type was created.
getSlotTypeResponse_createdDate :: Lens' GetSlotTypeResponse (Maybe UTCTime)

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
getSlotTypeResponse_enumerationValues :: Lens' GetSlotTypeResponse (Maybe [EnumerationValue])

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last update date are the same.
getSlotTypeResponse_lastUpdatedDate :: Lens' GetSlotTypeResponse (Maybe UTCTime)

-- | The strategy that Amazon Lex uses to determine the value of the slot.
--   For more information, see PutSlotType.
getSlotTypeResponse_valueSelectionStrategy :: Lens' GetSlotTypeResponse (Maybe SlotValueSelectionStrategy)

-- | The version of the slot type.
getSlotTypeResponse_version :: Lens' GetSlotTypeResponse (Maybe Text)

-- | The name of the slot type.
getSlotTypeResponse_name :: Lens' GetSlotTypeResponse (Maybe Text)

-- | The built-in slot type used as a parent for the slot type.
getSlotTypeResponse_parentSlotTypeSignature :: Lens' GetSlotTypeResponse (Maybe Text)

-- | A description of the slot type.
getSlotTypeResponse_description :: Lens' GetSlotTypeResponse (Maybe Text)

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
getSlotTypeResponse_checksum :: Lens' GetSlotTypeResponse (Maybe Text)

-- | The response's http status code.
getSlotTypeResponse_httpStatus :: Lens' GetSlotTypeResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetSlotType.GetSlotType
instance GHC.Show.Show Network.AWS.LexModels.GetSlotType.GetSlotType
instance GHC.Read.Read Network.AWS.LexModels.GetSlotType.GetSlotType
instance GHC.Classes.Eq Network.AWS.LexModels.GetSlotType.GetSlotType
instance GHC.Generics.Generic Network.AWS.LexModels.GetSlotType.GetSlotTypeResponse
instance GHC.Show.Show Network.AWS.LexModels.GetSlotType.GetSlotTypeResponse
instance GHC.Read.Read Network.AWS.LexModels.GetSlotType.GetSlotTypeResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetSlotType.GetSlotTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetSlotType.GetSlotType
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetSlotType.GetSlotTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetSlotType.GetSlotType
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetSlotType.GetSlotType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetSlotType.GetSlotType
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetSlotType.GetSlotType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetSlotType.GetSlotType


-- | Gets a list of migrations between Amazon Lex V1 and Amazon Lex V2.
module Network.AWS.LexModels.GetMigrations

-- | <i>See:</i> <a>newGetMigrations</a> smart constructor.
data GetMigrations
GetMigrations' :: Maybe MigrationStatus -> Maybe Text -> Maybe Natural -> Maybe MigrationSortAttribute -> Maybe Text -> Maybe SortOrder -> GetMigrations

-- | Filters the list to contain only migrations in the specified state.
[$sel:migrationStatusEquals:GetMigrations'] :: GetMigrations -> Maybe MigrationStatus

-- | A pagination token that fetches the next page of migrations. If the
--   response to this operation is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of
--   migrations, specify the pagination token in the request.
[$sel:nextToken:GetMigrations'] :: GetMigrations -> Maybe Text

-- | The maximum number of migrations to return in the response. The
--   default is 10.
[$sel:maxResults:GetMigrations'] :: GetMigrations -> Maybe Natural

-- | The field to sort the list of migrations by. You can sort by the
--   Amazon Lex V1 bot name or the date and time that the migration was
--   started.
[$sel:sortByAttribute:GetMigrations'] :: GetMigrations -> Maybe MigrationSortAttribute

-- | Filters the list to contain only bots whose name contains the
--   specified string. The string is matched anywhere in bot name.
[$sel:v1BotNameContains:GetMigrations'] :: GetMigrations -> Maybe Text

-- | The order so sort the list.
[$sel:sortByOrder:GetMigrations'] :: GetMigrations -> Maybe SortOrder

-- | Create a value of <a>GetMigrations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:migrationStatusEquals:GetMigrations'</a>,
--   <a>getMigrations_migrationStatusEquals</a> - Filters the list to
--   contain only migrations in the specified state.
--   
--   <a>$sel:nextToken:GetMigrations'</a>, <a>getMigrations_nextToken</a> -
--   A pagination token that fetches the next page of migrations. If the
--   response to this operation is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of
--   migrations, specify the pagination token in the request.
--   
--   <a>$sel:maxResults:GetMigrations'</a>, <a>getMigrations_maxResults</a>
--   - The maximum number of migrations to return in the response. The
--   default is 10.
--   
--   <a>$sel:sortByAttribute:GetMigrations'</a>,
--   <a>getMigrations_sortByAttribute</a> - The field to sort the list of
--   migrations by. You can sort by the Amazon Lex V1 bot name or the date
--   and time that the migration was started.
--   
--   <a>$sel:v1BotNameContains:GetMigrations'</a>,
--   <a>getMigrations_v1BotNameContains</a> - Filters the list to contain
--   only bots whose name contains the specified string. The string is
--   matched anywhere in bot name.
--   
--   <a>$sel:sortByOrder:GetMigrations'</a>,
--   <a>getMigrations_sortByOrder</a> - The order so sort the list.
newGetMigrations :: GetMigrations

-- | Filters the list to contain only migrations in the specified state.
getMigrations_migrationStatusEquals :: Lens' GetMigrations (Maybe MigrationStatus)

-- | A pagination token that fetches the next page of migrations. If the
--   response to this operation is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of
--   migrations, specify the pagination token in the request.
getMigrations_nextToken :: Lens' GetMigrations (Maybe Text)

-- | The maximum number of migrations to return in the response. The
--   default is 10.
getMigrations_maxResults :: Lens' GetMigrations (Maybe Natural)

-- | The field to sort the list of migrations by. You can sort by the
--   Amazon Lex V1 bot name or the date and time that the migration was
--   started.
getMigrations_sortByAttribute :: Lens' GetMigrations (Maybe MigrationSortAttribute)

-- | Filters the list to contain only bots whose name contains the
--   specified string. The string is matched anywhere in bot name.
getMigrations_v1BotNameContains :: Lens' GetMigrations (Maybe Text)

-- | The order so sort the list.
getMigrations_sortByOrder :: Lens' GetMigrations (Maybe SortOrder)

-- | <i>See:</i> <a>newGetMigrationsResponse</a> smart constructor.
data GetMigrationsResponse
GetMigrationsResponse' :: Maybe Text -> Maybe [MigrationSummary] -> Int -> GetMigrationsResponse

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of migrations.
[$sel:nextToken:GetMigrationsResponse'] :: GetMigrationsResponse -> Maybe Text

-- | An array of summaries for migrations from Amazon Lex V1 to Amazon Lex
--   V2. To see details of the migration, use the <tt>migrationId</tt> from
--   the summary in a call to the operation.
[$sel:migrationSummaries:GetMigrationsResponse'] :: GetMigrationsResponse -> Maybe [MigrationSummary]

-- | The response's http status code.
[$sel:httpStatus:GetMigrationsResponse'] :: GetMigrationsResponse -> Int

-- | Create a value of <a>GetMigrationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMigrations'</a>,
--   <a>getMigrationsResponse_nextToken</a> - If the response is truncated,
--   it includes a pagination token that you can specify in your next
--   request to fetch the next page of migrations.
--   
--   <a>$sel:migrationSummaries:GetMigrationsResponse'</a>,
--   <a>getMigrationsResponse_migrationSummaries</a> - An array of
--   summaries for migrations from Amazon Lex V1 to Amazon Lex V2. To see
--   details of the migration, use the <tt>migrationId</tt> from the
--   summary in a call to the operation.
--   
--   <a>$sel:httpStatus:GetMigrationsResponse'</a>,
--   <a>getMigrationsResponse_httpStatus</a> - The response's http status
--   code.
newGetMigrationsResponse :: Int -> GetMigrationsResponse

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of migrations.
getMigrationsResponse_nextToken :: Lens' GetMigrationsResponse (Maybe Text)

-- | An array of summaries for migrations from Amazon Lex V1 to Amazon Lex
--   V2. To see details of the migration, use the <tt>migrationId</tt> from
--   the summary in a call to the operation.
getMigrationsResponse_migrationSummaries :: Lens' GetMigrationsResponse (Maybe [MigrationSummary])

-- | The response's http status code.
getMigrationsResponse_httpStatus :: Lens' GetMigrationsResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetMigrations.GetMigrations
instance GHC.Show.Show Network.AWS.LexModels.GetMigrations.GetMigrations
instance GHC.Read.Read Network.AWS.LexModels.GetMigrations.GetMigrations
instance GHC.Classes.Eq Network.AWS.LexModels.GetMigrations.GetMigrations
instance GHC.Generics.Generic Network.AWS.LexModels.GetMigrations.GetMigrationsResponse
instance GHC.Show.Show Network.AWS.LexModels.GetMigrations.GetMigrationsResponse
instance GHC.Read.Read Network.AWS.LexModels.GetMigrations.GetMigrationsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetMigrations.GetMigrationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetMigrations.GetMigrations
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetMigrations.GetMigrationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetMigrations.GetMigrations
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetMigrations.GetMigrations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetMigrations.GetMigrations
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetMigrations.GetMigrations
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetMigrations.GetMigrations


-- | Provides details about an ongoing or complete migration from an Amazon
--   Lex V1 bot to an Amazon Lex V2 bot. Use this operation to view the
--   migration alerts and warnings related to the migration.
module Network.AWS.LexModels.GetMigration

-- | <i>See:</i> <a>newGetMigration</a> smart constructor.
data GetMigration
GetMigration' :: Text -> GetMigration

-- | The unique identifier of the migration to view. The
--   <tt>migrationID</tt> is returned by the operation.
[$sel:migrationId:GetMigration'] :: GetMigration -> Text

-- | Create a value of <a>GetMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:migrationId:GetMigration'</a>, <a>getMigration_migrationId</a>
--   - The unique identifier of the migration to view. The
--   <tt>migrationID</tt> is returned by the operation.
newGetMigration :: Text -> GetMigration

-- | The unique identifier of the migration to view. The
--   <tt>migrationID</tt> is returned by the operation.
getMigration_migrationId :: Lens' GetMigration Text

-- | <i>See:</i> <a>newGetMigrationResponse</a> smart constructor.
data GetMigrationResponse
GetMigrationResponse' :: Maybe Text -> Maybe Text -> Maybe Locale -> Maybe POSIX -> Maybe MigrationStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MigrationStatus -> Maybe [MigrationAlert] -> Int -> GetMigrationResponse

-- | The version of the Amazon Lex V1 bot migrated to Amazon Lex V2.
[$sel:v1BotVersion:GetMigrationResponse'] :: GetMigrationResponse -> Maybe Text

-- | The unique identifier of the migration. This is the same as the
--   identifier used when calling the <tt>GetMigration</tt> operation.
[$sel:migrationId:GetMigrationResponse'] :: GetMigrationResponse -> Maybe Text

-- | The locale of the Amazon Lex V1 bot migrated to Amazon Lex V2.
[$sel:v1BotLocale:GetMigrationResponse'] :: GetMigrationResponse -> Maybe Locale

-- | The date and time that the migration started.
[$sel:migrationTimestamp:GetMigrationResponse'] :: GetMigrationResponse -> Maybe POSIX

-- | The strategy used to conduct the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
[$sel:migrationStrategy:GetMigrationResponse'] :: GetMigrationResponse -> Maybe MigrationStrategy

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
[$sel:v2BotRole:GetMigrationResponse'] :: GetMigrationResponse -> Maybe Text

-- | The name of the Amazon Lex V1 bot migrated to Amazon Lex V2.
[$sel:v1BotName:GetMigrationResponse'] :: GetMigrationResponse -> Maybe Text

-- | The unique identifier of the Amazon Lex V2 bot that the Amazon Lex V1
--   is being migrated to.
[$sel:v2BotId:GetMigrationResponse'] :: GetMigrationResponse -> Maybe Text

-- | Indicates the status of the migration. When the status is
--   <tt>COMPLETE</tt> the migration is finished and the bot is available
--   in Amazon Lex V2. There may be alerts and warnings that need to be
--   resolved to complete the migration.
[$sel:migrationStatus:GetMigrationResponse'] :: GetMigrationResponse -> Maybe MigrationStatus

-- | A list of alerts and warnings that indicate issues with the migration
--   for the Amazon Lex V1 bot to Amazon Lex V2. You receive a warning when
--   an Amazon Lex V1 feature has a different implementation if Amazon Lex
--   V2.
--   
--   For more information, see <a>Migrating a bot</a> in the <i>Amazon Lex
--   V2 developer guide</i>.
[$sel:alerts:GetMigrationResponse'] :: GetMigrationResponse -> Maybe [MigrationAlert]

-- | The response's http status code.
[$sel:httpStatus:GetMigrationResponse'] :: GetMigrationResponse -> Int

-- | Create a value of <a>GetMigrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotVersion:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v1BotVersion</a> - The version of the Amazon
--   Lex V1 bot migrated to Amazon Lex V2.
--   
--   <a>$sel:migrationId:GetMigration'</a>,
--   <a>getMigrationResponse_migrationId</a> - The unique identifier of the
--   migration. This is the same as the identifier used when calling the
--   <tt>GetMigration</tt> operation.
--   
--   <a>$sel:v1BotLocale:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v1BotLocale</a> - The locale of the Amazon Lex
--   V1 bot migrated to Amazon Lex V2.
--   
--   <a>$sel:migrationTimestamp:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_migrationTimestamp</a> - The date and time
--   that the migration started.
--   
--   <a>$sel:migrationStrategy:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_migrationStrategy</a> - The strategy used to
--   conduct the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
--   
--   <a>$sel:v2BotRole:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v2BotRole</a> - The IAM role that Amazon Lex
--   uses to run the Amazon Lex V2 bot.
--   
--   <a>$sel:v1BotName:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v1BotName</a> - The name of the Amazon Lex V1
--   bot migrated to Amazon Lex V2.
--   
--   <a>$sel:v2BotId:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v2BotId</a> - The unique identifier of the
--   Amazon Lex V2 bot that the Amazon Lex V1 is being migrated to.
--   
--   <a>$sel:migrationStatus:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_migrationStatus</a> - Indicates the status of
--   the migration. When the status is <tt>COMPLETE</tt> the migration is
--   finished and the bot is available in Amazon Lex V2. There may be
--   alerts and warnings that need to be resolved to complete the
--   migration.
--   
--   <a>$sel:alerts:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_alerts</a> - A list of alerts and warnings
--   that indicate issues with the migration for the Amazon Lex V1 bot to
--   Amazon Lex V2. You receive a warning when an Amazon Lex V1 feature has
--   a different implementation if Amazon Lex V2.
--   
--   For more information, see <a>Migrating a bot</a> in the <i>Amazon Lex
--   V2 developer guide</i>.
--   
--   <a>$sel:httpStatus:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_httpStatus</a> - The response's http status
--   code.
newGetMigrationResponse :: Int -> GetMigrationResponse

-- | The version of the Amazon Lex V1 bot migrated to Amazon Lex V2.
getMigrationResponse_v1BotVersion :: Lens' GetMigrationResponse (Maybe Text)

-- | The unique identifier of the migration. This is the same as the
--   identifier used when calling the <tt>GetMigration</tt> operation.
getMigrationResponse_migrationId :: Lens' GetMigrationResponse (Maybe Text)

-- | The locale of the Amazon Lex V1 bot migrated to Amazon Lex V2.
getMigrationResponse_v1BotLocale :: Lens' GetMigrationResponse (Maybe Locale)

-- | The date and time that the migration started.
getMigrationResponse_migrationTimestamp :: Lens' GetMigrationResponse (Maybe UTCTime)

-- | The strategy used to conduct the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
getMigrationResponse_migrationStrategy :: Lens' GetMigrationResponse (Maybe MigrationStrategy)

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
getMigrationResponse_v2BotRole :: Lens' GetMigrationResponse (Maybe Text)

-- | The name of the Amazon Lex V1 bot migrated to Amazon Lex V2.
getMigrationResponse_v1BotName :: Lens' GetMigrationResponse (Maybe Text)

-- | The unique identifier of the Amazon Lex V2 bot that the Amazon Lex V1
--   is being migrated to.
getMigrationResponse_v2BotId :: Lens' GetMigrationResponse (Maybe Text)

-- | Indicates the status of the migration. When the status is
--   <tt>COMPLETE</tt> the migration is finished and the bot is available
--   in Amazon Lex V2. There may be alerts and warnings that need to be
--   resolved to complete the migration.
getMigrationResponse_migrationStatus :: Lens' GetMigrationResponse (Maybe MigrationStatus)

-- | A list of alerts and warnings that indicate issues with the migration
--   for the Amazon Lex V1 bot to Amazon Lex V2. You receive a warning when
--   an Amazon Lex V1 feature has a different implementation if Amazon Lex
--   V2.
--   
--   For more information, see <a>Migrating a bot</a> in the <i>Amazon Lex
--   V2 developer guide</i>.
getMigrationResponse_alerts :: Lens' GetMigrationResponse (Maybe [MigrationAlert])

-- | The response's http status code.
getMigrationResponse_httpStatus :: Lens' GetMigrationResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetMigration.GetMigration
instance GHC.Show.Show Network.AWS.LexModels.GetMigration.GetMigration
instance GHC.Read.Read Network.AWS.LexModels.GetMigration.GetMigration
instance GHC.Classes.Eq Network.AWS.LexModels.GetMigration.GetMigration
instance GHC.Generics.Generic Network.AWS.LexModels.GetMigration.GetMigrationResponse
instance GHC.Show.Show Network.AWS.LexModels.GetMigration.GetMigrationResponse
instance GHC.Read.Read Network.AWS.LexModels.GetMigration.GetMigrationResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetMigration.GetMigrationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetMigration.GetMigration
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetMigration.GetMigrationResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetMigration.GetMigration
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetMigration.GetMigration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetMigration.GetMigration
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetMigration.GetMigration
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetMigration.GetMigration


-- | Returns intent information as follows:
--   
--   <ul>
--   <li>If you specify the <tt>nameContains</tt> field, returns the
--   <tt>$LATEST</tt> version of all intents that contain the specified
--   string.</li>
--   <li>If you don't specify the <tt>nameContains</tt> field, returns
--   information about the <tt>$LATEST</tt> version of all intents.</li>
--   </ul>
--   
--   The operation requires permission for the <tt>lex:GetIntents</tt>
--   action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetIntents

-- | <i>See:</i> <a>newGetIntents</a> smart constructor.
data GetIntents
GetIntents' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetIntents

-- | Substring to match in intent names. An intent will be returned if any
--   part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
[$sel:nameContains:GetIntents'] :: GetIntents -> Maybe Text

-- | A pagination token that fetches the next page of intents. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of intents,
--   specify the pagination token in the next request.
[$sel:nextToken:GetIntents'] :: GetIntents -> Maybe Text

-- | The maximum number of intents to return in the response. The default
--   is 10.
[$sel:maxResults:GetIntents'] :: GetIntents -> Maybe Natural

-- | Create a value of <a>GetIntents</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetIntents'</a>, <a>getIntents_nameContains</a> -
--   Substring to match in intent names. An intent will be returned if any
--   part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetIntents'</a>, <a>getIntents_nextToken</a> - A
--   pagination token that fetches the next page of intents. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of intents,
--   specify the pagination token in the next request.
--   
--   <a>$sel:maxResults:GetIntents'</a>, <a>getIntents_maxResults</a> - The
--   maximum number of intents to return in the response. The default is
--   10.
newGetIntents :: GetIntents

-- | Substring to match in intent names. An intent will be returned if any
--   part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
getIntents_nameContains :: Lens' GetIntents (Maybe Text)

-- | A pagination token that fetches the next page of intents. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of intents,
--   specify the pagination token in the next request.
getIntents_nextToken :: Lens' GetIntents (Maybe Text)

-- | The maximum number of intents to return in the response. The default
--   is 10.
getIntents_maxResults :: Lens' GetIntents (Maybe Natural)

-- | <i>See:</i> <a>newGetIntentsResponse</a> smart constructor.
data GetIntentsResponse
GetIntentsResponse' :: Maybe Text -> Maybe [IntentMetadata] -> Int -> GetIntentsResponse

-- | If the response is truncated, the response includes a pagination token
--   that you can specify in your next request to fetch the next page of
--   intents.
[$sel:nextToken:GetIntentsResponse'] :: GetIntentsResponse -> Maybe Text

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
[$sel:intents:GetIntentsResponse'] :: GetIntentsResponse -> Maybe [IntentMetadata]

-- | The response's http status code.
[$sel:httpStatus:GetIntentsResponse'] :: GetIntentsResponse -> Int

-- | Create a value of <a>GetIntentsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntents'</a>, <a>getIntentsResponse_nextToken</a>
--   - If the response is truncated, the response includes a pagination
--   token that you can specify in your next request to fetch the next page
--   of intents.
--   
--   <a>$sel:intents:GetIntentsResponse'</a>,
--   <a>getIntentsResponse_intents</a> - An array of <tt>Intent</tt>
--   objects. For more information, see PutBot.
--   
--   <a>$sel:httpStatus:GetIntentsResponse'</a>,
--   <a>getIntentsResponse_httpStatus</a> - The response's http status
--   code.
newGetIntentsResponse :: Int -> GetIntentsResponse

-- | If the response is truncated, the response includes a pagination token
--   that you can specify in your next request to fetch the next page of
--   intents.
getIntentsResponse_nextToken :: Lens' GetIntentsResponse (Maybe Text)

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
getIntentsResponse_intents :: Lens' GetIntentsResponse (Maybe [IntentMetadata])

-- | The response's http status code.
getIntentsResponse_httpStatus :: Lens' GetIntentsResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetIntents.GetIntents
instance GHC.Show.Show Network.AWS.LexModels.GetIntents.GetIntents
instance GHC.Read.Read Network.AWS.LexModels.GetIntents.GetIntents
instance GHC.Classes.Eq Network.AWS.LexModels.GetIntents.GetIntents
instance GHC.Generics.Generic Network.AWS.LexModels.GetIntents.GetIntentsResponse
instance GHC.Show.Show Network.AWS.LexModels.GetIntents.GetIntentsResponse
instance GHC.Read.Read Network.AWS.LexModels.GetIntents.GetIntentsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetIntents.GetIntentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetIntents.GetIntents
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetIntents.GetIntentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetIntents.GetIntents
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetIntents.GetIntents
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetIntents.GetIntents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetIntents.GetIntents
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetIntents.GetIntents
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetIntents.GetIntents


-- | Gets information about all of the versions of an intent.
--   
--   The <tt>GetIntentVersions</tt> operation returns an
--   <tt>IntentMetadata</tt> object for each version of an intent. For
--   example, if an intent has three numbered versions, the
--   <tt>GetIntentVersions</tt> operation returns four
--   <tt>IntentMetadata</tt> objects in the response, one for each numbered
--   version and one for the <tt>$LATEST</tt> version.
--   
--   The <tt>GetIntentVersions</tt> operation always returns at least one
--   version, the <tt>$LATEST</tt> version.
--   
--   This operation requires permissions for the
--   <tt>lex:GetIntentVersions</tt> action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetIntentVersions

-- | <i>See:</i> <a>newGetIntentVersions</a> smart constructor.
data GetIntentVersions
GetIntentVersions' :: Maybe Text -> Maybe Natural -> Text -> GetIntentVersions

-- | A pagination token for fetching the next page of intent versions. If
--   the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
[$sel:nextToken:GetIntentVersions'] :: GetIntentVersions -> Maybe Text

-- | The maximum number of intent versions to return in the response. The
--   default is 10.
[$sel:maxResults:GetIntentVersions'] :: GetIntentVersions -> Maybe Natural

-- | The name of the intent for which versions should be returned.
[$sel:name:GetIntentVersions'] :: GetIntentVersions -> Text

-- | Create a value of <a>GetIntentVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntentVersions'</a>,
--   <a>getIntentVersions_nextToken</a> - A pagination token for fetching
--   the next page of intent versions. If the response to this call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of versions, specify the pagination token in the
--   next request.
--   
--   <a>$sel:maxResults:GetIntentVersions'</a>,
--   <a>getIntentVersions_maxResults</a> - The maximum number of intent
--   versions to return in the response. The default is 10.
--   
--   <a>$sel:name:GetIntentVersions'</a>, <a>getIntentVersions_name</a> -
--   The name of the intent for which versions should be returned.
newGetIntentVersions :: Text -> GetIntentVersions

-- | A pagination token for fetching the next page of intent versions. If
--   the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
getIntentVersions_nextToken :: Lens' GetIntentVersions (Maybe Text)

-- | The maximum number of intent versions to return in the response. The
--   default is 10.
getIntentVersions_maxResults :: Lens' GetIntentVersions (Maybe Natural)

-- | The name of the intent for which versions should be returned.
getIntentVersions_name :: Lens' GetIntentVersions Text

-- | <i>See:</i> <a>newGetIntentVersionsResponse</a> smart constructor.
data GetIntentVersionsResponse
GetIntentVersionsResponse' :: Maybe Text -> Maybe [IntentMetadata] -> Int -> GetIntentVersionsResponse

-- | A pagination token for fetching the next page of intent versions. If
--   the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
[$sel:nextToken:GetIntentVersionsResponse'] :: GetIntentVersionsResponse -> Maybe Text

-- | An array of <tt>IntentMetadata</tt> objects, one for each numbered
--   version of the intent plus one for the <tt>$LATEST</tt> version.
[$sel:intents:GetIntentVersionsResponse'] :: GetIntentVersionsResponse -> Maybe [IntentMetadata]

-- | The response's http status code.
[$sel:httpStatus:GetIntentVersionsResponse'] :: GetIntentVersionsResponse -> Int

-- | Create a value of <a>GetIntentVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntentVersions'</a>,
--   <a>getIntentVersionsResponse_nextToken</a> - A pagination token for
--   fetching the next page of intent versions. If the response to this
--   call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of versions, specify the pagination
--   token in the next request.
--   
--   <a>$sel:intents:GetIntentVersionsResponse'</a>,
--   <a>getIntentVersionsResponse_intents</a> - An array of
--   <tt>IntentMetadata</tt> objects, one for each numbered version of the
--   intent plus one for the <tt>$LATEST</tt> version.
--   
--   <a>$sel:httpStatus:GetIntentVersionsResponse'</a>,
--   <a>getIntentVersionsResponse_httpStatus</a> - The response's http
--   status code.
newGetIntentVersionsResponse :: Int -> GetIntentVersionsResponse

-- | A pagination token for fetching the next page of intent versions. If
--   the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
getIntentVersionsResponse_nextToken :: Lens' GetIntentVersionsResponse (Maybe Text)

-- | An array of <tt>IntentMetadata</tt> objects, one for each numbered
--   version of the intent plus one for the <tt>$LATEST</tt> version.
getIntentVersionsResponse_intents :: Lens' GetIntentVersionsResponse (Maybe [IntentMetadata])

-- | The response's http status code.
getIntentVersionsResponse_httpStatus :: Lens' GetIntentVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance GHC.Show.Show Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance GHC.Read.Read Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance GHC.Classes.Eq Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance GHC.Generics.Generic Network.AWS.LexModels.GetIntentVersions.GetIntentVersionsResponse
instance GHC.Show.Show Network.AWS.LexModels.GetIntentVersions.GetIntentVersionsResponse
instance GHC.Read.Read Network.AWS.LexModels.GetIntentVersions.GetIntentVersionsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetIntentVersions.GetIntentVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetIntentVersions.GetIntentVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetIntentVersions.GetIntentVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetIntentVersions.GetIntentVersions


-- | Returns information about an intent. In addition to the intent name,
--   you must specify the intent version.
--   
--   This operation requires permissions to perform the
--   <tt>lex:GetIntent</tt> action.
module Network.AWS.LexModels.GetIntent

-- | <i>See:</i> <a>newGetIntent</a> smart constructor.
data GetIntent
GetIntent' :: Text -> Text -> GetIntent

-- | The name of the intent. The name is case sensitive.
[$sel:name:GetIntent'] :: GetIntent -> Text

-- | The version of the intent.
[$sel:version:GetIntent'] :: GetIntent -> Text

-- | Create a value of <a>GetIntent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetIntent'</a>, <a>getIntent_name</a> - The name of the
--   intent. The name is case sensitive.
--   
--   <a>$sel:version:GetIntent'</a>, <a>getIntent_version</a> - The version
--   of the intent.
newGetIntent :: Text -> Text -> GetIntent

-- | The name of the intent. The name is case sensitive.
getIntent_name :: Lens' GetIntent Text

-- | The version of the intent.
getIntent_version :: Lens' GetIntent Text

-- | <i>See:</i> <a>newGetIntentResponse</a> smart constructor.
data GetIntentResponse
GetIntentResponse' :: Maybe KendraConfiguration -> Maybe POSIX -> Maybe Text -> Maybe CodeHook -> Maybe Statement -> Maybe POSIX -> Maybe Statement -> Maybe [InputContext] -> Maybe Text -> Maybe [Slot] -> Maybe FulfillmentActivity -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Prompt -> Maybe [OutputContext] -> Maybe FollowUpPrompt -> Maybe Text -> Int -> GetIntentResponse

-- | Configuration information, if any, to connect to an Amazon Kendra
--   index with the <tt>AMAZON.KendraSearchIntent</tt> intent.
[$sel:kendraConfiguration:GetIntentResponse'] :: GetIntentResponse -> Maybe KendraConfiguration

-- | The date that the intent was created.
[$sel:createdDate:GetIntentResponse'] :: GetIntentResponse -> Maybe POSIX

-- | A unique identifier for a built-in intent.
[$sel:parentIntentSignature:GetIntentResponse'] :: GetIntentResponse -> Maybe Text

-- | If defined in the bot, Amazon Amazon Lex invokes this Lambda function
--   for each user input. For more information, see PutIntent.
[$sel:dialogCodeHook:GetIntentResponse'] :: GetIntentResponse -> Maybe CodeHook

-- | After the Lambda function specified in the
--   <tt>fulfillmentActivity</tt> element fulfills the intent, Amazon Lex
--   conveys this statement to the user.
[$sel:conclusionStatement:GetIntentResponse'] :: GetIntentResponse -> Maybe Statement

-- | The date that the intent was updated. When you create a resource, the
--   creation date and the last updated date are the same.
[$sel:lastUpdatedDate:GetIntentResponse'] :: GetIntentResponse -> Maybe POSIX

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
[$sel:rejectionStatement:GetIntentResponse'] :: GetIntentResponse -> Maybe Statement

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
[$sel:inputContexts:GetIntentResponse'] :: GetIntentResponse -> Maybe [InputContext]

-- | The version of the intent.
[$sel:version:GetIntentResponse'] :: GetIntentResponse -> Maybe Text

-- | An array of intent slots configured for the intent.
[$sel:slots:GetIntentResponse'] :: GetIntentResponse -> Maybe [Slot]

-- | Describes how the intent is fulfilled. For more information, see
--   PutIntent.
[$sel:fulfillmentActivity:GetIntentResponse'] :: GetIntentResponse -> Maybe FulfillmentActivity

-- | The name of the intent.
[$sel:name:GetIntentResponse'] :: GetIntentResponse -> Maybe Text

-- | An array of sample utterances configured for the intent.
[$sel:sampleUtterances:GetIntentResponse'] :: GetIntentResponse -> Maybe [Text]

-- | A description of the intent.
[$sel:description:GetIntentResponse'] :: GetIntentResponse -> Maybe Text

-- | If defined in the bot, Amazon Lex uses prompt to confirm the intent
--   before fulfilling the user's request. For more information, see
--   PutIntent.
[$sel:confirmationPrompt:GetIntentResponse'] :: GetIntentResponse -> Maybe Prompt

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
[$sel:outputContexts:GetIntentResponse'] :: GetIntentResponse -> Maybe [OutputContext]

-- | If defined in the bot, Amazon Lex uses this prompt to solicit
--   additional user activity after the intent is fulfilled. For more
--   information, see PutIntent.
[$sel:followUpPrompt:GetIntentResponse'] :: GetIntentResponse -> Maybe FollowUpPrompt

-- | Checksum of the intent.
[$sel:checksum:GetIntentResponse'] :: GetIntentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetIntentResponse'] :: GetIntentResponse -> Int

-- | Create a value of <a>GetIntentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kendraConfiguration:GetIntentResponse'</a>,
--   <a>getIntentResponse_kendraConfiguration</a> - Configuration
--   information, if any, to connect to an Amazon Kendra index with the
--   <tt>AMAZON.KendraSearchIntent</tt> intent.
--   
--   <a>$sel:createdDate:GetIntentResponse'</a>,
--   <a>getIntentResponse_createdDate</a> - The date that the intent was
--   created.
--   
--   <a>$sel:parentIntentSignature:GetIntentResponse'</a>,
--   <a>getIntentResponse_parentIntentSignature</a> - A unique identifier
--   for a built-in intent.
--   
--   <a>$sel:dialogCodeHook:GetIntentResponse'</a>,
--   <a>getIntentResponse_dialogCodeHook</a> - If defined in the bot,
--   Amazon Amazon Lex invokes this Lambda function for each user input.
--   For more information, see PutIntent.
--   
--   <a>$sel:conclusionStatement:GetIntentResponse'</a>,
--   <a>getIntentResponse_conclusionStatement</a> - After the Lambda
--   function specified in the <tt>fulfillmentActivity</tt> element
--   fulfills the intent, Amazon Lex conveys this statement to the user.
--   
--   <a>$sel:lastUpdatedDate:GetIntentResponse'</a>,
--   <a>getIntentResponse_lastUpdatedDate</a> - The date that the intent
--   was updated. When you create a resource, the creation date and the
--   last updated date are the same.
--   
--   <a>$sel:rejectionStatement:GetIntentResponse'</a>,
--   <a>getIntentResponse_rejectionStatement</a> - If the user answers "no"
--   to the question defined in <tt>confirmationPrompt</tt>, Amazon Lex
--   responds with this statement to acknowledge that the intent was
--   canceled.
--   
--   <a>$sel:inputContexts:GetIntentResponse'</a>,
--   <a>getIntentResponse_inputContexts</a> - An array of
--   <tt>InputContext</tt> objects that lists the contexts that must be
--   active for Amazon Lex to choose the intent in a conversation with the
--   user.
--   
--   <a>$sel:version:GetIntent'</a>, <a>getIntentResponse_version</a> - The
--   version of the intent.
--   
--   <a>$sel:slots:GetIntentResponse'</a>, <a>getIntentResponse_slots</a> -
--   An array of intent slots configured for the intent.
--   
--   <a>$sel:fulfillmentActivity:GetIntentResponse'</a>,
--   <a>getIntentResponse_fulfillmentActivity</a> - Describes how the
--   intent is fulfilled. For more information, see PutIntent.
--   
--   <a>$sel:name:GetIntent'</a>, <a>getIntentResponse_name</a> - The name
--   of the intent.
--   
--   <a>$sel:sampleUtterances:GetIntentResponse'</a>,
--   <a>getIntentResponse_sampleUtterances</a> - An array of sample
--   utterances configured for the intent.
--   
--   <a>$sel:description:GetIntentResponse'</a>,
--   <a>getIntentResponse_description</a> - A description of the intent.
--   
--   <a>$sel:confirmationPrompt:GetIntentResponse'</a>,
--   <a>getIntentResponse_confirmationPrompt</a> - If defined in the bot,
--   Amazon Lex uses prompt to confirm the intent before fulfilling the
--   user's request. For more information, see PutIntent.
--   
--   <a>$sel:outputContexts:GetIntentResponse'</a>,
--   <a>getIntentResponse_outputContexts</a> - An array of
--   <tt>OutputContext</tt> objects that lists the contexts that the intent
--   activates when the intent is fulfilled.
--   
--   <a>$sel:followUpPrompt:GetIntentResponse'</a>,
--   <a>getIntentResponse_followUpPrompt</a> - If defined in the bot,
--   Amazon Lex uses this prompt to solicit additional user activity after
--   the intent is fulfilled. For more information, see PutIntent.
--   
--   <a>$sel:checksum:GetIntentResponse'</a>,
--   <a>getIntentResponse_checksum</a> - Checksum of the intent.
--   
--   <a>$sel:httpStatus:GetIntentResponse'</a>,
--   <a>getIntentResponse_httpStatus</a> - The response's http status code.
newGetIntentResponse :: Int -> GetIntentResponse

-- | Configuration information, if any, to connect to an Amazon Kendra
--   index with the <tt>AMAZON.KendraSearchIntent</tt> intent.
getIntentResponse_kendraConfiguration :: Lens' GetIntentResponse (Maybe KendraConfiguration)

-- | The date that the intent was created.
getIntentResponse_createdDate :: Lens' GetIntentResponse (Maybe UTCTime)

-- | A unique identifier for a built-in intent.
getIntentResponse_parentIntentSignature :: Lens' GetIntentResponse (Maybe Text)

-- | If defined in the bot, Amazon Amazon Lex invokes this Lambda function
--   for each user input. For more information, see PutIntent.
getIntentResponse_dialogCodeHook :: Lens' GetIntentResponse (Maybe CodeHook)

-- | After the Lambda function specified in the
--   <tt>fulfillmentActivity</tt> element fulfills the intent, Amazon Lex
--   conveys this statement to the user.
getIntentResponse_conclusionStatement :: Lens' GetIntentResponse (Maybe Statement)

-- | The date that the intent was updated. When you create a resource, the
--   creation date and the last updated date are the same.
getIntentResponse_lastUpdatedDate :: Lens' GetIntentResponse (Maybe UTCTime)

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
getIntentResponse_rejectionStatement :: Lens' GetIntentResponse (Maybe Statement)

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
getIntentResponse_inputContexts :: Lens' GetIntentResponse (Maybe [InputContext])

-- | The version of the intent.
getIntentResponse_version :: Lens' GetIntentResponse (Maybe Text)

-- | An array of intent slots configured for the intent.
getIntentResponse_slots :: Lens' GetIntentResponse (Maybe [Slot])

-- | Describes how the intent is fulfilled. For more information, see
--   PutIntent.
getIntentResponse_fulfillmentActivity :: Lens' GetIntentResponse (Maybe FulfillmentActivity)

-- | The name of the intent.
getIntentResponse_name :: Lens' GetIntentResponse (Maybe Text)

-- | An array of sample utterances configured for the intent.
getIntentResponse_sampleUtterances :: Lens' GetIntentResponse (Maybe [Text])

-- | A description of the intent.
getIntentResponse_description :: Lens' GetIntentResponse (Maybe Text)

-- | If defined in the bot, Amazon Lex uses prompt to confirm the intent
--   before fulfilling the user's request. For more information, see
--   PutIntent.
getIntentResponse_confirmationPrompt :: Lens' GetIntentResponse (Maybe Prompt)

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
getIntentResponse_outputContexts :: Lens' GetIntentResponse (Maybe [OutputContext])

-- | If defined in the bot, Amazon Lex uses this prompt to solicit
--   additional user activity after the intent is fulfilled. For more
--   information, see PutIntent.
getIntentResponse_followUpPrompt :: Lens' GetIntentResponse (Maybe FollowUpPrompt)

-- | Checksum of the intent.
getIntentResponse_checksum :: Lens' GetIntentResponse (Maybe Text)

-- | The response's http status code.
getIntentResponse_httpStatus :: Lens' GetIntentResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetIntent.GetIntent
instance GHC.Show.Show Network.AWS.LexModels.GetIntent.GetIntent
instance GHC.Read.Read Network.AWS.LexModels.GetIntent.GetIntent
instance GHC.Classes.Eq Network.AWS.LexModels.GetIntent.GetIntent
instance GHC.Generics.Generic Network.AWS.LexModels.GetIntent.GetIntentResponse
instance GHC.Show.Show Network.AWS.LexModels.GetIntent.GetIntentResponse
instance GHC.Read.Read Network.AWS.LexModels.GetIntent.GetIntentResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetIntent.GetIntentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetIntent.GetIntent
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetIntent.GetIntentResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetIntent.GetIntent
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetIntent.GetIntent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetIntent.GetIntent
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetIntent.GetIntent
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetIntent.GetIntent


-- | Gets information about an import job started with the
--   <tt>StartImport</tt> operation.
module Network.AWS.LexModels.GetImport

-- | <i>See:</i> <a>newGetImport</a> smart constructor.
data GetImport
GetImport' :: Text -> GetImport

-- | The identifier of the import job information to return.
[$sel:importId:GetImport'] :: GetImport -> Text

-- | Create a value of <a>GetImport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importId:GetImport'</a>, <a>getImport_importId</a> - The
--   identifier of the import job information to return.
newGetImport :: Text -> GetImport

-- | The identifier of the import job information to return.
getImport_importId :: Lens' GetImport Text

-- | <i>See:</i> <a>newGetImportResponse</a> smart constructor.
data GetImportResponse
GetImportResponse' :: Maybe POSIX -> Maybe MergeStrategy -> Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe [Text] -> Maybe ImportStatus -> Int -> GetImportResponse

-- | A timestamp for the date and time that the import job was created.
[$sel:createdDate:GetImportResponse'] :: GetImportResponse -> Maybe POSIX

-- | The action taken when there was a conflict between an existing
--   resource and a resource in the import file.
[$sel:mergeStrategy:GetImportResponse'] :: GetImportResponse -> Maybe MergeStrategy

-- | The identifier for the specific import job.
[$sel:importId:GetImportResponse'] :: GetImportResponse -> Maybe Text

-- | The type of resource imported.
[$sel:resourceType:GetImportResponse'] :: GetImportResponse -> Maybe ResourceType

-- | The name given to the import job.
[$sel:name:GetImportResponse'] :: GetImportResponse -> Maybe Text

-- | A string that describes why an import job failed to complete.
[$sel:failureReason:GetImportResponse'] :: GetImportResponse -> Maybe [Text]

-- | The status of the import job. If the status is <tt>FAILED</tt>, you
--   can get the reason for the failure from the <tt>failureReason</tt>
--   field.
[$sel:importStatus:GetImportResponse'] :: GetImportResponse -> Maybe ImportStatus

-- | The response's http status code.
[$sel:httpStatus:GetImportResponse'] :: GetImportResponse -> Int

-- | Create a value of <a>GetImportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:GetImportResponse'</a>,
--   <a>getImportResponse_createdDate</a> - A timestamp for the date and
--   time that the import job was created.
--   
--   <a>$sel:mergeStrategy:GetImportResponse'</a>,
--   <a>getImportResponse_mergeStrategy</a> - The action taken when there
--   was a conflict between an existing resource and a resource in the
--   import file.
--   
--   <a>$sel:importId:GetImport'</a>, <a>getImportResponse_importId</a> -
--   The identifier for the specific import job.
--   
--   <a>$sel:resourceType:GetImportResponse'</a>,
--   <a>getImportResponse_resourceType</a> - The type of resource imported.
--   
--   <a>$sel:name:GetImportResponse'</a>, <a>getImportResponse_name</a> -
--   The name given to the import job.
--   
--   <a>$sel:failureReason:GetImportResponse'</a>,
--   <a>getImportResponse_failureReason</a> - A string that describes why
--   an import job failed to complete.
--   
--   <a>$sel:importStatus:GetImportResponse'</a>,
--   <a>getImportResponse_importStatus</a> - The status of the import job.
--   If the status is <tt>FAILED</tt>, you can get the reason for the
--   failure from the <tt>failureReason</tt> field.
--   
--   <a>$sel:httpStatus:GetImportResponse'</a>,
--   <a>getImportResponse_httpStatus</a> - The response's http status code.
newGetImportResponse :: Int -> GetImportResponse

-- | A timestamp for the date and time that the import job was created.
getImportResponse_createdDate :: Lens' GetImportResponse (Maybe UTCTime)

-- | The action taken when there was a conflict between an existing
--   resource and a resource in the import file.
getImportResponse_mergeStrategy :: Lens' GetImportResponse (Maybe MergeStrategy)

-- | The identifier for the specific import job.
getImportResponse_importId :: Lens' GetImportResponse (Maybe Text)

-- | The type of resource imported.
getImportResponse_resourceType :: Lens' GetImportResponse (Maybe ResourceType)

-- | The name given to the import job.
getImportResponse_name :: Lens' GetImportResponse (Maybe Text)

-- | A string that describes why an import job failed to complete.
getImportResponse_failureReason :: Lens' GetImportResponse (Maybe [Text])

-- | The status of the import job. If the status is <tt>FAILED</tt>, you
--   can get the reason for the failure from the <tt>failureReason</tt>
--   field.
getImportResponse_importStatus :: Lens' GetImportResponse (Maybe ImportStatus)

-- | The response's http status code.
getImportResponse_httpStatus :: Lens' GetImportResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetImport.GetImport
instance GHC.Show.Show Network.AWS.LexModels.GetImport.GetImport
instance GHC.Read.Read Network.AWS.LexModels.GetImport.GetImport
instance GHC.Classes.Eq Network.AWS.LexModels.GetImport.GetImport
instance GHC.Generics.Generic Network.AWS.LexModels.GetImport.GetImportResponse
instance GHC.Show.Show Network.AWS.LexModels.GetImport.GetImportResponse
instance GHC.Read.Read Network.AWS.LexModels.GetImport.GetImportResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetImport.GetImportResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetImport.GetImport
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetImport.GetImportResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetImport.GetImport
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetImport.GetImport
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetImport.GetImport
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetImport.GetImport
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetImport.GetImport


-- | Exports the contents of a Amazon Lex resource in a specified format.
module Network.AWS.LexModels.GetExport

-- | <i>See:</i> <a>newGetExport</a> smart constructor.
data GetExport
GetExport' :: Text -> Text -> ResourceType -> ExportType -> GetExport

-- | The name of the bot to export.
[$sel:name:GetExport'] :: GetExport -> Text

-- | The version of the bot to export.
[$sel:version:GetExport'] :: GetExport -> Text

-- | The type of resource to export.
[$sel:resourceType:GetExport'] :: GetExport -> ResourceType

-- | The format of the exported data.
[$sel:exportType:GetExport'] :: GetExport -> ExportType

-- | Create a value of <a>GetExport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetExport'</a>, <a>getExport_name</a> - The name of the
--   bot to export.
--   
--   <a>$sel:version:GetExport'</a>, <a>getExport_version</a> - The version
--   of the bot to export.
--   
--   <a>$sel:resourceType:GetExport'</a>, <a>getExport_resourceType</a> -
--   The type of resource to export.
--   
--   <a>$sel:exportType:GetExport'</a>, <a>getExport_exportType</a> - The
--   format of the exported data.
newGetExport :: Text -> Text -> ResourceType -> ExportType -> GetExport

-- | The name of the bot to export.
getExport_name :: Lens' GetExport Text

-- | The version of the bot to export.
getExport_version :: Lens' GetExport Text

-- | The type of resource to export.
getExport_resourceType :: Lens' GetExport ResourceType

-- | The format of the exported data.
getExport_exportType :: Lens' GetExport ExportType

-- | <i>See:</i> <a>newGetExportResponse</a> smart constructor.
data GetExportResponse
GetExportResponse' :: Maybe ExportStatus -> Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Maybe ExportType -> Maybe Text -> Int -> GetExportResponse

-- | The status of the export.
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The export is in progress.</li>
--   <li><tt>READY</tt> - The export is complete.</li>
--   <li><tt>FAILED</tt> - The export could not be completed.</li>
--   </ul>
[$sel:exportStatus:GetExportResponse'] :: GetExportResponse -> Maybe ExportStatus

-- | The version of the bot being exported.
[$sel:version:GetExportResponse'] :: GetExportResponse -> Maybe Text

-- | The type of the exported resource.
[$sel:resourceType:GetExportResponse'] :: GetExportResponse -> Maybe ResourceType

-- | The name of the bot being exported.
[$sel:name:GetExportResponse'] :: GetExportResponse -> Maybe Text

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to export the resource.
[$sel:failureReason:GetExportResponse'] :: GetExportResponse -> Maybe Text

-- | The format of the exported data.
[$sel:exportType:GetExportResponse'] :: GetExportResponse -> Maybe ExportType

-- | An S3 pre-signed URL that provides the location of the exported
--   resource. The exported resource is a ZIP archive that contains the
--   exported resource in JSON format. The structure of the archive may
--   change. Your code should not rely on the archive structure.
[$sel:url:GetExportResponse'] :: GetExportResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetExportResponse'] :: GetExportResponse -> Int

-- | Create a value of <a>GetExportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportStatus:GetExportResponse'</a>,
--   <a>getExportResponse_exportStatus</a> - The status of the export.
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The export is in progress.</li>
--   <li><tt>READY</tt> - The export is complete.</li>
--   <li><tt>FAILED</tt> - The export could not be completed.</li>
--   </ul>
--   
--   <a>$sel:version:GetExport'</a>, <a>getExportResponse_version</a> - The
--   version of the bot being exported.
--   
--   <a>$sel:resourceType:GetExport'</a>,
--   <a>getExportResponse_resourceType</a> - The type of the exported
--   resource.
--   
--   <a>$sel:name:GetExport'</a>, <a>getExportResponse_name</a> - The name
--   of the bot being exported.
--   
--   <a>$sel:failureReason:GetExportResponse'</a>,
--   <a>getExportResponse_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   export the resource.
--   
--   <a>$sel:exportType:GetExport'</a>, <a>getExportResponse_exportType</a>
--   - The format of the exported data.
--   
--   <a>$sel:url:GetExportResponse'</a>, <a>getExportResponse_url</a> - An
--   S3 pre-signed URL that provides the location of the exported resource.
--   The exported resource is a ZIP archive that contains the exported
--   resource in JSON format. The structure of the archive may change. Your
--   code should not rely on the archive structure.
--   
--   <a>$sel:httpStatus:GetExportResponse'</a>,
--   <a>getExportResponse_httpStatus</a> - The response's http status code.
newGetExportResponse :: Int -> GetExportResponse

-- | The status of the export.
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The export is in progress.</li>
--   <li><tt>READY</tt> - The export is complete.</li>
--   <li><tt>FAILED</tt> - The export could not be completed.</li>
--   </ul>
getExportResponse_exportStatus :: Lens' GetExportResponse (Maybe ExportStatus)

-- | The version of the bot being exported.
getExportResponse_version :: Lens' GetExportResponse (Maybe Text)

-- | The type of the exported resource.
getExportResponse_resourceType :: Lens' GetExportResponse (Maybe ResourceType)

-- | The name of the bot being exported.
getExportResponse_name :: Lens' GetExportResponse (Maybe Text)

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to export the resource.
getExportResponse_failureReason :: Lens' GetExportResponse (Maybe Text)

-- | The format of the exported data.
getExportResponse_exportType :: Lens' GetExportResponse (Maybe ExportType)

-- | An S3 pre-signed URL that provides the location of the exported
--   resource. The exported resource is a ZIP archive that contains the
--   exported resource in JSON format. The structure of the archive may
--   change. Your code should not rely on the archive structure.
getExportResponse_url :: Lens' GetExportResponse (Maybe Text)

-- | The response's http status code.
getExportResponse_httpStatus :: Lens' GetExportResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetExport.GetExport
instance GHC.Show.Show Network.AWS.LexModels.GetExport.GetExport
instance GHC.Read.Read Network.AWS.LexModels.GetExport.GetExport
instance GHC.Classes.Eq Network.AWS.LexModels.GetExport.GetExport
instance GHC.Generics.Generic Network.AWS.LexModels.GetExport.GetExportResponse
instance GHC.Show.Show Network.AWS.LexModels.GetExport.GetExportResponse
instance GHC.Read.Read Network.AWS.LexModels.GetExport.GetExportResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetExport.GetExportResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetExport.GetExport
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetExport.GetExportResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetExport.GetExport
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetExport.GetExport
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetExport.GetExport
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetExport.GetExport
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetExport.GetExport


-- | Gets a list of built-in slot types that meet the specified criteria.
--   
--   For a list of built-in slot types, see <a>Slot Type Reference</a> in
--   the <i>Alexa Skills Kit</i>.
--   
--   This operation requires permission for the
--   <tt>lex:GetBuiltInSlotTypes</tt> action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetBuiltinSlotTypes

-- | <i>See:</i> <a>newGetBuiltinSlotTypes</a> smart constructor.
data GetBuiltinSlotTypes
GetBuiltinSlotTypes' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Locale -> GetBuiltinSlotTypes

-- | Substring to match in built-in slot type signatures. A slot type will
--   be returned if any part of its signature matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz."
[$sel:signatureContains:GetBuiltinSlotTypes'] :: GetBuiltinSlotTypes -> Maybe Text

-- | A pagination token that fetches the next page of slot types. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of slot
--   types, specify the pagination token in the next request.
[$sel:nextToken:GetBuiltinSlotTypes'] :: GetBuiltinSlotTypes -> Maybe Text

-- | The maximum number of slot types to return in the response. The
--   default is 10.
[$sel:maxResults:GetBuiltinSlotTypes'] :: GetBuiltinSlotTypes -> Maybe Natural

-- | A list of locales that the slot type supports.
[$sel:locale:GetBuiltinSlotTypes'] :: GetBuiltinSlotTypes -> Maybe Locale

-- | Create a value of <a>GetBuiltinSlotTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signatureContains:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypes_signatureContains</a> - Substring to match in
--   built-in slot type signatures. A slot type will be returned if any
--   part of its signature matches the substring. For example, "xyz"
--   matches both "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypes_nextToken</a> - A pagination token that fetches
--   the next page of slot types. If the response to this API call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of slot types, specify the pagination token in the
--   next request.
--   
--   <a>$sel:maxResults:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypes_maxResults</a> - The maximum number of slot
--   types to return in the response. The default is 10.
--   
--   <a>$sel:locale:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypes_locale</a> - A list of locales that the slot
--   type supports.
newGetBuiltinSlotTypes :: GetBuiltinSlotTypes

-- | Substring to match in built-in slot type signatures. A slot type will
--   be returned if any part of its signature matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz."
getBuiltinSlotTypes_signatureContains :: Lens' GetBuiltinSlotTypes (Maybe Text)

-- | A pagination token that fetches the next page of slot types. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of slot
--   types, specify the pagination token in the next request.
getBuiltinSlotTypes_nextToken :: Lens' GetBuiltinSlotTypes (Maybe Text)

-- | The maximum number of slot types to return in the response. The
--   default is 10.
getBuiltinSlotTypes_maxResults :: Lens' GetBuiltinSlotTypes (Maybe Natural)

-- | A list of locales that the slot type supports.
getBuiltinSlotTypes_locale :: Lens' GetBuiltinSlotTypes (Maybe Locale)

-- | <i>See:</i> <a>newGetBuiltinSlotTypesResponse</a> smart constructor.
data GetBuiltinSlotTypesResponse
GetBuiltinSlotTypesResponse' :: Maybe [BuiltinSlotTypeMetadata] -> Maybe Text -> Int -> GetBuiltinSlotTypesResponse

-- | An array of <tt>BuiltInSlotTypeMetadata</tt> objects, one entry for
--   each slot type returned.
[$sel:slotTypes:GetBuiltinSlotTypesResponse'] :: GetBuiltinSlotTypesResponse -> Maybe [BuiltinSlotTypeMetadata]

-- | If the response is truncated, the response includes a pagination token
--   that you can use in your next request to fetch the next page of slot
--   types.
[$sel:nextToken:GetBuiltinSlotTypesResponse'] :: GetBuiltinSlotTypesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetBuiltinSlotTypesResponse'] :: GetBuiltinSlotTypesResponse -> Int

-- | Create a value of <a>GetBuiltinSlotTypesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypes:GetBuiltinSlotTypesResponse'</a>,
--   <a>getBuiltinSlotTypesResponse_slotTypes</a> - An array of
--   <tt>BuiltInSlotTypeMetadata</tt> objects, one entry for each slot type
--   returned.
--   
--   <a>$sel:nextToken:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypesResponse_nextToken</a> - If the response is
--   truncated, the response includes a pagination token that you can use
--   in your next request to fetch the next page of slot types.
--   
--   <a>$sel:httpStatus:GetBuiltinSlotTypesResponse'</a>,
--   <a>getBuiltinSlotTypesResponse_httpStatus</a> - The response's http
--   status code.
newGetBuiltinSlotTypesResponse :: Int -> GetBuiltinSlotTypesResponse

-- | An array of <tt>BuiltInSlotTypeMetadata</tt> objects, one entry for
--   each slot type returned.
getBuiltinSlotTypesResponse_slotTypes :: Lens' GetBuiltinSlotTypesResponse (Maybe [BuiltinSlotTypeMetadata])

-- | If the response is truncated, the response includes a pagination token
--   that you can use in your next request to fetch the next page of slot
--   types.
getBuiltinSlotTypesResponse_nextToken :: Lens' GetBuiltinSlotTypesResponse (Maybe Text)

-- | The response's http status code.
getBuiltinSlotTypesResponse_httpStatus :: Lens' GetBuiltinSlotTypesResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance GHC.Show.Show Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance GHC.Read.Read Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance GHC.Classes.Eq Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance GHC.Generics.Generic Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypesResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypesResponse
instance GHC.Read.Read Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypesResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBuiltinSlotTypes.GetBuiltinSlotTypes


-- | Gets a list of built-in intents that meet the specified criteria.
--   
--   This operation requires permission for the
--   <tt>lex:GetBuiltinIntents</tt> action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetBuiltinIntents

-- | <i>See:</i> <a>newGetBuiltinIntents</a> smart constructor.
data GetBuiltinIntents
GetBuiltinIntents' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Locale -> GetBuiltinIntents

-- | Substring to match in built-in intent signatures. An intent will be
--   returned if any part of its signature matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz." To find the
--   signature for an intent, see <a>Standard Built-in Intents</a> in the
--   <i>Alexa Skills Kit</i>.
[$sel:signatureContains:GetBuiltinIntents'] :: GetBuiltinIntents -> Maybe Text

-- | A pagination token that fetches the next page of intents. If this API
--   call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of intents, use the pagination token
--   in the next request.
[$sel:nextToken:GetBuiltinIntents'] :: GetBuiltinIntents -> Maybe Text

-- | The maximum number of intents to return in the response. The default
--   is 10.
[$sel:maxResults:GetBuiltinIntents'] :: GetBuiltinIntents -> Maybe Natural

-- | A list of locales that the intent supports.
[$sel:locale:GetBuiltinIntents'] :: GetBuiltinIntents -> Maybe Locale

-- | Create a value of <a>GetBuiltinIntents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signatureContains:GetBuiltinIntents'</a>,
--   <a>getBuiltinIntents_signatureContains</a> - Substring to match in
--   built-in intent signatures. An intent will be returned if any part of
--   its signature matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz." To find the signature for an intent, see
--   <a>Standard Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
--   
--   <a>$sel:nextToken:GetBuiltinIntents'</a>,
--   <a>getBuiltinIntents_nextToken</a> - A pagination token that fetches
--   the next page of intents. If this API call is truncated, Amazon Lex
--   returns a pagination token in the response. To fetch the next page of
--   intents, use the pagination token in the next request.
--   
--   <a>$sel:maxResults:GetBuiltinIntents'</a>,
--   <a>getBuiltinIntents_maxResults</a> - The maximum number of intents to
--   return in the response. The default is 10.
--   
--   <a>$sel:locale:GetBuiltinIntents'</a>, <a>getBuiltinIntents_locale</a>
--   - A list of locales that the intent supports.
newGetBuiltinIntents :: GetBuiltinIntents

-- | Substring to match in built-in intent signatures. An intent will be
--   returned if any part of its signature matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz." To find the
--   signature for an intent, see <a>Standard Built-in Intents</a> in the
--   <i>Alexa Skills Kit</i>.
getBuiltinIntents_signatureContains :: Lens' GetBuiltinIntents (Maybe Text)

-- | A pagination token that fetches the next page of intents. If this API
--   call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of intents, use the pagination token
--   in the next request.
getBuiltinIntents_nextToken :: Lens' GetBuiltinIntents (Maybe Text)

-- | The maximum number of intents to return in the response. The default
--   is 10.
getBuiltinIntents_maxResults :: Lens' GetBuiltinIntents (Maybe Natural)

-- | A list of locales that the intent supports.
getBuiltinIntents_locale :: Lens' GetBuiltinIntents (Maybe Locale)

-- | <i>See:</i> <a>newGetBuiltinIntentsResponse</a> smart constructor.
data GetBuiltinIntentsResponse
GetBuiltinIntentsResponse' :: Maybe Text -> Maybe [BuiltinIntentMetadata] -> Int -> GetBuiltinIntentsResponse

-- | A pagination token that fetches the next page of intents. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of intents,
--   specify the pagination token in the next request.
[$sel:nextToken:GetBuiltinIntentsResponse'] :: GetBuiltinIntentsResponse -> Maybe Text

-- | An array of <tt>builtinIntentMetadata</tt> objects, one for each
--   intent in the response.
[$sel:intents:GetBuiltinIntentsResponse'] :: GetBuiltinIntentsResponse -> Maybe [BuiltinIntentMetadata]

-- | The response's http status code.
[$sel:httpStatus:GetBuiltinIntentsResponse'] :: GetBuiltinIntentsResponse -> Int

-- | Create a value of <a>GetBuiltinIntentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBuiltinIntents'</a>,
--   <a>getBuiltinIntentsResponse_nextToken</a> - A pagination token that
--   fetches the next page of intents. If the response to this API call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of intents, specify the pagination token in the
--   next request.
--   
--   <a>$sel:intents:GetBuiltinIntentsResponse'</a>,
--   <a>getBuiltinIntentsResponse_intents</a> - An array of
--   <tt>builtinIntentMetadata</tt> objects, one for each intent in the
--   response.
--   
--   <a>$sel:httpStatus:GetBuiltinIntentsResponse'</a>,
--   <a>getBuiltinIntentsResponse_httpStatus</a> - The response's http
--   status code.
newGetBuiltinIntentsResponse :: Int -> GetBuiltinIntentsResponse

-- | A pagination token that fetches the next page of intents. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of intents,
--   specify the pagination token in the next request.
getBuiltinIntentsResponse_nextToken :: Lens' GetBuiltinIntentsResponse (Maybe Text)

-- | An array of <tt>builtinIntentMetadata</tt> objects, one for each
--   intent in the response.
getBuiltinIntentsResponse_intents :: Lens' GetBuiltinIntentsResponse (Maybe [BuiltinIntentMetadata])

-- | The response's http status code.
getBuiltinIntentsResponse_httpStatus :: Lens' GetBuiltinIntentsResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance GHC.Show.Show Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance GHC.Read.Read Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance GHC.Classes.Eq Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance GHC.Generics.Generic Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntentsResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntentsResponse
instance GHC.Read.Read Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntentsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBuiltinIntents.GetBuiltinIntents


-- | Returns information about a built-in intent.
--   
--   This operation requires permission for the
--   <tt>lex:GetBuiltinIntent</tt> action.
module Network.AWS.LexModels.GetBuiltinIntent

-- | <i>See:</i> <a>newGetBuiltinIntent</a> smart constructor.
data GetBuiltinIntent
GetBuiltinIntent' :: Text -> GetBuiltinIntent

-- | The unique identifier for a built-in intent. To find the signature for
--   an intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
[$sel:signature:GetBuiltinIntent'] :: GetBuiltinIntent -> Text

-- | Create a value of <a>GetBuiltinIntent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signature:GetBuiltinIntent'</a>,
--   <a>getBuiltinIntent_signature</a> - The unique identifier for a
--   built-in intent. To find the signature for an intent, see <a>Standard
--   Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
newGetBuiltinIntent :: Text -> GetBuiltinIntent

-- | The unique identifier for a built-in intent. To find the signature for
--   an intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
getBuiltinIntent_signature :: Lens' GetBuiltinIntent Text

-- | <i>See:</i> <a>newGetBuiltinIntentResponse</a> smart constructor.
data GetBuiltinIntentResponse
GetBuiltinIntentResponse' :: Maybe [BuiltinIntentSlot] -> Maybe Text -> Maybe [Locale] -> Int -> GetBuiltinIntentResponse

-- | An array of <tt>BuiltinIntentSlot</tt> objects, one entry for each
--   slot type in the intent.
[$sel:slots:GetBuiltinIntentResponse'] :: GetBuiltinIntentResponse -> Maybe [BuiltinIntentSlot]

-- | The unique identifier for a built-in intent.
[$sel:signature:GetBuiltinIntentResponse'] :: GetBuiltinIntentResponse -> Maybe Text

-- | A list of locales that the intent supports.
[$sel:supportedLocales:GetBuiltinIntentResponse'] :: GetBuiltinIntentResponse -> Maybe [Locale]

-- | The response's http status code.
[$sel:httpStatus:GetBuiltinIntentResponse'] :: GetBuiltinIntentResponse -> Int

-- | Create a value of <a>GetBuiltinIntentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:GetBuiltinIntentResponse'</a>,
--   <a>getBuiltinIntentResponse_slots</a> - An array of
--   <tt>BuiltinIntentSlot</tt> objects, one entry for each slot type in
--   the intent.
--   
--   <a>$sel:signature:GetBuiltinIntent'</a>,
--   <a>getBuiltinIntentResponse_signature</a> - The unique identifier for
--   a built-in intent.
--   
--   <a>$sel:supportedLocales:GetBuiltinIntentResponse'</a>,
--   <a>getBuiltinIntentResponse_supportedLocales</a> - A list of locales
--   that the intent supports.
--   
--   <a>$sel:httpStatus:GetBuiltinIntentResponse'</a>,
--   <a>getBuiltinIntentResponse_httpStatus</a> - The response's http
--   status code.
newGetBuiltinIntentResponse :: Int -> GetBuiltinIntentResponse

-- | An array of <tt>BuiltinIntentSlot</tt> objects, one entry for each
--   slot type in the intent.
getBuiltinIntentResponse_slots :: Lens' GetBuiltinIntentResponse (Maybe [BuiltinIntentSlot])

-- | The unique identifier for a built-in intent.
getBuiltinIntentResponse_signature :: Lens' GetBuiltinIntentResponse (Maybe Text)

-- | A list of locales that the intent supports.
getBuiltinIntentResponse_supportedLocales :: Lens' GetBuiltinIntentResponse (Maybe [Locale])

-- | The response's http status code.
getBuiltinIntentResponse_httpStatus :: Lens' GetBuiltinIntentResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance GHC.Show.Show Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance GHC.Read.Read Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance GHC.Classes.Eq Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance GHC.Generics.Generic Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntentResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntentResponse
instance GHC.Read.Read Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntentResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntentResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBuiltinIntent.GetBuiltinIntent


-- | Returns bot information as follows:
--   
--   <ul>
--   <li>If you provide the <tt>nameContains</tt> field, the response
--   includes information for the <tt>$LATEST</tt> version of all bots
--   whose name contains the specified string.</li>
--   <li>If you don't specify the <tt>nameContains</tt> field, the
--   operation returns information about the <tt>$LATEST</tt> version of
--   all of your bots.</li>
--   </ul>
--   
--   This operation requires permission for the <tt>lex:GetBots</tt>
--   action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetBots

-- | <i>See:</i> <a>newGetBots</a> smart constructor.
data GetBots
GetBots' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetBots

-- | Substring to match in bot names. A bot will be returned if any part of
--   its name matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz."
[$sel:nameContains:GetBots'] :: GetBots -> Maybe Text

-- | A pagination token that fetches the next page of bots. If the response
--   to this call is truncated, Amazon Lex returns a pagination token in
--   the response. To fetch the next page of bots, specify the pagination
--   token in the next request.
[$sel:nextToken:GetBots'] :: GetBots -> Maybe Text

-- | The maximum number of bots to return in the response that the request
--   will return. The default is 10.
[$sel:maxResults:GetBots'] :: GetBots -> Maybe Natural

-- | Create a value of <a>GetBots</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetBots'</a>, <a>getBots_nameContains</a> -
--   Substring to match in bot names. A bot will be returned if any part of
--   its name matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetBots'</a>, <a>getBots_nextToken</a> - A
--   pagination token that fetches the next page of bots. If the response
--   to this call is truncated, Amazon Lex returns a pagination token in
--   the response. To fetch the next page of bots, specify the pagination
--   token in the next request.
--   
--   <a>$sel:maxResults:GetBots'</a>, <a>getBots_maxResults</a> - The
--   maximum number of bots to return in the response that the request will
--   return. The default is 10.
newGetBots :: GetBots

-- | Substring to match in bot names. A bot will be returned if any part of
--   its name matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz."
getBots_nameContains :: Lens' GetBots (Maybe Text)

-- | A pagination token that fetches the next page of bots. If the response
--   to this call is truncated, Amazon Lex returns a pagination token in
--   the response. To fetch the next page of bots, specify the pagination
--   token in the next request.
getBots_nextToken :: Lens' GetBots (Maybe Text)

-- | The maximum number of bots to return in the response that the request
--   will return. The default is 10.
getBots_maxResults :: Lens' GetBots (Maybe Natural)

-- | <i>See:</i> <a>newGetBotsResponse</a> smart constructor.
data GetBotsResponse
GetBotsResponse' :: Maybe Text -> Maybe [BotMetadata] -> Int -> GetBotsResponse

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of bots.
[$sel:nextToken:GetBotsResponse'] :: GetBotsResponse -> Maybe Text

-- | An array of <tt>botMetadata</tt> objects, with one entry for each bot.
[$sel:bots:GetBotsResponse'] :: GetBotsResponse -> Maybe [BotMetadata]

-- | The response's http status code.
[$sel:httpStatus:GetBotsResponse'] :: GetBotsResponse -> Int

-- | Create a value of <a>GetBotsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBots'</a>, <a>getBotsResponse_nextToken</a> - If
--   the response is truncated, it includes a pagination token that you can
--   specify in your next request to fetch the next page of bots.
--   
--   <a>$sel:bots:GetBotsResponse'</a>, <a>getBotsResponse_bots</a> - An
--   array of <tt>botMetadata</tt> objects, with one entry for each bot.
--   
--   <a>$sel:httpStatus:GetBotsResponse'</a>,
--   <a>getBotsResponse_httpStatus</a> - The response's http status code.
newGetBotsResponse :: Int -> GetBotsResponse

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of bots.
getBotsResponse_nextToken :: Lens' GetBotsResponse (Maybe Text)

-- | An array of <tt>botMetadata</tt> objects, with one entry for each bot.
getBotsResponse_bots :: Lens' GetBotsResponse (Maybe [BotMetadata])

-- | The response's http status code.
getBotsResponse_httpStatus :: Lens' GetBotsResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBots.GetBots
instance GHC.Show.Show Network.AWS.LexModels.GetBots.GetBots
instance GHC.Read.Read Network.AWS.LexModels.GetBots.GetBots
instance GHC.Classes.Eq Network.AWS.LexModels.GetBots.GetBots
instance GHC.Generics.Generic Network.AWS.LexModels.GetBots.GetBotsResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBots.GetBotsResponse
instance GHC.Read.Read Network.AWS.LexModels.GetBots.GetBotsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBots.GetBotsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBots.GetBots
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBots.GetBotsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetBots.GetBots
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBots.GetBots
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBots.GetBots
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBots.GetBots
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBots.GetBots
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBots.GetBots


-- | Gets information about all of the versions of a bot.
--   
--   The <tt>GetBotVersions</tt> operation returns a <tt>BotMetadata</tt>
--   object for each version of a bot. For example, if a bot has three
--   numbered versions, the <tt>GetBotVersions</tt> operation returns four
--   <tt>BotMetadata</tt> objects in the response, one for each numbered
--   version and one for the <tt>$LATEST</tt> version.
--   
--   The <tt>GetBotVersions</tt> operation always returns at least one
--   version, the <tt>$LATEST</tt> version.
--   
--   This operation requires permissions for the
--   <tt>lex:GetBotVersions</tt> action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetBotVersions

-- | <i>See:</i> <a>newGetBotVersions</a> smart constructor.
data GetBotVersions
GetBotVersions' :: Maybe Text -> Maybe Natural -> Text -> GetBotVersions

-- | A pagination token for fetching the next page of bot versions. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of versions, specify the
--   pagination token in the next request.
[$sel:nextToken:GetBotVersions'] :: GetBotVersions -> Maybe Text

-- | The maximum number of bot versions to return in the response. The
--   default is 10.
[$sel:maxResults:GetBotVersions'] :: GetBotVersions -> Maybe Natural

-- | The name of the bot for which versions should be returned.
[$sel:name:GetBotVersions'] :: GetBotVersions -> Text

-- | Create a value of <a>GetBotVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBotVersions'</a>, <a>getBotVersions_nextToken</a>
--   - A pagination token for fetching the next page of bot versions. If
--   the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
--   
--   <a>$sel:maxResults:GetBotVersions'</a>,
--   <a>getBotVersions_maxResults</a> - The maximum number of bot versions
--   to return in the response. The default is 10.
--   
--   <a>$sel:name:GetBotVersions'</a>, <a>getBotVersions_name</a> - The
--   name of the bot for which versions should be returned.
newGetBotVersions :: Text -> GetBotVersions

-- | A pagination token for fetching the next page of bot versions. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of versions, specify the
--   pagination token in the next request.
getBotVersions_nextToken :: Lens' GetBotVersions (Maybe Text)

-- | The maximum number of bot versions to return in the response. The
--   default is 10.
getBotVersions_maxResults :: Lens' GetBotVersions (Maybe Natural)

-- | The name of the bot for which versions should be returned.
getBotVersions_name :: Lens' GetBotVersions Text

-- | <i>See:</i> <a>newGetBotVersionsResponse</a> smart constructor.
data GetBotVersionsResponse
GetBotVersionsResponse' :: Maybe Text -> Maybe [BotMetadata] -> Int -> GetBotVersionsResponse

-- | A pagination token for fetching the next page of bot versions. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of versions, specify the
--   pagination token in the next request.
[$sel:nextToken:GetBotVersionsResponse'] :: GetBotVersionsResponse -> Maybe Text

-- | An array of <tt>BotMetadata</tt> objects, one for each numbered
--   version of the bot plus one for the <tt>$LATEST</tt> version.
[$sel:bots:GetBotVersionsResponse'] :: GetBotVersionsResponse -> Maybe [BotMetadata]

-- | The response's http status code.
[$sel:httpStatus:GetBotVersionsResponse'] :: GetBotVersionsResponse -> Int

-- | Create a value of <a>GetBotVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBotVersions'</a>,
--   <a>getBotVersionsResponse_nextToken</a> - A pagination token for
--   fetching the next page of bot versions. If the response to this call
--   is truncated, Amazon Lex returns a pagination token in the response.
--   To fetch the next page of versions, specify the pagination token in
--   the next request.
--   
--   <a>$sel:bots:GetBotVersionsResponse'</a>,
--   <a>getBotVersionsResponse_bots</a> - An array of <tt>BotMetadata</tt>
--   objects, one for each numbered version of the bot plus one for the
--   <tt>$LATEST</tt> version.
--   
--   <a>$sel:httpStatus:GetBotVersionsResponse'</a>,
--   <a>getBotVersionsResponse_httpStatus</a> - The response's http status
--   code.
newGetBotVersionsResponse :: Int -> GetBotVersionsResponse

-- | A pagination token for fetching the next page of bot versions. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of versions, specify the
--   pagination token in the next request.
getBotVersionsResponse_nextToken :: Lens' GetBotVersionsResponse (Maybe Text)

-- | An array of <tt>BotMetadata</tt> objects, one for each numbered
--   version of the bot plus one for the <tt>$LATEST</tt> version.
getBotVersionsResponse_bots :: Lens' GetBotVersionsResponse (Maybe [BotMetadata])

-- | The response's http status code.
getBotVersionsResponse_httpStatus :: Lens' GetBotVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance GHC.Show.Show Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance GHC.Read.Read Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotVersions.GetBotVersionsResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBotVersions.GetBotVersionsResponse
instance GHC.Read.Read Network.AWS.LexModels.GetBotVersions.GetBotVersionsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotVersions.GetBotVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotVersions.GetBotVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBotVersions.GetBotVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBotVersions.GetBotVersions


-- | Returns a list of all of the channels associated with the specified
--   bot.
--   
--   The <tt>GetBotChannelAssociations</tt> operation requires permissions
--   for the <tt>lex:GetBotChannelAssociations</tt> action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetBotChannelAssociations

-- | <i>See:</i> <a>newGetBotChannelAssociations</a> smart constructor.
data GetBotChannelAssociations
GetBotChannelAssociations' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> GetBotChannelAssociations

-- | Substring to match in channel association names. An association will
--   be returned if any part of its name matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz." To return all bot
--   channel associations, use a hyphen ("-") as the <tt>nameContains</tt>
--   parameter.
[$sel:nameContains:GetBotChannelAssociations'] :: GetBotChannelAssociations -> Maybe Text

-- | A pagination token for fetching the next page of associations. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of associations, specify
--   the pagination token in the next request.
[$sel:nextToken:GetBotChannelAssociations'] :: GetBotChannelAssociations -> Maybe Text

-- | The maximum number of associations to return in the response. The
--   default is 50.
[$sel:maxResults:GetBotChannelAssociations'] :: GetBotChannelAssociations -> Maybe Natural

-- | The name of the Amazon Lex bot in the association.
[$sel:botName:GetBotChannelAssociations'] :: GetBotChannelAssociations -> Text

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
[$sel:botAlias:GetBotChannelAssociations'] :: GetBotChannelAssociations -> Text

-- | Create a value of <a>GetBotChannelAssociations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_nameContains</a> - Substring to match in
--   channel association names. An association will be returned if any part
--   of its name matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz." To return all bot channel associations, use a
--   hyphen ("-") as the <tt>nameContains</tt> parameter.
--   
--   <a>$sel:nextToken:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_nextToken</a> - A pagination token for
--   fetching the next page of associations. If the response to this call
--   is truncated, Amazon Lex returns a pagination token in the response.
--   To fetch the next page of associations, specify the pagination token
--   in the next request.
--   
--   <a>$sel:maxResults:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_maxResults</a> - The maximum number of
--   associations to return in the response. The default is 50.
--   
--   <a>$sel:botName:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_botName</a> - The name of the Amazon Lex
--   bot in the association.
--   
--   <a>$sel:botAlias:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_botAlias</a> - An alias pointing to the
--   specific version of the Amazon Lex bot to which this association is
--   being made.
newGetBotChannelAssociations :: Text -> Text -> GetBotChannelAssociations

-- | Substring to match in channel association names. An association will
--   be returned if any part of its name matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz." To return all bot
--   channel associations, use a hyphen ("-") as the <tt>nameContains</tt>
--   parameter.
getBotChannelAssociations_nameContains :: Lens' GetBotChannelAssociations (Maybe Text)

-- | A pagination token for fetching the next page of associations. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of associations, specify
--   the pagination token in the next request.
getBotChannelAssociations_nextToken :: Lens' GetBotChannelAssociations (Maybe Text)

-- | The maximum number of associations to return in the response. The
--   default is 50.
getBotChannelAssociations_maxResults :: Lens' GetBotChannelAssociations (Maybe Natural)

-- | The name of the Amazon Lex bot in the association.
getBotChannelAssociations_botName :: Lens' GetBotChannelAssociations Text

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
getBotChannelAssociations_botAlias :: Lens' GetBotChannelAssociations Text

-- | <i>See:</i> <a>newGetBotChannelAssociationsResponse</a> smart
--   constructor.
data GetBotChannelAssociationsResponse
GetBotChannelAssociationsResponse' :: Maybe Text -> Maybe [BotChannelAssociation] -> Int -> GetBotChannelAssociationsResponse

-- | A pagination token that fetches the next page of associations. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of associations, specify
--   the pagination token in the next request.
[$sel:nextToken:GetBotChannelAssociationsResponse'] :: GetBotChannelAssociationsResponse -> Maybe Text

-- | An array of objects, one for each association, that provides
--   information about the Amazon Lex bot and its association with the
--   channel.
[$sel:botChannelAssociations:GetBotChannelAssociationsResponse'] :: GetBotChannelAssociationsResponse -> Maybe [BotChannelAssociation]

-- | The response's http status code.
[$sel:httpStatus:GetBotChannelAssociationsResponse'] :: GetBotChannelAssociationsResponse -> Int

-- | Create a value of <a>GetBotChannelAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociationsResponse_nextToken</a> - A pagination
--   token that fetches the next page of associations. If the response to
--   this call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of associations, specify the
--   pagination token in the next request.
--   
--   <a>$sel:botChannelAssociations:GetBotChannelAssociationsResponse'</a>,
--   <a>getBotChannelAssociationsResponse_botChannelAssociations</a> - An
--   array of objects, one for each association, that provides information
--   about the Amazon Lex bot and its association with the channel.
--   
--   <a>$sel:httpStatus:GetBotChannelAssociationsResponse'</a>,
--   <a>getBotChannelAssociationsResponse_httpStatus</a> - The response's
--   http status code.
newGetBotChannelAssociationsResponse :: Int -> GetBotChannelAssociationsResponse

-- | A pagination token that fetches the next page of associations. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of associations, specify
--   the pagination token in the next request.
getBotChannelAssociationsResponse_nextToken :: Lens' GetBotChannelAssociationsResponse (Maybe Text)

-- | An array of objects, one for each association, that provides
--   information about the Amazon Lex bot and its association with the
--   channel.
getBotChannelAssociationsResponse_botChannelAssociations :: Lens' GetBotChannelAssociationsResponse (Maybe [BotChannelAssociation])

-- | The response's http status code.
getBotChannelAssociationsResponse_httpStatus :: Lens' GetBotChannelAssociationsResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance GHC.Show.Show Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance GHC.Read.Read Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociationsResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociationsResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBotChannelAssociations.GetBotChannelAssociations


-- | Returns information about the association between an Amazon Lex bot
--   and a messaging platform.
--   
--   This operation requires permissions for the
--   <tt>lex:GetBotChannelAssociation</tt> action.
module Network.AWS.LexModels.GetBotChannelAssociation

-- | <i>See:</i> <a>newGetBotChannelAssociation</a> smart constructor.
data GetBotChannelAssociation
GetBotChannelAssociation' :: Text -> Text -> Text -> GetBotChannelAssociation

-- | The name of the association between the bot and the channel. The name
--   is case sensitive.
[$sel:name:GetBotChannelAssociation'] :: GetBotChannelAssociation -> Text

-- | The name of the Amazon Lex bot.
[$sel:botName:GetBotChannelAssociation'] :: GetBotChannelAssociation -> Text

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
[$sel:botAlias:GetBotChannelAssociation'] :: GetBotChannelAssociation -> Text

-- | Create a value of <a>GetBotChannelAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociation_name</a> - The name of the association
--   between the bot and the channel. The name is case sensitive.
--   
--   <a>$sel:botName:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociation_botName</a> - The name of the Amazon Lex
--   bot.
--   
--   <a>$sel:botAlias:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociation_botAlias</a> - An alias pointing to the
--   specific version of the Amazon Lex bot to which this association is
--   being made.
newGetBotChannelAssociation :: Text -> Text -> Text -> GetBotChannelAssociation

-- | The name of the association between the bot and the channel. The name
--   is case sensitive.
getBotChannelAssociation_name :: Lens' GetBotChannelAssociation Text

-- | The name of the Amazon Lex bot.
getBotChannelAssociation_botName :: Lens' GetBotChannelAssociation Text

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
getBotChannelAssociation_botAlias :: Lens' GetBotChannelAssociation Text

-- | <i>See:</i> <a>newGetBotChannelAssociationResponse</a> smart
--   constructor.
data GetBotChannelAssociationResponse
GetBotChannelAssociationResponse' :: Maybe Text -> Maybe POSIX -> Maybe ChannelStatus -> Maybe (Sensitive (HashMap Text Text)) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Int -> GetBotChannelAssociationResponse

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
[$sel:botAlias:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe Text

-- | The date that the association between the bot and the channel was
--   created.
[$sel:createdDate:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe POSIX

-- | The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
[$sel:status:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe ChannelStatus

-- | Provides information that the messaging platform needs to communicate
--   with the Amazon Lex bot.
[$sel:botConfiguration:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe (Sensitive (HashMap Text Text))

-- | The name of the Amazon Lex bot.
[$sel:botName:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe Text

-- | The name of the association between the bot and the channel.
[$sel:name:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe Text

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
[$sel:failureReason:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe Text

-- | A description of the association between the bot and the channel.
[$sel:description:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe Text

-- | The type of the messaging platform.
[$sel:type':GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Maybe ChannelType

-- | The response's http status code.
[$sel:httpStatus:GetBotChannelAssociationResponse'] :: GetBotChannelAssociationResponse -> Int

-- | Create a value of <a>GetBotChannelAssociationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botAlias:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociationResponse_botAlias</a> - An alias pointing
--   to the specific version of the Amazon Lex bot to which this
--   association is being made.
--   
--   <a>$sel:createdDate:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_createdDate</a> - The date that
--   the association between the bot and the channel was created.
--   
--   <a>$sel:status:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_status</a> - The status of the bot
--   channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
--   
--   <a>$sel:botConfiguration:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_botConfiguration</a> - Provides
--   information that the messaging platform needs to communicate with the
--   Amazon Lex bot.
--   
--   <a>$sel:botName:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociationResponse_botName</a> - The name of the
--   Amazon Lex bot.
--   
--   <a>$sel:name:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociationResponse_name</a> - The name of the
--   association between the bot and the channel.
--   
--   <a>$sel:failureReason:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_failureReason</a> - If
--   <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
--   
--   <a>$sel:description:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_description</a> - A description of
--   the association between the bot and the channel.
--   
--   <a>$sel:type':GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_type</a> - The type of the
--   messaging platform.
--   
--   <a>$sel:httpStatus:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_httpStatus</a> - The response's
--   http status code.
newGetBotChannelAssociationResponse :: Int -> GetBotChannelAssociationResponse

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
getBotChannelAssociationResponse_botAlias :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | The date that the association between the bot and the channel was
--   created.
getBotChannelAssociationResponse_createdDate :: Lens' GetBotChannelAssociationResponse (Maybe UTCTime)

-- | The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
getBotChannelAssociationResponse_status :: Lens' GetBotChannelAssociationResponse (Maybe ChannelStatus)

-- | Provides information that the messaging platform needs to communicate
--   with the Amazon Lex bot.
getBotChannelAssociationResponse_botConfiguration :: Lens' GetBotChannelAssociationResponse (Maybe (HashMap Text Text))

-- | The name of the Amazon Lex bot.
getBotChannelAssociationResponse_botName :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | The name of the association between the bot and the channel.
getBotChannelAssociationResponse_name :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
getBotChannelAssociationResponse_failureReason :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | A description of the association between the bot and the channel.
getBotChannelAssociationResponse_description :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | The type of the messaging platform.
getBotChannelAssociationResponse_type :: Lens' GetBotChannelAssociationResponse (Maybe ChannelType)

-- | The response's http status code.
getBotChannelAssociationResponse_httpStatus :: Lens' GetBotChannelAssociationResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance GHC.Show.Show Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance GHC.Read.Read Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociationResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociationResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBotChannelAssociation.GetBotChannelAssociation


-- | Returns a list of aliases for a specified Amazon Lex bot.
--   
--   This operation requires permissions for the <tt>lex:GetBotAliases</tt>
--   action.
--   
--   This operation returns paginated results.
module Network.AWS.LexModels.GetBotAliases

-- | <i>See:</i> <a>newGetBotAliases</a> smart constructor.
data GetBotAliases
GetBotAliases' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetBotAliases

-- | Substring to match in bot alias names. An alias will be returned if
--   any part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
[$sel:nameContains:GetBotAliases'] :: GetBotAliases -> Maybe Text

-- | A pagination token for fetching the next page of aliases. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of aliases, specify the
--   pagination token in the next request.
[$sel:nextToken:GetBotAliases'] :: GetBotAliases -> Maybe Text

-- | The maximum number of aliases to return in the response. The default
--   is 50. .
[$sel:maxResults:GetBotAliases'] :: GetBotAliases -> Maybe Natural

-- | The name of the bot.
[$sel:botName:GetBotAliases'] :: GetBotAliases -> Text

-- | Create a value of <a>GetBotAliases</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetBotAliases'</a>,
--   <a>getBotAliases_nameContains</a> - Substring to match in bot alias
--   names. An alias will be returned if any part of its name matches the
--   substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetBotAliases'</a>, <a>getBotAliases_nextToken</a> -
--   A pagination token for fetching the next page of aliases. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of aliases, specify the
--   pagination token in the next request.
--   
--   <a>$sel:maxResults:GetBotAliases'</a>, <a>getBotAliases_maxResults</a>
--   - The maximum number of aliases to return in the response. The default
--   is 50. .
--   
--   <a>$sel:botName:GetBotAliases'</a>, <a>getBotAliases_botName</a> - The
--   name of the bot.
newGetBotAliases :: Text -> GetBotAliases

-- | Substring to match in bot alias names. An alias will be returned if
--   any part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
getBotAliases_nameContains :: Lens' GetBotAliases (Maybe Text)

-- | A pagination token for fetching the next page of aliases. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of aliases, specify the
--   pagination token in the next request.
getBotAliases_nextToken :: Lens' GetBotAliases (Maybe Text)

-- | The maximum number of aliases to return in the response. The default
--   is 50. .
getBotAliases_maxResults :: Lens' GetBotAliases (Maybe Natural)

-- | The name of the bot.
getBotAliases_botName :: Lens' GetBotAliases Text

-- | <i>See:</i> <a>newGetBotAliasesResponse</a> smart constructor.
data GetBotAliasesResponse
GetBotAliasesResponse' :: Maybe Text -> Maybe [BotAliasMetadata] -> Int -> GetBotAliasesResponse

-- | A pagination token for fetching next page of aliases. If the response
--   to this call is truncated, Amazon Lex returns a pagination token in
--   the response. To fetch the next page of aliases, specify the
--   pagination token in the next request.
[$sel:nextToken:GetBotAliasesResponse'] :: GetBotAliasesResponse -> Maybe Text

-- | An array of <tt>BotAliasMetadata</tt> objects, each describing a bot
--   alias.
[$sel:botAliases:GetBotAliasesResponse'] :: GetBotAliasesResponse -> Maybe [BotAliasMetadata]

-- | The response's http status code.
[$sel:httpStatus:GetBotAliasesResponse'] :: GetBotAliasesResponse -> Int

-- | Create a value of <a>GetBotAliasesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBotAliases'</a>,
--   <a>getBotAliasesResponse_nextToken</a> - A pagination token for
--   fetching next page of aliases. If the response to this call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of aliases, specify the pagination token in the
--   next request.
--   
--   <a>$sel:botAliases:GetBotAliasesResponse'</a>,
--   <a>getBotAliasesResponse_botAliases</a> - An array of
--   <tt>BotAliasMetadata</tt> objects, each describing a bot alias.
--   
--   <a>$sel:httpStatus:GetBotAliasesResponse'</a>,
--   <a>getBotAliasesResponse_httpStatus</a> - The response's http status
--   code.
newGetBotAliasesResponse :: Int -> GetBotAliasesResponse

-- | A pagination token for fetching next page of aliases. If the response
--   to this call is truncated, Amazon Lex returns a pagination token in
--   the response. To fetch the next page of aliases, specify the
--   pagination token in the next request.
getBotAliasesResponse_nextToken :: Lens' GetBotAliasesResponse (Maybe Text)

-- | An array of <tt>BotAliasMetadata</tt> objects, each describing a bot
--   alias.
getBotAliasesResponse_botAliases :: Lens' GetBotAliasesResponse (Maybe [BotAliasMetadata])

-- | The response's http status code.
getBotAliasesResponse_httpStatus :: Lens' GetBotAliasesResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance GHC.Show.Show Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance GHC.Read.Read Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotAliases.GetBotAliasesResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBotAliases.GetBotAliasesResponse
instance GHC.Read.Read Network.AWS.LexModels.GetBotAliases.GetBotAliasesResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotAliases.GetBotAliasesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotAliases.GetBotAliasesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBotAliases.GetBotAliases
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBotAliases.GetBotAliases


-- | Returns information about an Amazon Lex bot alias. For more
--   information about aliases, see versioning-aliases.
--   
--   This operation requires permissions for the <tt>lex:GetBotAlias</tt>
--   action.
module Network.AWS.LexModels.GetBotAlias

-- | <i>See:</i> <a>newGetBotAlias</a> smart constructor.
data GetBotAlias
GetBotAlias' :: Text -> Text -> GetBotAlias

-- | The name of the bot alias. The name is case sensitive.
[$sel:name:GetBotAlias'] :: GetBotAlias -> Text

-- | The name of the bot.
[$sel:botName:GetBotAlias'] :: GetBotAlias -> Text

-- | Create a value of <a>GetBotAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetBotAlias'</a>, <a>getBotAlias_name</a> - The name of
--   the bot alias. The name is case sensitive.
--   
--   <a>$sel:botName:GetBotAlias'</a>, <a>getBotAlias_botName</a> - The
--   name of the bot.
newGetBotAlias :: Text -> Text -> GetBotAlias

-- | The name of the bot alias. The name is case sensitive.
getBotAlias_name :: Lens' GetBotAlias Text

-- | The name of the bot.
getBotAlias_botName :: Lens' GetBotAlias Text

-- | <i>See:</i> <a>newGetBotAliasResponse</a> smart constructor.
data GetBotAliasResponse
GetBotAliasResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConversationLogsResponse -> Int -> GetBotAliasResponse

-- | The date that the bot alias was created.
[$sel:createdDate:GetBotAliasResponse'] :: GetBotAliasResponse -> Maybe POSIX

-- | The name of the bot that the alias points to.
[$sel:botName:GetBotAliasResponse'] :: GetBotAliasResponse -> Maybe Text

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and the last updated date are the same.
[$sel:lastUpdatedDate:GetBotAliasResponse'] :: GetBotAliasResponse -> Maybe POSIX

-- | The version of the bot that the alias points to.
[$sel:botVersion:GetBotAliasResponse'] :: GetBotAliasResponse -> Maybe Text

-- | The name of the bot alias.
[$sel:name:GetBotAliasResponse'] :: GetBotAliasResponse -> Maybe Text

-- | A description of the bot alias.
[$sel:description:GetBotAliasResponse'] :: GetBotAliasResponse -> Maybe Text

-- | Checksum of the bot alias.
[$sel:checksum:GetBotAliasResponse'] :: GetBotAliasResponse -> Maybe Text

-- | The settings that determine how Amazon Lex uses conversation logs for
--   the alias.
[$sel:conversationLogs:GetBotAliasResponse'] :: GetBotAliasResponse -> Maybe ConversationLogsResponse

-- | The response's http status code.
[$sel:httpStatus:GetBotAliasResponse'] :: GetBotAliasResponse -> Int

-- | Create a value of <a>GetBotAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_createdDate</a> - The date that the bot alias
--   was created.
--   
--   <a>$sel:botName:GetBotAlias'</a>, <a>getBotAliasResponse_botName</a> -
--   The name of the bot that the alias points to.
--   
--   <a>$sel:lastUpdatedDate:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_lastUpdatedDate</a> - The date that the bot
--   alias was updated. When you create a resource, the creation date and
--   the last updated date are the same.
--   
--   <a>$sel:botVersion:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_botVersion</a> - The version of the bot that
--   the alias points to.
--   
--   <a>$sel:name:GetBotAlias'</a>, <a>getBotAliasResponse_name</a> - The
--   name of the bot alias.
--   
--   <a>$sel:description:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_description</a> - A description of the bot
--   alias.
--   
--   <a>$sel:checksum:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_checksum</a> - Checksum of the bot alias.
--   
--   <a>$sel:conversationLogs:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_conversationLogs</a> - The settings that
--   determine how Amazon Lex uses conversation logs for the alias.
--   
--   <a>$sel:httpStatus:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_httpStatus</a> - The response's http status
--   code.
newGetBotAliasResponse :: Int -> GetBotAliasResponse

-- | The date that the bot alias was created.
getBotAliasResponse_createdDate :: Lens' GetBotAliasResponse (Maybe UTCTime)

-- | The name of the bot that the alias points to.
getBotAliasResponse_botName :: Lens' GetBotAliasResponse (Maybe Text)

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and the last updated date are the same.
getBotAliasResponse_lastUpdatedDate :: Lens' GetBotAliasResponse (Maybe UTCTime)

-- | The version of the bot that the alias points to.
getBotAliasResponse_botVersion :: Lens' GetBotAliasResponse (Maybe Text)

-- | The name of the bot alias.
getBotAliasResponse_name :: Lens' GetBotAliasResponse (Maybe Text)

-- | A description of the bot alias.
getBotAliasResponse_description :: Lens' GetBotAliasResponse (Maybe Text)

-- | Checksum of the bot alias.
getBotAliasResponse_checksum :: Lens' GetBotAliasResponse (Maybe Text)

-- | The settings that determine how Amazon Lex uses conversation logs for
--   the alias.
getBotAliasResponse_conversationLogs :: Lens' GetBotAliasResponse (Maybe ConversationLogsResponse)

-- | The response's http status code.
getBotAliasResponse_httpStatus :: Lens' GetBotAliasResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance GHC.Show.Show Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance GHC.Read.Read Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance GHC.Generics.Generic Network.AWS.LexModels.GetBotAlias.GetBotAliasResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBotAlias.GetBotAliasResponse
instance GHC.Read.Read Network.AWS.LexModels.GetBotAlias.GetBotAliasResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBotAlias.GetBotAliasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotAlias.GetBotAliasResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBotAlias.GetBotAlias
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBotAlias.GetBotAlias


-- | Returns metadata information for a specific bot. You must provide the
--   bot name and the bot version or alias.
--   
--   This operation requires permissions for the <tt>lex:GetBot</tt>
--   action.
module Network.AWS.LexModels.GetBot

-- | <i>See:</i> <a>newGetBot</a> smart constructor.
data GetBot
GetBot' :: Text -> Text -> GetBot

-- | The name of the bot. The name is case sensitive.
[$sel:name:GetBot'] :: GetBot -> Text

-- | The version or alias of the bot.
[$sel:versionOrAlias:GetBot'] :: GetBot -> Text

-- | Create a value of <a>GetBot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetBot'</a>, <a>getBot_name</a> - The name of the bot.
--   The name is case sensitive.
--   
--   <a>$sel:versionOrAlias:GetBot'</a>, <a>getBot_versionOrAlias</a> - The
--   version or alias of the bot.
newGetBot :: Text -> Text -> GetBot

-- | The name of the bot. The name is case sensitive.
getBot_name :: Lens' GetBot Text

-- | The version or alias of the bot.
getBot_versionOrAlias :: Lens' GetBot Text

-- | <i>See:</i> <a>newGetBotResponse</a> smart constructor.
data GetBotResponse
GetBotResponse' :: Maybe Statement -> Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Prompt -> Maybe Double -> Maybe Locale -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [Intent] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> Int -> GetBotResponse

-- | The message that Amazon Lex returns when the user elects to end the
--   conversation without completing it. For more information, see PutBot.
[$sel:abortStatement:GetBotResponse'] :: GetBotResponse -> Maybe Statement

-- | The date that the bot was created.
[$sel:createdDate:GetBotResponse'] :: GetBotResponse -> Maybe POSIX

-- | The status of the bot.
--   
--   When the status is <tt>BUILDING</tt> Amazon Lex is building the bot
--   for testing and use.
--   
--   If the status of the bot is <tt>READY_BASIC_TESTING</tt>, you can test
--   the bot using the exact utterances specified in the bot's intents.
--   When the bot is ready for full testing or to run, the status is
--   <tt>READY</tt>.
--   
--   If there was a problem with building the bot, the status is
--   <tt>FAILED</tt> and the <tt>failureReason</tt> field explains why the
--   bot did not build.
--   
--   If the bot was saved but not built, the status is <tt>NOT_BUILT</tt>.
[$sel:status:GetBotResponse'] :: GetBotResponse -> Maybe LexStatus

-- | The date that the bot was updated. When you create a resource, the
--   creation date and last updated date are the same.
[$sel:lastUpdatedDate:GetBotResponse'] :: GetBotResponse -> Maybe POSIX

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interaction
--   with the user. For more information, see PutBot.
[$sel:voiceId:GetBotResponse'] :: GetBotResponse -> Maybe Text

-- | The message Amazon Lex uses when it doesn't understand the user's
--   request. For more information, see PutBot.
[$sel:clarificationPrompt:GetBotResponse'] :: GetBotResponse -> Maybe Prompt

-- | The score that determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
[$sel:nluIntentConfidenceThreshold:GetBotResponse'] :: GetBotResponse -> Maybe Double

-- | The target locale for the bot.
[$sel:locale:GetBotResponse'] :: GetBotResponse -> Maybe Locale

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
[$sel:enableModelImprovements:GetBotResponse'] :: GetBotResponse -> Maybe Bool

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
[$sel:version:GetBotResponse'] :: GetBotResponse -> Maybe Text

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
[$sel:idleSessionTTLInSeconds:GetBotResponse'] :: GetBotResponse -> Maybe Natural

-- | The name of the bot.
[$sel:name:GetBotResponse'] :: GetBotResponse -> Maybe Text

-- | An array of <tt>intent</tt> objects. For more information, see PutBot.
[$sel:intents:GetBotResponse'] :: GetBotResponse -> Maybe [Intent]

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex explains why it
--   failed to build the bot.
[$sel:failureReason:GetBotResponse'] :: GetBotResponse -> Maybe Text

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
[$sel:childDirected:GetBotResponse'] :: GetBotResponse -> Maybe Bool

-- | A description of the bot.
[$sel:description:GetBotResponse'] :: GetBotResponse -> Maybe Text

-- | Indicates whether user utterances should be sent to Amazon Comprehend
--   for sentiment analysis.
[$sel:detectSentiment:GetBotResponse'] :: GetBotResponse -> Maybe Bool

-- | Checksum of the bot used to identify a specific revision of the bot's
--   <tt>$LATEST</tt> version.
[$sel:checksum:GetBotResponse'] :: GetBotResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetBotResponse'] :: GetBotResponse -> Int

-- | Create a value of <a>GetBotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abortStatement:GetBotResponse'</a>,
--   <a>getBotResponse_abortStatement</a> - The message that Amazon Lex
--   returns when the user elects to end the conversation without
--   completing it. For more information, see PutBot.
--   
--   <a>$sel:createdDate:GetBotResponse'</a>,
--   <a>getBotResponse_createdDate</a> - The date that the bot was created.
--   
--   <a>$sel:status:GetBotResponse'</a>, <a>getBotResponse_status</a> - The
--   status of the bot.
--   
--   When the status is <tt>BUILDING</tt> Amazon Lex is building the bot
--   for testing and use.
--   
--   If the status of the bot is <tt>READY_BASIC_TESTING</tt>, you can test
--   the bot using the exact utterances specified in the bot's intents.
--   When the bot is ready for full testing or to run, the status is
--   <tt>READY</tt>.
--   
--   If there was a problem with building the bot, the status is
--   <tt>FAILED</tt> and the <tt>failureReason</tt> field explains why the
--   bot did not build.
--   
--   If the bot was saved but not built, the status is <tt>NOT_BUILT</tt>.
--   
--   <a>$sel:lastUpdatedDate:GetBotResponse'</a>,
--   <a>getBotResponse_lastUpdatedDate</a> - The date that the bot was
--   updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:voiceId:GetBotResponse'</a>, <a>getBotResponse_voiceId</a> -
--   The Amazon Polly voice ID that Amazon Lex uses for voice interaction
--   with the user. For more information, see PutBot.
--   
--   <a>$sel:clarificationPrompt:GetBotResponse'</a>,
--   <a>getBotResponse_clarificationPrompt</a> - The message Amazon Lex
--   uses when it doesn't understand the user's request. For more
--   information, see PutBot.
--   
--   <a>$sel:nluIntentConfidenceThreshold:GetBotResponse'</a>,
--   <a>getBotResponse_nluIntentConfidenceThreshold</a> - The score that
--   determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
--   
--   <a>$sel:locale:GetBotResponse'</a>, <a>getBotResponse_locale</a> - The
--   target locale for the bot.
--   
--   <a>$sel:enableModelImprovements:GetBotResponse'</a>,
--   <a>getBotResponse_enableModelImprovements</a> - Indicates whether the
--   bot uses accuracy improvements. <tt>true</tt> indicates that the bot
--   is using the improvements, otherwise, <tt>false</tt>.
--   
--   <a>$sel:version:GetBotResponse'</a>, <a>getBotResponse_version</a> -
--   The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
--   
--   <a>$sel:idleSessionTTLInSeconds:GetBotResponse'</a>,
--   <a>getBotResponse_idleSessionTTLInSeconds</a> - The maximum time in
--   seconds that Amazon Lex retains the data gathered in a conversation.
--   For more information, see PutBot.
--   
--   <a>$sel:name:GetBot'</a>, <a>getBotResponse_name</a> - The name of the
--   bot.
--   
--   <a>$sel:intents:GetBotResponse'</a>, <a>getBotResponse_intents</a> -
--   An array of <tt>intent</tt> objects. For more information, see PutBot.
--   
--   <a>$sel:failureReason:GetBotResponse'</a>,
--   <a>getBotResponse_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex explains why it failed to build the bot.
--   
--   <a>$sel:childDirected:GetBotResponse'</a>,
--   <a>getBotResponse_childDirected</a> - For each Amazon Lex bot created
--   with the Amazon Lex Model Building Service, you must specify whether
--   your use of Amazon Lex is related to a website, program, or other
--   application that is directed or targeted, in whole or in part, to
--   children under age 13 and subject to the Children's Online Privacy
--   Protection Act (COPPA) by specifying <tt>true</tt> or <tt>false</tt>
--   in the <tt>childDirected</tt> field. By specifying <tt>true</tt> in
--   the <tt>childDirected</tt> field, you confirm that your use of Amazon
--   Lex <b>is</b> related to a website, program, or other application that
--   is directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA. By specifying <tt>false</tt> in the
--   <tt>childDirected</tt> field, you confirm that your use of Amazon Lex
--   <b>is not</b> related to a website, program, or other application that
--   is directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA. You may not specify a default value for the
--   <tt>childDirected</tt> field that does not accurately reflect whether
--   your use of Amazon Lex is related to a website, program, or other
--   application that is directed or targeted, in whole or in part, to
--   children under age 13 and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
--   
--   <a>$sel:description:GetBotResponse'</a>,
--   <a>getBotResponse_description</a> - A description of the bot.
--   
--   <a>$sel:detectSentiment:GetBotResponse'</a>,
--   <a>getBotResponse_detectSentiment</a> - Indicates whether user
--   utterances should be sent to Amazon Comprehend for sentiment analysis.
--   
--   <a>$sel:checksum:GetBotResponse'</a>, <a>getBotResponse_checksum</a> -
--   Checksum of the bot used to identify a specific revision of the bot's
--   <tt>$LATEST</tt> version.
--   
--   <a>$sel:httpStatus:GetBotResponse'</a>,
--   <a>getBotResponse_httpStatus</a> - The response's http status code.
newGetBotResponse :: Int -> GetBotResponse

-- | The message that Amazon Lex returns when the user elects to end the
--   conversation without completing it. For more information, see PutBot.
getBotResponse_abortStatement :: Lens' GetBotResponse (Maybe Statement)

-- | The date that the bot was created.
getBotResponse_createdDate :: Lens' GetBotResponse (Maybe UTCTime)

-- | The status of the bot.
--   
--   When the status is <tt>BUILDING</tt> Amazon Lex is building the bot
--   for testing and use.
--   
--   If the status of the bot is <tt>READY_BASIC_TESTING</tt>, you can test
--   the bot using the exact utterances specified in the bot's intents.
--   When the bot is ready for full testing or to run, the status is
--   <tt>READY</tt>.
--   
--   If there was a problem with building the bot, the status is
--   <tt>FAILED</tt> and the <tt>failureReason</tt> field explains why the
--   bot did not build.
--   
--   If the bot was saved but not built, the status is <tt>NOT_BUILT</tt>.
getBotResponse_status :: Lens' GetBotResponse (Maybe LexStatus)

-- | The date that the bot was updated. When you create a resource, the
--   creation date and last updated date are the same.
getBotResponse_lastUpdatedDate :: Lens' GetBotResponse (Maybe UTCTime)

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interaction
--   with the user. For more information, see PutBot.
getBotResponse_voiceId :: Lens' GetBotResponse (Maybe Text)

-- | The message Amazon Lex uses when it doesn't understand the user's
--   request. For more information, see PutBot.
getBotResponse_clarificationPrompt :: Lens' GetBotResponse (Maybe Prompt)

-- | The score that determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
getBotResponse_nluIntentConfidenceThreshold :: Lens' GetBotResponse (Maybe Double)

-- | The target locale for the bot.
getBotResponse_locale :: Lens' GetBotResponse (Maybe Locale)

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
getBotResponse_enableModelImprovements :: Lens' GetBotResponse (Maybe Bool)

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
getBotResponse_version :: Lens' GetBotResponse (Maybe Text)

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
getBotResponse_idleSessionTTLInSeconds :: Lens' GetBotResponse (Maybe Natural)

-- | The name of the bot.
getBotResponse_name :: Lens' GetBotResponse (Maybe Text)

-- | An array of <tt>intent</tt> objects. For more information, see PutBot.
getBotResponse_intents :: Lens' GetBotResponse (Maybe [Intent])

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex explains why it
--   failed to build the bot.
getBotResponse_failureReason :: Lens' GetBotResponse (Maybe Text)

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
getBotResponse_childDirected :: Lens' GetBotResponse (Maybe Bool)

-- | A description of the bot.
getBotResponse_description :: Lens' GetBotResponse (Maybe Text)

-- | Indicates whether user utterances should be sent to Amazon Comprehend
--   for sentiment analysis.
getBotResponse_detectSentiment :: Lens' GetBotResponse (Maybe Bool)

-- | Checksum of the bot used to identify a specific revision of the bot's
--   <tt>$LATEST</tt> version.
getBotResponse_checksum :: Lens' GetBotResponse (Maybe Text)

-- | The response's http status code.
getBotResponse_httpStatus :: Lens' GetBotResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.GetBot.GetBot
instance GHC.Show.Show Network.AWS.LexModels.GetBot.GetBot
instance GHC.Read.Read Network.AWS.LexModels.GetBot.GetBot
instance GHC.Classes.Eq Network.AWS.LexModels.GetBot.GetBot
instance GHC.Generics.Generic Network.AWS.LexModels.GetBot.GetBotResponse
instance GHC.Show.Show Network.AWS.LexModels.GetBot.GetBotResponse
instance GHC.Read.Read Network.AWS.LexModels.GetBot.GetBotResponse
instance GHC.Classes.Eq Network.AWS.LexModels.GetBot.GetBotResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.GetBot.GetBot
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBot.GetBotResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.GetBot.GetBot
instance Control.DeepSeq.NFData Network.AWS.LexModels.GetBot.GetBot
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.GetBot.GetBot
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.GetBot.GetBot
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.GetBot.GetBot


-- | Deletes stored utterances.
--   
--   Amazon Lex stores the utterances that users send to your bot.
--   Utterances are stored for 15 days for use with the GetUtterancesView
--   operation, and then stored indefinitely for use in improving the
--   ability of your bot to respond to user input.
--   
--   Use the <tt>DeleteUtterances</tt> operation to manually delete stored
--   utterances for a specific user. When you use the
--   <tt>DeleteUtterances</tt> operation, utterances stored for improving
--   your bot's ability to respond to user input are deleted immediately.
--   Utterances stored for use with the <tt>GetUtterancesView</tt>
--   operation are deleted after 15 days.
--   
--   This operation requires permissions for the
--   <tt>lex:DeleteUtterances</tt> action.
module Network.AWS.LexModels.DeleteUtterances

-- | <i>See:</i> <a>newDeleteUtterances</a> smart constructor.
data DeleteUtterances
DeleteUtterances' :: Text -> Text -> DeleteUtterances

-- | The name of the bot that stored the utterances.
[$sel:botName:DeleteUtterances'] :: DeleteUtterances -> Text

-- | The unique identifier for the user that made the utterances. This is
--   the user ID that was sent in the <a>PostContent</a> or <a>PostText</a>
--   operation request that contained the utterance.
[$sel:userId:DeleteUtterances'] :: DeleteUtterances -> Text

-- | Create a value of <a>DeleteUtterances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botName:DeleteUtterances'</a>, <a>deleteUtterances_botName</a>
--   - The name of the bot that stored the utterances.
--   
--   <a>$sel:userId:DeleteUtterances'</a>, <a>deleteUtterances_userId</a> -
--   The unique identifier for the user that made the utterances. This is
--   the user ID that was sent in the <a>PostContent</a> or <a>PostText</a>
--   operation request that contained the utterance.
newDeleteUtterances :: Text -> Text -> DeleteUtterances

-- | The name of the bot that stored the utterances.
deleteUtterances_botName :: Lens' DeleteUtterances Text

-- | The unique identifier for the user that made the utterances. This is
--   the user ID that was sent in the <a>PostContent</a> or <a>PostText</a>
--   operation request that contained the utterance.
deleteUtterances_userId :: Lens' DeleteUtterances Text

-- | <i>See:</i> <a>newDeleteUtterancesResponse</a> smart constructor.
data DeleteUtterancesResponse
DeleteUtterancesResponse' :: DeleteUtterancesResponse

-- | Create a value of <a>DeleteUtterancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUtterancesResponse :: DeleteUtterancesResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance GHC.Show.Show Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance GHC.Read.Read Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteUtterances.DeleteUtterancesResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteUtterances.DeleteUtterancesResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteUtterances.DeleteUtterancesResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteUtterances.DeleteUtterancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteUtterances.DeleteUtterancesResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteUtterances.DeleteUtterances
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteUtterances.DeleteUtterances


-- | Deletes a specific version of a slot type. To delete all versions of a
--   slot type, use the DeleteSlotType operation.
--   
--   This operation requires permissions for the
--   <tt>lex:DeleteSlotTypeVersion</tt> action.
module Network.AWS.LexModels.DeleteSlotTypeVersion

-- | <i>See:</i> <a>newDeleteSlotTypeVersion</a> smart constructor.
data DeleteSlotTypeVersion
DeleteSlotTypeVersion' :: Text -> Text -> DeleteSlotTypeVersion

-- | The name of the slot type.
[$sel:name:DeleteSlotTypeVersion'] :: DeleteSlotTypeVersion -> Text

-- | The version of the slot type to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the slot type. To delete the
--   <tt>$LATEST</tt> version, use the DeleteSlotType operation.
[$sel:version:DeleteSlotTypeVersion'] :: DeleteSlotTypeVersion -> Text

-- | Create a value of <a>DeleteSlotTypeVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteSlotTypeVersion'</a>,
--   <a>deleteSlotTypeVersion_name</a> - The name of the slot type.
--   
--   <a>$sel:version:DeleteSlotTypeVersion'</a>,
--   <a>deleteSlotTypeVersion_version</a> - The version of the slot type to
--   delete. You cannot delete the <tt>$LATEST</tt> version of the slot
--   type. To delete the <tt>$LATEST</tt> version, use the DeleteSlotType
--   operation.
newDeleteSlotTypeVersion :: Text -> Text -> DeleteSlotTypeVersion

-- | The name of the slot type.
deleteSlotTypeVersion_name :: Lens' DeleteSlotTypeVersion Text

-- | The version of the slot type to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the slot type. To delete the
--   <tt>$LATEST</tt> version, use the DeleteSlotType operation.
deleteSlotTypeVersion_version :: Lens' DeleteSlotTypeVersion Text

-- | <i>See:</i> <a>newDeleteSlotTypeVersionResponse</a> smart constructor.
data DeleteSlotTypeVersionResponse
DeleteSlotTypeVersionResponse' :: DeleteSlotTypeVersionResponse

-- | Create a value of <a>DeleteSlotTypeVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSlotTypeVersionResponse :: DeleteSlotTypeVersionResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance GHC.Show.Show Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance GHC.Read.Read Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersionResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersionResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersionResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteSlotTypeVersion.DeleteSlotTypeVersion


-- | Deletes all versions of the slot type, including the <tt>$LATEST</tt>
--   version. To delete a specific version of the slot type, use the
--   DeleteSlotTypeVersion operation.
--   
--   You can delete a version of a slot type only if it is not referenced.
--   To delete a slot type that is referred to in one or more intents, you
--   must remove those references first.
--   
--   If you get the <tt>ResourceInUseException</tt> exception, the
--   exception provides an example reference that shows the intent where
--   the slot type is referenced. To remove the reference to the slot type,
--   either update the intent or delete it. If you get the same exception
--   when you attempt to delete the slot type again, repeat until the slot
--   type has no references and the <tt>DeleteSlotType</tt> call is
--   successful.
--   
--   This operation requires permission for the <tt>lex:DeleteSlotType</tt>
--   action.
module Network.AWS.LexModels.DeleteSlotType

-- | <i>See:</i> <a>newDeleteSlotType</a> smart constructor.
data DeleteSlotType
DeleteSlotType' :: Text -> DeleteSlotType

-- | The name of the slot type. The name is case sensitive.
[$sel:name:DeleteSlotType'] :: DeleteSlotType -> Text

-- | Create a value of <a>DeleteSlotType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteSlotType'</a>, <a>deleteSlotType_name</a> - The
--   name of the slot type. The name is case sensitive.
newDeleteSlotType :: Text -> DeleteSlotType

-- | The name of the slot type. The name is case sensitive.
deleteSlotType_name :: Lens' DeleteSlotType Text

-- | <i>See:</i> <a>newDeleteSlotTypeResponse</a> smart constructor.
data DeleteSlotTypeResponse
DeleteSlotTypeResponse' :: DeleteSlotTypeResponse

-- | Create a value of <a>DeleteSlotTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSlotTypeResponse :: DeleteSlotTypeResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance GHC.Show.Show Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance GHC.Read.Read Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteSlotType.DeleteSlotTypeResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteSlotType.DeleteSlotTypeResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteSlotType.DeleteSlotTypeResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteSlotType.DeleteSlotTypeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteSlotType.DeleteSlotTypeResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteSlotType.DeleteSlotType
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteSlotType.DeleteSlotType


-- | Deletes a specific version of an intent. To delete all versions of a
--   intent, use the DeleteIntent operation.
--   
--   This operation requires permissions for the
--   <tt>lex:DeleteIntentVersion</tt> action.
module Network.AWS.LexModels.DeleteIntentVersion

-- | <i>See:</i> <a>newDeleteIntentVersion</a> smart constructor.
data DeleteIntentVersion
DeleteIntentVersion' :: Text -> Text -> DeleteIntentVersion

-- | The name of the intent.
[$sel:name:DeleteIntentVersion'] :: DeleteIntentVersion -> Text

-- | The version of the intent to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the intent. To delete the <tt>$LATEST</tt>
--   version, use the DeleteIntent operation.
[$sel:version:DeleteIntentVersion'] :: DeleteIntentVersion -> Text

-- | Create a value of <a>DeleteIntentVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteIntentVersion'</a>, <a>deleteIntentVersion_name</a>
--   - The name of the intent.
--   
--   <a>$sel:version:DeleteIntentVersion'</a>,
--   <a>deleteIntentVersion_version</a> - The version of the intent to
--   delete. You cannot delete the <tt>$LATEST</tt> version of the intent.
--   To delete the <tt>$LATEST</tt> version, use the DeleteIntent
--   operation.
newDeleteIntentVersion :: Text -> Text -> DeleteIntentVersion

-- | The name of the intent.
deleteIntentVersion_name :: Lens' DeleteIntentVersion Text

-- | The version of the intent to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the intent. To delete the <tt>$LATEST</tt>
--   version, use the DeleteIntent operation.
deleteIntentVersion_version :: Lens' DeleteIntentVersion Text

-- | <i>See:</i> <a>newDeleteIntentVersionResponse</a> smart constructor.
data DeleteIntentVersionResponse
DeleteIntentVersionResponse' :: DeleteIntentVersionResponse

-- | Create a value of <a>DeleteIntentVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntentVersionResponse :: DeleteIntentVersionResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance GHC.Show.Show Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance GHC.Read.Read Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersionResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersionResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersionResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteIntentVersion.DeleteIntentVersion


-- | Deletes all versions of the intent, including the <tt>$LATEST</tt>
--   version. To delete a specific version of the intent, use the
--   DeleteIntentVersion operation.
--   
--   You can delete a version of an intent only if it is not referenced. To
--   delete an intent that is referred to in one or more bots (see
--   how-it-works), you must remove those references first.
--   
--   If you get the <tt>ResourceInUseException</tt> exception, it provides
--   an example reference that shows where the intent is referenced. To
--   remove the reference to the intent, either update the bot or delete
--   it. If you get the same exception when you attempt to delete the
--   intent again, repeat until the intent has no references and the call
--   to <tt>DeleteIntent</tt> is successful.
--   
--   This operation requires permission for the <tt>lex:DeleteIntent</tt>
--   action.
module Network.AWS.LexModels.DeleteIntent

-- | <i>See:</i> <a>newDeleteIntent</a> smart constructor.
data DeleteIntent
DeleteIntent' :: Text -> DeleteIntent

-- | The name of the intent. The name is case sensitive.
[$sel:name:DeleteIntent'] :: DeleteIntent -> Text

-- | Create a value of <a>DeleteIntent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteIntent'</a>, <a>deleteIntent_name</a> - The name of
--   the intent. The name is case sensitive.
newDeleteIntent :: Text -> DeleteIntent

-- | The name of the intent. The name is case sensitive.
deleteIntent_name :: Lens' DeleteIntent Text

-- | <i>See:</i> <a>newDeleteIntentResponse</a> smart constructor.
data DeleteIntentResponse
DeleteIntentResponse' :: DeleteIntentResponse

-- | Create a value of <a>DeleteIntentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntentResponse :: DeleteIntentResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance GHC.Show.Show Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance GHC.Read.Read Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteIntent.DeleteIntentResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteIntent.DeleteIntentResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteIntent.DeleteIntentResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteIntent.DeleteIntentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteIntent.DeleteIntentResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteIntent.DeleteIntent
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteIntent.DeleteIntent


-- | Deletes a specific version of a bot. To delete all versions of a bot,
--   use the DeleteBot operation.
--   
--   This operation requires permissions for the
--   <tt>lex:DeleteBotVersion</tt> action.
module Network.AWS.LexModels.DeleteBotVersion

-- | <i>See:</i> <a>newDeleteBotVersion</a> smart constructor.
data DeleteBotVersion
DeleteBotVersion' :: Text -> Text -> DeleteBotVersion

-- | The name of the bot.
[$sel:name:DeleteBotVersion'] :: DeleteBotVersion -> Text

-- | The version of the bot to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the bot. To delete the <tt>$LATEST</tt>
--   version, use the DeleteBot operation.
[$sel:version:DeleteBotVersion'] :: DeleteBotVersion -> Text

-- | Create a value of <a>DeleteBotVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBotVersion'</a>, <a>deleteBotVersion_name</a> - The
--   name of the bot.
--   
--   <a>$sel:version:DeleteBotVersion'</a>, <a>deleteBotVersion_version</a>
--   - The version of the bot to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the bot. To delete the <tt>$LATEST</tt>
--   version, use the DeleteBot operation.
newDeleteBotVersion :: Text -> Text -> DeleteBotVersion

-- | The name of the bot.
deleteBotVersion_name :: Lens' DeleteBotVersion Text

-- | The version of the bot to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the bot. To delete the <tt>$LATEST</tt>
--   version, use the DeleteBot operation.
deleteBotVersion_version :: Lens' DeleteBotVersion Text

-- | <i>See:</i> <a>newDeleteBotVersionResponse</a> smart constructor.
data DeleteBotVersionResponse
DeleteBotVersionResponse' :: DeleteBotVersionResponse

-- | Create a value of <a>DeleteBotVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBotVersionResponse :: DeleteBotVersionResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance GHC.Show.Show Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance GHC.Read.Read Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersionResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersionResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersionResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteBotVersion.DeleteBotVersion


-- | Deletes the association between an Amazon Lex bot and a messaging
--   platform.
--   
--   This operation requires permission for the
--   <tt>lex:DeleteBotChannelAssociation</tt> action.
module Network.AWS.LexModels.DeleteBotChannelAssociation

-- | <i>See:</i> <a>newDeleteBotChannelAssociation</a> smart constructor.
data DeleteBotChannelAssociation
DeleteBotChannelAssociation' :: Text -> Text -> Text -> DeleteBotChannelAssociation

-- | The name of the association. The name is case sensitive.
[$sel:name:DeleteBotChannelAssociation'] :: DeleteBotChannelAssociation -> Text

-- | The name of the Amazon Lex bot.
[$sel:botName:DeleteBotChannelAssociation'] :: DeleteBotChannelAssociation -> Text

-- | An alias that points to the specific version of the Amazon Lex bot to
--   which this association is being made.
[$sel:botAlias:DeleteBotChannelAssociation'] :: DeleteBotChannelAssociation -> Text

-- | Create a value of <a>DeleteBotChannelAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBotChannelAssociation'</a>,
--   <a>deleteBotChannelAssociation_name</a> - The name of the association.
--   The name is case sensitive.
--   
--   <a>$sel:botName:DeleteBotChannelAssociation'</a>,
--   <a>deleteBotChannelAssociation_botName</a> - The name of the Amazon
--   Lex bot.
--   
--   <a>$sel:botAlias:DeleteBotChannelAssociation'</a>,
--   <a>deleteBotChannelAssociation_botAlias</a> - An alias that points to
--   the specific version of the Amazon Lex bot to which this association
--   is being made.
newDeleteBotChannelAssociation :: Text -> Text -> Text -> DeleteBotChannelAssociation

-- | The name of the association. The name is case sensitive.
deleteBotChannelAssociation_name :: Lens' DeleteBotChannelAssociation Text

-- | The name of the Amazon Lex bot.
deleteBotChannelAssociation_botName :: Lens' DeleteBotChannelAssociation Text

-- | An alias that points to the specific version of the Amazon Lex bot to
--   which this association is being made.
deleteBotChannelAssociation_botAlias :: Lens' DeleteBotChannelAssociation Text

-- | <i>See:</i> <a>newDeleteBotChannelAssociationResponse</a> smart
--   constructor.
data DeleteBotChannelAssociationResponse
DeleteBotChannelAssociationResponse' :: DeleteBotChannelAssociationResponse

-- | Create a value of <a>DeleteBotChannelAssociationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBotChannelAssociationResponse :: DeleteBotChannelAssociationResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance GHC.Show.Show Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance GHC.Read.Read Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociationResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociationResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociationResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociationResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteBotChannelAssociation.DeleteBotChannelAssociation


-- | Deletes an alias for the specified bot.
--   
--   You can't delete an alias that is used in the association between a
--   bot and a messaging channel. If an alias is used in a channel
--   association, the <tt>DeleteBot</tt> operation returns a
--   <tt>ResourceInUseException</tt> exception that includes a reference to
--   the channel association that refers to the bot. You can remove the
--   reference to the alias by deleting the channel association. If you get
--   the same exception again, delete the referring association until the
--   <tt>DeleteBotAlias</tt> operation is successful.
module Network.AWS.LexModels.DeleteBotAlias

-- | <i>See:</i> <a>newDeleteBotAlias</a> smart constructor.
data DeleteBotAlias
DeleteBotAlias' :: Text -> Text -> DeleteBotAlias

-- | The name of the alias to delete. The name is case sensitive.
[$sel:name:DeleteBotAlias'] :: DeleteBotAlias -> Text

-- | The name of the bot that the alias points to.
[$sel:botName:DeleteBotAlias'] :: DeleteBotAlias -> Text

-- | Create a value of <a>DeleteBotAlias</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBotAlias'</a>, <a>deleteBotAlias_name</a> - The
--   name of the alias to delete. The name is case sensitive.
--   
--   <a>$sel:botName:DeleteBotAlias'</a>, <a>deleteBotAlias_botName</a> -
--   The name of the bot that the alias points to.
newDeleteBotAlias :: Text -> Text -> DeleteBotAlias

-- | The name of the alias to delete. The name is case sensitive.
deleteBotAlias_name :: Lens' DeleteBotAlias Text

-- | The name of the bot that the alias points to.
deleteBotAlias_botName :: Lens' DeleteBotAlias Text

-- | <i>See:</i> <a>newDeleteBotAliasResponse</a> smart constructor.
data DeleteBotAliasResponse
DeleteBotAliasResponse' :: DeleteBotAliasResponse

-- | Create a value of <a>DeleteBotAliasResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBotAliasResponse :: DeleteBotAliasResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance GHC.Show.Show Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance GHC.Read.Read Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteBotAlias.DeleteBotAliasResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteBotAlias.DeleteBotAliasResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteBotAlias.DeleteBotAliasResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteBotAlias.DeleteBotAliasResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteBotAlias.DeleteBotAliasResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteBotAlias.DeleteBotAlias


-- | Deletes all versions of the bot, including the <tt>$LATEST</tt>
--   version. To delete a specific version of the bot, use the
--   DeleteBotVersion operation. The <tt>DeleteBot</tt> operation doesn't
--   immediately remove the bot schema. Instead, it is marked for deletion
--   and removed later.
--   
--   Amazon Lex stores utterances indefinitely for improving the ability of
--   your bot to respond to user inputs. These utterances are not removed
--   when the bot is deleted. To remove the utterances, use the
--   DeleteUtterances operation.
--   
--   If a bot has an alias, you can't delete it. Instead, the
--   <tt>DeleteBot</tt> operation returns a <tt>ResourceInUseException</tt>
--   exception that includes a reference to the alias that refers to the
--   bot. To remove the reference to the bot, delete the alias. If you get
--   the same exception again, delete the referring alias until the
--   <tt>DeleteBot</tt> operation is successful.
--   
--   This operation requires permissions for the <tt>lex:DeleteBot</tt>
--   action.
module Network.AWS.LexModels.DeleteBot

-- | <i>See:</i> <a>newDeleteBot</a> smart constructor.
data DeleteBot
DeleteBot' :: Text -> DeleteBot

-- | The name of the bot. The name is case sensitive.
[$sel:name:DeleteBot'] :: DeleteBot -> Text

-- | Create a value of <a>DeleteBot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBot'</a>, <a>deleteBot_name</a> - The name of the
--   bot. The name is case sensitive.
newDeleteBot :: Text -> DeleteBot

-- | The name of the bot. The name is case sensitive.
deleteBot_name :: Lens' DeleteBot Text

-- | <i>See:</i> <a>newDeleteBotResponse</a> smart constructor.
data DeleteBotResponse
DeleteBotResponse' :: DeleteBotResponse

-- | Create a value of <a>DeleteBotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBotResponse :: DeleteBotResponse
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteBot.DeleteBot
instance GHC.Show.Show Network.AWS.LexModels.DeleteBot.DeleteBot
instance GHC.Read.Read Network.AWS.LexModels.DeleteBot.DeleteBot
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteBot.DeleteBot
instance GHC.Generics.Generic Network.AWS.LexModels.DeleteBot.DeleteBotResponse
instance GHC.Show.Show Network.AWS.LexModels.DeleteBot.DeleteBotResponse
instance GHC.Read.Read Network.AWS.LexModels.DeleteBot.DeleteBotResponse
instance GHC.Classes.Eq Network.AWS.LexModels.DeleteBot.DeleteBotResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.DeleteBot.DeleteBot
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteBot.DeleteBotResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.DeleteBot.DeleteBot
instance Control.DeepSeq.NFData Network.AWS.LexModels.DeleteBot.DeleteBot
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.DeleteBot.DeleteBot
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.DeleteBot.DeleteBot
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.DeleteBot.DeleteBot


-- | Creates a new version of a slot type based on the <tt>$LATEST</tt>
--   version of the specified slot type. If the <tt>$LATEST</tt> version of
--   this resource has not changed since the last version that you created,
--   Amazon Lex doesn't create a new version. It returns the last version
--   that you created.
--   
--   You can update only the <tt>$LATEST</tt> version of a slot type. You
--   can't update the numbered versions that you create with the
--   <tt>CreateSlotTypeVersion</tt> operation.
--   
--   When you create a version of a slot type, Amazon Lex sets the version
--   to 1. Subsequent versions increment by 1. For more information, see
--   versioning-intro.
--   
--   This operation requires permissions for the
--   <tt>lex:CreateSlotTypeVersion</tt> action.
module Network.AWS.LexModels.CreateSlotTypeVersion

-- | <i>See:</i> <a>newCreateSlotTypeVersion</a> smart constructor.
data CreateSlotTypeVersion
CreateSlotTypeVersion' :: Maybe Text -> Text -> CreateSlotTypeVersion

-- | Checksum for the <tt>$LATEST</tt> version of the slot type that you
--   want to publish. If you specify a checksum and the <tt>$LATEST</tt>
--   version of the slot type has a different checksum, Amazon Lex returns
--   a <tt>PreconditionFailedException</tt> exception and doesn't publish
--   the new version. If you don't specify a checksum, Amazon Lex publishes
--   the <tt>$LATEST</tt> version.
[$sel:checksum:CreateSlotTypeVersion'] :: CreateSlotTypeVersion -> Maybe Text

-- | The name of the slot type that you want to create a new version for.
--   The name is case sensitive.
[$sel:name:CreateSlotTypeVersion'] :: CreateSlotTypeVersion -> Text

-- | Create a value of <a>CreateSlotTypeVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksum:CreateSlotTypeVersion'</a>,
--   <a>createSlotTypeVersion_checksum</a> - Checksum for the
--   <tt>$LATEST</tt> version of the slot type that you want to publish. If
--   you specify a checksum and the <tt>$LATEST</tt> version of the slot
--   type has a different checksum, Amazon Lex returns a
--   <tt>PreconditionFailedException</tt> exception and doesn't publish the
--   new version. If you don't specify a checksum, Amazon Lex publishes the
--   <tt>$LATEST</tt> version.
--   
--   <a>$sel:name:CreateSlotTypeVersion'</a>,
--   <a>createSlotTypeVersion_name</a> - The name of the slot type that you
--   want to create a new version for. The name is case sensitive.
newCreateSlotTypeVersion :: Text -> CreateSlotTypeVersion

-- | Checksum for the <tt>$LATEST</tt> version of the slot type that you
--   want to publish. If you specify a checksum and the <tt>$LATEST</tt>
--   version of the slot type has a different checksum, Amazon Lex returns
--   a <tt>PreconditionFailedException</tt> exception and doesn't publish
--   the new version. If you don't specify a checksum, Amazon Lex publishes
--   the <tt>$LATEST</tt> version.
createSlotTypeVersion_checksum :: Lens' CreateSlotTypeVersion (Maybe Text)

-- | The name of the slot type that you want to create a new version for.
--   The name is case sensitive.
createSlotTypeVersion_name :: Lens' CreateSlotTypeVersion Text

-- | <i>See:</i> <a>newCreateSlotTypeVersionResponse</a> smart constructor.
data CreateSlotTypeVersionResponse
CreateSlotTypeVersionResponse' :: Maybe [SlotTypeConfiguration] -> Maybe POSIX -> Maybe [EnumerationValue] -> Maybe POSIX -> Maybe SlotValueSelectionStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSlotTypeVersionResponse

-- | Configuration information that extends the parent built-in slot type.
[$sel:slotTypeConfigurations:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe [SlotTypeConfiguration]

-- | The date that the slot type was created.
[$sel:createdDate:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe POSIX

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
[$sel:enumerationValues:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe [EnumerationValue]

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last update date are the same.
[$sel:lastUpdatedDate:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe POSIX

-- | The strategy that Amazon Lex uses to determine the value of the slot.
--   For more information, see PutSlotType.
[$sel:valueSelectionStrategy:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe SlotValueSelectionStrategy

-- | The version assigned to the new slot type version.
[$sel:version:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe Text

-- | The name of the slot type.
[$sel:name:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe Text

-- | The built-in slot type used a the parent of the slot type.
[$sel:parentSlotTypeSignature:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe Text

-- | A description of the slot type.
[$sel:description:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe Text

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
[$sel:checksum:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSlotTypeVersionResponse'] :: CreateSlotTypeVersionResponse -> Int

-- | Create a value of <a>CreateSlotTypeVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypeConfigurations:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_slotTypeConfigurations</a> -
--   Configuration information that extends the parent built-in slot type.
--   
--   <a>$sel:createdDate:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_createdDate</a> - The date that the
--   slot type was created.
--   
--   <a>$sel:enumerationValues:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_enumerationValues</a> - A list of
--   <tt>EnumerationValue</tt> objects that defines the values that the
--   slot type can take.
--   
--   <a>$sel:lastUpdatedDate:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_lastUpdatedDate</a> - The date that
--   the slot type was updated. When you create a resource, the creation
--   date and last update date are the same.
--   
--   <a>$sel:valueSelectionStrategy:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_valueSelectionStrategy</a> - The
--   strategy that Amazon Lex uses to determine the value of the slot. For
--   more information, see PutSlotType.
--   
--   <a>$sel:version:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_version</a> - The version assigned to
--   the new slot type version.
--   
--   <a>$sel:name:CreateSlotTypeVersion'</a>,
--   <a>createSlotTypeVersionResponse_name</a> - The name of the slot type.
--   
--   <a>$sel:parentSlotTypeSignature:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_parentSlotTypeSignature</a> - The
--   built-in slot type used a the parent of the slot type.
--   
--   <a>$sel:description:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_description</a> - A description of
--   the slot type.
--   
--   <a>$sel:checksum:CreateSlotTypeVersion'</a>,
--   <a>createSlotTypeVersionResponse_checksum</a> - Checksum of the
--   <tt>$LATEST</tt> version of the slot type.
--   
--   <a>$sel:httpStatus:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateSlotTypeVersionResponse :: Int -> CreateSlotTypeVersionResponse

-- | Configuration information that extends the parent built-in slot type.
createSlotTypeVersionResponse_slotTypeConfigurations :: Lens' CreateSlotTypeVersionResponse (Maybe [SlotTypeConfiguration])

-- | The date that the slot type was created.
createSlotTypeVersionResponse_createdDate :: Lens' CreateSlotTypeVersionResponse (Maybe UTCTime)

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
createSlotTypeVersionResponse_enumerationValues :: Lens' CreateSlotTypeVersionResponse (Maybe [EnumerationValue])

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last update date are the same.
createSlotTypeVersionResponse_lastUpdatedDate :: Lens' CreateSlotTypeVersionResponse (Maybe UTCTime)

-- | The strategy that Amazon Lex uses to determine the value of the slot.
--   For more information, see PutSlotType.
createSlotTypeVersionResponse_valueSelectionStrategy :: Lens' CreateSlotTypeVersionResponse (Maybe SlotValueSelectionStrategy)

-- | The version assigned to the new slot type version.
createSlotTypeVersionResponse_version :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | The name of the slot type.
createSlotTypeVersionResponse_name :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | The built-in slot type used a the parent of the slot type.
createSlotTypeVersionResponse_parentSlotTypeSignature :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | A description of the slot type.
createSlotTypeVersionResponse_description :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
createSlotTypeVersionResponse_checksum :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | The response's http status code.
createSlotTypeVersionResponse_httpStatus :: Lens' CreateSlotTypeVersionResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance GHC.Show.Show Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance GHC.Read.Read Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance GHC.Classes.Eq Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance GHC.Generics.Generic Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersionResponse
instance GHC.Show.Show Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersionResponse
instance GHC.Read.Read Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersionResponse
instance GHC.Classes.Eq Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.CreateSlotTypeVersion.CreateSlotTypeVersion


-- | Creates a new version of an intent based on the <tt>$LATEST</tt>
--   version of the intent. If the <tt>$LATEST</tt> version of this intent
--   hasn't changed since you last updated it, Amazon Lex doesn't create a
--   new version. It returns the last version you created.
--   
--   You can update only the <tt>$LATEST</tt> version of the intent. You
--   can't update the numbered versions that you create with the
--   <tt>CreateIntentVersion</tt> operation.
--   
--   When you create a version of an intent, Amazon Lex sets the version to
--   1. Subsequent versions increment by 1. For more information, see
--   versioning-intro.
--   
--   This operation requires permissions to perform the
--   <tt>lex:CreateIntentVersion</tt> action.
module Network.AWS.LexModels.CreateIntentVersion

-- | <i>See:</i> <a>newCreateIntentVersion</a> smart constructor.
data CreateIntentVersion
CreateIntentVersion' :: Maybe Text -> Text -> CreateIntentVersion

-- | Checksum of the <tt>$LATEST</tt> version of the intent that should be
--   used to create the new version. If you specify a checksum and the
--   <tt>$LATEST</tt> version of the intent has a different checksum,
--   Amazon Lex returns a <tt>PreconditionFailedException</tt> exception
--   and doesn't publish a new version. If you don't specify a checksum,
--   Amazon Lex publishes the <tt>$LATEST</tt> version.
[$sel:checksum:CreateIntentVersion'] :: CreateIntentVersion -> Maybe Text

-- | The name of the intent that you want to create a new version of. The
--   name is case sensitive.
[$sel:name:CreateIntentVersion'] :: CreateIntentVersion -> Text

-- | Create a value of <a>CreateIntentVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksum:CreateIntentVersion'</a>,
--   <a>createIntentVersion_checksum</a> - Checksum of the <tt>$LATEST</tt>
--   version of the intent that should be used to create the new version.
--   If you specify a checksum and the <tt>$LATEST</tt> version of the
--   intent has a different checksum, Amazon Lex returns a
--   <tt>PreconditionFailedException</tt> exception and doesn't publish a
--   new version. If you don't specify a checksum, Amazon Lex publishes the
--   <tt>$LATEST</tt> version.
--   
--   <a>$sel:name:CreateIntentVersion'</a>, <a>createIntentVersion_name</a>
--   - The name of the intent that you want to create a new version of. The
--   name is case sensitive.
newCreateIntentVersion :: Text -> CreateIntentVersion

-- | Checksum of the <tt>$LATEST</tt> version of the intent that should be
--   used to create the new version. If you specify a checksum and the
--   <tt>$LATEST</tt> version of the intent has a different checksum,
--   Amazon Lex returns a <tt>PreconditionFailedException</tt> exception
--   and doesn't publish a new version. If you don't specify a checksum,
--   Amazon Lex publishes the <tt>$LATEST</tt> version.
createIntentVersion_checksum :: Lens' CreateIntentVersion (Maybe Text)

-- | The name of the intent that you want to create a new version of. The
--   name is case sensitive.
createIntentVersion_name :: Lens' CreateIntentVersion Text

-- | <i>See:</i> <a>newCreateIntentVersionResponse</a> smart constructor.
data CreateIntentVersionResponse
CreateIntentVersionResponse' :: Maybe KendraConfiguration -> Maybe POSIX -> Maybe Text -> Maybe CodeHook -> Maybe Statement -> Maybe POSIX -> Maybe Statement -> Maybe [InputContext] -> Maybe Text -> Maybe [Slot] -> Maybe FulfillmentActivity -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Prompt -> Maybe [OutputContext] -> Maybe FollowUpPrompt -> Maybe Text -> Int -> CreateIntentVersionResponse

-- | Configuration information, if any, for connecting an Amazon Kendra
--   index with the <tt>AMAZON.KendraSearchIntent</tt> intent.
[$sel:kendraConfiguration:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe KendraConfiguration

-- | The date that the intent was created.
[$sel:createdDate:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe POSIX

-- | A unique identifier for a built-in intent.
[$sel:parentIntentSignature:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe Text

-- | If defined, Amazon Lex invokes this Lambda function for each user
--   input.
[$sel:dialogCodeHook:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe CodeHook

-- | After the Lambda function specified in the
--   <tt>fulfillmentActivity</tt> field fulfills the intent, Amazon Lex
--   conveys this statement to the user.
[$sel:conclusionStatement:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe Statement

-- | The date that the intent was updated.
[$sel:lastUpdatedDate:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe POSIX

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
[$sel:rejectionStatement:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe Statement

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
[$sel:inputContexts:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe [InputContext]

-- | The version number assigned to the new version of the intent.
[$sel:version:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe Text

-- | An array of slot types that defines the information required to
--   fulfill the intent.
[$sel:slots:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe [Slot]

-- | Describes how the intent is fulfilled.
[$sel:fulfillmentActivity:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe FulfillmentActivity

-- | The name of the intent.
[$sel:name:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe Text

-- | An array of sample utterances configured for the intent.
[$sel:sampleUtterances:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe [Text]

-- | A description of the intent.
[$sel:description:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe Text

-- | If defined, the prompt that Amazon Lex uses to confirm the user's
--   intent before fulfilling it.
[$sel:confirmationPrompt:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe Prompt

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
[$sel:outputContexts:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe [OutputContext]

-- | If defined, Amazon Lex uses this prompt to solicit additional user
--   activity after the intent is fulfilled.
[$sel:followUpPrompt:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe FollowUpPrompt

-- | Checksum of the intent version created.
[$sel:checksum:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateIntentVersionResponse'] :: CreateIntentVersionResponse -> Int

-- | Create a value of <a>CreateIntentVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kendraConfiguration:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_kendraConfiguration</a> - Configuration
--   information, if any, for connecting an Amazon Kendra index with the
--   <tt>AMAZON.KendraSearchIntent</tt> intent.
--   
--   <a>$sel:createdDate:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_createdDate</a> - The date that the
--   intent was created.
--   
--   <a>$sel:parentIntentSignature:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_parentIntentSignature</a> - A unique
--   identifier for a built-in intent.
--   
--   <a>$sel:dialogCodeHook:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_dialogCodeHook</a> - If defined, Amazon
--   Lex invokes this Lambda function for each user input.
--   
--   <a>$sel:conclusionStatement:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_conclusionStatement</a> - After the
--   Lambda function specified in the <tt>fulfillmentActivity</tt> field
--   fulfills the intent, Amazon Lex conveys this statement to the user.
--   
--   <a>$sel:lastUpdatedDate:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_lastUpdatedDate</a> - The date that the
--   intent was updated.
--   
--   <a>$sel:rejectionStatement:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_rejectionStatement</a> - If the user
--   answers "no" to the question defined in <tt>confirmationPrompt</tt>,
--   Amazon Lex responds with this statement to acknowledge that the intent
--   was canceled.
--   
--   <a>$sel:inputContexts:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_inputContexts</a> - An array of
--   <tt>InputContext</tt> objects that lists the contexts that must be
--   active for Amazon Lex to choose the intent in a conversation with the
--   user.
--   
--   <a>$sel:version:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_version</a> - The version number
--   assigned to the new version of the intent.
--   
--   <a>$sel:slots:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_slots</a> - An array of slot types that
--   defines the information required to fulfill the intent.
--   
--   <a>$sel:fulfillmentActivity:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_fulfillmentActivity</a> - Describes how
--   the intent is fulfilled.
--   
--   <a>$sel:name:CreateIntentVersion'</a>,
--   <a>createIntentVersionResponse_name</a> - The name of the intent.
--   
--   <a>$sel:sampleUtterances:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_sampleUtterances</a> - An array of
--   sample utterances configured for the intent.
--   
--   <a>$sel:description:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_description</a> - A description of the
--   intent.
--   
--   <a>$sel:confirmationPrompt:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_confirmationPrompt</a> - If defined,
--   the prompt that Amazon Lex uses to confirm the user's intent before
--   fulfilling it.
--   
--   <a>$sel:outputContexts:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_outputContexts</a> - An array of
--   <tt>OutputContext</tt> objects that lists the contexts that the intent
--   activates when the intent is fulfilled.
--   
--   <a>$sel:followUpPrompt:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_followUpPrompt</a> - If defined, Amazon
--   Lex uses this prompt to solicit additional user activity after the
--   intent is fulfilled.
--   
--   <a>$sel:checksum:CreateIntentVersion'</a>,
--   <a>createIntentVersionResponse_checksum</a> - Checksum of the intent
--   version created.
--   
--   <a>$sel:httpStatus:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateIntentVersionResponse :: Int -> CreateIntentVersionResponse

-- | Configuration information, if any, for connecting an Amazon Kendra
--   index with the <tt>AMAZON.KendraSearchIntent</tt> intent.
createIntentVersionResponse_kendraConfiguration :: Lens' CreateIntentVersionResponse (Maybe KendraConfiguration)

-- | The date that the intent was created.
createIntentVersionResponse_createdDate :: Lens' CreateIntentVersionResponse (Maybe UTCTime)

-- | A unique identifier for a built-in intent.
createIntentVersionResponse_parentIntentSignature :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | If defined, Amazon Lex invokes this Lambda function for each user
--   input.
createIntentVersionResponse_dialogCodeHook :: Lens' CreateIntentVersionResponse (Maybe CodeHook)

-- | After the Lambda function specified in the
--   <tt>fulfillmentActivity</tt> field fulfills the intent, Amazon Lex
--   conveys this statement to the user.
createIntentVersionResponse_conclusionStatement :: Lens' CreateIntentVersionResponse (Maybe Statement)

-- | The date that the intent was updated.
createIntentVersionResponse_lastUpdatedDate :: Lens' CreateIntentVersionResponse (Maybe UTCTime)

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
createIntentVersionResponse_rejectionStatement :: Lens' CreateIntentVersionResponse (Maybe Statement)

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
createIntentVersionResponse_inputContexts :: Lens' CreateIntentVersionResponse (Maybe [InputContext])

-- | The version number assigned to the new version of the intent.
createIntentVersionResponse_version :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | An array of slot types that defines the information required to
--   fulfill the intent.
createIntentVersionResponse_slots :: Lens' CreateIntentVersionResponse (Maybe [Slot])

-- | Describes how the intent is fulfilled.
createIntentVersionResponse_fulfillmentActivity :: Lens' CreateIntentVersionResponse (Maybe FulfillmentActivity)

-- | The name of the intent.
createIntentVersionResponse_name :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | An array of sample utterances configured for the intent.
createIntentVersionResponse_sampleUtterances :: Lens' CreateIntentVersionResponse (Maybe [Text])

-- | A description of the intent.
createIntentVersionResponse_description :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | If defined, the prompt that Amazon Lex uses to confirm the user's
--   intent before fulfilling it.
createIntentVersionResponse_confirmationPrompt :: Lens' CreateIntentVersionResponse (Maybe Prompt)

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
createIntentVersionResponse_outputContexts :: Lens' CreateIntentVersionResponse (Maybe [OutputContext])

-- | If defined, Amazon Lex uses this prompt to solicit additional user
--   activity after the intent is fulfilled.
createIntentVersionResponse_followUpPrompt :: Lens' CreateIntentVersionResponse (Maybe FollowUpPrompt)

-- | Checksum of the intent version created.
createIntentVersionResponse_checksum :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | The response's http status code.
createIntentVersionResponse_httpStatus :: Lens' CreateIntentVersionResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance GHC.Show.Show Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance GHC.Read.Read Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance GHC.Classes.Eq Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance GHC.Generics.Generic Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersionResponse
instance GHC.Show.Show Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersionResponse
instance GHC.Read.Read Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersionResponse
instance GHC.Classes.Eq Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.CreateIntentVersion.CreateIntentVersion


-- | Creates a new version of the bot based on the <tt>$LATEST</tt>
--   version. If the <tt>$LATEST</tt> version of this resource hasn't
--   changed since you created the last version, Amazon Lex doesn't create
--   a new version. It returns the last created version.
--   
--   You can update only the <tt>$LATEST</tt> version of the bot. You can't
--   update the numbered versions that you create with the
--   <tt>CreateBotVersion</tt> operation.
--   
--   When you create the first version of a bot, Amazon Lex sets the
--   version to 1. Subsequent versions increment by 1. For more
--   information, see versioning-intro.
--   
--   This operation requires permission for the
--   <tt>lex:CreateBotVersion</tt> action.
module Network.AWS.LexModels.CreateBotVersion

-- | <i>See:</i> <a>newCreateBotVersion</a> smart constructor.
data CreateBotVersion
CreateBotVersion' :: Maybe Text -> Text -> CreateBotVersion

-- | Identifies a specific revision of the <tt>$LATEST</tt> version of the
--   bot. If you specify a checksum and the <tt>$LATEST</tt> version of the
--   bot has a different checksum, a <tt>PreconditionFailedException</tt>
--   exception is returned and Amazon Lex doesn't publish a new version. If
--   you don't specify a checksum, Amazon Lex publishes the
--   <tt>$LATEST</tt> version.
[$sel:checksum:CreateBotVersion'] :: CreateBotVersion -> Maybe Text

-- | The name of the bot that you want to create a new version of. The name
--   is case sensitive.
[$sel:name:CreateBotVersion'] :: CreateBotVersion -> Text

-- | Create a value of <a>CreateBotVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksum:CreateBotVersion'</a>,
--   <a>createBotVersion_checksum</a> - Identifies a specific revision of
--   the <tt>$LATEST</tt> version of the bot. If you specify a checksum and
--   the <tt>$LATEST</tt> version of the bot has a different checksum, a
--   <tt>PreconditionFailedException</tt> exception is returned and Amazon
--   Lex doesn't publish a new version. If you don't specify a checksum,
--   Amazon Lex publishes the <tt>$LATEST</tt> version.
--   
--   <a>$sel:name:CreateBotVersion'</a>, <a>createBotVersion_name</a> - The
--   name of the bot that you want to create a new version of. The name is
--   case sensitive.
newCreateBotVersion :: Text -> CreateBotVersion

-- | Identifies a specific revision of the <tt>$LATEST</tt> version of the
--   bot. If you specify a checksum and the <tt>$LATEST</tt> version of the
--   bot has a different checksum, a <tt>PreconditionFailedException</tt>
--   exception is returned and Amazon Lex doesn't publish a new version. If
--   you don't specify a checksum, Amazon Lex publishes the
--   <tt>$LATEST</tt> version.
createBotVersion_checksum :: Lens' CreateBotVersion (Maybe Text)

-- | The name of the bot that you want to create a new version of. The name
--   is case sensitive.
createBotVersion_name :: Lens' CreateBotVersion Text

-- | <i>See:</i> <a>newCreateBotVersionResponse</a> smart constructor.
data CreateBotVersionResponse
CreateBotVersionResponse' :: Maybe Statement -> Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Prompt -> Maybe Locale -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [Intent] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> Int -> CreateBotVersionResponse

-- | The message that Amazon Lex uses to cancel a conversation. For more
--   information, see PutBot.
[$sel:abortStatement:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Statement

-- | The date when the bot version was created.
[$sel:createdDate:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe POSIX

-- | When you send a request to create or update a bot, Amazon Lex sets the
--   <tt>status</tt> response element to <tt>BUILDING</tt>. After Amazon
--   Lex builds the bot, it sets <tt>status</tt> to <tt>READY</tt>. If
--   Amazon Lex can't build the bot, it sets <tt>status</tt> to
--   <tt>FAILED</tt>. Amazon Lex returns the reason for the failure in the
--   <tt>failureReason</tt> response element.
[$sel:status:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe LexStatus

-- | The date when the <tt>$LATEST</tt> version of this bot was updated.
[$sel:lastUpdatedDate:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe POSIX

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interactions
--   with the user.
[$sel:voiceId:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Text

-- | The message that Amazon Lex uses when it doesn't understand the user's
--   request. For more information, see PutBot.
[$sel:clarificationPrompt:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Prompt

-- | Specifies the target locale for the bot.
[$sel:locale:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Locale

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
[$sel:enableModelImprovements:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Bool

-- | The version of the bot.
[$sel:version:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Text

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
[$sel:idleSessionTTLInSeconds:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Natural

-- | The name of the bot.
[$sel:name:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Text

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
[$sel:intents:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe [Intent]

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to build the bot.
[$sel:failureReason:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Text

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
[$sel:childDirected:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Bool

-- | A description of the bot.
[$sel:description:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Text

-- | Indicates whether utterances entered by the user should be sent to
--   Amazon Comprehend for sentiment analysis.
[$sel:detectSentiment:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Bool

-- | Checksum identifying the version of the bot that was created.
[$sel:checksum:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateBotVersionResponse'] :: CreateBotVersionResponse -> Int

-- | Create a value of <a>CreateBotVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abortStatement:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_abortStatement</a> - The message that
--   Amazon Lex uses to cancel a conversation. For more information, see
--   PutBot.
--   
--   <a>$sel:createdDate:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_createdDate</a> - The date when the bot
--   version was created.
--   
--   <a>$sel:status:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_status</a> - When you send a request to
--   create or update a bot, Amazon Lex sets the <tt>status</tt> response
--   element to <tt>BUILDING</tt>. After Amazon Lex builds the bot, it sets
--   <tt>status</tt> to <tt>READY</tt>. If Amazon Lex can't build the bot,
--   it sets <tt>status</tt> to <tt>FAILED</tt>. Amazon Lex returns the
--   reason for the failure in the <tt>failureReason</tt> response element.
--   
--   <a>$sel:lastUpdatedDate:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_lastUpdatedDate</a> - The date when the
--   <tt>$LATEST</tt> version of this bot was updated.
--   
--   <a>$sel:voiceId:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_voiceId</a> - The Amazon Polly voice ID
--   that Amazon Lex uses for voice interactions with the user.
--   
--   <a>$sel:clarificationPrompt:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_clarificationPrompt</a> - The message that
--   Amazon Lex uses when it doesn't understand the user's request. For
--   more information, see PutBot.
--   
--   <a>$sel:locale:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_locale</a> - Specifies the target locale
--   for the bot.
--   
--   <a>$sel:enableModelImprovements:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_enableModelImprovements</a> - Indicates
--   whether the bot uses accuracy improvements. <tt>true</tt> indicates
--   that the bot is using the improvements, otherwise, <tt>false</tt>.
--   
--   <a>$sel:version:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_version</a> - The version of the bot.
--   
--   <a>$sel:idleSessionTTLInSeconds:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_idleSessionTTLInSeconds</a> - The maximum
--   time in seconds that Amazon Lex retains the data gathered in a
--   conversation. For more information, see PutBot.
--   
--   <a>$sel:name:CreateBotVersion'</a>,
--   <a>createBotVersionResponse_name</a> - The name of the bot.
--   
--   <a>$sel:intents:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_intents</a> - An array of <tt>Intent</tt>
--   objects. For more information, see PutBot.
--   
--   <a>$sel:failureReason:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   build the bot.
--   
--   <a>$sel:childDirected:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_childDirected</a> - For each Amazon Lex
--   bot created with the Amazon Lex Model Building Service, you must
--   specify whether your use of Amazon Lex is related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to the Children's
--   Online Privacy Protection Act (COPPA) by specifying <tt>true</tt> or
--   <tt>false</tt> in the <tt>childDirected</tt> field. By specifying
--   <tt>true</tt> in the <tt>childDirected</tt> field, you confirm that
--   your use of Amazon Lex <b>is</b> related to a website, program, or
--   other application that is directed or targeted, in whole or in part,
--   to children under age 13 and subject to COPPA. By specifying
--   <tt>false</tt> in the <tt>childDirected</tt> field, you confirm that
--   your use of Amazon Lex <b>is not</b> related to a website, program, or
--   other application that is directed or targeted, in whole or in part,
--   to children under age 13 and subject to COPPA. You may not specify a
--   default value for the <tt>childDirected</tt> field that does not
--   accurately reflect whether your use of Amazon Lex is related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
--   
--   <a>$sel:description:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_description</a> - A description of the
--   bot.
--   
--   <a>$sel:detectSentiment:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_detectSentiment</a> - Indicates whether
--   utterances entered by the user should be sent to Amazon Comprehend for
--   sentiment analysis.
--   
--   <a>$sel:checksum:CreateBotVersion'</a>,
--   <a>createBotVersionResponse_checksum</a> - Checksum identifying the
--   version of the bot that was created.
--   
--   <a>$sel:httpStatus:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateBotVersionResponse :: Int -> CreateBotVersionResponse

-- | The message that Amazon Lex uses to cancel a conversation. For more
--   information, see PutBot.
createBotVersionResponse_abortStatement :: Lens' CreateBotVersionResponse (Maybe Statement)

-- | The date when the bot version was created.
createBotVersionResponse_createdDate :: Lens' CreateBotVersionResponse (Maybe UTCTime)

-- | When you send a request to create or update a bot, Amazon Lex sets the
--   <tt>status</tt> response element to <tt>BUILDING</tt>. After Amazon
--   Lex builds the bot, it sets <tt>status</tt> to <tt>READY</tt>. If
--   Amazon Lex can't build the bot, it sets <tt>status</tt> to
--   <tt>FAILED</tt>. Amazon Lex returns the reason for the failure in the
--   <tt>failureReason</tt> response element.
createBotVersionResponse_status :: Lens' CreateBotVersionResponse (Maybe LexStatus)

-- | The date when the <tt>$LATEST</tt> version of this bot was updated.
createBotVersionResponse_lastUpdatedDate :: Lens' CreateBotVersionResponse (Maybe UTCTime)

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interactions
--   with the user.
createBotVersionResponse_voiceId :: Lens' CreateBotVersionResponse (Maybe Text)

-- | The message that Amazon Lex uses when it doesn't understand the user's
--   request. For more information, see PutBot.
createBotVersionResponse_clarificationPrompt :: Lens' CreateBotVersionResponse (Maybe Prompt)

-- | Specifies the target locale for the bot.
createBotVersionResponse_locale :: Lens' CreateBotVersionResponse (Maybe Locale)

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
createBotVersionResponse_enableModelImprovements :: Lens' CreateBotVersionResponse (Maybe Bool)

-- | The version of the bot.
createBotVersionResponse_version :: Lens' CreateBotVersionResponse (Maybe Text)

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
createBotVersionResponse_idleSessionTTLInSeconds :: Lens' CreateBotVersionResponse (Maybe Natural)

-- | The name of the bot.
createBotVersionResponse_name :: Lens' CreateBotVersionResponse (Maybe Text)

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
createBotVersionResponse_intents :: Lens' CreateBotVersionResponse (Maybe [Intent])

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to build the bot.
createBotVersionResponse_failureReason :: Lens' CreateBotVersionResponse (Maybe Text)

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
createBotVersionResponse_childDirected :: Lens' CreateBotVersionResponse (Maybe Bool)

-- | A description of the bot.
createBotVersionResponse_description :: Lens' CreateBotVersionResponse (Maybe Text)

-- | Indicates whether utterances entered by the user should be sent to
--   Amazon Comprehend for sentiment analysis.
createBotVersionResponse_detectSentiment :: Lens' CreateBotVersionResponse (Maybe Bool)

-- | Checksum identifying the version of the bot that was created.
createBotVersionResponse_checksum :: Lens' CreateBotVersionResponse (Maybe Text)

-- | The response's http status code.
createBotVersionResponse_httpStatus :: Lens' CreateBotVersionResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance GHC.Show.Show Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance GHC.Read.Read Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance GHC.Classes.Eq Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance GHC.Generics.Generic Network.AWS.LexModels.CreateBotVersion.CreateBotVersionResponse
instance GHC.Show.Show Network.AWS.LexModels.CreateBotVersion.CreateBotVersionResponse
instance GHC.Read.Read Network.AWS.LexModels.CreateBotVersion.CreateBotVersionResponse
instance GHC.Classes.Eq Network.AWS.LexModels.CreateBotVersion.CreateBotVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.CreateBotVersion.CreateBotVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance Control.DeepSeq.NFData Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.CreateBotVersion.CreateBotVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.CreateBotVersion.CreateBotVersion


-- | Removes tags from a bot, bot alias or bot channel.
module Network.AWS.LexModels.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to remove the tags
--   from.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | A list of tag keys to remove from the resource. If a tag key does not
--   exist on the resource, it is ignored.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to remove the tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag keys to remove from the resource. If a tag key does not
--   exist on the resource, it is ignored.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to remove the tags
--   from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of tag keys to remove from the resource. If a tag key does not
--   exist on the resource, it is ignored.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.LexModels.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.LexModels.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.LexModels.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.LexModels.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.LexModels.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.LexModels.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.LexModels.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.LexModels.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.LexModels.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.LexModels.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.LexModels.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.LexModels.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.LexModels.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.LexModels.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.LexModels.UntagResource.UntagResource


module Network.AWS.LexModels.Lens

-- | The name of the slot type.
deleteSlotTypeVersion_name :: Lens' DeleteSlotTypeVersion Text

-- | The version of the slot type to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the slot type. To delete the
--   <tt>$LATEST</tt> version, use the DeleteSlotType operation.
deleteSlotTypeVersion_version :: Lens' DeleteSlotTypeVersion Text

-- | The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex
--   V2.
startMigration_v1BotName :: Lens' StartMigration Text

-- | The version of the bot to migrate to Amazon Lex V2. You can migrate
--   the <tt>$LATEST</tt> version as well as any numbered version.
startMigration_v1BotVersion :: Lens' StartMigration Text

-- | The name of the Amazon Lex V2 bot that you are migrating the Amazon
--   Lex V1 bot to.
--   
--   <ul>
--   <li>If the Amazon Lex V2 bot doesn't exist, you must use the
--   <tt>CREATE_NEW</tt> migration strategy.</li>
--   <li>If the Amazon Lex V2 bot exists, you must use the
--   <tt>UPDATE_EXISTING</tt> migration strategy to change the contents of
--   the Amazon Lex V2 bot.</li>
--   </ul>
startMigration_v2BotName :: Lens' StartMigration Text

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
startMigration_v2BotRole :: Lens' StartMigration Text

-- | The strategy used to conduct the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
startMigration_migrationStrategy :: Lens' StartMigration MigrationStrategy

-- | The version of the bot to migrate to Amazon Lex V2.
startMigrationResponse_v1BotVersion :: Lens' StartMigrationResponse (Maybe Text)

-- | The unique identifier that Amazon Lex assigned to the migration.
startMigrationResponse_migrationId :: Lens' StartMigrationResponse (Maybe Text)

-- | The locale used for the Amazon Lex V1 bot.
startMigrationResponse_v1BotLocale :: Lens' StartMigrationResponse (Maybe Locale)

-- | The date and time that the migration started.
startMigrationResponse_migrationTimestamp :: Lens' StartMigrationResponse (Maybe UTCTime)

-- | The strategy used to conduct the migration.
startMigrationResponse_migrationStrategy :: Lens' StartMigrationResponse (Maybe MigrationStrategy)

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
startMigrationResponse_v2BotRole :: Lens' StartMigrationResponse (Maybe Text)

-- | The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex
--   V2.
startMigrationResponse_v1BotName :: Lens' StartMigrationResponse (Maybe Text)

-- | The unique identifier for the Amazon Lex V2 bot.
startMigrationResponse_v2BotId :: Lens' StartMigrationResponse (Maybe Text)

-- | The response's http status code.
startMigrationResponse_httpStatus :: Lens' StartMigrationResponse Int

-- | Substring to match in bot names. A bot will be returned if any part of
--   its name matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz."
getBots_nameContains :: Lens' GetBots (Maybe Text)

-- | A pagination token that fetches the next page of bots. If the response
--   to this call is truncated, Amazon Lex returns a pagination token in
--   the response. To fetch the next page of bots, specify the pagination
--   token in the next request.
getBots_nextToken :: Lens' GetBots (Maybe Text)

-- | The maximum number of bots to return in the response that the request
--   will return. The default is 10.
getBots_maxResults :: Lens' GetBots (Maybe Natural)

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of bots.
getBotsResponse_nextToken :: Lens' GetBotsResponse (Maybe Text)

-- | An array of <tt>botMetadata</tt> objects, with one entry for each bot.
getBotsResponse_bots :: Lens' GetBotsResponse (Maybe [BotMetadata])

-- | The response's http status code.
getBotsResponse_httpStatus :: Lens' GetBotsResponse Int

-- | The name of the bot alias. The name is case sensitive.
getBotAlias_name :: Lens' GetBotAlias Text

-- | The name of the bot.
getBotAlias_botName :: Lens' GetBotAlias Text

-- | The date that the bot alias was created.
getBotAliasResponse_createdDate :: Lens' GetBotAliasResponse (Maybe UTCTime)

-- | The name of the bot that the alias points to.
getBotAliasResponse_botName :: Lens' GetBotAliasResponse (Maybe Text)

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and the last updated date are the same.
getBotAliasResponse_lastUpdatedDate :: Lens' GetBotAliasResponse (Maybe UTCTime)

-- | The version of the bot that the alias points to.
getBotAliasResponse_botVersion :: Lens' GetBotAliasResponse (Maybe Text)

-- | The name of the bot alias.
getBotAliasResponse_name :: Lens' GetBotAliasResponse (Maybe Text)

-- | A description of the bot alias.
getBotAliasResponse_description :: Lens' GetBotAliasResponse (Maybe Text)

-- | Checksum of the bot alias.
getBotAliasResponse_checksum :: Lens' GetBotAliasResponse (Maybe Text)

-- | The settings that determine how Amazon Lex uses conversation logs for
--   the alias.
getBotAliasResponse_conversationLogs :: Lens' GetBotAliasResponse (Maybe ConversationLogsResponse)

-- | The response's http status code.
getBotAliasResponse_httpStatus :: Lens' GetBotAliasResponse Int

-- | Substring to match in slot type names. A slot type will be returned if
--   any part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
getSlotTypes_nameContains :: Lens' GetSlotTypes (Maybe Text)

-- | A pagination token that fetches the next page of slot types. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch next page of slot types,
--   specify the pagination token in the next request.
getSlotTypes_nextToken :: Lens' GetSlotTypes (Maybe Text)

-- | The maximum number of slot types to return in the response. The
--   default is 10.
getSlotTypes_maxResults :: Lens' GetSlotTypes (Maybe Natural)

-- | An array of objects, one for each slot type, that provides information
--   such as the name of the slot type, the version, and a description.
getSlotTypesResponse_slotTypes :: Lens' GetSlotTypesResponse (Maybe [SlotTypeMetadata])

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of slot types.
getSlotTypesResponse_nextToken :: Lens' GetSlotTypesResponse (Maybe Text)

-- | The response's http status code.
getSlotTypesResponse_httpStatus :: Lens' GetSlotTypesResponse Int

-- | The name of the bot that stored the utterances.
deleteUtterances_botName :: Lens' DeleteUtterances Text

-- | The unique identifier for the user that made the utterances. This is
--   the user ID that was sent in the <a>PostContent</a> or <a>PostText</a>
--   operation request that contained the utterance.
deleteUtterances_userId :: Lens' DeleteUtterances Text

-- | Substring to match in channel association names. An association will
--   be returned if any part of its name matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz." To return all bot
--   channel associations, use a hyphen ("-") as the <tt>nameContains</tt>
--   parameter.
getBotChannelAssociations_nameContains :: Lens' GetBotChannelAssociations (Maybe Text)

-- | A pagination token for fetching the next page of associations. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of associations, specify
--   the pagination token in the next request.
getBotChannelAssociations_nextToken :: Lens' GetBotChannelAssociations (Maybe Text)

-- | The maximum number of associations to return in the response. The
--   default is 50.
getBotChannelAssociations_maxResults :: Lens' GetBotChannelAssociations (Maybe Natural)

-- | The name of the Amazon Lex bot in the association.
getBotChannelAssociations_botName :: Lens' GetBotChannelAssociations Text

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
getBotChannelAssociations_botAlias :: Lens' GetBotChannelAssociations Text

-- | A pagination token that fetches the next page of associations. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of associations, specify
--   the pagination token in the next request.
getBotChannelAssociationsResponse_nextToken :: Lens' GetBotChannelAssociationsResponse (Maybe Text)

-- | An array of objects, one for each association, that provides
--   information about the Amazon Lex bot and its association with the
--   channel.
getBotChannelAssociationsResponse_botChannelAssociations :: Lens' GetBotChannelAssociationsResponse (Maybe [BotChannelAssociation])

-- | The response's http status code.
getBotChannelAssociationsResponse_httpStatus :: Lens' GetBotChannelAssociationsResponse Int

-- | A list of tags to add to the bot alias. You can only add tags when you
--   create an alias, you can't use the <tt>PutBotAlias</tt> operation to
--   update the tags on a bot alias. To update tags, use the
--   <tt>TagResource</tt> operation.
putBotAlias_tags :: Lens' PutBotAlias (Maybe [Tag])

-- | A description of the alias.
putBotAlias_description :: Lens' PutBotAlias (Maybe Text)

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot alias, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a bot alias, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
putBotAlias_checksum :: Lens' PutBotAlias (Maybe Text)

-- | Settings for conversation logs for the alias.
putBotAlias_conversationLogs :: Lens' PutBotAlias (Maybe ConversationLogsRequest)

-- | The name of the alias. The name is <i>not</i> case sensitive.
putBotAlias_name :: Lens' PutBotAlias Text

-- | The version of the bot.
putBotAlias_botVersion :: Lens' PutBotAlias Text

-- | The name of the bot.
putBotAlias_botName :: Lens' PutBotAlias Text

-- | The date that the bot alias was created.
putBotAliasResponse_createdDate :: Lens' PutBotAliasResponse (Maybe UTCTime)

-- | The name of the bot that the alias points to.
putBotAliasResponse_botName :: Lens' PutBotAliasResponse (Maybe Text)

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and the last updated date are the same.
putBotAliasResponse_lastUpdatedDate :: Lens' PutBotAliasResponse (Maybe UTCTime)

-- | The version of the bot that the alias points to.
putBotAliasResponse_botVersion :: Lens' PutBotAliasResponse (Maybe Text)

-- | The name of the alias.
putBotAliasResponse_name :: Lens' PutBotAliasResponse (Maybe Text)

-- | A list of tags associated with a bot.
putBotAliasResponse_tags :: Lens' PutBotAliasResponse (Maybe [Tag])

-- | A description of the alias.
putBotAliasResponse_description :: Lens' PutBotAliasResponse (Maybe Text)

-- | The checksum for the current version of the alias.
putBotAliasResponse_checksum :: Lens' PutBotAliasResponse (Maybe Text)

-- | The settings that determine how Amazon Lex uses conversation logs for
--   the alias.
putBotAliasResponse_conversationLogs :: Lens' PutBotAliasResponse (Maybe ConversationLogsResponse)

-- | The response's http status code.
putBotAliasResponse_httpStatus :: Lens' PutBotAliasResponse Int

-- | A pagination token for fetching the next page of slot type versions.
--   If the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
getSlotTypeVersions_nextToken :: Lens' GetSlotTypeVersions (Maybe Text)

-- | The maximum number of slot type versions to return in the response.
--   The default is 10.
getSlotTypeVersions_maxResults :: Lens' GetSlotTypeVersions (Maybe Natural)

-- | The name of the slot type for which versions should be returned.
getSlotTypeVersions_name :: Lens' GetSlotTypeVersions Text

-- | An array of <tt>SlotTypeMetadata</tt> objects, one for each numbered
--   version of the slot type plus one for the <tt>$LATEST</tt> version.
getSlotTypeVersionsResponse_slotTypes :: Lens' GetSlotTypeVersionsResponse (Maybe [SlotTypeMetadata])

-- | A pagination token for fetching the next page of slot type versions.
--   If the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
getSlotTypeVersionsResponse_nextToken :: Lens' GetSlotTypeVersionsResponse (Maybe Text)

-- | The response's http status code.
getSlotTypeVersionsResponse_httpStatus :: Lens' GetSlotTypeVersionsResponse Int

-- | The unique identifier for a built-in intent. To find the signature for
--   an intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
getBuiltinIntent_signature :: Lens' GetBuiltinIntent Text

-- | An array of <tt>BuiltinIntentSlot</tt> objects, one entry for each
--   slot type in the intent.
getBuiltinIntentResponse_slots :: Lens' GetBuiltinIntentResponse (Maybe [BuiltinIntentSlot])

-- | The unique identifier for a built-in intent.
getBuiltinIntentResponse_signature :: Lens' GetBuiltinIntentResponse (Maybe Text)

-- | A list of locales that the intent supports.
getBuiltinIntentResponse_supportedLocales :: Lens' GetBuiltinIntentResponse (Maybe [Locale])

-- | The response's http status code.
getBuiltinIntentResponse_httpStatus :: Lens' GetBuiltinIntentResponse Int

-- | The Amazon Resource Name (ARN) of the resource to remove the tags
--   from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of tag keys to remove from the resource. If a tag key does not
--   exist on the resource, it is ignored.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The name of the bot for which utterance information should be
--   returned.
getUtterancesView_botName :: Lens' GetUtterancesView Text

-- | An array of bot versions for which utterance information should be
--   returned. The limit is 5 versions per request.
getUtterancesView_botVersions :: Lens' GetUtterancesView (NonEmpty Text)

-- | To return utterances that were recognized and handled, use
--   <tt>Detected</tt>. To return utterances that were not recognized, use
--   <tt>Missed</tt>.
getUtterancesView_statusType :: Lens' GetUtterancesView StatusType

-- | The name of the bot for which utterance information was returned.
getUtterancesViewResponse_botName :: Lens' GetUtterancesViewResponse (Maybe Text)

-- | An array of UtteranceList objects, each containing a list of
--   UtteranceData objects describing the utterances that were processed by
--   your bot. The response contains a maximum of 100
--   <tt>UtteranceData</tt> objects for each version. Amazon Lex returns
--   the most frequent utterances received by the bot in the last 15 days.
getUtterancesViewResponse_utterances :: Lens' GetUtterancesViewResponse (Maybe [UtteranceList])

-- | The response's http status code.
getUtterancesViewResponse_httpStatus :: Lens' GetUtterancesViewResponse Int

-- | The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel
--   to tag.
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tag keys to add to the resource. If a tag key already
--   exists, the existing value is replaced with the new value.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Substring to match in built-in slot type signatures. A slot type will
--   be returned if any part of its signature matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz."
getBuiltinSlotTypes_signatureContains :: Lens' GetBuiltinSlotTypes (Maybe Text)

-- | A pagination token that fetches the next page of slot types. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of slot
--   types, specify the pagination token in the next request.
getBuiltinSlotTypes_nextToken :: Lens' GetBuiltinSlotTypes (Maybe Text)

-- | The maximum number of slot types to return in the response. The
--   default is 10.
getBuiltinSlotTypes_maxResults :: Lens' GetBuiltinSlotTypes (Maybe Natural)

-- | A list of locales that the slot type supports.
getBuiltinSlotTypes_locale :: Lens' GetBuiltinSlotTypes (Maybe Locale)

-- | An array of <tt>BuiltInSlotTypeMetadata</tt> objects, one entry for
--   each slot type returned.
getBuiltinSlotTypesResponse_slotTypes :: Lens' GetBuiltinSlotTypesResponse (Maybe [BuiltinSlotTypeMetadata])

-- | If the response is truncated, the response includes a pagination token
--   that you can use in your next request to fetch the next page of slot
--   types.
getBuiltinSlotTypesResponse_nextToken :: Lens' GetBuiltinSlotTypesResponse (Maybe Text)

-- | The response's http status code.
getBuiltinSlotTypesResponse_httpStatus :: Lens' GetBuiltinSlotTypesResponse Int

-- | When Amazon Lex can't understand the user's input in context, it tries
--   to elicit the information a few times. After that, Amazon Lex sends
--   the message defined in <tt>abortStatement</tt> to the user, and then
--   cancels the conversation. To set the number of retries, use the
--   <tt>valueElicitationPrompt</tt> field for the slot type.
--   
--   For example, in a pizza ordering bot, Amazon Lex might ask a user
--   "What type of crust would you like?" If the user's response is not one
--   of the expected responses (for example, "thin crust, "deep dish,"
--   etc.), Amazon Lex tries to elicit a correct response a few more times.
--   
--   For example, in a pizza ordering application, <tt>OrderPizza</tt>
--   might be one of the intents. This intent might require the
--   <tt>CrustType</tt> slot. You specify the
--   <tt>valueElicitationPrompt</tt> field when you create the
--   <tt>CrustType</tt> slot.
--   
--   If you have defined a fallback intent the cancel statement will not be
--   sent to the user, the fallback intent is used instead. For more
--   information, see <a>AMAZON.FallbackIntent</a>.
putBot_abortStatement :: Lens' PutBot (Maybe Statement)

-- | If you set the <tt>processBehavior</tt> element to <tt>BUILD</tt>,
--   Amazon Lex builds the bot so that it can be run. If you set the
--   element to <tt>SAVE</tt> Amazon Lex saves the bot, but doesn't build
--   it.
--   
--   If you don't specify this value, the default value is <tt>BUILD</tt>.
putBot_processBehavior :: Lens' PutBot (Maybe ProcessBehavior)

-- | The Amazon Polly voice ID that you want Amazon Lex to use for voice
--   interactions with the user. The locale configured for the voice must
--   match the locale of the bot. For more information, see <a>Voices in
--   Amazon Polly</a> in the <i>Amazon Polly Developer Guide</i>.
putBot_voiceId :: Lens' PutBot (Maybe Text)

-- | When Amazon Lex doesn't understand the user's intent, it uses this
--   message to get clarification. To specify how many times Amazon Lex
--   should repeat the clarification prompt, use the <tt>maxAttempts</tt>
--   field. If Amazon Lex still doesn't understand, it sends the message in
--   the <tt>abortStatement</tt> field.
--   
--   When you create a clarification prompt, make sure that it suggests the
--   correct response from the user. for example, for a bot that orders
--   pizza and drinks, you might create this clarification prompt: "What
--   would you like to do? You can say 'Order a pizza' or 'Order a drink.'"
--   
--   If you have defined a fallback intent, it will be invoked if the
--   clarification prompt is repeated the number of times defined in the
--   <tt>maxAttempts</tt> field. For more information, see
--   <a>AMAZON.FallbackIntent</a>.
--   
--   If you don't define a clarification prompt, at runtime Amazon Lex will
--   return a 400 Bad Request exception in three cases:
--   
--   <ul>
--   <li>Follow-up prompt - When the user responds to a follow-up prompt
--   but does not provide an intent. For example, in response to a
--   follow-up prompt that says "Would you like anything else today?" the
--   user says "Yes." Amazon Lex will return a 400 Bad Request exception
--   because it does not have a clarification prompt to send to the user to
--   get an intent.</li>
--   <li>Lambda function - When using a Lambda function, you return an
--   <tt>ElicitIntent</tt> dialog type. Since Amazon Lex does not have a
--   clarification prompt to get an intent from the user, it returns a 400
--   Bad Request exception.</li>
--   <li>PutSession operation - When using the <tt>PutSession</tt>
--   operation, you send an <tt>ElicitIntent</tt> dialog type. Since Amazon
--   Lex does not have a clarification prompt to get an intent from the
--   user, it returns a 400 Bad Request exception.</li>
--   </ul>
putBot_clarificationPrompt :: Lens' PutBot (Maybe Prompt)

-- | Determines the threshold where Amazon Lex will insert the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> and
--   <tt>AMAZON.KendraSearchIntent</tt> are only inserted if they are
--   configured for the bot.
--   
--   You must set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> to use confidence scores in the following regions.
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default.
--   
--   For example, suppose a bot is configured with the confidence threshold
--   of 0.80 and the <tt>AMAZON.FallbackIntent</tt>. Amazon Lex returns
--   three alternative intents with the following confidence scores:
--   IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the
--   <tt>PostText</tt> operation would be:
--   
--   <ul>
--   <li>AMAZON.FallbackIntent</li>
--   <li>IntentA</li>
--   <li>IntentB</li>
--   <li>IntentC</li>
--   </ul>
putBot_nluIntentConfidenceThreshold :: Lens' PutBot (Maybe Double)

-- | Set to <tt>true</tt> to enable access to natural language
--   understanding improvements.
--   
--   When you set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> you can use the <tt>nluIntentConfidenceThreshold</tt>
--   parameter to configure confidence scores. For more information, see
--   <a>Confidence Scores</a>.
--   
--   You can only set the <tt>enableModelImprovements</tt> parameter in
--   certain Regions. If you set the parameter to <tt>true</tt>, your bot
--   has access to accuracy improvements.
--   
--   The Regions where you can set the <tt>enableModelImprovements</tt>
--   parameter to <tt>true</tt> are:
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default. In these Regions setting the
--   parameter to <tt>false</tt> throws a <tt>ValidationException</tt>
--   exception.
putBot_enableModelImprovements :: Lens' PutBot (Maybe Bool)

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation.
--   
--   A user interaction session remains active for the amount of time
--   specified. If no conversation occurs during this time, the session
--   expires and Amazon Lex deletes any data provided before the timeout.
--   
--   For example, suppose that a user chooses the OrderPizza intent, but
--   gets sidetracked halfway through placing an order. If the user doesn't
--   complete the order within the specified time, Amazon Lex discards the
--   slot information that it gathered, and the user must start over.
--   
--   If you don't include the <tt>idleSessionTTLInSeconds</tt> element in a
--   <tt>PutBot</tt> operation request, Amazon Lex uses the default value.
--   This is also true if the request replaces an existing bot.
--   
--   The default is 300 seconds (5 minutes).
putBot_idleSessionTTLInSeconds :: Lens' PutBot (Maybe Natural)

-- | An array of <tt>Intent</tt> objects. Each intent represents a command
--   that a user can express. For example, a pizza ordering bot might
--   support an OrderPizza intent. For more information, see how-it-works.
putBot_intents :: Lens' PutBot (Maybe [Intent])

-- | A list of tags to add to the bot. You can only add tags when you
--   create a bot, you can't use the <tt>PutBot</tt> operation to update
--   the tags on a bot. To update tags, use the <tt>TagResource</tt>
--   operation.
putBot_tags :: Lens' PutBot (Maybe [Tag])

-- | A description of the bot.
putBot_description :: Lens' PutBot (Maybe Text)

-- | When set to <tt>true</tt> a new numbered version of the bot is
--   created. This is the same as calling the <tt>CreateBotVersion</tt>
--   operation. If you don't specify <tt>createVersion</tt>, the default is
--   <tt>false</tt>.
putBot_createVersion :: Lens' PutBot (Maybe Bool)

-- | When set to <tt>true</tt> user utterances are sent to Amazon
--   Comprehend for sentiment analysis. If you don't specify
--   <tt>detectSentiment</tt>, the default is <tt>false</tt>.
putBot_detectSentiment :: Lens' PutBot (Maybe Bool)

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot, leave the <tt>checksum</tt> field blank. If
--   you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a bot, set the <tt>checksum</tt> field to the
--   checksum of the most recent revision of the <tt>$LATEST</tt> version.
--   If you don't specify the <tt> checksum</tt> field, or if the checksum
--   does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
putBot_checksum :: Lens' PutBot (Maybe Text)

-- | The name of the bot. The name is <i>not</i> case sensitive.
putBot_name :: Lens' PutBot Text

-- | Specifies the target locale for the bot. Any intent used in the bot
--   must be compatible with the locale of the bot.
--   
--   The default is <tt>en-US</tt>.
putBot_locale :: Lens' PutBot Locale

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
putBot_childDirected :: Lens' PutBot Bool

-- | The message that Amazon Lex uses to cancel a conversation. For more
--   information, see PutBot.
putBotResponse_abortStatement :: Lens' PutBotResponse (Maybe Statement)

-- | The date that the bot was created.
putBotResponse_createdDate :: Lens' PutBotResponse (Maybe UTCTime)

-- | When you send a request to create a bot with <tt>processBehavior</tt>
--   set to <tt>BUILD</tt>, Amazon Lex sets the <tt>status</tt> response
--   element to <tt>BUILDING</tt>.
--   
--   In the <tt>READY_BASIC_TESTING</tt> state you can test the bot with
--   user inputs that exactly match the utterances configured for the bot's
--   intents and values in the slot types.
--   
--   If Amazon Lex can't build the bot, Amazon Lex sets <tt>status</tt> to
--   <tt>FAILED</tt>. Amazon Lex returns the reason for the failure in the
--   <tt>failureReason</tt> response element.
--   
--   When you set <tt>processBehavior</tt> to <tt>SAVE</tt>, Amazon Lex
--   sets the status code to <tt>NOT BUILT</tt>.
--   
--   When the bot is in the <tt>READY</tt> state you can test and publish
--   the bot.
putBotResponse_status :: Lens' PutBotResponse (Maybe LexStatus)

-- | The date that the bot was updated. When you create a resource, the
--   creation date and last updated date are the same.
putBotResponse_lastUpdatedDate :: Lens' PutBotResponse (Maybe UTCTime)

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interaction
--   with the user. For more information, see PutBot.
putBotResponse_voiceId :: Lens' PutBotResponse (Maybe Text)

-- | The prompts that Amazon Lex uses when it doesn't understand the user's
--   intent. For more information, see PutBot.
putBotResponse_clarificationPrompt :: Lens' PutBotResponse (Maybe Prompt)

-- | The score that determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
putBotResponse_nluIntentConfidenceThreshold :: Lens' PutBotResponse (Maybe Double)

-- | The target locale for the bot.
putBotResponse_locale :: Lens' PutBotResponse (Maybe Locale)

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
putBotResponse_enableModelImprovements :: Lens' PutBotResponse (Maybe Bool)

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
putBotResponse_version :: Lens' PutBotResponse (Maybe Text)

-- | The maximum length of time that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
putBotResponse_idleSessionTTLInSeconds :: Lens' PutBotResponse (Maybe Natural)

-- | The name of the bot.
putBotResponse_name :: Lens' PutBotResponse (Maybe Text)

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
putBotResponse_intents :: Lens' PutBotResponse (Maybe [Intent])

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to build the bot.
putBotResponse_failureReason :: Lens' PutBotResponse (Maybe Text)

-- | A list of tags associated with the bot.
putBotResponse_tags :: Lens' PutBotResponse (Maybe [Tag])

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
putBotResponse_childDirected :: Lens' PutBotResponse (Maybe Bool)

-- | A description of the bot.
putBotResponse_description :: Lens' PutBotResponse (Maybe Text)

-- | <tt>True</tt> if a new version of the bot was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
putBotResponse_createVersion :: Lens' PutBotResponse (Maybe Bool)

-- | <tt>true</tt> if the bot is configured to send user utterances to
--   Amazon Comprehend for sentiment analysis. If the
--   <tt>detectSentiment</tt> field was not specified in the request, the
--   <tt>detectSentiment</tt> field is <tt>false</tt> in the response.
putBotResponse_detectSentiment :: Lens' PutBotResponse (Maybe Bool)

-- | Checksum of the bot that you created.
putBotResponse_checksum :: Lens' PutBotResponse (Maybe Text)

-- | The response's http status code.
putBotResponse_httpStatus :: Lens' PutBotResponse Int

-- | Configuration information required to use the
--   <tt>AMAZON.KendraSearchIntent</tt> intent to connect to an Amazon
--   Kendra index. For more information, see
--   <a>AMAZON.KendraSearchIntent</a>.
putIntent_kendraConfiguration :: Lens' PutIntent (Maybe KendraConfiguration)

-- | A unique identifier for the built-in intent to base this intent on. To
--   find the signature for an intent, see <a>Standard Built-in Intents</a>
--   in the <i>Alexa Skills Kit</i>.
putIntent_parentIntentSignature :: Lens' PutIntent (Maybe Text)

-- | Specifies a Lambda function to invoke for each user input. You can
--   invoke this Lambda function to personalize user interaction.
--   
--   For example, suppose your bot determines that the user is John. Your
--   Lambda function might retrieve John's information from a backend
--   database and prepopulate some of the values. For example, if you find
--   that John is gluten intolerant, you might set the corresponding intent
--   slot, <tt>GlutenIntolerant</tt>, to true. You might find John's phone
--   number and set the corresponding session attribute.
putIntent_dialogCodeHook :: Lens' PutIntent (Maybe CodeHook)

-- | The statement that you want Amazon Lex to convey to the user after the
--   intent is successfully fulfilled by the Lambda function.
--   
--   This element is relevant only if you provide a Lambda function in the
--   <tt>fulfillmentActivity</tt>. If you return the intent to the client
--   application, you can't specify this element.
--   
--   The <tt>followUpPrompt</tt> and <tt>conclusionStatement</tt> are
--   mutually exclusive. You can specify only one.
putIntent_conclusionStatement :: Lens' PutIntent (Maybe Statement)

-- | When the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
--   
--   You must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
putIntent_rejectionStatement :: Lens' PutIntent (Maybe Statement)

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
putIntent_inputContexts :: Lens' PutIntent (Maybe [InputContext])

-- | An array of intent slots. At runtime, Amazon Lex elicits required slot
--   values from the user using prompts defined in the slots. For more
--   information, see how-it-works.
putIntent_slots :: Lens' PutIntent (Maybe [Slot])

-- | Required. Describes how the intent is fulfilled. For example, after a
--   user provides all of the information for a pizza order,
--   <tt>fulfillmentActivity</tt> defines how the bot places an order with
--   a local pizza store.
--   
--   You might configure Amazon Lex to return all of the intent information
--   to the client application, or direct it to invoke a Lambda function
--   that can process the intent (for example, place an order with a
--   pizzeria).
putIntent_fulfillmentActivity :: Lens' PutIntent (Maybe FulfillmentActivity)

-- | An array of utterances (strings) that a user might say to signal the
--   intent. For example, "I want {PizzaSize} pizza", "Order {Quantity}
--   {PizzaSize} pizzas".
--   
--   In each utterance, a slot name is enclosed in curly braces.
putIntent_sampleUtterances :: Lens' PutIntent (Maybe [Text])

-- | A description of the intent.
putIntent_description :: Lens' PutIntent (Maybe Text)

-- | When set to <tt>true</tt> a new numbered version of the intent is
--   created. This is the same as calling the <tt>CreateIntentVersion</tt>
--   operation. If you do not specify <tt>createVersion</tt>, the default
--   is <tt>false</tt>.
putIntent_createVersion :: Lens' PutIntent (Maybe Bool)

-- | Prompts the user to confirm the intent. This question should have a
--   yes or no answer.
--   
--   Amazon Lex uses this prompt to ensure that the user acknowledges that
--   the intent is ready for fulfillment. For example, with the
--   <tt>OrderPizza</tt> intent, you might want to confirm that the order
--   is correct before placing it. For other intents, such as intents that
--   simply respond to user questions, you might not need to ask the user
--   for confirmation before providing the information.
--   
--   You you must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
putIntent_confirmationPrompt :: Lens' PutIntent (Maybe Prompt)

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
putIntent_outputContexts :: Lens' PutIntent (Maybe [OutputContext])

-- | Amazon Lex uses this prompt to solicit additional activity after
--   fulfilling an intent. For example, after the <tt>OrderPizza</tt>
--   intent is fulfilled, you might prompt the user to order a drink.
--   
--   The action that Amazon Lex takes depends on the user's response, as
--   follows:
--   
--   <ul>
--   <li>If the user says "Yes" it responds with the clarification prompt
--   that is configured for the bot.</li>
--   <li>if the user says "Yes" and continues with an utterance that
--   triggers an intent it starts a conversation for the intent.</li>
--   <li>If the user says "No" it responds with the rejection statement
--   configured for the the follow-up prompt.</li>
--   <li>If it doesn't recognize the utterance it repeats the follow-up
--   prompt again.</li>
--   </ul>
--   
--   The <tt>followUpPrompt</tt> field and the <tt>conclusionStatement</tt>
--   field are mutually exclusive. You can specify only one.
putIntent_followUpPrompt :: Lens' PutIntent (Maybe FollowUpPrompt)

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new intent, leave the <tt>checksum</tt> field blank.
--   If you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a intent, set the <tt>checksum</tt> field to
--   the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
putIntent_checksum :: Lens' PutIntent (Maybe Text)

-- | The name of the intent. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in intent name, or a built-in intent name
--   with "AMAZON." removed. For example, because there is a built-in
--   intent called <tt>AMAZON.HelpIntent</tt>, you can't create a custom
--   intent called <tt>HelpIntent</tt>.
--   
--   For a list of built-in intents, see <a>Standard Built-in Intents</a>
--   in the <i>Alexa Skills Kit</i>.
putIntent_name :: Lens' PutIntent Text

-- | Configuration information, if any, required to connect to an Amazon
--   Kendra index and use the <tt>AMAZON.KendraSearchIntent</tt> intent.
putIntentResponse_kendraConfiguration :: Lens' PutIntentResponse (Maybe KendraConfiguration)

-- | The date that the intent was created.
putIntentResponse_createdDate :: Lens' PutIntentResponse (Maybe UTCTime)

-- | A unique identifier for the built-in intent that this intent is based
--   on.
putIntentResponse_parentIntentSignature :: Lens' PutIntentResponse (Maybe Text)

-- | If defined in the intent, Amazon Lex invokes this Lambda function for
--   each user input.
putIntentResponse_dialogCodeHook :: Lens' PutIntentResponse (Maybe CodeHook)

-- | After the Lambda function specified in
--   the<tt>fulfillmentActivity</tt>intent fulfills the intent, Amazon Lex
--   conveys this statement to the user.
putIntentResponse_conclusionStatement :: Lens' PutIntentResponse (Maybe Statement)

-- | The date that the intent was updated. When you create a resource, the
--   creation date and last update dates are the same.
putIntentResponse_lastUpdatedDate :: Lens' PutIntentResponse (Maybe UTCTime)

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt> Amazon Lex responds with this statement to
--   acknowledge that the intent was canceled.
putIntentResponse_rejectionStatement :: Lens' PutIntentResponse (Maybe Statement)

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
putIntentResponse_inputContexts :: Lens' PutIntentResponse (Maybe [InputContext])

-- | The version of the intent. For a new intent, the version is always
--   <tt>$LATEST</tt>.
putIntentResponse_version :: Lens' PutIntentResponse (Maybe Text)

-- | An array of intent slots that are configured for the intent.
putIntentResponse_slots :: Lens' PutIntentResponse (Maybe [Slot])

-- | If defined in the intent, Amazon Lex invokes this Lambda function to
--   fulfill the intent after the user provides all of the information
--   required by the intent.
putIntentResponse_fulfillmentActivity :: Lens' PutIntentResponse (Maybe FulfillmentActivity)

-- | The name of the intent.
putIntentResponse_name :: Lens' PutIntentResponse (Maybe Text)

-- | An array of sample utterances that are configured for the intent.
putIntentResponse_sampleUtterances :: Lens' PutIntentResponse (Maybe [Text])

-- | A description of the intent.
putIntentResponse_description :: Lens' PutIntentResponse (Maybe Text)

-- | <tt>True</tt> if a new version of the intent was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
putIntentResponse_createVersion :: Lens' PutIntentResponse (Maybe Bool)

-- | If defined in the intent, Amazon Lex prompts the user to confirm the
--   intent before fulfilling it.
putIntentResponse_confirmationPrompt :: Lens' PutIntentResponse (Maybe Prompt)

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
putIntentResponse_outputContexts :: Lens' PutIntentResponse (Maybe [OutputContext])

-- | If defined in the intent, Amazon Lex uses this prompt to solicit
--   additional user activity after the intent is fulfilled.
putIntentResponse_followUpPrompt :: Lens' PutIntentResponse (Maybe FollowUpPrompt)

-- | Checksum of the <tt>$LATEST</tt>version of the intent created or
--   updated.
putIntentResponse_checksum :: Lens' PutIntentResponse (Maybe Text)

-- | The response's http status code.
putIntentResponse_httpStatus :: Lens' PutIntentResponse Int

-- | The name of the association between the bot and the channel. The name
--   is case sensitive.
getBotChannelAssociation_name :: Lens' GetBotChannelAssociation Text

-- | The name of the Amazon Lex bot.
getBotChannelAssociation_botName :: Lens' GetBotChannelAssociation Text

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
getBotChannelAssociation_botAlias :: Lens' GetBotChannelAssociation Text

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
getBotChannelAssociationResponse_botAlias :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | The date that the association between the bot and the channel was
--   created.
getBotChannelAssociationResponse_createdDate :: Lens' GetBotChannelAssociationResponse (Maybe UTCTime)

-- | The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
getBotChannelAssociationResponse_status :: Lens' GetBotChannelAssociationResponse (Maybe ChannelStatus)

-- | Provides information that the messaging platform needs to communicate
--   with the Amazon Lex bot.
getBotChannelAssociationResponse_botConfiguration :: Lens' GetBotChannelAssociationResponse (Maybe (HashMap Text Text))

-- | The name of the Amazon Lex bot.
getBotChannelAssociationResponse_botName :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | The name of the association between the bot and the channel.
getBotChannelAssociationResponse_name :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
getBotChannelAssociationResponse_failureReason :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | A description of the association between the bot and the channel.
getBotChannelAssociationResponse_description :: Lens' GetBotChannelAssociationResponse (Maybe Text)

-- | The type of the messaging platform.
getBotChannelAssociationResponse_type :: Lens' GetBotChannelAssociationResponse (Maybe ChannelType)

-- | The response's http status code.
getBotChannelAssociationResponse_httpStatus :: Lens' GetBotChannelAssociationResponse Int

-- | The name of the slot type. The name is case sensitive.
deleteSlotType_name :: Lens' DeleteSlotType Text

-- | The name of the bot to export.
getExport_name :: Lens' GetExport Text

-- | The version of the bot to export.
getExport_version :: Lens' GetExport Text

-- | The type of resource to export.
getExport_resourceType :: Lens' GetExport ResourceType

-- | The format of the exported data.
getExport_exportType :: Lens' GetExport ExportType

-- | The status of the export.
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The export is in progress.</li>
--   <li><tt>READY</tt> - The export is complete.</li>
--   <li><tt>FAILED</tt> - The export could not be completed.</li>
--   </ul>
getExportResponse_exportStatus :: Lens' GetExportResponse (Maybe ExportStatus)

-- | The version of the bot being exported.
getExportResponse_version :: Lens' GetExportResponse (Maybe Text)

-- | The type of the exported resource.
getExportResponse_resourceType :: Lens' GetExportResponse (Maybe ResourceType)

-- | The name of the bot being exported.
getExportResponse_name :: Lens' GetExportResponse (Maybe Text)

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to export the resource.
getExportResponse_failureReason :: Lens' GetExportResponse (Maybe Text)

-- | The format of the exported data.
getExportResponse_exportType :: Lens' GetExportResponse (Maybe ExportType)

-- | An S3 pre-signed URL that provides the location of the exported
--   resource. The exported resource is a ZIP archive that contains the
--   exported resource in JSON format. The structure of the archive may
--   change. Your code should not rely on the archive structure.
getExportResponse_url :: Lens' GetExportResponse (Maybe Text)

-- | The response's http status code.
getExportResponse_httpStatus :: Lens' GetExportResponse Int

-- | The name of the slot type. The name is case sensitive.
getSlotType_name :: Lens' GetSlotType Text

-- | The version of the slot type.
getSlotType_version :: Lens' GetSlotType Text

-- | Configuration information that extends the parent built-in slot type.
getSlotTypeResponse_slotTypeConfigurations :: Lens' GetSlotTypeResponse (Maybe [SlotTypeConfiguration])

-- | The date that the slot type was created.
getSlotTypeResponse_createdDate :: Lens' GetSlotTypeResponse (Maybe UTCTime)

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
getSlotTypeResponse_enumerationValues :: Lens' GetSlotTypeResponse (Maybe [EnumerationValue])

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last update date are the same.
getSlotTypeResponse_lastUpdatedDate :: Lens' GetSlotTypeResponse (Maybe UTCTime)

-- | The strategy that Amazon Lex uses to determine the value of the slot.
--   For more information, see PutSlotType.
getSlotTypeResponse_valueSelectionStrategy :: Lens' GetSlotTypeResponse (Maybe SlotValueSelectionStrategy)

-- | The version of the slot type.
getSlotTypeResponse_version :: Lens' GetSlotTypeResponse (Maybe Text)

-- | The name of the slot type.
getSlotTypeResponse_name :: Lens' GetSlotTypeResponse (Maybe Text)

-- | The built-in slot type used as a parent for the slot type.
getSlotTypeResponse_parentSlotTypeSignature :: Lens' GetSlotTypeResponse (Maybe Text)

-- | A description of the slot type.
getSlotTypeResponse_description :: Lens' GetSlotTypeResponse (Maybe Text)

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
getSlotTypeResponse_checksum :: Lens' GetSlotTypeResponse (Maybe Text)

-- | The response's http status code.
getSlotTypeResponse_httpStatus :: Lens' GetSlotTypeResponse Int

-- | Checksum of the <tt>$LATEST</tt> version of the intent that should be
--   used to create the new version. If you specify a checksum and the
--   <tt>$LATEST</tt> version of the intent has a different checksum,
--   Amazon Lex returns a <tt>PreconditionFailedException</tt> exception
--   and doesn't publish a new version. If you don't specify a checksum,
--   Amazon Lex publishes the <tt>$LATEST</tt> version.
createIntentVersion_checksum :: Lens' CreateIntentVersion (Maybe Text)

-- | The name of the intent that you want to create a new version of. The
--   name is case sensitive.
createIntentVersion_name :: Lens' CreateIntentVersion Text

-- | Configuration information, if any, for connecting an Amazon Kendra
--   index with the <tt>AMAZON.KendraSearchIntent</tt> intent.
createIntentVersionResponse_kendraConfiguration :: Lens' CreateIntentVersionResponse (Maybe KendraConfiguration)

-- | The date that the intent was created.
createIntentVersionResponse_createdDate :: Lens' CreateIntentVersionResponse (Maybe UTCTime)

-- | A unique identifier for a built-in intent.
createIntentVersionResponse_parentIntentSignature :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | If defined, Amazon Lex invokes this Lambda function for each user
--   input.
createIntentVersionResponse_dialogCodeHook :: Lens' CreateIntentVersionResponse (Maybe CodeHook)

-- | After the Lambda function specified in the
--   <tt>fulfillmentActivity</tt> field fulfills the intent, Amazon Lex
--   conveys this statement to the user.
createIntentVersionResponse_conclusionStatement :: Lens' CreateIntentVersionResponse (Maybe Statement)

-- | The date that the intent was updated.
createIntentVersionResponse_lastUpdatedDate :: Lens' CreateIntentVersionResponse (Maybe UTCTime)

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
createIntentVersionResponse_rejectionStatement :: Lens' CreateIntentVersionResponse (Maybe Statement)

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
createIntentVersionResponse_inputContexts :: Lens' CreateIntentVersionResponse (Maybe [InputContext])

-- | The version number assigned to the new version of the intent.
createIntentVersionResponse_version :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | An array of slot types that defines the information required to
--   fulfill the intent.
createIntentVersionResponse_slots :: Lens' CreateIntentVersionResponse (Maybe [Slot])

-- | Describes how the intent is fulfilled.
createIntentVersionResponse_fulfillmentActivity :: Lens' CreateIntentVersionResponse (Maybe FulfillmentActivity)

-- | The name of the intent.
createIntentVersionResponse_name :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | An array of sample utterances configured for the intent.
createIntentVersionResponse_sampleUtterances :: Lens' CreateIntentVersionResponse (Maybe [Text])

-- | A description of the intent.
createIntentVersionResponse_description :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | If defined, the prompt that Amazon Lex uses to confirm the user's
--   intent before fulfilling it.
createIntentVersionResponse_confirmationPrompt :: Lens' CreateIntentVersionResponse (Maybe Prompt)

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
createIntentVersionResponse_outputContexts :: Lens' CreateIntentVersionResponse (Maybe [OutputContext])

-- | If defined, Amazon Lex uses this prompt to solicit additional user
--   activity after the intent is fulfilled.
createIntentVersionResponse_followUpPrompt :: Lens' CreateIntentVersionResponse (Maybe FollowUpPrompt)

-- | Checksum of the intent version created.
createIntentVersionResponse_checksum :: Lens' CreateIntentVersionResponse (Maybe Text)

-- | The response's http status code.
createIntentVersionResponse_httpStatus :: Lens' CreateIntentVersionResponse Int

-- | The name of the bot. The name is case sensitive.
getBot_name :: Lens' GetBot Text

-- | The version or alias of the bot.
getBot_versionOrAlias :: Lens' GetBot Text

-- | The message that Amazon Lex returns when the user elects to end the
--   conversation without completing it. For more information, see PutBot.
getBotResponse_abortStatement :: Lens' GetBotResponse (Maybe Statement)

-- | The date that the bot was created.
getBotResponse_createdDate :: Lens' GetBotResponse (Maybe UTCTime)

-- | The status of the bot.
--   
--   When the status is <tt>BUILDING</tt> Amazon Lex is building the bot
--   for testing and use.
--   
--   If the status of the bot is <tt>READY_BASIC_TESTING</tt>, you can test
--   the bot using the exact utterances specified in the bot's intents.
--   When the bot is ready for full testing or to run, the status is
--   <tt>READY</tt>.
--   
--   If there was a problem with building the bot, the status is
--   <tt>FAILED</tt> and the <tt>failureReason</tt> field explains why the
--   bot did not build.
--   
--   If the bot was saved but not built, the status is <tt>NOT_BUILT</tt>.
getBotResponse_status :: Lens' GetBotResponse (Maybe LexStatus)

-- | The date that the bot was updated. When you create a resource, the
--   creation date and last updated date are the same.
getBotResponse_lastUpdatedDate :: Lens' GetBotResponse (Maybe UTCTime)

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interaction
--   with the user. For more information, see PutBot.
getBotResponse_voiceId :: Lens' GetBotResponse (Maybe Text)

-- | The message Amazon Lex uses when it doesn't understand the user's
--   request. For more information, see PutBot.
getBotResponse_clarificationPrompt :: Lens' GetBotResponse (Maybe Prompt)

-- | The score that determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
getBotResponse_nluIntentConfidenceThreshold :: Lens' GetBotResponse (Maybe Double)

-- | The target locale for the bot.
getBotResponse_locale :: Lens' GetBotResponse (Maybe Locale)

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
getBotResponse_enableModelImprovements :: Lens' GetBotResponse (Maybe Bool)

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
getBotResponse_version :: Lens' GetBotResponse (Maybe Text)

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
getBotResponse_idleSessionTTLInSeconds :: Lens' GetBotResponse (Maybe Natural)

-- | The name of the bot.
getBotResponse_name :: Lens' GetBotResponse (Maybe Text)

-- | An array of <tt>intent</tt> objects. For more information, see PutBot.
getBotResponse_intents :: Lens' GetBotResponse (Maybe [Intent])

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex explains why it
--   failed to build the bot.
getBotResponse_failureReason :: Lens' GetBotResponse (Maybe Text)

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
getBotResponse_childDirected :: Lens' GetBotResponse (Maybe Bool)

-- | A description of the bot.
getBotResponse_description :: Lens' GetBotResponse (Maybe Text)

-- | Indicates whether user utterances should be sent to Amazon Comprehend
--   for sentiment analysis.
getBotResponse_detectSentiment :: Lens' GetBotResponse (Maybe Bool)

-- | Checksum of the bot used to identify a specific revision of the bot's
--   <tt>$LATEST</tt> version.
getBotResponse_checksum :: Lens' GetBotResponse (Maybe Text)

-- | The response's http status code.
getBotResponse_httpStatus :: Lens' GetBotResponse Int

-- | Substring to match in bot alias names. An alias will be returned if
--   any part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
getBotAliases_nameContains :: Lens' GetBotAliases (Maybe Text)

-- | A pagination token for fetching the next page of aliases. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of aliases, specify the
--   pagination token in the next request.
getBotAliases_nextToken :: Lens' GetBotAliases (Maybe Text)

-- | The maximum number of aliases to return in the response. The default
--   is 50. .
getBotAliases_maxResults :: Lens' GetBotAliases (Maybe Natural)

-- | The name of the bot.
getBotAliases_botName :: Lens' GetBotAliases Text

-- | A pagination token for fetching next page of aliases. If the response
--   to this call is truncated, Amazon Lex returns a pagination token in
--   the response. To fetch the next page of aliases, specify the
--   pagination token in the next request.
getBotAliasesResponse_nextToken :: Lens' GetBotAliasesResponse (Maybe Text)

-- | An array of <tt>BotAliasMetadata</tt> objects, each describing a bot
--   alias.
getBotAliasesResponse_botAliases :: Lens' GetBotAliasesResponse (Maybe [BotAliasMetadata])

-- | The response's http status code.
getBotAliasesResponse_httpStatus :: Lens' GetBotAliasesResponse Int

-- | The name of the intent.
deleteIntentVersion_name :: Lens' DeleteIntentVersion Text

-- | The version of the intent to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the intent. To delete the <tt>$LATEST</tt>
--   version, use the DeleteIntent operation.
deleteIntentVersion_version :: Lens' DeleteIntentVersion Text

-- | Identifies a specific revision of the <tt>$LATEST</tt> version of the
--   bot. If you specify a checksum and the <tt>$LATEST</tt> version of the
--   bot has a different checksum, a <tt>PreconditionFailedException</tt>
--   exception is returned and Amazon Lex doesn't publish a new version. If
--   you don't specify a checksum, Amazon Lex publishes the
--   <tt>$LATEST</tt> version.
createBotVersion_checksum :: Lens' CreateBotVersion (Maybe Text)

-- | The name of the bot that you want to create a new version of. The name
--   is case sensitive.
createBotVersion_name :: Lens' CreateBotVersion Text

-- | The message that Amazon Lex uses to cancel a conversation. For more
--   information, see PutBot.
createBotVersionResponse_abortStatement :: Lens' CreateBotVersionResponse (Maybe Statement)

-- | The date when the bot version was created.
createBotVersionResponse_createdDate :: Lens' CreateBotVersionResponse (Maybe UTCTime)

-- | When you send a request to create or update a bot, Amazon Lex sets the
--   <tt>status</tt> response element to <tt>BUILDING</tt>. After Amazon
--   Lex builds the bot, it sets <tt>status</tt> to <tt>READY</tt>. If
--   Amazon Lex can't build the bot, it sets <tt>status</tt> to
--   <tt>FAILED</tt>. Amazon Lex returns the reason for the failure in the
--   <tt>failureReason</tt> response element.
createBotVersionResponse_status :: Lens' CreateBotVersionResponse (Maybe LexStatus)

-- | The date when the <tt>$LATEST</tt> version of this bot was updated.
createBotVersionResponse_lastUpdatedDate :: Lens' CreateBotVersionResponse (Maybe UTCTime)

-- | The Amazon Polly voice ID that Amazon Lex uses for voice interactions
--   with the user.
createBotVersionResponse_voiceId :: Lens' CreateBotVersionResponse (Maybe Text)

-- | The message that Amazon Lex uses when it doesn't understand the user's
--   request. For more information, see PutBot.
createBotVersionResponse_clarificationPrompt :: Lens' CreateBotVersionResponse (Maybe Prompt)

-- | Specifies the target locale for the bot.
createBotVersionResponse_locale :: Lens' CreateBotVersionResponse (Maybe Locale)

-- | Indicates whether the bot uses accuracy improvements. <tt>true</tt>
--   indicates that the bot is using the improvements, otherwise,
--   <tt>false</tt>.
createBotVersionResponse_enableModelImprovements :: Lens' CreateBotVersionResponse (Maybe Bool)

-- | The version of the bot.
createBotVersionResponse_version :: Lens' CreateBotVersionResponse (Maybe Text)

-- | The maximum time in seconds that Amazon Lex retains the data gathered
--   in a conversation. For more information, see PutBot.
createBotVersionResponse_idleSessionTTLInSeconds :: Lens' CreateBotVersionResponse (Maybe Natural)

-- | The name of the bot.
createBotVersionResponse_name :: Lens' CreateBotVersionResponse (Maybe Text)

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
createBotVersionResponse_intents :: Lens' CreateBotVersionResponse (Maybe [Intent])

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to build the bot.
createBotVersionResponse_failureReason :: Lens' CreateBotVersionResponse (Maybe Text)

-- | For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
createBotVersionResponse_childDirected :: Lens' CreateBotVersionResponse (Maybe Bool)

-- | A description of the bot.
createBotVersionResponse_description :: Lens' CreateBotVersionResponse (Maybe Text)

-- | Indicates whether utterances entered by the user should be sent to
--   Amazon Comprehend for sentiment analysis.
createBotVersionResponse_detectSentiment :: Lens' CreateBotVersionResponse (Maybe Bool)

-- | Checksum identifying the version of the bot that was created.
createBotVersionResponse_checksum :: Lens' CreateBotVersionResponse (Maybe Text)

-- | The response's http status code.
createBotVersionResponse_httpStatus :: Lens' CreateBotVersionResponse Int

-- | Substring to match in intent names. An intent will be returned if any
--   part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
getIntents_nameContains :: Lens' GetIntents (Maybe Text)

-- | A pagination token that fetches the next page of intents. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of intents,
--   specify the pagination token in the next request.
getIntents_nextToken :: Lens' GetIntents (Maybe Text)

-- | The maximum number of intents to return in the response. The default
--   is 10.
getIntents_maxResults :: Lens' GetIntents (Maybe Natural)

-- | If the response is truncated, the response includes a pagination token
--   that you can specify in your next request to fetch the next page of
--   intents.
getIntentsResponse_nextToken :: Lens' GetIntentsResponse (Maybe Text)

-- | An array of <tt>Intent</tt> objects. For more information, see PutBot.
getIntentsResponse_intents :: Lens' GetIntentsResponse (Maybe [IntentMetadata])

-- | The response's http status code.
getIntentsResponse_httpStatus :: Lens' GetIntentsResponse Int

-- | Filters the list to contain only migrations in the specified state.
getMigrations_migrationStatusEquals :: Lens' GetMigrations (Maybe MigrationStatus)

-- | A pagination token that fetches the next page of migrations. If the
--   response to this operation is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of
--   migrations, specify the pagination token in the request.
getMigrations_nextToken :: Lens' GetMigrations (Maybe Text)

-- | The maximum number of migrations to return in the response. The
--   default is 10.
getMigrations_maxResults :: Lens' GetMigrations (Maybe Natural)

-- | The field to sort the list of migrations by. You can sort by the
--   Amazon Lex V1 bot name or the date and time that the migration was
--   started.
getMigrations_sortByAttribute :: Lens' GetMigrations (Maybe MigrationSortAttribute)

-- | Filters the list to contain only bots whose name contains the
--   specified string. The string is matched anywhere in bot name.
getMigrations_v1BotNameContains :: Lens' GetMigrations (Maybe Text)

-- | The order so sort the list.
getMigrations_sortByOrder :: Lens' GetMigrations (Maybe SortOrder)

-- | If the response is truncated, it includes a pagination token that you
--   can specify in your next request to fetch the next page of migrations.
getMigrationsResponse_nextToken :: Lens' GetMigrationsResponse (Maybe Text)

-- | An array of summaries for migrations from Amazon Lex V1 to Amazon Lex
--   V2. To see details of the migration, use the <tt>migrationId</tt> from
--   the summary in a call to the operation.
getMigrationsResponse_migrationSummaries :: Lens' GetMigrationsResponse (Maybe [MigrationSummary])

-- | The response's http status code.
getMigrationsResponse_httpStatus :: Lens' GetMigrationsResponse Int

-- | A pagination token for fetching the next page of bot versions. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of versions, specify the
--   pagination token in the next request.
getBotVersions_nextToken :: Lens' GetBotVersions (Maybe Text)

-- | The maximum number of bot versions to return in the response. The
--   default is 10.
getBotVersions_maxResults :: Lens' GetBotVersions (Maybe Natural)

-- | The name of the bot for which versions should be returned.
getBotVersions_name :: Lens' GetBotVersions Text

-- | A pagination token for fetching the next page of bot versions. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of versions, specify the
--   pagination token in the next request.
getBotVersionsResponse_nextToken :: Lens' GetBotVersionsResponse (Maybe Text)

-- | An array of <tt>BotMetadata</tt> objects, one for each numbered
--   version of the bot plus one for the <tt>$LATEST</tt> version.
getBotVersionsResponse_bots :: Lens' GetBotVersionsResponse (Maybe [BotMetadata])

-- | The response's http status code.
getBotVersionsResponse_httpStatus :: Lens' GetBotVersionsResponse Int

-- | The name of the alias to delete. The name is case sensitive.
deleteBotAlias_name :: Lens' DeleteBotAlias Text

-- | The name of the bot that the alias points to.
deleteBotAlias_botName :: Lens' DeleteBotAlias Text

-- | A pagination token for fetching the next page of intent versions. If
--   the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
getIntentVersions_nextToken :: Lens' GetIntentVersions (Maybe Text)

-- | The maximum number of intent versions to return in the response. The
--   default is 10.
getIntentVersions_maxResults :: Lens' GetIntentVersions (Maybe Natural)

-- | The name of the intent for which versions should be returned.
getIntentVersions_name :: Lens' GetIntentVersions Text

-- | A pagination token for fetching the next page of intent versions. If
--   the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
getIntentVersionsResponse_nextToken :: Lens' GetIntentVersionsResponse (Maybe Text)

-- | An array of <tt>IntentMetadata</tt> objects, one for each numbered
--   version of the intent plus one for the <tt>$LATEST</tt> version.
getIntentVersionsResponse_intents :: Lens' GetIntentVersionsResponse (Maybe [IntentMetadata])

-- | The response's http status code.
getIntentVersionsResponse_httpStatus :: Lens' GetIntentVersionsResponse Int

-- | The identifier of the import job information to return.
getImport_importId :: Lens' GetImport Text

-- | A timestamp for the date and time that the import job was created.
getImportResponse_createdDate :: Lens' GetImportResponse (Maybe UTCTime)

-- | The action taken when there was a conflict between an existing
--   resource and a resource in the import file.
getImportResponse_mergeStrategy :: Lens' GetImportResponse (Maybe MergeStrategy)

-- | The identifier for the specific import job.
getImportResponse_importId :: Lens' GetImportResponse (Maybe Text)

-- | The type of resource imported.
getImportResponse_resourceType :: Lens' GetImportResponse (Maybe ResourceType)

-- | The name given to the import job.
getImportResponse_name :: Lens' GetImportResponse (Maybe Text)

-- | A string that describes why an import job failed to complete.
getImportResponse_failureReason :: Lens' GetImportResponse (Maybe [Text])

-- | The status of the import job. If the status is <tt>FAILED</tt>, you
--   can get the reason for the failure from the <tt>failureReason</tt>
--   field.
getImportResponse_importStatus :: Lens' GetImportResponse (Maybe ImportStatus)

-- | The response's http status code.
getImportResponse_httpStatus :: Lens' GetImportResponse Int

-- | Substring to match in built-in intent signatures. An intent will be
--   returned if any part of its signature matches the substring. For
--   example, "xyz" matches both "xyzabc" and "abcxyz." To find the
--   signature for an intent, see <a>Standard Built-in Intents</a> in the
--   <i>Alexa Skills Kit</i>.
getBuiltinIntents_signatureContains :: Lens' GetBuiltinIntents (Maybe Text)

-- | A pagination token that fetches the next page of intents. If this API
--   call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of intents, use the pagination token
--   in the next request.
getBuiltinIntents_nextToken :: Lens' GetBuiltinIntents (Maybe Text)

-- | The maximum number of intents to return in the response. The default
--   is 10.
getBuiltinIntents_maxResults :: Lens' GetBuiltinIntents (Maybe Natural)

-- | A list of locales that the intent supports.
getBuiltinIntents_locale :: Lens' GetBuiltinIntents (Maybe Locale)

-- | A pagination token that fetches the next page of intents. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of intents,
--   specify the pagination token in the next request.
getBuiltinIntentsResponse_nextToken :: Lens' GetBuiltinIntentsResponse (Maybe Text)

-- | An array of <tt>builtinIntentMetadata</tt> objects, one for each
--   intent in the response.
getBuiltinIntentsResponse_intents :: Lens' GetBuiltinIntentsResponse (Maybe [BuiltinIntentMetadata])

-- | The response's http status code.
getBuiltinIntentsResponse_httpStatus :: Lens' GetBuiltinIntentsResponse Int

-- | The name of the bot. The name is case sensitive.
deleteBot_name :: Lens' DeleteBot Text

-- | A list of tags to add to the imported bot. You can only add tags when
--   you import a bot, you can't add tags to an intent or slot type.
startImport_tags :: Lens' StartImport (Maybe [Tag])

-- | A zip archive in binary format. The archive should contain one file, a
--   JSON file containing the resource to import. The resource should match
--   the type specified in the <tt>resourceType</tt> field.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
startImport_payload :: Lens' StartImport ByteString

-- | Specifies the type of resource to export. Each resource also exports
--   any resources that it depends on.
--   
--   <ul>
--   <li>A bot exports dependent intents.</li>
--   <li>An intent exports dependent slot types.</li>
--   </ul>
startImport_resourceType :: Lens' StartImport ResourceType

-- | Specifies the action that the <tt>StartImport</tt> operation should
--   take when there is an existing resource with the same name.
--   
--   <ul>
--   <li>FAIL_ON_CONFLICT - The import operation is stopped on the first
--   conflict between a resource in the import file and an existing
--   resource. The name of the resource causing the conflict is in the
--   <tt>failureReason</tt> field of the response to the <tt>GetImport</tt>
--   operation.OVERWRITE_LATEST - The import operation proceeds even if
--   there is a conflict with an existing resource. The $LASTEST version of
--   the existing resource is overwritten with the data from the import
--   file.</li>
--   </ul>
startImport_mergeStrategy :: Lens' StartImport MergeStrategy

-- | A timestamp for the date and time that the import job was requested.
startImportResponse_createdDate :: Lens' StartImportResponse (Maybe UTCTime)

-- | The action to take when there is a merge conflict.
startImportResponse_mergeStrategy :: Lens' StartImportResponse (Maybe MergeStrategy)

-- | The identifier for the specific import job.
startImportResponse_importId :: Lens' StartImportResponse (Maybe Text)

-- | The type of resource to import.
startImportResponse_resourceType :: Lens' StartImportResponse (Maybe ResourceType)

-- | The name given to the import job.
startImportResponse_name :: Lens' StartImportResponse (Maybe Text)

-- | The status of the import job. If the status is <tt>FAILED</tt>, you
--   can get the reason for the failure using the <tt>GetImport</tt>
--   operation.
startImportResponse_importStatus :: Lens' StartImportResponse (Maybe ImportStatus)

-- | A list of tags added to the imported bot.
startImportResponse_tags :: Lens' StartImportResponse (Maybe [Tag])

-- | The response's http status code.
startImportResponse_httpStatus :: Lens' StartImportResponse Int

-- | Configuration information that extends the parent built-in slot type.
--   The configuration is added to the settings for the parent slot type.
putSlotType_slotTypeConfigurations :: Lens' PutSlotType (Maybe [SlotTypeConfiguration])

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take. Each value can have a list of
--   <tt>synonyms</tt>, which are additional values that help train the
--   machine learning model about the values that it resolves for a slot.
--   
--   A regular expression slot type doesn't require enumeration values. All
--   other slot types require a list of enumeration values.
--   
--   When Amazon Lex resolves a slot value, it generates a resolution list
--   that contains up to five possible values for the slot. If you are
--   using a Lambda function, this resolution list is passed to the
--   function. If you are not using a Lambda function you can choose to
--   return the value that the user entered or the first value in the
--   resolution list as the slot value. The <tt>valueSelectionStrategy</tt>
--   field indicates the option to use.
putSlotType_enumerationValues :: Lens' PutSlotType (Maybe [EnumerationValue])

-- | Determines the slot resolution strategy that Amazon Lex uses to return
--   slot type values. The field can be set to one of the following values:
--   
--   <ul>
--   <li><tt>ORIGINAL_VALUE</tt> - Returns the value entered by the user,
--   if the user value is similar to the slot value.</li>
--   <li><tt>TOP_RESOLUTION</tt> - If there is a resolution list for the
--   slot, return the first value in the resolution list as the slot type
--   value. If there is no resolution list, null is returned.</li>
--   </ul>
--   
--   If you don't specify the <tt>valueSelectionStrategy</tt>, the default
--   is <tt>ORIGINAL_VALUE</tt>.
putSlotType_valueSelectionStrategy :: Lens' PutSlotType (Maybe SlotValueSelectionStrategy)

-- | The built-in slot type used as the parent of the slot type. When you
--   define a parent slot type, the new slot type has all of the same
--   configuration as the parent.
--   
--   Only <tt>AMAZON.AlphaNumeric</tt> is supported.
putSlotType_parentSlotTypeSignature :: Lens' PutSlotType (Maybe Text)

-- | A description of the slot type.
putSlotType_description :: Lens' PutSlotType (Maybe Text)

-- | When set to <tt>true</tt> a new numbered version of the slot type is
--   created. This is the same as calling the
--   <tt>CreateSlotTypeVersion</tt> operation. If you do not specify
--   <tt>createVersion</tt>, the default is <tt>false</tt>.
putSlotType_createVersion :: Lens' PutSlotType (Maybe Bool)

-- | Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new slot type, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a slot type, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
putSlotType_checksum :: Lens' PutSlotType (Maybe Text)

-- | The name of the slot type. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in slot type name, or a built-in slot
--   type name with "AMAZON." removed. For example, because there is a
--   built-in slot type called <tt>AMAZON.DATE</tt>, you can't create a
--   custom slot type called <tt>DATE</tt>.
--   
--   For a list of built-in slot types, see <a>Slot Type Reference</a> in
--   the <i>Alexa Skills Kit</i>.
putSlotType_name :: Lens' PutSlotType Text

-- | Configuration information that extends the parent built-in slot type.
putSlotTypeResponse_slotTypeConfigurations :: Lens' PutSlotTypeResponse (Maybe [SlotTypeConfiguration])

-- | The date that the slot type was created.
putSlotTypeResponse_createdDate :: Lens' PutSlotTypeResponse (Maybe UTCTime)

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
putSlotTypeResponse_enumerationValues :: Lens' PutSlotTypeResponse (Maybe [EnumerationValue])

-- | The date that the slot type was updated. When you create a slot type,
--   the creation date and last update date are the same.
putSlotTypeResponse_lastUpdatedDate :: Lens' PutSlotTypeResponse (Maybe UTCTime)

-- | The slot resolution strategy that Amazon Lex uses to determine the
--   value of the slot. For more information, see PutSlotType.
putSlotTypeResponse_valueSelectionStrategy :: Lens' PutSlotTypeResponse (Maybe SlotValueSelectionStrategy)

-- | The version of the slot type. For a new slot type, the version is
--   always <tt>$LATEST</tt>.
putSlotTypeResponse_version :: Lens' PutSlotTypeResponse (Maybe Text)

-- | The name of the slot type.
putSlotTypeResponse_name :: Lens' PutSlotTypeResponse (Maybe Text)

-- | The built-in slot type used as the parent of the slot type.
putSlotTypeResponse_parentSlotTypeSignature :: Lens' PutSlotTypeResponse (Maybe Text)

-- | A description of the slot type.
putSlotTypeResponse_description :: Lens' PutSlotTypeResponse (Maybe Text)

-- | <tt>True</tt> if a new version of the slot type was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
putSlotTypeResponse_createVersion :: Lens' PutSlotTypeResponse (Maybe Bool)

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
putSlotTypeResponse_checksum :: Lens' PutSlotTypeResponse (Maybe Text)

-- | The response's http status code.
putSlotTypeResponse_httpStatus :: Lens' PutSlotTypeResponse Int

-- | The name of the intent. The name is case sensitive.
deleteIntent_name :: Lens' DeleteIntent Text

-- | Checksum for the <tt>$LATEST</tt> version of the slot type that you
--   want to publish. If you specify a checksum and the <tt>$LATEST</tt>
--   version of the slot type has a different checksum, Amazon Lex returns
--   a <tt>PreconditionFailedException</tt> exception and doesn't publish
--   the new version. If you don't specify a checksum, Amazon Lex publishes
--   the <tt>$LATEST</tt> version.
createSlotTypeVersion_checksum :: Lens' CreateSlotTypeVersion (Maybe Text)

-- | The name of the slot type that you want to create a new version for.
--   The name is case sensitive.
createSlotTypeVersion_name :: Lens' CreateSlotTypeVersion Text

-- | Configuration information that extends the parent built-in slot type.
createSlotTypeVersionResponse_slotTypeConfigurations :: Lens' CreateSlotTypeVersionResponse (Maybe [SlotTypeConfiguration])

-- | The date that the slot type was created.
createSlotTypeVersionResponse_createdDate :: Lens' CreateSlotTypeVersionResponse (Maybe UTCTime)

-- | A list of <tt>EnumerationValue</tt> objects that defines the values
--   that the slot type can take.
createSlotTypeVersionResponse_enumerationValues :: Lens' CreateSlotTypeVersionResponse (Maybe [EnumerationValue])

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last update date are the same.
createSlotTypeVersionResponse_lastUpdatedDate :: Lens' CreateSlotTypeVersionResponse (Maybe UTCTime)

-- | The strategy that Amazon Lex uses to determine the value of the slot.
--   For more information, see PutSlotType.
createSlotTypeVersionResponse_valueSelectionStrategy :: Lens' CreateSlotTypeVersionResponse (Maybe SlotValueSelectionStrategy)

-- | The version assigned to the new slot type version.
createSlotTypeVersionResponse_version :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | The name of the slot type.
createSlotTypeVersionResponse_name :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | The built-in slot type used a the parent of the slot type.
createSlotTypeVersionResponse_parentSlotTypeSignature :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | A description of the slot type.
createSlotTypeVersionResponse_description :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | Checksum of the <tt>$LATEST</tt> version of the slot type.
createSlotTypeVersionResponse_checksum :: Lens' CreateSlotTypeVersionResponse (Maybe Text)

-- | The response's http status code.
createSlotTypeVersionResponse_httpStatus :: Lens' CreateSlotTypeVersionResponse Int

-- | The name of the association. The name is case sensitive.
deleteBotChannelAssociation_name :: Lens' DeleteBotChannelAssociation Text

-- | The name of the Amazon Lex bot.
deleteBotChannelAssociation_botName :: Lens' DeleteBotChannelAssociation Text

-- | An alias that points to the specific version of the Amazon Lex bot to
--   which this association is being made.
deleteBotChannelAssociation_botAlias :: Lens' DeleteBotChannelAssociation Text

-- | The Amazon Resource Name (ARN) of the resource to get a list of tags
--   for.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags associated with a resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The unique identifier of the migration to view. The
--   <tt>migrationID</tt> is returned by the operation.
getMigration_migrationId :: Lens' GetMigration Text

-- | The version of the Amazon Lex V1 bot migrated to Amazon Lex V2.
getMigrationResponse_v1BotVersion :: Lens' GetMigrationResponse (Maybe Text)

-- | The unique identifier of the migration. This is the same as the
--   identifier used when calling the <tt>GetMigration</tt> operation.
getMigrationResponse_migrationId :: Lens' GetMigrationResponse (Maybe Text)

-- | The locale of the Amazon Lex V1 bot migrated to Amazon Lex V2.
getMigrationResponse_v1BotLocale :: Lens' GetMigrationResponse (Maybe Locale)

-- | The date and time that the migration started.
getMigrationResponse_migrationTimestamp :: Lens' GetMigrationResponse (Maybe UTCTime)

-- | The strategy used to conduct the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
getMigrationResponse_migrationStrategy :: Lens' GetMigrationResponse (Maybe MigrationStrategy)

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
getMigrationResponse_v2BotRole :: Lens' GetMigrationResponse (Maybe Text)

-- | The name of the Amazon Lex V1 bot migrated to Amazon Lex V2.
getMigrationResponse_v1BotName :: Lens' GetMigrationResponse (Maybe Text)

-- | The unique identifier of the Amazon Lex V2 bot that the Amazon Lex V1
--   is being migrated to.
getMigrationResponse_v2BotId :: Lens' GetMigrationResponse (Maybe Text)

-- | Indicates the status of the migration. When the status is
--   <tt>COMPLETE</tt> the migration is finished and the bot is available
--   in Amazon Lex V2. There may be alerts and warnings that need to be
--   resolved to complete the migration.
getMigrationResponse_migrationStatus :: Lens' GetMigrationResponse (Maybe MigrationStatus)

-- | A list of alerts and warnings that indicate issues with the migration
--   for the Amazon Lex V1 bot to Amazon Lex V2. You receive a warning when
--   an Amazon Lex V1 feature has a different implementation if Amazon Lex
--   V2.
--   
--   For more information, see <a>Migrating a bot</a> in the <i>Amazon Lex
--   V2 developer guide</i>.
getMigrationResponse_alerts :: Lens' GetMigrationResponse (Maybe [MigrationAlert])

-- | The response's http status code.
getMigrationResponse_httpStatus :: Lens' GetMigrationResponse Int

-- | The name of the intent. The name is case sensitive.
getIntent_name :: Lens' GetIntent Text

-- | The version of the intent.
getIntent_version :: Lens' GetIntent Text

-- | Configuration information, if any, to connect to an Amazon Kendra
--   index with the <tt>AMAZON.KendraSearchIntent</tt> intent.
getIntentResponse_kendraConfiguration :: Lens' GetIntentResponse (Maybe KendraConfiguration)

-- | The date that the intent was created.
getIntentResponse_createdDate :: Lens' GetIntentResponse (Maybe UTCTime)

-- | A unique identifier for a built-in intent.
getIntentResponse_parentIntentSignature :: Lens' GetIntentResponse (Maybe Text)

-- | If defined in the bot, Amazon Amazon Lex invokes this Lambda function
--   for each user input. For more information, see PutIntent.
getIntentResponse_dialogCodeHook :: Lens' GetIntentResponse (Maybe CodeHook)

-- | After the Lambda function specified in the
--   <tt>fulfillmentActivity</tt> element fulfills the intent, Amazon Lex
--   conveys this statement to the user.
getIntentResponse_conclusionStatement :: Lens' GetIntentResponse (Maybe Statement)

-- | The date that the intent was updated. When you create a resource, the
--   creation date and the last updated date are the same.
getIntentResponse_lastUpdatedDate :: Lens' GetIntentResponse (Maybe UTCTime)

-- | If the user answers "no" to the question defined in
--   <tt>confirmationPrompt</tt>, Amazon Lex responds with this statement
--   to acknowledge that the intent was canceled.
getIntentResponse_rejectionStatement :: Lens' GetIntentResponse (Maybe Statement)

-- | An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
getIntentResponse_inputContexts :: Lens' GetIntentResponse (Maybe [InputContext])

-- | The version of the intent.
getIntentResponse_version :: Lens' GetIntentResponse (Maybe Text)

-- | An array of intent slots configured for the intent.
getIntentResponse_slots :: Lens' GetIntentResponse (Maybe [Slot])

-- | Describes how the intent is fulfilled. For more information, see
--   PutIntent.
getIntentResponse_fulfillmentActivity :: Lens' GetIntentResponse (Maybe FulfillmentActivity)

-- | The name of the intent.
getIntentResponse_name :: Lens' GetIntentResponse (Maybe Text)

-- | An array of sample utterances configured for the intent.
getIntentResponse_sampleUtterances :: Lens' GetIntentResponse (Maybe [Text])

-- | A description of the intent.
getIntentResponse_description :: Lens' GetIntentResponse (Maybe Text)

-- | If defined in the bot, Amazon Lex uses prompt to confirm the intent
--   before fulfilling the user's request. For more information, see
--   PutIntent.
getIntentResponse_confirmationPrompt :: Lens' GetIntentResponse (Maybe Prompt)

-- | An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
getIntentResponse_outputContexts :: Lens' GetIntentResponse (Maybe [OutputContext])

-- | If defined in the bot, Amazon Lex uses this prompt to solicit
--   additional user activity after the intent is fulfilled. For more
--   information, see PutIntent.
getIntentResponse_followUpPrompt :: Lens' GetIntentResponse (Maybe FollowUpPrompt)

-- | Checksum of the intent.
getIntentResponse_checksum :: Lens' GetIntentResponse (Maybe Text)

-- | The response's http status code.
getIntentResponse_httpStatus :: Lens' GetIntentResponse Int

-- | The name of the bot.
deleteBotVersion_name :: Lens' DeleteBotVersion Text

-- | The version of the bot to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the bot. To delete the <tt>$LATEST</tt>
--   version, use the DeleteBot operation.
deleteBotVersion_version :: Lens' DeleteBotVersion Text

-- | The date that the bot alias was created.
botAliasMetadata_createdDate :: Lens' BotAliasMetadata (Maybe UTCTime)

-- | The name of the bot to which the alias points.
botAliasMetadata_botName :: Lens' BotAliasMetadata (Maybe Text)

-- | The date that the bot alias was updated. When you create a resource,
--   the creation date and last updated date are the same.
botAliasMetadata_lastUpdatedDate :: Lens' BotAliasMetadata (Maybe UTCTime)

-- | The version of the Amazon Lex bot to which the alias points.
botAliasMetadata_botVersion :: Lens' BotAliasMetadata (Maybe Text)

-- | The name of the bot alias.
botAliasMetadata_name :: Lens' BotAliasMetadata (Maybe Text)

-- | A description of the bot alias.
botAliasMetadata_description :: Lens' BotAliasMetadata (Maybe Text)

-- | Checksum of the bot alias.
botAliasMetadata_checksum :: Lens' BotAliasMetadata (Maybe Text)

-- | Settings that determine how Amazon Lex uses conversation logs for the
--   alias.
botAliasMetadata_conversationLogs :: Lens' BotAliasMetadata (Maybe ConversationLogsResponse)

-- | An alias pointing to the specific version of the Amazon Lex bot to
--   which this association is being made.
botChannelAssociation_botAlias :: Lens' BotChannelAssociation (Maybe Text)

-- | The date that the association between the Amazon Lex bot and the
--   channel was created.
botChannelAssociation_createdDate :: Lens' BotChannelAssociation (Maybe UTCTime)

-- | The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
botChannelAssociation_status :: Lens' BotChannelAssociation (Maybe ChannelStatus)

-- | Provides information necessary to communicate with the messaging
--   platform.
botChannelAssociation_botConfiguration :: Lens' BotChannelAssociation (Maybe (HashMap Text Text))

-- | The name of the Amazon Lex bot to which this association is being
--   made.
--   
--   Currently, Amazon Lex supports associations with Facebook and Slack,
--   and Twilio.
botChannelAssociation_botName :: Lens' BotChannelAssociation (Maybe Text)

-- | The name of the association between the bot and the channel.
botChannelAssociation_name :: Lens' BotChannelAssociation (Maybe Text)

-- | If <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
botChannelAssociation_failureReason :: Lens' BotChannelAssociation (Maybe Text)

-- | A text description of the association you are creating.
botChannelAssociation_description :: Lens' BotChannelAssociation (Maybe Text)

-- | Specifies the type of association by indicating the type of channel
--   being established between the Amazon Lex bot and the external
--   messaging platform.
botChannelAssociation_type :: Lens' BotChannelAssociation (Maybe ChannelType)

-- | The date that the bot was created.
botMetadata_createdDate :: Lens' BotMetadata (Maybe UTCTime)

-- | The status of the bot.
botMetadata_status :: Lens' BotMetadata (Maybe LexStatus)

-- | The date that the bot was updated. When you create a bot, the creation
--   date and last updated date are the same.
botMetadata_lastUpdatedDate :: Lens' BotMetadata (Maybe UTCTime)

-- | The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
botMetadata_version :: Lens' BotMetadata (Maybe Text)

-- | The name of the bot.
botMetadata_name :: Lens' BotMetadata (Maybe Text)

-- | A description of the bot.
botMetadata_description :: Lens' BotMetadata (Maybe Text)

-- | A unique identifier for the built-in intent. To find the signature for
--   an intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
builtinIntentMetadata_signature :: Lens' BuiltinIntentMetadata (Maybe Text)

-- | A list of identifiers for the locales that the intent supports.
builtinIntentMetadata_supportedLocales :: Lens' BuiltinIntentMetadata (Maybe [Locale])

-- | A list of the slots defined for the intent.
builtinIntentSlot_name :: Lens' BuiltinIntentSlot (Maybe Text)

-- | A unique identifier for the built-in slot type. To find the signature
--   for a slot type, see <a>Slot Type Reference</a> in the <i>Alexa Skills
--   Kit</i>.
builtinSlotTypeMetadata_signature :: Lens' BuiltinSlotTypeMetadata (Maybe Text)

-- | A list of target locales for the slot.
builtinSlotTypeMetadata_supportedLocales :: Lens' BuiltinSlotTypeMetadata (Maybe [Locale])

-- | The Amazon Resource Name (ARN) of the Lambda function.
codeHook_uri :: Lens' CodeHook Text

-- | The version of the request-response that you want Amazon Lex to use to
--   invoke your Lambda function. For more information, see using-lambda.
codeHook_messageVersion :: Lens' CodeHook Text

-- | The settings for your conversation logs. You can log the conversation
--   text, conversation audio, or both.
conversationLogsRequest_logSettings :: Lens' ConversationLogsRequest [LogSettingsRequest]

-- | The Amazon Resource Name (ARN) of an IAM role with permission to write
--   to your CloudWatch Logs for text logs and your S3 bucket for audio
--   logs. If audio encryption is enabled, this role also provides access
--   permission for the AWS KMS key used for encrypting audio logs. For
--   more information, see <a>Creating an IAM Role and Policy for
--   Conversation Logs</a>.
conversationLogsRequest_iamRoleArn :: Lens' ConversationLogsRequest Text

-- | The Amazon Resource Name (ARN) of the IAM role used to write your logs
--   to CloudWatch Logs or an S3 bucket.
conversationLogsResponse_iamRoleArn :: Lens' ConversationLogsResponse (Maybe Text)

-- | The settings for your conversation logs. You can log text, audio, or
--   both.
conversationLogsResponse_logSettings :: Lens' ConversationLogsResponse (Maybe [LogSettingsResponse])

-- | Additional values related to the slot type value.
enumerationValue_synonyms :: Lens' EnumerationValue (Maybe [Text])

-- | The value of the slot type.
enumerationValue_value :: Lens' EnumerationValue Text

-- | Prompts for information from the user.
followUpPrompt_prompt :: Lens' FollowUpPrompt Prompt

-- | If the user answers "no" to the question defined in the
--   <tt>prompt</tt> field, Amazon Lex responds with this statement to
--   acknowledge that the intent was canceled.
followUpPrompt_rejectionStatement :: Lens' FollowUpPrompt Statement

-- | A description of the Lambda function that is run to fulfill the
--   intent.
fulfillmentActivity_codeHook :: Lens' FulfillmentActivity (Maybe CodeHook)

-- | How the intent should be fulfilled, either by running a Lambda
--   function or by returning the slot data to the client application.
fulfillmentActivity_type :: Lens' FulfillmentActivity FulfillmentActivityType

-- | The name of the context.
inputContext_name :: Lens' InputContext Text

-- | The name of the intent.
intent_intentName :: Lens' Intent Text

-- | The version of the intent.
intent_intentVersion :: Lens' Intent Text

-- | The date that the intent was created.
intentMetadata_createdDate :: Lens' IntentMetadata (Maybe UTCTime)

-- | The date that the intent was updated. When you create an intent, the
--   creation date and last updated date are the same.
intentMetadata_lastUpdatedDate :: Lens' IntentMetadata (Maybe UTCTime)

-- | The version of the intent.
intentMetadata_version :: Lens' IntentMetadata (Maybe Text)

-- | The name of the intent.
intentMetadata_name :: Lens' IntentMetadata (Maybe Text)

-- | A description of the intent.
intentMetadata_description :: Lens' IntentMetadata (Maybe Text)

-- | A query filter that Amazon Lex sends to Amazon Kendra to filter the
--   response from the query. The filter is in the format defined by Amazon
--   Kendra. For more information, see <a>Filtering queries</a>.
--   
--   You can override this filter string with a new filter string at
--   runtime.
kendraConfiguration_queryFilterString :: Lens' KendraConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Amazon Kendra index that you
--   want the AMAZON.KendraSearchIntent intent to search. The index must be
--   in the same account and Region as the Amazon Lex bot. If the Amazon
--   Kendra index does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
kendraConfiguration_kendraIndex :: Lens' KendraConfiguration Text

-- | The Amazon Resource Name (ARN) of an IAM role that has permission to
--   search the Amazon Kendra index. The role must be in the same account
--   and Region as the Amazon Lex bot. If the role does not exist, you get
--   an exception when you call the <tt>PutIntent</tt> operation.
kendraConfiguration_role :: Lens' KendraConfiguration Text

-- | The Amazon Resource Name (ARN) of the AWS KMS customer managed key for
--   encrypting audio logs delivered to an S3 bucket. The key does not
--   apply to CloudWatch Logs and is optional for S3 buckets.
logSettingsRequest_kmsKeyArn :: Lens' LogSettingsRequest (Maybe Text)

-- | The type of logging to enable. Text logs are delivered to a CloudWatch
--   Logs log group. Audio logs are delivered to an S3 bucket.
logSettingsRequest_logType :: Lens' LogSettingsRequest LogType

-- | Where the logs will be delivered. Text logs are delivered to a
--   CloudWatch Logs log group. Audio logs are delivered to an S3 bucket.
logSettingsRequest_destination :: Lens' LogSettingsRequest Destination

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs should be delivered.
logSettingsRequest_resourceArn :: Lens' LogSettingsRequest Text

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group or S3
--   bucket where the logs are delivered.
logSettingsResponse_resourceArn :: Lens' LogSettingsResponse (Maybe Text)

-- | The type of logging that is enabled.
logSettingsResponse_logType :: Lens' LogSettingsResponse (Maybe LogType)

-- | The Amazon Resource Name (ARN) of the key used to encrypt audio logs
--   in an S3 bucket.
logSettingsResponse_kmsKeyArn :: Lens' LogSettingsResponse (Maybe Text)

-- | The destination where logs are delivered.
logSettingsResponse_destination :: Lens' LogSettingsResponse (Maybe Destination)

-- | The resource prefix is the first part of the S3 object key within the
--   S3 bucket that you specified to contain audio logs. For CloudWatch
--   Logs it is the prefix of the log stream name within the log group that
--   you specified.
logSettingsResponse_resourcePrefix :: Lens' LogSettingsResponse (Maybe Text)

-- | Identifies the message group that the message belongs to. When a group
--   is assigned to a message, Amazon Lex returns one message from each
--   group in the response.
message_groupNumber :: Lens' Message (Maybe Natural)

-- | The content type of the message string.
message_contentType :: Lens' Message ContentType

-- | The text of the message.
message_content :: Lens' Message Text

-- | A message that describes why the alert was issued.
migrationAlert_message :: Lens' MigrationAlert (Maybe Text)

-- | Additional details about the alert.
migrationAlert_details :: Lens' MigrationAlert (Maybe [Text])

-- | A link to the Amazon Lex documentation that describes how to resolve
--   the alert.
migrationAlert_referenceURLs :: Lens' MigrationAlert (Maybe [Text])

-- | The type of alert. There are two kinds of alerts:
--   
--   <ul>
--   <li><tt>ERROR</tt> - There was an issue with the migration that can't
--   be resolved. The migration stops.</li>
--   <li><tt>WARN</tt> - There was an issue with the migration that
--   requires manual changes to the new Amazon Lex V2 bot. The migration
--   continues.</li>
--   </ul>
migrationAlert_type :: Lens' MigrationAlert (Maybe MigrationAlertType)

-- | The version of the Amazon Lex V1 bot that is the source of the
--   migration.
migrationSummary_v1BotVersion :: Lens' MigrationSummary (Maybe Text)

-- | The unique identifier that Amazon Lex assigned to the migration.
migrationSummary_migrationId :: Lens' MigrationSummary (Maybe Text)

-- | The locale of the Amazon Lex V1 bot that is the source of the
--   migration.
migrationSummary_v1BotLocale :: Lens' MigrationSummary (Maybe Locale)

-- | The date and time that the migration started.
migrationSummary_migrationTimestamp :: Lens' MigrationSummary (Maybe UTCTime)

-- | The strategy used to conduct the migration.
migrationSummary_migrationStrategy :: Lens' MigrationSummary (Maybe MigrationStrategy)

-- | The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
migrationSummary_v2BotRole :: Lens' MigrationSummary (Maybe Text)

-- | The name of the Amazon Lex V1 bot that is the source of the migration.
migrationSummary_v1BotName :: Lens' MigrationSummary (Maybe Text)

-- | The unique identifier of the Amazon Lex V2 that is the destination of
--   the migration.
migrationSummary_v2BotId :: Lens' MigrationSummary (Maybe Text)

-- | The status of the operation. When the status is <tt>COMPLETE</tt> the
--   bot is available in Amazon Lex V2. There may be alerts and warnings
--   that need to be resolved to complete the migration.
migrationSummary_migrationStatus :: Lens' MigrationSummary (Maybe MigrationStatus)

-- | The name of the context.
outputContext_name :: Lens' OutputContext Text

-- | The number of seconds that the context should be active after it is
--   first sent in a <tt>PostContent</tt> or <tt>PostText</tt> response.
--   You can set the value between 5 and 86,400 seconds (24 hours).
outputContext_timeToLiveInSeconds :: Lens' OutputContext Natural

-- | The number of conversation turns that the context should be active. A
--   conversation turn is one <tt>PostContent</tt> or <tt>PostText</tt>
--   request and the corresponding response from Amazon Lex.
outputContext_turnsToLive :: Lens' OutputContext Natural

-- | A response card. Amazon Lex uses this prompt at runtime, in the
--   <tt>PostText</tt> API response. It substitutes session attributes and
--   slot values for placeholders in the response card. For more
--   information, see ex-resp-card.
prompt_responseCard :: Lens' Prompt (Maybe Text)

-- | An array of objects, each of which provides a message string and its
--   type. You can specify the message string in plain text or in Speech
--   Synthesis Markup Language (SSML).
prompt_messages :: Lens' Prompt (NonEmpty Message)

-- | The number of times to prompt the user for information.
prompt_maxAttempts :: Lens' Prompt Natural

-- | A set of possible responses for the slot type used by text-based
--   clients. A user chooses an option from the response card, instead of
--   using text to reply.
slot_responseCard :: Lens' Slot (Maybe Text)

-- | The type of the slot, either a custom slot type that you defined or
--   one of the built-in slot types.
slot_slotType :: Lens' Slot (Maybe Text)

-- | The prompt that Amazon Lex uses to elicit the slot value from the
--   user.
slot_valueElicitationPrompt :: Lens' Slot (Maybe Prompt)

-- | The version of the slot type.
slot_slotTypeVersion :: Lens' Slot (Maybe Text)

-- | Directs Amazon Lex the order in which to elicit this slot value from
--   the user. For example, if the intent has two slots with priorities 1
--   and 2, AWS Amazon Lex first elicits a value for the slot with priority
--   1.
--   
--   If multiple slots share the same priority, the order in which Amazon
--   Lex elicits values is arbitrary.
slot_priority :: Lens' Slot (Maybe Natural)

-- | If you know a specific pattern with which users might respond to an
--   Amazon Lex request for a slot value, you can provide those utterances
--   to improve accuracy. This is optional. In most cases, Amazon Lex is
--   capable of understanding user utterances.
slot_sampleUtterances :: Lens' Slot (Maybe [Text])

-- | A description of the slot.
slot_description :: Lens' Slot (Maybe Text)

-- | A list of default values for the slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot. You can specify
--   default values from context variables, session attributes, and defined
--   values.
slot_defaultValueSpec :: Lens' Slot (Maybe SlotDefaultValueSpec)

-- | Determines whether a slot is obfuscated in conversation logs and
--   stored utterances. When you obfuscate a slot, the value is replaced by
--   the slot name in curly braces ({}). For example, if the slot name is
--   "full_name", obfuscated values are replaced with "{full_name}". For
--   more information, see <a>Slot Obfuscation</a> .
slot_obfuscationSetting :: Lens' Slot (Maybe ObfuscationSetting)

-- | The name of the slot.
slot_name :: Lens' Slot Text

-- | Specifies whether the slot is required or optional.
slot_slotConstraint :: Lens' Slot SlotConstraint

-- | The default value for the slot. You can specify one of the following:
--   
--   <ul>
--   <li><tt>#context-name.slot-name</tt> - The slot value "slot-name" in
--   the context "context-name."</li>
--   <li><tt>{attribute}</tt> - The slot value of the session attribute
--   "attribute."</li>
--   <li><tt>'value'</tt> - The discrete value "value."</li>
--   </ul>
slotDefaultValue_defaultValue :: Lens' SlotDefaultValue Text

-- | The default values for a slot. You can specify more than one default.
--   For example, you can specify a default value to use from a matching
--   context variable, a session attribute, or a fixed value.
--   
--   The default value chosen is selected based on the order that you
--   specify them in the list. For example, if you specify a context
--   variable and a fixed value in that order, Amazon Lex uses the context
--   variable if it is available, else it uses the fixed value.
slotDefaultValueSpec_defaultValueList :: Lens' SlotDefaultValueSpec [SlotDefaultValue]

-- | A regular expression used to validate the value of a slot.
slotTypeConfiguration_regexConfiguration :: Lens' SlotTypeConfiguration (Maybe SlotTypeRegexConfiguration)

-- | The date that the slot type was created.
slotTypeMetadata_createdDate :: Lens' SlotTypeMetadata (Maybe UTCTime)

-- | The date that the slot type was updated. When you create a resource,
--   the creation date and last updated date are the same.
slotTypeMetadata_lastUpdatedDate :: Lens' SlotTypeMetadata (Maybe UTCTime)

-- | The version of the slot type.
slotTypeMetadata_version :: Lens' SlotTypeMetadata (Maybe Text)

-- | The name of the slot type.
slotTypeMetadata_name :: Lens' SlotTypeMetadata (Maybe Text)

-- | A description of the slot type.
slotTypeMetadata_description :: Lens' SlotTypeMetadata (Maybe Text)

-- | A regular expression used to validate the value of a slot.
--   
--   Use a standard regular expression. Amazon Lex supports the following
--   characters in the regular expression:
--   
--   <ul>
--   <li>A-Z, a-z</li>
--   <li>0-9</li>
--   <li>Unicode characters ("\ u&lt;Unicode&gt;")</li>
--   </ul>
--   
--   Represent Unicode characters with four digits, for example "\u0041" or
--   "\u005A".
--   
--   The following regular expression operators are not supported:
--   
--   <ul>
--   <li>Infinite repeaters: *, +, or {x,} with no upper bound.</li>
--   <li>Wild card (.)</li>
--   </ul>
slotTypeRegexConfiguration_pattern :: Lens' SlotTypeRegexConfiguration Text

-- | At runtime, if the client is using the <a>PostText</a> API, Amazon Lex
--   includes the response card in the response. It substitutes all of the
--   session attributes and slot values for placeholders in the response
--   card.
statement_responseCard :: Lens' Statement (Maybe Text)

-- | A collection of message objects.
statement_messages :: Lens' Statement (NonEmpty Message)

-- | The key for the tag. Keys are not case-sensitive and must be unique.
tag_key :: Lens' Tag Text

-- | The value associated with a key. The value may be an empty string but
--   it can't be null.
tag_value :: Lens' Tag Text

-- | The text that was entered by the user or the text representation of an
--   audio clip.
utteranceData_utteranceString :: Lens' UtteranceData (Maybe Text)

-- | The total number of individuals that used the utterance.
utteranceData_distinctUsers :: Lens' UtteranceData (Maybe Int)

-- | The number of times that the utterance was processed.
utteranceData_count :: Lens' UtteranceData (Maybe Int)

-- | The date that the utterance was last recorded.
utteranceData_lastUtteredDate :: Lens' UtteranceData (Maybe UTCTime)

-- | The date that the utterance was first recorded.
utteranceData_firstUtteredDate :: Lens' UtteranceData (Maybe UTCTime)

-- | The version of the bot that processed the list.
utteranceList_botVersion :: Lens' UtteranceList (Maybe Text)

-- | One or more UtteranceData objects that contain information about the
--   utterances that have been made to a bot. The maximum number of object
--   is 100.
utteranceList_utterances :: Lens' UtteranceList (Maybe [UtteranceData])


module Network.AWS.LexModels.Waiters


-- | Derived from API version <tt>2017-04-19</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Lex Build-Time Actions
--   
--   Amazon Lex is an AWS service for building conversational voice and
--   text interfaces. Use these actions to create, update, and delete
--   conversational bots for new and existing client applications.
module Network.AWS.LexModels

-- | API version <tt>2017-04-19</tt> of the Amazon Lex Model Building
--   Service SDK configuration.
defaultService :: Service

-- | The resource specified in the request was not found. Check the
--   resource and try again.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is not well formed. For example, a value is invalid or a
--   required field is missing. Check the field values, and try again.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your IAM user or role does not have permission to call the Amazon Lex
--   V2 APIs required to migrate your bot.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a conflict processing the request. Try your request again.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request exceeded a limit. Try your request again.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you are attempting to delete is referred to by
--   another resource. Use this information to remove references to the
--   resource that you are trying to delete.
--   
--   The body of the exception contains a JSON object that describes the
--   resource.
--   
--   <pre>
--   { "resourceType": BOT | BOTALIAS | BOTCHANNEL | INTENT,
--   </pre>
--   
--   <pre>
--   "resourceReference": {
--   </pre>
--   
--   <pre>
--   "name": string, "version": string } }
--   </pre>
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal Amazon Lex error occurred. Try your request again.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The checksum of the resource that you are trying to change does not
--   match the checksum in the request. Check the resource's checksum and
--   try again.
_PreconditionFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDeleteSlotTypeVersion</a> smart constructor.
data DeleteSlotTypeVersion
DeleteSlotTypeVersion' :: Text -> Text -> DeleteSlotTypeVersion

-- | Create a value of <a>DeleteSlotTypeVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteSlotTypeVersion'</a>,
--   <a>deleteSlotTypeVersion_name</a> - The name of the slot type.
--   
--   <a>$sel:version:DeleteSlotTypeVersion'</a>,
--   <a>deleteSlotTypeVersion_version</a> - The version of the slot type to
--   delete. You cannot delete the <tt>$LATEST</tt> version of the slot
--   type. To delete the <tt>$LATEST</tt> version, use the DeleteSlotType
--   operation.
newDeleteSlotTypeVersion :: Text -> Text -> DeleteSlotTypeVersion

-- | <i>See:</i> <a>newDeleteSlotTypeVersionResponse</a> smart constructor.
data DeleteSlotTypeVersionResponse
DeleteSlotTypeVersionResponse' :: DeleteSlotTypeVersionResponse

-- | Create a value of <a>DeleteSlotTypeVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSlotTypeVersionResponse :: DeleteSlotTypeVersionResponse

-- | <i>See:</i> <a>newStartMigration</a> smart constructor.
data StartMigration
StartMigration' :: Text -> Text -> Text -> Text -> MigrationStrategy -> StartMigration

-- | Create a value of <a>StartMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotName:StartMigration'</a>, <a>startMigration_v1BotName</a>
--   - The name of the Amazon Lex V1 bot that you are migrating to Amazon
--   Lex V2.
--   
--   <a>$sel:v1BotVersion:StartMigration'</a>,
--   <a>startMigration_v1BotVersion</a> - The version of the bot to migrate
--   to Amazon Lex V2. You can migrate the <tt>$LATEST</tt> version as well
--   as any numbered version.
--   
--   <a>$sel:v2BotName:StartMigration'</a>, <a>startMigration_v2BotName</a>
--   - The name of the Amazon Lex V2 bot that you are migrating the Amazon
--   Lex V1 bot to.
--   
--   <ul>
--   <li>If the Amazon Lex V2 bot doesn't exist, you must use the
--   <tt>CREATE_NEW</tt> migration strategy.</li>
--   <li>If the Amazon Lex V2 bot exists, you must use the
--   <tt>UPDATE_EXISTING</tt> migration strategy to change the contents of
--   the Amazon Lex V2 bot.</li>
--   </ul>
--   
--   <a>$sel:v2BotRole:StartMigration'</a>, <a>startMigration_v2BotRole</a>
--   - The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.
--   
--   <a>$sel:migrationStrategy:StartMigration'</a>,
--   <a>startMigration_migrationStrategy</a> - The strategy used to conduct
--   the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
newStartMigration :: Text -> Text -> Text -> Text -> MigrationStrategy -> StartMigration

-- | <i>See:</i> <a>newStartMigrationResponse</a> smart constructor.
data StartMigrationResponse
StartMigrationResponse' :: Maybe Text -> Maybe Text -> Maybe Locale -> Maybe POSIX -> Maybe MigrationStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartMigrationResponse

-- | Create a value of <a>StartMigrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotVersion:StartMigration'</a>,
--   <a>startMigrationResponse_v1BotVersion</a> - The version of the bot to
--   migrate to Amazon Lex V2.
--   
--   <a>$sel:migrationId:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_migrationId</a> - The unique identifier that
--   Amazon Lex assigned to the migration.
--   
--   <a>$sel:v1BotLocale:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_v1BotLocale</a> - The locale used for the
--   Amazon Lex V1 bot.
--   
--   <a>$sel:migrationTimestamp:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_migrationTimestamp</a> - The date and time
--   that the migration started.
--   
--   <a>$sel:migrationStrategy:StartMigration'</a>,
--   <a>startMigrationResponse_migrationStrategy</a> - The strategy used to
--   conduct the migration.
--   
--   <a>$sel:v2BotRole:StartMigration'</a>,
--   <a>startMigrationResponse_v2BotRole</a> - The IAM role that Amazon Lex
--   uses to run the Amazon Lex V2 bot.
--   
--   <a>$sel:v1BotName:StartMigration'</a>,
--   <a>startMigrationResponse_v1BotName</a> - The name of the Amazon Lex
--   V1 bot that you are migrating to Amazon Lex V2.
--   
--   <a>$sel:v2BotId:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_v2BotId</a> - The unique identifier for the
--   Amazon Lex V2 bot.
--   
--   <a>$sel:httpStatus:StartMigrationResponse'</a>,
--   <a>startMigrationResponse_httpStatus</a> - The response's http status
--   code.
newStartMigrationResponse :: Int -> StartMigrationResponse

-- | <i>See:</i> <a>newGetBots</a> smart constructor.
data GetBots
GetBots' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetBots

-- | Create a value of <a>GetBots</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetBots'</a>, <a>getBots_nameContains</a> -
--   Substring to match in bot names. A bot will be returned if any part of
--   its name matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetBots'</a>, <a>getBots_nextToken</a> - A
--   pagination token that fetches the next page of bots. If the response
--   to this call is truncated, Amazon Lex returns a pagination token in
--   the response. To fetch the next page of bots, specify the pagination
--   token in the next request.
--   
--   <a>$sel:maxResults:GetBots'</a>, <a>getBots_maxResults</a> - The
--   maximum number of bots to return in the response that the request will
--   return. The default is 10.
newGetBots :: GetBots

-- | <i>See:</i> <a>newGetBotsResponse</a> smart constructor.
data GetBotsResponse
GetBotsResponse' :: Maybe Text -> Maybe [BotMetadata] -> Int -> GetBotsResponse

-- | Create a value of <a>GetBotsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBots'</a>, <a>getBotsResponse_nextToken</a> - If
--   the response is truncated, it includes a pagination token that you can
--   specify in your next request to fetch the next page of bots.
--   
--   <a>$sel:bots:GetBotsResponse'</a>, <a>getBotsResponse_bots</a> - An
--   array of <tt>botMetadata</tt> objects, with one entry for each bot.
--   
--   <a>$sel:httpStatus:GetBotsResponse'</a>,
--   <a>getBotsResponse_httpStatus</a> - The response's http status code.
newGetBotsResponse :: Int -> GetBotsResponse

-- | <i>See:</i> <a>newGetBotAlias</a> smart constructor.
data GetBotAlias
GetBotAlias' :: Text -> Text -> GetBotAlias

-- | Create a value of <a>GetBotAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetBotAlias'</a>, <a>getBotAlias_name</a> - The name of
--   the bot alias. The name is case sensitive.
--   
--   <a>$sel:botName:GetBotAlias'</a>, <a>getBotAlias_botName</a> - The
--   name of the bot.
newGetBotAlias :: Text -> Text -> GetBotAlias

-- | <i>See:</i> <a>newGetBotAliasResponse</a> smart constructor.
data GetBotAliasResponse
GetBotAliasResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConversationLogsResponse -> Int -> GetBotAliasResponse

-- | Create a value of <a>GetBotAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_createdDate</a> - The date that the bot alias
--   was created.
--   
--   <a>$sel:botName:GetBotAlias'</a>, <a>getBotAliasResponse_botName</a> -
--   The name of the bot that the alias points to.
--   
--   <a>$sel:lastUpdatedDate:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_lastUpdatedDate</a> - The date that the bot
--   alias was updated. When you create a resource, the creation date and
--   the last updated date are the same.
--   
--   <a>$sel:botVersion:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_botVersion</a> - The version of the bot that
--   the alias points to.
--   
--   <a>$sel:name:GetBotAlias'</a>, <a>getBotAliasResponse_name</a> - The
--   name of the bot alias.
--   
--   <a>$sel:description:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_description</a> - A description of the bot
--   alias.
--   
--   <a>$sel:checksum:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_checksum</a> - Checksum of the bot alias.
--   
--   <a>$sel:conversationLogs:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_conversationLogs</a> - The settings that
--   determine how Amazon Lex uses conversation logs for the alias.
--   
--   <a>$sel:httpStatus:GetBotAliasResponse'</a>,
--   <a>getBotAliasResponse_httpStatus</a> - The response's http status
--   code.
newGetBotAliasResponse :: Int -> GetBotAliasResponse

-- | <i>See:</i> <a>newGetSlotTypes</a> smart constructor.
data GetSlotTypes
GetSlotTypes' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetSlotTypes

-- | Create a value of <a>GetSlotTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetSlotTypes'</a>,
--   <a>getSlotTypes_nameContains</a> - Substring to match in slot type
--   names. A slot type will be returned if any part of its name matches
--   the substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetSlotTypes'</a>, <a>getSlotTypes_nextToken</a> - A
--   pagination token that fetches the next page of slot types. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch next page of slot types,
--   specify the pagination token in the next request.
--   
--   <a>$sel:maxResults:GetSlotTypes'</a>, <a>getSlotTypes_maxResults</a> -
--   The maximum number of slot types to return in the response. The
--   default is 10.
newGetSlotTypes :: GetSlotTypes

-- | <i>See:</i> <a>newGetSlotTypesResponse</a> smart constructor.
data GetSlotTypesResponse
GetSlotTypesResponse' :: Maybe [SlotTypeMetadata] -> Maybe Text -> Int -> GetSlotTypesResponse

-- | Create a value of <a>GetSlotTypesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypes:GetSlotTypesResponse'</a>,
--   <a>getSlotTypesResponse_slotTypes</a> - An array of objects, one for
--   each slot type, that provides information such as the name of the slot
--   type, the version, and a description.
--   
--   <a>$sel:nextToken:GetSlotTypes'</a>,
--   <a>getSlotTypesResponse_nextToken</a> - If the response is truncated,
--   it includes a pagination token that you can specify in your next
--   request to fetch the next page of slot types.
--   
--   <a>$sel:httpStatus:GetSlotTypesResponse'</a>,
--   <a>getSlotTypesResponse_httpStatus</a> - The response's http status
--   code.
newGetSlotTypesResponse :: Int -> GetSlotTypesResponse

-- | <i>See:</i> <a>newDeleteUtterances</a> smart constructor.
data DeleteUtterances
DeleteUtterances' :: Text -> Text -> DeleteUtterances

-- | Create a value of <a>DeleteUtterances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botName:DeleteUtterances'</a>, <a>deleteUtterances_botName</a>
--   - The name of the bot that stored the utterances.
--   
--   <a>$sel:userId:DeleteUtterances'</a>, <a>deleteUtterances_userId</a> -
--   The unique identifier for the user that made the utterances. This is
--   the user ID that was sent in the <a>PostContent</a> or <a>PostText</a>
--   operation request that contained the utterance.
newDeleteUtterances :: Text -> Text -> DeleteUtterances

-- | <i>See:</i> <a>newDeleteUtterancesResponse</a> smart constructor.
data DeleteUtterancesResponse
DeleteUtterancesResponse' :: DeleteUtterancesResponse

-- | Create a value of <a>DeleteUtterancesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteUtterancesResponse :: DeleteUtterancesResponse

-- | <i>See:</i> <a>newGetBotChannelAssociations</a> smart constructor.
data GetBotChannelAssociations
GetBotChannelAssociations' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> Text -> GetBotChannelAssociations

-- | Create a value of <a>GetBotChannelAssociations</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_nameContains</a> - Substring to match in
--   channel association names. An association will be returned if any part
--   of its name matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz." To return all bot channel associations, use a
--   hyphen ("-") as the <tt>nameContains</tt> parameter.
--   
--   <a>$sel:nextToken:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_nextToken</a> - A pagination token for
--   fetching the next page of associations. If the response to this call
--   is truncated, Amazon Lex returns a pagination token in the response.
--   To fetch the next page of associations, specify the pagination token
--   in the next request.
--   
--   <a>$sel:maxResults:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_maxResults</a> - The maximum number of
--   associations to return in the response. The default is 50.
--   
--   <a>$sel:botName:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_botName</a> - The name of the Amazon Lex
--   bot in the association.
--   
--   <a>$sel:botAlias:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociations_botAlias</a> - An alias pointing to the
--   specific version of the Amazon Lex bot to which this association is
--   being made.
newGetBotChannelAssociations :: Text -> Text -> GetBotChannelAssociations

-- | <i>See:</i> <a>newGetBotChannelAssociationsResponse</a> smart
--   constructor.
data GetBotChannelAssociationsResponse
GetBotChannelAssociationsResponse' :: Maybe Text -> Maybe [BotChannelAssociation] -> Int -> GetBotChannelAssociationsResponse

-- | Create a value of <a>GetBotChannelAssociationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBotChannelAssociations'</a>,
--   <a>getBotChannelAssociationsResponse_nextToken</a> - A pagination
--   token that fetches the next page of associations. If the response to
--   this call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of associations, specify the
--   pagination token in the next request.
--   
--   <a>$sel:botChannelAssociations:GetBotChannelAssociationsResponse'</a>,
--   <a>getBotChannelAssociationsResponse_botChannelAssociations</a> - An
--   array of objects, one for each association, that provides information
--   about the Amazon Lex bot and its association with the channel.
--   
--   <a>$sel:httpStatus:GetBotChannelAssociationsResponse'</a>,
--   <a>getBotChannelAssociationsResponse_httpStatus</a> - The response's
--   http status code.
newGetBotChannelAssociationsResponse :: Int -> GetBotChannelAssociationsResponse

-- | <i>See:</i> <a>newPutBotAlias</a> smart constructor.
data PutBotAlias
PutBotAlias' :: Maybe [Tag] -> Maybe Text -> Maybe Text -> Maybe ConversationLogsRequest -> Text -> Text -> Text -> PutBotAlias

-- | Create a value of <a>PutBotAlias</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:PutBotAlias'</a>, <a>putBotAlias_tags</a> - A list of
--   tags to add to the bot alias. You can only add tags when you create an
--   alias, you can't use the <tt>PutBotAlias</tt> operation to update the
--   tags on a bot alias. To update tags, use the <tt>TagResource</tt>
--   operation.
--   
--   <a>$sel:description:PutBotAlias'</a>, <a>putBotAlias_description</a> -
--   A description of the alias.
--   
--   <a>$sel:checksum:PutBotAlias'</a>, <a>putBotAlias_checksum</a> -
--   Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot alias, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a bot alias, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
--   
--   <a>$sel:conversationLogs:PutBotAlias'</a>,
--   <a>putBotAlias_conversationLogs</a> - Settings for conversation logs
--   for the alias.
--   
--   <a>$sel:name:PutBotAlias'</a>, <a>putBotAlias_name</a> - The name of
--   the alias. The name is <i>not</i> case sensitive.
--   
--   <a>$sel:botVersion:PutBotAlias'</a>, <a>putBotAlias_botVersion</a> -
--   The version of the bot.
--   
--   <a>$sel:botName:PutBotAlias'</a>, <a>putBotAlias_botName</a> - The
--   name of the bot.
newPutBotAlias :: Text -> Text -> Text -> PutBotAlias

-- | <i>See:</i> <a>newPutBotAliasResponse</a> smart constructor.
data PutBotAliasResponse
PutBotAliasResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe Text -> Maybe ConversationLogsResponse -> Int -> PutBotAliasResponse

-- | Create a value of <a>PutBotAliasResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:PutBotAliasResponse'</a>,
--   <a>putBotAliasResponse_createdDate</a> - The date that the bot alias
--   was created.
--   
--   <a>$sel:botName:PutBotAlias'</a>, <a>putBotAliasResponse_botName</a> -
--   The name of the bot that the alias points to.
--   
--   <a>$sel:lastUpdatedDate:PutBotAliasResponse'</a>,
--   <a>putBotAliasResponse_lastUpdatedDate</a> - The date that the bot
--   alias was updated. When you create a resource, the creation date and
--   the last updated date are the same.
--   
--   <a>$sel:botVersion:PutBotAlias'</a>,
--   <a>putBotAliasResponse_botVersion</a> - The version of the bot that
--   the alias points to.
--   
--   <a>$sel:name:PutBotAlias'</a>, <a>putBotAliasResponse_name</a> - The
--   name of the alias.
--   
--   <a>$sel:tags:PutBotAlias'</a>, <a>putBotAliasResponse_tags</a> - A
--   list of tags associated with a bot.
--   
--   <a>$sel:description:PutBotAlias'</a>,
--   <a>putBotAliasResponse_description</a> - A description of the alias.
--   
--   <a>$sel:checksum:PutBotAlias'</a>, <a>putBotAliasResponse_checksum</a>
--   - The checksum for the current version of the alias.
--   
--   <a>$sel:conversationLogs:PutBotAlias'</a>,
--   <a>putBotAliasResponse_conversationLogs</a> - The settings that
--   determine how Amazon Lex uses conversation logs for the alias.
--   
--   <a>$sel:httpStatus:PutBotAliasResponse'</a>,
--   <a>putBotAliasResponse_httpStatus</a> - The response's http status
--   code.
newPutBotAliasResponse :: Int -> PutBotAliasResponse

-- | <i>See:</i> <a>newGetSlotTypeVersions</a> smart constructor.
data GetSlotTypeVersions
GetSlotTypeVersions' :: Maybe Text -> Maybe Natural -> Text -> GetSlotTypeVersions

-- | Create a value of <a>GetSlotTypeVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSlotTypeVersions'</a>,
--   <a>getSlotTypeVersions_nextToken</a> - A pagination token for fetching
--   the next page of slot type versions. If the response to this call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of versions, specify the pagination token in the
--   next request.
--   
--   <a>$sel:maxResults:GetSlotTypeVersions'</a>,
--   <a>getSlotTypeVersions_maxResults</a> - The maximum number of slot
--   type versions to return in the response. The default is 10.
--   
--   <a>$sel:name:GetSlotTypeVersions'</a>, <a>getSlotTypeVersions_name</a>
--   - The name of the slot type for which versions should be returned.
newGetSlotTypeVersions :: Text -> GetSlotTypeVersions

-- | <i>See:</i> <a>newGetSlotTypeVersionsResponse</a> smart constructor.
data GetSlotTypeVersionsResponse
GetSlotTypeVersionsResponse' :: Maybe [SlotTypeMetadata] -> Maybe Text -> Int -> GetSlotTypeVersionsResponse

-- | Create a value of <a>GetSlotTypeVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypes:GetSlotTypeVersionsResponse'</a>,
--   <a>getSlotTypeVersionsResponse_slotTypes</a> - An array of
--   <tt>SlotTypeMetadata</tt> objects, one for each numbered version of
--   the slot type plus one for the <tt>$LATEST</tt> version.
--   
--   <a>$sel:nextToken:GetSlotTypeVersions'</a>,
--   <a>getSlotTypeVersionsResponse_nextToken</a> - A pagination token for
--   fetching the next page of slot type versions. If the response to this
--   call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of versions, specify the pagination
--   token in the next request.
--   
--   <a>$sel:httpStatus:GetSlotTypeVersionsResponse'</a>,
--   <a>getSlotTypeVersionsResponse_httpStatus</a> - The response's http
--   status code.
newGetSlotTypeVersionsResponse :: Int -> GetSlotTypeVersionsResponse

-- | <i>See:</i> <a>newGetBuiltinIntent</a> smart constructor.
data GetBuiltinIntent
GetBuiltinIntent' :: Text -> GetBuiltinIntent

-- | Create a value of <a>GetBuiltinIntent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signature:GetBuiltinIntent'</a>,
--   <a>getBuiltinIntent_signature</a> - The unique identifier for a
--   built-in intent. To find the signature for an intent, see <a>Standard
--   Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
newGetBuiltinIntent :: Text -> GetBuiltinIntent

-- | <i>See:</i> <a>newGetBuiltinIntentResponse</a> smart constructor.
data GetBuiltinIntentResponse
GetBuiltinIntentResponse' :: Maybe [BuiltinIntentSlot] -> Maybe Text -> Maybe [Locale] -> Int -> GetBuiltinIntentResponse

-- | Create a value of <a>GetBuiltinIntentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slots:GetBuiltinIntentResponse'</a>,
--   <a>getBuiltinIntentResponse_slots</a> - An array of
--   <tt>BuiltinIntentSlot</tt> objects, one entry for each slot type in
--   the intent.
--   
--   <a>$sel:signature:GetBuiltinIntent'</a>,
--   <a>getBuiltinIntentResponse_signature</a> - The unique identifier for
--   a built-in intent.
--   
--   <a>$sel:supportedLocales:GetBuiltinIntentResponse'</a>,
--   <a>getBuiltinIntentResponse_supportedLocales</a> - A list of locales
--   that the intent supports.
--   
--   <a>$sel:httpStatus:GetBuiltinIntentResponse'</a>,
--   <a>getBuiltinIntentResponse_httpStatus</a> - The response's http
--   status code.
newGetBuiltinIntentResponse :: Int -> GetBuiltinIntentResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to remove the tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag keys to remove from the resource. If a tag key does not
--   exist on the resource, it is ignored.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newGetUtterancesView</a> smart constructor.
data GetUtterancesView
GetUtterancesView' :: Text -> NonEmpty Text -> StatusType -> GetUtterancesView

-- | Create a value of <a>GetUtterancesView</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botName:GetUtterancesView'</a>,
--   <a>getUtterancesView_botName</a> - The name of the bot for which
--   utterance information should be returned.
--   
--   <a>$sel:botVersions:GetUtterancesView'</a>,
--   <a>getUtterancesView_botVersions</a> - An array of bot versions for
--   which utterance information should be returned. The limit is 5
--   versions per request.
--   
--   <a>$sel:statusType:GetUtterancesView'</a>,
--   <a>getUtterancesView_statusType</a> - To return utterances that were
--   recognized and handled, use <tt>Detected</tt>. To return utterances
--   that were not recognized, use <tt>Missed</tt>.
newGetUtterancesView :: Text -> NonEmpty Text -> StatusType -> GetUtterancesView

-- | <i>See:</i> <a>newGetUtterancesViewResponse</a> smart constructor.
data GetUtterancesViewResponse
GetUtterancesViewResponse' :: Maybe Text -> Maybe [UtteranceList] -> Int -> GetUtterancesViewResponse

-- | Create a value of <a>GetUtterancesViewResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botName:GetUtterancesView'</a>,
--   <a>getUtterancesViewResponse_botName</a> - The name of the bot for
--   which utterance information was returned.
--   
--   <a>$sel:utterances:GetUtterancesViewResponse'</a>,
--   <a>getUtterancesViewResponse_utterances</a> - An array of
--   UtteranceList objects, each containing a list of UtteranceData objects
--   describing the utterances that were processed by your bot. The
--   response contains a maximum of 100 <tt>UtteranceData</tt> objects for
--   each version. Amazon Lex returns the most frequent utterances received
--   by the bot in the last 15 days.
--   
--   <a>$sel:httpStatus:GetUtterancesViewResponse'</a>,
--   <a>getUtterancesViewResponse_httpStatus</a> - The response's http
--   status code.
newGetUtterancesViewResponse :: Int -> GetUtterancesViewResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the bot, bot alias, or bot channel
--   to tag.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of tag
--   keys to add to the resource. If a tag key already exists, the existing
--   value is replaced with the new value.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newGetBuiltinSlotTypes</a> smart constructor.
data GetBuiltinSlotTypes
GetBuiltinSlotTypes' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Locale -> GetBuiltinSlotTypes

-- | Create a value of <a>GetBuiltinSlotTypes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signatureContains:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypes_signatureContains</a> - Substring to match in
--   built-in slot type signatures. A slot type will be returned if any
--   part of its signature matches the substring. For example, "xyz"
--   matches both "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypes_nextToken</a> - A pagination token that fetches
--   the next page of slot types. If the response to this API call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of slot types, specify the pagination token in the
--   next request.
--   
--   <a>$sel:maxResults:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypes_maxResults</a> - The maximum number of slot
--   types to return in the response. The default is 10.
--   
--   <a>$sel:locale:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypes_locale</a> - A list of locales that the slot
--   type supports.
newGetBuiltinSlotTypes :: GetBuiltinSlotTypes

-- | <i>See:</i> <a>newGetBuiltinSlotTypesResponse</a> smart constructor.
data GetBuiltinSlotTypesResponse
GetBuiltinSlotTypesResponse' :: Maybe [BuiltinSlotTypeMetadata] -> Maybe Text -> Int -> GetBuiltinSlotTypesResponse

-- | Create a value of <a>GetBuiltinSlotTypesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypes:GetBuiltinSlotTypesResponse'</a>,
--   <a>getBuiltinSlotTypesResponse_slotTypes</a> - An array of
--   <tt>BuiltInSlotTypeMetadata</tt> objects, one entry for each slot type
--   returned.
--   
--   <a>$sel:nextToken:GetBuiltinSlotTypes'</a>,
--   <a>getBuiltinSlotTypesResponse_nextToken</a> - If the response is
--   truncated, the response includes a pagination token that you can use
--   in your next request to fetch the next page of slot types.
--   
--   <a>$sel:httpStatus:GetBuiltinSlotTypesResponse'</a>,
--   <a>getBuiltinSlotTypesResponse_httpStatus</a> - The response's http
--   status code.
newGetBuiltinSlotTypesResponse :: Int -> GetBuiltinSlotTypesResponse

-- | <i>See:</i> <a>newPutBot</a> smart constructor.
data PutBot
PutBot' :: Maybe Statement -> Maybe ProcessBehavior -> Maybe Text -> Maybe Prompt -> Maybe Double -> Maybe Bool -> Maybe Natural -> Maybe [Intent] -> Maybe [Tag] -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Text -> Locale -> Bool -> PutBot

-- | Create a value of <a>PutBot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abortStatement:PutBot'</a>, <a>putBot_abortStatement</a> -
--   When Amazon Lex can't understand the user's input in context, it tries
--   to elicit the information a few times. After that, Amazon Lex sends
--   the message defined in <tt>abortStatement</tt> to the user, and then
--   cancels the conversation. To set the number of retries, use the
--   <tt>valueElicitationPrompt</tt> field for the slot type.
--   
--   For example, in a pizza ordering bot, Amazon Lex might ask a user
--   "What type of crust would you like?" If the user's response is not one
--   of the expected responses (for example, "thin crust, "deep dish,"
--   etc.), Amazon Lex tries to elicit a correct response a few more times.
--   
--   For example, in a pizza ordering application, <tt>OrderPizza</tt>
--   might be one of the intents. This intent might require the
--   <tt>CrustType</tt> slot. You specify the
--   <tt>valueElicitationPrompt</tt> field when you create the
--   <tt>CrustType</tt> slot.
--   
--   If you have defined a fallback intent the cancel statement will not be
--   sent to the user, the fallback intent is used instead. For more
--   information, see <a>AMAZON.FallbackIntent</a>.
--   
--   <a>$sel:processBehavior:PutBot'</a>, <a>putBot_processBehavior</a> -
--   If you set the <tt>processBehavior</tt> element to <tt>BUILD</tt>,
--   Amazon Lex builds the bot so that it can be run. If you set the
--   element to <tt>SAVE</tt> Amazon Lex saves the bot, but doesn't build
--   it.
--   
--   If you don't specify this value, the default value is <tt>BUILD</tt>.
--   
--   <a>$sel:voiceId:PutBot'</a>, <a>putBot_voiceId</a> - The Amazon Polly
--   voice ID that you want Amazon Lex to use for voice interactions with
--   the user. The locale configured for the voice must match the locale of
--   the bot. For more information, see <a>Voices in Amazon Polly</a> in
--   the <i>Amazon Polly Developer Guide</i>.
--   
--   <a>$sel:clarificationPrompt:PutBot'</a>,
--   <a>putBot_clarificationPrompt</a> - When Amazon Lex doesn't understand
--   the user's intent, it uses this message to get clarification. To
--   specify how many times Amazon Lex should repeat the clarification
--   prompt, use the <tt>maxAttempts</tt> field. If Amazon Lex still
--   doesn't understand, it sends the message in the
--   <tt>abortStatement</tt> field.
--   
--   When you create a clarification prompt, make sure that it suggests the
--   correct response from the user. for example, for a bot that orders
--   pizza and drinks, you might create this clarification prompt: "What
--   would you like to do? You can say 'Order a pizza' or 'Order a drink.'"
--   
--   If you have defined a fallback intent, it will be invoked if the
--   clarification prompt is repeated the number of times defined in the
--   <tt>maxAttempts</tt> field. For more information, see
--   <a>AMAZON.FallbackIntent</a>.
--   
--   If you don't define a clarification prompt, at runtime Amazon Lex will
--   return a 400 Bad Request exception in three cases:
--   
--   <ul>
--   <li>Follow-up prompt - When the user responds to a follow-up prompt
--   but does not provide an intent. For example, in response to a
--   follow-up prompt that says "Would you like anything else today?" the
--   user says "Yes." Amazon Lex will return a 400 Bad Request exception
--   because it does not have a clarification prompt to send to the user to
--   get an intent.</li>
--   <li>Lambda function - When using a Lambda function, you return an
--   <tt>ElicitIntent</tt> dialog type. Since Amazon Lex does not have a
--   clarification prompt to get an intent from the user, it returns a 400
--   Bad Request exception.</li>
--   <li>PutSession operation - When using the <tt>PutSession</tt>
--   operation, you send an <tt>ElicitIntent</tt> dialog type. Since Amazon
--   Lex does not have a clarification prompt to get an intent from the
--   user, it returns a 400 Bad Request exception.</li>
--   </ul>
--   
--   <a>$sel:nluIntentConfidenceThreshold:PutBot'</a>,
--   <a>putBot_nluIntentConfidenceThreshold</a> - Determines the threshold
--   where Amazon Lex will insert the <tt>AMAZON.FallbackIntent</tt>,
--   <tt>AMAZON.KendraSearchIntent</tt>, or both when returning alternative
--   intents in a <a>PostContent</a> or <a>PostText</a> response.
--   <tt>AMAZON.FallbackIntent</tt> and <tt>AMAZON.KendraSearchIntent</tt>
--   are only inserted if they are configured for the bot.
--   
--   You must set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> to use confidence scores in the following regions.
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default.
--   
--   For example, suppose a bot is configured with the confidence threshold
--   of 0.80 and the <tt>AMAZON.FallbackIntent</tt>. Amazon Lex returns
--   three alternative intents with the following confidence scores:
--   IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the
--   <tt>PostText</tt> operation would be:
--   
--   <ul>
--   <li>AMAZON.FallbackIntent</li>
--   <li>IntentA</li>
--   <li>IntentB</li>
--   <li>IntentC</li>
--   </ul>
--   
--   <a>$sel:enableModelImprovements:PutBot'</a>,
--   <a>putBot_enableModelImprovements</a> - Set to <tt>true</tt> to enable
--   access to natural language understanding improvements.
--   
--   When you set the <tt>enableModelImprovements</tt> parameter to
--   <tt>true</tt> you can use the <tt>nluIntentConfidenceThreshold</tt>
--   parameter to configure confidence scores. For more information, see
--   <a>Confidence Scores</a>.
--   
--   You can only set the <tt>enableModelImprovements</tt> parameter in
--   certain Regions. If you set the parameter to <tt>true</tt>, your bot
--   has access to accuracy improvements.
--   
--   The Regions where you can set the <tt>enableModelImprovements</tt>
--   parameter to <tt>true</tt> are:
--   
--   <ul>
--   <li>US East (N. Virginia) (us-east-1)</li>
--   <li>US West (Oregon) (us-west-2)</li>
--   <li>Asia Pacific (Sydney) (ap-southeast-2)</li>
--   <li>EU (Ireland) (eu-west-1)</li>
--   </ul>
--   
--   In other Regions, the <tt>enableModelImprovements</tt> parameter is
--   set to <tt>true</tt> by default. In these Regions setting the
--   parameter to <tt>false</tt> throws a <tt>ValidationException</tt>
--   exception.
--   
--   <a>$sel:idleSessionTTLInSeconds:PutBot'</a>,
--   <a>putBot_idleSessionTTLInSeconds</a> - The maximum time in seconds
--   that Amazon Lex retains the data gathered in a conversation.
--   
--   A user interaction session remains active for the amount of time
--   specified. If no conversation occurs during this time, the session
--   expires and Amazon Lex deletes any data provided before the timeout.
--   
--   For example, suppose that a user chooses the OrderPizza intent, but
--   gets sidetracked halfway through placing an order. If the user doesn't
--   complete the order within the specified time, Amazon Lex discards the
--   slot information that it gathered, and the user must start over.
--   
--   If you don't include the <tt>idleSessionTTLInSeconds</tt> element in a
--   <tt>PutBot</tt> operation request, Amazon Lex uses the default value.
--   This is also true if the request replaces an existing bot.
--   
--   The default is 300 seconds (5 minutes).
--   
--   <a>$sel:intents:PutBot'</a>, <a>putBot_intents</a> - An array of
--   <tt>Intent</tt> objects. Each intent represents a command that a user
--   can express. For example, a pizza ordering bot might support an
--   OrderPizza intent. For more information, see how-it-works.
--   
--   <a>$sel:tags:PutBot'</a>, <a>putBot_tags</a> - A list of tags to add
--   to the bot. You can only add tags when you create a bot, you can't use
--   the <tt>PutBot</tt> operation to update the tags on a bot. To update
--   tags, use the <tt>TagResource</tt> operation.
--   
--   <a>$sel:description:PutBot'</a>, <a>putBot_description</a> - A
--   description of the bot.
--   
--   <a>$sel:createVersion:PutBot'</a>, <a>putBot_createVersion</a> - When
--   set to <tt>true</tt> a new numbered version of the bot is created.
--   This is the same as calling the <tt>CreateBotVersion</tt> operation.
--   If you don't specify <tt>createVersion</tt>, the default is
--   <tt>false</tt>.
--   
--   <a>$sel:detectSentiment:PutBot'</a>, <a>putBot_detectSentiment</a> -
--   When set to <tt>true</tt> user utterances are sent to Amazon
--   Comprehend for sentiment analysis. If you don't specify
--   <tt>detectSentiment</tt>, the default is <tt>false</tt>.
--   
--   <a>$sel:checksum:PutBot'</a>, <a>putBot_checksum</a> - Identifies a
--   specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new bot, leave the <tt>checksum</tt> field blank. If
--   you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a bot, set the <tt>checksum</tt> field to the
--   checksum of the most recent revision of the <tt>$LATEST</tt> version.
--   If you don't specify the <tt> checksum</tt> field, or if the checksum
--   does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
--   
--   <a>$sel:name:PutBot'</a>, <a>putBot_name</a> - The name of the bot.
--   The name is <i>not</i> case sensitive.
--   
--   <a>$sel:locale:PutBot'</a>, <a>putBot_locale</a> - Specifies the
--   target locale for the bot. Any intent used in the bot must be
--   compatible with the locale of the bot.
--   
--   The default is <tt>en-US</tt>.
--   
--   <a>$sel:childDirected:PutBot'</a>, <a>putBot_childDirected</a> - For
--   each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
newPutBot :: Text -> Locale -> Bool -> PutBot

-- | <i>See:</i> <a>newPutBotResponse</a> smart constructor.
data PutBotResponse
PutBotResponse' :: Maybe Statement -> Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Prompt -> Maybe Double -> Maybe Locale -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [Intent] -> Maybe Text -> Maybe [Tag] -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Int -> PutBotResponse

-- | Create a value of <a>PutBotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abortStatement:PutBot'</a>,
--   <a>putBotResponse_abortStatement</a> - The message that Amazon Lex
--   uses to cancel a conversation. For more information, see PutBot.
--   
--   <a>$sel:createdDate:PutBotResponse'</a>,
--   <a>putBotResponse_createdDate</a> - The date that the bot was created.
--   
--   <a>$sel:status:PutBotResponse'</a>, <a>putBotResponse_status</a> -
--   When you send a request to create a bot with <tt>processBehavior</tt>
--   set to <tt>BUILD</tt>, Amazon Lex sets the <tt>status</tt> response
--   element to <tt>BUILDING</tt>.
--   
--   In the <tt>READY_BASIC_TESTING</tt> state you can test the bot with
--   user inputs that exactly match the utterances configured for the bot's
--   intents and values in the slot types.
--   
--   If Amazon Lex can't build the bot, Amazon Lex sets <tt>status</tt> to
--   <tt>FAILED</tt>. Amazon Lex returns the reason for the failure in the
--   <tt>failureReason</tt> response element.
--   
--   When you set <tt>processBehavior</tt> to <tt>SAVE</tt>, Amazon Lex
--   sets the status code to <tt>NOT BUILT</tt>.
--   
--   When the bot is in the <tt>READY</tt> state you can test and publish
--   the bot.
--   
--   <a>$sel:lastUpdatedDate:PutBotResponse'</a>,
--   <a>putBotResponse_lastUpdatedDate</a> - The date that the bot was
--   updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:voiceId:PutBot'</a>, <a>putBotResponse_voiceId</a> - The
--   Amazon Polly voice ID that Amazon Lex uses for voice interaction with
--   the user. For more information, see PutBot.
--   
--   <a>$sel:clarificationPrompt:PutBot'</a>,
--   <a>putBotResponse_clarificationPrompt</a> - The prompts that Amazon
--   Lex uses when it doesn't understand the user's intent. For more
--   information, see PutBot.
--   
--   <a>$sel:nluIntentConfidenceThreshold:PutBot'</a>,
--   <a>putBotResponse_nluIntentConfidenceThreshold</a> - The score that
--   determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
--   
--   <a>$sel:locale:PutBot'</a>, <a>putBotResponse_locale</a> - The target
--   locale for the bot.
--   
--   <a>$sel:enableModelImprovements:PutBot'</a>,
--   <a>putBotResponse_enableModelImprovements</a> - Indicates whether the
--   bot uses accuracy improvements. <tt>true</tt> indicates that the bot
--   is using the improvements, otherwise, <tt>false</tt>.
--   
--   <a>$sel:version:PutBotResponse'</a>, <a>putBotResponse_version</a> -
--   The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
--   
--   <a>$sel:idleSessionTTLInSeconds:PutBot'</a>,
--   <a>putBotResponse_idleSessionTTLInSeconds</a> - The maximum length of
--   time that Amazon Lex retains the data gathered in a conversation. For
--   more information, see PutBot.
--   
--   <a>$sel:name:PutBot'</a>, <a>putBotResponse_name</a> - The name of the
--   bot.
--   
--   <a>$sel:intents:PutBot'</a>, <a>putBotResponse_intents</a> - An array
--   of <tt>Intent</tt> objects. For more information, see PutBot.
--   
--   <a>$sel:failureReason:PutBotResponse'</a>,
--   <a>putBotResponse_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   build the bot.
--   
--   <a>$sel:tags:PutBot'</a>, <a>putBotResponse_tags</a> - A list of tags
--   associated with the bot.
--   
--   <a>$sel:childDirected:PutBot'</a>, <a>putBotResponse_childDirected</a>
--   - For each Amazon Lex bot created with the Amazon Lex Model Building
--   Service, you must specify whether your use of Amazon Lex is related to
--   a website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to the
--   Children's Online Privacy Protection Act (COPPA) by specifying
--   <tt>true</tt> or <tt>false</tt> in the <tt>childDirected</tt> field.
--   By specifying <tt>true</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is</b> related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to COPPA. By
--   specifying <tt>false</tt> in the <tt>childDirected</tt> field, you
--   confirm that your use of Amazon Lex <b>is not</b> related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   You may not specify a default value for the <tt>childDirected</tt>
--   field that does not accurately reflect whether your use of Amazon Lex
--   is related to a website, program, or other application that is
--   directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
--   
--   <a>$sel:description:PutBot'</a>, <a>putBotResponse_description</a> - A
--   description of the bot.
--   
--   <a>$sel:createVersion:PutBot'</a>, <a>putBotResponse_createVersion</a>
--   - <tt>True</tt> if a new version of the bot was created. If the
--   <tt>createVersion</tt> field was not specified in the request, the
--   <tt>createVersion</tt> field is set to false in the response.
--   
--   <a>$sel:detectSentiment:PutBot'</a>,
--   <a>putBotResponse_detectSentiment</a> - <tt>true</tt> if the bot is
--   configured to send user utterances to Amazon Comprehend for sentiment
--   analysis. If the <tt>detectSentiment</tt> field was not specified in
--   the request, the <tt>detectSentiment</tt> field is <tt>false</tt> in
--   the response.
--   
--   <a>$sel:checksum:PutBot'</a>, <a>putBotResponse_checksum</a> -
--   Checksum of the bot that you created.
--   
--   <a>$sel:httpStatus:PutBotResponse'</a>,
--   <a>putBotResponse_httpStatus</a> - The response's http status code.
newPutBotResponse :: Int -> PutBotResponse

-- | <i>See:</i> <a>newPutIntent</a> smart constructor.
data PutIntent
PutIntent' :: Maybe KendraConfiguration -> Maybe Text -> Maybe CodeHook -> Maybe Statement -> Maybe Statement -> Maybe [InputContext] -> Maybe [Slot] -> Maybe FulfillmentActivity -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Prompt -> Maybe [OutputContext] -> Maybe FollowUpPrompt -> Maybe Text -> Text -> PutIntent

-- | Create a value of <a>PutIntent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kendraConfiguration:PutIntent'</a>,
--   <a>putIntent_kendraConfiguration</a> - Configuration information
--   required to use the <tt>AMAZON.KendraSearchIntent</tt> intent to
--   connect to an Amazon Kendra index. For more information, see
--   <a>AMAZON.KendraSearchIntent</a>.
--   
--   <a>$sel:parentIntentSignature:PutIntent'</a>,
--   <a>putIntent_parentIntentSignature</a> - A unique identifier for the
--   built-in intent to base this intent on. To find the signature for an
--   intent, see <a>Standard Built-in Intents</a> in the <i>Alexa Skills
--   Kit</i>.
--   
--   <a>$sel:dialogCodeHook:PutIntent'</a>, <a>putIntent_dialogCodeHook</a>
--   - Specifies a Lambda function to invoke for each user input. You can
--   invoke this Lambda function to personalize user interaction.
--   
--   For example, suppose your bot determines that the user is John. Your
--   Lambda function might retrieve John's information from a backend
--   database and prepopulate some of the values. For example, if you find
--   that John is gluten intolerant, you might set the corresponding intent
--   slot, <tt>GlutenIntolerant</tt>, to true. You might find John's phone
--   number and set the corresponding session attribute.
--   
--   <a>$sel:conclusionStatement:PutIntent'</a>,
--   <a>putIntent_conclusionStatement</a> - The statement that you want
--   Amazon Lex to convey to the user after the intent is successfully
--   fulfilled by the Lambda function.
--   
--   This element is relevant only if you provide a Lambda function in the
--   <tt>fulfillmentActivity</tt>. If you return the intent to the client
--   application, you can't specify this element.
--   
--   The <tt>followUpPrompt</tt> and <tt>conclusionStatement</tt> are
--   mutually exclusive. You can specify only one.
--   
--   <a>$sel:rejectionStatement:PutIntent'</a>,
--   <a>putIntent_rejectionStatement</a> - When the user answers "no" to
--   the question defined in <tt>confirmationPrompt</tt>, Amazon Lex
--   responds with this statement to acknowledge that the intent was
--   canceled.
--   
--   You must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
--   
--   <a>$sel:inputContexts:PutIntent'</a>, <a>putIntent_inputContexts</a> -
--   An array of <tt>InputContext</tt> objects that lists the contexts that
--   must be active for Amazon Lex to choose the intent in a conversation
--   with the user.
--   
--   <a>$sel:slots:PutIntent'</a>, <a>putIntent_slots</a> - An array of
--   intent slots. At runtime, Amazon Lex elicits required slot values from
--   the user using prompts defined in the slots. For more information, see
--   how-it-works.
--   
--   <a>$sel:fulfillmentActivity:PutIntent'</a>,
--   <a>putIntent_fulfillmentActivity</a> - Required. Describes how the
--   intent is fulfilled. For example, after a user provides all of the
--   information for a pizza order, <tt>fulfillmentActivity</tt> defines
--   how the bot places an order with a local pizza store.
--   
--   You might configure Amazon Lex to return all of the intent information
--   to the client application, or direct it to invoke a Lambda function
--   that can process the intent (for example, place an order with a
--   pizzeria).
--   
--   <a>$sel:sampleUtterances:PutIntent'</a>,
--   <a>putIntent_sampleUtterances</a> - An array of utterances (strings)
--   that a user might say to signal the intent. For example, "I want
--   {PizzaSize} pizza", "Order {Quantity} {PizzaSize} pizzas".
--   
--   In each utterance, a slot name is enclosed in curly braces.
--   
--   <a>$sel:description:PutIntent'</a>, <a>putIntent_description</a> - A
--   description of the intent.
--   
--   <a>$sel:createVersion:PutIntent'</a>, <a>putIntent_createVersion</a> -
--   When set to <tt>true</tt> a new numbered version of the intent is
--   created. This is the same as calling the <tt>CreateIntentVersion</tt>
--   operation. If you do not specify <tt>createVersion</tt>, the default
--   is <tt>false</tt>.
--   
--   <a>$sel:confirmationPrompt:PutIntent'</a>,
--   <a>putIntent_confirmationPrompt</a> - Prompts the user to confirm the
--   intent. This question should have a yes or no answer.
--   
--   Amazon Lex uses this prompt to ensure that the user acknowledges that
--   the intent is ready for fulfillment. For example, with the
--   <tt>OrderPizza</tt> intent, you might want to confirm that the order
--   is correct before placing it. For other intents, such as intents that
--   simply respond to user questions, you might not need to ask the user
--   for confirmation before providing the information.
--   
--   You you must provide both the <tt>rejectionStatement</tt> and the
--   <tt>confirmationPrompt</tt>, or neither.
--   
--   <a>$sel:outputContexts:PutIntent'</a>, <a>putIntent_outputContexts</a>
--   - An array of <tt>OutputContext</tt> objects that lists the contexts
--   that the intent activates when the intent is fulfilled.
--   
--   <a>$sel:followUpPrompt:PutIntent'</a>, <a>putIntent_followUpPrompt</a>
--   - Amazon Lex uses this prompt to solicit additional activity after
--   fulfilling an intent. For example, after the <tt>OrderPizza</tt>
--   intent is fulfilled, you might prompt the user to order a drink.
--   
--   The action that Amazon Lex takes depends on the user's response, as
--   follows:
--   
--   <ul>
--   <li>If the user says "Yes" it responds with the clarification prompt
--   that is configured for the bot.</li>
--   <li>if the user says "Yes" and continues with an utterance that
--   triggers an intent it starts a conversation for the intent.</li>
--   <li>If the user says "No" it responds with the rejection statement
--   configured for the the follow-up prompt.</li>
--   <li>If it doesn't recognize the utterance it repeats the follow-up
--   prompt again.</li>
--   </ul>
--   
--   The <tt>followUpPrompt</tt> field and the <tt>conclusionStatement</tt>
--   field are mutually exclusive. You can specify only one.
--   
--   <a>$sel:checksum:PutIntent'</a>, <a>putIntent_checksum</a> -
--   Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new intent, leave the <tt>checksum</tt> field blank.
--   If you specify a checksum you get a <tt>BadRequestException</tt>
--   exception.
--   
--   When you want to update a intent, set the <tt>checksum</tt> field to
--   the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
--   
--   <a>$sel:name:PutIntent'</a>, <a>putIntent_name</a> - The name of the
--   intent. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in intent name, or a built-in intent name
--   with "AMAZON." removed. For example, because there is a built-in
--   intent called <tt>AMAZON.HelpIntent</tt>, you can't create a custom
--   intent called <tt>HelpIntent</tt>.
--   
--   For a list of built-in intents, see <a>Standard Built-in Intents</a>
--   in the <i>Alexa Skills Kit</i>.
newPutIntent :: Text -> PutIntent

-- | <i>See:</i> <a>newPutIntentResponse</a> smart constructor.
data PutIntentResponse
PutIntentResponse' :: Maybe KendraConfiguration -> Maybe POSIX -> Maybe Text -> Maybe CodeHook -> Maybe Statement -> Maybe POSIX -> Maybe Statement -> Maybe [InputContext] -> Maybe Text -> Maybe [Slot] -> Maybe FulfillmentActivity -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Bool -> Maybe Prompt -> Maybe [OutputContext] -> Maybe FollowUpPrompt -> Maybe Text -> Int -> PutIntentResponse

-- | Create a value of <a>PutIntentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kendraConfiguration:PutIntent'</a>,
--   <a>putIntentResponse_kendraConfiguration</a> - Configuration
--   information, if any, required to connect to an Amazon Kendra index and
--   use the <tt>AMAZON.KendraSearchIntent</tt> intent.
--   
--   <a>$sel:createdDate:PutIntentResponse'</a>,
--   <a>putIntentResponse_createdDate</a> - The date that the intent was
--   created.
--   
--   <a>$sel:parentIntentSignature:PutIntent'</a>,
--   <a>putIntentResponse_parentIntentSignature</a> - A unique identifier
--   for the built-in intent that this intent is based on.
--   
--   <a>$sel:dialogCodeHook:PutIntent'</a>,
--   <a>putIntentResponse_dialogCodeHook</a> - If defined in the intent,
--   Amazon Lex invokes this Lambda function for each user input.
--   
--   <a>$sel:conclusionStatement:PutIntent'</a>,
--   <a>putIntentResponse_conclusionStatement</a> - After the Lambda
--   function specified in the<tt>fulfillmentActivity</tt>intent fulfills
--   the intent, Amazon Lex conveys this statement to the user.
--   
--   <a>$sel:lastUpdatedDate:PutIntentResponse'</a>,
--   <a>putIntentResponse_lastUpdatedDate</a> - The date that the intent
--   was updated. When you create a resource, the creation date and last
--   update dates are the same.
--   
--   <a>$sel:rejectionStatement:PutIntent'</a>,
--   <a>putIntentResponse_rejectionStatement</a> - If the user answers "no"
--   to the question defined in <tt>confirmationPrompt</tt> Amazon Lex
--   responds with this statement to acknowledge that the intent was
--   canceled.
--   
--   <a>$sel:inputContexts:PutIntent'</a>,
--   <a>putIntentResponse_inputContexts</a> - An array of
--   <tt>InputContext</tt> objects that lists the contexts that must be
--   active for Amazon Lex to choose the intent in a conversation with the
--   user.
--   
--   <a>$sel:version:PutIntentResponse'</a>,
--   <a>putIntentResponse_version</a> - The version of the intent. For a
--   new intent, the version is always <tt>$LATEST</tt>.
--   
--   <a>$sel:slots:PutIntent'</a>, <a>putIntentResponse_slots</a> - An
--   array of intent slots that are configured for the intent.
--   
--   <a>$sel:fulfillmentActivity:PutIntent'</a>,
--   <a>putIntentResponse_fulfillmentActivity</a> - If defined in the
--   intent, Amazon Lex invokes this Lambda function to fulfill the intent
--   after the user provides all of the information required by the intent.
--   
--   <a>$sel:name:PutIntent'</a>, <a>putIntentResponse_name</a> - The name
--   of the intent.
--   
--   <a>$sel:sampleUtterances:PutIntent'</a>,
--   <a>putIntentResponse_sampleUtterances</a> - An array of sample
--   utterances that are configured for the intent.
--   
--   <a>$sel:description:PutIntent'</a>,
--   <a>putIntentResponse_description</a> - A description of the intent.
--   
--   <a>$sel:createVersion:PutIntent'</a>,
--   <a>putIntentResponse_createVersion</a> - <tt>True</tt> if a new
--   version of the intent was created. If the <tt>createVersion</tt> field
--   was not specified in the request, the <tt>createVersion</tt> field is
--   set to false in the response.
--   
--   <a>$sel:confirmationPrompt:PutIntent'</a>,
--   <a>putIntentResponse_confirmationPrompt</a> - If defined in the
--   intent, Amazon Lex prompts the user to confirm the intent before
--   fulfilling it.
--   
--   <a>$sel:outputContexts:PutIntent'</a>,
--   <a>putIntentResponse_outputContexts</a> - An array of
--   <tt>OutputContext</tt> objects that lists the contexts that the intent
--   activates when the intent is fulfilled.
--   
--   <a>$sel:followUpPrompt:PutIntent'</a>,
--   <a>putIntentResponse_followUpPrompt</a> - If defined in the intent,
--   Amazon Lex uses this prompt to solicit additional user activity after
--   the intent is fulfilled.
--   
--   <a>$sel:checksum:PutIntent'</a>, <a>putIntentResponse_checksum</a> -
--   Checksum of the <tt>$LATEST</tt>version of the intent created or
--   updated.
--   
--   <a>$sel:httpStatus:PutIntentResponse'</a>,
--   <a>putIntentResponse_httpStatus</a> - The response's http status code.
newPutIntentResponse :: Int -> PutIntentResponse

-- | <i>See:</i> <a>newGetBotChannelAssociation</a> smart constructor.
data GetBotChannelAssociation
GetBotChannelAssociation' :: Text -> Text -> Text -> GetBotChannelAssociation

-- | Create a value of <a>GetBotChannelAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociation_name</a> - The name of the association
--   between the bot and the channel. The name is case sensitive.
--   
--   <a>$sel:botName:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociation_botName</a> - The name of the Amazon Lex
--   bot.
--   
--   <a>$sel:botAlias:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociation_botAlias</a> - An alias pointing to the
--   specific version of the Amazon Lex bot to which this association is
--   being made.
newGetBotChannelAssociation :: Text -> Text -> Text -> GetBotChannelAssociation

-- | <i>See:</i> <a>newGetBotChannelAssociationResponse</a> smart
--   constructor.
data GetBotChannelAssociationResponse
GetBotChannelAssociationResponse' :: Maybe Text -> Maybe POSIX -> Maybe ChannelStatus -> Maybe (Sensitive (HashMap Text Text)) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChannelType -> Int -> GetBotChannelAssociationResponse

-- | Create a value of <a>GetBotChannelAssociationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botAlias:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociationResponse_botAlias</a> - An alias pointing
--   to the specific version of the Amazon Lex bot to which this
--   association is being made.
--   
--   <a>$sel:createdDate:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_createdDate</a> - The date that
--   the association between the bot and the channel was created.
--   
--   <a>$sel:status:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_status</a> - The status of the bot
--   channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
--   
--   <a>$sel:botConfiguration:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_botConfiguration</a> - Provides
--   information that the messaging platform needs to communicate with the
--   Amazon Lex bot.
--   
--   <a>$sel:botName:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociationResponse_botName</a> - The name of the
--   Amazon Lex bot.
--   
--   <a>$sel:name:GetBotChannelAssociation'</a>,
--   <a>getBotChannelAssociationResponse_name</a> - The name of the
--   association between the bot and the channel.
--   
--   <a>$sel:failureReason:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_failureReason</a> - If
--   <tt>status</tt> is <tt>FAILED</tt>, Amazon Lex provides the reason
--   that it failed to create the association.
--   
--   <a>$sel:description:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_description</a> - A description of
--   the association between the bot and the channel.
--   
--   <a>$sel:type':GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_type</a> - The type of the
--   messaging platform.
--   
--   <a>$sel:httpStatus:GetBotChannelAssociationResponse'</a>,
--   <a>getBotChannelAssociationResponse_httpStatus</a> - The response's
--   http status code.
newGetBotChannelAssociationResponse :: Int -> GetBotChannelAssociationResponse

-- | <i>See:</i> <a>newDeleteSlotType</a> smart constructor.
data DeleteSlotType
DeleteSlotType' :: Text -> DeleteSlotType

-- | Create a value of <a>DeleteSlotType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteSlotType'</a>, <a>deleteSlotType_name</a> - The
--   name of the slot type. The name is case sensitive.
newDeleteSlotType :: Text -> DeleteSlotType

-- | <i>See:</i> <a>newDeleteSlotTypeResponse</a> smart constructor.
data DeleteSlotTypeResponse
DeleteSlotTypeResponse' :: DeleteSlotTypeResponse

-- | Create a value of <a>DeleteSlotTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteSlotTypeResponse :: DeleteSlotTypeResponse

-- | <i>See:</i> <a>newGetExport</a> smart constructor.
data GetExport
GetExport' :: Text -> Text -> ResourceType -> ExportType -> GetExport

-- | Create a value of <a>GetExport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetExport'</a>, <a>getExport_name</a> - The name of the
--   bot to export.
--   
--   <a>$sel:version:GetExport'</a>, <a>getExport_version</a> - The version
--   of the bot to export.
--   
--   <a>$sel:resourceType:GetExport'</a>, <a>getExport_resourceType</a> -
--   The type of resource to export.
--   
--   <a>$sel:exportType:GetExport'</a>, <a>getExport_exportType</a> - The
--   format of the exported data.
newGetExport :: Text -> Text -> ResourceType -> ExportType -> GetExport

-- | <i>See:</i> <a>newGetExportResponse</a> smart constructor.
data GetExportResponse
GetExportResponse' :: Maybe ExportStatus -> Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe Text -> Maybe ExportType -> Maybe Text -> Int -> GetExportResponse

-- | Create a value of <a>GetExportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportStatus:GetExportResponse'</a>,
--   <a>getExportResponse_exportStatus</a> - The status of the export.
--   
--   <ul>
--   <li><tt>IN_PROGRESS</tt> - The export is in progress.</li>
--   <li><tt>READY</tt> - The export is complete.</li>
--   <li><tt>FAILED</tt> - The export could not be completed.</li>
--   </ul>
--   
--   <a>$sel:version:GetExport'</a>, <a>getExportResponse_version</a> - The
--   version of the bot being exported.
--   
--   <a>$sel:resourceType:GetExport'</a>,
--   <a>getExportResponse_resourceType</a> - The type of the exported
--   resource.
--   
--   <a>$sel:name:GetExport'</a>, <a>getExportResponse_name</a> - The name
--   of the bot being exported.
--   
--   <a>$sel:failureReason:GetExportResponse'</a>,
--   <a>getExportResponse_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   export the resource.
--   
--   <a>$sel:exportType:GetExport'</a>, <a>getExportResponse_exportType</a>
--   - The format of the exported data.
--   
--   <a>$sel:url:GetExportResponse'</a>, <a>getExportResponse_url</a> - An
--   S3 pre-signed URL that provides the location of the exported resource.
--   The exported resource is a ZIP archive that contains the exported
--   resource in JSON format. The structure of the archive may change. Your
--   code should not rely on the archive structure.
--   
--   <a>$sel:httpStatus:GetExportResponse'</a>,
--   <a>getExportResponse_httpStatus</a> - The response's http status code.
newGetExportResponse :: Int -> GetExportResponse

-- | <i>See:</i> <a>newGetSlotType</a> smart constructor.
data GetSlotType
GetSlotType' :: Text -> Text -> GetSlotType

-- | Create a value of <a>GetSlotType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetSlotType'</a>, <a>getSlotType_name</a> - The name of
--   the slot type. The name is case sensitive.
--   
--   <a>$sel:version:GetSlotType'</a>, <a>getSlotType_version</a> - The
--   version of the slot type.
newGetSlotType :: Text -> Text -> GetSlotType

-- | <i>See:</i> <a>newGetSlotTypeResponse</a> smart constructor.
data GetSlotTypeResponse
GetSlotTypeResponse' :: Maybe [SlotTypeConfiguration] -> Maybe POSIX -> Maybe [EnumerationValue] -> Maybe POSIX -> Maybe SlotValueSelectionStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetSlotTypeResponse

-- | Create a value of <a>GetSlotTypeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypeConfigurations:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_slotTypeConfigurations</a> - Configuration
--   information that extends the parent built-in slot type.
--   
--   <a>$sel:createdDate:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_createdDate</a> - The date that the slot type
--   was created.
--   
--   <a>$sel:enumerationValues:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_enumerationValues</a> - A list of
--   <tt>EnumerationValue</tt> objects that defines the values that the
--   slot type can take.
--   
--   <a>$sel:lastUpdatedDate:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_lastUpdatedDate</a> - The date that the slot
--   type was updated. When you create a resource, the creation date and
--   last update date are the same.
--   
--   <a>$sel:valueSelectionStrategy:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_valueSelectionStrategy</a> - The strategy that
--   Amazon Lex uses to determine the value of the slot. For more
--   information, see PutSlotType.
--   
--   <a>$sel:version:GetSlotType'</a>, <a>getSlotTypeResponse_version</a> -
--   The version of the slot type.
--   
--   <a>$sel:name:GetSlotType'</a>, <a>getSlotTypeResponse_name</a> - The
--   name of the slot type.
--   
--   <a>$sel:parentSlotTypeSignature:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_parentSlotTypeSignature</a> - The built-in slot
--   type used as a parent for the slot type.
--   
--   <a>$sel:description:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_description</a> - A description of the slot
--   type.
--   
--   <a>$sel:checksum:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_checksum</a> - Checksum of the <tt>$LATEST</tt>
--   version of the slot type.
--   
--   <a>$sel:httpStatus:GetSlotTypeResponse'</a>,
--   <a>getSlotTypeResponse_httpStatus</a> - The response's http status
--   code.
newGetSlotTypeResponse :: Int -> GetSlotTypeResponse

-- | <i>See:</i> <a>newCreateIntentVersion</a> smart constructor.
data CreateIntentVersion
CreateIntentVersion' :: Maybe Text -> Text -> CreateIntentVersion

-- | Create a value of <a>CreateIntentVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksum:CreateIntentVersion'</a>,
--   <a>createIntentVersion_checksum</a> - Checksum of the <tt>$LATEST</tt>
--   version of the intent that should be used to create the new version.
--   If you specify a checksum and the <tt>$LATEST</tt> version of the
--   intent has a different checksum, Amazon Lex returns a
--   <tt>PreconditionFailedException</tt> exception and doesn't publish a
--   new version. If you don't specify a checksum, Amazon Lex publishes the
--   <tt>$LATEST</tt> version.
--   
--   <a>$sel:name:CreateIntentVersion'</a>, <a>createIntentVersion_name</a>
--   - The name of the intent that you want to create a new version of. The
--   name is case sensitive.
newCreateIntentVersion :: Text -> CreateIntentVersion

-- | <i>See:</i> <a>newCreateIntentVersionResponse</a> smart constructor.
data CreateIntentVersionResponse
CreateIntentVersionResponse' :: Maybe KendraConfiguration -> Maybe POSIX -> Maybe Text -> Maybe CodeHook -> Maybe Statement -> Maybe POSIX -> Maybe Statement -> Maybe [InputContext] -> Maybe Text -> Maybe [Slot] -> Maybe FulfillmentActivity -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Prompt -> Maybe [OutputContext] -> Maybe FollowUpPrompt -> Maybe Text -> Int -> CreateIntentVersionResponse

-- | Create a value of <a>CreateIntentVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kendraConfiguration:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_kendraConfiguration</a> - Configuration
--   information, if any, for connecting an Amazon Kendra index with the
--   <tt>AMAZON.KendraSearchIntent</tt> intent.
--   
--   <a>$sel:createdDate:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_createdDate</a> - The date that the
--   intent was created.
--   
--   <a>$sel:parentIntentSignature:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_parentIntentSignature</a> - A unique
--   identifier for a built-in intent.
--   
--   <a>$sel:dialogCodeHook:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_dialogCodeHook</a> - If defined, Amazon
--   Lex invokes this Lambda function for each user input.
--   
--   <a>$sel:conclusionStatement:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_conclusionStatement</a> - After the
--   Lambda function specified in the <tt>fulfillmentActivity</tt> field
--   fulfills the intent, Amazon Lex conveys this statement to the user.
--   
--   <a>$sel:lastUpdatedDate:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_lastUpdatedDate</a> - The date that the
--   intent was updated.
--   
--   <a>$sel:rejectionStatement:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_rejectionStatement</a> - If the user
--   answers "no" to the question defined in <tt>confirmationPrompt</tt>,
--   Amazon Lex responds with this statement to acknowledge that the intent
--   was canceled.
--   
--   <a>$sel:inputContexts:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_inputContexts</a> - An array of
--   <tt>InputContext</tt> objects that lists the contexts that must be
--   active for Amazon Lex to choose the intent in a conversation with the
--   user.
--   
--   <a>$sel:version:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_version</a> - The version number
--   assigned to the new version of the intent.
--   
--   <a>$sel:slots:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_slots</a> - An array of slot types that
--   defines the information required to fulfill the intent.
--   
--   <a>$sel:fulfillmentActivity:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_fulfillmentActivity</a> - Describes how
--   the intent is fulfilled.
--   
--   <a>$sel:name:CreateIntentVersion'</a>,
--   <a>createIntentVersionResponse_name</a> - The name of the intent.
--   
--   <a>$sel:sampleUtterances:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_sampleUtterances</a> - An array of
--   sample utterances configured for the intent.
--   
--   <a>$sel:description:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_description</a> - A description of the
--   intent.
--   
--   <a>$sel:confirmationPrompt:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_confirmationPrompt</a> - If defined,
--   the prompt that Amazon Lex uses to confirm the user's intent before
--   fulfilling it.
--   
--   <a>$sel:outputContexts:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_outputContexts</a> - An array of
--   <tt>OutputContext</tt> objects that lists the contexts that the intent
--   activates when the intent is fulfilled.
--   
--   <a>$sel:followUpPrompt:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_followUpPrompt</a> - If defined, Amazon
--   Lex uses this prompt to solicit additional user activity after the
--   intent is fulfilled.
--   
--   <a>$sel:checksum:CreateIntentVersion'</a>,
--   <a>createIntentVersionResponse_checksum</a> - Checksum of the intent
--   version created.
--   
--   <a>$sel:httpStatus:CreateIntentVersionResponse'</a>,
--   <a>createIntentVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateIntentVersionResponse :: Int -> CreateIntentVersionResponse

-- | <i>See:</i> <a>newGetBot</a> smart constructor.
data GetBot
GetBot' :: Text -> Text -> GetBot

-- | Create a value of <a>GetBot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetBot'</a>, <a>getBot_name</a> - The name of the bot.
--   The name is case sensitive.
--   
--   <a>$sel:versionOrAlias:GetBot'</a>, <a>getBot_versionOrAlias</a> - The
--   version or alias of the bot.
newGetBot :: Text -> Text -> GetBot

-- | <i>See:</i> <a>newGetBotResponse</a> smart constructor.
data GetBotResponse
GetBotResponse' :: Maybe Statement -> Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Prompt -> Maybe Double -> Maybe Locale -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [Intent] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> Int -> GetBotResponse

-- | Create a value of <a>GetBotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abortStatement:GetBotResponse'</a>,
--   <a>getBotResponse_abortStatement</a> - The message that Amazon Lex
--   returns when the user elects to end the conversation without
--   completing it. For more information, see PutBot.
--   
--   <a>$sel:createdDate:GetBotResponse'</a>,
--   <a>getBotResponse_createdDate</a> - The date that the bot was created.
--   
--   <a>$sel:status:GetBotResponse'</a>, <a>getBotResponse_status</a> - The
--   status of the bot.
--   
--   When the status is <tt>BUILDING</tt> Amazon Lex is building the bot
--   for testing and use.
--   
--   If the status of the bot is <tt>READY_BASIC_TESTING</tt>, you can test
--   the bot using the exact utterances specified in the bot's intents.
--   When the bot is ready for full testing or to run, the status is
--   <tt>READY</tt>.
--   
--   If there was a problem with building the bot, the status is
--   <tt>FAILED</tt> and the <tt>failureReason</tt> field explains why the
--   bot did not build.
--   
--   If the bot was saved but not built, the status is <tt>NOT_BUILT</tt>.
--   
--   <a>$sel:lastUpdatedDate:GetBotResponse'</a>,
--   <a>getBotResponse_lastUpdatedDate</a> - The date that the bot was
--   updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:voiceId:GetBotResponse'</a>, <a>getBotResponse_voiceId</a> -
--   The Amazon Polly voice ID that Amazon Lex uses for voice interaction
--   with the user. For more information, see PutBot.
--   
--   <a>$sel:clarificationPrompt:GetBotResponse'</a>,
--   <a>getBotResponse_clarificationPrompt</a> - The message Amazon Lex
--   uses when it doesn't understand the user's request. For more
--   information, see PutBot.
--   
--   <a>$sel:nluIntentConfidenceThreshold:GetBotResponse'</a>,
--   <a>getBotResponse_nluIntentConfidenceThreshold</a> - The score that
--   determines where Amazon Lex inserts the
--   <tt>AMAZON.FallbackIntent</tt>, <tt>AMAZON.KendraSearchIntent</tt>, or
--   both when returning alternative intents in a <a>PostContent</a> or
--   <a>PostText</a> response. <tt>AMAZON.FallbackIntent</tt> is inserted
--   if the confidence score for all intents is below this value.
--   <tt>AMAZON.KendraSearchIntent</tt> is only inserted if it is
--   configured for the bot.
--   
--   <a>$sel:locale:GetBotResponse'</a>, <a>getBotResponse_locale</a> - The
--   target locale for the bot.
--   
--   <a>$sel:enableModelImprovements:GetBotResponse'</a>,
--   <a>getBotResponse_enableModelImprovements</a> - Indicates whether the
--   bot uses accuracy improvements. <tt>true</tt> indicates that the bot
--   is using the improvements, otherwise, <tt>false</tt>.
--   
--   <a>$sel:version:GetBotResponse'</a>, <a>getBotResponse_version</a> -
--   The version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
--   
--   <a>$sel:idleSessionTTLInSeconds:GetBotResponse'</a>,
--   <a>getBotResponse_idleSessionTTLInSeconds</a> - The maximum time in
--   seconds that Amazon Lex retains the data gathered in a conversation.
--   For more information, see PutBot.
--   
--   <a>$sel:name:GetBot'</a>, <a>getBotResponse_name</a> - The name of the
--   bot.
--   
--   <a>$sel:intents:GetBotResponse'</a>, <a>getBotResponse_intents</a> -
--   An array of <tt>intent</tt> objects. For more information, see PutBot.
--   
--   <a>$sel:failureReason:GetBotResponse'</a>,
--   <a>getBotResponse_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex explains why it failed to build the bot.
--   
--   <a>$sel:childDirected:GetBotResponse'</a>,
--   <a>getBotResponse_childDirected</a> - For each Amazon Lex bot created
--   with the Amazon Lex Model Building Service, you must specify whether
--   your use of Amazon Lex is related to a website, program, or other
--   application that is directed or targeted, in whole or in part, to
--   children under age 13 and subject to the Children's Online Privacy
--   Protection Act (COPPA) by specifying <tt>true</tt> or <tt>false</tt>
--   in the <tt>childDirected</tt> field. By specifying <tt>true</tt> in
--   the <tt>childDirected</tt> field, you confirm that your use of Amazon
--   Lex <b>is</b> related to a website, program, or other application that
--   is directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA. By specifying <tt>false</tt> in the
--   <tt>childDirected</tt> field, you confirm that your use of Amazon Lex
--   <b>is not</b> related to a website, program, or other application that
--   is directed or targeted, in whole or in part, to children under age 13
--   and subject to COPPA. You may not specify a default value for the
--   <tt>childDirected</tt> field that does not accurately reflect whether
--   your use of Amazon Lex is related to a website, program, or other
--   application that is directed or targeted, in whole or in part, to
--   children under age 13 and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
--   
--   <a>$sel:description:GetBotResponse'</a>,
--   <a>getBotResponse_description</a> - A description of the bot.
--   
--   <a>$sel:detectSentiment:GetBotResponse'</a>,
--   <a>getBotResponse_detectSentiment</a> - Indicates whether user
--   utterances should be sent to Amazon Comprehend for sentiment analysis.
--   
--   <a>$sel:checksum:GetBotResponse'</a>, <a>getBotResponse_checksum</a> -
--   Checksum of the bot used to identify a specific revision of the bot's
--   <tt>$LATEST</tt> version.
--   
--   <a>$sel:httpStatus:GetBotResponse'</a>,
--   <a>getBotResponse_httpStatus</a> - The response's http status code.
newGetBotResponse :: Int -> GetBotResponse

-- | <i>See:</i> <a>newGetBotAliases</a> smart constructor.
data GetBotAliases
GetBotAliases' :: Maybe Text -> Maybe Text -> Maybe Natural -> Text -> GetBotAliases

-- | Create a value of <a>GetBotAliases</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetBotAliases'</a>,
--   <a>getBotAliases_nameContains</a> - Substring to match in bot alias
--   names. An alias will be returned if any part of its name matches the
--   substring. For example, "xyz" matches both "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetBotAliases'</a>, <a>getBotAliases_nextToken</a> -
--   A pagination token for fetching the next page of aliases. If the
--   response to this call is truncated, Amazon Lex returns a pagination
--   token in the response. To fetch the next page of aliases, specify the
--   pagination token in the next request.
--   
--   <a>$sel:maxResults:GetBotAliases'</a>, <a>getBotAliases_maxResults</a>
--   - The maximum number of aliases to return in the response. The default
--   is 50. .
--   
--   <a>$sel:botName:GetBotAliases'</a>, <a>getBotAliases_botName</a> - The
--   name of the bot.
newGetBotAliases :: Text -> GetBotAliases

-- | <i>See:</i> <a>newGetBotAliasesResponse</a> smart constructor.
data GetBotAliasesResponse
GetBotAliasesResponse' :: Maybe Text -> Maybe [BotAliasMetadata] -> Int -> GetBotAliasesResponse

-- | Create a value of <a>GetBotAliasesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBotAliases'</a>,
--   <a>getBotAliasesResponse_nextToken</a> - A pagination token for
--   fetching next page of aliases. If the response to this call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of aliases, specify the pagination token in the
--   next request.
--   
--   <a>$sel:botAliases:GetBotAliasesResponse'</a>,
--   <a>getBotAliasesResponse_botAliases</a> - An array of
--   <tt>BotAliasMetadata</tt> objects, each describing a bot alias.
--   
--   <a>$sel:httpStatus:GetBotAliasesResponse'</a>,
--   <a>getBotAliasesResponse_httpStatus</a> - The response's http status
--   code.
newGetBotAliasesResponse :: Int -> GetBotAliasesResponse

-- | <i>See:</i> <a>newDeleteIntentVersion</a> smart constructor.
data DeleteIntentVersion
DeleteIntentVersion' :: Text -> Text -> DeleteIntentVersion

-- | Create a value of <a>DeleteIntentVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteIntentVersion'</a>, <a>deleteIntentVersion_name</a>
--   - The name of the intent.
--   
--   <a>$sel:version:DeleteIntentVersion'</a>,
--   <a>deleteIntentVersion_version</a> - The version of the intent to
--   delete. You cannot delete the <tt>$LATEST</tt> version of the intent.
--   To delete the <tt>$LATEST</tt> version, use the DeleteIntent
--   operation.
newDeleteIntentVersion :: Text -> Text -> DeleteIntentVersion

-- | <i>See:</i> <a>newDeleteIntentVersionResponse</a> smart constructor.
data DeleteIntentVersionResponse
DeleteIntentVersionResponse' :: DeleteIntentVersionResponse

-- | Create a value of <a>DeleteIntentVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntentVersionResponse :: DeleteIntentVersionResponse

-- | <i>See:</i> <a>newCreateBotVersion</a> smart constructor.
data CreateBotVersion
CreateBotVersion' :: Maybe Text -> Text -> CreateBotVersion

-- | Create a value of <a>CreateBotVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksum:CreateBotVersion'</a>,
--   <a>createBotVersion_checksum</a> - Identifies a specific revision of
--   the <tt>$LATEST</tt> version of the bot. If you specify a checksum and
--   the <tt>$LATEST</tt> version of the bot has a different checksum, a
--   <tt>PreconditionFailedException</tt> exception is returned and Amazon
--   Lex doesn't publish a new version. If you don't specify a checksum,
--   Amazon Lex publishes the <tt>$LATEST</tt> version.
--   
--   <a>$sel:name:CreateBotVersion'</a>, <a>createBotVersion_name</a> - The
--   name of the bot that you want to create a new version of. The name is
--   case sensitive.
newCreateBotVersion :: Text -> CreateBotVersion

-- | <i>See:</i> <a>newCreateBotVersionResponse</a> smart constructor.
data CreateBotVersionResponse
CreateBotVersionResponse' :: Maybe Statement -> Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Prompt -> Maybe Locale -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [Intent] -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Text -> Int -> CreateBotVersionResponse

-- | Create a value of <a>CreateBotVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:abortStatement:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_abortStatement</a> - The message that
--   Amazon Lex uses to cancel a conversation. For more information, see
--   PutBot.
--   
--   <a>$sel:createdDate:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_createdDate</a> - The date when the bot
--   version was created.
--   
--   <a>$sel:status:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_status</a> - When you send a request to
--   create or update a bot, Amazon Lex sets the <tt>status</tt> response
--   element to <tt>BUILDING</tt>. After Amazon Lex builds the bot, it sets
--   <tt>status</tt> to <tt>READY</tt>. If Amazon Lex can't build the bot,
--   it sets <tt>status</tt> to <tt>FAILED</tt>. Amazon Lex returns the
--   reason for the failure in the <tt>failureReason</tt> response element.
--   
--   <a>$sel:lastUpdatedDate:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_lastUpdatedDate</a> - The date when the
--   <tt>$LATEST</tt> version of this bot was updated.
--   
--   <a>$sel:voiceId:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_voiceId</a> - The Amazon Polly voice ID
--   that Amazon Lex uses for voice interactions with the user.
--   
--   <a>$sel:clarificationPrompt:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_clarificationPrompt</a> - The message that
--   Amazon Lex uses when it doesn't understand the user's request. For
--   more information, see PutBot.
--   
--   <a>$sel:locale:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_locale</a> - Specifies the target locale
--   for the bot.
--   
--   <a>$sel:enableModelImprovements:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_enableModelImprovements</a> - Indicates
--   whether the bot uses accuracy improvements. <tt>true</tt> indicates
--   that the bot is using the improvements, otherwise, <tt>false</tt>.
--   
--   <a>$sel:version:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_version</a> - The version of the bot.
--   
--   <a>$sel:idleSessionTTLInSeconds:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_idleSessionTTLInSeconds</a> - The maximum
--   time in seconds that Amazon Lex retains the data gathered in a
--   conversation. For more information, see PutBot.
--   
--   <a>$sel:name:CreateBotVersion'</a>,
--   <a>createBotVersionResponse_name</a> - The name of the bot.
--   
--   <a>$sel:intents:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_intents</a> - An array of <tt>Intent</tt>
--   objects. For more information, see PutBot.
--   
--   <a>$sel:failureReason:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   build the bot.
--   
--   <a>$sel:childDirected:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_childDirected</a> - For each Amazon Lex
--   bot created with the Amazon Lex Model Building Service, you must
--   specify whether your use of Amazon Lex is related to a website,
--   program, or other application that is directed or targeted, in whole
--   or in part, to children under age 13 and subject to the Children's
--   Online Privacy Protection Act (COPPA) by specifying <tt>true</tt> or
--   <tt>false</tt> in the <tt>childDirected</tt> field. By specifying
--   <tt>true</tt> in the <tt>childDirected</tt> field, you confirm that
--   your use of Amazon Lex <b>is</b> related to a website, program, or
--   other application that is directed or targeted, in whole or in part,
--   to children under age 13 and subject to COPPA. By specifying
--   <tt>false</tt> in the <tt>childDirected</tt> field, you confirm that
--   your use of Amazon Lex <b>is not</b> related to a website, program, or
--   other application that is directed or targeted, in whole or in part,
--   to children under age 13 and subject to COPPA. You may not specify a
--   default value for the <tt>childDirected</tt> field that does not
--   accurately reflect whether your use of Amazon Lex is related to a
--   website, program, or other application that is directed or targeted,
--   in whole or in part, to children under age 13 and subject to COPPA.
--   
--   If your use of Amazon Lex relates to a website, program, or other
--   application that is directed in whole or in part, to children under
--   age 13, you must obtain any required verifiable parental consent under
--   COPPA. For information regarding the use of Amazon Lex in connection
--   with websites, programs, or other applications that are directed or
--   targeted, in whole or in part, to children under age 13, see the
--   <a>Amazon Lex FAQ.</a>
--   
--   <a>$sel:description:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_description</a> - A description of the
--   bot.
--   
--   <a>$sel:detectSentiment:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_detectSentiment</a> - Indicates whether
--   utterances entered by the user should be sent to Amazon Comprehend for
--   sentiment analysis.
--   
--   <a>$sel:checksum:CreateBotVersion'</a>,
--   <a>createBotVersionResponse_checksum</a> - Checksum identifying the
--   version of the bot that was created.
--   
--   <a>$sel:httpStatus:CreateBotVersionResponse'</a>,
--   <a>createBotVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateBotVersionResponse :: Int -> CreateBotVersionResponse

-- | <i>See:</i> <a>newGetIntents</a> smart constructor.
data GetIntents
GetIntents' :: Maybe Text -> Maybe Text -> Maybe Natural -> GetIntents

-- | Create a value of <a>GetIntents</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameContains:GetIntents'</a>, <a>getIntents_nameContains</a> -
--   Substring to match in intent names. An intent will be returned if any
--   part of its name matches the substring. For example, "xyz" matches
--   both "xyzabc" and "abcxyz."
--   
--   <a>$sel:nextToken:GetIntents'</a>, <a>getIntents_nextToken</a> - A
--   pagination token that fetches the next page of intents. If the
--   response to this API call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of intents,
--   specify the pagination token in the next request.
--   
--   <a>$sel:maxResults:GetIntents'</a>, <a>getIntents_maxResults</a> - The
--   maximum number of intents to return in the response. The default is
--   10.
newGetIntents :: GetIntents

-- | <i>See:</i> <a>newGetIntentsResponse</a> smart constructor.
data GetIntentsResponse
GetIntentsResponse' :: Maybe Text -> Maybe [IntentMetadata] -> Int -> GetIntentsResponse

-- | Create a value of <a>GetIntentsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntents'</a>, <a>getIntentsResponse_nextToken</a>
--   - If the response is truncated, the response includes a pagination
--   token that you can specify in your next request to fetch the next page
--   of intents.
--   
--   <a>$sel:intents:GetIntentsResponse'</a>,
--   <a>getIntentsResponse_intents</a> - An array of <tt>Intent</tt>
--   objects. For more information, see PutBot.
--   
--   <a>$sel:httpStatus:GetIntentsResponse'</a>,
--   <a>getIntentsResponse_httpStatus</a> - The response's http status
--   code.
newGetIntentsResponse :: Int -> GetIntentsResponse

-- | <i>See:</i> <a>newGetMigrations</a> smart constructor.
data GetMigrations
GetMigrations' :: Maybe MigrationStatus -> Maybe Text -> Maybe Natural -> Maybe MigrationSortAttribute -> Maybe Text -> Maybe SortOrder -> GetMigrations

-- | Create a value of <a>GetMigrations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:migrationStatusEquals:GetMigrations'</a>,
--   <a>getMigrations_migrationStatusEquals</a> - Filters the list to
--   contain only migrations in the specified state.
--   
--   <a>$sel:nextToken:GetMigrations'</a>, <a>getMigrations_nextToken</a> -
--   A pagination token that fetches the next page of migrations. If the
--   response to this operation is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of
--   migrations, specify the pagination token in the request.
--   
--   <a>$sel:maxResults:GetMigrations'</a>, <a>getMigrations_maxResults</a>
--   - The maximum number of migrations to return in the response. The
--   default is 10.
--   
--   <a>$sel:sortByAttribute:GetMigrations'</a>,
--   <a>getMigrations_sortByAttribute</a> - The field to sort the list of
--   migrations by. You can sort by the Amazon Lex V1 bot name or the date
--   and time that the migration was started.
--   
--   <a>$sel:v1BotNameContains:GetMigrations'</a>,
--   <a>getMigrations_v1BotNameContains</a> - Filters the list to contain
--   only bots whose name contains the specified string. The string is
--   matched anywhere in bot name.
--   
--   <a>$sel:sortByOrder:GetMigrations'</a>,
--   <a>getMigrations_sortByOrder</a> - The order so sort the list.
newGetMigrations :: GetMigrations

-- | <i>See:</i> <a>newGetMigrationsResponse</a> smart constructor.
data GetMigrationsResponse
GetMigrationsResponse' :: Maybe Text -> Maybe [MigrationSummary] -> Int -> GetMigrationsResponse

-- | Create a value of <a>GetMigrationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMigrations'</a>,
--   <a>getMigrationsResponse_nextToken</a> - If the response is truncated,
--   it includes a pagination token that you can specify in your next
--   request to fetch the next page of migrations.
--   
--   <a>$sel:migrationSummaries:GetMigrationsResponse'</a>,
--   <a>getMigrationsResponse_migrationSummaries</a> - An array of
--   summaries for migrations from Amazon Lex V1 to Amazon Lex V2. To see
--   details of the migration, use the <tt>migrationId</tt> from the
--   summary in a call to the operation.
--   
--   <a>$sel:httpStatus:GetMigrationsResponse'</a>,
--   <a>getMigrationsResponse_httpStatus</a> - The response's http status
--   code.
newGetMigrationsResponse :: Int -> GetMigrationsResponse

-- | <i>See:</i> <a>newGetBotVersions</a> smart constructor.
data GetBotVersions
GetBotVersions' :: Maybe Text -> Maybe Natural -> Text -> GetBotVersions

-- | Create a value of <a>GetBotVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBotVersions'</a>, <a>getBotVersions_nextToken</a>
--   - A pagination token for fetching the next page of bot versions. If
--   the response to this call is truncated, Amazon Lex returns a
--   pagination token in the response. To fetch the next page of versions,
--   specify the pagination token in the next request.
--   
--   <a>$sel:maxResults:GetBotVersions'</a>,
--   <a>getBotVersions_maxResults</a> - The maximum number of bot versions
--   to return in the response. The default is 10.
--   
--   <a>$sel:name:GetBotVersions'</a>, <a>getBotVersions_name</a> - The
--   name of the bot for which versions should be returned.
newGetBotVersions :: Text -> GetBotVersions

-- | <i>See:</i> <a>newGetBotVersionsResponse</a> smart constructor.
data GetBotVersionsResponse
GetBotVersionsResponse' :: Maybe Text -> Maybe [BotMetadata] -> Int -> GetBotVersionsResponse

-- | Create a value of <a>GetBotVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBotVersions'</a>,
--   <a>getBotVersionsResponse_nextToken</a> - A pagination token for
--   fetching the next page of bot versions. If the response to this call
--   is truncated, Amazon Lex returns a pagination token in the response.
--   To fetch the next page of versions, specify the pagination token in
--   the next request.
--   
--   <a>$sel:bots:GetBotVersionsResponse'</a>,
--   <a>getBotVersionsResponse_bots</a> - An array of <tt>BotMetadata</tt>
--   objects, one for each numbered version of the bot plus one for the
--   <tt>$LATEST</tt> version.
--   
--   <a>$sel:httpStatus:GetBotVersionsResponse'</a>,
--   <a>getBotVersionsResponse_httpStatus</a> - The response's http status
--   code.
newGetBotVersionsResponse :: Int -> GetBotVersionsResponse

-- | <i>See:</i> <a>newDeleteBotAlias</a> smart constructor.
data DeleteBotAlias
DeleteBotAlias' :: Text -> Text -> DeleteBotAlias

-- | Create a value of <a>DeleteBotAlias</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBotAlias'</a>, <a>deleteBotAlias_name</a> - The
--   name of the alias to delete. The name is case sensitive.
--   
--   <a>$sel:botName:DeleteBotAlias'</a>, <a>deleteBotAlias_botName</a> -
--   The name of the bot that the alias points to.
newDeleteBotAlias :: Text -> Text -> DeleteBotAlias

-- | <i>See:</i> <a>newDeleteBotAliasResponse</a> smart constructor.
data DeleteBotAliasResponse
DeleteBotAliasResponse' :: DeleteBotAliasResponse

-- | Create a value of <a>DeleteBotAliasResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBotAliasResponse :: DeleteBotAliasResponse

-- | <i>See:</i> <a>newGetIntentVersions</a> smart constructor.
data GetIntentVersions
GetIntentVersions' :: Maybe Text -> Maybe Natural -> Text -> GetIntentVersions

-- | Create a value of <a>GetIntentVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntentVersions'</a>,
--   <a>getIntentVersions_nextToken</a> - A pagination token for fetching
--   the next page of intent versions. If the response to this call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of versions, specify the pagination token in the
--   next request.
--   
--   <a>$sel:maxResults:GetIntentVersions'</a>,
--   <a>getIntentVersions_maxResults</a> - The maximum number of intent
--   versions to return in the response. The default is 10.
--   
--   <a>$sel:name:GetIntentVersions'</a>, <a>getIntentVersions_name</a> -
--   The name of the intent for which versions should be returned.
newGetIntentVersions :: Text -> GetIntentVersions

-- | <i>See:</i> <a>newGetIntentVersionsResponse</a> smart constructor.
data GetIntentVersionsResponse
GetIntentVersionsResponse' :: Maybe Text -> Maybe [IntentMetadata] -> Int -> GetIntentVersionsResponse

-- | Create a value of <a>GetIntentVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntentVersions'</a>,
--   <a>getIntentVersionsResponse_nextToken</a> - A pagination token for
--   fetching the next page of intent versions. If the response to this
--   call is truncated, Amazon Lex returns a pagination token in the
--   response. To fetch the next page of versions, specify the pagination
--   token in the next request.
--   
--   <a>$sel:intents:GetIntentVersionsResponse'</a>,
--   <a>getIntentVersionsResponse_intents</a> - An array of
--   <tt>IntentMetadata</tt> objects, one for each numbered version of the
--   intent plus one for the <tt>$LATEST</tt> version.
--   
--   <a>$sel:httpStatus:GetIntentVersionsResponse'</a>,
--   <a>getIntentVersionsResponse_httpStatus</a> - The response's http
--   status code.
newGetIntentVersionsResponse :: Int -> GetIntentVersionsResponse

-- | <i>See:</i> <a>newGetImport</a> smart constructor.
data GetImport
GetImport' :: Text -> GetImport

-- | Create a value of <a>GetImport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:importId:GetImport'</a>, <a>getImport_importId</a> - The
--   identifier of the import job information to return.
newGetImport :: Text -> GetImport

-- | <i>See:</i> <a>newGetImportResponse</a> smart constructor.
data GetImportResponse
GetImportResponse' :: Maybe POSIX -> Maybe MergeStrategy -> Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe [Text] -> Maybe ImportStatus -> Int -> GetImportResponse

-- | Create a value of <a>GetImportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:GetImportResponse'</a>,
--   <a>getImportResponse_createdDate</a> - A timestamp for the date and
--   time that the import job was created.
--   
--   <a>$sel:mergeStrategy:GetImportResponse'</a>,
--   <a>getImportResponse_mergeStrategy</a> - The action taken when there
--   was a conflict between an existing resource and a resource in the
--   import file.
--   
--   <a>$sel:importId:GetImport'</a>, <a>getImportResponse_importId</a> -
--   The identifier for the specific import job.
--   
--   <a>$sel:resourceType:GetImportResponse'</a>,
--   <a>getImportResponse_resourceType</a> - The type of resource imported.
--   
--   <a>$sel:name:GetImportResponse'</a>, <a>getImportResponse_name</a> -
--   The name given to the import job.
--   
--   <a>$sel:failureReason:GetImportResponse'</a>,
--   <a>getImportResponse_failureReason</a> - A string that describes why
--   an import job failed to complete.
--   
--   <a>$sel:importStatus:GetImportResponse'</a>,
--   <a>getImportResponse_importStatus</a> - The status of the import job.
--   If the status is <tt>FAILED</tt>, you can get the reason for the
--   failure from the <tt>failureReason</tt> field.
--   
--   <a>$sel:httpStatus:GetImportResponse'</a>,
--   <a>getImportResponse_httpStatus</a> - The response's http status code.
newGetImportResponse :: Int -> GetImportResponse

-- | <i>See:</i> <a>newGetBuiltinIntents</a> smart constructor.
data GetBuiltinIntents
GetBuiltinIntents' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Locale -> GetBuiltinIntents

-- | Create a value of <a>GetBuiltinIntents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signatureContains:GetBuiltinIntents'</a>,
--   <a>getBuiltinIntents_signatureContains</a> - Substring to match in
--   built-in intent signatures. An intent will be returned if any part of
--   its signature matches the substring. For example, "xyz" matches both
--   "xyzabc" and "abcxyz." To find the signature for an intent, see
--   <a>Standard Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
--   
--   <a>$sel:nextToken:GetBuiltinIntents'</a>,
--   <a>getBuiltinIntents_nextToken</a> - A pagination token that fetches
--   the next page of intents. If this API call is truncated, Amazon Lex
--   returns a pagination token in the response. To fetch the next page of
--   intents, use the pagination token in the next request.
--   
--   <a>$sel:maxResults:GetBuiltinIntents'</a>,
--   <a>getBuiltinIntents_maxResults</a> - The maximum number of intents to
--   return in the response. The default is 10.
--   
--   <a>$sel:locale:GetBuiltinIntents'</a>, <a>getBuiltinIntents_locale</a>
--   - A list of locales that the intent supports.
newGetBuiltinIntents :: GetBuiltinIntents

-- | <i>See:</i> <a>newGetBuiltinIntentsResponse</a> smart constructor.
data GetBuiltinIntentsResponse
GetBuiltinIntentsResponse' :: Maybe Text -> Maybe [BuiltinIntentMetadata] -> Int -> GetBuiltinIntentsResponse

-- | Create a value of <a>GetBuiltinIntentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetBuiltinIntents'</a>,
--   <a>getBuiltinIntentsResponse_nextToken</a> - A pagination token that
--   fetches the next page of intents. If the response to this API call is
--   truncated, Amazon Lex returns a pagination token in the response. To
--   fetch the next page of intents, specify the pagination token in the
--   next request.
--   
--   <a>$sel:intents:GetBuiltinIntentsResponse'</a>,
--   <a>getBuiltinIntentsResponse_intents</a> - An array of
--   <tt>builtinIntentMetadata</tt> objects, one for each intent in the
--   response.
--   
--   <a>$sel:httpStatus:GetBuiltinIntentsResponse'</a>,
--   <a>getBuiltinIntentsResponse_httpStatus</a> - The response's http
--   status code.
newGetBuiltinIntentsResponse :: Int -> GetBuiltinIntentsResponse

-- | <i>See:</i> <a>newDeleteBot</a> smart constructor.
data DeleteBot
DeleteBot' :: Text -> DeleteBot

-- | Create a value of <a>DeleteBot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBot'</a>, <a>deleteBot_name</a> - The name of the
--   bot. The name is case sensitive.
newDeleteBot :: Text -> DeleteBot

-- | <i>See:</i> <a>newDeleteBotResponse</a> smart constructor.
data DeleteBotResponse
DeleteBotResponse' :: DeleteBotResponse

-- | Create a value of <a>DeleteBotResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBotResponse :: DeleteBotResponse

-- | <i>See:</i> <a>newStartImport</a> smart constructor.
data StartImport
StartImport' :: Maybe [Tag] -> Base64 -> ResourceType -> MergeStrategy -> StartImport

-- | Create a value of <a>StartImport</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:StartImport'</a>, <a>startImport_tags</a> - A list of
--   tags to add to the imported bot. You can only add tags when you import
--   a bot, you can't add tags to an intent or slot type.
--   
--   <a>$sel:payload:StartImport'</a>, <a>startImport_payload</a> - A zip
--   archive in binary format. The archive should contain one file, a JSON
--   file containing the resource to import. The resource should match the
--   type specified in the <tt>resourceType</tt> field.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:resourceType:StartImport'</a>, <a>startImport_resourceType</a>
--   - Specifies the type of resource to export. Each resource also exports
--   any resources that it depends on.
--   
--   <ul>
--   <li>A bot exports dependent intents.</li>
--   <li>An intent exports dependent slot types.</li>
--   </ul>
--   
--   <a>$sel:mergeStrategy:StartImport'</a>,
--   <a>startImport_mergeStrategy</a> - Specifies the action that the
--   <tt>StartImport</tt> operation should take when there is an existing
--   resource with the same name.
--   
--   <ul>
--   <li>FAIL_ON_CONFLICT - The import operation is stopped on the first
--   conflict between a resource in the import file and an existing
--   resource. The name of the resource causing the conflict is in the
--   <tt>failureReason</tt> field of the response to the <tt>GetImport</tt>
--   operation.OVERWRITE_LATEST - The import operation proceeds even if
--   there is a conflict with an existing resource. The $LASTEST version of
--   the existing resource is overwritten with the data from the import
--   file.</li>
--   </ul>
newStartImport :: ByteString -> ResourceType -> MergeStrategy -> StartImport

-- | <i>See:</i> <a>newStartImportResponse</a> smart constructor.
data StartImportResponse
StartImportResponse' :: Maybe POSIX -> Maybe MergeStrategy -> Maybe Text -> Maybe ResourceType -> Maybe Text -> Maybe ImportStatus -> Maybe [Tag] -> Int -> StartImportResponse

-- | Create a value of <a>StartImportResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:StartImportResponse'</a>,
--   <a>startImportResponse_createdDate</a> - A timestamp for the date and
--   time that the import job was requested.
--   
--   <a>$sel:mergeStrategy:StartImport'</a>,
--   <a>startImportResponse_mergeStrategy</a> - The action to take when
--   there is a merge conflict.
--   
--   <a>$sel:importId:StartImportResponse'</a>,
--   <a>startImportResponse_importId</a> - The identifier for the specific
--   import job.
--   
--   <a>$sel:resourceType:StartImport'</a>,
--   <a>startImportResponse_resourceType</a> - The type of resource to
--   import.
--   
--   <a>$sel:name:StartImportResponse'</a>, <a>startImportResponse_name</a>
--   - The name given to the import job.
--   
--   <a>$sel:importStatus:StartImportResponse'</a>,
--   <a>startImportResponse_importStatus</a> - The status of the import
--   job. If the status is <tt>FAILED</tt>, you can get the reason for the
--   failure using the <tt>GetImport</tt> operation.
--   
--   <a>$sel:tags:StartImport'</a>, <a>startImportResponse_tags</a> - A
--   list of tags added to the imported bot.
--   
--   <a>$sel:httpStatus:StartImportResponse'</a>,
--   <a>startImportResponse_httpStatus</a> - The response's http status
--   code.
newStartImportResponse :: Int -> StartImportResponse

-- | <i>See:</i> <a>newPutSlotType</a> smart constructor.
data PutSlotType
PutSlotType' :: Maybe [SlotTypeConfiguration] -> Maybe [EnumerationValue] -> Maybe SlotValueSelectionStrategy -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Text -> PutSlotType

-- | Create a value of <a>PutSlotType</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypeConfigurations:PutSlotType'</a>,
--   <a>putSlotType_slotTypeConfigurations</a> - Configuration information
--   that extends the parent built-in slot type. The configuration is added
--   to the settings for the parent slot type.
--   
--   <a>$sel:enumerationValues:PutSlotType'</a>,
--   <a>putSlotType_enumerationValues</a> - A list of
--   <tt>EnumerationValue</tt> objects that defines the values that the
--   slot type can take. Each value can have a list of <tt>synonyms</tt>,
--   which are additional values that help train the machine learning model
--   about the values that it resolves for a slot.
--   
--   A regular expression slot type doesn't require enumeration values. All
--   other slot types require a list of enumeration values.
--   
--   When Amazon Lex resolves a slot value, it generates a resolution list
--   that contains up to five possible values for the slot. If you are
--   using a Lambda function, this resolution list is passed to the
--   function. If you are not using a Lambda function you can choose to
--   return the value that the user entered or the first value in the
--   resolution list as the slot value. The <tt>valueSelectionStrategy</tt>
--   field indicates the option to use.
--   
--   <a>$sel:valueSelectionStrategy:PutSlotType'</a>,
--   <a>putSlotType_valueSelectionStrategy</a> - Determines the slot
--   resolution strategy that Amazon Lex uses to return slot type values.
--   The field can be set to one of the following values:
--   
--   <ul>
--   <li><tt>ORIGINAL_VALUE</tt> - Returns the value entered by the user,
--   if the user value is similar to the slot value.</li>
--   <li><tt>TOP_RESOLUTION</tt> - If there is a resolution list for the
--   slot, return the first value in the resolution list as the slot type
--   value. If there is no resolution list, null is returned.</li>
--   </ul>
--   
--   If you don't specify the <tt>valueSelectionStrategy</tt>, the default
--   is <tt>ORIGINAL_VALUE</tt>.
--   
--   <a>$sel:parentSlotTypeSignature:PutSlotType'</a>,
--   <a>putSlotType_parentSlotTypeSignature</a> - The built-in slot type
--   used as the parent of the slot type. When you define a parent slot
--   type, the new slot type has all of the same configuration as the
--   parent.
--   
--   Only <tt>AMAZON.AlphaNumeric</tt> is supported.
--   
--   <a>$sel:description:PutSlotType'</a>, <a>putSlotType_description</a> -
--   A description of the slot type.
--   
--   <a>$sel:createVersion:PutSlotType'</a>,
--   <a>putSlotType_createVersion</a> - When set to <tt>true</tt> a new
--   numbered version of the slot type is created. This is the same as
--   calling the <tt>CreateSlotTypeVersion</tt> operation. If you do not
--   specify <tt>createVersion</tt>, the default is <tt>false</tt>.
--   
--   <a>$sel:checksum:PutSlotType'</a>, <a>putSlotType_checksum</a> -
--   Identifies a specific revision of the <tt>$LATEST</tt> version.
--   
--   When you create a new slot type, leave the <tt>checksum</tt> field
--   blank. If you specify a checksum you get a
--   <tt>BadRequestException</tt> exception.
--   
--   When you want to update a slot type, set the <tt>checksum</tt> field
--   to the checksum of the most recent revision of the <tt>$LATEST</tt>
--   version. If you don't specify the <tt> checksum</tt> field, or if the
--   checksum does not match the <tt>$LATEST</tt> version, you get a
--   <tt>PreconditionFailedException</tt> exception.
--   
--   <a>$sel:name:PutSlotType'</a>, <a>putSlotType_name</a> - The name of
--   the slot type. The name is <i>not</i> case sensitive.
--   
--   The name can't match a built-in slot type name, or a built-in slot
--   type name with "AMAZON." removed. For example, because there is a
--   built-in slot type called <tt>AMAZON.DATE</tt>, you can't create a
--   custom slot type called <tt>DATE</tt>.
--   
--   For a list of built-in slot types, see <a>Slot Type Reference</a> in
--   the <i>Alexa Skills Kit</i>.
newPutSlotType :: Text -> PutSlotType

-- | <i>See:</i> <a>newPutSlotTypeResponse</a> smart constructor.
data PutSlotTypeResponse
PutSlotTypeResponse' :: Maybe [SlotTypeConfiguration] -> Maybe POSIX -> Maybe [EnumerationValue] -> Maybe POSIX -> Maybe SlotValueSelectionStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Int -> PutSlotTypeResponse

-- | Create a value of <a>PutSlotTypeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypeConfigurations:PutSlotType'</a>,
--   <a>putSlotTypeResponse_slotTypeConfigurations</a> - Configuration
--   information that extends the parent built-in slot type.
--   
--   <a>$sel:createdDate:PutSlotTypeResponse'</a>,
--   <a>putSlotTypeResponse_createdDate</a> - The date that the slot type
--   was created.
--   
--   <a>$sel:enumerationValues:PutSlotType'</a>,
--   <a>putSlotTypeResponse_enumerationValues</a> - A list of
--   <tt>EnumerationValue</tt> objects that defines the values that the
--   slot type can take.
--   
--   <a>$sel:lastUpdatedDate:PutSlotTypeResponse'</a>,
--   <a>putSlotTypeResponse_lastUpdatedDate</a> - The date that the slot
--   type was updated. When you create a slot type, the creation date and
--   last update date are the same.
--   
--   <a>$sel:valueSelectionStrategy:PutSlotType'</a>,
--   <a>putSlotTypeResponse_valueSelectionStrategy</a> - The slot
--   resolution strategy that Amazon Lex uses to determine the value of the
--   slot. For more information, see PutSlotType.
--   
--   <a>$sel:version:PutSlotTypeResponse'</a>,
--   <a>putSlotTypeResponse_version</a> - The version of the slot type. For
--   a new slot type, the version is always <tt>$LATEST</tt>.
--   
--   <a>$sel:name:PutSlotType'</a>, <a>putSlotTypeResponse_name</a> - The
--   name of the slot type.
--   
--   <a>$sel:parentSlotTypeSignature:PutSlotType'</a>,
--   <a>putSlotTypeResponse_parentSlotTypeSignature</a> - The built-in slot
--   type used as the parent of the slot type.
--   
--   <a>$sel:description:PutSlotType'</a>,
--   <a>putSlotTypeResponse_description</a> - A description of the slot
--   type.
--   
--   <a>$sel:createVersion:PutSlotType'</a>,
--   <a>putSlotTypeResponse_createVersion</a> - <tt>True</tt> if a new
--   version of the slot type was created. If the <tt>createVersion</tt>
--   field was not specified in the request, the <tt>createVersion</tt>
--   field is set to false in the response.
--   
--   <a>$sel:checksum:PutSlotType'</a>, <a>putSlotTypeResponse_checksum</a>
--   - Checksum of the <tt>$LATEST</tt> version of the slot type.
--   
--   <a>$sel:httpStatus:PutSlotTypeResponse'</a>,
--   <a>putSlotTypeResponse_httpStatus</a> - The response's http status
--   code.
newPutSlotTypeResponse :: Int -> PutSlotTypeResponse

-- | <i>See:</i> <a>newDeleteIntent</a> smart constructor.
data DeleteIntent
DeleteIntent' :: Text -> DeleteIntent

-- | Create a value of <a>DeleteIntent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteIntent'</a>, <a>deleteIntent_name</a> - The name of
--   the intent. The name is case sensitive.
newDeleteIntent :: Text -> DeleteIntent

-- | <i>See:</i> <a>newDeleteIntentResponse</a> smart constructor.
data DeleteIntentResponse
DeleteIntentResponse' :: DeleteIntentResponse

-- | Create a value of <a>DeleteIntentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntentResponse :: DeleteIntentResponse

-- | <i>See:</i> <a>newCreateSlotTypeVersion</a> smart constructor.
data CreateSlotTypeVersion
CreateSlotTypeVersion' :: Maybe Text -> Text -> CreateSlotTypeVersion

-- | Create a value of <a>CreateSlotTypeVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksum:CreateSlotTypeVersion'</a>,
--   <a>createSlotTypeVersion_checksum</a> - Checksum for the
--   <tt>$LATEST</tt> version of the slot type that you want to publish. If
--   you specify a checksum and the <tt>$LATEST</tt> version of the slot
--   type has a different checksum, Amazon Lex returns a
--   <tt>PreconditionFailedException</tt> exception and doesn't publish the
--   new version. If you don't specify a checksum, Amazon Lex publishes the
--   <tt>$LATEST</tt> version.
--   
--   <a>$sel:name:CreateSlotTypeVersion'</a>,
--   <a>createSlotTypeVersion_name</a> - The name of the slot type that you
--   want to create a new version for. The name is case sensitive.
newCreateSlotTypeVersion :: Text -> CreateSlotTypeVersion

-- | <i>See:</i> <a>newCreateSlotTypeVersionResponse</a> smart constructor.
data CreateSlotTypeVersionResponse
CreateSlotTypeVersionResponse' :: Maybe [SlotTypeConfiguration] -> Maybe POSIX -> Maybe [EnumerationValue] -> Maybe POSIX -> Maybe SlotValueSelectionStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSlotTypeVersionResponse

-- | Create a value of <a>CreateSlotTypeVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:slotTypeConfigurations:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_slotTypeConfigurations</a> -
--   Configuration information that extends the parent built-in slot type.
--   
--   <a>$sel:createdDate:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_createdDate</a> - The date that the
--   slot type was created.
--   
--   <a>$sel:enumerationValues:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_enumerationValues</a> - A list of
--   <tt>EnumerationValue</tt> objects that defines the values that the
--   slot type can take.
--   
--   <a>$sel:lastUpdatedDate:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_lastUpdatedDate</a> - The date that
--   the slot type was updated. When you create a resource, the creation
--   date and last update date are the same.
--   
--   <a>$sel:valueSelectionStrategy:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_valueSelectionStrategy</a> - The
--   strategy that Amazon Lex uses to determine the value of the slot. For
--   more information, see PutSlotType.
--   
--   <a>$sel:version:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_version</a> - The version assigned to
--   the new slot type version.
--   
--   <a>$sel:name:CreateSlotTypeVersion'</a>,
--   <a>createSlotTypeVersionResponse_name</a> - The name of the slot type.
--   
--   <a>$sel:parentSlotTypeSignature:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_parentSlotTypeSignature</a> - The
--   built-in slot type used a the parent of the slot type.
--   
--   <a>$sel:description:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_description</a> - A description of
--   the slot type.
--   
--   <a>$sel:checksum:CreateSlotTypeVersion'</a>,
--   <a>createSlotTypeVersionResponse_checksum</a> - Checksum of the
--   <tt>$LATEST</tt> version of the slot type.
--   
--   <a>$sel:httpStatus:CreateSlotTypeVersionResponse'</a>,
--   <a>createSlotTypeVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateSlotTypeVersionResponse :: Int -> CreateSlotTypeVersionResponse

-- | <i>See:</i> <a>newDeleteBotChannelAssociation</a> smart constructor.
data DeleteBotChannelAssociation
DeleteBotChannelAssociation' :: Text -> Text -> Text -> DeleteBotChannelAssociation

-- | Create a value of <a>DeleteBotChannelAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBotChannelAssociation'</a>,
--   <a>deleteBotChannelAssociation_name</a> - The name of the association.
--   The name is case sensitive.
--   
--   <a>$sel:botName:DeleteBotChannelAssociation'</a>,
--   <a>deleteBotChannelAssociation_botName</a> - The name of the Amazon
--   Lex bot.
--   
--   <a>$sel:botAlias:DeleteBotChannelAssociation'</a>,
--   <a>deleteBotChannelAssociation_botAlias</a> - An alias that points to
--   the specific version of the Amazon Lex bot to which this association
--   is being made.
newDeleteBotChannelAssociation :: Text -> Text -> Text -> DeleteBotChannelAssociation

-- | <i>See:</i> <a>newDeleteBotChannelAssociationResponse</a> smart
--   constructor.
data DeleteBotChannelAssociationResponse
DeleteBotChannelAssociationResponse' :: DeleteBotChannelAssociationResponse

-- | Create a value of <a>DeleteBotChannelAssociationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBotChannelAssociationResponse :: DeleteBotChannelAssociationResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource to get a list of tags for.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags associated with a
--   resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetMigration</a> smart constructor.
data GetMigration
GetMigration' :: Text -> GetMigration

-- | Create a value of <a>GetMigration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:migrationId:GetMigration'</a>, <a>getMigration_migrationId</a>
--   - The unique identifier of the migration to view. The
--   <tt>migrationID</tt> is returned by the operation.
newGetMigration :: Text -> GetMigration

-- | <i>See:</i> <a>newGetMigrationResponse</a> smart constructor.
data GetMigrationResponse
GetMigrationResponse' :: Maybe Text -> Maybe Text -> Maybe Locale -> Maybe POSIX -> Maybe MigrationStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MigrationStatus -> Maybe [MigrationAlert] -> Int -> GetMigrationResponse

-- | Create a value of <a>GetMigrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotVersion:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v1BotVersion</a> - The version of the Amazon
--   Lex V1 bot migrated to Amazon Lex V2.
--   
--   <a>$sel:migrationId:GetMigration'</a>,
--   <a>getMigrationResponse_migrationId</a> - The unique identifier of the
--   migration. This is the same as the identifier used when calling the
--   <tt>GetMigration</tt> operation.
--   
--   <a>$sel:v1BotLocale:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v1BotLocale</a> - The locale of the Amazon Lex
--   V1 bot migrated to Amazon Lex V2.
--   
--   <a>$sel:migrationTimestamp:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_migrationTimestamp</a> - The date and time
--   that the migration started.
--   
--   <a>$sel:migrationStrategy:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_migrationStrategy</a> - The strategy used to
--   conduct the migration.
--   
--   <ul>
--   <li><tt>CREATE_NEW</tt> - Creates a new Amazon Lex V2 bot and migrates
--   the Amazon Lex V1 bot to the new bot.</li>
--   <li><tt>UPDATE_EXISTING</tt> - Overwrites the existing Amazon Lex V2
--   bot metadata and the locale being migrated. It doesn't change any
--   other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a
--   new locale is created in the Amazon Lex V2 bot.</li>
--   </ul>
--   
--   <a>$sel:v2BotRole:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v2BotRole</a> - The IAM role that Amazon Lex
--   uses to run the Amazon Lex V2 bot.
--   
--   <a>$sel:v1BotName:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v1BotName</a> - The name of the Amazon Lex V1
--   bot migrated to Amazon Lex V2.
--   
--   <a>$sel:v2BotId:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_v2BotId</a> - The unique identifier of the
--   Amazon Lex V2 bot that the Amazon Lex V1 is being migrated to.
--   
--   <a>$sel:migrationStatus:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_migrationStatus</a> - Indicates the status of
--   the migration. When the status is <tt>COMPLETE</tt> the migration is
--   finished and the bot is available in Amazon Lex V2. There may be
--   alerts and warnings that need to be resolved to complete the
--   migration.
--   
--   <a>$sel:alerts:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_alerts</a> - A list of alerts and warnings
--   that indicate issues with the migration for the Amazon Lex V1 bot to
--   Amazon Lex V2. You receive a warning when an Amazon Lex V1 feature has
--   a different implementation if Amazon Lex V2.
--   
--   For more information, see <a>Migrating a bot</a> in the <i>Amazon Lex
--   V2 developer guide</i>.
--   
--   <a>$sel:httpStatus:GetMigrationResponse'</a>,
--   <a>getMigrationResponse_httpStatus</a> - The response's http status
--   code.
newGetMigrationResponse :: Int -> GetMigrationResponse

-- | <i>See:</i> <a>newGetIntent</a> smart constructor.
data GetIntent
GetIntent' :: Text -> Text -> GetIntent

-- | Create a value of <a>GetIntent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetIntent'</a>, <a>getIntent_name</a> - The name of the
--   intent. The name is case sensitive.
--   
--   <a>$sel:version:GetIntent'</a>, <a>getIntent_version</a> - The version
--   of the intent.
newGetIntent :: Text -> Text -> GetIntent

-- | <i>See:</i> <a>newGetIntentResponse</a> smart constructor.
data GetIntentResponse
GetIntentResponse' :: Maybe KendraConfiguration -> Maybe POSIX -> Maybe Text -> Maybe CodeHook -> Maybe Statement -> Maybe POSIX -> Maybe Statement -> Maybe [InputContext] -> Maybe Text -> Maybe [Slot] -> Maybe FulfillmentActivity -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Prompt -> Maybe [OutputContext] -> Maybe FollowUpPrompt -> Maybe Text -> Int -> GetIntentResponse

-- | Create a value of <a>GetIntentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kendraConfiguration:GetIntentResponse'</a>,
--   <a>getIntentResponse_kendraConfiguration</a> - Configuration
--   information, if any, to connect to an Amazon Kendra index with the
--   <tt>AMAZON.KendraSearchIntent</tt> intent.
--   
--   <a>$sel:createdDate:GetIntentResponse'</a>,
--   <a>getIntentResponse_createdDate</a> - The date that the intent was
--   created.
--   
--   <a>$sel:parentIntentSignature:GetIntentResponse'</a>,
--   <a>getIntentResponse_parentIntentSignature</a> - A unique identifier
--   for a built-in intent.
--   
--   <a>$sel:dialogCodeHook:GetIntentResponse'</a>,
--   <a>getIntentResponse_dialogCodeHook</a> - If defined in the bot,
--   Amazon Amazon Lex invokes this Lambda function for each user input.
--   For more information, see PutIntent.
--   
--   <a>$sel:conclusionStatement:GetIntentResponse'</a>,
--   <a>getIntentResponse_conclusionStatement</a> - After the Lambda
--   function specified in the <tt>fulfillmentActivity</tt> element
--   fulfills the intent, Amazon Lex conveys this statement to the user.
--   
--   <a>$sel:lastUpdatedDate:GetIntentResponse'</a>,
--   <a>getIntentResponse_lastUpdatedDate</a> - The date that the intent
--   was updated. When you create a resource, the creation date and the
--   last updated date are the same.
--   
--   <a>$sel:rejectionStatement:GetIntentResponse'</a>,
--   <a>getIntentResponse_rejectionStatement</a> - If the user answers "no"
--   to the question defined in <tt>confirmationPrompt</tt>, Amazon Lex
--   responds with this statement to acknowledge that the intent was
--   canceled.
--   
--   <a>$sel:inputContexts:GetIntentResponse'</a>,
--   <a>getIntentResponse_inputContexts</a> - An array of
--   <tt>InputContext</tt> objects that lists the contexts that must be
--   active for Amazon Lex to choose the intent in a conversation with the
--   user.
--   
--   <a>$sel:version:GetIntent'</a>, <a>getIntentResponse_version</a> - The
--   version of the intent.
--   
--   <a>$sel:slots:GetIntentResponse'</a>, <a>getIntentResponse_slots</a> -
--   An array of intent slots configured for the intent.
--   
--   <a>$sel:fulfillmentActivity:GetIntentResponse'</a>,
--   <a>getIntentResponse_fulfillmentActivity</a> - Describes how the
--   intent is fulfilled. For more information, see PutIntent.
--   
--   <a>$sel:name:GetIntent'</a>, <a>getIntentResponse_name</a> - The name
--   of the intent.
--   
--   <a>$sel:sampleUtterances:GetIntentResponse'</a>,
--   <a>getIntentResponse_sampleUtterances</a> - An array of sample
--   utterances configured for the intent.
--   
--   <a>$sel:description:GetIntentResponse'</a>,
--   <a>getIntentResponse_description</a> - A description of the intent.
--   
--   <a>$sel:confirmationPrompt:GetIntentResponse'</a>,
--   <a>getIntentResponse_confirmationPrompt</a> - If defined in the bot,
--   Amazon Lex uses prompt to confirm the intent before fulfilling the
--   user's request. For more information, see PutIntent.
--   
--   <a>$sel:outputContexts:GetIntentResponse'</a>,
--   <a>getIntentResponse_outputContexts</a> - An array of
--   <tt>OutputContext</tt> objects that lists the contexts that the intent
--   activates when the intent is fulfilled.
--   
--   <a>$sel:followUpPrompt:GetIntentResponse'</a>,
--   <a>getIntentResponse_followUpPrompt</a> - If defined in the bot,
--   Amazon Lex uses this prompt to solicit additional user activity after
--   the intent is fulfilled. For more information, see PutIntent.
--   
--   <a>$sel:checksum:GetIntentResponse'</a>,
--   <a>getIntentResponse_checksum</a> - Checksum of the intent.
--   
--   <a>$sel:httpStatus:GetIntentResponse'</a>,
--   <a>getIntentResponse_httpStatus</a> - The response's http status code.
newGetIntentResponse :: Int -> GetIntentResponse

-- | <i>See:</i> <a>newDeleteBotVersion</a> smart constructor.
data DeleteBotVersion
DeleteBotVersion' :: Text -> Text -> DeleteBotVersion

-- | Create a value of <a>DeleteBotVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteBotVersion'</a>, <a>deleteBotVersion_name</a> - The
--   name of the bot.
--   
--   <a>$sel:version:DeleteBotVersion'</a>, <a>deleteBotVersion_version</a>
--   - The version of the bot to delete. You cannot delete the
--   <tt>$LATEST</tt> version of the bot. To delete the <tt>$LATEST</tt>
--   version, use the DeleteBot operation.
newDeleteBotVersion :: Text -> Text -> DeleteBotVersion

-- | <i>See:</i> <a>newDeleteBotVersionResponse</a> smart constructor.
data DeleteBotVersionResponse
DeleteBotVersionResponse' :: DeleteBotVersionResponse

-- | Create a value of <a>DeleteBotVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteBotVersionResponse :: DeleteBotVersionResponse
newtype ChannelStatus
ChannelStatus' :: Text -> ChannelStatus
[fromChannelStatus] :: ChannelStatus -> Text
pattern ChannelStatus_CREATED :: ChannelStatus
pattern ChannelStatus_FAILED :: ChannelStatus
pattern ChannelStatus_IN_PROGRESS :: ChannelStatus
newtype ChannelType
ChannelType' :: Text -> ChannelType
[fromChannelType] :: ChannelType -> Text
pattern ChannelType_Facebook :: ChannelType
pattern ChannelType_Kik :: ChannelType
pattern ChannelType_Slack :: ChannelType
pattern ChannelType_Twilio_Sms :: ChannelType
newtype ContentType
ContentType' :: Text -> ContentType
[fromContentType] :: ContentType -> Text
pattern ContentType_CustomPayload :: ContentType
pattern ContentType_PlainText :: ContentType
pattern ContentType_SSML :: ContentType
newtype Destination
Destination' :: Text -> Destination
[fromDestination] :: Destination -> Text
pattern Destination_CLOUDWATCH_LOGS :: Destination
pattern Destination_S3 :: Destination
newtype ExportStatus
ExportStatus' :: Text -> ExportStatus
[fromExportStatus] :: ExportStatus -> Text
pattern ExportStatus_FAILED :: ExportStatus
pattern ExportStatus_IN_PROGRESS :: ExportStatus
pattern ExportStatus_READY :: ExportStatus
newtype ExportType
ExportType' :: Text -> ExportType
[fromExportType] :: ExportType -> Text
pattern ExportType_ALEXA_SKILLS_KIT :: ExportType
pattern ExportType_LEX :: ExportType
newtype FulfillmentActivityType
FulfillmentActivityType' :: Text -> FulfillmentActivityType
[fromFulfillmentActivityType] :: FulfillmentActivityType -> Text
pattern FulfillmentActivityType_CodeHook :: FulfillmentActivityType
pattern FulfillmentActivityType_ReturnIntent :: FulfillmentActivityType
newtype ImportStatus
ImportStatus' :: Text -> ImportStatus
[fromImportStatus] :: ImportStatus -> Text
pattern ImportStatus_COMPLETE :: ImportStatus
pattern ImportStatus_FAILED :: ImportStatus
pattern ImportStatus_IN_PROGRESS :: ImportStatus
newtype LexStatus
LexStatus' :: Text -> LexStatus
[fromLexStatus] :: LexStatus -> Text
pattern LexStatus_BUILDING :: LexStatus
pattern LexStatus_FAILED :: LexStatus
pattern LexStatus_NOT_BUILT :: LexStatus
pattern LexStatus_READY :: LexStatus
pattern LexStatus_READY_BASIC_TESTING :: LexStatus
newtype Locale
Locale' :: Text -> Locale
[fromLocale] :: Locale -> Text
pattern Locale_De_DE :: Locale
pattern Locale_En_AU :: Locale
pattern Locale_En_GB :: Locale
pattern Locale_En_IN :: Locale
pattern Locale_En_US :: Locale
pattern Locale_Es_419 :: Locale
pattern Locale_Es_ES :: Locale
pattern Locale_Es_US :: Locale
pattern Locale_Fr_CA :: Locale
pattern Locale_Fr_FR :: Locale
pattern Locale_It_IT :: Locale
pattern Locale_Ja_JP :: Locale
pattern Locale_Ko_KR :: Locale
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_AUDIO :: LogType
pattern LogType_TEXT :: LogType
newtype MergeStrategy
MergeStrategy' :: Text -> MergeStrategy
[fromMergeStrategy] :: MergeStrategy -> Text
pattern MergeStrategy_FAIL_ON_CONFLICT :: MergeStrategy
pattern MergeStrategy_OVERWRITE_LATEST :: MergeStrategy
newtype MigrationAlertType
MigrationAlertType' :: Text -> MigrationAlertType
[fromMigrationAlertType] :: MigrationAlertType -> Text
pattern MigrationAlertType_ERROR :: MigrationAlertType
pattern MigrationAlertType_WARN :: MigrationAlertType
newtype MigrationSortAttribute
MigrationSortAttribute' :: Text -> MigrationSortAttribute
[fromMigrationSortAttribute] :: MigrationSortAttribute -> Text
pattern MigrationSortAttribute_MIGRATION_DATE_TIME :: MigrationSortAttribute
pattern MigrationSortAttribute_V1_BOT_NAME :: MigrationSortAttribute
newtype MigrationStatus
MigrationStatus' :: Text -> MigrationStatus
[fromMigrationStatus] :: MigrationStatus -> Text
pattern MigrationStatus_COMPLETED :: MigrationStatus
pattern MigrationStatus_FAILED :: MigrationStatus
pattern MigrationStatus_IN_PROGRESS :: MigrationStatus
newtype MigrationStrategy
MigrationStrategy' :: Text -> MigrationStrategy
[fromMigrationStrategy] :: MigrationStrategy -> Text
pattern MigrationStrategy_CREATE_NEW :: MigrationStrategy
pattern MigrationStrategy_UPDATE_EXISTING :: MigrationStrategy
newtype ObfuscationSetting
ObfuscationSetting' :: Text -> ObfuscationSetting
[fromObfuscationSetting] :: ObfuscationSetting -> Text
pattern ObfuscationSetting_DEFAULT_OBFUSCATION :: ObfuscationSetting
pattern ObfuscationSetting_NONE :: ObfuscationSetting
newtype ProcessBehavior
ProcessBehavior' :: Text -> ProcessBehavior
[fromProcessBehavior] :: ProcessBehavior -> Text
pattern ProcessBehavior_BUILD :: ProcessBehavior
pattern ProcessBehavior_SAVE :: ProcessBehavior
newtype ResourceType
ResourceType' :: Text -> ResourceType
[fromResourceType] :: ResourceType -> Text
pattern ResourceType_BOT :: ResourceType
pattern ResourceType_INTENT :: ResourceType
pattern ResourceType_SLOT_TYPE :: ResourceType
newtype SlotConstraint
SlotConstraint' :: Text -> SlotConstraint
[fromSlotConstraint] :: SlotConstraint -> Text
pattern SlotConstraint_Optional :: SlotConstraint
pattern SlotConstraint_Required :: SlotConstraint
newtype SlotValueSelectionStrategy
SlotValueSelectionStrategy' :: Text -> SlotValueSelectionStrategy
[fromSlotValueSelectionStrategy] :: SlotValueSelectionStrategy -> Text
pattern SlotValueSelectionStrategy_ORIGINAL_VALUE :: SlotValueSelectionStrategy
pattern SlotValueSelectionStrategy_TOP_RESOLUTION :: SlotValueSelectionStrategy
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_ASCENDING :: SortOrder
pattern SortOrder_DESCENDING :: SortOrder
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Detected :: StatusType
pattern StatusType_Missed :: StatusType

-- | Provides information about a bot alias.
--   
--   <i>See:</i> <a>newBotAliasMetadata</a> smart constructor.
data BotAliasMetadata
BotAliasMetadata' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConversationLogsResponse -> BotAliasMetadata

-- | Create a value of <a>BotAliasMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_createdDate</a> - The date that the bot alias was
--   created.
--   
--   <a>$sel:botName:BotAliasMetadata'</a>, <a>botAliasMetadata_botName</a>
--   - The name of the bot to which the alias points.
--   
--   <a>$sel:lastUpdatedDate:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_lastUpdatedDate</a> - The date that the bot alias
--   was updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:botVersion:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_botVersion</a> - The version of the Amazon Lex bot
--   to which the alias points.
--   
--   <a>$sel:name:BotAliasMetadata'</a>, <a>botAliasMetadata_name</a> - The
--   name of the bot alias.
--   
--   <a>$sel:description:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_description</a> - A description of the bot alias.
--   
--   <a>$sel:checksum:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_checksum</a> - Checksum of the bot alias.
--   
--   <a>$sel:conversationLogs:BotAliasMetadata'</a>,
--   <a>botAliasMetadata_conversationLogs</a> - Settings that determine how
--   Amazon Lex uses conversation logs for the alias.
newBotAliasMetadata :: BotAliasMetadata

-- | Represents an association between an Amazon Lex bot and an external
--   messaging platform.
--   
--   <i>See:</i> <a>newBotChannelAssociation</a> smart constructor.
data BotChannelAssociation
BotChannelAssociation' :: Maybe Text -> Maybe POSIX -> Maybe ChannelStatus -> Maybe (Sensitive (HashMap Text Text)) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ChannelType -> BotChannelAssociation

-- | Create a value of <a>BotChannelAssociation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botAlias:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botAlias</a> - An alias pointing to the
--   specific version of the Amazon Lex bot to which this association is
--   being made.
--   
--   <a>$sel:createdDate:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_createdDate</a> - The date that the
--   association between the Amazon Lex bot and the channel was created.
--   
--   <a>$sel:status:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_status</a> - The status of the bot channel.
--   
--   <ul>
--   <li><tt>CREATED</tt> - The channel has been created and is ready for
--   use.</li>
--   <li><tt>IN_PROGRESS</tt> - Channel creation is in progress.</li>
--   <li><tt>FAILED</tt> - There was an error creating the channel. For
--   information about the reason for the failure, see the
--   <tt>failureReason</tt> field.</li>
--   </ul>
--   
--   <a>$sel:botConfiguration:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botConfiguration</a> - Provides information
--   necessary to communicate with the messaging platform.
--   
--   <a>$sel:botName:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_botName</a> - The name of the Amazon Lex bot
--   to which this association is being made.
--   
--   Currently, Amazon Lex supports associations with Facebook and Slack,
--   and Twilio.
--   
--   <a>$sel:name:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_name</a> - The name of the association
--   between the bot and the channel.
--   
--   <a>$sel:failureReason:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_failureReason</a> - If <tt>status</tt> is
--   <tt>FAILED</tt>, Amazon Lex provides the reason that it failed to
--   create the association.
--   
--   <a>$sel:description:BotChannelAssociation'</a>,
--   <a>botChannelAssociation_description</a> - A text description of the
--   association you are creating.
--   
--   <a>$sel:type':BotChannelAssociation'</a>,
--   <a>botChannelAssociation_type</a> - Specifies the type of association
--   by indicating the type of channel being established between the Amazon
--   Lex bot and the external messaging platform.
newBotChannelAssociation :: BotChannelAssociation

-- | Provides information about a bot. .
--   
--   <i>See:</i> <a>newBotMetadata</a> smart constructor.
data BotMetadata
BotMetadata' :: Maybe POSIX -> Maybe LexStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> BotMetadata

-- | Create a value of <a>BotMetadata</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:BotMetadata'</a>, <a>botMetadata_createdDate</a> -
--   The date that the bot was created.
--   
--   <a>$sel:status:BotMetadata'</a>, <a>botMetadata_status</a> - The
--   status of the bot.
--   
--   <a>$sel:lastUpdatedDate:BotMetadata'</a>,
--   <a>botMetadata_lastUpdatedDate</a> - The date that the bot was
--   updated. When you create a bot, the creation date and last updated
--   date are the same.
--   
--   <a>$sel:version:BotMetadata'</a>, <a>botMetadata_version</a> - The
--   version of the bot. For a new bot, the version is always
--   <tt>$LATEST</tt>.
--   
--   <a>$sel:name:BotMetadata'</a>, <a>botMetadata_name</a> - The name of
--   the bot.
--   
--   <a>$sel:description:BotMetadata'</a>, <a>botMetadata_description</a> -
--   A description of the bot.
newBotMetadata :: BotMetadata

-- | Provides metadata for a built-in intent.
--   
--   <i>See:</i> <a>newBuiltinIntentMetadata</a> smart constructor.
data BuiltinIntentMetadata
BuiltinIntentMetadata' :: Maybe Text -> Maybe [Locale] -> BuiltinIntentMetadata

-- | Create a value of <a>BuiltinIntentMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signature:BuiltinIntentMetadata'</a>,
--   <a>builtinIntentMetadata_signature</a> - A unique identifier for the
--   built-in intent. To find the signature for an intent, see <a>Standard
--   Built-in Intents</a> in the <i>Alexa Skills Kit</i>.
--   
--   <a>$sel:supportedLocales:BuiltinIntentMetadata'</a>,
--   <a>builtinIntentMetadata_supportedLocales</a> - A list of identifiers
--   for the locales that the intent supports.
newBuiltinIntentMetadata :: BuiltinIntentMetadata

-- | Provides information about a slot used in a built-in intent.
--   
--   <i>See:</i> <a>newBuiltinIntentSlot</a> smart constructor.
data BuiltinIntentSlot
BuiltinIntentSlot' :: Maybe Text -> BuiltinIntentSlot

-- | Create a value of <a>BuiltinIntentSlot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:BuiltinIntentSlot'</a>, <a>builtinIntentSlot_name</a> - A
--   list of the slots defined for the intent.
newBuiltinIntentSlot :: BuiltinIntentSlot

-- | Provides information about a built in slot type.
--   
--   <i>See:</i> <a>newBuiltinSlotTypeMetadata</a> smart constructor.
data BuiltinSlotTypeMetadata
BuiltinSlotTypeMetadata' :: Maybe Text -> Maybe [Locale] -> BuiltinSlotTypeMetadata

-- | Create a value of <a>BuiltinSlotTypeMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:signature:BuiltinSlotTypeMetadata'</a>,
--   <a>builtinSlotTypeMetadata_signature</a> - A unique identifier for the
--   built-in slot type. To find the signature for a slot type, see <a>Slot
--   Type Reference</a> in the <i>Alexa Skills Kit</i>.
--   
--   <a>$sel:supportedLocales:BuiltinSlotTypeMetadata'</a>,
--   <a>builtinSlotTypeMetadata_supportedLocales</a> - A list of target
--   locales for the slot.
newBuiltinSlotTypeMetadata :: BuiltinSlotTypeMetadata

-- | Specifies a Lambda function that verifies requests to a bot or
--   fulfills the user's request to a bot..
--   
--   <i>See:</i> <a>newCodeHook</a> smart constructor.
data CodeHook
CodeHook' :: Text -> Text -> CodeHook

-- | Create a value of <a>CodeHook</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uri:CodeHook'</a>, <a>codeHook_uri</a> - The Amazon Resource
--   Name (ARN) of the Lambda function.
--   
--   <a>$sel:messageVersion:CodeHook'</a>, <a>codeHook_messageVersion</a> -
--   The version of the request-response that you want Amazon Lex to use to
--   invoke your Lambda function. For more information, see using-lambda.
newCodeHook :: Text -> Text -> CodeHook

-- | Provides the settings needed for conversation logs.
--   
--   <i>See:</i> <a>newConversationLogsRequest</a> smart constructor.
data ConversationLogsRequest
ConversationLogsRequest' :: [LogSettingsRequest] -> Text -> ConversationLogsRequest

-- | Create a value of <a>ConversationLogsRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logSettings:ConversationLogsRequest'</a>,
--   <a>conversationLogsRequest_logSettings</a> - The settings for your
--   conversation logs. You can log the conversation text, conversation
--   audio, or both.
--   
--   <a>$sel:iamRoleArn:ConversationLogsRequest'</a>,
--   <a>conversationLogsRequest_iamRoleArn</a> - The Amazon Resource Name
--   (ARN) of an IAM role with permission to write to your CloudWatch Logs
--   for text logs and your S3 bucket for audio logs. If audio encryption
--   is enabled, this role also provides access permission for the AWS KMS
--   key used for encrypting audio logs. For more information, see
--   <a>Creating an IAM Role and Policy for Conversation Logs</a>.
newConversationLogsRequest :: Text -> ConversationLogsRequest

-- | Contains information about conversation log settings.
--   
--   <i>See:</i> <a>newConversationLogsResponse</a> smart constructor.
data ConversationLogsResponse
ConversationLogsResponse' :: Maybe Text -> Maybe [LogSettingsResponse] -> ConversationLogsResponse

-- | Create a value of <a>ConversationLogsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iamRoleArn:ConversationLogsResponse'</a>,
--   <a>conversationLogsResponse_iamRoleArn</a> - The Amazon Resource Name
--   (ARN) of the IAM role used to write your logs to CloudWatch Logs or an
--   S3 bucket.
--   
--   <a>$sel:logSettings:ConversationLogsResponse'</a>,
--   <a>conversationLogsResponse_logSettings</a> - The settings for your
--   conversation logs. You can log text, audio, or both.
newConversationLogsResponse :: ConversationLogsResponse

-- | Each slot type can have a set of values. Each enumeration value
--   represents a value the slot type can take.
--   
--   For example, a pizza ordering bot could have a slot type that
--   specifies the type of crust that the pizza should have. The slot type
--   could include the values
--   
--   <ul>
--   <li>thick</li>
--   <li>thin</li>
--   <li>stuffed</li>
--   </ul>
--   
--   <i>See:</i> <a>newEnumerationValue</a> smart constructor.
data EnumerationValue
EnumerationValue' :: Maybe [Text] -> Text -> EnumerationValue

-- | Create a value of <a>EnumerationValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:synonyms:EnumerationValue'</a>,
--   <a>enumerationValue_synonyms</a> - Additional values related to the
--   slot type value.
--   
--   <a>$sel:value:EnumerationValue'</a>, <a>enumerationValue_value</a> -
--   The value of the slot type.
newEnumerationValue :: Text -> EnumerationValue

-- | A prompt for additional activity after an intent is fulfilled. For
--   example, after the <tt>OrderPizza</tt> intent is fulfilled, you might
--   prompt the user to find out whether the user wants to order drinks.
--   
--   <i>See:</i> <a>newFollowUpPrompt</a> smart constructor.
data FollowUpPrompt
FollowUpPrompt' :: Prompt -> Statement -> FollowUpPrompt

-- | Create a value of <a>FollowUpPrompt</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:prompt:FollowUpPrompt'</a>, <a>followUpPrompt_prompt</a> -
--   Prompts for information from the user.
--   
--   <a>$sel:rejectionStatement:FollowUpPrompt'</a>,
--   <a>followUpPrompt_rejectionStatement</a> - If the user answers "no" to
--   the question defined in the <tt>prompt</tt> field, Amazon Lex responds
--   with this statement to acknowledge that the intent was canceled.
newFollowUpPrompt :: Prompt -> Statement -> FollowUpPrompt

-- | Describes how the intent is fulfilled after the user provides all of
--   the information required for the intent. You can provide a Lambda
--   function to process the intent, or you can return the intent
--   information to the client application. We recommend that you use a
--   Lambda function so that the relevant logic lives in the Cloud and
--   limit the client-side code primarily to presentation. If you need to
--   update the logic, you only update the Lambda function; you don't need
--   to upgrade your client application.
--   
--   Consider the following examples:
--   
--   <ul>
--   <li>In a pizza ordering application, after the user provides all of
--   the information for placing an order, you use a Lambda function to
--   place an order with a pizzeria.</li>
--   <li>In a gaming application, when a user says "pick up a rock," this
--   information must go back to the client application so that it can
--   perform the operation and update the graphics. In this case, you want
--   Amazon Lex to return the intent data to the client.</li>
--   </ul>
--   
--   <i>See:</i> <a>newFulfillmentActivity</a> smart constructor.
data FulfillmentActivity
FulfillmentActivity' :: Maybe CodeHook -> FulfillmentActivityType -> FulfillmentActivity

-- | Create a value of <a>FulfillmentActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:codeHook:FulfillmentActivity'</a>,
--   <a>fulfillmentActivity_codeHook</a> - A description of the Lambda
--   function that is run to fulfill the intent.
--   
--   <a>$sel:type':FulfillmentActivity'</a>,
--   <a>fulfillmentActivity_type</a> - How the intent should be fulfilled,
--   either by running a Lambda function or by returning the slot data to
--   the client application.
newFulfillmentActivity :: FulfillmentActivityType -> FulfillmentActivity

-- | The name of a context that must be active for an intent to be selected
--   by Amazon Lex.
--   
--   <i>See:</i> <a>newInputContext</a> smart constructor.
data InputContext
InputContext' :: Text -> InputContext

-- | Create a value of <a>InputContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InputContext'</a>, <a>inputContext_name</a> - The name of
--   the context.
newInputContext :: Text -> InputContext

-- | Identifies the specific version of an intent.
--   
--   <i>See:</i> <a>newIntent</a> smart constructor.
data Intent
Intent' :: Text -> Text -> Intent

-- | Create a value of <a>Intent</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:intentName:Intent'</a>, <a>intent_intentName</a> - The name of
--   the intent.
--   
--   <a>$sel:intentVersion:Intent'</a>, <a>intent_intentVersion</a> - The
--   version of the intent.
newIntent :: Text -> Text -> Intent

-- | Provides information about an intent.
--   
--   <i>See:</i> <a>newIntentMetadata</a> smart constructor.
data IntentMetadata
IntentMetadata' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> IntentMetadata

-- | Create a value of <a>IntentMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:IntentMetadata'</a>,
--   <a>intentMetadata_createdDate</a> - The date that the intent was
--   created.
--   
--   <a>$sel:lastUpdatedDate:IntentMetadata'</a>,
--   <a>intentMetadata_lastUpdatedDate</a> - The date that the intent was
--   updated. When you create an intent, the creation date and last updated
--   date are the same.
--   
--   <a>$sel:version:IntentMetadata'</a>, <a>intentMetadata_version</a> -
--   The version of the intent.
--   
--   <a>$sel:name:IntentMetadata'</a>, <a>intentMetadata_name</a> - The
--   name of the intent.
--   
--   <a>$sel:description:IntentMetadata'</a>,
--   <a>intentMetadata_description</a> - A description of the intent.
newIntentMetadata :: IntentMetadata

-- | Provides configuration information for the AMAZON.KendraSearchIntent
--   intent. When you use this intent, Amazon Lex searches the specified
--   Amazon Kendra index and returns documents from the index that match
--   the user's utterance. For more information, see
--   <a>AMAZON.KendraSearchIntent</a>.
--   
--   <i>See:</i> <a>newKendraConfiguration</a> smart constructor.
data KendraConfiguration
KendraConfiguration' :: Maybe Text -> Text -> Text -> KendraConfiguration

-- | Create a value of <a>KendraConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryFilterString:KendraConfiguration'</a>,
--   <a>kendraConfiguration_queryFilterString</a> - A query filter that
--   Amazon Lex sends to Amazon Kendra to filter the response from the
--   query. The filter is in the format defined by Amazon Kendra. For more
--   information, see <a>Filtering queries</a>.
--   
--   You can override this filter string with a new filter string at
--   runtime.
--   
--   <a>$sel:kendraIndex:KendraConfiguration'</a>,
--   <a>kendraConfiguration_kendraIndex</a> - The Amazon Resource Name
--   (ARN) of the Amazon Kendra index that you want the
--   AMAZON.KendraSearchIntent intent to search. The index must be in the
--   same account and Region as the Amazon Lex bot. If the Amazon Kendra
--   index does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
--   
--   <a>$sel:role':KendraConfiguration'</a>,
--   <a>kendraConfiguration_role</a> - The Amazon Resource Name (ARN) of an
--   IAM role that has permission to search the Amazon Kendra index. The
--   role must be in the same account and Region as the Amazon Lex bot. If
--   the role does not exist, you get an exception when you call the
--   <tt>PutIntent</tt> operation.
newKendraConfiguration :: Text -> Text -> KendraConfiguration

-- | Settings used to configure delivery mode and destination for
--   conversation logs.
--   
--   <i>See:</i> <a>newLogSettingsRequest</a> smart constructor.
data LogSettingsRequest
LogSettingsRequest' :: Maybe Text -> LogType -> Destination -> Text -> LogSettingsRequest

-- | Create a value of <a>LogSettingsRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the AWS KMS customer managed key for encrypting audio logs
--   delivered to an S3 bucket. The key does not apply to CloudWatch Logs
--   and is optional for S3 buckets.
--   
--   <a>$sel:logType:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_logType</a> - The type of logging to enable.
--   Text logs are delivered to a CloudWatch Logs log group. Audio logs are
--   delivered to an S3 bucket.
--   
--   <a>$sel:destination:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_destination</a> - Where the logs will be
--   delivered. Text logs are delivered to a CloudWatch Logs log group.
--   Audio logs are delivered to an S3 bucket.
--   
--   <a>$sel:resourceArn:LogSettingsRequest'</a>,
--   <a>logSettingsRequest_resourceArn</a> - The Amazon Resource Name (ARN)
--   of the CloudWatch Logs log group or S3 bucket where the logs should be
--   delivered.
newLogSettingsRequest :: LogType -> Destination -> Text -> LogSettingsRequest

-- | The settings for conversation logs.
--   
--   <i>See:</i> <a>newLogSettingsResponse</a> smart constructor.
data LogSettingsResponse
LogSettingsResponse' :: Maybe Text -> Maybe LogType -> Maybe Text -> Maybe Destination -> Maybe Text -> LogSettingsResponse

-- | Create a value of <a>LogSettingsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the CloudWatch Logs log group or S3 bucket where the logs are
--   delivered.
--   
--   <a>$sel:logType:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_logType</a> - The type of logging that is
--   enabled.
--   
--   <a>$sel:kmsKeyArn:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_kmsKeyArn</a> - The Amazon Resource Name (ARN)
--   of the key used to encrypt audio logs in an S3 bucket.
--   
--   <a>$sel:destination:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_destination</a> - The destination where logs
--   are delivered.
--   
--   <a>$sel:resourcePrefix:LogSettingsResponse'</a>,
--   <a>logSettingsResponse_resourcePrefix</a> - The resource prefix is the
--   first part of the S3 object key within the S3 bucket that you
--   specified to contain audio logs. For CloudWatch Logs it is the prefix
--   of the log stream name within the log group that you specified.
newLogSettingsResponse :: LogSettingsResponse

-- | The message object that provides the message text and its type.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Maybe Natural -> ContentType -> Text -> Message

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupNumber:Message'</a>, <a>message_groupNumber</a> -
--   Identifies the message group that the message belongs to. When a group
--   is assigned to a message, Amazon Lex returns one message from each
--   group in the response.
--   
--   <a>$sel:contentType:Message'</a>, <a>message_contentType</a> - The
--   content type of the message string.
--   
--   <a>$sel:content:Message'</a>, <a>message_content</a> - The text of the
--   message.
newMessage :: ContentType -> Text -> Message

-- | Provides information about alerts and warnings that Amazon Lex sends
--   during a migration. The alerts include information about how to
--   resolve the issue.
--   
--   <i>See:</i> <a>newMigrationAlert</a> smart constructor.
data MigrationAlert
MigrationAlert' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> Maybe MigrationAlertType -> MigrationAlert

-- | Create a value of <a>MigrationAlert</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:MigrationAlert'</a>, <a>migrationAlert_message</a> - A
--   message that describes why the alert was issued.
--   
--   <a>$sel:details:MigrationAlert'</a>, <a>migrationAlert_details</a> -
--   Additional details about the alert.
--   
--   <a>$sel:referenceURLs:MigrationAlert'</a>,
--   <a>migrationAlert_referenceURLs</a> - A link to the Amazon Lex
--   documentation that describes how to resolve the alert.
--   
--   <a>$sel:type':MigrationAlert'</a>, <a>migrationAlert_type</a> - The
--   type of alert. There are two kinds of alerts:
--   
--   <ul>
--   <li><tt>ERROR</tt> - There was an issue with the migration that can't
--   be resolved. The migration stops.</li>
--   <li><tt>WARN</tt> - There was an issue with the migration that
--   requires manual changes to the new Amazon Lex V2 bot. The migration
--   continues.</li>
--   </ul>
newMigrationAlert :: MigrationAlert

-- | Provides information about migrating a bot from Amazon Lex V1 to
--   Amazon Lex V2.
--   
--   <i>See:</i> <a>newMigrationSummary</a> smart constructor.
data MigrationSummary
MigrationSummary' :: Maybe Text -> Maybe Text -> Maybe Locale -> Maybe POSIX -> Maybe MigrationStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe MigrationStatus -> MigrationSummary

-- | Create a value of <a>MigrationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:v1BotVersion:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotVersion</a> - The version of the Amazon Lex
--   V1 bot that is the source of the migration.
--   
--   <a>$sel:migrationId:MigrationSummary'</a>,
--   <a>migrationSummary_migrationId</a> - The unique identifier that
--   Amazon Lex assigned to the migration.
--   
--   <a>$sel:v1BotLocale:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotLocale</a> - The locale of the Amazon Lex V1
--   bot that is the source of the migration.
--   
--   <a>$sel:migrationTimestamp:MigrationSummary'</a>,
--   <a>migrationSummary_migrationTimestamp</a> - The date and time that
--   the migration started.
--   
--   <a>$sel:migrationStrategy:MigrationSummary'</a>,
--   <a>migrationSummary_migrationStrategy</a> - The strategy used to
--   conduct the migration.
--   
--   <a>$sel:v2BotRole:MigrationSummary'</a>,
--   <a>migrationSummary_v2BotRole</a> - The IAM role that Amazon Lex uses
--   to run the Amazon Lex V2 bot.
--   
--   <a>$sel:v1BotName:MigrationSummary'</a>,
--   <a>migrationSummary_v1BotName</a> - The name of the Amazon Lex V1 bot
--   that is the source of the migration.
--   
--   <a>$sel:v2BotId:MigrationSummary'</a>, <a>migrationSummary_v2BotId</a>
--   - The unique identifier of the Amazon Lex V2 that is the destination
--   of the migration.
--   
--   <a>$sel:migrationStatus:MigrationSummary'</a>,
--   <a>migrationSummary_migrationStatus</a> - The status of the operation.
--   When the status is <tt>COMPLETE</tt> the bot is available in Amazon
--   Lex V2. There may be alerts and warnings that need to be resolved to
--   complete the migration.
newMigrationSummary :: MigrationSummary

-- | The specification of an output context that is set when an intent is
--   fulfilled.
--   
--   <i>See:</i> <a>newOutputContext</a> smart constructor.
data OutputContext
OutputContext' :: Text -> Natural -> Natural -> OutputContext

-- | Create a value of <a>OutputContext</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:OutputContext'</a>, <a>outputContext_name</a> - The name
--   of the context.
--   
--   <a>$sel:timeToLiveInSeconds:OutputContext'</a>,
--   <a>outputContext_timeToLiveInSeconds</a> - The number of seconds that
--   the context should be active after it is first sent in a
--   <tt>PostContent</tt> or <tt>PostText</tt> response. You can set the
--   value between 5 and 86,400 seconds (24 hours).
--   
--   <a>$sel:turnsToLive:OutputContext'</a>,
--   <a>outputContext_turnsToLive</a> - The number of conversation turns
--   that the context should be active. A conversation turn is one
--   <tt>PostContent</tt> or <tt>PostText</tt> request and the
--   corresponding response from Amazon Lex.
newOutputContext :: Text -> Natural -> Natural -> OutputContext

-- | Obtains information from the user. To define a prompt, provide one or
--   more messages and specify the number of attempts to get information
--   from the user. If you provide more than one message, Amazon Lex
--   chooses one of the messages to use to prompt the user. For more
--   information, see how-it-works.
--   
--   <i>See:</i> <a>newPrompt</a> smart constructor.
data Prompt
Prompt' :: Maybe Text -> NonEmpty Message -> Natural -> Prompt

-- | Create a value of <a>Prompt</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Prompt'</a>, <a>prompt_responseCard</a> - A
--   response card. Amazon Lex uses this prompt at runtime, in the
--   <tt>PostText</tt> API response. It substitutes session attributes and
--   slot values for placeholders in the response card. For more
--   information, see ex-resp-card.
--   
--   <a>$sel:messages:Prompt'</a>, <a>prompt_messages</a> - An array of
--   objects, each of which provides a message string and its type. You can
--   specify the message string in plain text or in Speech Synthesis Markup
--   Language (SSML).
--   
--   <a>$sel:maxAttempts:Prompt'</a>, <a>prompt_maxAttempts</a> - The
--   number of times to prompt the user for information.
newPrompt :: NonEmpty Message -> Natural -> Prompt

-- | Identifies the version of a specific slot.
--   
--   <i>See:</i> <a>newSlot</a> smart constructor.
data Slot
Slot' :: Maybe Text -> Maybe Text -> Maybe Prompt -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe Text -> Maybe SlotDefaultValueSpec -> Maybe ObfuscationSetting -> Text -> SlotConstraint -> Slot

-- | Create a value of <a>Slot</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Slot'</a>, <a>slot_responseCard</a> - A set of
--   possible responses for the slot type used by text-based clients. A
--   user chooses an option from the response card, instead of using text
--   to reply.
--   
--   <a>$sel:slotType:Slot'</a>, <a>slot_slotType</a> - The type of the
--   slot, either a custom slot type that you defined or one of the
--   built-in slot types.
--   
--   <a>$sel:valueElicitationPrompt:Slot'</a>,
--   <a>slot_valueElicitationPrompt</a> - The prompt that Amazon Lex uses
--   to elicit the slot value from the user.
--   
--   <a>$sel:slotTypeVersion:Slot'</a>, <a>slot_slotTypeVersion</a> - The
--   version of the slot type.
--   
--   <a>$sel:priority:Slot'</a>, <a>slot_priority</a> - Directs Amazon Lex
--   the order in which to elicit this slot value from the user. For
--   example, if the intent has two slots with priorities 1 and 2, AWS
--   Amazon Lex first elicits a value for the slot with priority 1.
--   
--   If multiple slots share the same priority, the order in which Amazon
--   Lex elicits values is arbitrary.
--   
--   <a>$sel:sampleUtterances:Slot'</a>, <a>slot_sampleUtterances</a> - If
--   you know a specific pattern with which users might respond to an
--   Amazon Lex request for a slot value, you can provide those utterances
--   to improve accuracy. This is optional. In most cases, Amazon Lex is
--   capable of understanding user utterances.
--   
--   <a>$sel:description:Slot'</a>, <a>slot_description</a> - A description
--   of the slot.
--   
--   <a>$sel:defaultValueSpec:Slot'</a>, <a>slot_defaultValueSpec</a> - A
--   list of default values for the slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot. You can specify
--   default values from context variables, session attributes, and defined
--   values.
--   
--   <a>$sel:obfuscationSetting:Slot'</a>, <a>slot_obfuscationSetting</a> -
--   Determines whether a slot is obfuscated in conversation logs and
--   stored utterances. When you obfuscate a slot, the value is replaced by
--   the slot name in curly braces ({}). For example, if the slot name is
--   "full_name", obfuscated values are replaced with "{full_name}". For
--   more information, see <a>Slot Obfuscation</a> .
--   
--   <a>$sel:name:Slot'</a>, <a>slot_name</a> - The name of the slot.
--   
--   <a>$sel:slotConstraint:Slot'</a>, <a>slot_slotConstraint</a> -
--   Specifies whether the slot is required or optional.
newSlot :: Text -> SlotConstraint -> Slot

-- | A default value for a slot.
--   
--   <i>See:</i> <a>newSlotDefaultValue</a> smart constructor.
data SlotDefaultValue
SlotDefaultValue' :: Text -> SlotDefaultValue

-- | Create a value of <a>SlotDefaultValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:SlotDefaultValue'</a>,
--   <a>slotDefaultValue_defaultValue</a> - The default value for the slot.
--   You can specify one of the following:
--   
--   <ul>
--   <li><tt>#context-name.slot-name</tt> - The slot value "slot-name" in
--   the context "context-name."</li>
--   <li><tt>{attribute}</tt> - The slot value of the session attribute
--   "attribute."</li>
--   <li><tt>'value'</tt> - The discrete value "value."</li>
--   </ul>
newSlotDefaultValue :: Text -> SlotDefaultValue

-- | Contains the default values for a slot. Default values are used when
--   Amazon Lex hasn't determined a value for a slot.
--   
--   <i>See:</i> <a>newSlotDefaultValueSpec</a> smart constructor.
data SlotDefaultValueSpec
SlotDefaultValueSpec' :: [SlotDefaultValue] -> SlotDefaultValueSpec

-- | Create a value of <a>SlotDefaultValueSpec</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValueList:SlotDefaultValueSpec'</a>,
--   <a>slotDefaultValueSpec_defaultValueList</a> - The default values for
--   a slot. You can specify more than one default. For example, you can
--   specify a default value to use from a matching context variable, a
--   session attribute, or a fixed value.
--   
--   The default value chosen is selected based on the order that you
--   specify them in the list. For example, if you specify a context
--   variable and a fixed value in that order, Amazon Lex uses the context
--   variable if it is available, else it uses the fixed value.
newSlotDefaultValueSpec :: SlotDefaultValueSpec

-- | Provides configuration information for a slot type.
--   
--   <i>See:</i> <a>newSlotTypeConfiguration</a> smart constructor.
data SlotTypeConfiguration
SlotTypeConfiguration' :: Maybe SlotTypeRegexConfiguration -> SlotTypeConfiguration

-- | Create a value of <a>SlotTypeConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:regexConfiguration:SlotTypeConfiguration'</a>,
--   <a>slotTypeConfiguration_regexConfiguration</a> - A regular expression
--   used to validate the value of a slot.
newSlotTypeConfiguration :: SlotTypeConfiguration

-- | Provides information about a slot type..
--   
--   <i>See:</i> <a>newSlotTypeMetadata</a> smart constructor.
data SlotTypeMetadata
SlotTypeMetadata' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> SlotTypeMetadata

-- | Create a value of <a>SlotTypeMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_createdDate</a> - The date that the slot type was
--   created.
--   
--   <a>$sel:lastUpdatedDate:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_lastUpdatedDate</a> - The date that the slot type
--   was updated. When you create a resource, the creation date and last
--   updated date are the same.
--   
--   <a>$sel:version:SlotTypeMetadata'</a>, <a>slotTypeMetadata_version</a>
--   - The version of the slot type.
--   
--   <a>$sel:name:SlotTypeMetadata'</a>, <a>slotTypeMetadata_name</a> - The
--   name of the slot type.
--   
--   <a>$sel:description:SlotTypeMetadata'</a>,
--   <a>slotTypeMetadata_description</a> - A description of the slot type.
newSlotTypeMetadata :: SlotTypeMetadata

-- | Provides a regular expression used to validate the value of a slot.
--   
--   <i>See:</i> <a>newSlotTypeRegexConfiguration</a> smart constructor.
data SlotTypeRegexConfiguration
SlotTypeRegexConfiguration' :: Text -> SlotTypeRegexConfiguration

-- | Create a value of <a>SlotTypeRegexConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pattern':SlotTypeRegexConfiguration'</a>,
--   <a>slotTypeRegexConfiguration_pattern</a> - A regular expression used
--   to validate the value of a slot.
--   
--   Use a standard regular expression. Amazon Lex supports the following
--   characters in the regular expression:
--   
--   <ul>
--   <li>A-Z, a-z</li>
--   <li>0-9</li>
--   <li>Unicode characters ("\ u&lt;Unicode&gt;")</li>
--   </ul>
--   
--   Represent Unicode characters with four digits, for example "\u0041" or
--   "\u005A".
--   
--   The following regular expression operators are not supported:
--   
--   <ul>
--   <li>Infinite repeaters: *, +, or {x,} with no upper bound.</li>
--   <li>Wild card (.)</li>
--   </ul>
newSlotTypeRegexConfiguration :: Text -> SlotTypeRegexConfiguration

-- | A collection of messages that convey information to the user. At
--   runtime, Amazon Lex selects the message to convey.
--   
--   <i>See:</i> <a>newStatement</a> smart constructor.
data Statement
Statement' :: Maybe Text -> NonEmpty Message -> Statement

-- | Create a value of <a>Statement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:responseCard:Statement'</a>, <a>statement_responseCard</a> -
--   At runtime, if the client is using the <a>PostText</a> API, Amazon Lex
--   includes the response card in the response. It substitutes all of the
--   session attributes and slot values for placeholders in the response
--   card.
--   
--   <a>$sel:messages:Statement'</a>, <a>statement_messages</a> - A
--   collection of message objects.
newStatement :: NonEmpty Message -> Statement

-- | A list of key/value pairs that identify a bot, bot alias, or bot
--   channel. Tag keys and values can consist of Unicode letters, digits,
--   white space, and any of the following symbols: _ . : / = + - @.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key for the tag. Keys are
--   not case-sensitive and must be unique.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value associated with a
--   key. The value may be an empty string but it can't be null.
newTag :: Text -> Text -> Tag

-- | Provides information about a single utterance that was made to your
--   bot.
--   
--   <i>See:</i> <a>newUtteranceData</a> smart constructor.
data UtteranceData
UtteranceData' :: Maybe Text -> Maybe Int -> Maybe Int -> Maybe POSIX -> Maybe POSIX -> UtteranceData

-- | Create a value of <a>UtteranceData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:utteranceString:UtteranceData'</a>,
--   <a>utteranceData_utteranceString</a> - The text that was entered by
--   the user or the text representation of an audio clip.
--   
--   <a>$sel:distinctUsers:UtteranceData'</a>,
--   <a>utteranceData_distinctUsers</a> - The total number of individuals
--   that used the utterance.
--   
--   <a>$sel:count:UtteranceData'</a>, <a>utteranceData_count</a> - The
--   number of times that the utterance was processed.
--   
--   <a>$sel:lastUtteredDate:UtteranceData'</a>,
--   <a>utteranceData_lastUtteredDate</a> - The date that the utterance was
--   last recorded.
--   
--   <a>$sel:firstUtteredDate:UtteranceData'</a>,
--   <a>utteranceData_firstUtteredDate</a> - The date that the utterance
--   was first recorded.
newUtteranceData :: UtteranceData

-- | Provides a list of utterances that have been made to a specific
--   version of your bot. The list contains a maximum of 100 utterances.
--   
--   <i>See:</i> <a>newUtteranceList</a> smart constructor.
data UtteranceList
UtteranceList' :: Maybe Text -> Maybe [UtteranceData] -> UtteranceList

-- | Create a value of <a>UtteranceList</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:botVersion:UtteranceList'</a>, <a>utteranceList_botVersion</a>
--   - The version of the bot that processed the list.
--   
--   <a>$sel:utterances:UtteranceList'</a>, <a>utteranceList_utterances</a>
--   - One or more UtteranceData objects that contain information about the
--   utterances that have been made to a bot. The maximum number of object
--   is 100.
newUtteranceList :: UtteranceList
