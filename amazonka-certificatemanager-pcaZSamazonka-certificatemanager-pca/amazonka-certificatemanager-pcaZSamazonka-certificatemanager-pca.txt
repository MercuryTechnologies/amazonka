-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-certificatemanager-pcaZSamazonka-certificatemanager-pca
@version 1.6.1


module Network.AWS.CertificateManagerPCA.Types.ASN1Subject

-- | Contains information about the certificate subject. The
--   <tt>Subject</tt> field in the certificate identifies the entity that
--   owns or controls the public key in the certificate. The entity can be
--   a user, computer, device, or service. The <tt>Subject </tt>must
--   contain an X.500 distinguished name (DN). A DN is a sequence of
--   relative distinguished names (RDNs). The RDNs are separated by commas
--   in the certificate.
--   
--   <i>See:</i> <a>newASN1Subject</a> smart constructor.
data ASN1Subject
ASN1Subject' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ASN1Subject

-- | The locality (such as a city or town) in which the certificate subject
--   is located.
[$sel:locality:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Typically a qualifier appended to the name of an individual. Examples
--   include Jr. for junior, Sr. for senior, and III for third.
[$sel:generationQualifier:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Family name. In the US and the UK, for example, the surname of an
--   individual is ordered last. In Asian cultures the surname is typically
--   ordered first.
[$sel:surname:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | A subdivision or unit of the organization (such as sales or finance)
--   with which the certificate subject is affiliated.
[$sel:organizationalUnit:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | A title such as Mr. or Ms., which is pre-pended to the name to refer
--   formally to the certificate subject.
[$sel:title:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Concatenation that typically contains the first letter of the
--   <b>GivenName</b>, the first letter of the middle name if one exists,
--   and the first letter of the <b>Surname</b>.
[$sel:initials:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | For CA and end-entity certificates in a private PKI, the common name
--   (CN) can be any string within the length limit.
--   
--   Note: In publicly trusted certificates, the common name must be a
--   fully qualified domain name (FQDN) associated with the certificate
--   subject.
[$sel:commonName:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Typically a shortened version of a longer <b>GivenName</b>. For
--   example, Jonathan is often shortened to John. Elizabeth is often
--   shortened to Beth, Liz, or Eliza.
[$sel:pseudonym:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | State in which the subject of the certificate is located.
[$sel:state:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | First name.
[$sel:givenName:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | The certificate serial number.
[$sel:serialNumber:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Disambiguating information for the certificate subject.
[$sel:distinguishedNameQualifier:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Legal name of the organization with which the certificate subject is
--   affiliated.
[$sel:organization:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Two-digit code that specifies the country in which the certificate
--   subject located.
[$sel:country:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Create a value of <a>ASN1Subject</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locality:ASN1Subject'</a>, <a>aSN1Subject_locality</a> - The
--   locality (such as a city or town) in which the certificate subject is
--   located.
--   
--   <a>$sel:generationQualifier:ASN1Subject'</a>,
--   <a>aSN1Subject_generationQualifier</a> - Typically a qualifier
--   appended to the name of an individual. Examples include Jr. for
--   junior, Sr. for senior, and III for third.
--   
--   <a>$sel:surname:ASN1Subject'</a>, <a>aSN1Subject_surname</a> - Family
--   name. In the US and the UK, for example, the surname of an individual
--   is ordered last. In Asian cultures the surname is typically ordered
--   first.
--   
--   <a>$sel:organizationalUnit:ASN1Subject'</a>,
--   <a>aSN1Subject_organizationalUnit</a> - A subdivision or unit of the
--   organization (such as sales or finance) with which the certificate
--   subject is affiliated.
--   
--   <a>$sel:title:ASN1Subject'</a>, <a>aSN1Subject_title</a> - A title
--   such as Mr. or Ms., which is pre-pended to the name to refer formally
--   to the certificate subject.
--   
--   <a>$sel:initials:ASN1Subject'</a>, <a>aSN1Subject_initials</a> -
--   Concatenation that typically contains the first letter of the
--   <b>GivenName</b>, the first letter of the middle name if one exists,
--   and the first letter of the <b>Surname</b>.
--   
--   <a>$sel:commonName:ASN1Subject'</a>, <a>aSN1Subject_commonName</a> -
--   For CA and end-entity certificates in a private PKI, the common name
--   (CN) can be any string within the length limit.
--   
--   Note: In publicly trusted certificates, the common name must be a
--   fully qualified domain name (FQDN) associated with the certificate
--   subject.
--   
--   <a>$sel:pseudonym:ASN1Subject'</a>, <a>aSN1Subject_pseudonym</a> -
--   Typically a shortened version of a longer <b>GivenName</b>. For
--   example, Jonathan is often shortened to John. Elizabeth is often
--   shortened to Beth, Liz, or Eliza.
--   
--   <a>$sel:state:ASN1Subject'</a>, <a>aSN1Subject_state</a> - State in
--   which the subject of the certificate is located.
--   
--   <a>$sel:givenName:ASN1Subject'</a>, <a>aSN1Subject_givenName</a> -
--   First name.
--   
--   <a>$sel:serialNumber:ASN1Subject'</a>, <a>aSN1Subject_serialNumber</a>
--   - The certificate serial number.
--   
--   <a>$sel:distinguishedNameQualifier:ASN1Subject'</a>,
--   <a>aSN1Subject_distinguishedNameQualifier</a> - Disambiguating
--   information for the certificate subject.
--   
--   <a>$sel:organization:ASN1Subject'</a>, <a>aSN1Subject_organization</a>
--   - Legal name of the organization with which the certificate subject is
--   affiliated.
--   
--   <a>$sel:country:ASN1Subject'</a>, <a>aSN1Subject_country</a> -
--   Two-digit code that specifies the country in which the certificate
--   subject located.
newASN1Subject :: ASN1Subject

-- | The locality (such as a city or town) in which the certificate subject
--   is located.
aSN1Subject_locality :: Lens' ASN1Subject (Maybe Text)

-- | Typically a qualifier appended to the name of an individual. Examples
--   include Jr. for junior, Sr. for senior, and III for third.
aSN1Subject_generationQualifier :: Lens' ASN1Subject (Maybe Text)

-- | Family name. In the US and the UK, for example, the surname of an
--   individual is ordered last. In Asian cultures the surname is typically
--   ordered first.
aSN1Subject_surname :: Lens' ASN1Subject (Maybe Text)

-- | A subdivision or unit of the organization (such as sales or finance)
--   with which the certificate subject is affiliated.
aSN1Subject_organizationalUnit :: Lens' ASN1Subject (Maybe Text)

-- | A title such as Mr. or Ms., which is pre-pended to the name to refer
--   formally to the certificate subject.
aSN1Subject_title :: Lens' ASN1Subject (Maybe Text)

-- | Concatenation that typically contains the first letter of the
--   <b>GivenName</b>, the first letter of the middle name if one exists,
--   and the first letter of the <b>Surname</b>.
aSN1Subject_initials :: Lens' ASN1Subject (Maybe Text)

-- | For CA and end-entity certificates in a private PKI, the common name
--   (CN) can be any string within the length limit.
--   
--   Note: In publicly trusted certificates, the common name must be a
--   fully qualified domain name (FQDN) associated with the certificate
--   subject.
aSN1Subject_commonName :: Lens' ASN1Subject (Maybe Text)

-- | Typically a shortened version of a longer <b>GivenName</b>. For
--   example, Jonathan is often shortened to John. Elizabeth is often
--   shortened to Beth, Liz, or Eliza.
aSN1Subject_pseudonym :: Lens' ASN1Subject (Maybe Text)

-- | State in which the subject of the certificate is located.
aSN1Subject_state :: Lens' ASN1Subject (Maybe Text)

-- | First name.
aSN1Subject_givenName :: Lens' ASN1Subject (Maybe Text)

-- | The certificate serial number.
aSN1Subject_serialNumber :: Lens' ASN1Subject (Maybe Text)

-- | Disambiguating information for the certificate subject.
aSN1Subject_distinguishedNameQualifier :: Lens' ASN1Subject (Maybe Text)

-- | Legal name of the organization with which the certificate subject is
--   affiliated.
aSN1Subject_organization :: Lens' ASN1Subject (Maybe Text)

-- | Two-digit code that specifies the country in which the certificate
--   subject located.
aSN1Subject_country :: Lens' ASN1Subject (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.ASN1Subject.ASN1Subject
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.ASN1Subject.ASN1Subject
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.ASN1Subject.ASN1Subject
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.ASN1Subject.ASN1Subject
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.ASN1Subject.ASN1Subject
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.ASN1Subject.ASN1Subject
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.ASN1Subject.ASN1Subject
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.ASN1Subject.ASN1Subject


module Network.AWS.CertificateManagerPCA.Types.AccessMethodType
newtype AccessMethodType
AccessMethodType' :: Text -> AccessMethodType
[fromAccessMethodType] :: AccessMethodType -> Text
pattern AccessMethodType_CA_REPOSITORY :: AccessMethodType
pattern AccessMethodType_RESOURCE_PKI_MANIFEST :: AccessMethodType
pattern AccessMethodType_RESOURCE_PKI_NOTIFY :: AccessMethodType
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.AccessMethodType.AccessMethodType


module Network.AWS.CertificateManagerPCA.Types.AccessMethod

-- | Describes the type and format of extension access. Only one of
--   <tt>CustomObjectIdentifier</tt> or <tt>AccessMethodType</tt> may be
--   provided. Providing both results in <tt>InvalidArgsException</tt>.
--   
--   <i>See:</i> <a>newAccessMethod</a> smart constructor.
data AccessMethod
AccessMethod' :: Maybe AccessMethodType -> Maybe Text -> AccessMethod

-- | Specifies the <tt>AccessMethod</tt>.
[$sel:accessMethodType:AccessMethod'] :: AccessMethod -> Maybe AccessMethodType

-- | An object identifier (OID) specifying the <tt>AccessMethod</tt>. The
--   OID must satisfy the regular expression shown below. For more
--   information, see NIST's definition of <a>Object Identifier (OID)</a>.
[$sel:customObjectIdentifier:AccessMethod'] :: AccessMethod -> Maybe Text

-- | Create a value of <a>AccessMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessMethodType:AccessMethod'</a>,
--   <a>accessMethod_accessMethodType</a> - Specifies the
--   <tt>AccessMethod</tt>.
--   
--   <a>$sel:customObjectIdentifier:AccessMethod'</a>,
--   <a>accessMethod_customObjectIdentifier</a> - An object identifier
--   (OID) specifying the <tt>AccessMethod</tt>. The OID must satisfy the
--   regular expression shown below. For more information, see NIST's
--   definition of <a>Object Identifier (OID)</a>.
newAccessMethod :: AccessMethod

-- | Specifies the <tt>AccessMethod</tt>.
accessMethod_accessMethodType :: Lens' AccessMethod (Maybe AccessMethodType)

-- | An object identifier (OID) specifying the <tt>AccessMethod</tt>. The
--   OID must satisfy the regular expression shown below. For more
--   information, see NIST's definition of <a>Object Identifier (OID)</a>.
accessMethod_customObjectIdentifier :: Lens' AccessMethod (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.AccessMethod.AccessMethod
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.AccessMethod.AccessMethod
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.AccessMethod.AccessMethod
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.AccessMethod.AccessMethod
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.AccessMethod.AccessMethod
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.AccessMethod.AccessMethod
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.AccessMethod.AccessMethod
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.AccessMethod.AccessMethod


module Network.AWS.CertificateManagerPCA.Types.ActionType
newtype ActionType
ActionType' :: Text -> ActionType
[fromActionType] :: ActionType -> Text
pattern ActionType_GetCertificate :: ActionType
pattern ActionType_IssueCertificate :: ActionType
pattern ActionType_ListPermissions :: ActionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.ActionType.ActionType


module Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat
newtype AuditReportResponseFormat
AuditReportResponseFormat' :: Text -> AuditReportResponseFormat
[fromAuditReportResponseFormat] :: AuditReportResponseFormat -> Text
pattern AuditReportResponseFormat_CSV :: AuditReportResponseFormat
pattern AuditReportResponseFormat_JSON :: AuditReportResponseFormat
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.AuditReportResponseFormat.AuditReportResponseFormat


module Network.AWS.CertificateManagerPCA.Types.AuditReportStatus
newtype AuditReportStatus
AuditReportStatus' :: Text -> AuditReportStatus
[fromAuditReportStatus] :: AuditReportStatus -> Text
pattern AuditReportStatus_CREATING :: AuditReportStatus
pattern AuditReportStatus_FAILED :: AuditReportStatus
pattern AuditReportStatus_SUCCESS :: AuditReportStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.AuditReportStatus.AuditReportStatus


module Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus
newtype CertificateAuthorityStatus
CertificateAuthorityStatus' :: Text -> CertificateAuthorityStatus
[fromCertificateAuthorityStatus] :: CertificateAuthorityStatus -> Text
pattern CertificateAuthorityStatus_ACTIVE :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_CREATING :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_DELETED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_DISABLED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_EXPIRED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_FAILED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_PENDING_CERTIFICATE :: CertificateAuthorityStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityStatus.CertificateAuthorityStatus


module Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType
newtype CertificateAuthorityType
CertificateAuthorityType' :: Text -> CertificateAuthorityType
[fromCertificateAuthorityType] :: CertificateAuthorityType -> Text
pattern CertificateAuthorityType_ROOT :: CertificateAuthorityType
pattern CertificateAuthorityType_SUBORDINATE :: CertificateAuthorityType
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityType.CertificateAuthorityType


module Network.AWS.CertificateManagerPCA.Types.EdiPartyName

-- | Describes an Electronic Data Interchange (EDI) entity as described in
--   as defined in <a>Subject Alternative Name</a> in RFC 5280.
--   
--   <i>See:</i> <a>newEdiPartyName</a> smart constructor.
data EdiPartyName
EdiPartyName' :: Maybe Text -> Text -> EdiPartyName

-- | Specifies the name assigner.
[$sel:nameAssigner:EdiPartyName'] :: EdiPartyName -> Maybe Text

-- | Specifies the party name.
[$sel:partyName:EdiPartyName'] :: EdiPartyName -> Text

-- | Create a value of <a>EdiPartyName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameAssigner:EdiPartyName'</a>,
--   <a>ediPartyName_nameAssigner</a> - Specifies the name assigner.
--   
--   <a>$sel:partyName:EdiPartyName'</a>, <a>ediPartyName_partyName</a> -
--   Specifies the party name.
newEdiPartyName :: Text -> EdiPartyName

-- | Specifies the name assigner.
ediPartyName_nameAssigner :: Lens' EdiPartyName (Maybe Text)

-- | Specifies the party name.
ediPartyName_partyName :: Lens' EdiPartyName Text
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.EdiPartyName.EdiPartyName
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.EdiPartyName.EdiPartyName
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.EdiPartyName.EdiPartyName
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.EdiPartyName.EdiPartyName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.EdiPartyName.EdiPartyName
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.EdiPartyName.EdiPartyName
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.EdiPartyName.EdiPartyName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.EdiPartyName.EdiPartyName


module Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType
newtype ExtendedKeyUsageType
ExtendedKeyUsageType' :: Text -> ExtendedKeyUsageType
[fromExtendedKeyUsageType] :: ExtendedKeyUsageType -> Text
pattern ExtendedKeyUsageType_CERTIFICATE_TRANSPARENCY :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_CLIENT_AUTH :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_CODE_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_DOCUMENT_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_EMAIL_PROTECTION :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_OCSP_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_SERVER_AUTH :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_SMART_CARD_LOGIN :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_TIME_STAMPING :: ExtendedKeyUsageType
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsageType.ExtendedKeyUsageType


module Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsage

-- | Specifies additional purposes for which the certified public key may
--   be used other than basic purposes indicated in the <tt>KeyUsage</tt>
--   extension.
--   
--   <i>See:</i> <a>newExtendedKeyUsage</a> smart constructor.
data ExtendedKeyUsage
ExtendedKeyUsage' :: Maybe Text -> Maybe ExtendedKeyUsageType -> ExtendedKeyUsage

-- | Specifies a custom <tt>ExtendedKeyUsage</tt> with an object identifier
--   (OID).
[$sel:extendedKeyUsageObjectIdentifier:ExtendedKeyUsage'] :: ExtendedKeyUsage -> Maybe Text

-- | Specifies a standard <tt>ExtendedKeyUsage</tt> as defined as in <a>RFC
--   5280</a>.
[$sel:extendedKeyUsageType:ExtendedKeyUsage'] :: ExtendedKeyUsage -> Maybe ExtendedKeyUsageType

-- | Create a value of <a>ExtendedKeyUsage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extendedKeyUsageObjectIdentifier:ExtendedKeyUsage'</a>,
--   <a>extendedKeyUsage_extendedKeyUsageObjectIdentifier</a> - Specifies a
--   custom <tt>ExtendedKeyUsage</tt> with an object identifier (OID).
--   
--   <a>$sel:extendedKeyUsageType:ExtendedKeyUsage'</a>,
--   <a>extendedKeyUsage_extendedKeyUsageType</a> - Specifies a standard
--   <tt>ExtendedKeyUsage</tt> as defined as in <a>RFC 5280</a>.
newExtendedKeyUsage :: ExtendedKeyUsage

-- | Specifies a custom <tt>ExtendedKeyUsage</tt> with an object identifier
--   (OID).
extendedKeyUsage_extendedKeyUsageObjectIdentifier :: Lens' ExtendedKeyUsage (Maybe Text)

-- | Specifies a standard <tt>ExtendedKeyUsage</tt> as defined as in <a>RFC
--   5280</a>.
extendedKeyUsage_extendedKeyUsageType :: Lens' ExtendedKeyUsage (Maybe ExtendedKeyUsageType)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsage.ExtendedKeyUsage
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsage.ExtendedKeyUsage
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsage.ExtendedKeyUsage
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsage.ExtendedKeyUsage
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsage.ExtendedKeyUsage
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsage.ExtendedKeyUsage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.ExtendedKeyUsage.ExtendedKeyUsage


module Network.AWS.CertificateManagerPCA.Types.FailureReason
newtype FailureReason
FailureReason' :: Text -> FailureReason
[fromFailureReason] :: FailureReason -> Text
pattern FailureReason_OTHER :: FailureReason
pattern FailureReason_REQUEST_TIMED_OUT :: FailureReason
pattern FailureReason_UNSUPPORTED_ALGORITHM :: FailureReason
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.FailureReason.FailureReason


module Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm
newtype KeyAlgorithm
KeyAlgorithm' :: Text -> KeyAlgorithm
[fromKeyAlgorithm] :: KeyAlgorithm -> Text
pattern KeyAlgorithm_EC_prime256v1 :: KeyAlgorithm
pattern KeyAlgorithm_EC_secp384r1 :: KeyAlgorithm
pattern KeyAlgorithm_RSA_2048 :: KeyAlgorithm
pattern KeyAlgorithm_RSA_4096 :: KeyAlgorithm
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.KeyAlgorithm.KeyAlgorithm


module Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard
newtype KeyStorageSecurityStandard
KeyStorageSecurityStandard' :: Text -> KeyStorageSecurityStandard
[fromKeyStorageSecurityStandard] :: KeyStorageSecurityStandard -> Text
pattern KeyStorageSecurityStandard_FIPS_140_2_LEVEL_2_OR_HIGHER :: KeyStorageSecurityStandard
pattern KeyStorageSecurityStandard_FIPS_140_2_LEVEL_3_OR_HIGHER :: KeyStorageSecurityStandard
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.KeyStorageSecurityStandard.KeyStorageSecurityStandard


module Network.AWS.CertificateManagerPCA.Types.KeyUsage

-- | Defines one or more purposes for which the key contained in the
--   certificate can be used. Default value for each option is false.
--   
--   <i>See:</i> <a>newKeyUsage</a> smart constructor.
data KeyUsage
KeyUsage' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> KeyUsage

-- | Key can be used to decipher data.
[$sel:dataEncipherment:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used to sign certificates.
[$sel:keyCertSign:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used to sign CRLs.
[$sel:cRLSign:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used to encipher data.
[$sel:keyEncipherment:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used only to encipher data.
[$sel:encipherOnly:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used in a key-agreement protocol.
[$sel:keyAgreement:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used for digital signing.
[$sel:digitalSignature:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used only to decipher data.
[$sel:decipherOnly:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used for non-repudiation.
[$sel:nonRepudiation:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Create a value of <a>KeyUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataEncipherment:KeyUsage'</a>,
--   <a>keyUsage_dataEncipherment</a> - Key can be used to decipher data.
--   
--   <a>$sel:keyCertSign:KeyUsage'</a>, <a>keyUsage_keyCertSign</a> - Key
--   can be used to sign certificates.
--   
--   <a>$sel:cRLSign:KeyUsage'</a>, <a>keyUsage_cRLSign</a> - Key can be
--   used to sign CRLs.
--   
--   <a>$sel:keyEncipherment:KeyUsage'</a>, <a>keyUsage_keyEncipherment</a>
--   - Key can be used to encipher data.
--   
--   <a>$sel:encipherOnly:KeyUsage'</a>, <a>keyUsage_encipherOnly</a> - Key
--   can be used only to encipher data.
--   
--   <a>$sel:keyAgreement:KeyUsage'</a>, <a>keyUsage_keyAgreement</a> - Key
--   can be used in a key-agreement protocol.
--   
--   <a>$sel:digitalSignature:KeyUsage'</a>,
--   <a>keyUsage_digitalSignature</a> - Key can be used for digital
--   signing.
--   
--   <a>$sel:decipherOnly:KeyUsage'</a>, <a>keyUsage_decipherOnly</a> - Key
--   can be used only to decipher data.
--   
--   <a>$sel:nonRepudiation:KeyUsage'</a>, <a>keyUsage_nonRepudiation</a> -
--   Key can be used for non-repudiation.
newKeyUsage :: KeyUsage

-- | Key can be used to decipher data.
keyUsage_dataEncipherment :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to sign certificates.
keyUsage_keyCertSign :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to sign CRLs.
keyUsage_cRLSign :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to encipher data.
keyUsage_keyEncipherment :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used only to encipher data.
keyUsage_encipherOnly :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used in a key-agreement protocol.
keyUsage_keyAgreement :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used for digital signing.
keyUsage_digitalSignature :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used only to decipher data.
keyUsage_decipherOnly :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used for non-repudiation.
keyUsage_nonRepudiation :: Lens' KeyUsage (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.KeyUsage.KeyUsage
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.KeyUsage.KeyUsage
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.KeyUsage.KeyUsage
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.KeyUsage.KeyUsage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.KeyUsage.KeyUsage
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.KeyUsage.KeyUsage
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.KeyUsage.KeyUsage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.KeyUsage.KeyUsage


module Network.AWS.CertificateManagerPCA.Types.OcspConfiguration

-- | Contains information to enable and configure Online Certificate Status
--   Protocol (OCSP) for validating certificate revocation status.
--   
--   When you revoke a certificate, OCSP responses may take up to 60
--   minutes to reflect the new status.
--   
--   <i>See:</i> <a>newOcspConfiguration</a> smart constructor.
data OcspConfiguration
OcspConfiguration' :: Maybe Text -> Bool -> OcspConfiguration

-- | By default, ACM Private CA injects an AWS domain into certificates
--   being validated by the Online Certificate Status Protocol (OCSP). A
--   customer can alternatively use this object to define a CNAME
--   specifying a customized OCSP domain.
--   
--   Note: The value of the CNAME must not include a protocol prefix such
--   as "http://" or "https://".
--   
--   For more information, see <a>Customizing Online Certificate Status
--   Protocol (OCSP)</a> in the /AWS Certificate Manager Private
--   Certificate Authority (PCA) User Guide/.
[$sel:ocspCustomCname:OcspConfiguration'] :: OcspConfiguration -> Maybe Text

-- | Flag enabling use of the Online Certificate Status Protocol (OCSP) for
--   validating certificate revocation status.
[$sel:enabled:OcspConfiguration'] :: OcspConfiguration -> Bool

-- | Create a value of <a>OcspConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ocspCustomCname:OcspConfiguration'</a>,
--   <a>ocspConfiguration_ocspCustomCname</a> - By default, ACM Private CA
--   injects an AWS domain into certificates being validated by the Online
--   Certificate Status Protocol (OCSP). A customer can alternatively use
--   this object to define a CNAME specifying a customized OCSP domain.
--   
--   Note: The value of the CNAME must not include a protocol prefix such
--   as "http://" or "https://".
--   
--   For more information, see <a>Customizing Online Certificate Status
--   Protocol (OCSP)</a> in the /AWS Certificate Manager Private
--   Certificate Authority (PCA) User Guide/.
--   
--   <a>$sel:enabled:OcspConfiguration'</a>,
--   <a>ocspConfiguration_enabled</a> - Flag enabling use of the Online
--   Certificate Status Protocol (OCSP) for validating certificate
--   revocation status.
newOcspConfiguration :: Bool -> OcspConfiguration

-- | By default, ACM Private CA injects an AWS domain into certificates
--   being validated by the Online Certificate Status Protocol (OCSP). A
--   customer can alternatively use this object to define a CNAME
--   specifying a customized OCSP domain.
--   
--   Note: The value of the CNAME must not include a protocol prefix such
--   as "http://" or "https://".
--   
--   For more information, see <a>Customizing Online Certificate Status
--   Protocol (OCSP)</a> in the /AWS Certificate Manager Private
--   Certificate Authority (PCA) User Guide/.
ocspConfiguration_ocspCustomCname :: Lens' OcspConfiguration (Maybe Text)

-- | Flag enabling use of the Online Certificate Status Protocol (OCSP) for
--   validating certificate revocation status.
ocspConfiguration_enabled :: Lens' OcspConfiguration Bool
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.OcspConfiguration.OcspConfiguration
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.OcspConfiguration.OcspConfiguration
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.OcspConfiguration.OcspConfiguration
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.OcspConfiguration.OcspConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.OcspConfiguration.OcspConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.OcspConfiguration.OcspConfiguration
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.OcspConfiguration.OcspConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.OcspConfiguration.OcspConfiguration


module Network.AWS.CertificateManagerPCA.Types.OtherName

-- | Defines a custom ASN.1 X.400 <tt>GeneralName</tt> using an object
--   identifier (OID) and value. The OID must satisfy the regular
--   expression shown below. For more information, see NIST's definition of
--   <a>Object Identifier (OID)</a>.
--   
--   <i>See:</i> <a>newOtherName</a> smart constructor.
data OtherName
OtherName' :: Text -> Text -> OtherName

-- | Specifies an OID.
[$sel:typeId:OtherName'] :: OtherName -> Text

-- | Specifies an OID value.
[$sel:value:OtherName'] :: OtherName -> Text

-- | Create a value of <a>OtherName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typeId:OtherName'</a>, <a>otherName_typeId</a> - Specifies an
--   OID.
--   
--   <a>$sel:value:OtherName'</a>, <a>otherName_value</a> - Specifies an
--   OID value.
newOtherName :: Text -> Text -> OtherName

-- | Specifies an OID.
otherName_typeId :: Lens' OtherName Text

-- | Specifies an OID value.
otherName_value :: Lens' OtherName Text
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.OtherName.OtherName
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.OtherName.OtherName
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.OtherName.OtherName
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.OtherName.OtherName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.OtherName.OtherName
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.OtherName.OtherName
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.OtherName.OtherName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.OtherName.OtherName


module Network.AWS.CertificateManagerPCA.Types.GeneralName

-- | Describes an ASN.1 X.400 <tt>GeneralName</tt> as defined in <a>RFC
--   5280</a>. Only one of the following naming options should be provided.
--   Providing more than one option results in an
--   <tt>InvalidArgsException</tt> error.
--   
--   <i>See:</i> <a>newGeneralName</a> smart constructor.
data GeneralName
GeneralName' :: Maybe EdiPartyName -> Maybe OtherName -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ASN1Subject -> Maybe Text -> Maybe Text -> GeneralName

-- | Represents <tt>GeneralName</tt> as an <tt>EdiPartyName</tt> object.
[$sel:ediPartyName:GeneralName'] :: GeneralName -> Maybe EdiPartyName

-- | Represents <tt>GeneralName</tt> using an <tt>OtherName</tt> object.
[$sel:otherName:GeneralName'] :: GeneralName -> Maybe OtherName

-- | Represents <tt>GeneralName</tt> as a URI.
[$sel:uniformResourceIdentifier:GeneralName'] :: GeneralName -> Maybe Text

-- | Represents <tt>GeneralName</tt> as an IPv4 or IPv6 address.
[$sel:ipAddress:GeneralName'] :: GeneralName -> Maybe Text

-- | Represents <tt>GeneralName</tt> as a DNS name.
[$sel:dnsName:GeneralName'] :: GeneralName -> Maybe Text
[$sel:directoryName:GeneralName'] :: GeneralName -> Maybe ASN1Subject

-- | Represents <tt>GeneralName</tt> as an <a>RFC 822</a> email address.
[$sel:rfc822Name:GeneralName'] :: GeneralName -> Maybe Text

-- | Represents <tt>GeneralName</tt> as an object identifier (OID).
[$sel:registeredId:GeneralName'] :: GeneralName -> Maybe Text

-- | Create a value of <a>GeneralName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ediPartyName:GeneralName'</a>, <a>generalName_ediPartyName</a>
--   - Represents <tt>GeneralName</tt> as an <tt>EdiPartyName</tt> object.
--   
--   <a>$sel:otherName:GeneralName'</a>, <a>generalName_otherName</a> -
--   Represents <tt>GeneralName</tt> using an <tt>OtherName</tt> object.
--   
--   <a>$sel:uniformResourceIdentifier:GeneralName'</a>,
--   <a>generalName_uniformResourceIdentifier</a> - Represents
--   <tt>GeneralName</tt> as a URI.
--   
--   <a>$sel:ipAddress:GeneralName'</a>, <a>generalName_ipAddress</a> -
--   Represents <tt>GeneralName</tt> as an IPv4 or IPv6 address.
--   
--   <a>$sel:dnsName:GeneralName'</a>, <a>generalName_dnsName</a> -
--   Represents <tt>GeneralName</tt> as a DNS name.
--   
--   <a>$sel:directoryName:GeneralName'</a>,
--   <a>generalName_directoryName</a> - Undocumented member.
--   
--   <a>$sel:rfc822Name:GeneralName'</a>, <a>generalName_rfc822Name</a> -
--   Represents <tt>GeneralName</tt> as an <a>RFC 822</a> email address.
--   
--   <a>$sel:registeredId:GeneralName'</a>, <a>generalName_registeredId</a>
--   - Represents <tt>GeneralName</tt> as an object identifier (OID).
newGeneralName :: GeneralName

-- | Represents <tt>GeneralName</tt> as an <tt>EdiPartyName</tt> object.
generalName_ediPartyName :: Lens' GeneralName (Maybe EdiPartyName)

-- | Represents <tt>GeneralName</tt> using an <tt>OtherName</tt> object.
generalName_otherName :: Lens' GeneralName (Maybe OtherName)

-- | Represents <tt>GeneralName</tt> as a URI.
generalName_uniformResourceIdentifier :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as an IPv4 or IPv6 address.
generalName_ipAddress :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as a DNS name.
generalName_dnsName :: Lens' GeneralName (Maybe Text)

-- | Undocumented member.
generalName_directoryName :: Lens' GeneralName (Maybe ASN1Subject)

-- | Represents <tt>GeneralName</tt> as an <a>RFC 822</a> email address.
generalName_rfc822Name :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as an object identifier (OID).
generalName_registeredId :: Lens' GeneralName (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.GeneralName.GeneralName
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.GeneralName.GeneralName
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.GeneralName.GeneralName
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.GeneralName.GeneralName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.GeneralName.GeneralName
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.GeneralName.GeneralName
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.GeneralName.GeneralName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.GeneralName.GeneralName


module Network.AWS.CertificateManagerPCA.Types.AccessDescription

-- | Provides access information used by the <tt>authorityInfoAccess</tt>
--   and <tt>subjectInfoAccess</tt> extensions described in <a>RFC
--   5280</a>.
--   
--   <i>See:</i> <a>newAccessDescription</a> smart constructor.
data AccessDescription
AccessDescription' :: AccessMethod -> GeneralName -> AccessDescription

-- | The type and format of <tt>AccessDescription</tt> information.
[$sel:accessMethod:AccessDescription'] :: AccessDescription -> AccessMethod

-- | The location of <tt>AccessDescription</tt> information.
[$sel:accessLocation:AccessDescription'] :: AccessDescription -> GeneralName

-- | Create a value of <a>AccessDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessMethod:AccessDescription'</a>,
--   <a>accessDescription_accessMethod</a> - The type and format of
--   <tt>AccessDescription</tt> information.
--   
--   <a>$sel:accessLocation:AccessDescription'</a>,
--   <a>accessDescription_accessLocation</a> - The location of
--   <tt>AccessDescription</tt> information.
newAccessDescription :: AccessMethod -> GeneralName -> AccessDescription

-- | The type and format of <tt>AccessDescription</tt> information.
accessDescription_accessMethod :: Lens' AccessDescription AccessMethod

-- | The location of <tt>AccessDescription</tt> information.
accessDescription_accessLocation :: Lens' AccessDescription GeneralName
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.AccessDescription.AccessDescription
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.AccessDescription.AccessDescription
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.AccessDescription.AccessDescription
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.AccessDescription.AccessDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.AccessDescription.AccessDescription
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.AccessDescription.AccessDescription
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.AccessDescription.AccessDescription
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.AccessDescription.AccessDescription


module Network.AWS.CertificateManagerPCA.Types.CsrExtensions

-- | Describes the certificate extensions to be added to the certificate
--   signing request (CSR).
--   
--   <i>See:</i> <a>newCsrExtensions</a> smart constructor.
data CsrExtensions
CsrExtensions' :: Maybe [AccessDescription] -> Maybe KeyUsage -> CsrExtensions

-- | For CA certificates, provides a path to additional information
--   pertaining to the CA, such as revocation and policy. For more
--   information, see <a>Subject Information Access</a> in RFC 5280.
[$sel:subjectInformationAccess:CsrExtensions'] :: CsrExtensions -> Maybe [AccessDescription]

-- | Indicates the purpose of the certificate and of the key contained in
--   the certificate.
[$sel:keyUsage:CsrExtensions'] :: CsrExtensions -> Maybe KeyUsage

-- | Create a value of <a>CsrExtensions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectInformationAccess:CsrExtensions'</a>,
--   <a>csrExtensions_subjectInformationAccess</a> - For CA certificates,
--   provides a path to additional information pertaining to the CA, such
--   as revocation and policy. For more information, see <a>Subject
--   Information Access</a> in RFC 5280.
--   
--   <a>$sel:keyUsage:CsrExtensions'</a>, <a>csrExtensions_keyUsage</a> -
--   Indicates the purpose of the certificate and of the key contained in
--   the certificate.
newCsrExtensions :: CsrExtensions

-- | For CA certificates, provides a path to additional information
--   pertaining to the CA, such as revocation and policy. For more
--   information, see <a>Subject Information Access</a> in RFC 5280.
csrExtensions_subjectInformationAccess :: Lens' CsrExtensions (Maybe [AccessDescription])

-- | Indicates the purpose of the certificate and of the key contained in
--   the certificate.
csrExtensions_keyUsage :: Lens' CsrExtensions (Maybe KeyUsage)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.CsrExtensions.CsrExtensions
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.CsrExtensions.CsrExtensions
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.CsrExtensions.CsrExtensions
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.CsrExtensions.CsrExtensions
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.CsrExtensions.CsrExtensions
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.CsrExtensions.CsrExtensions
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.CsrExtensions.CsrExtensions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.CsrExtensions.CsrExtensions


module Network.AWS.CertificateManagerPCA.Types.Permission

-- | Permissions designate which private CA actions can be performed by an
--   AWS service or entity. In order for ACM to automatically renew private
--   certificates, you must give the ACM service principal all available
--   permissions (<tt>IssueCertificate</tt>, <tt>GetCertificate</tt>, and
--   <tt>ListPermissions</tt>). Permissions can be assigned with the
--   <a>CreatePermission</a> action, removed with the
--   <a>DeletePermission</a> action, and listed with the
--   <a>ListPermissions</a> action.
--   
--   <i>See:</i> <a>newPermission</a> smart constructor.
data Permission
Permission' :: Maybe Text -> Maybe POSIX -> Maybe (NonEmpty ActionType) -> Maybe Text -> Maybe Text -> Maybe Text -> Permission

-- | The Amazon Resource Number (ARN) of the private CA from which the
--   permission was issued.
[$sel:certificateAuthorityArn:Permission'] :: Permission -> Maybe Text

-- | The time at which the permission was created.
[$sel:createdAt:Permission'] :: Permission -> Maybe POSIX

-- | The private CA actions that can be performed by the designated AWS
--   service.
[$sel:actions:Permission'] :: Permission -> Maybe (NonEmpty ActionType)

-- | The AWS service or entity that holds the permission. At this time, the
--   only valid principal is <tt>acm.amazonaws.com</tt>.
[$sel:principal:Permission'] :: Permission -> Maybe Text

-- | The ID of the account that assigned the permission.
[$sel:sourceAccount:Permission'] :: Permission -> Maybe Text

-- | The name of the policy that is associated with the permission.
[$sel:policy:Permission'] :: Permission -> Maybe Text

-- | Create a value of <a>Permission</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:Permission'</a>,
--   <a>permission_certificateAuthorityArn</a> - The Amazon Resource Number
--   (ARN) of the private CA from which the permission was issued.
--   
--   <a>$sel:createdAt:Permission'</a>, <a>permission_createdAt</a> - The
--   time at which the permission was created.
--   
--   <a>$sel:actions:Permission'</a>, <a>permission_actions</a> - The
--   private CA actions that can be performed by the designated AWS
--   service.
--   
--   <a>$sel:principal:Permission'</a>, <a>permission_principal</a> - The
--   AWS service or entity that holds the permission. At this time, the
--   only valid principal is <tt>acm.amazonaws.com</tt>.
--   
--   <a>$sel:sourceAccount:Permission'</a>, <a>permission_sourceAccount</a>
--   - The ID of the account that assigned the permission.
--   
--   <a>$sel:policy:Permission'</a>, <a>permission_policy</a> - The name of
--   the policy that is associated with the permission.
newPermission :: Permission

-- | The Amazon Resource Number (ARN) of the private CA from which the
--   permission was issued.
permission_certificateAuthorityArn :: Lens' Permission (Maybe Text)

-- | The time at which the permission was created.
permission_createdAt :: Lens' Permission (Maybe UTCTime)

-- | The private CA actions that can be performed by the designated AWS
--   service.
permission_actions :: Lens' Permission (Maybe (NonEmpty ActionType))

-- | The AWS service or entity that holds the permission. At this time, the
--   only valid principal is <tt>acm.amazonaws.com</tt>.
permission_principal :: Lens' Permission (Maybe Text)

-- | The ID of the account that assigned the permission.
permission_sourceAccount :: Lens' Permission (Maybe Text)

-- | The name of the policy that is associated with the permission.
permission_policy :: Lens' Permission (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.Permission.Permission
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.Permission.Permission
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.Permission.Permission
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.Permission.Permission
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.Permission.Permission
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.Permission.Permission


module Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId
newtype PolicyQualifierId
PolicyQualifierId' :: Text -> PolicyQualifierId
[fromPolicyQualifierId] :: PolicyQualifierId -> Text
pattern PolicyQualifierId_CPS :: PolicyQualifierId
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.PolicyQualifierId.PolicyQualifierId


module Network.AWS.CertificateManagerPCA.Types.Qualifier

-- | Defines a <tt>PolicyInformation</tt> qualifier. ACM Private CA
--   supports the <a>certification practice statement (CPS) qualifier</a>
--   defined in RFC 5280.
--   
--   <i>See:</i> <a>newQualifier</a> smart constructor.
data Qualifier
Qualifier' :: Text -> Qualifier

-- | Contains a pointer to a certification practice statement (CPS)
--   published by the CA.
[$sel:cpsUri:Qualifier'] :: Qualifier -> Text

-- | Create a value of <a>Qualifier</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cpsUri:Qualifier'</a>, <a>qualifier_cpsUri</a> - Contains a
--   pointer to a certification practice statement (CPS) published by the
--   CA.
newQualifier :: Text -> Qualifier

-- | Contains a pointer to a certification practice statement (CPS)
--   published by the CA.
qualifier_cpsUri :: Lens' Qualifier Text
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.Qualifier.Qualifier
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.Qualifier.Qualifier
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.Qualifier.Qualifier
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.Qualifier.Qualifier
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.Qualifier.Qualifier
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.Qualifier.Qualifier
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.Qualifier.Qualifier


module Network.AWS.CertificateManagerPCA.Types.PolicyQualifierInfo

-- | Modifies the <tt>CertPolicyId</tt> of a <tt>PolicyInformation</tt>
--   object with a qualifier. ACM Private CA supports the certification
--   practice statement (CPS) qualifier.
--   
--   <i>See:</i> <a>newPolicyQualifierInfo</a> smart constructor.
data PolicyQualifierInfo
PolicyQualifierInfo' :: PolicyQualifierId -> Qualifier -> PolicyQualifierInfo

-- | Identifies the qualifier modifying a <tt>CertPolicyId</tt>.
[$sel:policyQualifierId:PolicyQualifierInfo'] :: PolicyQualifierInfo -> PolicyQualifierId

-- | Defines the qualifier type. ACM Private CA supports the use of a URI
--   for a CPS qualifier in this field.
[$sel:qualifier:PolicyQualifierInfo'] :: PolicyQualifierInfo -> Qualifier

-- | Create a value of <a>PolicyQualifierInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyQualifierId:PolicyQualifierInfo'</a>,
--   <a>policyQualifierInfo_policyQualifierId</a> - Identifies the
--   qualifier modifying a <tt>CertPolicyId</tt>.
--   
--   <a>$sel:qualifier:PolicyQualifierInfo'</a>,
--   <a>policyQualifierInfo_qualifier</a> - Defines the qualifier type. ACM
--   Private CA supports the use of a URI for a CPS qualifier in this
--   field.
newPolicyQualifierInfo :: PolicyQualifierId -> Qualifier -> PolicyQualifierInfo

-- | Identifies the qualifier modifying a <tt>CertPolicyId</tt>.
policyQualifierInfo_policyQualifierId :: Lens' PolicyQualifierInfo PolicyQualifierId

-- | Defines the qualifier type. ACM Private CA supports the use of a URI
--   for a CPS qualifier in this field.
policyQualifierInfo_qualifier :: Lens' PolicyQualifierInfo Qualifier
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.PolicyQualifierInfo.PolicyQualifierInfo
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.PolicyQualifierInfo.PolicyQualifierInfo
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.PolicyQualifierInfo.PolicyQualifierInfo
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.PolicyQualifierInfo.PolicyQualifierInfo
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.PolicyQualifierInfo.PolicyQualifierInfo
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.PolicyQualifierInfo.PolicyQualifierInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.PolicyQualifierInfo.PolicyQualifierInfo


module Network.AWS.CertificateManagerPCA.Types.PolicyInformation

-- | Defines the X.509 <tt>CertificatePolicies</tt> extension.
--   
--   <i>See:</i> <a>newPolicyInformation</a> smart constructor.
data PolicyInformation
PolicyInformation' :: Maybe (NonEmpty PolicyQualifierInfo) -> Text -> PolicyInformation

-- | Modifies the given <tt>CertPolicyId</tt> with a qualifier. ACM Private
--   CA supports the certification practice statement (CPS) qualifier.
[$sel:policyQualifiers:PolicyInformation'] :: PolicyInformation -> Maybe (NonEmpty PolicyQualifierInfo)

-- | Specifies the object identifier (OID) of the certificate policy under
--   which the certificate was issued. For more information, see NIST's
--   definition of <a>Object Identifier (OID)</a>.
[$sel:certPolicyId:PolicyInformation'] :: PolicyInformation -> Text

-- | Create a value of <a>PolicyInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyQualifiers:PolicyInformation'</a>,
--   <a>policyInformation_policyQualifiers</a> - Modifies the given
--   <tt>CertPolicyId</tt> with a qualifier. ACM Private CA supports the
--   certification practice statement (CPS) qualifier.
--   
--   <a>$sel:certPolicyId:PolicyInformation'</a>,
--   <a>policyInformation_certPolicyId</a> - Specifies the object
--   identifier (OID) of the certificate policy under which the certificate
--   was issued. For more information, see NIST's definition of <a>Object
--   Identifier (OID)</a>.
newPolicyInformation :: Text -> PolicyInformation

-- | Modifies the given <tt>CertPolicyId</tt> with a qualifier. ACM Private
--   CA supports the certification practice statement (CPS) qualifier.
policyInformation_policyQualifiers :: Lens' PolicyInformation (Maybe (NonEmpty PolicyQualifierInfo))

-- | Specifies the object identifier (OID) of the certificate policy under
--   which the certificate was issued. For more information, see NIST's
--   definition of <a>Object Identifier (OID)</a>.
policyInformation_certPolicyId :: Lens' PolicyInformation Text
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.PolicyInformation.PolicyInformation
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.PolicyInformation.PolicyInformation
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.PolicyInformation.PolicyInformation
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.PolicyInformation.PolicyInformation
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.PolicyInformation.PolicyInformation
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.PolicyInformation.PolicyInformation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.PolicyInformation.PolicyInformation


module Network.AWS.CertificateManagerPCA.Types.Extensions

-- | Contains X.509 extension information for a certificate.
--   
--   <i>See:</i> <a>newExtensions</a> smart constructor.
data Extensions
Extensions' :: Maybe (NonEmpty PolicyInformation) -> Maybe (NonEmpty ExtendedKeyUsage) -> Maybe (NonEmpty GeneralName) -> Maybe KeyUsage -> Extensions

-- | Contains a sequence of one or more policy information terms, each of
--   which consists of an object identifier (OID) and optional qualifiers.
--   For more information, see NIST's definition of <a>Object Identifier
--   (OID)</a>.
--   
--   In an end-entity certificate, these terms indicate the policy under
--   which the certificate was issued and the purposes for which it may be
--   used. In a CA certificate, these terms limit the set of policies for
--   certification paths that include this certificate.
[$sel:certificatePolicies:Extensions'] :: Extensions -> Maybe (NonEmpty PolicyInformation)

-- | Specifies additional purposes for which the certified public key may
--   be used other than basic purposes indicated in the <tt>KeyUsage</tt>
--   extension.
[$sel:extendedKeyUsage:Extensions'] :: Extensions -> Maybe (NonEmpty ExtendedKeyUsage)

-- | The subject alternative name extension allows identities to be bound
--   to the subject of the certificate. These identities may be included in
--   addition to or in place of the identity in the subject field of the
--   certificate.
[$sel:subjectAlternativeNames:Extensions'] :: Extensions -> Maybe (NonEmpty GeneralName)
[$sel:keyUsage:Extensions'] :: Extensions -> Maybe KeyUsage

-- | Create a value of <a>Extensions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificatePolicies:Extensions'</a>,
--   <a>extensions_certificatePolicies</a> - Contains a sequence of one or
--   more policy information terms, each of which consists of an object
--   identifier (OID) and optional qualifiers. For more information, see
--   NIST's definition of <a>Object Identifier (OID)</a>.
--   
--   In an end-entity certificate, these terms indicate the policy under
--   which the certificate was issued and the purposes for which it may be
--   used. In a CA certificate, these terms limit the set of policies for
--   certification paths that include this certificate.
--   
--   <a>$sel:extendedKeyUsage:Extensions'</a>,
--   <a>extensions_extendedKeyUsage</a> - Specifies additional purposes for
--   which the certified public key may be used other than basic purposes
--   indicated in the <tt>KeyUsage</tt> extension.
--   
--   <a>$sel:subjectAlternativeNames:Extensions'</a>,
--   <a>extensions_subjectAlternativeNames</a> - The subject alternative
--   name extension allows identities to be bound to the subject of the
--   certificate. These identities may be included in addition to or in
--   place of the identity in the subject field of the certificate.
--   
--   <a>$sel:keyUsage:Extensions'</a>, <a>extensions_keyUsage</a> -
--   Undocumented member.
newExtensions :: Extensions

-- | Contains a sequence of one or more policy information terms, each of
--   which consists of an object identifier (OID) and optional qualifiers.
--   For more information, see NIST's definition of <a>Object Identifier
--   (OID)</a>.
--   
--   In an end-entity certificate, these terms indicate the policy under
--   which the certificate was issued and the purposes for which it may be
--   used. In a CA certificate, these terms limit the set of policies for
--   certification paths that include this certificate.
extensions_certificatePolicies :: Lens' Extensions (Maybe (NonEmpty PolicyInformation))

-- | Specifies additional purposes for which the certified public key may
--   be used other than basic purposes indicated in the <tt>KeyUsage</tt>
--   extension.
extensions_extendedKeyUsage :: Lens' Extensions (Maybe (NonEmpty ExtendedKeyUsage))

-- | The subject alternative name extension allows identities to be bound
--   to the subject of the certificate. These identities may be included in
--   addition to or in place of the identity in the subject field of the
--   certificate.
extensions_subjectAlternativeNames :: Lens' Extensions (Maybe (NonEmpty GeneralName))

-- | Undocumented member.
extensions_keyUsage :: Lens' Extensions (Maybe KeyUsage)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.Extensions.Extensions
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.Extensions.Extensions
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.Extensions.Extensions
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.Extensions.Extensions
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.Extensions.Extensions
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.Extensions.Extensions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.Extensions.Extensions


module Network.AWS.CertificateManagerPCA.Types.ApiPassthrough

-- | Contains X.509 certificate information to be placed in an issued
--   certificate. An <tt>APIPassthrough</tt> or <tt>APICSRPassthrough</tt>
--   template variant must be selected, or else this parameter is ignored.
--   
--   If conflicting or duplicate certificate information is supplied from
--   other sources, ACM Private CA applies <a>order of operation rules</a>
--   to determine what information is used.
--   
--   <i>See:</i> <a>newApiPassthrough</a> smart constructor.
data ApiPassthrough
ApiPassthrough' :: Maybe Extensions -> Maybe ASN1Subject -> ApiPassthrough

-- | Specifies X.509 extension information for a certificate.
[$sel:extensions:ApiPassthrough'] :: ApiPassthrough -> Maybe Extensions
[$sel:subject:ApiPassthrough'] :: ApiPassthrough -> Maybe ASN1Subject

-- | Create a value of <a>ApiPassthrough</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extensions:ApiPassthrough'</a>,
--   <a>apiPassthrough_extensions</a> - Specifies X.509 extension
--   information for a certificate.
--   
--   <a>$sel:subject:ApiPassthrough'</a>, <a>apiPassthrough_subject</a> -
--   Undocumented member.
newApiPassthrough :: ApiPassthrough

-- | Specifies X.509 extension information for a certificate.
apiPassthrough_extensions :: Lens' ApiPassthrough (Maybe Extensions)

-- | Undocumented member.
apiPassthrough_subject :: Lens' ApiPassthrough (Maybe ASN1Subject)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.ApiPassthrough.ApiPassthrough
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.ApiPassthrough.ApiPassthrough
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.ApiPassthrough.ApiPassthrough
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.ApiPassthrough.ApiPassthrough
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.ApiPassthrough.ApiPassthrough
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.ApiPassthrough.ApiPassthrough
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.ApiPassthrough.ApiPassthrough


module Network.AWS.CertificateManagerPCA.Types.ResourceOwner
newtype ResourceOwner
ResourceOwner' :: Text -> ResourceOwner
[fromResourceOwner] :: ResourceOwner -> Text
pattern ResourceOwner_OTHER_ACCOUNTS :: ResourceOwner
pattern ResourceOwner_SELF :: ResourceOwner
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.ResourceOwner.ResourceOwner


module Network.AWS.CertificateManagerPCA.Types.RevocationReason
newtype RevocationReason
RevocationReason' :: Text -> RevocationReason
[fromRevocationReason] :: RevocationReason -> Text
pattern RevocationReason_AFFILIATION_CHANGED :: RevocationReason
pattern RevocationReason_A_A_COMPROMISE :: RevocationReason
pattern RevocationReason_CERTIFICATE_AUTHORITY_COMPROMISE :: RevocationReason
pattern RevocationReason_CESSATION_OF_OPERATION :: RevocationReason
pattern RevocationReason_KEY_COMPROMISE :: RevocationReason
pattern RevocationReason_PRIVILEGE_WITHDRAWN :: RevocationReason
pattern RevocationReason_SUPERSEDED :: RevocationReason
pattern RevocationReason_UNSPECIFIED :: RevocationReason
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.RevocationReason.RevocationReason


module Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl
newtype S3ObjectAcl
S3ObjectAcl' :: Text -> S3ObjectAcl
[fromS3ObjectAcl] :: S3ObjectAcl -> Text
pattern S3ObjectAcl_BUCKET_OWNER_FULL_CONTROL :: S3ObjectAcl
pattern S3ObjectAcl_PUBLIC_READ :: S3ObjectAcl
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.S3ObjectAcl.S3ObjectAcl


module Network.AWS.CertificateManagerPCA.Types.CrlConfiguration

-- | Contains configuration information for a certificate revocation list
--   (CRL). Your private certificate authority (CA) creates base CRLs.
--   Delta CRLs are not supported. You can enable CRLs for your new or an
--   existing private CA by setting the <b>Enabled</b> parameter to
--   <tt>true</tt>. Your private CA writes CRLs to an S3 bucket that you
--   specify in the <b>S3BucketName</b> parameter. You can hide the name of
--   your bucket by specifying a value for the <b>CustomCname</b>
--   parameter. Your private CA copies the CNAME or the S3 bucket name to
--   the <b>CRL Distribution Points</b> extension of each certificate it
--   issues. Your S3 bucket policy must give write permission to ACM
--   Private CA.
--   
--   ACM Private CA assets that are stored in Amazon S3 can be protected
--   with encryption. For more information, see <a>Encrypting Your
--   CRLs</a>.
--   
--   Your private CA uses the value in the <b>ExpirationInDays</b>
--   parameter to calculate the <b>nextUpdate</b> field in the CRL. The CRL
--   is refreshed at 1/2 the age of next update or when a certificate is
--   revoked. When a certificate is revoked, it is recorded in the next CRL
--   that is generated and in the next audit report. Only time valid
--   certificates are listed in the CRL. Expired certificates are not
--   included.
--   
--   A CRL is typically updated approximately 30 minutes after a
--   certificate is revoked. If for any reason a CRL update fails, ACM
--   Private CA makes further attempts every 15 minutes.
--   
--   CRLs contain the following fields:
--   
--   <ul>
--   <li><b>Version</b>: The current version number defined in RFC 5280 is
--   V2. The integer value is 0x1.</li>
--   <li><b>Signature Algorithm</b>: The name of the algorithm used to sign
--   the CRL.</li>
--   <li><b>Issuer</b>: The X.500 distinguished name of your private CA
--   that issued the CRL.</li>
--   <li><b>Last Update</b>: The issue date and time of this CRL.</li>
--   <li><b>Next Update</b>: The day and time by which the next CRL will be
--   issued.</li>
--   <li><b>Revoked Certificates</b>: List of revoked certificates. Each
--   list item contains the following information.<ul><li><b>Serial
--   Number</b>: The serial number, in hexadecimal format, of the revoked
--   certificate.</li><li><b>Revocation Date</b>: Date and time the
--   certificate was revoked.</li><li><b>CRL Entry Extensions</b>: Optional
--   extensions for the CRL entry.<ul><li><b>X509v3 CRL Reason Code</b>:
--   Reason the certificate was revoked.</li></ul></li></ul></li>
--   <li><b>CRL Extensions</b>: Optional extensions for the
--   CRL.<ul><li><b>X509v3 Authority Key Identifier</b>: Identifies the
--   public key associated with the private key used to sign the
--   certificate.</li><li><b>X509v3 CRL Number:</b>: Decimal sequence
--   number for the CRL.</li></ul></li>
--   <li><b>Signature Algorithm</b>: Algorithm used by your private CA to
--   sign the CRL.</li>
--   <li><b>Signature Value</b>: Signature computed over the CRL.</li>
--   </ul>
--   
--   Certificate revocation lists created by ACM Private CA are
--   DER-encoded. You can use the following OpenSSL command to list a CRL.
--   
--   <pre>
--   openssl crl -inform DER -text -in crl_path -noout
--   </pre>
--   
--   For more information, see <a>Planning a certificate revocation list
--   (CRL)</a> in the /AWS Certificate Manager Private Certificate
--   Authority (PCA) User Guide/
--   
--   <i>See:</i> <a>newCrlConfiguration</a> smart constructor.
data CrlConfiguration
CrlConfiguration' :: Maybe Text -> Maybe S3ObjectAcl -> Maybe Text -> Maybe Natural -> Bool -> CrlConfiguration

-- | Name inserted into the certificate <b>CRL Distribution Points</b>
--   extension that enables the use of an alias for the CRL distribution
--   point. Use this value if you don't want the name of your S3 bucket to
--   be public.
[$sel:customCname:CrlConfiguration'] :: CrlConfiguration -> Maybe Text

-- | Determines whether the CRL will be publicly readable or privately held
--   in the CRL Amazon S3 bucket. If you choose PUBLIC_READ, the CRL will
--   be accessible over the public internet. If you choose
--   BUCKET_OWNER_FULL_CONTROL, only the owner of the CRL S3 bucket can
--   access the CRL, and your PKI clients may need an alternative method of
--   access.
--   
--   If no value is specified, the default is <tt>PUBLIC_READ</tt>.
--   
--   <i>Note:</i> This default can cause CA creation to fail in some
--   circumstances. If you have have enabled the Block Public Access (BPA)
--   feature in your S3 account, then you must specify the value of this
--   parameter as <tt>BUCKET_OWNER_FULL_CONTROL</tt>, and not doing so
--   results in an error. If you have disabled BPA in S3, then you can
--   specify either <tt>BUCKET_OWNER_FULL_CONTROL</tt> or
--   <tt>PUBLIC_READ</tt> as the value.
--   
--   For more information, see <a>Blocking public access to the S3
--   bucket</a>.
[$sel:s3ObjectAcl:CrlConfiguration'] :: CrlConfiguration -> Maybe S3ObjectAcl

-- | Name of the S3 bucket that contains the CRL. If you do not provide a
--   value for the <b>CustomCname</b> argument, the name of your S3 bucket
--   is placed into the <b>CRL Distribution Points</b> extension of the
--   issued certificate. You can change the name of your bucket by calling
--   the <a>UpdateCertificateAuthority</a> operation. You must specify a
--   <a>bucket policy</a> that allows ACM Private CA to write the CRL to
--   your bucket.
[$sel:s3BucketName:CrlConfiguration'] :: CrlConfiguration -> Maybe Text

-- | Validity period of the CRL in days.
[$sel:expirationInDays:CrlConfiguration'] :: CrlConfiguration -> Maybe Natural

-- | Boolean value that specifies whether certificate revocation lists
--   (CRLs) are enabled. You can use this value to enable certificate
--   revocation for a new CA when you call the
--   <a>CreateCertificateAuthority</a> action or for an existing CA when
--   you call the <a>UpdateCertificateAuthority</a> action.
[$sel:enabled:CrlConfiguration'] :: CrlConfiguration -> Bool

-- | Create a value of <a>CrlConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customCname:CrlConfiguration'</a>,
--   <a>crlConfiguration_customCname</a> - Name inserted into the
--   certificate <b>CRL Distribution Points</b> extension that enables the
--   use of an alias for the CRL distribution point. Use this value if you
--   don't want the name of your S3 bucket to be public.
--   
--   <a>$sel:s3ObjectAcl:CrlConfiguration'</a>,
--   <a>crlConfiguration_s3ObjectAcl</a> - Determines whether the CRL will
--   be publicly readable or privately held in the CRL Amazon S3 bucket. If
--   you choose PUBLIC_READ, the CRL will be accessible over the public
--   internet. If you choose BUCKET_OWNER_FULL_CONTROL, only the owner of
--   the CRL S3 bucket can access the CRL, and your PKI clients may need an
--   alternative method of access.
--   
--   If no value is specified, the default is <tt>PUBLIC_READ</tt>.
--   
--   <i>Note:</i> This default can cause CA creation to fail in some
--   circumstances. If you have have enabled the Block Public Access (BPA)
--   feature in your S3 account, then you must specify the value of this
--   parameter as <tt>BUCKET_OWNER_FULL_CONTROL</tt>, and not doing so
--   results in an error. If you have disabled BPA in S3, then you can
--   specify either <tt>BUCKET_OWNER_FULL_CONTROL</tt> or
--   <tt>PUBLIC_READ</tt> as the value.
--   
--   For more information, see <a>Blocking public access to the S3
--   bucket</a>.
--   
--   <a>$sel:s3BucketName:CrlConfiguration'</a>,
--   <a>crlConfiguration_s3BucketName</a> - Name of the S3 bucket that
--   contains the CRL. If you do not provide a value for the
--   <b>CustomCname</b> argument, the name of your S3 bucket is placed into
--   the <b>CRL Distribution Points</b> extension of the issued
--   certificate. You can change the name of your bucket by calling the
--   <a>UpdateCertificateAuthority</a> operation. You must specify a
--   <a>bucket policy</a> that allows ACM Private CA to write the CRL to
--   your bucket.
--   
--   <a>$sel:expirationInDays:CrlConfiguration'</a>,
--   <a>crlConfiguration_expirationInDays</a> - Validity period of the CRL
--   in days.
--   
--   <a>$sel:enabled:CrlConfiguration'</a>, <a>crlConfiguration_enabled</a>
--   - Boolean value that specifies whether certificate revocation lists
--   (CRLs) are enabled. You can use this value to enable certificate
--   revocation for a new CA when you call the
--   <a>CreateCertificateAuthority</a> action or for an existing CA when
--   you call the <a>UpdateCertificateAuthority</a> action.
newCrlConfiguration :: Bool -> CrlConfiguration

-- | Name inserted into the certificate <b>CRL Distribution Points</b>
--   extension that enables the use of an alias for the CRL distribution
--   point. Use this value if you don't want the name of your S3 bucket to
--   be public.
crlConfiguration_customCname :: Lens' CrlConfiguration (Maybe Text)

-- | Determines whether the CRL will be publicly readable or privately held
--   in the CRL Amazon S3 bucket. If you choose PUBLIC_READ, the CRL will
--   be accessible over the public internet. If you choose
--   BUCKET_OWNER_FULL_CONTROL, only the owner of the CRL S3 bucket can
--   access the CRL, and your PKI clients may need an alternative method of
--   access.
--   
--   If no value is specified, the default is <tt>PUBLIC_READ</tt>.
--   
--   <i>Note:</i> This default can cause CA creation to fail in some
--   circumstances. If you have have enabled the Block Public Access (BPA)
--   feature in your S3 account, then you must specify the value of this
--   parameter as <tt>BUCKET_OWNER_FULL_CONTROL</tt>, and not doing so
--   results in an error. If you have disabled BPA in S3, then you can
--   specify either <tt>BUCKET_OWNER_FULL_CONTROL</tt> or
--   <tt>PUBLIC_READ</tt> as the value.
--   
--   For more information, see <a>Blocking public access to the S3
--   bucket</a>.
crlConfiguration_s3ObjectAcl :: Lens' CrlConfiguration (Maybe S3ObjectAcl)

-- | Name of the S3 bucket that contains the CRL. If you do not provide a
--   value for the <b>CustomCname</b> argument, the name of your S3 bucket
--   is placed into the <b>CRL Distribution Points</b> extension of the
--   issued certificate. You can change the name of your bucket by calling
--   the <a>UpdateCertificateAuthority</a> operation. You must specify a
--   <a>bucket policy</a> that allows ACM Private CA to write the CRL to
--   your bucket.
crlConfiguration_s3BucketName :: Lens' CrlConfiguration (Maybe Text)

-- | Validity period of the CRL in days.
crlConfiguration_expirationInDays :: Lens' CrlConfiguration (Maybe Natural)

-- | Boolean value that specifies whether certificate revocation lists
--   (CRLs) are enabled. You can use this value to enable certificate
--   revocation for a new CA when you call the
--   <a>CreateCertificateAuthority</a> action or for an existing CA when
--   you call the <a>UpdateCertificateAuthority</a> action.
crlConfiguration_enabled :: Lens' CrlConfiguration Bool
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.CrlConfiguration.CrlConfiguration
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.CrlConfiguration.CrlConfiguration
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.CrlConfiguration.CrlConfiguration
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.CrlConfiguration.CrlConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.CrlConfiguration.CrlConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.CrlConfiguration.CrlConfiguration
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.CrlConfiguration.CrlConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.CrlConfiguration.CrlConfiguration


module Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration

-- | Certificate revocation information used by the
--   <a>CreateCertificateAuthority</a> and
--   <a>UpdateCertificateAuthority</a> actions. Your private certificate
--   authority (CA) can configure Online Certificate Status Protocol (OCSP)
--   support and/or maintain a certificate revocation list (CRL). OCSP
--   returns validation information about certificates as requested by
--   clients, and a CRL contains an updated list of certificates revoked by
--   your CA. For more information, see <a>RevokeCertificate</a> and
--   <a>Setting up a certificate revocation method</a> in the /AWS
--   Certificate Manager Private Certificate Authority (PCA) User Guide/.
--   
--   <i>See:</i> <a>newRevocationConfiguration</a> smart constructor.
data RevocationConfiguration
RevocationConfiguration' :: Maybe OcspConfiguration -> Maybe CrlConfiguration -> RevocationConfiguration

-- | Configuration of Online Certificate Status Protocol (OCSP) support, if
--   any, maintained by your private CA. When you revoke a certificate,
--   OCSP responses may take up to 60 minutes to reflect the new status.
[$sel:ocspConfiguration:RevocationConfiguration'] :: RevocationConfiguration -> Maybe OcspConfiguration

-- | Configuration of the certificate revocation list (CRL), if any,
--   maintained by your private CA. A CRL is typically updated
--   approximately 30 minutes after a certificate is revoked. If for any
--   reason a CRL update fails, ACM Private CA makes further attempts every
--   15 minutes.
[$sel:crlConfiguration:RevocationConfiguration'] :: RevocationConfiguration -> Maybe CrlConfiguration

-- | Create a value of <a>RevocationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ocspConfiguration:RevocationConfiguration'</a>,
--   <a>revocationConfiguration_ocspConfiguration</a> - Configuration of
--   Online Certificate Status Protocol (OCSP) support, if any, maintained
--   by your private CA. When you revoke a certificate, OCSP responses may
--   take up to 60 minutes to reflect the new status.
--   
--   <a>$sel:crlConfiguration:RevocationConfiguration'</a>,
--   <a>revocationConfiguration_crlConfiguration</a> - Configuration of the
--   certificate revocation list (CRL), if any, maintained by your private
--   CA. A CRL is typically updated approximately 30 minutes after a
--   certificate is revoked. If for any reason a CRL update fails, ACM
--   Private CA makes further attempts every 15 minutes.
newRevocationConfiguration :: RevocationConfiguration

-- | Configuration of Online Certificate Status Protocol (OCSP) support, if
--   any, maintained by your private CA. When you revoke a certificate,
--   OCSP responses may take up to 60 minutes to reflect the new status.
revocationConfiguration_ocspConfiguration :: Lens' RevocationConfiguration (Maybe OcspConfiguration)

-- | Configuration of the certificate revocation list (CRL), if any,
--   maintained by your private CA. A CRL is typically updated
--   approximately 30 minutes after a certificate is revoked. If for any
--   reason a CRL update fails, ACM Private CA makes further attempts every
--   15 minutes.
revocationConfiguration_crlConfiguration :: Lens' RevocationConfiguration (Maybe CrlConfiguration)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration.RevocationConfiguration
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration.RevocationConfiguration
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration.RevocationConfiguration
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration.RevocationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration.RevocationConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration.RevocationConfiguration
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration.RevocationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.RevocationConfiguration.RevocationConfiguration


module Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm
newtype SigningAlgorithm
SigningAlgorithm' :: Text -> SigningAlgorithm
[fromSigningAlgorithm] :: SigningAlgorithm -> Text
pattern SigningAlgorithm_SHA256WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA256WITHRSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA384WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA384WITHRSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA512WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA512WITHRSA :: SigningAlgorithm
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.SigningAlgorithm.SigningAlgorithm


module Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration

-- | Contains configuration information for your private certificate
--   authority (CA). This includes information about the class of public
--   key algorithm and the key pair that your private CA creates when it
--   issues a certificate. It also includes the signature algorithm that it
--   uses when issuing certificates, and its X.500 distinguished name. You
--   must specify this information when you call the
--   <a>CreateCertificateAuthority</a> action.
--   
--   <i>See:</i> <a>newCertificateAuthorityConfiguration</a> smart
--   constructor.
data CertificateAuthorityConfiguration
CertificateAuthorityConfiguration' :: Maybe CsrExtensions -> KeyAlgorithm -> SigningAlgorithm -> ASN1Subject -> CertificateAuthorityConfiguration

-- | Specifies information to be added to the extension section of the
--   certificate signing request (CSR).
[$sel:csrExtensions:CertificateAuthorityConfiguration'] :: CertificateAuthorityConfiguration -> Maybe CsrExtensions

-- | Type of the public key algorithm and size, in bits, of the key pair
--   that your CA creates when it issues a certificate. When you create a
--   subordinate CA, you must use a key algorithm supported by the parent
--   CA.
[$sel:keyAlgorithm:CertificateAuthorityConfiguration'] :: CertificateAuthorityConfiguration -> KeyAlgorithm

-- | Name of the algorithm your private CA uses to sign certificate
--   requests.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign certificates when
--   they are issued.
[$sel:signingAlgorithm:CertificateAuthorityConfiguration'] :: CertificateAuthorityConfiguration -> SigningAlgorithm

-- | Structure that contains X.500 distinguished name information for your
--   private CA.
[$sel:subject:CertificateAuthorityConfiguration'] :: CertificateAuthorityConfiguration -> ASN1Subject

-- | Create a value of <a>CertificateAuthorityConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:csrExtensions:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_csrExtensions</a> - Specifies
--   information to be added to the extension section of the certificate
--   signing request (CSR).
--   
--   <a>$sel:keyAlgorithm:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_keyAlgorithm</a> - Type of the
--   public key algorithm and size, in bits, of the key pair that your CA
--   creates when it issues a certificate. When you create a subordinate
--   CA, you must use a key algorithm supported by the parent CA.
--   
--   <a>$sel:signingAlgorithm:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_signingAlgorithm</a> - Name of
--   the algorithm your private CA uses to sign certificate requests.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign certificates when
--   they are issued.
--   
--   <a>$sel:subject:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_subject</a> - Structure that
--   contains X.500 distinguished name information for your private CA.
newCertificateAuthorityConfiguration :: KeyAlgorithm -> SigningAlgorithm -> ASN1Subject -> CertificateAuthorityConfiguration

-- | Specifies information to be added to the extension section of the
--   certificate signing request (CSR).
certificateAuthorityConfiguration_csrExtensions :: Lens' CertificateAuthorityConfiguration (Maybe CsrExtensions)

-- | Type of the public key algorithm and size, in bits, of the key pair
--   that your CA creates when it issues a certificate. When you create a
--   subordinate CA, you must use a key algorithm supported by the parent
--   CA.
certificateAuthorityConfiguration_keyAlgorithm :: Lens' CertificateAuthorityConfiguration KeyAlgorithm

-- | Name of the algorithm your private CA uses to sign certificate
--   requests.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign certificates when
--   they are issued.
certificateAuthorityConfiguration_signingAlgorithm :: Lens' CertificateAuthorityConfiguration SigningAlgorithm

-- | Structure that contains X.500 distinguished name information for your
--   private CA.
certificateAuthorityConfiguration_subject :: Lens' CertificateAuthorityConfiguration ASN1Subject
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration.CertificateAuthorityConfiguration
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration.CertificateAuthorityConfiguration
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration.CertificateAuthorityConfiguration
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration.CertificateAuthorityConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration.CertificateAuthorityConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration.CertificateAuthorityConfiguration
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration.CertificateAuthorityConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.CertificateAuthorityConfiguration.CertificateAuthorityConfiguration


module Network.AWS.CertificateManagerPCA.Types.CertificateAuthority

-- | Contains information about your private certificate authority (CA).
--   Your private CA can issue and revoke X.509 digital certificates.
--   Digital certificates verify that the entity named in the certificate
--   <b>Subject</b> field owns or controls the public key contained in the
--   __Subject Public Key Info__ field. Call the
--   <a>CreateCertificateAuthority</a> action to create your private CA.
--   You must then call the <a>GetCertificateAuthorityCertificate</a>
--   action to retrieve a private CA certificate signing request (CSR).
--   Sign the CSR with your ACM Private CA-hosted or on-premises root or
--   subordinate CA certificate. Call the
--   <a>ImportCertificateAuthorityCertificate</a> action to import the
--   signed certificate into AWS Certificate Manager (ACM).
--   
--   <i>See:</i> <a>newCertificateAuthority</a> smart constructor.
data CertificateAuthority
CertificateAuthority' :: Maybe CertificateAuthorityStatus -> Maybe POSIX -> Maybe KeyStorageSecurityStandard -> Maybe RevocationConfiguration -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe CertificateAuthorityConfiguration -> Maybe FailureReason -> Maybe POSIX -> Maybe POSIX -> Maybe CertificateAuthorityType -> Maybe Text -> Maybe POSIX -> CertificateAuthority

-- | Status of your private CA.
[$sel:status:CertificateAuthority'] :: CertificateAuthority -> Maybe CertificateAuthorityStatus

-- | Date and time before which your private CA certificate is not valid.
[$sel:notBefore:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Defines a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: AWS Region ap-northeast-3 supports only
--   FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
--   parameter and value when creating a CA in that Region. Specifying a
--   different value (or no value) results in an
--   <tt>InvalidArgsException</tt> with the message "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
[$sel:keyStorageSecurityStandard:CertificateAuthority'] :: CertificateAuthority -> Maybe KeyStorageSecurityStandard

-- | Information about the Online Certificate Status Protocol (OCSP)
--   configuration or certificate revocation list (CRL) created and
--   maintained by your private CA.
[$sel:revocationConfiguration:CertificateAuthority'] :: CertificateAuthority -> Maybe RevocationConfiguration

-- | Serial number of your private CA.
[$sel:serial:CertificateAuthority'] :: CertificateAuthority -> Maybe Text

-- | Date and time at which your private CA was created.
[$sel:createdAt:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Amazon Resource Name (ARN) for your private certificate authority
--   (CA). The format is <tt> 12345678-1234-1234-1234-123456789012 </tt>.
[$sel:arn:CertificateAuthority'] :: CertificateAuthority -> Maybe Text

-- | Your private CA configuration.
[$sel:certificateAuthorityConfiguration:CertificateAuthority'] :: CertificateAuthority -> Maybe CertificateAuthorityConfiguration

-- | Reason the request to create your private CA failed.
[$sel:failureReason:CertificateAuthority'] :: CertificateAuthority -> Maybe FailureReason

-- | Date and time after which your private CA certificate is not valid.
[$sel:notAfter:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Date and time at which your private CA was last updated.
[$sel:lastStateChangeAt:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Type of your private CA.
[$sel:type':CertificateAuthority'] :: CertificateAuthority -> Maybe CertificateAuthorityType

-- | The AWS account ID that owns the certificate authority.
[$sel:ownerAccount:CertificateAuthority'] :: CertificateAuthority -> Maybe Text

-- | The period during which a deleted CA can be restored. For more
--   information, see the <tt>PermanentDeletionTimeInDays</tt> parameter of
--   the <a>DeleteCertificateAuthorityRequest</a> action.
[$sel:restorableUntil:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Create a value of <a>CertificateAuthority</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CertificateAuthority'</a>,
--   <a>certificateAuthority_status</a> - Status of your private CA.
--   
--   <a>$sel:notBefore:CertificateAuthority'</a>,
--   <a>certificateAuthority_notBefore</a> - Date and time before which
--   your private CA certificate is not valid.
--   
--   <a>$sel:keyStorageSecurityStandard:CertificateAuthority'</a>,
--   <a>certificateAuthority_keyStorageSecurityStandard</a> - Defines a
--   cryptographic key management compliance standard used for handling CA
--   keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: AWS Region ap-northeast-3 supports only
--   FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
--   parameter and value when creating a CA in that Region. Specifying a
--   different value (or no value) results in an
--   <tt>InvalidArgsException</tt> with the message "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
--   
--   <a>$sel:revocationConfiguration:CertificateAuthority'</a>,
--   <a>certificateAuthority_revocationConfiguration</a> - Information
--   about the Online Certificate Status Protocol (OCSP) configuration or
--   certificate revocation list (CRL) created and maintained by your
--   private CA.
--   
--   <a>$sel:serial:CertificateAuthority'</a>,
--   <a>certificateAuthority_serial</a> - Serial number of your private CA.
--   
--   <a>$sel:createdAt:CertificateAuthority'</a>,
--   <a>certificateAuthority_createdAt</a> - Date and time at which your
--   private CA was created.
--   
--   <a>$sel:arn:CertificateAuthority'</a>, <a>certificateAuthority_arn</a>
--   - Amazon Resource Name (ARN) for your private certificate authority
--   (CA). The format is <tt> 12345678-1234-1234-1234-123456789012 </tt>.
--   
--   <a>$sel:certificateAuthorityConfiguration:CertificateAuthority'</a>,
--   <a>certificateAuthority_certificateAuthorityConfiguration</a> - Your
--   private CA configuration.
--   
--   <a>$sel:failureReason:CertificateAuthority'</a>,
--   <a>certificateAuthority_failureReason</a> - Reason the request to
--   create your private CA failed.
--   
--   <a>$sel:notAfter:CertificateAuthority'</a>,
--   <a>certificateAuthority_notAfter</a> - Date and time after which your
--   private CA certificate is not valid.
--   
--   <a>$sel:lastStateChangeAt:CertificateAuthority'</a>,
--   <a>certificateAuthority_lastStateChangeAt</a> - Date and time at which
--   your private CA was last updated.
--   
--   <a>$sel:type':CertificateAuthority'</a>,
--   <a>certificateAuthority_type</a> - Type of your private CA.
--   
--   <a>$sel:ownerAccount:CertificateAuthority'</a>,
--   <a>certificateAuthority_ownerAccount</a> - The AWS account ID that
--   owns the certificate authority.
--   
--   <a>$sel:restorableUntil:CertificateAuthority'</a>,
--   <a>certificateAuthority_restorableUntil</a> - The period during which
--   a deleted CA can be restored. For more information, see the
--   <tt>PermanentDeletionTimeInDays</tt> parameter of the
--   <a>DeleteCertificateAuthorityRequest</a> action.
newCertificateAuthority :: CertificateAuthority

-- | Status of your private CA.
certificateAuthority_status :: Lens' CertificateAuthority (Maybe CertificateAuthorityStatus)

-- | Date and time before which your private CA certificate is not valid.
certificateAuthority_notBefore :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Defines a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: AWS Region ap-northeast-3 supports only
--   FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
--   parameter and value when creating a CA in that Region. Specifying a
--   different value (or no value) results in an
--   <tt>InvalidArgsException</tt> with the message "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
certificateAuthority_keyStorageSecurityStandard :: Lens' CertificateAuthority (Maybe KeyStorageSecurityStandard)

-- | Information about the Online Certificate Status Protocol (OCSP)
--   configuration or certificate revocation list (CRL) created and
--   maintained by your private CA.
certificateAuthority_revocationConfiguration :: Lens' CertificateAuthority (Maybe RevocationConfiguration)

-- | Serial number of your private CA.
certificateAuthority_serial :: Lens' CertificateAuthority (Maybe Text)

-- | Date and time at which your private CA was created.
certificateAuthority_createdAt :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Amazon Resource Name (ARN) for your private certificate authority
--   (CA). The format is <tt> 12345678-1234-1234-1234-123456789012 </tt>.
certificateAuthority_arn :: Lens' CertificateAuthority (Maybe Text)

-- | Your private CA configuration.
certificateAuthority_certificateAuthorityConfiguration :: Lens' CertificateAuthority (Maybe CertificateAuthorityConfiguration)

-- | Reason the request to create your private CA failed.
certificateAuthority_failureReason :: Lens' CertificateAuthority (Maybe FailureReason)

-- | Date and time after which your private CA certificate is not valid.
certificateAuthority_notAfter :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Date and time at which your private CA was last updated.
certificateAuthority_lastStateChangeAt :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Type of your private CA.
certificateAuthority_type :: Lens' CertificateAuthority (Maybe CertificateAuthorityType)

-- | The AWS account ID that owns the certificate authority.
certificateAuthority_ownerAccount :: Lens' CertificateAuthority (Maybe Text)

-- | The period during which a deleted CA can be restored. For more
--   information, see the <tt>PermanentDeletionTimeInDays</tt> parameter of
--   the <a>DeleteCertificateAuthorityRequest</a> action.
certificateAuthority_restorableUntil :: Lens' CertificateAuthority (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.CertificateAuthority.CertificateAuthority
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.CertificateAuthority.CertificateAuthority
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.CertificateAuthority.CertificateAuthority
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.CertificateAuthority.CertificateAuthority
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.CertificateAuthority.CertificateAuthority
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.CertificateAuthority.CertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.CertificateAuthority.CertificateAuthority


module Network.AWS.CertificateManagerPCA.Types.Tag

-- | Tags are labels that you can use to identify and organize your private
--   CAs. Each tag consists of a key and an optional value. You can
--   associate up to 50 tags with a private CA. To add one or more tags to
--   a private CA, call the <a>TagCertificateAuthority</a> action. To
--   remove a tag, call the <a>UntagCertificateAuthority</a> action.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | Value of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Key (name) of the tag.
[$sel:key:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - Value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - Key (name) of the tag.
newTag :: Text -> Tag

-- | Value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | Key (name) of the tag.
tag_key :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.Tag.Tag


module Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType
newtype ValidityPeriodType
ValidityPeriodType' :: Text -> ValidityPeriodType
[fromValidityPeriodType] :: ValidityPeriodType -> Text
pattern ValidityPeriodType_ABSOLUTE :: ValidityPeriodType
pattern ValidityPeriodType_DAYS :: ValidityPeriodType
pattern ValidityPeriodType_END_DATE :: ValidityPeriodType
pattern ValidityPeriodType_MONTHS :: ValidityPeriodType
pattern ValidityPeriodType_YEARS :: ValidityPeriodType
instance Network.AWS.Data.XML.ToXML Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Network.AWS.Data.XML.FromXML Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Network.AWS.Data.Log.ToLog Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Network.AWS.Data.Text.ToText Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Network.AWS.Data.Text.FromText Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance GHC.Classes.Ord Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.ValidityPeriodType.ValidityPeriodType


module Network.AWS.CertificateManagerPCA.Types.Validity

-- | Validity specifies the period of time during which a certificate is
--   valid. Validity can be expressed as an explicit date and time when the
--   validity of a certificate starts or expires, or as a span of time
--   after issuance, stated in days, months, or years. For more
--   information, see <a>Validity</a> in RFC 5280.
--   
--   ACM Private CA API consumes the <tt>Validity</tt> data type
--   differently in two distinct parameters of the
--   <tt>IssueCertificate</tt> action. The required parameter
--   <tt>IssueCertificate</tt>:<tt>Validity</tt> specifies the end of a
--   certificate's validity period. The optional parameter
--   <tt>IssueCertificate</tt>:<tt>ValidityNotBefore</tt> specifies a
--   customized starting time for the validity period.
--   
--   <i>See:</i> <a>newValidity</a> smart constructor.
data Validity
Validity' :: Natural -> ValidityPeriodType -> Validity

-- | A long integer interpreted according to the value of <tt>Type</tt>,
--   below.
[$sel:value:Validity'] :: Validity -> Natural

-- | Determines how <i>ACM Private CA</i> interprets the <tt>Value</tt>
--   parameter, an integer. Supported validity types include those listed
--   below. Type definitions with values include a sample input value and
--   the resulting output.
--   
--   <tt>END_DATE</tt>: The specific date and time when the certificate
--   will expire, expressed using UTCTime (YYMMDDHHMMSS) or GeneralizedTime
--   (YYYYMMDDHHMMSS) format. When UTCTime is used, if the year field (YY)
--   is greater than or equal to 50, the year is interpreted as 19YY. If
--   the year field is less than 50, the year is interpreted as 20YY.
--   
--   <ul>
--   <li>Sample input value: 491231235959 (UTCTime format)</li>
--   <li>Output expiration date/time: 12/31/2049 23:59:59</li>
--   </ul>
--   
--   <tt>ABSOLUTE</tt>: The specific date and time when the validity of a
--   certificate will start or expire, expressed in seconds since the Unix
--   Epoch.
--   
--   <ul>
--   <li>Sample input value: 2524608000</li>
--   <li>Output expiration date/time: 01/01/2050 00:00:00</li>
--   </ul>
--   
--   <tt>DAYS</tt>, <tt>MONTHS</tt>, <tt>YEARS</tt>: The relative time from
--   the moment of issuance until the certificate will expire, expressed in
--   days, months, or years.
--   
--   Example if <tt>DAYS</tt>, issued on 10/12/2020 at 12:34:54 UTC:
--   
--   <ul>
--   <li>Sample input value: 90</li>
--   <li>Output expiration date: 01/10/2020 12:34:54 UTC</li>
--   </ul>
--   
--   The minimum validity duration for a certificate using relative time
--   (<tt>DAYS</tt>) is one day. The minimum validity for a certificate
--   using absolute time (<tt>ABSOLUTE</tt> or <tt>END_DATE</tt>) is one
--   second.
[$sel:type':Validity'] :: Validity -> ValidityPeriodType

-- | Create a value of <a>Validity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Validity'</a>, <a>validity_value</a> - A long integer
--   interpreted according to the value of <tt>Type</tt>, below.
--   
--   <a>$sel:type':Validity'</a>, <a>validity_type</a> - Determines how
--   <i>ACM Private CA</i> interprets the <tt>Value</tt> parameter, an
--   integer. Supported validity types include those listed below. Type
--   definitions with values include a sample input value and the resulting
--   output.
--   
--   <tt>END_DATE</tt>: The specific date and time when the certificate
--   will expire, expressed using UTCTime (YYMMDDHHMMSS) or GeneralizedTime
--   (YYYYMMDDHHMMSS) format. When UTCTime is used, if the year field (YY)
--   is greater than or equal to 50, the year is interpreted as 19YY. If
--   the year field is less than 50, the year is interpreted as 20YY.
--   
--   <ul>
--   <li>Sample input value: 491231235959 (UTCTime format)</li>
--   <li>Output expiration date/time: 12/31/2049 23:59:59</li>
--   </ul>
--   
--   <tt>ABSOLUTE</tt>: The specific date and time when the validity of a
--   certificate will start or expire, expressed in seconds since the Unix
--   Epoch.
--   
--   <ul>
--   <li>Sample input value: 2524608000</li>
--   <li>Output expiration date/time: 01/01/2050 00:00:00</li>
--   </ul>
--   
--   <tt>DAYS</tt>, <tt>MONTHS</tt>, <tt>YEARS</tt>: The relative time from
--   the moment of issuance until the certificate will expire, expressed in
--   days, months, or years.
--   
--   Example if <tt>DAYS</tt>, issued on 10/12/2020 at 12:34:54 UTC:
--   
--   <ul>
--   <li>Sample input value: 90</li>
--   <li>Output expiration date: 01/10/2020 12:34:54 UTC</li>
--   </ul>
--   
--   The minimum validity duration for a certificate using relative time
--   (<tt>DAYS</tt>) is one day. The minimum validity for a certificate
--   using absolute time (<tt>ABSOLUTE</tt> or <tt>END_DATE</tt>) is one
--   second.
newValidity :: Natural -> ValidityPeriodType -> Validity

-- | A long integer interpreted according to the value of <tt>Type</tt>,
--   below.
validity_value :: Lens' Validity Natural

-- | Determines how <i>ACM Private CA</i> interprets the <tt>Value</tt>
--   parameter, an integer. Supported validity types include those listed
--   below. Type definitions with values include a sample input value and
--   the resulting output.
--   
--   <tt>END_DATE</tt>: The specific date and time when the certificate
--   will expire, expressed using UTCTime (YYMMDDHHMMSS) or GeneralizedTime
--   (YYYYMMDDHHMMSS) format. When UTCTime is used, if the year field (YY)
--   is greater than or equal to 50, the year is interpreted as 19YY. If
--   the year field is less than 50, the year is interpreted as 20YY.
--   
--   <ul>
--   <li>Sample input value: 491231235959 (UTCTime format)</li>
--   <li>Output expiration date/time: 12/31/2049 23:59:59</li>
--   </ul>
--   
--   <tt>ABSOLUTE</tt>: The specific date and time when the validity of a
--   certificate will start or expire, expressed in seconds since the Unix
--   Epoch.
--   
--   <ul>
--   <li>Sample input value: 2524608000</li>
--   <li>Output expiration date/time: 01/01/2050 00:00:00</li>
--   </ul>
--   
--   <tt>DAYS</tt>, <tt>MONTHS</tt>, <tt>YEARS</tt>: The relative time from
--   the moment of issuance until the certificate will expire, expressed in
--   days, months, or years.
--   
--   Example if <tt>DAYS</tt>, issued on 10/12/2020 at 12:34:54 UTC:
--   
--   <ul>
--   <li>Sample input value: 90</li>
--   <li>Output expiration date: 01/10/2020 12:34:54 UTC</li>
--   </ul>
--   
--   The minimum validity duration for a certificate using relative time
--   (<tt>DAYS</tt>) is one day. The minimum validity for a certificate
--   using absolute time (<tt>ABSOLUTE</tt> or <tt>END_DATE</tt>) is one
--   second.
validity_type :: Lens' Validity ValidityPeriodType
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.Types.Validity.Validity
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.Types.Validity.Validity
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.Types.Validity.Validity
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.Types.Validity.Validity
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.Types.Validity.Validity
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.Types.Validity.Validity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.Types.Validity.Validity


module Network.AWS.CertificateManagerPCA.Types

-- | API version <tt>2017-08-22</tt> of the Amazon Certificate Manager
--   Private Certificate Authority SDK configuration.
defaultService :: Service

-- | You can associate up to 50 tags with a private CA. Exception
--   information is contained in the exception message field.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The state of the private CA does not allow this action to occur.
_InvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more of the specified arguments was not valid.
_InvalidArgsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource policy is invalid or is missing a required statement. For
--   general information about IAM policy and statement structure, see
--   <a>Overview of JSON Policies</a>.
_InvalidPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested Amazon Resource Name (ARN) does not refer to an existing
--   resource.
_InvalidArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more fields in the certificate are invalid.
_MalformedCertificateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The designated permission has already been given to the user.
_PermissionAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A previous update to your private CA is still ongoing.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request has already been completed.
_RequestAlreadyProcessedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The token specified in the <tt>NextToken</tt> argument is not valid.
--   Use the token returned from your previous call to
--   <a>ListCertificateAuthorities</a>.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request action cannot be performed or is prohibited.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag associated with the CA is not valid. The invalid argument is
--   contained in the message field.
_InvalidTagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request is already in progress.
_RequestInProgressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An ACM Private CA quota has been exceeded. See the exception message
--   returned to determine the quota that was exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource such as a private CA, S3 bucket, certificate, audit report,
--   or policy cannot be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The certificate authority certificate you are importing does not
--   comply with conditions specified in the certificate that signed it.
_CertificateMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed for an unspecified reason.
_RequestFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current action was prevented because it would lock the caller out
--   from performing subsequent actions. Verify that the specified
--   parameters would not result in the caller being denied access to the
--   resource.
_LockoutPreventedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The certificate signing request is invalid.
_MalformedCSRException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AccessMethodType
AccessMethodType' :: Text -> AccessMethodType
[fromAccessMethodType] :: AccessMethodType -> Text
pattern AccessMethodType_CA_REPOSITORY :: AccessMethodType
pattern AccessMethodType_RESOURCE_PKI_MANIFEST :: AccessMethodType
pattern AccessMethodType_RESOURCE_PKI_NOTIFY :: AccessMethodType
newtype ActionType
ActionType' :: Text -> ActionType
[fromActionType] :: ActionType -> Text
pattern ActionType_GetCertificate :: ActionType
pattern ActionType_IssueCertificate :: ActionType
pattern ActionType_ListPermissions :: ActionType
newtype AuditReportResponseFormat
AuditReportResponseFormat' :: Text -> AuditReportResponseFormat
[fromAuditReportResponseFormat] :: AuditReportResponseFormat -> Text
pattern AuditReportResponseFormat_CSV :: AuditReportResponseFormat
pattern AuditReportResponseFormat_JSON :: AuditReportResponseFormat
newtype AuditReportStatus
AuditReportStatus' :: Text -> AuditReportStatus
[fromAuditReportStatus] :: AuditReportStatus -> Text
pattern AuditReportStatus_CREATING :: AuditReportStatus
pattern AuditReportStatus_FAILED :: AuditReportStatus
pattern AuditReportStatus_SUCCESS :: AuditReportStatus
newtype CertificateAuthorityStatus
CertificateAuthorityStatus' :: Text -> CertificateAuthorityStatus
[fromCertificateAuthorityStatus] :: CertificateAuthorityStatus -> Text
pattern CertificateAuthorityStatus_ACTIVE :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_CREATING :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_DELETED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_DISABLED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_EXPIRED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_FAILED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_PENDING_CERTIFICATE :: CertificateAuthorityStatus
newtype CertificateAuthorityType
CertificateAuthorityType' :: Text -> CertificateAuthorityType
[fromCertificateAuthorityType] :: CertificateAuthorityType -> Text
pattern CertificateAuthorityType_ROOT :: CertificateAuthorityType
pattern CertificateAuthorityType_SUBORDINATE :: CertificateAuthorityType
newtype ExtendedKeyUsageType
ExtendedKeyUsageType' :: Text -> ExtendedKeyUsageType
[fromExtendedKeyUsageType] :: ExtendedKeyUsageType -> Text
pattern ExtendedKeyUsageType_CERTIFICATE_TRANSPARENCY :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_CLIENT_AUTH :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_CODE_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_DOCUMENT_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_EMAIL_PROTECTION :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_OCSP_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_SERVER_AUTH :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_SMART_CARD_LOGIN :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_TIME_STAMPING :: ExtendedKeyUsageType
newtype FailureReason
FailureReason' :: Text -> FailureReason
[fromFailureReason] :: FailureReason -> Text
pattern FailureReason_OTHER :: FailureReason
pattern FailureReason_REQUEST_TIMED_OUT :: FailureReason
pattern FailureReason_UNSUPPORTED_ALGORITHM :: FailureReason
newtype KeyAlgorithm
KeyAlgorithm' :: Text -> KeyAlgorithm
[fromKeyAlgorithm] :: KeyAlgorithm -> Text
pattern KeyAlgorithm_EC_prime256v1 :: KeyAlgorithm
pattern KeyAlgorithm_EC_secp384r1 :: KeyAlgorithm
pattern KeyAlgorithm_RSA_2048 :: KeyAlgorithm
pattern KeyAlgorithm_RSA_4096 :: KeyAlgorithm
newtype KeyStorageSecurityStandard
KeyStorageSecurityStandard' :: Text -> KeyStorageSecurityStandard
[fromKeyStorageSecurityStandard] :: KeyStorageSecurityStandard -> Text
pattern KeyStorageSecurityStandard_FIPS_140_2_LEVEL_2_OR_HIGHER :: KeyStorageSecurityStandard
pattern KeyStorageSecurityStandard_FIPS_140_2_LEVEL_3_OR_HIGHER :: KeyStorageSecurityStandard
newtype PolicyQualifierId
PolicyQualifierId' :: Text -> PolicyQualifierId
[fromPolicyQualifierId] :: PolicyQualifierId -> Text
pattern PolicyQualifierId_CPS :: PolicyQualifierId
newtype ResourceOwner
ResourceOwner' :: Text -> ResourceOwner
[fromResourceOwner] :: ResourceOwner -> Text
pattern ResourceOwner_OTHER_ACCOUNTS :: ResourceOwner
pattern ResourceOwner_SELF :: ResourceOwner
newtype RevocationReason
RevocationReason' :: Text -> RevocationReason
[fromRevocationReason] :: RevocationReason -> Text
pattern RevocationReason_AFFILIATION_CHANGED :: RevocationReason
pattern RevocationReason_A_A_COMPROMISE :: RevocationReason
pattern RevocationReason_CERTIFICATE_AUTHORITY_COMPROMISE :: RevocationReason
pattern RevocationReason_CESSATION_OF_OPERATION :: RevocationReason
pattern RevocationReason_KEY_COMPROMISE :: RevocationReason
pattern RevocationReason_PRIVILEGE_WITHDRAWN :: RevocationReason
pattern RevocationReason_SUPERSEDED :: RevocationReason
pattern RevocationReason_UNSPECIFIED :: RevocationReason
newtype S3ObjectAcl
S3ObjectAcl' :: Text -> S3ObjectAcl
[fromS3ObjectAcl] :: S3ObjectAcl -> Text
pattern S3ObjectAcl_BUCKET_OWNER_FULL_CONTROL :: S3ObjectAcl
pattern S3ObjectAcl_PUBLIC_READ :: S3ObjectAcl
newtype SigningAlgorithm
SigningAlgorithm' :: Text -> SigningAlgorithm
[fromSigningAlgorithm] :: SigningAlgorithm -> Text
pattern SigningAlgorithm_SHA256WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA256WITHRSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA384WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA384WITHRSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA512WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA512WITHRSA :: SigningAlgorithm
newtype ValidityPeriodType
ValidityPeriodType' :: Text -> ValidityPeriodType
[fromValidityPeriodType] :: ValidityPeriodType -> Text
pattern ValidityPeriodType_ABSOLUTE :: ValidityPeriodType
pattern ValidityPeriodType_DAYS :: ValidityPeriodType
pattern ValidityPeriodType_END_DATE :: ValidityPeriodType
pattern ValidityPeriodType_MONTHS :: ValidityPeriodType
pattern ValidityPeriodType_YEARS :: ValidityPeriodType

-- | Contains information about the certificate subject. The
--   <tt>Subject</tt> field in the certificate identifies the entity that
--   owns or controls the public key in the certificate. The entity can be
--   a user, computer, device, or service. The <tt>Subject </tt>must
--   contain an X.500 distinguished name (DN). A DN is a sequence of
--   relative distinguished names (RDNs). The RDNs are separated by commas
--   in the certificate.
--   
--   <i>See:</i> <a>newASN1Subject</a> smart constructor.
data ASN1Subject
ASN1Subject' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ASN1Subject

-- | The locality (such as a city or town) in which the certificate subject
--   is located.
[$sel:locality:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Typically a qualifier appended to the name of an individual. Examples
--   include Jr. for junior, Sr. for senior, and III for third.
[$sel:generationQualifier:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Family name. In the US and the UK, for example, the surname of an
--   individual is ordered last. In Asian cultures the surname is typically
--   ordered first.
[$sel:surname:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | A subdivision or unit of the organization (such as sales or finance)
--   with which the certificate subject is affiliated.
[$sel:organizationalUnit:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | A title such as Mr. or Ms., which is pre-pended to the name to refer
--   formally to the certificate subject.
[$sel:title:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Concatenation that typically contains the first letter of the
--   <b>GivenName</b>, the first letter of the middle name if one exists,
--   and the first letter of the <b>Surname</b>.
[$sel:initials:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | For CA and end-entity certificates in a private PKI, the common name
--   (CN) can be any string within the length limit.
--   
--   Note: In publicly trusted certificates, the common name must be a
--   fully qualified domain name (FQDN) associated with the certificate
--   subject.
[$sel:commonName:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Typically a shortened version of a longer <b>GivenName</b>. For
--   example, Jonathan is often shortened to John. Elizabeth is often
--   shortened to Beth, Liz, or Eliza.
[$sel:pseudonym:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | State in which the subject of the certificate is located.
[$sel:state:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | First name.
[$sel:givenName:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | The certificate serial number.
[$sel:serialNumber:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Disambiguating information for the certificate subject.
[$sel:distinguishedNameQualifier:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Legal name of the organization with which the certificate subject is
--   affiliated.
[$sel:organization:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Two-digit code that specifies the country in which the certificate
--   subject located.
[$sel:country:ASN1Subject'] :: ASN1Subject -> Maybe Text

-- | Create a value of <a>ASN1Subject</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locality:ASN1Subject'</a>, <a>aSN1Subject_locality</a> - The
--   locality (such as a city or town) in which the certificate subject is
--   located.
--   
--   <a>$sel:generationQualifier:ASN1Subject'</a>,
--   <a>aSN1Subject_generationQualifier</a> - Typically a qualifier
--   appended to the name of an individual. Examples include Jr. for
--   junior, Sr. for senior, and III for third.
--   
--   <a>$sel:surname:ASN1Subject'</a>, <a>aSN1Subject_surname</a> - Family
--   name. In the US and the UK, for example, the surname of an individual
--   is ordered last. In Asian cultures the surname is typically ordered
--   first.
--   
--   <a>$sel:organizationalUnit:ASN1Subject'</a>,
--   <a>aSN1Subject_organizationalUnit</a> - A subdivision or unit of the
--   organization (such as sales or finance) with which the certificate
--   subject is affiliated.
--   
--   <a>$sel:title:ASN1Subject'</a>, <a>aSN1Subject_title</a> - A title
--   such as Mr. or Ms., which is pre-pended to the name to refer formally
--   to the certificate subject.
--   
--   <a>$sel:initials:ASN1Subject'</a>, <a>aSN1Subject_initials</a> -
--   Concatenation that typically contains the first letter of the
--   <b>GivenName</b>, the first letter of the middle name if one exists,
--   and the first letter of the <b>Surname</b>.
--   
--   <a>$sel:commonName:ASN1Subject'</a>, <a>aSN1Subject_commonName</a> -
--   For CA and end-entity certificates in a private PKI, the common name
--   (CN) can be any string within the length limit.
--   
--   Note: In publicly trusted certificates, the common name must be a
--   fully qualified domain name (FQDN) associated with the certificate
--   subject.
--   
--   <a>$sel:pseudonym:ASN1Subject'</a>, <a>aSN1Subject_pseudonym</a> -
--   Typically a shortened version of a longer <b>GivenName</b>. For
--   example, Jonathan is often shortened to John. Elizabeth is often
--   shortened to Beth, Liz, or Eliza.
--   
--   <a>$sel:state:ASN1Subject'</a>, <a>aSN1Subject_state</a> - State in
--   which the subject of the certificate is located.
--   
--   <a>$sel:givenName:ASN1Subject'</a>, <a>aSN1Subject_givenName</a> -
--   First name.
--   
--   <a>$sel:serialNumber:ASN1Subject'</a>, <a>aSN1Subject_serialNumber</a>
--   - The certificate serial number.
--   
--   <a>$sel:distinguishedNameQualifier:ASN1Subject'</a>,
--   <a>aSN1Subject_distinguishedNameQualifier</a> - Disambiguating
--   information for the certificate subject.
--   
--   <a>$sel:organization:ASN1Subject'</a>, <a>aSN1Subject_organization</a>
--   - Legal name of the organization with which the certificate subject is
--   affiliated.
--   
--   <a>$sel:country:ASN1Subject'</a>, <a>aSN1Subject_country</a> -
--   Two-digit code that specifies the country in which the certificate
--   subject located.
newASN1Subject :: ASN1Subject

-- | The locality (such as a city or town) in which the certificate subject
--   is located.
aSN1Subject_locality :: Lens' ASN1Subject (Maybe Text)

-- | Typically a qualifier appended to the name of an individual. Examples
--   include Jr. for junior, Sr. for senior, and III for third.
aSN1Subject_generationQualifier :: Lens' ASN1Subject (Maybe Text)

-- | Family name. In the US and the UK, for example, the surname of an
--   individual is ordered last. In Asian cultures the surname is typically
--   ordered first.
aSN1Subject_surname :: Lens' ASN1Subject (Maybe Text)

-- | A subdivision or unit of the organization (such as sales or finance)
--   with which the certificate subject is affiliated.
aSN1Subject_organizationalUnit :: Lens' ASN1Subject (Maybe Text)

-- | A title such as Mr. or Ms., which is pre-pended to the name to refer
--   formally to the certificate subject.
aSN1Subject_title :: Lens' ASN1Subject (Maybe Text)

-- | Concatenation that typically contains the first letter of the
--   <b>GivenName</b>, the first letter of the middle name if one exists,
--   and the first letter of the <b>Surname</b>.
aSN1Subject_initials :: Lens' ASN1Subject (Maybe Text)

-- | For CA and end-entity certificates in a private PKI, the common name
--   (CN) can be any string within the length limit.
--   
--   Note: In publicly trusted certificates, the common name must be a
--   fully qualified domain name (FQDN) associated with the certificate
--   subject.
aSN1Subject_commonName :: Lens' ASN1Subject (Maybe Text)

-- | Typically a shortened version of a longer <b>GivenName</b>. For
--   example, Jonathan is often shortened to John. Elizabeth is often
--   shortened to Beth, Liz, or Eliza.
aSN1Subject_pseudonym :: Lens' ASN1Subject (Maybe Text)

-- | State in which the subject of the certificate is located.
aSN1Subject_state :: Lens' ASN1Subject (Maybe Text)

-- | First name.
aSN1Subject_givenName :: Lens' ASN1Subject (Maybe Text)

-- | The certificate serial number.
aSN1Subject_serialNumber :: Lens' ASN1Subject (Maybe Text)

-- | Disambiguating information for the certificate subject.
aSN1Subject_distinguishedNameQualifier :: Lens' ASN1Subject (Maybe Text)

-- | Legal name of the organization with which the certificate subject is
--   affiliated.
aSN1Subject_organization :: Lens' ASN1Subject (Maybe Text)

-- | Two-digit code that specifies the country in which the certificate
--   subject located.
aSN1Subject_country :: Lens' ASN1Subject (Maybe Text)

-- | Provides access information used by the <tt>authorityInfoAccess</tt>
--   and <tt>subjectInfoAccess</tt> extensions described in <a>RFC
--   5280</a>.
--   
--   <i>See:</i> <a>newAccessDescription</a> smart constructor.
data AccessDescription
AccessDescription' :: AccessMethod -> GeneralName -> AccessDescription

-- | The type and format of <tt>AccessDescription</tt> information.
[$sel:accessMethod:AccessDescription'] :: AccessDescription -> AccessMethod

-- | The location of <tt>AccessDescription</tt> information.
[$sel:accessLocation:AccessDescription'] :: AccessDescription -> GeneralName

-- | Create a value of <a>AccessDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessMethod:AccessDescription'</a>,
--   <a>accessDescription_accessMethod</a> - The type and format of
--   <tt>AccessDescription</tt> information.
--   
--   <a>$sel:accessLocation:AccessDescription'</a>,
--   <a>accessDescription_accessLocation</a> - The location of
--   <tt>AccessDescription</tt> information.
newAccessDescription :: AccessMethod -> GeneralName -> AccessDescription

-- | The type and format of <tt>AccessDescription</tt> information.
accessDescription_accessMethod :: Lens' AccessDescription AccessMethod

-- | The location of <tt>AccessDescription</tt> information.
accessDescription_accessLocation :: Lens' AccessDescription GeneralName

-- | Describes the type and format of extension access. Only one of
--   <tt>CustomObjectIdentifier</tt> or <tt>AccessMethodType</tt> may be
--   provided. Providing both results in <tt>InvalidArgsException</tt>.
--   
--   <i>See:</i> <a>newAccessMethod</a> smart constructor.
data AccessMethod
AccessMethod' :: Maybe AccessMethodType -> Maybe Text -> AccessMethod

-- | Specifies the <tt>AccessMethod</tt>.
[$sel:accessMethodType:AccessMethod'] :: AccessMethod -> Maybe AccessMethodType

-- | An object identifier (OID) specifying the <tt>AccessMethod</tt>. The
--   OID must satisfy the regular expression shown below. For more
--   information, see NIST's definition of <a>Object Identifier (OID)</a>.
[$sel:customObjectIdentifier:AccessMethod'] :: AccessMethod -> Maybe Text

-- | Create a value of <a>AccessMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessMethodType:AccessMethod'</a>,
--   <a>accessMethod_accessMethodType</a> - Specifies the
--   <tt>AccessMethod</tt>.
--   
--   <a>$sel:customObjectIdentifier:AccessMethod'</a>,
--   <a>accessMethod_customObjectIdentifier</a> - An object identifier
--   (OID) specifying the <tt>AccessMethod</tt>. The OID must satisfy the
--   regular expression shown below. For more information, see NIST's
--   definition of <a>Object Identifier (OID)</a>.
newAccessMethod :: AccessMethod

-- | Specifies the <tt>AccessMethod</tt>.
accessMethod_accessMethodType :: Lens' AccessMethod (Maybe AccessMethodType)

-- | An object identifier (OID) specifying the <tt>AccessMethod</tt>. The
--   OID must satisfy the regular expression shown below. For more
--   information, see NIST's definition of <a>Object Identifier (OID)</a>.
accessMethod_customObjectIdentifier :: Lens' AccessMethod (Maybe Text)

-- | Contains X.509 certificate information to be placed in an issued
--   certificate. An <tt>APIPassthrough</tt> or <tt>APICSRPassthrough</tt>
--   template variant must be selected, or else this parameter is ignored.
--   
--   If conflicting or duplicate certificate information is supplied from
--   other sources, ACM Private CA applies <a>order of operation rules</a>
--   to determine what information is used.
--   
--   <i>See:</i> <a>newApiPassthrough</a> smart constructor.
data ApiPassthrough
ApiPassthrough' :: Maybe Extensions -> Maybe ASN1Subject -> ApiPassthrough

-- | Specifies X.509 extension information for a certificate.
[$sel:extensions:ApiPassthrough'] :: ApiPassthrough -> Maybe Extensions
[$sel:subject:ApiPassthrough'] :: ApiPassthrough -> Maybe ASN1Subject

-- | Create a value of <a>ApiPassthrough</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extensions:ApiPassthrough'</a>,
--   <a>apiPassthrough_extensions</a> - Specifies X.509 extension
--   information for a certificate.
--   
--   <a>$sel:subject:ApiPassthrough'</a>, <a>apiPassthrough_subject</a> -
--   Undocumented member.
newApiPassthrough :: ApiPassthrough

-- | Specifies X.509 extension information for a certificate.
apiPassthrough_extensions :: Lens' ApiPassthrough (Maybe Extensions)

-- | Undocumented member.
apiPassthrough_subject :: Lens' ApiPassthrough (Maybe ASN1Subject)

-- | Contains information about your private certificate authority (CA).
--   Your private CA can issue and revoke X.509 digital certificates.
--   Digital certificates verify that the entity named in the certificate
--   <b>Subject</b> field owns or controls the public key contained in the
--   __Subject Public Key Info__ field. Call the
--   <a>CreateCertificateAuthority</a> action to create your private CA.
--   You must then call the <a>GetCertificateAuthorityCertificate</a>
--   action to retrieve a private CA certificate signing request (CSR).
--   Sign the CSR with your ACM Private CA-hosted or on-premises root or
--   subordinate CA certificate. Call the
--   <a>ImportCertificateAuthorityCertificate</a> action to import the
--   signed certificate into AWS Certificate Manager (ACM).
--   
--   <i>See:</i> <a>newCertificateAuthority</a> smart constructor.
data CertificateAuthority
CertificateAuthority' :: Maybe CertificateAuthorityStatus -> Maybe POSIX -> Maybe KeyStorageSecurityStandard -> Maybe RevocationConfiguration -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe CertificateAuthorityConfiguration -> Maybe FailureReason -> Maybe POSIX -> Maybe POSIX -> Maybe CertificateAuthorityType -> Maybe Text -> Maybe POSIX -> CertificateAuthority

-- | Status of your private CA.
[$sel:status:CertificateAuthority'] :: CertificateAuthority -> Maybe CertificateAuthorityStatus

-- | Date and time before which your private CA certificate is not valid.
[$sel:notBefore:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Defines a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: AWS Region ap-northeast-3 supports only
--   FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
--   parameter and value when creating a CA in that Region. Specifying a
--   different value (or no value) results in an
--   <tt>InvalidArgsException</tt> with the message "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
[$sel:keyStorageSecurityStandard:CertificateAuthority'] :: CertificateAuthority -> Maybe KeyStorageSecurityStandard

-- | Information about the Online Certificate Status Protocol (OCSP)
--   configuration or certificate revocation list (CRL) created and
--   maintained by your private CA.
[$sel:revocationConfiguration:CertificateAuthority'] :: CertificateAuthority -> Maybe RevocationConfiguration

-- | Serial number of your private CA.
[$sel:serial:CertificateAuthority'] :: CertificateAuthority -> Maybe Text

-- | Date and time at which your private CA was created.
[$sel:createdAt:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Amazon Resource Name (ARN) for your private certificate authority
--   (CA). The format is <tt> 12345678-1234-1234-1234-123456789012 </tt>.
[$sel:arn:CertificateAuthority'] :: CertificateAuthority -> Maybe Text

-- | Your private CA configuration.
[$sel:certificateAuthorityConfiguration:CertificateAuthority'] :: CertificateAuthority -> Maybe CertificateAuthorityConfiguration

-- | Reason the request to create your private CA failed.
[$sel:failureReason:CertificateAuthority'] :: CertificateAuthority -> Maybe FailureReason

-- | Date and time after which your private CA certificate is not valid.
[$sel:notAfter:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Date and time at which your private CA was last updated.
[$sel:lastStateChangeAt:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Type of your private CA.
[$sel:type':CertificateAuthority'] :: CertificateAuthority -> Maybe CertificateAuthorityType

-- | The AWS account ID that owns the certificate authority.
[$sel:ownerAccount:CertificateAuthority'] :: CertificateAuthority -> Maybe Text

-- | The period during which a deleted CA can be restored. For more
--   information, see the <tt>PermanentDeletionTimeInDays</tt> parameter of
--   the <a>DeleteCertificateAuthorityRequest</a> action.
[$sel:restorableUntil:CertificateAuthority'] :: CertificateAuthority -> Maybe POSIX

-- | Create a value of <a>CertificateAuthority</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CertificateAuthority'</a>,
--   <a>certificateAuthority_status</a> - Status of your private CA.
--   
--   <a>$sel:notBefore:CertificateAuthority'</a>,
--   <a>certificateAuthority_notBefore</a> - Date and time before which
--   your private CA certificate is not valid.
--   
--   <a>$sel:keyStorageSecurityStandard:CertificateAuthority'</a>,
--   <a>certificateAuthority_keyStorageSecurityStandard</a> - Defines a
--   cryptographic key management compliance standard used for handling CA
--   keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: AWS Region ap-northeast-3 supports only
--   FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
--   parameter and value when creating a CA in that Region. Specifying a
--   different value (or no value) results in an
--   <tt>InvalidArgsException</tt> with the message "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
--   
--   <a>$sel:revocationConfiguration:CertificateAuthority'</a>,
--   <a>certificateAuthority_revocationConfiguration</a> - Information
--   about the Online Certificate Status Protocol (OCSP) configuration or
--   certificate revocation list (CRL) created and maintained by your
--   private CA.
--   
--   <a>$sel:serial:CertificateAuthority'</a>,
--   <a>certificateAuthority_serial</a> - Serial number of your private CA.
--   
--   <a>$sel:createdAt:CertificateAuthority'</a>,
--   <a>certificateAuthority_createdAt</a> - Date and time at which your
--   private CA was created.
--   
--   <a>$sel:arn:CertificateAuthority'</a>, <a>certificateAuthority_arn</a>
--   - Amazon Resource Name (ARN) for your private certificate authority
--   (CA). The format is <tt> 12345678-1234-1234-1234-123456789012 </tt>.
--   
--   <a>$sel:certificateAuthorityConfiguration:CertificateAuthority'</a>,
--   <a>certificateAuthority_certificateAuthorityConfiguration</a> - Your
--   private CA configuration.
--   
--   <a>$sel:failureReason:CertificateAuthority'</a>,
--   <a>certificateAuthority_failureReason</a> - Reason the request to
--   create your private CA failed.
--   
--   <a>$sel:notAfter:CertificateAuthority'</a>,
--   <a>certificateAuthority_notAfter</a> - Date and time after which your
--   private CA certificate is not valid.
--   
--   <a>$sel:lastStateChangeAt:CertificateAuthority'</a>,
--   <a>certificateAuthority_lastStateChangeAt</a> - Date and time at which
--   your private CA was last updated.
--   
--   <a>$sel:type':CertificateAuthority'</a>,
--   <a>certificateAuthority_type</a> - Type of your private CA.
--   
--   <a>$sel:ownerAccount:CertificateAuthority'</a>,
--   <a>certificateAuthority_ownerAccount</a> - The AWS account ID that
--   owns the certificate authority.
--   
--   <a>$sel:restorableUntil:CertificateAuthority'</a>,
--   <a>certificateAuthority_restorableUntil</a> - The period during which
--   a deleted CA can be restored. For more information, see the
--   <tt>PermanentDeletionTimeInDays</tt> parameter of the
--   <a>DeleteCertificateAuthorityRequest</a> action.
newCertificateAuthority :: CertificateAuthority

-- | Status of your private CA.
certificateAuthority_status :: Lens' CertificateAuthority (Maybe CertificateAuthorityStatus)

-- | Date and time before which your private CA certificate is not valid.
certificateAuthority_notBefore :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Defines a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: AWS Region ap-northeast-3 supports only
--   FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
--   parameter and value when creating a CA in that Region. Specifying a
--   different value (or no value) results in an
--   <tt>InvalidArgsException</tt> with the message "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
certificateAuthority_keyStorageSecurityStandard :: Lens' CertificateAuthority (Maybe KeyStorageSecurityStandard)

-- | Information about the Online Certificate Status Protocol (OCSP)
--   configuration or certificate revocation list (CRL) created and
--   maintained by your private CA.
certificateAuthority_revocationConfiguration :: Lens' CertificateAuthority (Maybe RevocationConfiguration)

-- | Serial number of your private CA.
certificateAuthority_serial :: Lens' CertificateAuthority (Maybe Text)

-- | Date and time at which your private CA was created.
certificateAuthority_createdAt :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Amazon Resource Name (ARN) for your private certificate authority
--   (CA). The format is <tt> 12345678-1234-1234-1234-123456789012 </tt>.
certificateAuthority_arn :: Lens' CertificateAuthority (Maybe Text)

-- | Your private CA configuration.
certificateAuthority_certificateAuthorityConfiguration :: Lens' CertificateAuthority (Maybe CertificateAuthorityConfiguration)

-- | Reason the request to create your private CA failed.
certificateAuthority_failureReason :: Lens' CertificateAuthority (Maybe FailureReason)

-- | Date and time after which your private CA certificate is not valid.
certificateAuthority_notAfter :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Date and time at which your private CA was last updated.
certificateAuthority_lastStateChangeAt :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Type of your private CA.
certificateAuthority_type :: Lens' CertificateAuthority (Maybe CertificateAuthorityType)

-- | The AWS account ID that owns the certificate authority.
certificateAuthority_ownerAccount :: Lens' CertificateAuthority (Maybe Text)

-- | The period during which a deleted CA can be restored. For more
--   information, see the <tt>PermanentDeletionTimeInDays</tt> parameter of
--   the <a>DeleteCertificateAuthorityRequest</a> action.
certificateAuthority_restorableUntil :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Contains configuration information for your private certificate
--   authority (CA). This includes information about the class of public
--   key algorithm and the key pair that your private CA creates when it
--   issues a certificate. It also includes the signature algorithm that it
--   uses when issuing certificates, and its X.500 distinguished name. You
--   must specify this information when you call the
--   <a>CreateCertificateAuthority</a> action.
--   
--   <i>See:</i> <a>newCertificateAuthorityConfiguration</a> smart
--   constructor.
data CertificateAuthorityConfiguration
CertificateAuthorityConfiguration' :: Maybe CsrExtensions -> KeyAlgorithm -> SigningAlgorithm -> ASN1Subject -> CertificateAuthorityConfiguration

-- | Specifies information to be added to the extension section of the
--   certificate signing request (CSR).
[$sel:csrExtensions:CertificateAuthorityConfiguration'] :: CertificateAuthorityConfiguration -> Maybe CsrExtensions

-- | Type of the public key algorithm and size, in bits, of the key pair
--   that your CA creates when it issues a certificate. When you create a
--   subordinate CA, you must use a key algorithm supported by the parent
--   CA.
[$sel:keyAlgorithm:CertificateAuthorityConfiguration'] :: CertificateAuthorityConfiguration -> KeyAlgorithm

-- | Name of the algorithm your private CA uses to sign certificate
--   requests.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign certificates when
--   they are issued.
[$sel:signingAlgorithm:CertificateAuthorityConfiguration'] :: CertificateAuthorityConfiguration -> SigningAlgorithm

-- | Structure that contains X.500 distinguished name information for your
--   private CA.
[$sel:subject:CertificateAuthorityConfiguration'] :: CertificateAuthorityConfiguration -> ASN1Subject

-- | Create a value of <a>CertificateAuthorityConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:csrExtensions:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_csrExtensions</a> - Specifies
--   information to be added to the extension section of the certificate
--   signing request (CSR).
--   
--   <a>$sel:keyAlgorithm:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_keyAlgorithm</a> - Type of the
--   public key algorithm and size, in bits, of the key pair that your CA
--   creates when it issues a certificate. When you create a subordinate
--   CA, you must use a key algorithm supported by the parent CA.
--   
--   <a>$sel:signingAlgorithm:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_signingAlgorithm</a> - Name of
--   the algorithm your private CA uses to sign certificate requests.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign certificates when
--   they are issued.
--   
--   <a>$sel:subject:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_subject</a> - Structure that
--   contains X.500 distinguished name information for your private CA.
newCertificateAuthorityConfiguration :: KeyAlgorithm -> SigningAlgorithm -> ASN1Subject -> CertificateAuthorityConfiguration

-- | Specifies information to be added to the extension section of the
--   certificate signing request (CSR).
certificateAuthorityConfiguration_csrExtensions :: Lens' CertificateAuthorityConfiguration (Maybe CsrExtensions)

-- | Type of the public key algorithm and size, in bits, of the key pair
--   that your CA creates when it issues a certificate. When you create a
--   subordinate CA, you must use a key algorithm supported by the parent
--   CA.
certificateAuthorityConfiguration_keyAlgorithm :: Lens' CertificateAuthorityConfiguration KeyAlgorithm

-- | Name of the algorithm your private CA uses to sign certificate
--   requests.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign certificates when
--   they are issued.
certificateAuthorityConfiguration_signingAlgorithm :: Lens' CertificateAuthorityConfiguration SigningAlgorithm

-- | Structure that contains X.500 distinguished name information for your
--   private CA.
certificateAuthorityConfiguration_subject :: Lens' CertificateAuthorityConfiguration ASN1Subject

-- | Contains configuration information for a certificate revocation list
--   (CRL). Your private certificate authority (CA) creates base CRLs.
--   Delta CRLs are not supported. You can enable CRLs for your new or an
--   existing private CA by setting the <b>Enabled</b> parameter to
--   <tt>true</tt>. Your private CA writes CRLs to an S3 bucket that you
--   specify in the <b>S3BucketName</b> parameter. You can hide the name of
--   your bucket by specifying a value for the <b>CustomCname</b>
--   parameter. Your private CA copies the CNAME or the S3 bucket name to
--   the <b>CRL Distribution Points</b> extension of each certificate it
--   issues. Your S3 bucket policy must give write permission to ACM
--   Private CA.
--   
--   ACM Private CA assets that are stored in Amazon S3 can be protected
--   with encryption. For more information, see <a>Encrypting Your
--   CRLs</a>.
--   
--   Your private CA uses the value in the <b>ExpirationInDays</b>
--   parameter to calculate the <b>nextUpdate</b> field in the CRL. The CRL
--   is refreshed at 1/2 the age of next update or when a certificate is
--   revoked. When a certificate is revoked, it is recorded in the next CRL
--   that is generated and in the next audit report. Only time valid
--   certificates are listed in the CRL. Expired certificates are not
--   included.
--   
--   A CRL is typically updated approximately 30 minutes after a
--   certificate is revoked. If for any reason a CRL update fails, ACM
--   Private CA makes further attempts every 15 minutes.
--   
--   CRLs contain the following fields:
--   
--   <ul>
--   <li><b>Version</b>: The current version number defined in RFC 5280 is
--   V2. The integer value is 0x1.</li>
--   <li><b>Signature Algorithm</b>: The name of the algorithm used to sign
--   the CRL.</li>
--   <li><b>Issuer</b>: The X.500 distinguished name of your private CA
--   that issued the CRL.</li>
--   <li><b>Last Update</b>: The issue date and time of this CRL.</li>
--   <li><b>Next Update</b>: The day and time by which the next CRL will be
--   issued.</li>
--   <li><b>Revoked Certificates</b>: List of revoked certificates. Each
--   list item contains the following information.<ul><li><b>Serial
--   Number</b>: The serial number, in hexadecimal format, of the revoked
--   certificate.</li><li><b>Revocation Date</b>: Date and time the
--   certificate was revoked.</li><li><b>CRL Entry Extensions</b>: Optional
--   extensions for the CRL entry.<ul><li><b>X509v3 CRL Reason Code</b>:
--   Reason the certificate was revoked.</li></ul></li></ul></li>
--   <li><b>CRL Extensions</b>: Optional extensions for the
--   CRL.<ul><li><b>X509v3 Authority Key Identifier</b>: Identifies the
--   public key associated with the private key used to sign the
--   certificate.</li><li><b>X509v3 CRL Number:</b>: Decimal sequence
--   number for the CRL.</li></ul></li>
--   <li><b>Signature Algorithm</b>: Algorithm used by your private CA to
--   sign the CRL.</li>
--   <li><b>Signature Value</b>: Signature computed over the CRL.</li>
--   </ul>
--   
--   Certificate revocation lists created by ACM Private CA are
--   DER-encoded. You can use the following OpenSSL command to list a CRL.
--   
--   <pre>
--   openssl crl -inform DER -text -in crl_path -noout
--   </pre>
--   
--   For more information, see <a>Planning a certificate revocation list
--   (CRL)</a> in the /AWS Certificate Manager Private Certificate
--   Authority (PCA) User Guide/
--   
--   <i>See:</i> <a>newCrlConfiguration</a> smart constructor.
data CrlConfiguration
CrlConfiguration' :: Maybe Text -> Maybe S3ObjectAcl -> Maybe Text -> Maybe Natural -> Bool -> CrlConfiguration

-- | Name inserted into the certificate <b>CRL Distribution Points</b>
--   extension that enables the use of an alias for the CRL distribution
--   point. Use this value if you don't want the name of your S3 bucket to
--   be public.
[$sel:customCname:CrlConfiguration'] :: CrlConfiguration -> Maybe Text

-- | Determines whether the CRL will be publicly readable or privately held
--   in the CRL Amazon S3 bucket. If you choose PUBLIC_READ, the CRL will
--   be accessible over the public internet. If you choose
--   BUCKET_OWNER_FULL_CONTROL, only the owner of the CRL S3 bucket can
--   access the CRL, and your PKI clients may need an alternative method of
--   access.
--   
--   If no value is specified, the default is <tt>PUBLIC_READ</tt>.
--   
--   <i>Note:</i> This default can cause CA creation to fail in some
--   circumstances. If you have have enabled the Block Public Access (BPA)
--   feature in your S3 account, then you must specify the value of this
--   parameter as <tt>BUCKET_OWNER_FULL_CONTROL</tt>, and not doing so
--   results in an error. If you have disabled BPA in S3, then you can
--   specify either <tt>BUCKET_OWNER_FULL_CONTROL</tt> or
--   <tt>PUBLIC_READ</tt> as the value.
--   
--   For more information, see <a>Blocking public access to the S3
--   bucket</a>.
[$sel:s3ObjectAcl:CrlConfiguration'] :: CrlConfiguration -> Maybe S3ObjectAcl

-- | Name of the S3 bucket that contains the CRL. If you do not provide a
--   value for the <b>CustomCname</b> argument, the name of your S3 bucket
--   is placed into the <b>CRL Distribution Points</b> extension of the
--   issued certificate. You can change the name of your bucket by calling
--   the <a>UpdateCertificateAuthority</a> operation. You must specify a
--   <a>bucket policy</a> that allows ACM Private CA to write the CRL to
--   your bucket.
[$sel:s3BucketName:CrlConfiguration'] :: CrlConfiguration -> Maybe Text

-- | Validity period of the CRL in days.
[$sel:expirationInDays:CrlConfiguration'] :: CrlConfiguration -> Maybe Natural

-- | Boolean value that specifies whether certificate revocation lists
--   (CRLs) are enabled. You can use this value to enable certificate
--   revocation for a new CA when you call the
--   <a>CreateCertificateAuthority</a> action or for an existing CA when
--   you call the <a>UpdateCertificateAuthority</a> action.
[$sel:enabled:CrlConfiguration'] :: CrlConfiguration -> Bool

-- | Create a value of <a>CrlConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customCname:CrlConfiguration'</a>,
--   <a>crlConfiguration_customCname</a> - Name inserted into the
--   certificate <b>CRL Distribution Points</b> extension that enables the
--   use of an alias for the CRL distribution point. Use this value if you
--   don't want the name of your S3 bucket to be public.
--   
--   <a>$sel:s3ObjectAcl:CrlConfiguration'</a>,
--   <a>crlConfiguration_s3ObjectAcl</a> - Determines whether the CRL will
--   be publicly readable or privately held in the CRL Amazon S3 bucket. If
--   you choose PUBLIC_READ, the CRL will be accessible over the public
--   internet. If you choose BUCKET_OWNER_FULL_CONTROL, only the owner of
--   the CRL S3 bucket can access the CRL, and your PKI clients may need an
--   alternative method of access.
--   
--   If no value is specified, the default is <tt>PUBLIC_READ</tt>.
--   
--   <i>Note:</i> This default can cause CA creation to fail in some
--   circumstances. If you have have enabled the Block Public Access (BPA)
--   feature in your S3 account, then you must specify the value of this
--   parameter as <tt>BUCKET_OWNER_FULL_CONTROL</tt>, and not doing so
--   results in an error. If you have disabled BPA in S3, then you can
--   specify either <tt>BUCKET_OWNER_FULL_CONTROL</tt> or
--   <tt>PUBLIC_READ</tt> as the value.
--   
--   For more information, see <a>Blocking public access to the S3
--   bucket</a>.
--   
--   <a>$sel:s3BucketName:CrlConfiguration'</a>,
--   <a>crlConfiguration_s3BucketName</a> - Name of the S3 bucket that
--   contains the CRL. If you do not provide a value for the
--   <b>CustomCname</b> argument, the name of your S3 bucket is placed into
--   the <b>CRL Distribution Points</b> extension of the issued
--   certificate. You can change the name of your bucket by calling the
--   <a>UpdateCertificateAuthority</a> operation. You must specify a
--   <a>bucket policy</a> that allows ACM Private CA to write the CRL to
--   your bucket.
--   
--   <a>$sel:expirationInDays:CrlConfiguration'</a>,
--   <a>crlConfiguration_expirationInDays</a> - Validity period of the CRL
--   in days.
--   
--   <a>$sel:enabled:CrlConfiguration'</a>, <a>crlConfiguration_enabled</a>
--   - Boolean value that specifies whether certificate revocation lists
--   (CRLs) are enabled. You can use this value to enable certificate
--   revocation for a new CA when you call the
--   <a>CreateCertificateAuthority</a> action or for an existing CA when
--   you call the <a>UpdateCertificateAuthority</a> action.
newCrlConfiguration :: Bool -> CrlConfiguration

-- | Name inserted into the certificate <b>CRL Distribution Points</b>
--   extension that enables the use of an alias for the CRL distribution
--   point. Use this value if you don't want the name of your S3 bucket to
--   be public.
crlConfiguration_customCname :: Lens' CrlConfiguration (Maybe Text)

-- | Determines whether the CRL will be publicly readable or privately held
--   in the CRL Amazon S3 bucket. If you choose PUBLIC_READ, the CRL will
--   be accessible over the public internet. If you choose
--   BUCKET_OWNER_FULL_CONTROL, only the owner of the CRL S3 bucket can
--   access the CRL, and your PKI clients may need an alternative method of
--   access.
--   
--   If no value is specified, the default is <tt>PUBLIC_READ</tt>.
--   
--   <i>Note:</i> This default can cause CA creation to fail in some
--   circumstances. If you have have enabled the Block Public Access (BPA)
--   feature in your S3 account, then you must specify the value of this
--   parameter as <tt>BUCKET_OWNER_FULL_CONTROL</tt>, and not doing so
--   results in an error. If you have disabled BPA in S3, then you can
--   specify either <tt>BUCKET_OWNER_FULL_CONTROL</tt> or
--   <tt>PUBLIC_READ</tt> as the value.
--   
--   For more information, see <a>Blocking public access to the S3
--   bucket</a>.
crlConfiguration_s3ObjectAcl :: Lens' CrlConfiguration (Maybe S3ObjectAcl)

-- | Name of the S3 bucket that contains the CRL. If you do not provide a
--   value for the <b>CustomCname</b> argument, the name of your S3 bucket
--   is placed into the <b>CRL Distribution Points</b> extension of the
--   issued certificate. You can change the name of your bucket by calling
--   the <a>UpdateCertificateAuthority</a> operation. You must specify a
--   <a>bucket policy</a> that allows ACM Private CA to write the CRL to
--   your bucket.
crlConfiguration_s3BucketName :: Lens' CrlConfiguration (Maybe Text)

-- | Validity period of the CRL in days.
crlConfiguration_expirationInDays :: Lens' CrlConfiguration (Maybe Natural)

-- | Boolean value that specifies whether certificate revocation lists
--   (CRLs) are enabled. You can use this value to enable certificate
--   revocation for a new CA when you call the
--   <a>CreateCertificateAuthority</a> action or for an existing CA when
--   you call the <a>UpdateCertificateAuthority</a> action.
crlConfiguration_enabled :: Lens' CrlConfiguration Bool

-- | Describes the certificate extensions to be added to the certificate
--   signing request (CSR).
--   
--   <i>See:</i> <a>newCsrExtensions</a> smart constructor.
data CsrExtensions
CsrExtensions' :: Maybe [AccessDescription] -> Maybe KeyUsage -> CsrExtensions

-- | For CA certificates, provides a path to additional information
--   pertaining to the CA, such as revocation and policy. For more
--   information, see <a>Subject Information Access</a> in RFC 5280.
[$sel:subjectInformationAccess:CsrExtensions'] :: CsrExtensions -> Maybe [AccessDescription]

-- | Indicates the purpose of the certificate and of the key contained in
--   the certificate.
[$sel:keyUsage:CsrExtensions'] :: CsrExtensions -> Maybe KeyUsage

-- | Create a value of <a>CsrExtensions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectInformationAccess:CsrExtensions'</a>,
--   <a>csrExtensions_subjectInformationAccess</a> - For CA certificates,
--   provides a path to additional information pertaining to the CA, such
--   as revocation and policy. For more information, see <a>Subject
--   Information Access</a> in RFC 5280.
--   
--   <a>$sel:keyUsage:CsrExtensions'</a>, <a>csrExtensions_keyUsage</a> -
--   Indicates the purpose of the certificate and of the key contained in
--   the certificate.
newCsrExtensions :: CsrExtensions

-- | For CA certificates, provides a path to additional information
--   pertaining to the CA, such as revocation and policy. For more
--   information, see <a>Subject Information Access</a> in RFC 5280.
csrExtensions_subjectInformationAccess :: Lens' CsrExtensions (Maybe [AccessDescription])

-- | Indicates the purpose of the certificate and of the key contained in
--   the certificate.
csrExtensions_keyUsage :: Lens' CsrExtensions (Maybe KeyUsage)

-- | Describes an Electronic Data Interchange (EDI) entity as described in
--   as defined in <a>Subject Alternative Name</a> in RFC 5280.
--   
--   <i>See:</i> <a>newEdiPartyName</a> smart constructor.
data EdiPartyName
EdiPartyName' :: Maybe Text -> Text -> EdiPartyName

-- | Specifies the name assigner.
[$sel:nameAssigner:EdiPartyName'] :: EdiPartyName -> Maybe Text

-- | Specifies the party name.
[$sel:partyName:EdiPartyName'] :: EdiPartyName -> Text

-- | Create a value of <a>EdiPartyName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameAssigner:EdiPartyName'</a>,
--   <a>ediPartyName_nameAssigner</a> - Specifies the name assigner.
--   
--   <a>$sel:partyName:EdiPartyName'</a>, <a>ediPartyName_partyName</a> -
--   Specifies the party name.
newEdiPartyName :: Text -> EdiPartyName

-- | Specifies the name assigner.
ediPartyName_nameAssigner :: Lens' EdiPartyName (Maybe Text)

-- | Specifies the party name.
ediPartyName_partyName :: Lens' EdiPartyName Text

-- | Specifies additional purposes for which the certified public key may
--   be used other than basic purposes indicated in the <tt>KeyUsage</tt>
--   extension.
--   
--   <i>See:</i> <a>newExtendedKeyUsage</a> smart constructor.
data ExtendedKeyUsage
ExtendedKeyUsage' :: Maybe Text -> Maybe ExtendedKeyUsageType -> ExtendedKeyUsage

-- | Specifies a custom <tt>ExtendedKeyUsage</tt> with an object identifier
--   (OID).
[$sel:extendedKeyUsageObjectIdentifier:ExtendedKeyUsage'] :: ExtendedKeyUsage -> Maybe Text

-- | Specifies a standard <tt>ExtendedKeyUsage</tt> as defined as in <a>RFC
--   5280</a>.
[$sel:extendedKeyUsageType:ExtendedKeyUsage'] :: ExtendedKeyUsage -> Maybe ExtendedKeyUsageType

-- | Create a value of <a>ExtendedKeyUsage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extendedKeyUsageObjectIdentifier:ExtendedKeyUsage'</a>,
--   <a>extendedKeyUsage_extendedKeyUsageObjectIdentifier</a> - Specifies a
--   custom <tt>ExtendedKeyUsage</tt> with an object identifier (OID).
--   
--   <a>$sel:extendedKeyUsageType:ExtendedKeyUsage'</a>,
--   <a>extendedKeyUsage_extendedKeyUsageType</a> - Specifies a standard
--   <tt>ExtendedKeyUsage</tt> as defined as in <a>RFC 5280</a>.
newExtendedKeyUsage :: ExtendedKeyUsage

-- | Specifies a custom <tt>ExtendedKeyUsage</tt> with an object identifier
--   (OID).
extendedKeyUsage_extendedKeyUsageObjectIdentifier :: Lens' ExtendedKeyUsage (Maybe Text)

-- | Specifies a standard <tt>ExtendedKeyUsage</tt> as defined as in <a>RFC
--   5280</a>.
extendedKeyUsage_extendedKeyUsageType :: Lens' ExtendedKeyUsage (Maybe ExtendedKeyUsageType)

-- | Contains X.509 extension information for a certificate.
--   
--   <i>See:</i> <a>newExtensions</a> smart constructor.
data Extensions
Extensions' :: Maybe (NonEmpty PolicyInformation) -> Maybe (NonEmpty ExtendedKeyUsage) -> Maybe (NonEmpty GeneralName) -> Maybe KeyUsage -> Extensions

-- | Contains a sequence of one or more policy information terms, each of
--   which consists of an object identifier (OID) and optional qualifiers.
--   For more information, see NIST's definition of <a>Object Identifier
--   (OID)</a>.
--   
--   In an end-entity certificate, these terms indicate the policy under
--   which the certificate was issued and the purposes for which it may be
--   used. In a CA certificate, these terms limit the set of policies for
--   certification paths that include this certificate.
[$sel:certificatePolicies:Extensions'] :: Extensions -> Maybe (NonEmpty PolicyInformation)

-- | Specifies additional purposes for which the certified public key may
--   be used other than basic purposes indicated in the <tt>KeyUsage</tt>
--   extension.
[$sel:extendedKeyUsage:Extensions'] :: Extensions -> Maybe (NonEmpty ExtendedKeyUsage)

-- | The subject alternative name extension allows identities to be bound
--   to the subject of the certificate. These identities may be included in
--   addition to or in place of the identity in the subject field of the
--   certificate.
[$sel:subjectAlternativeNames:Extensions'] :: Extensions -> Maybe (NonEmpty GeneralName)
[$sel:keyUsage:Extensions'] :: Extensions -> Maybe KeyUsage

-- | Create a value of <a>Extensions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificatePolicies:Extensions'</a>,
--   <a>extensions_certificatePolicies</a> - Contains a sequence of one or
--   more policy information terms, each of which consists of an object
--   identifier (OID) and optional qualifiers. For more information, see
--   NIST's definition of <a>Object Identifier (OID)</a>.
--   
--   In an end-entity certificate, these terms indicate the policy under
--   which the certificate was issued and the purposes for which it may be
--   used. In a CA certificate, these terms limit the set of policies for
--   certification paths that include this certificate.
--   
--   <a>$sel:extendedKeyUsage:Extensions'</a>,
--   <a>extensions_extendedKeyUsage</a> - Specifies additional purposes for
--   which the certified public key may be used other than basic purposes
--   indicated in the <tt>KeyUsage</tt> extension.
--   
--   <a>$sel:subjectAlternativeNames:Extensions'</a>,
--   <a>extensions_subjectAlternativeNames</a> - The subject alternative
--   name extension allows identities to be bound to the subject of the
--   certificate. These identities may be included in addition to or in
--   place of the identity in the subject field of the certificate.
--   
--   <a>$sel:keyUsage:Extensions'</a>, <a>extensions_keyUsage</a> -
--   Undocumented member.
newExtensions :: Extensions

-- | Contains a sequence of one or more policy information terms, each of
--   which consists of an object identifier (OID) and optional qualifiers.
--   For more information, see NIST's definition of <a>Object Identifier
--   (OID)</a>.
--   
--   In an end-entity certificate, these terms indicate the policy under
--   which the certificate was issued and the purposes for which it may be
--   used. In a CA certificate, these terms limit the set of policies for
--   certification paths that include this certificate.
extensions_certificatePolicies :: Lens' Extensions (Maybe (NonEmpty PolicyInformation))

-- | Specifies additional purposes for which the certified public key may
--   be used other than basic purposes indicated in the <tt>KeyUsage</tt>
--   extension.
extensions_extendedKeyUsage :: Lens' Extensions (Maybe (NonEmpty ExtendedKeyUsage))

-- | The subject alternative name extension allows identities to be bound
--   to the subject of the certificate. These identities may be included in
--   addition to or in place of the identity in the subject field of the
--   certificate.
extensions_subjectAlternativeNames :: Lens' Extensions (Maybe (NonEmpty GeneralName))

-- | Undocumented member.
extensions_keyUsage :: Lens' Extensions (Maybe KeyUsage)

-- | Describes an ASN.1 X.400 <tt>GeneralName</tt> as defined in <a>RFC
--   5280</a>. Only one of the following naming options should be provided.
--   Providing more than one option results in an
--   <tt>InvalidArgsException</tt> error.
--   
--   <i>See:</i> <a>newGeneralName</a> smart constructor.
data GeneralName
GeneralName' :: Maybe EdiPartyName -> Maybe OtherName -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ASN1Subject -> Maybe Text -> Maybe Text -> GeneralName

-- | Represents <tt>GeneralName</tt> as an <tt>EdiPartyName</tt> object.
[$sel:ediPartyName:GeneralName'] :: GeneralName -> Maybe EdiPartyName

-- | Represents <tt>GeneralName</tt> using an <tt>OtherName</tt> object.
[$sel:otherName:GeneralName'] :: GeneralName -> Maybe OtherName

-- | Represents <tt>GeneralName</tt> as a URI.
[$sel:uniformResourceIdentifier:GeneralName'] :: GeneralName -> Maybe Text

-- | Represents <tt>GeneralName</tt> as an IPv4 or IPv6 address.
[$sel:ipAddress:GeneralName'] :: GeneralName -> Maybe Text

-- | Represents <tt>GeneralName</tt> as a DNS name.
[$sel:dnsName:GeneralName'] :: GeneralName -> Maybe Text
[$sel:directoryName:GeneralName'] :: GeneralName -> Maybe ASN1Subject

-- | Represents <tt>GeneralName</tt> as an <a>RFC 822</a> email address.
[$sel:rfc822Name:GeneralName'] :: GeneralName -> Maybe Text

-- | Represents <tt>GeneralName</tt> as an object identifier (OID).
[$sel:registeredId:GeneralName'] :: GeneralName -> Maybe Text

-- | Create a value of <a>GeneralName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ediPartyName:GeneralName'</a>, <a>generalName_ediPartyName</a>
--   - Represents <tt>GeneralName</tt> as an <tt>EdiPartyName</tt> object.
--   
--   <a>$sel:otherName:GeneralName'</a>, <a>generalName_otherName</a> -
--   Represents <tt>GeneralName</tt> using an <tt>OtherName</tt> object.
--   
--   <a>$sel:uniformResourceIdentifier:GeneralName'</a>,
--   <a>generalName_uniformResourceIdentifier</a> - Represents
--   <tt>GeneralName</tt> as a URI.
--   
--   <a>$sel:ipAddress:GeneralName'</a>, <a>generalName_ipAddress</a> -
--   Represents <tt>GeneralName</tt> as an IPv4 or IPv6 address.
--   
--   <a>$sel:dnsName:GeneralName'</a>, <a>generalName_dnsName</a> -
--   Represents <tt>GeneralName</tt> as a DNS name.
--   
--   <a>$sel:directoryName:GeneralName'</a>,
--   <a>generalName_directoryName</a> - Undocumented member.
--   
--   <a>$sel:rfc822Name:GeneralName'</a>, <a>generalName_rfc822Name</a> -
--   Represents <tt>GeneralName</tt> as an <a>RFC 822</a> email address.
--   
--   <a>$sel:registeredId:GeneralName'</a>, <a>generalName_registeredId</a>
--   - Represents <tt>GeneralName</tt> as an object identifier (OID).
newGeneralName :: GeneralName

-- | Represents <tt>GeneralName</tt> as an <tt>EdiPartyName</tt> object.
generalName_ediPartyName :: Lens' GeneralName (Maybe EdiPartyName)

-- | Represents <tt>GeneralName</tt> using an <tt>OtherName</tt> object.
generalName_otherName :: Lens' GeneralName (Maybe OtherName)

-- | Represents <tt>GeneralName</tt> as a URI.
generalName_uniformResourceIdentifier :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as an IPv4 or IPv6 address.
generalName_ipAddress :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as a DNS name.
generalName_dnsName :: Lens' GeneralName (Maybe Text)

-- | Undocumented member.
generalName_directoryName :: Lens' GeneralName (Maybe ASN1Subject)

-- | Represents <tt>GeneralName</tt> as an <a>RFC 822</a> email address.
generalName_rfc822Name :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as an object identifier (OID).
generalName_registeredId :: Lens' GeneralName (Maybe Text)

-- | Defines one or more purposes for which the key contained in the
--   certificate can be used. Default value for each option is false.
--   
--   <i>See:</i> <a>newKeyUsage</a> smart constructor.
data KeyUsage
KeyUsage' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> KeyUsage

-- | Key can be used to decipher data.
[$sel:dataEncipherment:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used to sign certificates.
[$sel:keyCertSign:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used to sign CRLs.
[$sel:cRLSign:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used to encipher data.
[$sel:keyEncipherment:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used only to encipher data.
[$sel:encipherOnly:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used in a key-agreement protocol.
[$sel:keyAgreement:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used for digital signing.
[$sel:digitalSignature:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used only to decipher data.
[$sel:decipherOnly:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Key can be used for non-repudiation.
[$sel:nonRepudiation:KeyUsage'] :: KeyUsage -> Maybe Bool

-- | Create a value of <a>KeyUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataEncipherment:KeyUsage'</a>,
--   <a>keyUsage_dataEncipherment</a> - Key can be used to decipher data.
--   
--   <a>$sel:keyCertSign:KeyUsage'</a>, <a>keyUsage_keyCertSign</a> - Key
--   can be used to sign certificates.
--   
--   <a>$sel:cRLSign:KeyUsage'</a>, <a>keyUsage_cRLSign</a> - Key can be
--   used to sign CRLs.
--   
--   <a>$sel:keyEncipherment:KeyUsage'</a>, <a>keyUsage_keyEncipherment</a>
--   - Key can be used to encipher data.
--   
--   <a>$sel:encipherOnly:KeyUsage'</a>, <a>keyUsage_encipherOnly</a> - Key
--   can be used only to encipher data.
--   
--   <a>$sel:keyAgreement:KeyUsage'</a>, <a>keyUsage_keyAgreement</a> - Key
--   can be used in a key-agreement protocol.
--   
--   <a>$sel:digitalSignature:KeyUsage'</a>,
--   <a>keyUsage_digitalSignature</a> - Key can be used for digital
--   signing.
--   
--   <a>$sel:decipherOnly:KeyUsage'</a>, <a>keyUsage_decipherOnly</a> - Key
--   can be used only to decipher data.
--   
--   <a>$sel:nonRepudiation:KeyUsage'</a>, <a>keyUsage_nonRepudiation</a> -
--   Key can be used for non-repudiation.
newKeyUsage :: KeyUsage

-- | Key can be used to decipher data.
keyUsage_dataEncipherment :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to sign certificates.
keyUsage_keyCertSign :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to sign CRLs.
keyUsage_cRLSign :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to encipher data.
keyUsage_keyEncipherment :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used only to encipher data.
keyUsage_encipherOnly :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used in a key-agreement protocol.
keyUsage_keyAgreement :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used for digital signing.
keyUsage_digitalSignature :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used only to decipher data.
keyUsage_decipherOnly :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used for non-repudiation.
keyUsage_nonRepudiation :: Lens' KeyUsage (Maybe Bool)

-- | Contains information to enable and configure Online Certificate Status
--   Protocol (OCSP) for validating certificate revocation status.
--   
--   When you revoke a certificate, OCSP responses may take up to 60
--   minutes to reflect the new status.
--   
--   <i>See:</i> <a>newOcspConfiguration</a> smart constructor.
data OcspConfiguration
OcspConfiguration' :: Maybe Text -> Bool -> OcspConfiguration

-- | By default, ACM Private CA injects an AWS domain into certificates
--   being validated by the Online Certificate Status Protocol (OCSP). A
--   customer can alternatively use this object to define a CNAME
--   specifying a customized OCSP domain.
--   
--   Note: The value of the CNAME must not include a protocol prefix such
--   as "http://" or "https://".
--   
--   For more information, see <a>Customizing Online Certificate Status
--   Protocol (OCSP)</a> in the /AWS Certificate Manager Private
--   Certificate Authority (PCA) User Guide/.
[$sel:ocspCustomCname:OcspConfiguration'] :: OcspConfiguration -> Maybe Text

-- | Flag enabling use of the Online Certificate Status Protocol (OCSP) for
--   validating certificate revocation status.
[$sel:enabled:OcspConfiguration'] :: OcspConfiguration -> Bool

-- | Create a value of <a>OcspConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ocspCustomCname:OcspConfiguration'</a>,
--   <a>ocspConfiguration_ocspCustomCname</a> - By default, ACM Private CA
--   injects an AWS domain into certificates being validated by the Online
--   Certificate Status Protocol (OCSP). A customer can alternatively use
--   this object to define a CNAME specifying a customized OCSP domain.
--   
--   Note: The value of the CNAME must not include a protocol prefix such
--   as "http://" or "https://".
--   
--   For more information, see <a>Customizing Online Certificate Status
--   Protocol (OCSP)</a> in the /AWS Certificate Manager Private
--   Certificate Authority (PCA) User Guide/.
--   
--   <a>$sel:enabled:OcspConfiguration'</a>,
--   <a>ocspConfiguration_enabled</a> - Flag enabling use of the Online
--   Certificate Status Protocol (OCSP) for validating certificate
--   revocation status.
newOcspConfiguration :: Bool -> OcspConfiguration

-- | By default, ACM Private CA injects an AWS domain into certificates
--   being validated by the Online Certificate Status Protocol (OCSP). A
--   customer can alternatively use this object to define a CNAME
--   specifying a customized OCSP domain.
--   
--   Note: The value of the CNAME must not include a protocol prefix such
--   as "http://" or "https://".
--   
--   For more information, see <a>Customizing Online Certificate Status
--   Protocol (OCSP)</a> in the /AWS Certificate Manager Private
--   Certificate Authority (PCA) User Guide/.
ocspConfiguration_ocspCustomCname :: Lens' OcspConfiguration (Maybe Text)

-- | Flag enabling use of the Online Certificate Status Protocol (OCSP) for
--   validating certificate revocation status.
ocspConfiguration_enabled :: Lens' OcspConfiguration Bool

-- | Defines a custom ASN.1 X.400 <tt>GeneralName</tt> using an object
--   identifier (OID) and value. The OID must satisfy the regular
--   expression shown below. For more information, see NIST's definition of
--   <a>Object Identifier (OID)</a>.
--   
--   <i>See:</i> <a>newOtherName</a> smart constructor.
data OtherName
OtherName' :: Text -> Text -> OtherName

-- | Specifies an OID.
[$sel:typeId:OtherName'] :: OtherName -> Text

-- | Specifies an OID value.
[$sel:value:OtherName'] :: OtherName -> Text

-- | Create a value of <a>OtherName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typeId:OtherName'</a>, <a>otherName_typeId</a> - Specifies an
--   OID.
--   
--   <a>$sel:value:OtherName'</a>, <a>otherName_value</a> - Specifies an
--   OID value.
newOtherName :: Text -> Text -> OtherName

-- | Specifies an OID.
otherName_typeId :: Lens' OtherName Text

-- | Specifies an OID value.
otherName_value :: Lens' OtherName Text

-- | Permissions designate which private CA actions can be performed by an
--   AWS service or entity. In order for ACM to automatically renew private
--   certificates, you must give the ACM service principal all available
--   permissions (<tt>IssueCertificate</tt>, <tt>GetCertificate</tt>, and
--   <tt>ListPermissions</tt>). Permissions can be assigned with the
--   <a>CreatePermission</a> action, removed with the
--   <a>DeletePermission</a> action, and listed with the
--   <a>ListPermissions</a> action.
--   
--   <i>See:</i> <a>newPermission</a> smart constructor.
data Permission
Permission' :: Maybe Text -> Maybe POSIX -> Maybe (NonEmpty ActionType) -> Maybe Text -> Maybe Text -> Maybe Text -> Permission

-- | The Amazon Resource Number (ARN) of the private CA from which the
--   permission was issued.
[$sel:certificateAuthorityArn:Permission'] :: Permission -> Maybe Text

-- | The time at which the permission was created.
[$sel:createdAt:Permission'] :: Permission -> Maybe POSIX

-- | The private CA actions that can be performed by the designated AWS
--   service.
[$sel:actions:Permission'] :: Permission -> Maybe (NonEmpty ActionType)

-- | The AWS service or entity that holds the permission. At this time, the
--   only valid principal is <tt>acm.amazonaws.com</tt>.
[$sel:principal:Permission'] :: Permission -> Maybe Text

-- | The ID of the account that assigned the permission.
[$sel:sourceAccount:Permission'] :: Permission -> Maybe Text

-- | The name of the policy that is associated with the permission.
[$sel:policy:Permission'] :: Permission -> Maybe Text

-- | Create a value of <a>Permission</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:Permission'</a>,
--   <a>permission_certificateAuthorityArn</a> - The Amazon Resource Number
--   (ARN) of the private CA from which the permission was issued.
--   
--   <a>$sel:createdAt:Permission'</a>, <a>permission_createdAt</a> - The
--   time at which the permission was created.
--   
--   <a>$sel:actions:Permission'</a>, <a>permission_actions</a> - The
--   private CA actions that can be performed by the designated AWS
--   service.
--   
--   <a>$sel:principal:Permission'</a>, <a>permission_principal</a> - The
--   AWS service or entity that holds the permission. At this time, the
--   only valid principal is <tt>acm.amazonaws.com</tt>.
--   
--   <a>$sel:sourceAccount:Permission'</a>, <a>permission_sourceAccount</a>
--   - The ID of the account that assigned the permission.
--   
--   <a>$sel:policy:Permission'</a>, <a>permission_policy</a> - The name of
--   the policy that is associated with the permission.
newPermission :: Permission

-- | The Amazon Resource Number (ARN) of the private CA from which the
--   permission was issued.
permission_certificateAuthorityArn :: Lens' Permission (Maybe Text)

-- | The time at which the permission was created.
permission_createdAt :: Lens' Permission (Maybe UTCTime)

-- | The private CA actions that can be performed by the designated AWS
--   service.
permission_actions :: Lens' Permission (Maybe (NonEmpty ActionType))

-- | The AWS service or entity that holds the permission. At this time, the
--   only valid principal is <tt>acm.amazonaws.com</tt>.
permission_principal :: Lens' Permission (Maybe Text)

-- | The ID of the account that assigned the permission.
permission_sourceAccount :: Lens' Permission (Maybe Text)

-- | The name of the policy that is associated with the permission.
permission_policy :: Lens' Permission (Maybe Text)

-- | Defines the X.509 <tt>CertificatePolicies</tt> extension.
--   
--   <i>See:</i> <a>newPolicyInformation</a> smart constructor.
data PolicyInformation
PolicyInformation' :: Maybe (NonEmpty PolicyQualifierInfo) -> Text -> PolicyInformation

-- | Modifies the given <tt>CertPolicyId</tt> with a qualifier. ACM Private
--   CA supports the certification practice statement (CPS) qualifier.
[$sel:policyQualifiers:PolicyInformation'] :: PolicyInformation -> Maybe (NonEmpty PolicyQualifierInfo)

-- | Specifies the object identifier (OID) of the certificate policy under
--   which the certificate was issued. For more information, see NIST's
--   definition of <a>Object Identifier (OID)</a>.
[$sel:certPolicyId:PolicyInformation'] :: PolicyInformation -> Text

-- | Create a value of <a>PolicyInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyQualifiers:PolicyInformation'</a>,
--   <a>policyInformation_policyQualifiers</a> - Modifies the given
--   <tt>CertPolicyId</tt> with a qualifier. ACM Private CA supports the
--   certification practice statement (CPS) qualifier.
--   
--   <a>$sel:certPolicyId:PolicyInformation'</a>,
--   <a>policyInformation_certPolicyId</a> - Specifies the object
--   identifier (OID) of the certificate policy under which the certificate
--   was issued. For more information, see NIST's definition of <a>Object
--   Identifier (OID)</a>.
newPolicyInformation :: Text -> PolicyInformation

-- | Modifies the given <tt>CertPolicyId</tt> with a qualifier. ACM Private
--   CA supports the certification practice statement (CPS) qualifier.
policyInformation_policyQualifiers :: Lens' PolicyInformation (Maybe (NonEmpty PolicyQualifierInfo))

-- | Specifies the object identifier (OID) of the certificate policy under
--   which the certificate was issued. For more information, see NIST's
--   definition of <a>Object Identifier (OID)</a>.
policyInformation_certPolicyId :: Lens' PolicyInformation Text

-- | Modifies the <tt>CertPolicyId</tt> of a <tt>PolicyInformation</tt>
--   object with a qualifier. ACM Private CA supports the certification
--   practice statement (CPS) qualifier.
--   
--   <i>See:</i> <a>newPolicyQualifierInfo</a> smart constructor.
data PolicyQualifierInfo
PolicyQualifierInfo' :: PolicyQualifierId -> Qualifier -> PolicyQualifierInfo

-- | Identifies the qualifier modifying a <tt>CertPolicyId</tt>.
[$sel:policyQualifierId:PolicyQualifierInfo'] :: PolicyQualifierInfo -> PolicyQualifierId

-- | Defines the qualifier type. ACM Private CA supports the use of a URI
--   for a CPS qualifier in this field.
[$sel:qualifier:PolicyQualifierInfo'] :: PolicyQualifierInfo -> Qualifier

-- | Create a value of <a>PolicyQualifierInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyQualifierId:PolicyQualifierInfo'</a>,
--   <a>policyQualifierInfo_policyQualifierId</a> - Identifies the
--   qualifier modifying a <tt>CertPolicyId</tt>.
--   
--   <a>$sel:qualifier:PolicyQualifierInfo'</a>,
--   <a>policyQualifierInfo_qualifier</a> - Defines the qualifier type. ACM
--   Private CA supports the use of a URI for a CPS qualifier in this
--   field.
newPolicyQualifierInfo :: PolicyQualifierId -> Qualifier -> PolicyQualifierInfo

-- | Identifies the qualifier modifying a <tt>CertPolicyId</tt>.
policyQualifierInfo_policyQualifierId :: Lens' PolicyQualifierInfo PolicyQualifierId

-- | Defines the qualifier type. ACM Private CA supports the use of a URI
--   for a CPS qualifier in this field.
policyQualifierInfo_qualifier :: Lens' PolicyQualifierInfo Qualifier

-- | Defines a <tt>PolicyInformation</tt> qualifier. ACM Private CA
--   supports the <a>certification practice statement (CPS) qualifier</a>
--   defined in RFC 5280.
--   
--   <i>See:</i> <a>newQualifier</a> smart constructor.
data Qualifier
Qualifier' :: Text -> Qualifier

-- | Contains a pointer to a certification practice statement (CPS)
--   published by the CA.
[$sel:cpsUri:Qualifier'] :: Qualifier -> Text

-- | Create a value of <a>Qualifier</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cpsUri:Qualifier'</a>, <a>qualifier_cpsUri</a> - Contains a
--   pointer to a certification practice statement (CPS) published by the
--   CA.
newQualifier :: Text -> Qualifier

-- | Contains a pointer to a certification practice statement (CPS)
--   published by the CA.
qualifier_cpsUri :: Lens' Qualifier Text

-- | Certificate revocation information used by the
--   <a>CreateCertificateAuthority</a> and
--   <a>UpdateCertificateAuthority</a> actions. Your private certificate
--   authority (CA) can configure Online Certificate Status Protocol (OCSP)
--   support and/or maintain a certificate revocation list (CRL). OCSP
--   returns validation information about certificates as requested by
--   clients, and a CRL contains an updated list of certificates revoked by
--   your CA. For more information, see <a>RevokeCertificate</a> and
--   <a>Setting up a certificate revocation method</a> in the /AWS
--   Certificate Manager Private Certificate Authority (PCA) User Guide/.
--   
--   <i>See:</i> <a>newRevocationConfiguration</a> smart constructor.
data RevocationConfiguration
RevocationConfiguration' :: Maybe OcspConfiguration -> Maybe CrlConfiguration -> RevocationConfiguration

-- | Configuration of Online Certificate Status Protocol (OCSP) support, if
--   any, maintained by your private CA. When you revoke a certificate,
--   OCSP responses may take up to 60 minutes to reflect the new status.
[$sel:ocspConfiguration:RevocationConfiguration'] :: RevocationConfiguration -> Maybe OcspConfiguration

-- | Configuration of the certificate revocation list (CRL), if any,
--   maintained by your private CA. A CRL is typically updated
--   approximately 30 minutes after a certificate is revoked. If for any
--   reason a CRL update fails, ACM Private CA makes further attempts every
--   15 minutes.
[$sel:crlConfiguration:RevocationConfiguration'] :: RevocationConfiguration -> Maybe CrlConfiguration

-- | Create a value of <a>RevocationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ocspConfiguration:RevocationConfiguration'</a>,
--   <a>revocationConfiguration_ocspConfiguration</a> - Configuration of
--   Online Certificate Status Protocol (OCSP) support, if any, maintained
--   by your private CA. When you revoke a certificate, OCSP responses may
--   take up to 60 minutes to reflect the new status.
--   
--   <a>$sel:crlConfiguration:RevocationConfiguration'</a>,
--   <a>revocationConfiguration_crlConfiguration</a> - Configuration of the
--   certificate revocation list (CRL), if any, maintained by your private
--   CA. A CRL is typically updated approximately 30 minutes after a
--   certificate is revoked. If for any reason a CRL update fails, ACM
--   Private CA makes further attempts every 15 minutes.
newRevocationConfiguration :: RevocationConfiguration

-- | Configuration of Online Certificate Status Protocol (OCSP) support, if
--   any, maintained by your private CA. When you revoke a certificate,
--   OCSP responses may take up to 60 minutes to reflect the new status.
revocationConfiguration_ocspConfiguration :: Lens' RevocationConfiguration (Maybe OcspConfiguration)

-- | Configuration of the certificate revocation list (CRL), if any,
--   maintained by your private CA. A CRL is typically updated
--   approximately 30 minutes after a certificate is revoked. If for any
--   reason a CRL update fails, ACM Private CA makes further attempts every
--   15 minutes.
revocationConfiguration_crlConfiguration :: Lens' RevocationConfiguration (Maybe CrlConfiguration)

-- | Tags are labels that you can use to identify and organize your private
--   CAs. Each tag consists of a key and an optional value. You can
--   associate up to 50 tags with a private CA. To add one or more tags to
--   a private CA, call the <a>TagCertificateAuthority</a> action. To
--   remove a tag, call the <a>UntagCertificateAuthority</a> action.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | Value of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Key (name) of the tag.
[$sel:key:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - Value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - Key (name) of the tag.
newTag :: Text -> Tag

-- | Value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | Key (name) of the tag.
tag_key :: Lens' Tag Text

-- | Validity specifies the period of time during which a certificate is
--   valid. Validity can be expressed as an explicit date and time when the
--   validity of a certificate starts or expires, or as a span of time
--   after issuance, stated in days, months, or years. For more
--   information, see <a>Validity</a> in RFC 5280.
--   
--   ACM Private CA API consumes the <tt>Validity</tt> data type
--   differently in two distinct parameters of the
--   <tt>IssueCertificate</tt> action. The required parameter
--   <tt>IssueCertificate</tt>:<tt>Validity</tt> specifies the end of a
--   certificate's validity period. The optional parameter
--   <tt>IssueCertificate</tt>:<tt>ValidityNotBefore</tt> specifies a
--   customized starting time for the validity period.
--   
--   <i>See:</i> <a>newValidity</a> smart constructor.
data Validity
Validity' :: Natural -> ValidityPeriodType -> Validity

-- | A long integer interpreted according to the value of <tt>Type</tt>,
--   below.
[$sel:value:Validity'] :: Validity -> Natural

-- | Determines how <i>ACM Private CA</i> interprets the <tt>Value</tt>
--   parameter, an integer. Supported validity types include those listed
--   below. Type definitions with values include a sample input value and
--   the resulting output.
--   
--   <tt>END_DATE</tt>: The specific date and time when the certificate
--   will expire, expressed using UTCTime (YYMMDDHHMMSS) or GeneralizedTime
--   (YYYYMMDDHHMMSS) format. When UTCTime is used, if the year field (YY)
--   is greater than or equal to 50, the year is interpreted as 19YY. If
--   the year field is less than 50, the year is interpreted as 20YY.
--   
--   <ul>
--   <li>Sample input value: 491231235959 (UTCTime format)</li>
--   <li>Output expiration date/time: 12/31/2049 23:59:59</li>
--   </ul>
--   
--   <tt>ABSOLUTE</tt>: The specific date and time when the validity of a
--   certificate will start or expire, expressed in seconds since the Unix
--   Epoch.
--   
--   <ul>
--   <li>Sample input value: 2524608000</li>
--   <li>Output expiration date/time: 01/01/2050 00:00:00</li>
--   </ul>
--   
--   <tt>DAYS</tt>, <tt>MONTHS</tt>, <tt>YEARS</tt>: The relative time from
--   the moment of issuance until the certificate will expire, expressed in
--   days, months, or years.
--   
--   Example if <tt>DAYS</tt>, issued on 10/12/2020 at 12:34:54 UTC:
--   
--   <ul>
--   <li>Sample input value: 90</li>
--   <li>Output expiration date: 01/10/2020 12:34:54 UTC</li>
--   </ul>
--   
--   The minimum validity duration for a certificate using relative time
--   (<tt>DAYS</tt>) is one day. The minimum validity for a certificate
--   using absolute time (<tt>ABSOLUTE</tt> or <tt>END_DATE</tt>) is one
--   second.
[$sel:type':Validity'] :: Validity -> ValidityPeriodType

-- | Create a value of <a>Validity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Validity'</a>, <a>validity_value</a> - A long integer
--   interpreted according to the value of <tt>Type</tt>, below.
--   
--   <a>$sel:type':Validity'</a>, <a>validity_type</a> - Determines how
--   <i>ACM Private CA</i> interprets the <tt>Value</tt> parameter, an
--   integer. Supported validity types include those listed below. Type
--   definitions with values include a sample input value and the resulting
--   output.
--   
--   <tt>END_DATE</tt>: The specific date and time when the certificate
--   will expire, expressed using UTCTime (YYMMDDHHMMSS) or GeneralizedTime
--   (YYYYMMDDHHMMSS) format. When UTCTime is used, if the year field (YY)
--   is greater than or equal to 50, the year is interpreted as 19YY. If
--   the year field is less than 50, the year is interpreted as 20YY.
--   
--   <ul>
--   <li>Sample input value: 491231235959 (UTCTime format)</li>
--   <li>Output expiration date/time: 12/31/2049 23:59:59</li>
--   </ul>
--   
--   <tt>ABSOLUTE</tt>: The specific date and time when the validity of a
--   certificate will start or expire, expressed in seconds since the Unix
--   Epoch.
--   
--   <ul>
--   <li>Sample input value: 2524608000</li>
--   <li>Output expiration date/time: 01/01/2050 00:00:00</li>
--   </ul>
--   
--   <tt>DAYS</tt>, <tt>MONTHS</tt>, <tt>YEARS</tt>: The relative time from
--   the moment of issuance until the certificate will expire, expressed in
--   days, months, or years.
--   
--   Example if <tt>DAYS</tt>, issued on 10/12/2020 at 12:34:54 UTC:
--   
--   <ul>
--   <li>Sample input value: 90</li>
--   <li>Output expiration date: 01/10/2020 12:34:54 UTC</li>
--   </ul>
--   
--   The minimum validity duration for a certificate using relative time
--   (<tt>DAYS</tt>) is one day. The minimum validity for a certificate
--   using absolute time (<tt>ABSOLUTE</tt> or <tt>END_DATE</tt>) is one
--   second.
newValidity :: Natural -> ValidityPeriodType -> Validity

-- | A long integer interpreted according to the value of <tt>Type</tt>,
--   below.
validity_value :: Lens' Validity Natural

-- | Determines how <i>ACM Private CA</i> interprets the <tt>Value</tt>
--   parameter, an integer. Supported validity types include those listed
--   below. Type definitions with values include a sample input value and
--   the resulting output.
--   
--   <tt>END_DATE</tt>: The specific date and time when the certificate
--   will expire, expressed using UTCTime (YYMMDDHHMMSS) or GeneralizedTime
--   (YYYYMMDDHHMMSS) format. When UTCTime is used, if the year field (YY)
--   is greater than or equal to 50, the year is interpreted as 19YY. If
--   the year field is less than 50, the year is interpreted as 20YY.
--   
--   <ul>
--   <li>Sample input value: 491231235959 (UTCTime format)</li>
--   <li>Output expiration date/time: 12/31/2049 23:59:59</li>
--   </ul>
--   
--   <tt>ABSOLUTE</tt>: The specific date and time when the validity of a
--   certificate will start or expire, expressed in seconds since the Unix
--   Epoch.
--   
--   <ul>
--   <li>Sample input value: 2524608000</li>
--   <li>Output expiration date/time: 01/01/2050 00:00:00</li>
--   </ul>
--   
--   <tt>DAYS</tt>, <tt>MONTHS</tt>, <tt>YEARS</tt>: The relative time from
--   the moment of issuance until the certificate will expire, expressed in
--   days, months, or years.
--   
--   Example if <tt>DAYS</tt>, issued on 10/12/2020 at 12:34:54 UTC:
--   
--   <ul>
--   <li>Sample input value: 90</li>
--   <li>Output expiration date: 01/10/2020 12:34:54 UTC</li>
--   </ul>
--   
--   The minimum validity duration for a certificate using relative time
--   (<tt>DAYS</tt>) is one day. The minimum validity for a certificate
--   using absolute time (<tt>ABSOLUTE</tt> or <tt>END_DATE</tt>) is one
--   second.
validity_type :: Lens' Validity ValidityPeriodType


-- | Adds one or more tags to your private CA. Tags are labels that you can
--   use to identify and organize your AWS resources. Each tag consists of
--   a key and an optional value. You specify the private CA on input by
--   its Amazon Resource Name (ARN). You specify the tag by using a
--   key-value pair. You can apply a tag to just one private CA if you want
--   to identify a specific characteristic of that CA, or you can apply the
--   same tag to multiple private CAs if you want to filter for a common
--   relationship among those CAs. To remove one or more tags, use the
--   <a>UntagCertificateAuthority</a> action. Call the <a>ListTags</a>
--   action to see what tags are associated with your CA.
module Network.AWS.CertificateManagerPCA.TagCertificateAuthority

-- | <i>See:</i> <a>newTagCertificateAuthority</a> smart constructor.
data TagCertificateAuthority
TagCertificateAuthority' :: Text -> NonEmpty Tag -> TagCertificateAuthority

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:TagCertificateAuthority'] :: TagCertificateAuthority -> Text

-- | List of tags to be associated with the CA.
[$sel:tags:TagCertificateAuthority'] :: TagCertificateAuthority -> NonEmpty Tag

-- | Create a value of <a>TagCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:TagCertificateAuthority'</a>,
--   <a>tagCertificateAuthority_certificateAuthorityArn</a> - The Amazon
--   Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:tags:TagCertificateAuthority'</a>,
--   <a>tagCertificateAuthority_tags</a> - List of tags to be associated
--   with the CA.
newTagCertificateAuthority :: Text -> NonEmpty Tag -> TagCertificateAuthority

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
tagCertificateAuthority_certificateAuthorityArn :: Lens' TagCertificateAuthority Text

-- | List of tags to be associated with the CA.
tagCertificateAuthority_tags :: Lens' TagCertificateAuthority (NonEmpty Tag)

-- | <i>See:</i> <a>newTagCertificateAuthorityResponse</a> smart
--   constructor.
data TagCertificateAuthorityResponse
TagCertificateAuthorityResponse' :: TagCertificateAuthorityResponse

-- | Create a value of <a>TagCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagCertificateAuthorityResponse :: TagCertificateAuthorityResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.TagCertificateAuthority.TagCertificateAuthority


-- | Revokes a certificate that was issued inside ACM Private CA. If you
--   enable a certificate revocation list (CRL) when you create or update
--   your private CA, information about the revoked certificates will be
--   included in the CRL. ACM Private CA writes the CRL to an S3 bucket
--   that you specify. A CRL is typically updated approximately 30 minutes
--   after a certificate is revoked. If for any reason the CRL update
--   fails, ACM Private CA attempts makes further attempts every 15
--   minutes. With Amazon CloudWatch, you can create alarms for the metrics
--   <tt>CRLGenerated</tt> and <tt>MisconfiguredCRLBucket</tt>. For more
--   information, see <a>Supported CloudWatch Metrics</a>.
--   
--   Both PCA and the IAM principal must have permission to write to the S3
--   bucket that you specify. If the IAM principal making the call does not
--   have permission to write to the bucket, then an exception is thrown.
--   For more information, see <a>Configure Access to ACM Private CA</a>.
--   
--   ACM Private CA also writes revocation information to the audit report.
--   For more information, see
--   <a>CreateCertificateAuthorityAuditReport</a>.
--   
--   You cannot revoke a root CA self-signed certificate.
module Network.AWS.CertificateManagerPCA.RevokeCertificate

-- | <i>See:</i> <a>newRevokeCertificate</a> smart constructor.
data RevokeCertificate
RevokeCertificate' :: Text -> Text -> RevocationReason -> RevokeCertificate

-- | Amazon Resource Name (ARN) of the private CA that issued the
--   certificate to be revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:RevokeCertificate'] :: RevokeCertificate -> Text

-- | Serial number of the certificate to be revoked. This must be in
--   hexadecimal format. You can retrieve the serial number by calling
--   <a>GetCertificate</a> with the Amazon Resource Name (ARN) of the
--   certificate you want and the ARN of your private CA. The
--   <b>GetCertificate</b> action retrieves the certificate in the PEM
--   format. You can use the following OpenSSL command to list the
--   certificate in text format and copy the hexadecimal serial number.
--   
--   <pre>
--   openssl x509 -in file_path -text -noout
--   </pre>
--   
--   You can also copy the serial number from the console or use the
--   <a>DescribeCertificate</a> action in the <i>AWS Certificate Manager
--   API Reference</i>.
[$sel:certificateSerial:RevokeCertificate'] :: RevokeCertificate -> Text

-- | Specifies why you revoked the certificate.
[$sel:revocationReason:RevokeCertificate'] :: RevokeCertificate -> RevocationReason

-- | Create a value of <a>RevokeCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:RevokeCertificate'</a>,
--   <a>revokeCertificate_certificateAuthorityArn</a> - Amazon Resource
--   Name (ARN) of the private CA that issued the certificate to be
--   revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:certificateSerial:RevokeCertificate'</a>,
--   <a>revokeCertificate_certificateSerial</a> - Serial number of the
--   certificate to be revoked. This must be in hexadecimal format. You can
--   retrieve the serial number by calling <a>GetCertificate</a> with the
--   Amazon Resource Name (ARN) of the certificate you want and the ARN of
--   your private CA. The <b>GetCertificate</b> action retrieves the
--   certificate in the PEM format. You can use the following OpenSSL
--   command to list the certificate in text format and copy the
--   hexadecimal serial number.
--   
--   <pre>
--   openssl x509 -in file_path -text -noout
--   </pre>
--   
--   You can also copy the serial number from the console or use the
--   <a>DescribeCertificate</a> action in the <i>AWS Certificate Manager
--   API Reference</i>.
--   
--   <a>$sel:revocationReason:RevokeCertificate'</a>,
--   <a>revokeCertificate_revocationReason</a> - Specifies why you revoked
--   the certificate.
newRevokeCertificate :: Text -> Text -> RevocationReason -> RevokeCertificate

-- | Amazon Resource Name (ARN) of the private CA that issued the
--   certificate to be revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
revokeCertificate_certificateAuthorityArn :: Lens' RevokeCertificate Text

-- | Serial number of the certificate to be revoked. This must be in
--   hexadecimal format. You can retrieve the serial number by calling
--   <a>GetCertificate</a> with the Amazon Resource Name (ARN) of the
--   certificate you want and the ARN of your private CA. The
--   <b>GetCertificate</b> action retrieves the certificate in the PEM
--   format. You can use the following OpenSSL command to list the
--   certificate in text format and copy the hexadecimal serial number.
--   
--   <pre>
--   openssl x509 -in file_path -text -noout
--   </pre>
--   
--   You can also copy the serial number from the console or use the
--   <a>DescribeCertificate</a> action in the <i>AWS Certificate Manager
--   API Reference</i>.
revokeCertificate_certificateSerial :: Lens' RevokeCertificate Text

-- | Specifies why you revoked the certificate.
revokeCertificate_revocationReason :: Lens' RevokeCertificate RevocationReason

-- | <i>See:</i> <a>newRevokeCertificateResponse</a> smart constructor.
data RevokeCertificateResponse
RevokeCertificateResponse' :: RevokeCertificateResponse

-- | Create a value of <a>RevokeCertificateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRevokeCertificateResponse :: RevokeCertificateResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificateResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificateResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificateResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificateResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.RevokeCertificate.RevokeCertificate


-- | Restores a certificate authority (CA) that is in the <tt>DELETED</tt>
--   state. You can restore a CA during the period that you defined in the
--   <b>PermanentDeletionTimeInDays</b> parameter of the
--   <a>DeleteCertificateAuthority</a> action. Currently, you can specify 7
--   to 30 days. If you did not specify a
--   <b>PermanentDeletionTimeInDays</b> value, by default you can restore
--   the CA at any time in a 30 day period. You can check the time
--   remaining in the restoration period of a private CA in the
--   <tt>DELETED</tt> state by calling the
--   <a>DescribeCertificateAuthority</a> or
--   <a>ListCertificateAuthorities</a> actions. The status of a restored CA
--   is set to its pre-deletion status when the
--   <b>RestoreCertificateAuthority</b> action returns. To change its
--   status to <tt>ACTIVE</tt>, call the <a>UpdateCertificateAuthority</a>
--   action. If the private CA was in the <tt>PENDING_CERTIFICATE</tt>
--   state at deletion, you must use the
--   <a>ImportCertificateAuthorityCertificate</a> action to import a
--   certificate authority into the private CA before it can be activated.
--   You cannot restore a CA after the restoration period has ended.
module Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority

-- | <i>See:</i> <a>newRestoreCertificateAuthority</a> smart constructor.
data RestoreCertificateAuthority
RestoreCertificateAuthority' :: Text -> RestoreCertificateAuthority

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:RestoreCertificateAuthority'] :: RestoreCertificateAuthority -> Text

-- | Create a value of <a>RestoreCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:RestoreCertificateAuthority'</a>,
--   <a>restoreCertificateAuthority_certificateAuthorityArn</a> - The
--   Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
newRestoreCertificateAuthority :: Text -> RestoreCertificateAuthority

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
restoreCertificateAuthority_certificateAuthorityArn :: Lens' RestoreCertificateAuthority Text

-- | <i>See:</i> <a>newRestoreCertificateAuthorityResponse</a> smart
--   constructor.
data RestoreCertificateAuthorityResponse
RestoreCertificateAuthorityResponse' :: RestoreCertificateAuthorityResponse

-- | Create a value of <a>RestoreCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRestoreCertificateAuthorityResponse :: RestoreCertificateAuthorityResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.RestoreCertificateAuthority.RestoreCertificateAuthority


-- | Attaches a resource-based policy to a private CA.
--   
--   A policy can also be applied by sharing a private CA through AWS
--   Resource Access Manager (RAM). For more information, see <a>Attach a
--   Policy for Cross-Account Access</a>.
--   
--   The policy can be displayed with <a>GetPolicy</a> and removed with
--   <a>DeletePolicy</a>.
--   
--   <b>About Policies</b>
--   
--   <ul>
--   <li>A policy grants access on a private CA to an AWS customer account,
--   to AWS Organizations, or to an AWS Organizations unit. Policies are
--   under the control of a CA administrator. For more information, see
--   <a>Using a Resource Based Policy with ACM Private CA</a>.</li>
--   <li>A policy permits a user of AWS Certificate Manager (ACM) to issue
--   ACM certificates signed by a CA in another account.</li>
--   <li>For ACM to manage automatic renewal of these certificates, the ACM
--   user must configure a Service Linked Role (SLR). The SLR allows the
--   ACM service to assume the identity of the user, subject to
--   confirmation against the ACM Private CA policy. For more information,
--   see <a>Using a Service Linked Role with ACM</a>.</li>
--   <li>Updates made in AWS Resource Manager (RAM) are reflected in
--   policies. For more information, see <a>Attach a Policy for
--   Cross-Account Access</a>.</li>
--   </ul>
module Network.AWS.CertificateManagerPCA.PutPolicy

-- | <i>See:</i> <a>newPutPolicy</a> smart constructor.
data PutPolicy
PutPolicy' :: Text -> Text -> PutPolicy

-- | The Amazon Resource Number (ARN) of the private CA to associate with
--   the policy. The ARN of the CA can be found by calling the
--   <a>ListCertificateAuthorities</a> action.
[$sel:resourceArn:PutPolicy'] :: PutPolicy -> Text

-- | The path and file name of a JSON-formatted IAM policy to attach to the
--   specified private CA resource. If this policy does not contain all
--   required statements or if it includes any statement that is not
--   allowed, the <tt>PutPolicy</tt> action returns an
--   <tt>InvalidPolicyException</tt>. For information about IAM policy and
--   statement structure, see <a>Overview of JSON Policies</a>.
[$sel:policy:PutPolicy'] :: PutPolicy -> Text

-- | Create a value of <a>PutPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:PutPolicy'</a>, <a>putPolicy_resourceArn</a> - The
--   Amazon Resource Number (ARN) of the private CA to associate with the
--   policy. The ARN of the CA can be found by calling the
--   <a>ListCertificateAuthorities</a> action.
--   
--   <a>$sel:policy:PutPolicy'</a>, <a>putPolicy_policy</a> - The path and
--   file name of a JSON-formatted IAM policy to attach to the specified
--   private CA resource. If this policy does not contain all required
--   statements or if it includes any statement that is not allowed, the
--   <tt>PutPolicy</tt> action returns an <tt>InvalidPolicyException</tt>.
--   For information about IAM policy and statement structure, see
--   <a>Overview of JSON Policies</a>.
newPutPolicy :: Text -> Text -> PutPolicy

-- | The Amazon Resource Number (ARN) of the private CA to associate with
--   the policy. The ARN of the CA can be found by calling the
--   <a>ListCertificateAuthorities</a> action.
putPolicy_resourceArn :: Lens' PutPolicy Text

-- | The path and file name of a JSON-formatted IAM policy to attach to the
--   specified private CA resource. If this policy does not contain all
--   required statements or if it includes any statement that is not
--   allowed, the <tt>PutPolicy</tt> action returns an
--   <tt>InvalidPolicyException</tt>. For information about IAM policy and
--   statement structure, see <a>Overview of JSON Policies</a>.
putPolicy_policy :: Lens' PutPolicy Text

-- | <i>See:</i> <a>newPutPolicyResponse</a> smart constructor.
data PutPolicyResponse
PutPolicyResponse' :: PutPolicyResponse

-- | Create a value of <a>PutPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutPolicyResponse :: PutPolicyResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicyResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicyResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicyResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.PutPolicy.PutPolicy


-- | Lists the tags, if any, that are associated with your private CA or
--   one that has been shared with you. Tags are labels that you can use to
--   identify and organize your CAs. Each tag consists of a key and an
--   optional value. Call the <a>TagCertificateAuthority</a> action to add
--   one or more tags to your CA. Call the <a>UntagCertificateAuthority</a>
--   action to remove tags.
--   
--   This operation returns paginated results.
module Network.AWS.CertificateManagerPCA.ListTags

-- | <i>See:</i> <a>newListTags</a> smart constructor.
data ListTags
ListTags' :: Maybe Text -> Maybe Natural -> Text -> ListTags

-- | Use this parameter when paginating results in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of <b>NextToken</b> from the response you just received.
[$sel:nextToken:ListTags'] :: ListTags -> Maybe Text

-- | Use this parameter when paginating results to specify the maximum
--   number of items to return in the response. If additional items exist
--   beyond the number you specify, the <b>NextToken</b> element is sent in
--   the response. Use this <b>NextToken</b> value in a subsequent request
--   to retrieve additional items.
[$sel:maxResults:ListTags'] :: ListTags -> Maybe Natural

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:ListTags'] :: ListTags -> Text

-- | Create a value of <a>ListTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTags'</a>, <a>listTags_nextToken</a> - Use this
--   parameter when paginating results in a subsequent request after you
--   receive a response with truncated results. Set it to the value of
--   <b>NextToken</b> from the response you just received.
--   
--   <a>$sel:maxResults:ListTags'</a>, <a>listTags_maxResults</a> - Use
--   this parameter when paginating results to specify the maximum number
--   of items to return in the response. If additional items exist beyond
--   the number you specify, the <b>NextToken</b> element is sent in the
--   response. Use this <b>NextToken</b> value in a subsequent request to
--   retrieve additional items.
--   
--   <a>$sel:certificateAuthorityArn:ListTags'</a>,
--   <a>listTags_certificateAuthorityArn</a> - The Amazon Resource Name
--   (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
newListTags :: Text -> ListTags

-- | Use this parameter when paginating results in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of <b>NextToken</b> from the response you just received.
listTags_nextToken :: Lens' ListTags (Maybe Text)

-- | Use this parameter when paginating results to specify the maximum
--   number of items to return in the response. If additional items exist
--   beyond the number you specify, the <b>NextToken</b> element is sent in
--   the response. Use this <b>NextToken</b> value in a subsequent request
--   to retrieve additional items.
listTags_maxResults :: Lens' ListTags (Maybe Natural)

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
listTags_certificateAuthorityArn :: Lens' ListTags Text

-- | <i>See:</i> <a>newListTagsResponse</a> smart constructor.
data ListTagsResponse
ListTagsResponse' :: Maybe Text -> Maybe (NonEmpty Tag) -> Int -> ListTagsResponse

-- | When the list is truncated, this value is present and should be used
--   for the <b>NextToken</b> parameter in a subsequent pagination request.
[$sel:nextToken:ListTagsResponse'] :: ListTagsResponse -> Maybe Text

-- | The tags associated with your private CA.
[$sel:tags:ListTagsResponse'] :: ListTagsResponse -> Maybe (NonEmpty Tag)

-- | The response's http status code.
[$sel:httpStatus:ListTagsResponse'] :: ListTagsResponse -> Int

-- | Create a value of <a>ListTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTags'</a>, <a>listTagsResponse_nextToken</a> -
--   When the list is truncated, this value is present and should be used
--   for the <b>NextToken</b> parameter in a subsequent pagination request.
--   
--   <a>$sel:tags:ListTagsResponse'</a>, <a>listTagsResponse_tags</a> - The
--   tags associated with your private CA.
--   
--   <a>$sel:httpStatus:ListTagsResponse'</a>,
--   <a>listTagsResponse_httpStatus</a> - The response's http status code.
newListTagsResponse :: Int -> ListTagsResponse

-- | When the list is truncated, this value is present and should be used
--   for the <b>NextToken</b> parameter in a subsequent pagination request.
listTagsResponse_nextToken :: Lens' ListTagsResponse (Maybe Text)

-- | The tags associated with your private CA.
listTagsResponse_tags :: Lens' ListTagsResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsResponse_httpStatus :: Lens' ListTagsResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.ListTags.ListTagsResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.ListTags.ListTagsResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.ListTags.ListTagsResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.ListTags.ListTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.ListTags.ListTagsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.ListTags.ListTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.ListTags.ListTags


-- | List all permissions on a private CA, if any, granted to the AWS
--   Certificate Manager (ACM) service principal (acm.amazonaws.com).
--   
--   These permissions allow ACM to issue and renew ACM certificates that
--   reside in the same AWS account as the CA.
--   
--   Permissions can be granted with the <a>CreatePermission</a> action and
--   revoked with the <a>DeletePermission</a> action.
--   
--   <b>About Permissions</b>
--   
--   <ul>
--   <li>If the private CA and the certificates it issues reside in the
--   same account, you can use <tt>CreatePermission</tt> to grant
--   permissions for ACM to carry out automatic certificate renewals.</li>
--   <li>For automatic certificate renewal to succeed, the ACM service
--   principal needs permissions to create, retrieve, and list
--   certificates.</li>
--   <li>If the private CA and the ACM certificates reside in different
--   accounts, then permissions cannot be used to enable automatic
--   renewals. Instead, the ACM certificate owner must set up a
--   resource-based policy to enable cross-account issuance and renewals.
--   For more information, see <a>Using a Resource Based Policy with ACM
--   Private CA</a>.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.CertificateManagerPCA.ListPermissions

-- | <i>See:</i> <a>newListPermissions</a> smart constructor.
data ListPermissions
ListPermissions' :: Maybe Text -> Maybe Natural -> Text -> ListPermissions

-- | When paginating results, use this parameter in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of <b>NextToken</b> from the response you just received.
[$sel:nextToken:ListPermissions'] :: ListPermissions -> Maybe Text

-- | When paginating results, use this parameter to specify the maximum
--   number of items to return in the response. If additional items exist
--   beyond the number you specify, the <b>NextToken</b> element is sent in
--   the response. Use this <b>NextToken</b> value in a subsequent request
--   to retrieve additional items.
[$sel:maxResults:ListPermissions'] :: ListPermissions -> Maybe Natural

-- | The Amazon Resource Number (ARN) of the private CA to inspect. You can
--   find the ARN by calling the <a>ListCertificateAuthorities</a> action.
--   This must be of the form:
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</tt>
--   You can get a private CA's ARN by running the
--   <a>ListCertificateAuthorities</a> action.
[$sel:certificateAuthorityArn:ListPermissions'] :: ListPermissions -> Text

-- | Create a value of <a>ListPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPermissions'</a>,
--   <a>listPermissions_nextToken</a> - When paginating results, use this
--   parameter in a subsequent request after you receive a response with
--   truncated results. Set it to the value of <b>NextToken</b> from the
--   response you just received.
--   
--   <a>$sel:maxResults:ListPermissions'</a>,
--   <a>listPermissions_maxResults</a> - When paginating results, use this
--   parameter to specify the maximum number of items to return in the
--   response. If additional items exist beyond the number you specify, the
--   <b>NextToken</b> element is sent in the response. Use this
--   <b>NextToken</b> value in a subsequent request to retrieve additional
--   items.
--   
--   <a>$sel:certificateAuthorityArn:ListPermissions'</a>,
--   <a>listPermissions_certificateAuthorityArn</a> - The Amazon Resource
--   Number (ARN) of the private CA to inspect. You can find the ARN by
--   calling the <a>ListCertificateAuthorities</a> action. This must be of
--   the form:
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</tt>
--   You can get a private CA's ARN by running the
--   <a>ListCertificateAuthorities</a> action.
newListPermissions :: Text -> ListPermissions

-- | When paginating results, use this parameter in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of <b>NextToken</b> from the response you just received.
listPermissions_nextToken :: Lens' ListPermissions (Maybe Text)

-- | When paginating results, use this parameter to specify the maximum
--   number of items to return in the response. If additional items exist
--   beyond the number you specify, the <b>NextToken</b> element is sent in
--   the response. Use this <b>NextToken</b> value in a subsequent request
--   to retrieve additional items.
listPermissions_maxResults :: Lens' ListPermissions (Maybe Natural)

-- | The Amazon Resource Number (ARN) of the private CA to inspect. You can
--   find the ARN by calling the <a>ListCertificateAuthorities</a> action.
--   This must be of the form:
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</tt>
--   You can get a private CA's ARN by running the
--   <a>ListCertificateAuthorities</a> action.
listPermissions_certificateAuthorityArn :: Lens' ListPermissions Text

-- | <i>See:</i> <a>newListPermissionsResponse</a> smart constructor.
data ListPermissionsResponse
ListPermissionsResponse' :: Maybe Text -> Maybe [Permission] -> Int -> ListPermissionsResponse

-- | When the list is truncated, this value is present and should be used
--   for the <b>NextToken</b> parameter in a subsequent pagination request.
[$sel:nextToken:ListPermissionsResponse'] :: ListPermissionsResponse -> Maybe Text

-- | Summary information about each permission assigned by the specified
--   private CA, including the action enabled, the policy provided, and the
--   time of creation.
[$sel:permissions:ListPermissionsResponse'] :: ListPermissionsResponse -> Maybe [Permission]

-- | The response's http status code.
[$sel:httpStatus:ListPermissionsResponse'] :: ListPermissionsResponse -> Int

-- | Create a value of <a>ListPermissionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPermissions'</a>,
--   <a>listPermissionsResponse_nextToken</a> - When the list is truncated,
--   this value is present and should be used for the <b>NextToken</b>
--   parameter in a subsequent pagination request.
--   
--   <a>$sel:permissions:ListPermissionsResponse'</a>,
--   <a>listPermissionsResponse_permissions</a> - Summary information about
--   each permission assigned by the specified private CA, including the
--   action enabled, the policy provided, and the time of creation.
--   
--   <a>$sel:httpStatus:ListPermissionsResponse'</a>,
--   <a>listPermissionsResponse_httpStatus</a> - The response's http status
--   code.
newListPermissionsResponse :: Int -> ListPermissionsResponse

-- | When the list is truncated, this value is present and should be used
--   for the <b>NextToken</b> parameter in a subsequent pagination request.
listPermissionsResponse_nextToken :: Lens' ListPermissionsResponse (Maybe Text)

-- | Summary information about each permission assigned by the specified
--   private CA, including the action enabled, the policy provided, and the
--   time of creation.
listPermissionsResponse_permissions :: Lens' ListPermissionsResponse (Maybe [Permission])

-- | The response's http status code.
listPermissionsResponse_httpStatus :: Lens' ListPermissionsResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissionsResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissionsResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissionsResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.ListPermissions.ListPermissions


-- | Lists the private certificate authorities that you created by using
--   the <a>CreateCertificateAuthority</a> action.
--   
--   This operation returns paginated results.
module Network.AWS.CertificateManagerPCA.ListCertificateAuthorities

-- | <i>See:</i> <a>newListCertificateAuthorities</a> smart constructor.
data ListCertificateAuthorities
ListCertificateAuthorities' :: Maybe Text -> Maybe Natural -> Maybe ResourceOwner -> ListCertificateAuthorities

-- | Use this parameter when paginating results in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of the <tt>NextToken</tt> parameter from the response you just
--   received.
[$sel:nextToken:ListCertificateAuthorities'] :: ListCertificateAuthorities -> Maybe Text

-- | Use this parameter when paginating results to specify the maximum
--   number of items to return in the response on each page. If additional
--   items exist beyond the number you specify, the <tt>NextToken</tt>
--   element is sent in the response. Use this <tt>NextToken</tt> value in
--   a subsequent request to retrieve additional items.
[$sel:maxResults:ListCertificateAuthorities'] :: ListCertificateAuthorities -> Maybe Natural

-- | Use this parameter to filter the returned set of certificate
--   authorities based on their owner. The default is SELF.
[$sel:resourceOwner:ListCertificateAuthorities'] :: ListCertificateAuthorities -> Maybe ResourceOwner

-- | Create a value of <a>ListCertificateAuthorities</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCertificateAuthorities'</a>,
--   <a>listCertificateAuthorities_nextToken</a> - Use this parameter when
--   paginating results in a subsequent request after you receive a
--   response with truncated results. Set it to the value of the
--   <tt>NextToken</tt> parameter from the response you just received.
--   
--   <a>$sel:maxResults:ListCertificateAuthorities'</a>,
--   <a>listCertificateAuthorities_maxResults</a> - Use this parameter when
--   paginating results to specify the maximum number of items to return in
--   the response on each page. If additional items exist beyond the number
--   you specify, the <tt>NextToken</tt> element is sent in the response.
--   Use this <tt>NextToken</tt> value in a subsequent request to retrieve
--   additional items.
--   
--   <a>$sel:resourceOwner:ListCertificateAuthorities'</a>,
--   <a>listCertificateAuthorities_resourceOwner</a> - Use this parameter
--   to filter the returned set of certificate authorities based on their
--   owner. The default is SELF.
newListCertificateAuthorities :: ListCertificateAuthorities

-- | Use this parameter when paginating results in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of the <tt>NextToken</tt> parameter from the response you just
--   received.
listCertificateAuthorities_nextToken :: Lens' ListCertificateAuthorities (Maybe Text)

-- | Use this parameter when paginating results to specify the maximum
--   number of items to return in the response on each page. If additional
--   items exist beyond the number you specify, the <tt>NextToken</tt>
--   element is sent in the response. Use this <tt>NextToken</tt> value in
--   a subsequent request to retrieve additional items.
listCertificateAuthorities_maxResults :: Lens' ListCertificateAuthorities (Maybe Natural)

-- | Use this parameter to filter the returned set of certificate
--   authorities based on their owner. The default is SELF.
listCertificateAuthorities_resourceOwner :: Lens' ListCertificateAuthorities (Maybe ResourceOwner)

-- | <i>See:</i> <a>newListCertificateAuthoritiesResponse</a> smart
--   constructor.
data ListCertificateAuthoritiesResponse
ListCertificateAuthoritiesResponse' :: Maybe Text -> Maybe [CertificateAuthority] -> Int -> ListCertificateAuthoritiesResponse

-- | When the list is truncated, this value is present and should be used
--   for the <tt>NextToken</tt> parameter in a subsequent pagination
--   request.
[$sel:nextToken:ListCertificateAuthoritiesResponse'] :: ListCertificateAuthoritiesResponse -> Maybe Text

-- | Summary information about each certificate authority you have created.
[$sel:certificateAuthorities:ListCertificateAuthoritiesResponse'] :: ListCertificateAuthoritiesResponse -> Maybe [CertificateAuthority]

-- | The response's http status code.
[$sel:httpStatus:ListCertificateAuthoritiesResponse'] :: ListCertificateAuthoritiesResponse -> Int

-- | Create a value of <a>ListCertificateAuthoritiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCertificateAuthorities'</a>,
--   <a>listCertificateAuthoritiesResponse_nextToken</a> - When the list is
--   truncated, this value is present and should be used for the
--   <tt>NextToken</tt> parameter in a subsequent pagination request.
--   
--   
--   <a>$sel:certificateAuthorities:ListCertificateAuthoritiesResponse'</a>,
--   <a>listCertificateAuthoritiesResponse_certificateAuthorities</a> -
--   Summary information about each certificate authority you have created.
--   
--   <a>$sel:httpStatus:ListCertificateAuthoritiesResponse'</a>,
--   <a>listCertificateAuthoritiesResponse_httpStatus</a> - The response's
--   http status code.
newListCertificateAuthoritiesResponse :: Int -> ListCertificateAuthoritiesResponse

-- | When the list is truncated, this value is present and should be used
--   for the <tt>NextToken</tt> parameter in a subsequent pagination
--   request.
listCertificateAuthoritiesResponse_nextToken :: Lens' ListCertificateAuthoritiesResponse (Maybe Text)

-- | Summary information about each certificate authority you have created.
listCertificateAuthoritiesResponse_certificateAuthorities :: Lens' ListCertificateAuthoritiesResponse (Maybe [CertificateAuthority])

-- | The response's http status code.
listCertificateAuthoritiesResponse_httpStatus :: Lens' ListCertificateAuthoritiesResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthoritiesResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthoritiesResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthoritiesResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthoritiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthoritiesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.ListCertificateAuthorities.ListCertificateAuthorities


-- | Uses your private certificate authority (CA), or one that has been
--   shared with you, to issue a client certificate. This action returns
--   the Amazon Resource Name (ARN) of the certificate. You can retrieve
--   the certificate by calling the <a>GetCertificate</a> action and
--   specifying the ARN.
--   
--   You cannot use the ACM <b>ListCertificateAuthorities</b> action to
--   retrieve the ARNs of the certificates that you issue by using ACM
--   Private CA.
module Network.AWS.CertificateManagerPCA.IssueCertificate

-- | <i>See:</i> <a>newIssueCertificate</a> smart constructor.
data IssueCertificate
IssueCertificate' :: Maybe Text -> Maybe Validity -> Maybe Text -> Maybe ApiPassthrough -> Text -> Base64 -> SigningAlgorithm -> Validity -> IssueCertificate

-- | Alphanumeric string that can be used to distinguish between calls to
--   the <b>IssueCertificate</b> action. Idempotency tokens for
--   <b>IssueCertificate</b> time out after one minute. Therefore, if you
--   call <b>IssueCertificate</b> multiple times with the same idempotency
--   token within one minute, ACM Private CA recognizes that you are
--   requesting only one certificate and will issue only one. If you change
--   the idempotency token for each call, PCA recognizes that you are
--   requesting multiple certificates.
[$sel:idempotencyToken:IssueCertificate'] :: IssueCertificate -> Maybe Text

-- | Information describing the start of the validity period of the
--   certificate. This parameter sets the “Not Before" date for the
--   certificate.
--   
--   By default, when issuing a certificate, ACM Private CA sets the "Not
--   Before" date to the issuance time minus 60 minutes. This compensates
--   for clock inconsistencies across computer systems. The
--   <tt>ValidityNotBefore</tt> parameter can be used to customize the “Not
--   Before” value.
--   
--   Unlike the <tt>Validity</tt> parameter, the <tt>ValidityNotBefore</tt>
--   parameter is optional.
--   
--   The <tt>ValidityNotBefore</tt> value is expressed as an explicit date
--   and time, using the <tt>Validity</tt> type value <tt>ABSOLUTE</tt>.
--   For more information, see <a>Validity</a> in this API reference and
--   <a>Validity</a> in RFC 5280.
[$sel:validityNotBefore:IssueCertificate'] :: IssueCertificate -> Maybe Validity

-- | Specifies a custom configuration template to use when issuing a
--   certificate. If this parameter is not provided, ACM Private CA
--   defaults to the <tt>EndEntityCertificate/V1</tt> template. For CA
--   certificates, you should choose the shortest path length that meets
--   your needs. The path length is indicated by the PathLen<i>N</i>
--   portion of the ARN, where <i>N</i> is the <a>CA depth</a>.
--   
--   Note: The CA depth configured on a subordinate CA certificate must not
--   exceed the limit set by its parents in the CA hierarchy.
--   
--   For a list of <tt>TemplateArn</tt> values supported by ACM Private CA,
--   see <a>Understanding Certificate Templates</a>.
[$sel:templateArn:IssueCertificate'] :: IssueCertificate -> Maybe Text

-- | Specifies X.509 certificate information to be included in the issued
--   certificate. An <tt>APIPassthrough</tt> or <tt>APICSRPassthrough</tt>
--   template variant must be selected, or else this parameter is ignored.
--   For more information about using these templates, see <a>Understanding
--   Certificate Templates</a>.
--   
--   If conflicting or duplicate certificate information is supplied during
--   certificate issuance, ACM Private CA applies <a>order of operation
--   rules</a> to determine what information is used.
[$sel:apiPassthrough:IssueCertificate'] :: IssueCertificate -> Maybe ApiPassthrough

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:IssueCertificate'] :: IssueCertificate -> Text

-- | The certificate signing request (CSR) for the certificate you want to
--   issue. As an example, you can use the following OpenSSL command to
--   create the CSR and a 2048 bit RSA private key.
--   
--   <pre>
--   openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   If you have a configuration file, you can then use the following
--   OpenSSL command. The <tt>usr_cert</tt> block in the configuration file
--   contains your X509 version 3 extensions.
--   
--   <pre>
--   openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   Note: A CSR must provide either a <i>subject name</i> or a /subject
--   alternative name/ or the request will be rejected.
[$sel:csr:IssueCertificate'] :: IssueCertificate -> Base64

-- | The name of the algorithm that will be used to sign the certificate to
--   be issued.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign a CSR in the
--   <tt>CreateCertificateAuthority</tt> action.
[$sel:signingAlgorithm:IssueCertificate'] :: IssueCertificate -> SigningAlgorithm

-- | Information describing the end of the validity period of the
--   certificate. This parameter sets the “Not After” date for the
--   certificate.
--   
--   Certificate validity is the period of time during which a certificate
--   is valid. Validity can be expressed as an explicit date and time when
--   the certificate expires, or as a span of time after issuance, stated
--   in days, months, or years. For more information, see <a>Validity</a>
--   in RFC 5280.
--   
--   This value is unaffected when <tt>ValidityNotBefore</tt> is also
--   specified. For example, if <tt>Validity</tt> is set to 20 days in the
--   future, the certificate will expire 20 days from issuance time
--   regardless of the <tt>ValidityNotBefore</tt> value.
--   
--   The end of the validity period configured on a certificate must not
--   exceed the limit set on its parents in the CA hierarchy.
[$sel:validity:IssueCertificate'] :: IssueCertificate -> Validity

-- | Create a value of <a>IssueCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idempotencyToken:IssueCertificate'</a>,
--   <a>issueCertificate_idempotencyToken</a> - Alphanumeric string that
--   can be used to distinguish between calls to the
--   <b>IssueCertificate</b> action. Idempotency tokens for
--   <b>IssueCertificate</b> time out after one minute. Therefore, if you
--   call <b>IssueCertificate</b> multiple times with the same idempotency
--   token within one minute, ACM Private CA recognizes that you are
--   requesting only one certificate and will issue only one. If you change
--   the idempotency token for each call, PCA recognizes that you are
--   requesting multiple certificates.
--   
--   <a>$sel:validityNotBefore:IssueCertificate'</a>,
--   <a>issueCertificate_validityNotBefore</a> - Information describing the
--   start of the validity period of the certificate. This parameter sets
--   the “Not Before" date for the certificate.
--   
--   By default, when issuing a certificate, ACM Private CA sets the "Not
--   Before" date to the issuance time minus 60 minutes. This compensates
--   for clock inconsistencies across computer systems. The
--   <tt>ValidityNotBefore</tt> parameter can be used to customize the “Not
--   Before” value.
--   
--   Unlike the <tt>Validity</tt> parameter, the <tt>ValidityNotBefore</tt>
--   parameter is optional.
--   
--   The <tt>ValidityNotBefore</tt> value is expressed as an explicit date
--   and time, using the <tt>Validity</tt> type value <tt>ABSOLUTE</tt>.
--   For more information, see <a>Validity</a> in this API reference and
--   <a>Validity</a> in RFC 5280.
--   
--   <a>$sel:templateArn:IssueCertificate'</a>,
--   <a>issueCertificate_templateArn</a> - Specifies a custom configuration
--   template to use when issuing a certificate. If this parameter is not
--   provided, ACM Private CA defaults to the
--   <tt>EndEntityCertificate/V1</tt> template. For CA certificates, you
--   should choose the shortest path length that meets your needs. The path
--   length is indicated by the PathLen<i>N</i> portion of the ARN, where
--   <i>N</i> is the <a>CA depth</a>.
--   
--   Note: The CA depth configured on a subordinate CA certificate must not
--   exceed the limit set by its parents in the CA hierarchy.
--   
--   For a list of <tt>TemplateArn</tt> values supported by ACM Private CA,
--   see <a>Understanding Certificate Templates</a>.
--   
--   <a>$sel:apiPassthrough:IssueCertificate'</a>,
--   <a>issueCertificate_apiPassthrough</a> - Specifies X.509 certificate
--   information to be included in the issued certificate. An
--   <tt>APIPassthrough</tt> or <tt>APICSRPassthrough</tt> template variant
--   must be selected, or else this parameter is ignored. For more
--   information about using these templates, see <a>Understanding
--   Certificate Templates</a>.
--   
--   If conflicting or duplicate certificate information is supplied during
--   certificate issuance, ACM Private CA applies <a>order of operation
--   rules</a> to determine what information is used.
--   
--   <a>$sel:certificateAuthorityArn:IssueCertificate'</a>,
--   <a>issueCertificate_certificateAuthorityArn</a> - The Amazon Resource
--   Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:csr:IssueCertificate'</a>, <a>issueCertificate_csr</a> - The
--   certificate signing request (CSR) for the certificate you want to
--   issue. As an example, you can use the following OpenSSL command to
--   create the CSR and a 2048 bit RSA private key.
--   
--   <pre>
--   openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   If you have a configuration file, you can then use the following
--   OpenSSL command. The <tt>usr_cert</tt> block in the configuration file
--   contains your X509 version 3 extensions.
--   
--   <pre>
--   openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   Note: A CSR must provide either a <i>subject name</i> or a /subject
--   alternative name/ or the request will be rejected.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:signingAlgorithm:IssueCertificate'</a>,
--   <a>issueCertificate_signingAlgorithm</a> - The name of the algorithm
--   that will be used to sign the certificate to be issued.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign a CSR in the
--   <tt>CreateCertificateAuthority</tt> action.
--   
--   <a>$sel:validity:IssueCertificate'</a>,
--   <a>issueCertificate_validity</a> - Information describing the end of
--   the validity period of the certificate. This parameter sets the “Not
--   After” date for the certificate.
--   
--   Certificate validity is the period of time during which a certificate
--   is valid. Validity can be expressed as an explicit date and time when
--   the certificate expires, or as a span of time after issuance, stated
--   in days, months, or years. For more information, see <a>Validity</a>
--   in RFC 5280.
--   
--   This value is unaffected when <tt>ValidityNotBefore</tt> is also
--   specified. For example, if <tt>Validity</tt> is set to 20 days in the
--   future, the certificate will expire 20 days from issuance time
--   regardless of the <tt>ValidityNotBefore</tt> value.
--   
--   The end of the validity period configured on a certificate must not
--   exceed the limit set on its parents in the CA hierarchy.
newIssueCertificate :: Text -> ByteString -> SigningAlgorithm -> Validity -> IssueCertificate

-- | Alphanumeric string that can be used to distinguish between calls to
--   the <b>IssueCertificate</b> action. Idempotency tokens for
--   <b>IssueCertificate</b> time out after one minute. Therefore, if you
--   call <b>IssueCertificate</b> multiple times with the same idempotency
--   token within one minute, ACM Private CA recognizes that you are
--   requesting only one certificate and will issue only one. If you change
--   the idempotency token for each call, PCA recognizes that you are
--   requesting multiple certificates.
issueCertificate_idempotencyToken :: Lens' IssueCertificate (Maybe Text)

-- | Information describing the start of the validity period of the
--   certificate. This parameter sets the “Not Before" date for the
--   certificate.
--   
--   By default, when issuing a certificate, ACM Private CA sets the "Not
--   Before" date to the issuance time minus 60 minutes. This compensates
--   for clock inconsistencies across computer systems. The
--   <tt>ValidityNotBefore</tt> parameter can be used to customize the “Not
--   Before” value.
--   
--   Unlike the <tt>Validity</tt> parameter, the <tt>ValidityNotBefore</tt>
--   parameter is optional.
--   
--   The <tt>ValidityNotBefore</tt> value is expressed as an explicit date
--   and time, using the <tt>Validity</tt> type value <tt>ABSOLUTE</tt>.
--   For more information, see <a>Validity</a> in this API reference and
--   <a>Validity</a> in RFC 5280.
issueCertificate_validityNotBefore :: Lens' IssueCertificate (Maybe Validity)

-- | Specifies a custom configuration template to use when issuing a
--   certificate. If this parameter is not provided, ACM Private CA
--   defaults to the <tt>EndEntityCertificate/V1</tt> template. For CA
--   certificates, you should choose the shortest path length that meets
--   your needs. The path length is indicated by the PathLen<i>N</i>
--   portion of the ARN, where <i>N</i> is the <a>CA depth</a>.
--   
--   Note: The CA depth configured on a subordinate CA certificate must not
--   exceed the limit set by its parents in the CA hierarchy.
--   
--   For a list of <tt>TemplateArn</tt> values supported by ACM Private CA,
--   see <a>Understanding Certificate Templates</a>.
issueCertificate_templateArn :: Lens' IssueCertificate (Maybe Text)

-- | Specifies X.509 certificate information to be included in the issued
--   certificate. An <tt>APIPassthrough</tt> or <tt>APICSRPassthrough</tt>
--   template variant must be selected, or else this parameter is ignored.
--   For more information about using these templates, see <a>Understanding
--   Certificate Templates</a>.
--   
--   If conflicting or duplicate certificate information is supplied during
--   certificate issuance, ACM Private CA applies <a>order of operation
--   rules</a> to determine what information is used.
issueCertificate_apiPassthrough :: Lens' IssueCertificate (Maybe ApiPassthrough)

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
issueCertificate_certificateAuthorityArn :: Lens' IssueCertificate Text

-- | The certificate signing request (CSR) for the certificate you want to
--   issue. As an example, you can use the following OpenSSL command to
--   create the CSR and a 2048 bit RSA private key.
--   
--   <pre>
--   openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   If you have a configuration file, you can then use the following
--   OpenSSL command. The <tt>usr_cert</tt> block in the configuration file
--   contains your X509 version 3 extensions.
--   
--   <pre>
--   openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   Note: A CSR must provide either a <i>subject name</i> or a /subject
--   alternative name/ or the request will be rejected.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
issueCertificate_csr :: Lens' IssueCertificate ByteString

-- | The name of the algorithm that will be used to sign the certificate to
--   be issued.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign a CSR in the
--   <tt>CreateCertificateAuthority</tt> action.
issueCertificate_signingAlgorithm :: Lens' IssueCertificate SigningAlgorithm

-- | Information describing the end of the validity period of the
--   certificate. This parameter sets the “Not After” date for the
--   certificate.
--   
--   Certificate validity is the period of time during which a certificate
--   is valid. Validity can be expressed as an explicit date and time when
--   the certificate expires, or as a span of time after issuance, stated
--   in days, months, or years. For more information, see <a>Validity</a>
--   in RFC 5280.
--   
--   This value is unaffected when <tt>ValidityNotBefore</tt> is also
--   specified. For example, if <tt>Validity</tt> is set to 20 days in the
--   future, the certificate will expire 20 days from issuance time
--   regardless of the <tt>ValidityNotBefore</tt> value.
--   
--   The end of the validity period configured on a certificate must not
--   exceed the limit set on its parents in the CA hierarchy.
issueCertificate_validity :: Lens' IssueCertificate Validity

-- | <i>See:</i> <a>newIssueCertificateResponse</a> smart constructor.
data IssueCertificateResponse
IssueCertificateResponse' :: Maybe Text -> Int -> IssueCertificateResponse

-- | The Amazon Resource Name (ARN) of the issued certificate and the
--   certificate serial number. This is of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
[$sel:certificateArn:IssueCertificateResponse'] :: IssueCertificateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:IssueCertificateResponse'] :: IssueCertificateResponse -> Int

-- | Create a value of <a>IssueCertificateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:IssueCertificateResponse'</a>,
--   <a>issueCertificateResponse_certificateArn</a> - The Amazon Resource
--   Name (ARN) of the issued certificate and the certificate serial
--   number. This is of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
--   
--   <a>$sel:httpStatus:IssueCertificateResponse'</a>,
--   <a>issueCertificateResponse_httpStatus</a> - The response's http
--   status code.
newIssueCertificateResponse :: Int -> IssueCertificateResponse

-- | The Amazon Resource Name (ARN) of the issued certificate and the
--   certificate serial number. This is of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
issueCertificateResponse_certificateArn :: Lens' IssueCertificateResponse (Maybe Text)

-- | The response's http status code.
issueCertificateResponse_httpStatus :: Lens' IssueCertificateResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificateResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificateResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificateResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificateResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.IssueCertificate.IssueCertificate


-- | Imports a signed private CA certificate into ACM Private CA. This
--   action is used when you are using a chain of trust whose root is
--   located outside ACM Private CA. Before you can call this action, the
--   following preparations must in place:
--   
--   <ol>
--   <li>In ACM Private CA, call the <a>CreateCertificateAuthority</a>
--   action to create the private CA that you plan to back with the
--   imported certificate.</li>
--   <li>Call the <a>GetCertificateAuthorityCsr</a> action to generate a
--   certificate signing request (CSR).</li>
--   <li>Sign the CSR using a root or intermediate CA hosted by either an
--   on-premises PKI hierarchy or by a commercial CA.</li>
--   <li>Create a certificate chain and copy the signed certificate and the
--   certificate chain to your working directory.</li>
--   </ol>
--   
--   ACM Private CA supports three scenarios for installing a CA
--   certificate:
--   
--   <ul>
--   <li>Installing a certificate for a root CA hosted by ACM Private
--   CA.</li>
--   <li>Installing a subordinate CA certificate whose parent authority is
--   hosted by ACM Private CA.</li>
--   <li>Installing a subordinate CA certificate whose parent authority is
--   externally hosted.</li>
--   </ul>
--   
--   The following additional requirements apply when you import a CA
--   certificate.
--   
--   <ul>
--   <li>Only a self-signed certificate can be imported as a root CA.</li>
--   <li>A self-signed certificate cannot be imported as a subordinate
--   CA.</li>
--   <li>Your certificate chain must not include the private CA certificate
--   that you are importing.</li>
--   <li>Your root CA must be the last certificate in your chain. The
--   subordinate certificate, if any, that your root CA signed must be next
--   to last. The subordinate certificate signed by the preceding
--   subordinate CA must come next, and so on until your chain is
--   built.</li>
--   <li>The chain must be PEM-encoded.</li>
--   <li>The maximum allowed size of a certificate is 32 KB.</li>
--   <li>The maximum allowed size of a certificate chain is 2 MB.</li>
--   </ul>
--   
--   <i>Enforcement of Critical Constraints</i>
--   
--   ACM Private CA allows the following extensions to be marked critical
--   in the imported CA certificate or chain.
--   
--   <ul>
--   <li>Basic constraints (<i>must</i> be marked critical)</li>
--   <li>Subject alternative names</li>
--   <li>Key usage</li>
--   <li>Extended key usage</li>
--   <li>Authority key identifier</li>
--   <li>Subject key identifier</li>
--   <li>Issuer alternative name</li>
--   <li>Subject directory attributes</li>
--   <li>Subject information access</li>
--   <li>Certificate policies</li>
--   <li>Policy mappings</li>
--   <li>Inhibit anyPolicy</li>
--   </ul>
--   
--   ACM Private CA rejects the following extensions when they are marked
--   critical in an imported CA certificate or chain.
--   
--   <ul>
--   <li>Name constraints</li>
--   <li>Policy constraints</li>
--   <li>CRL distribution points</li>
--   <li>Authority information access</li>
--   <li>Freshest CRL</li>
--   <li>Any other extension</li>
--   </ul>
module Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate

-- | <i>See:</i> <a>newImportCertificateAuthorityCertificate</a> smart
--   constructor.
data ImportCertificateAuthorityCertificate
ImportCertificateAuthorityCertificate' :: Maybe Base64 -> Text -> Base64 -> ImportCertificateAuthorityCertificate

-- | A PEM-encoded file that contains all of your certificates, other than
--   the certificate you're importing, chaining up to your root CA. Your
--   ACM Private CA-hosted or on-premises root certificate is the last in
--   the chain, and each certificate in the chain signs the one preceding.
--   
--   This parameter must be supplied when you import a subordinate CA. When
--   you import a root CA, there is no chain.
[$sel:certificateChain:ImportCertificateAuthorityCertificate'] :: ImportCertificateAuthorityCertificate -> Maybe Base64

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:ImportCertificateAuthorityCertificate'] :: ImportCertificateAuthorityCertificate -> Text

-- | The PEM-encoded certificate for a private CA. This may be a
--   self-signed certificate in the case of a root CA, or it may be signed
--   by another CA that you control.
[$sel:certificate:ImportCertificateAuthorityCertificate'] :: ImportCertificateAuthorityCertificate -> Base64

-- | Create a value of <a>ImportCertificateAuthorityCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:ImportCertificateAuthorityCertificate'</a>,
--   <a>importCertificateAuthorityCertificate_certificateChain</a> - A
--   PEM-encoded file that contains all of your certificates, other than
--   the certificate you're importing, chaining up to your root CA. Your
--   ACM Private CA-hosted or on-premises root certificate is the last in
--   the chain, and each certificate in the chain signs the one preceding.
--   
--   This parameter must be supplied when you import a subordinate CA. When
--   you import a root CA, there is no chain.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   
--   <a>$sel:certificateAuthorityArn:ImportCertificateAuthorityCertificate'</a>,
--   <a>importCertificateAuthorityCertificate_certificateAuthorityArn</a> -
--   The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:certificate:ImportCertificateAuthorityCertificate'</a>,
--   <a>importCertificateAuthorityCertificate_certificate</a> - The
--   PEM-encoded certificate for a private CA. This may be a self-signed
--   certificate in the case of a root CA, or it may be signed by another
--   CA that you control.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newImportCertificateAuthorityCertificate :: Text -> ByteString -> ImportCertificateAuthorityCertificate

-- | A PEM-encoded file that contains all of your certificates, other than
--   the certificate you're importing, chaining up to your root CA. Your
--   ACM Private CA-hosted or on-premises root certificate is the last in
--   the chain, and each certificate in the chain signs the one preceding.
--   
--   This parameter must be supplied when you import a subordinate CA. When
--   you import a root CA, there is no chain.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
importCertificateAuthorityCertificate_certificateChain :: Lens' ImportCertificateAuthorityCertificate (Maybe ByteString)

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
importCertificateAuthorityCertificate_certificateAuthorityArn :: Lens' ImportCertificateAuthorityCertificate Text

-- | The PEM-encoded certificate for a private CA. This may be a
--   self-signed certificate in the case of a root CA, or it may be signed
--   by another CA that you control.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
importCertificateAuthorityCertificate_certificate :: Lens' ImportCertificateAuthorityCertificate ByteString

-- | <i>See:</i> <a>newImportCertificateAuthorityCertificateResponse</a>
--   smart constructor.
data ImportCertificateAuthorityCertificateResponse
ImportCertificateAuthorityCertificateResponse' :: ImportCertificateAuthorityCertificateResponse

-- | Create a value of <a>ImportCertificateAuthorityCertificateResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newImportCertificateAuthorityCertificateResponse :: ImportCertificateAuthorityCertificateResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificateResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificateResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificateResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificateResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.ImportCertificateAuthorityCertificate.ImportCertificateAuthorityCertificate


-- | Retrieves the resource-based policy attached to a private CA. If
--   either the private CA resource or the policy cannot be found, this
--   action returns a <tt>ResourceNotFoundException</tt>.
--   
--   The policy can be attached or updated with <a>PutPolicy</a> and
--   removed with <a>DeletePolicy</a>.
--   
--   <b>About Policies</b>
--   
--   <ul>
--   <li>A policy grants access on a private CA to an AWS customer account,
--   to AWS Organizations, or to an AWS Organizations unit. Policies are
--   under the control of a CA administrator. For more information, see
--   <a>Using a Resource Based Policy with ACM Private CA</a>.</li>
--   <li>A policy permits a user of AWS Certificate Manager (ACM) to issue
--   ACM certificates signed by a CA in another account.</li>
--   <li>For ACM to manage automatic renewal of these certificates, the ACM
--   user must configure a Service Linked Role (SLR). The SLR allows the
--   ACM service to assume the identity of the user, subject to
--   confirmation against the ACM Private CA policy. For more information,
--   see <a>Using a Service Linked Role with ACM</a>.</li>
--   <li>Updates made in AWS Resource Manager (RAM) are reflected in
--   policies. For more information, see <a>Attach a Policy for
--   Cross-Account Access</a>.</li>
--   </ul>
module Network.AWS.CertificateManagerPCA.GetPolicy

-- | <i>See:</i> <a>newGetPolicy</a> smart constructor.
data GetPolicy
GetPolicy' :: Text -> GetPolicy

-- | The Amazon Resource Number (ARN) of the private CA that will have its
--   policy retrieved. You can find the CA's ARN by calling the
--   ListCertificateAuthorities action.
[$sel:resourceArn:GetPolicy'] :: GetPolicy -> Text

-- | Create a value of <a>GetPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetPolicy'</a>, <a>getPolicy_resourceArn</a> - The
--   Amazon Resource Number (ARN) of the private CA that will have its
--   policy retrieved. You can find the CA's ARN by calling the
--   ListCertificateAuthorities action.
newGetPolicy :: Text -> GetPolicy

-- | The Amazon Resource Number (ARN) of the private CA that will have its
--   policy retrieved. You can find the CA's ARN by calling the
--   ListCertificateAuthorities action.
getPolicy_resourceArn :: Lens' GetPolicy Text

-- | <i>See:</i> <a>newGetPolicyResponse</a> smart constructor.
data GetPolicyResponse
GetPolicyResponse' :: Maybe Text -> Int -> GetPolicyResponse

-- | The policy attached to the private CA as a JSON document.
[$sel:policy:GetPolicyResponse'] :: GetPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPolicyResponse'] :: GetPolicyResponse -> Int

-- | Create a value of <a>GetPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetPolicyResponse'</a>, <a>getPolicyResponse_policy</a>
--   - The policy attached to the private CA as a JSON document.
--   
--   <a>$sel:httpStatus:GetPolicyResponse'</a>,
--   <a>getPolicyResponse_httpStatus</a> - The response's http status code.
newGetPolicyResponse :: Int -> GetPolicyResponse

-- | The policy attached to the private CA as a JSON document.
getPolicyResponse_policy :: Lens' GetPolicyResponse (Maybe Text)

-- | The response's http status code.
getPolicyResponse_httpStatus :: Lens' GetPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicyResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicyResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicyResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.GetPolicy.GetPolicy


-- | Retrieves the certificate signing request (CSR) for your private
--   certificate authority (CA). The CSR is created when you call the
--   <a>CreateCertificateAuthority</a> action. Sign the CSR with your ACM
--   Private CA-hosted or on-premises root or subordinate CA. Then import
--   the signed certificate back into ACM Private CA by calling the
--   <a>ImportCertificateAuthorityCertificate</a> action. The CSR is
--   returned as a base64 PEM-encoded string.
module Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr

-- | <i>See:</i> <a>newGetCertificateAuthorityCsr</a> smart constructor.
data GetCertificateAuthorityCsr
GetCertificateAuthorityCsr' :: Text -> GetCertificateAuthorityCsr

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:GetCertificateAuthorityCsr'] :: GetCertificateAuthorityCsr -> Text

-- | Create a value of <a>GetCertificateAuthorityCsr</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:GetCertificateAuthorityCsr'</a>,
--   <a>getCertificateAuthorityCsr_certificateAuthorityArn</a> - The Amazon
--   Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
newGetCertificateAuthorityCsr :: Text -> GetCertificateAuthorityCsr

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
getCertificateAuthorityCsr_certificateAuthorityArn :: Lens' GetCertificateAuthorityCsr Text

-- | <i>See:</i> <a>newGetCertificateAuthorityCsrResponse</a> smart
--   constructor.
data GetCertificateAuthorityCsrResponse
GetCertificateAuthorityCsrResponse' :: Maybe Text -> Int -> GetCertificateAuthorityCsrResponse

-- | The base64 PEM-encoded certificate signing request (CSR) for your
--   private CA certificate.
[$sel:csr:GetCertificateAuthorityCsrResponse'] :: GetCertificateAuthorityCsrResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCertificateAuthorityCsrResponse'] :: GetCertificateAuthorityCsrResponse -> Int

-- | Create a value of <a>GetCertificateAuthorityCsrResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:csr:GetCertificateAuthorityCsrResponse'</a>,
--   <a>getCertificateAuthorityCsrResponse_csr</a> - The base64 PEM-encoded
--   certificate signing request (CSR) for your private CA certificate.
--   
--   <a>$sel:httpStatus:GetCertificateAuthorityCsrResponse'</a>,
--   <a>getCertificateAuthorityCsrResponse_httpStatus</a> - The response's
--   http status code.
newGetCertificateAuthorityCsrResponse :: Int -> GetCertificateAuthorityCsrResponse

-- | The base64 PEM-encoded certificate signing request (CSR) for your
--   private CA certificate.
getCertificateAuthorityCsrResponse_csr :: Lens' GetCertificateAuthorityCsrResponse (Maybe Text)

-- | The response's http status code.
getCertificateAuthorityCsrResponse_httpStatus :: Lens' GetCertificateAuthorityCsrResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsrResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsrResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsrResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsrResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsrResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCsr.GetCertificateAuthorityCsr


-- | Retrieves the certificate and certificate chain for your private
--   certificate authority (CA) or one that has been shared with you. Both
--   the certificate and the chain are base64 PEM-encoded. The chain does
--   not include the CA certificate. Each certificate in the chain signs
--   the one before it.
module Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate

-- | <i>See:</i> <a>newGetCertificateAuthorityCertificate</a> smart
--   constructor.
data GetCertificateAuthorityCertificate
GetCertificateAuthorityCertificate' :: Text -> GetCertificateAuthorityCertificate

-- | The Amazon Resource Name (ARN) of your private CA. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:GetCertificateAuthorityCertificate'] :: GetCertificateAuthorityCertificate -> Text

-- | Create a value of <a>GetCertificateAuthorityCertificate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArn:GetCertificateAuthorityCertificate'</a>,
--   <a>getCertificateAuthorityCertificate_certificateAuthorityArn</a> -
--   The Amazon Resource Name (ARN) of your private CA. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
newGetCertificateAuthorityCertificate :: Text -> GetCertificateAuthorityCertificate

-- | The Amazon Resource Name (ARN) of your private CA. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
getCertificateAuthorityCertificate_certificateAuthorityArn :: Lens' GetCertificateAuthorityCertificate Text

-- | <i>See:</i> <a>newGetCertificateAuthorityCertificateResponse</a> smart
--   constructor.
data GetCertificateAuthorityCertificateResponse
GetCertificateAuthorityCertificateResponse' :: Maybe Text -> Maybe Text -> Int -> GetCertificateAuthorityCertificateResponse

-- | Base64-encoded certificate chain that includes any intermediate
--   certificates and chains up to root certificate that you used to sign
--   your private CA certificate. The chain does not include your private
--   CA certificate. If this is a root CA, the value will be null.
[$sel:certificateChain:GetCertificateAuthorityCertificateResponse'] :: GetCertificateAuthorityCertificateResponse -> Maybe Text

-- | Base64-encoded certificate authority (CA) certificate.
[$sel:certificate:GetCertificateAuthorityCertificateResponse'] :: GetCertificateAuthorityCertificateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCertificateAuthorityCertificateResponse'] :: GetCertificateAuthorityCertificateResponse -> Int

-- | Create a value of <a>GetCertificateAuthorityCertificateResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateChain:GetCertificateAuthorityCertificateResponse'</a>,
--   <a>getCertificateAuthorityCertificateResponse_certificateChain</a> -
--   Base64-encoded certificate chain that includes any intermediate
--   certificates and chains up to root certificate that you used to sign
--   your private CA certificate. The chain does not include your private
--   CA certificate. If this is a root CA, the value will be null.
--   
--   <a>$sel:certificate:GetCertificateAuthorityCertificateResponse'</a>,
--   <a>getCertificateAuthorityCertificateResponse_certificate</a> -
--   Base64-encoded certificate authority (CA) certificate.
--   
--   <a>$sel:httpStatus:GetCertificateAuthorityCertificateResponse'</a>,
--   <a>getCertificateAuthorityCertificateResponse_httpStatus</a> - The
--   response's http status code.
newGetCertificateAuthorityCertificateResponse :: Int -> GetCertificateAuthorityCertificateResponse

-- | Base64-encoded certificate chain that includes any intermediate
--   certificates and chains up to root certificate that you used to sign
--   your private CA certificate. The chain does not include your private
--   CA certificate. If this is a root CA, the value will be null.
getCertificateAuthorityCertificateResponse_certificateChain :: Lens' GetCertificateAuthorityCertificateResponse (Maybe Text)

-- | Base64-encoded certificate authority (CA) certificate.
getCertificateAuthorityCertificateResponse_certificate :: Lens' GetCertificateAuthorityCertificateResponse (Maybe Text)

-- | The response's http status code.
getCertificateAuthorityCertificateResponse_httpStatus :: Lens' GetCertificateAuthorityCertificateResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificateResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificateResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificateResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificateResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.GetCertificateAuthorityCertificate.GetCertificateAuthorityCertificate


-- | Retrieves a certificate from your private CA or one that has been
--   shared with you. The ARN of the certificate is returned when you call
--   the <a>IssueCertificate</a> action. You must specify both the ARN of
--   your private CA and the ARN of the issued certificate when calling the
--   <b>GetCertificate</b> action. You can retrieve the certificate if it
--   is in the <b>ISSUED</b> state. You can call the
--   <a>CreateCertificateAuthorityAuditReport</a> action to create a report
--   that contains information about all of the certificates issued and
--   revoked by your private CA.
module Network.AWS.CertificateManagerPCA.GetCertificate

-- | <i>See:</i> <a>newGetCertificate</a> smart constructor.
data GetCertificate
GetCertificate' :: Text -> Text -> GetCertificate

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:GetCertificate'] :: GetCertificate -> Text

-- | The ARN of the issued certificate. The ARN contains the certificate
--   serial number and must be in the following form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
[$sel:certificateArn:GetCertificate'] :: GetCertificate -> Text

-- | Create a value of <a>GetCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:GetCertificate'</a>,
--   <a>getCertificate_certificateAuthorityArn</a> - The Amazon Resource
--   Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:certificateArn:GetCertificate'</a>,
--   <a>getCertificate_certificateArn</a> - The ARN of the issued
--   certificate. The ARN contains the certificate serial number and must
--   be in the following form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
newGetCertificate :: Text -> Text -> GetCertificate

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
getCertificate_certificateAuthorityArn :: Lens' GetCertificate Text

-- | The ARN of the issued certificate. The ARN contains the certificate
--   serial number and must be in the following form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
getCertificate_certificateArn :: Lens' GetCertificate Text

-- | <i>See:</i> <a>newGetCertificateResponse</a> smart constructor.
data GetCertificateResponse
GetCertificateResponse' :: Maybe Text -> Maybe Text -> Int -> GetCertificateResponse

-- | The base64 PEM-encoded certificate chain that chains up to the root CA
--   certificate that you used to sign your private CA certificate.
[$sel:certificateChain:GetCertificateResponse'] :: GetCertificateResponse -> Maybe Text

-- | The base64 PEM-encoded certificate specified by the
--   <tt>CertificateArn</tt> parameter.
[$sel:certificate:GetCertificateResponse'] :: GetCertificateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCertificateResponse'] :: GetCertificateResponse -> Int

-- | Create a value of <a>GetCertificateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:GetCertificateResponse'</a>,
--   <a>getCertificateResponse_certificateChain</a> - The base64
--   PEM-encoded certificate chain that chains up to the root CA
--   certificate that you used to sign your private CA certificate.
--   
--   <a>$sel:certificate:GetCertificateResponse'</a>,
--   <a>getCertificateResponse_certificate</a> - The base64 PEM-encoded
--   certificate specified by the <tt>CertificateArn</tt> parameter.
--   
--   <a>$sel:httpStatus:GetCertificateResponse'</a>,
--   <a>getCertificateResponse_httpStatus</a> - The response's http status
--   code.
newGetCertificateResponse :: Int -> GetCertificateResponse

-- | The base64 PEM-encoded certificate chain that chains up to the root CA
--   certificate that you used to sign your private CA certificate.
getCertificateResponse_certificateChain :: Lens' GetCertificateResponse (Maybe Text)

-- | The base64 PEM-encoded certificate specified by the
--   <tt>CertificateArn</tt> parameter.
getCertificateResponse_certificate :: Lens' GetCertificateResponse (Maybe Text)

-- | The response's http status code.
getCertificateResponse_httpStatus :: Lens' GetCertificateResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificateResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificateResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificateResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificateResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.GetCertificate.GetCertificate


-- | Lists information about a specific audit report created by calling the
--   <a>CreateCertificateAuthorityAuditReport</a> action. Audit information
--   is created every time the certificate authority (CA) private key is
--   used. The private key is used when you call the
--   <a>IssueCertificate</a> action or the <a>RevokeCertificate</a> action.
module Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport

-- | <i>See:</i> <a>newDescribeCertificateAuthorityAuditReport</a> smart
--   constructor.
data DescribeCertificateAuthorityAuditReport
DescribeCertificateAuthorityAuditReport' :: Text -> Text -> DescribeCertificateAuthorityAuditReport

-- | The Amazon Resource Name (ARN) of the private CA. This must be of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:DescribeCertificateAuthorityAuditReport'] :: DescribeCertificateAuthorityAuditReport -> Text

-- | The report ID returned by calling the
--   <a>CreateCertificateAuthorityAuditReport</a> action.
[$sel:auditReportId:DescribeCertificateAuthorityAuditReport'] :: DescribeCertificateAuthorityAuditReport -> Text

-- | Create a value of <a>DescribeCertificateAuthorityAuditReport</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArn:DescribeCertificateAuthorityAuditReport'</a>,
--   <a>describeCertificateAuthorityAuditReport_certificateAuthorityArn</a>
--   - The Amazon Resource Name (ARN) of the private CA. This must be of
--   the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:auditReportId:DescribeCertificateAuthorityAuditReport'</a>,
--   <a>describeCertificateAuthorityAuditReport_auditReportId</a> - The
--   report ID returned by calling the
--   <a>CreateCertificateAuthorityAuditReport</a> action.
newDescribeCertificateAuthorityAuditReport :: Text -> Text -> DescribeCertificateAuthorityAuditReport

-- | The Amazon Resource Name (ARN) of the private CA. This must be of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
describeCertificateAuthorityAuditReport_certificateAuthorityArn :: Lens' DescribeCertificateAuthorityAuditReport Text

-- | The report ID returned by calling the
--   <a>CreateCertificateAuthorityAuditReport</a> action.
describeCertificateAuthorityAuditReport_auditReportId :: Lens' DescribeCertificateAuthorityAuditReport Text

-- | <i>See:</i> <a>newDescribeCertificateAuthorityAuditReportResponse</a>
--   smart constructor.
data DescribeCertificateAuthorityAuditReportResponse
DescribeCertificateAuthorityAuditReportResponse' :: Maybe AuditReportStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> DescribeCertificateAuthorityAuditReportResponse

-- | Specifies whether report creation is in progress, has succeeded, or
--   has failed.
[$sel:auditReportStatus:DescribeCertificateAuthorityAuditReportResponse'] :: DescribeCertificateAuthorityAuditReportResponse -> Maybe AuditReportStatus

-- | The date and time at which the report was created.
[$sel:createdAt:DescribeCertificateAuthorityAuditReportResponse'] :: DescribeCertificateAuthorityAuditReportResponse -> Maybe POSIX

-- | S3 <b>key</b> that uniquely identifies the report file in your S3
--   bucket.
[$sel:s3Key:DescribeCertificateAuthorityAuditReportResponse'] :: DescribeCertificateAuthorityAuditReportResponse -> Maybe Text

-- | Name of the S3 bucket that contains the report.
[$sel:s3BucketName:DescribeCertificateAuthorityAuditReportResponse'] :: DescribeCertificateAuthorityAuditReportResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeCertificateAuthorityAuditReportResponse'] :: DescribeCertificateAuthorityAuditReportResponse -> Int

-- | Create a value of
--   <a>DescribeCertificateAuthorityAuditReportResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:auditReportStatus:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_auditReportStatus</a>
--   - Specifies whether report creation is in progress, has succeeded, or
--   has failed.
--   
--   
--   <a>$sel:createdAt:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_createdAt</a> - The
--   date and time at which the report was created.
--   
--   <a>$sel:s3Key:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_s3Key</a> - S3
--   <b>key</b> that uniquely identifies the report file in your S3 bucket.
--   
--   
--   <a>$sel:s3BucketName:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_s3BucketName</a> -
--   Name of the S3 bucket that contains the report.
--   
--   
--   <a>$sel:httpStatus:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_httpStatus</a> -
--   The response's http status code.
newDescribeCertificateAuthorityAuditReportResponse :: Int -> DescribeCertificateAuthorityAuditReportResponse

-- | Specifies whether report creation is in progress, has succeeded, or
--   has failed.
describeCertificateAuthorityAuditReportResponse_auditReportStatus :: Lens' DescribeCertificateAuthorityAuditReportResponse (Maybe AuditReportStatus)

-- | The date and time at which the report was created.
describeCertificateAuthorityAuditReportResponse_createdAt :: Lens' DescribeCertificateAuthorityAuditReportResponse (Maybe UTCTime)

-- | S3 <b>key</b> that uniquely identifies the report file in your S3
--   bucket.
describeCertificateAuthorityAuditReportResponse_s3Key :: Lens' DescribeCertificateAuthorityAuditReportResponse (Maybe Text)

-- | Name of the S3 bucket that contains the report.
describeCertificateAuthorityAuditReportResponse_s3BucketName :: Lens' DescribeCertificateAuthorityAuditReportResponse (Maybe Text)

-- | The response's http status code.
describeCertificateAuthorityAuditReportResponse_httpStatus :: Lens' DescribeCertificateAuthorityAuditReportResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReportResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReportResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReportResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReportResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReportResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.DescribeCertificateAuthorityAuditReport.DescribeCertificateAuthorityAuditReport


-- | Lists information about your private certificate authority (CA) or one
--   that has been shared with you. You specify the private CA on input by
--   its ARN (Amazon Resource Name). The output contains the status of your
--   CA. This can be any of the following:
--   
--   <ul>
--   <li><tt>CREATING</tt> - ACM Private CA is creating your private
--   certificate authority.</li>
--   <li><tt>PENDING_CERTIFICATE</tt> - The certificate is pending. You
--   must use your ACM Private CA-hosted or on-premises root or subordinate
--   CA to sign your private CA CSR and then import it into PCA.</li>
--   <li><tt>ACTIVE</tt> - Your private CA is active.</li>
--   <li><tt>DISABLED</tt> - Your private CA has been disabled.</li>
--   <li><tt>EXPIRED</tt> - Your private CA certificate has expired.</li>
--   <li><tt>FAILED</tt> - Your private CA has failed. Your CA can fail
--   because of problems such a network outage or back-end AWS failure or
--   other errors. A failed CA can never return to the pending state. You
--   must create a new CA.</li>
--   <li><tt>DELETED</tt> - Your private CA is within the restoration
--   period, after which it is permanently deleted. The length of time
--   remaining in the CA's restoration period is also included in this
--   action's output.</li>
--   </ul>
module Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority

-- | <i>See:</i> <a>newDescribeCertificateAuthority</a> smart constructor.
data DescribeCertificateAuthority
DescribeCertificateAuthority' :: Text -> DescribeCertificateAuthority

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:DescribeCertificateAuthority'] :: DescribeCertificateAuthority -> Text

-- | Create a value of <a>DescribeCertificateAuthority</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:DescribeCertificateAuthority'</a>,
--   <a>describeCertificateAuthority_certificateAuthorityArn</a> - The
--   Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
newDescribeCertificateAuthority :: Text -> DescribeCertificateAuthority

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
describeCertificateAuthority_certificateAuthorityArn :: Lens' DescribeCertificateAuthority Text

-- | <i>See:</i> <a>newDescribeCertificateAuthorityResponse</a> smart
--   constructor.
data DescribeCertificateAuthorityResponse
DescribeCertificateAuthorityResponse' :: Maybe CertificateAuthority -> Int -> DescribeCertificateAuthorityResponse

-- | A <a>CertificateAuthority</a> structure that contains information
--   about your private CA.
[$sel:certificateAuthority:DescribeCertificateAuthorityResponse'] :: DescribeCertificateAuthorityResponse -> Maybe CertificateAuthority

-- | The response's http status code.
[$sel:httpStatus:DescribeCertificateAuthorityResponse'] :: DescribeCertificateAuthorityResponse -> Int

-- | Create a value of <a>DescribeCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthority:DescribeCertificateAuthorityResponse'</a>,
--   <a>describeCertificateAuthorityResponse_certificateAuthority</a> - A
--   <a>CertificateAuthority</a> structure that contains information about
--   your private CA.
--   
--   <a>$sel:httpStatus:DescribeCertificateAuthorityResponse'</a>,
--   <a>describeCertificateAuthorityResponse_httpStatus</a> - The
--   response's http status code.
newDescribeCertificateAuthorityResponse :: Int -> DescribeCertificateAuthorityResponse

-- | A <a>CertificateAuthority</a> structure that contains information
--   about your private CA.
describeCertificateAuthorityResponse_certificateAuthority :: Lens' DescribeCertificateAuthorityResponse (Maybe CertificateAuthority)

-- | The response's http status code.
describeCertificateAuthorityResponse_httpStatus :: Lens' DescribeCertificateAuthorityResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.DescribeCertificateAuthority.DescribeCertificateAuthority


-- | Deletes the resource-based policy attached to a private CA. Deletion
--   will remove any access that the policy has granted. If there is no
--   policy attached to the private CA, this action will return successful.
--   
--   If you delete a policy that was applied through AWS Resource Access
--   Manager (RAM), the CA will be removed from all shares in which it was
--   included.
--   
--   The AWS Certificate Manager Service Linked Role that the policy
--   supports is not affected when you delete the policy.
--   
--   The current policy can be shown with <a>GetPolicy</a> and updated with
--   <a>PutPolicy</a>.
--   
--   <b>About Policies</b>
--   
--   <ul>
--   <li>A policy grants access on a private CA to an AWS customer account,
--   to AWS Organizations, or to an AWS Organizations unit. Policies are
--   under the control of a CA administrator. For more information, see
--   <a>Using a Resource Based Policy with ACM Private CA</a>.</li>
--   <li>A policy permits a user of AWS Certificate Manager (ACM) to issue
--   ACM certificates signed by a CA in another account.</li>
--   <li>For ACM to manage automatic renewal of these certificates, the ACM
--   user must configure a Service Linked Role (SLR). The SLR allows the
--   ACM service to assume the identity of the user, subject to
--   confirmation against the ACM Private CA policy. For more information,
--   see <a>Using a Service Linked Role with ACM</a>.</li>
--   <li>Updates made in AWS Resource Manager (RAM) are reflected in
--   policies. For more information, see <a>Attach a Policy for
--   Cross-Account Access</a>.</li>
--   </ul>
module Network.AWS.CertificateManagerPCA.DeletePolicy

-- | <i>See:</i> <a>newDeletePolicy</a> smart constructor.
data DeletePolicy
DeletePolicy' :: Text -> DeletePolicy

-- | The Amazon Resource Number (ARN) of the private CA that will have its
--   policy deleted. You can find the CA's ARN by calling the
--   <a>ListCertificateAuthorities</a> action. The ARN value must have the
--   form
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/01234567-89ab-cdef-0123-0123456789ab</tt>.
[$sel:resourceArn:DeletePolicy'] :: DeletePolicy -> Text

-- | Create a value of <a>DeletePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:DeletePolicy'</a>, <a>deletePolicy_resourceArn</a>
--   - The Amazon Resource Number (ARN) of the private CA that will have
--   its policy deleted. You can find the CA's ARN by calling the
--   <a>ListCertificateAuthorities</a> action. The ARN value must have the
--   form
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/01234567-89ab-cdef-0123-0123456789ab</tt>.
newDeletePolicy :: Text -> DeletePolicy

-- | The Amazon Resource Number (ARN) of the private CA that will have its
--   policy deleted. You can find the CA's ARN by calling the
--   <a>ListCertificateAuthorities</a> action. The ARN value must have the
--   form
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/01234567-89ab-cdef-0123-0123456789ab</tt>.
deletePolicy_resourceArn :: Lens' DeletePolicy Text

-- | <i>See:</i> <a>newDeletePolicyResponse</a> smart constructor.
data DeletePolicyResponse
DeletePolicyResponse' :: DeletePolicyResponse

-- | Create a value of <a>DeletePolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePolicyResponse :: DeletePolicyResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicyResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicyResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicyResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.DeletePolicy.DeletePolicy


-- | Revokes permissions on a private CA granted to the AWS Certificate
--   Manager (ACM) service principal (acm.amazonaws.com).
--   
--   These permissions allow ACM to issue and renew ACM certificates that
--   reside in the same AWS account as the CA. If you revoke these
--   permissions, ACM will no longer renew the affected certificates
--   automatically.
--   
--   Permissions can be granted with the <a>CreatePermission</a> action and
--   listed with the <a>ListPermissions</a> action.
--   
--   <b>About Permissions</b>
--   
--   <ul>
--   <li>If the private CA and the certificates it issues reside in the
--   same account, you can use <tt>CreatePermission</tt> to grant
--   permissions for ACM to carry out automatic certificate renewals.</li>
--   <li>For automatic certificate renewal to succeed, the ACM service
--   principal needs permissions to create, retrieve, and list
--   certificates.</li>
--   <li>If the private CA and the ACM certificates reside in different
--   accounts, then permissions cannot be used to enable automatic
--   renewals. Instead, the ACM certificate owner must set up a
--   resource-based policy to enable cross-account issuance and renewals.
--   For more information, see <a>Using a Resource Based Policy with ACM
--   Private CA</a>.</li>
--   </ul>
module Network.AWS.CertificateManagerPCA.DeletePermission

-- | <i>See:</i> <a>newDeletePermission</a> smart constructor.
data DeletePermission
DeletePermission' :: Maybe Text -> Text -> Text -> DeletePermission

-- | The AWS account that calls this action.
[$sel:sourceAccount:DeletePermission'] :: DeletePermission -> Maybe Text

-- | The Amazon Resource Number (ARN) of the private CA that issued the
--   permissions. You can find the CA's ARN by calling the
--   <a>ListCertificateAuthorities</a> action. This must have the following
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:DeletePermission'] :: DeletePermission -> Text

-- | The AWS service or identity that will have its CA permissions revoked.
--   At this time, the only valid service principal is
--   <tt>acm.amazonaws.com</tt>
[$sel:principal:DeletePermission'] :: DeletePermission -> Text

-- | Create a value of <a>DeletePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceAccount:DeletePermission'</a>,
--   <a>deletePermission_sourceAccount</a> - The AWS account that calls
--   this action.
--   
--   <a>$sel:certificateAuthorityArn:DeletePermission'</a>,
--   <a>deletePermission_certificateAuthorityArn</a> - The Amazon Resource
--   Number (ARN) of the private CA that issued the permissions. You can
--   find the CA's ARN by calling the <a>ListCertificateAuthorities</a>
--   action. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:principal:DeletePermission'</a>,
--   <a>deletePermission_principal</a> - The AWS service or identity that
--   will have its CA permissions revoked. At this time, the only valid
--   service principal is <tt>acm.amazonaws.com</tt>
newDeletePermission :: Text -> Text -> DeletePermission

-- | The AWS account that calls this action.
deletePermission_sourceAccount :: Lens' DeletePermission (Maybe Text)

-- | The Amazon Resource Number (ARN) of the private CA that issued the
--   permissions. You can find the CA's ARN by calling the
--   <a>ListCertificateAuthorities</a> action. This must have the following
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
deletePermission_certificateAuthorityArn :: Lens' DeletePermission Text

-- | The AWS service or identity that will have its CA permissions revoked.
--   At this time, the only valid service principal is
--   <tt>acm.amazonaws.com</tt>
deletePermission_principal :: Lens' DeletePermission Text

-- | <i>See:</i> <a>newDeletePermissionResponse</a> smart constructor.
data DeletePermissionResponse
DeletePermissionResponse' :: DeletePermissionResponse

-- | Create a value of <a>DeletePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePermissionResponse :: DeletePermissionResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermissionResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermissionResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermissionResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermissionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermissionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.DeletePermission.DeletePermission


-- | Deletes a private certificate authority (CA). You must provide the
--   Amazon Resource Name (ARN) of the private CA that you want to delete.
--   You can find the ARN by calling the <a>ListCertificateAuthorities</a>
--   action.
--   
--   Deleting a CA will invalidate other CAs and certificates below it in
--   your CA hierarchy.
--   
--   Before you can delete a CA that you have created and activated, you
--   must disable it. To do this, call the
--   <a>UpdateCertificateAuthority</a> action and set the
--   <b>CertificateAuthorityStatus</b> parameter to <tt>DISABLED</tt>.
--   
--   Additionally, you can delete a CA if you are waiting for it to be
--   created (that is, the status of the CA is <tt>CREATING</tt>). You can
--   also delete it if the CA has been created but you haven't yet imported
--   the signed certificate into ACM Private CA (that is, the status of the
--   CA is <tt>PENDING_CERTIFICATE</tt>).
--   
--   When you successfully call <a>DeleteCertificateAuthority</a>, the CA's
--   status changes to <tt>DELETED</tt>. However, the CA won't be
--   permanently deleted until the restoration period has passed. By
--   default, if you do not set the <tt>PermanentDeletionTimeInDays</tt>
--   parameter, the CA remains restorable for 30 days. You can set the
--   parameter from 7 to 30 days. The <a>DescribeCertificateAuthority</a>
--   action returns the time remaining in the restoration window of a
--   private CA in the <tt>DELETED</tt> state. To restore an eligible CA,
--   call the <a>RestoreCertificateAuthority</a> action.
module Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority

-- | <i>See:</i> <a>newDeleteCertificateAuthority</a> smart constructor.
data DeleteCertificateAuthority
DeleteCertificateAuthority' :: Maybe Natural -> Text -> DeleteCertificateAuthority

-- | The number of days to make a CA restorable after it has been deleted.
--   This can be anywhere from 7 to 30 days, with 30 being the default.
[$sel:permanentDeletionTimeInDays:DeleteCertificateAuthority'] :: DeleteCertificateAuthority -> Maybe Natural

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:DeleteCertificateAuthority'] :: DeleteCertificateAuthority -> Text

-- | Create a value of <a>DeleteCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permanentDeletionTimeInDays:DeleteCertificateAuthority'</a>,
--   <a>deleteCertificateAuthority_permanentDeletionTimeInDays</a> - The
--   number of days to make a CA restorable after it has been deleted. This
--   can be anywhere from 7 to 30 days, with 30 being the default.
--   
--   <a>$sel:certificateAuthorityArn:DeleteCertificateAuthority'</a>,
--   <a>deleteCertificateAuthority_certificateAuthorityArn</a> - The Amazon
--   Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
newDeleteCertificateAuthority :: Text -> DeleteCertificateAuthority

-- | The number of days to make a CA restorable after it has been deleted.
--   This can be anywhere from 7 to 30 days, with 30 being the default.
deleteCertificateAuthority_permanentDeletionTimeInDays :: Lens' DeleteCertificateAuthority (Maybe Natural)

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
deleteCertificateAuthority_certificateAuthorityArn :: Lens' DeleteCertificateAuthority Text

-- | <i>See:</i> <a>newDeleteCertificateAuthorityResponse</a> smart
--   constructor.
data DeleteCertificateAuthorityResponse
DeleteCertificateAuthorityResponse' :: DeleteCertificateAuthorityResponse

-- | Create a value of <a>DeleteCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCertificateAuthorityResponse :: DeleteCertificateAuthorityResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.DeleteCertificateAuthority.DeleteCertificateAuthority


-- | Grants one or more permissions on a private CA to the AWS Certificate
--   Manager (ACM) service principal (<tt>acm.amazonaws.com</tt>). These
--   permissions allow ACM to issue and renew ACM certificates that reside
--   in the same AWS account as the CA.
--   
--   You can list current permissions with the <a>ListPermissions</a>
--   action and revoke them with the <a>DeletePermission</a> action.
--   
--   <b>About Permissions</b>
--   
--   <ul>
--   <li>If the private CA and the certificates it issues reside in the
--   same account, you can use <tt>CreatePermission</tt> to grant
--   permissions for ACM to carry out automatic certificate renewals.</li>
--   <li>For automatic certificate renewal to succeed, the ACM service
--   principal needs permissions to create, retrieve, and list
--   certificates.</li>
--   <li>If the private CA and the ACM certificates reside in different
--   accounts, then permissions cannot be used to enable automatic
--   renewals. Instead, the ACM certificate owner must set up a
--   resource-based policy to enable cross-account issuance and renewals.
--   For more information, see <a>Using a Resource Based Policy with ACM
--   Private CA</a>.</li>
--   </ul>
module Network.AWS.CertificateManagerPCA.CreatePermission

-- | <i>See:</i> <a>newCreatePermission</a> smart constructor.
data CreatePermission
CreatePermission' :: Maybe Text -> Text -> Text -> NonEmpty ActionType -> CreatePermission

-- | The ID of the calling account.
[$sel:sourceAccount:CreatePermission'] :: CreatePermission -> Maybe Text

-- | The Amazon Resource Name (ARN) of the CA that grants the permissions.
--   You can find the ARN by calling the <a>ListCertificateAuthorities</a>
--   action. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:CreatePermission'] :: CreatePermission -> Text

-- | The AWS service or identity that receives the permission. At this
--   time, the only valid principal is <tt>acm.amazonaws.com</tt>.
[$sel:principal:CreatePermission'] :: CreatePermission -> Text

-- | The actions that the specified AWS service principal can use. These
--   include <tt>IssueCertificate</tt>, <tt>GetCertificate</tt>, and
--   <tt>ListPermissions</tt>.
[$sel:actions:CreatePermission'] :: CreatePermission -> NonEmpty ActionType

-- | Create a value of <a>CreatePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceAccount:CreatePermission'</a>,
--   <a>createPermission_sourceAccount</a> - The ID of the calling account.
--   
--   <a>$sel:certificateAuthorityArn:CreatePermission'</a>,
--   <a>createPermission_certificateAuthorityArn</a> - The Amazon Resource
--   Name (ARN) of the CA that grants the permissions. You can find the ARN
--   by calling the <a>ListCertificateAuthorities</a> action. This must
--   have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:principal:CreatePermission'</a>,
--   <a>createPermission_principal</a> - The AWS service or identity that
--   receives the permission. At this time, the only valid principal is
--   <tt>acm.amazonaws.com</tt>.
--   
--   <a>$sel:actions:CreatePermission'</a>, <a>createPermission_actions</a>
--   - The actions that the specified AWS service principal can use. These
--   include <tt>IssueCertificate</tt>, <tt>GetCertificate</tt>, and
--   <tt>ListPermissions</tt>.
newCreatePermission :: Text -> Text -> NonEmpty ActionType -> CreatePermission

-- | The ID of the calling account.
createPermission_sourceAccount :: Lens' CreatePermission (Maybe Text)

-- | The Amazon Resource Name (ARN) of the CA that grants the permissions.
--   You can find the ARN by calling the <a>ListCertificateAuthorities</a>
--   action. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
createPermission_certificateAuthorityArn :: Lens' CreatePermission Text

-- | The AWS service or identity that receives the permission. At this
--   time, the only valid principal is <tt>acm.amazonaws.com</tt>.
createPermission_principal :: Lens' CreatePermission Text

-- | The actions that the specified AWS service principal can use. These
--   include <tt>IssueCertificate</tt>, <tt>GetCertificate</tt>, and
--   <tt>ListPermissions</tt>.
createPermission_actions :: Lens' CreatePermission (NonEmpty ActionType)

-- | <i>See:</i> <a>newCreatePermissionResponse</a> smart constructor.
data CreatePermissionResponse
CreatePermissionResponse' :: CreatePermissionResponse

-- | Create a value of <a>CreatePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreatePermissionResponse :: CreatePermissionResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermissionResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermissionResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermissionResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermissionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermissionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.CreatePermission.CreatePermission


-- | Creates an audit report that lists every time that your CA private key
--   is used. The report is saved in the Amazon S3 bucket that you specify
--   on input. The <a>IssueCertificate</a> and <a>RevokeCertificate</a>
--   actions use the private key.
--   
--   Both PCA and the IAM principal must have permission to write to the S3
--   bucket that you specify. If the IAM principal making the call does not
--   have permission to write to the bucket, then an exception is thrown.
--   For more information, see <a>Configure Access to ACM Private CA</a>.
--   
--   ACM Private CA assets that are stored in Amazon S3 can be protected
--   with encryption. For more information, see <a>Encrypting Your Audit
--   Reports</a>.
module Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport

-- | <i>See:</i> <a>newCreateCertificateAuthorityAuditReport</a> smart
--   constructor.
data CreateCertificateAuthorityAuditReport
CreateCertificateAuthorityAuditReport' :: Text -> Text -> AuditReportResponseFormat -> CreateCertificateAuthorityAuditReport

-- | The Amazon Resource Name (ARN) of the CA to be audited. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:CreateCertificateAuthorityAuditReport'] :: CreateCertificateAuthorityAuditReport -> Text

-- | The name of the S3 bucket that will contain the audit report.
[$sel:s3BucketName:CreateCertificateAuthorityAuditReport'] :: CreateCertificateAuthorityAuditReport -> Text

-- | The format in which to create the report. This can be either
--   <b>JSON</b> or <b>CSV</b>.
[$sel:auditReportResponseFormat:CreateCertificateAuthorityAuditReport'] :: CreateCertificateAuthorityAuditReport -> AuditReportResponseFormat

-- | Create a value of <a>CreateCertificateAuthorityAuditReport</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArn:CreateCertificateAuthorityAuditReport'</a>,
--   <a>createCertificateAuthorityAuditReport_certificateAuthorityArn</a> -
--   The Amazon Resource Name (ARN) of the CA to be audited. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:s3BucketName:CreateCertificateAuthorityAuditReport'</a>,
--   <a>createCertificateAuthorityAuditReport_s3BucketName</a> - The name
--   of the S3 bucket that will contain the audit report.
--   
--   
--   <a>$sel:auditReportResponseFormat:CreateCertificateAuthorityAuditReport'</a>,
--   <a>createCertificateAuthorityAuditReport_auditReportResponseFormat</a>
--   - The format in which to create the report. This can be either
--   <b>JSON</b> or <b>CSV</b>.
newCreateCertificateAuthorityAuditReport :: Text -> Text -> AuditReportResponseFormat -> CreateCertificateAuthorityAuditReport

-- | The Amazon Resource Name (ARN) of the CA to be audited. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
createCertificateAuthorityAuditReport_certificateAuthorityArn :: Lens' CreateCertificateAuthorityAuditReport Text

-- | The name of the S3 bucket that will contain the audit report.
createCertificateAuthorityAuditReport_s3BucketName :: Lens' CreateCertificateAuthorityAuditReport Text

-- | The format in which to create the report. This can be either
--   <b>JSON</b> or <b>CSV</b>.
createCertificateAuthorityAuditReport_auditReportResponseFormat :: Lens' CreateCertificateAuthorityAuditReport AuditReportResponseFormat

-- | <i>See:</i> <a>newCreateCertificateAuthorityAuditReportResponse</a>
--   smart constructor.
data CreateCertificateAuthorityAuditReportResponse
CreateCertificateAuthorityAuditReportResponse' :: Maybe Text -> Maybe Text -> Int -> CreateCertificateAuthorityAuditReportResponse

-- | The <b>key</b> that uniquely identifies the report file in your S3
--   bucket.
[$sel:s3Key:CreateCertificateAuthorityAuditReportResponse'] :: CreateCertificateAuthorityAuditReportResponse -> Maybe Text

-- | An alphanumeric string that contains a report identifier.
[$sel:auditReportId:CreateCertificateAuthorityAuditReportResponse'] :: CreateCertificateAuthorityAuditReportResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateCertificateAuthorityAuditReportResponse'] :: CreateCertificateAuthorityAuditReportResponse -> Int

-- | Create a value of <a>CreateCertificateAuthorityAuditReportResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Key:CreateCertificateAuthorityAuditReportResponse'</a>,
--   <a>createCertificateAuthorityAuditReportResponse_s3Key</a> - The
--   <b>key</b> that uniquely identifies the report file in your S3 bucket.
--   
--   
--   <a>$sel:auditReportId:CreateCertificateAuthorityAuditReportResponse'</a>,
--   <a>createCertificateAuthorityAuditReportResponse_auditReportId</a> -
--   An alphanumeric string that contains a report identifier.
--   
--   <a>$sel:httpStatus:CreateCertificateAuthorityAuditReportResponse'</a>,
--   <a>createCertificateAuthorityAuditReportResponse_httpStatus</a> - The
--   response's http status code.
newCreateCertificateAuthorityAuditReportResponse :: Int -> CreateCertificateAuthorityAuditReportResponse

-- | The <b>key</b> that uniquely identifies the report file in your S3
--   bucket.
createCertificateAuthorityAuditReportResponse_s3Key :: Lens' CreateCertificateAuthorityAuditReportResponse (Maybe Text)

-- | An alphanumeric string that contains a report identifier.
createCertificateAuthorityAuditReportResponse_auditReportId :: Lens' CreateCertificateAuthorityAuditReportResponse (Maybe Text)

-- | The response's http status code.
createCertificateAuthorityAuditReportResponse_httpStatus :: Lens' CreateCertificateAuthorityAuditReportResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReportResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReportResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReportResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReportResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReportResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.CreateCertificateAuthorityAuditReport.CreateCertificateAuthorityAuditReport


-- | Creates a root or subordinate private certificate authority (CA). You
--   must specify the CA configuration, an optional configuration for
--   Online Certificate Status Protocol (OCSP) and/or a certificate
--   revocation list (CRL), the CA type, and an optional idempotency token
--   to avoid accidental creation of multiple CAs. The CA configuration
--   specifies the name of the algorithm and key size to be used to create
--   the CA private key, the type of signing algorithm that the CA uses,
--   and X.500 subject information. The OCSP configuration can optionally
--   specify a custom URL for the OCSP responder. The CRL configuration
--   specifies the CRL expiration period in days (the validity period of
--   the CRL), the Amazon S3 bucket that will contain the CRL, and a CNAME
--   alias for the S3 bucket that is included in certificates issued by the
--   CA. If successful, this action returns the Amazon Resource Name (ARN)
--   of the CA.
--   
--   ACM Private CA assets that are stored in Amazon S3 can be protected
--   with encryption. For more information, see <a>Encrypting Your
--   CRLs</a>.
--   
--   Both PCA and the IAM principal must have permission to write to the S3
--   bucket that you specify. If the IAM principal making the call does not
--   have permission to write to the bucket, then an exception is thrown.
--   For more information, see <a>Configure Access to ACM Private CA</a>.
module Network.AWS.CertificateManagerPCA.CreateCertificateAuthority

-- | <i>See:</i> <a>newCreateCertificateAuthority</a> smart constructor.
data CreateCertificateAuthority
CreateCertificateAuthority' :: Maybe Text -> Maybe KeyStorageSecurityStandard -> Maybe RevocationConfiguration -> Maybe (NonEmpty Tag) -> CertificateAuthorityConfiguration -> CertificateAuthorityType -> CreateCertificateAuthority

-- | Custom string that can be used to distinguish between calls to the
--   <b>CreateCertificateAuthority</b> action. Idempotency tokens for
--   <b>CreateCertificateAuthority</b> time out after five minutes.
--   Therefore, if you call <b>CreateCertificateAuthority</b> multiple
--   times with the same idempotency token within five minutes, ACM Private
--   CA recognizes that you are requesting only certificate authority and
--   will issue only one. If you change the idempotency token for each
--   call, PCA recognizes that you are requesting multiple certificate
--   authorities.
[$sel:idempotencyToken:CreateCertificateAuthority'] :: CreateCertificateAuthority -> Maybe Text

-- | Specifies a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: <tt>FIPS_140_2_LEVEL_3_OR_HIGHER</tt> is not supported in Region
--   ap-northeast-3. When creating a CA in the ap-northeast-3, you must
--   provide <tt>FIPS_140_2_LEVEL_2_OR_HIGHER</tt> as the argument for
--   <tt>KeyStorageSecurityStandard</tt>. Failure to do this results in an
--   <tt>InvalidArgsException</tt> with the message, "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
[$sel:keyStorageSecurityStandard:CreateCertificateAuthority'] :: CreateCertificateAuthority -> Maybe KeyStorageSecurityStandard

-- | Contains information to enable Online Certificate Status Protocol
--   (OCSP) support, to enable a certificate revocation list (CRL), to
--   enable both, or to enable neither. The default is for both certificate
--   validation mechanisms to be disabled. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
[$sel:revocationConfiguration:CreateCertificateAuthority'] :: CreateCertificateAuthority -> Maybe RevocationConfiguration

-- | Key-value pairs that will be attached to the new private CA. You can
--   associate up to 50 tags with a private CA. For information using tags
--   with IAM to manage permissions, see <a>Controlling Access Using IAM
--   Tags</a>.
[$sel:tags:CreateCertificateAuthority'] :: CreateCertificateAuthority -> Maybe (NonEmpty Tag)

-- | Name and bit size of the private key algorithm, the name of the
--   signing algorithm, and X.500 certificate subject information.
[$sel:certificateAuthorityConfiguration:CreateCertificateAuthority'] :: CreateCertificateAuthority -> CertificateAuthorityConfiguration

-- | The type of the certificate authority.
[$sel:certificateAuthorityType:CreateCertificateAuthority'] :: CreateCertificateAuthority -> CertificateAuthorityType

-- | Create a value of <a>CreateCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idempotencyToken:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_idempotencyToken</a> - Custom string
--   that can be used to distinguish between calls to the
--   <b>CreateCertificateAuthority</b> action. Idempotency tokens for
--   <b>CreateCertificateAuthority</b> time out after five minutes.
--   Therefore, if you call <b>CreateCertificateAuthority</b> multiple
--   times with the same idempotency token within five minutes, ACM Private
--   CA recognizes that you are requesting only certificate authority and
--   will issue only one. If you change the idempotency token for each
--   call, PCA recognizes that you are requesting multiple certificate
--   authorities.
--   
--   <a>$sel:keyStorageSecurityStandard:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_keyStorageSecurityStandard</a> -
--   Specifies a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: <tt>FIPS_140_2_LEVEL_3_OR_HIGHER</tt> is not supported in Region
--   ap-northeast-3. When creating a CA in the ap-northeast-3, you must
--   provide <tt>FIPS_140_2_LEVEL_2_OR_HIGHER</tt> as the argument for
--   <tt>KeyStorageSecurityStandard</tt>. Failure to do this results in an
--   <tt>InvalidArgsException</tt> with the message, "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
--   
--   <a>$sel:revocationConfiguration:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_revocationConfiguration</a> - Contains
--   information to enable Online Certificate Status Protocol (OCSP)
--   support, to enable a certificate revocation list (CRL), to enable
--   both, or to enable neither. The default is for both certificate
--   validation mechanisms to be disabled. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
--   
--   <a>$sel:tags:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_tags</a> - Key-value pairs that will be
--   attached to the new private CA. You can associate up to 50 tags with a
--   private CA. For information using tags with IAM to manage permissions,
--   see <a>Controlling Access Using IAM Tags</a>.
--   
--   
--   <a>$sel:certificateAuthorityConfiguration:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_certificateAuthorityConfiguration</a> -
--   Name and bit size of the private key algorithm, the name of the
--   signing algorithm, and X.500 certificate subject information.
--   
--   <a>$sel:certificateAuthorityType:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_certificateAuthorityType</a> - The type
--   of the certificate authority.
newCreateCertificateAuthority :: CertificateAuthorityConfiguration -> CertificateAuthorityType -> CreateCertificateAuthority

-- | Custom string that can be used to distinguish between calls to the
--   <b>CreateCertificateAuthority</b> action. Idempotency tokens for
--   <b>CreateCertificateAuthority</b> time out after five minutes.
--   Therefore, if you call <b>CreateCertificateAuthority</b> multiple
--   times with the same idempotency token within five minutes, ACM Private
--   CA recognizes that you are requesting only certificate authority and
--   will issue only one. If you change the idempotency token for each
--   call, PCA recognizes that you are requesting multiple certificate
--   authorities.
createCertificateAuthority_idempotencyToken :: Lens' CreateCertificateAuthority (Maybe Text)

-- | Specifies a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: <tt>FIPS_140_2_LEVEL_3_OR_HIGHER</tt> is not supported in Region
--   ap-northeast-3. When creating a CA in the ap-northeast-3, you must
--   provide <tt>FIPS_140_2_LEVEL_2_OR_HIGHER</tt> as the argument for
--   <tt>KeyStorageSecurityStandard</tt>. Failure to do this results in an
--   <tt>InvalidArgsException</tt> with the message, "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
createCertificateAuthority_keyStorageSecurityStandard :: Lens' CreateCertificateAuthority (Maybe KeyStorageSecurityStandard)

-- | Contains information to enable Online Certificate Status Protocol
--   (OCSP) support, to enable a certificate revocation list (CRL), to
--   enable both, or to enable neither. The default is for both certificate
--   validation mechanisms to be disabled. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
createCertificateAuthority_revocationConfiguration :: Lens' CreateCertificateAuthority (Maybe RevocationConfiguration)

-- | Key-value pairs that will be attached to the new private CA. You can
--   associate up to 50 tags with a private CA. For information using tags
--   with IAM to manage permissions, see <a>Controlling Access Using IAM
--   Tags</a>.
createCertificateAuthority_tags :: Lens' CreateCertificateAuthority (Maybe (NonEmpty Tag))

-- | Name and bit size of the private key algorithm, the name of the
--   signing algorithm, and X.500 certificate subject information.
createCertificateAuthority_certificateAuthorityConfiguration :: Lens' CreateCertificateAuthority CertificateAuthorityConfiguration

-- | The type of the certificate authority.
createCertificateAuthority_certificateAuthorityType :: Lens' CreateCertificateAuthority CertificateAuthorityType

-- | <i>See:</i> <a>newCreateCertificateAuthorityResponse</a> smart
--   constructor.
data CreateCertificateAuthorityResponse
CreateCertificateAuthorityResponse' :: Maybe Text -> Int -> CreateCertificateAuthorityResponse

-- | If successful, the Amazon Resource Name (ARN) of the certificate
--   authority (CA). This is of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
[$sel:certificateAuthorityArn:CreateCertificateAuthorityResponse'] :: CreateCertificateAuthorityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateCertificateAuthorityResponse'] :: CreateCertificateAuthorityResponse -> Int

-- | Create a value of <a>CreateCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArn:CreateCertificateAuthorityResponse'</a>,
--   <a>createCertificateAuthorityResponse_certificateAuthorityArn</a> - If
--   successful, the Amazon Resource Name (ARN) of the certificate
--   authority (CA). This is of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:httpStatus:CreateCertificateAuthorityResponse'</a>,
--   <a>createCertificateAuthorityResponse_httpStatus</a> - The response's
--   http status code.
newCreateCertificateAuthorityResponse :: Int -> CreateCertificateAuthorityResponse

-- | If successful, the Amazon Resource Name (ARN) of the certificate
--   authority (CA). This is of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
createCertificateAuthorityResponse_certificateAuthorityArn :: Lens' CreateCertificateAuthorityResponse (Maybe Text)

-- | The response's http status code.
createCertificateAuthorityResponse_httpStatus :: Lens' CreateCertificateAuthorityResponse Int
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.CreateCertificateAuthority.CreateCertificateAuthority


-- | Remove one or more tags from your private CA. A tag consists of a
--   key-value pair. If you do not specify the value portion of the tag
--   when calling this action, the tag will be removed regardless of value.
--   If you specify a value, the tag is removed only if it is associated
--   with the specified value. To add tags to a private CA, use the
--   <a>TagCertificateAuthority</a>. Call the <a>ListTags</a> action to see
--   what tags are associated with your CA.
module Network.AWS.CertificateManagerPCA.UntagCertificateAuthority

-- | <i>See:</i> <a>newUntagCertificateAuthority</a> smart constructor.
data UntagCertificateAuthority
UntagCertificateAuthority' :: Text -> NonEmpty Tag -> UntagCertificateAuthority

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:UntagCertificateAuthority'] :: UntagCertificateAuthority -> Text

-- | List of tags to be removed from the CA.
[$sel:tags:UntagCertificateAuthority'] :: UntagCertificateAuthority -> NonEmpty Tag

-- | Create a value of <a>UntagCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:UntagCertificateAuthority'</a>,
--   <a>untagCertificateAuthority_certificateAuthorityArn</a> - The Amazon
--   Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:tags:UntagCertificateAuthority'</a>,
--   <a>untagCertificateAuthority_tags</a> - List of tags to be removed
--   from the CA.
newUntagCertificateAuthority :: Text -> NonEmpty Tag -> UntagCertificateAuthority

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
untagCertificateAuthority_certificateAuthorityArn :: Lens' UntagCertificateAuthority Text

-- | List of tags to be removed from the CA.
untagCertificateAuthority_tags :: Lens' UntagCertificateAuthority (NonEmpty Tag)

-- | <i>See:</i> <a>newUntagCertificateAuthorityResponse</a> smart
--   constructor.
data UntagCertificateAuthorityResponse
UntagCertificateAuthorityResponse' :: UntagCertificateAuthorityResponse

-- | Create a value of <a>UntagCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagCertificateAuthorityResponse :: UntagCertificateAuthorityResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.UntagCertificateAuthority.UntagCertificateAuthority


-- | Updates the status or configuration of a private certificate authority
--   (CA). Your private CA must be in the <tt>ACTIVE</tt> or
--   <tt>DISABLED</tt> state before you can update it. You can disable a
--   private CA that is in the <tt>ACTIVE</tt> state or make a CA that is
--   in the <tt>DISABLED</tt> state active again.
--   
--   Both PCA and the IAM principal must have permission to write to the S3
--   bucket that you specify. If the IAM principal making the call does not
--   have permission to write to the bucket, then an exception is thrown.
--   For more information, see <a>Configure Access to ACM Private CA</a>.
module Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority

-- | <i>See:</i> <a>newUpdateCertificateAuthority</a> smart constructor.
data UpdateCertificateAuthority
UpdateCertificateAuthority' :: Maybe CertificateAuthorityStatus -> Maybe RevocationConfiguration -> Text -> UpdateCertificateAuthority

-- | Status of your private CA.
[$sel:status:UpdateCertificateAuthority'] :: UpdateCertificateAuthority -> Maybe CertificateAuthorityStatus

-- | Contains information to enable Online Certificate Status Protocol
--   (OCSP) support, to enable a certificate revocation list (CRL), to
--   enable both, or to enable neither. If this parameter is not supplied,
--   existing capibilites remain unchanged. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
[$sel:revocationConfiguration:UpdateCertificateAuthority'] :: UpdateCertificateAuthority -> Maybe RevocationConfiguration

-- | Amazon Resource Name (ARN) of the private CA that issued the
--   certificate to be revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
[$sel:certificateAuthorityArn:UpdateCertificateAuthority'] :: UpdateCertificateAuthority -> Text

-- | Create a value of <a>UpdateCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateCertificateAuthority'</a>,
--   <a>updateCertificateAuthority_status</a> - Status of your private CA.
--   
--   <a>$sel:revocationConfiguration:UpdateCertificateAuthority'</a>,
--   <a>updateCertificateAuthority_revocationConfiguration</a> - Contains
--   information to enable Online Certificate Status Protocol (OCSP)
--   support, to enable a certificate revocation list (CRL), to enable
--   both, or to enable neither. If this parameter is not supplied,
--   existing capibilites remain unchanged. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
--   
--   <a>$sel:certificateAuthorityArn:UpdateCertificateAuthority'</a>,
--   <a>updateCertificateAuthority_certificateAuthorityArn</a> - Amazon
--   Resource Name (ARN) of the private CA that issued the certificate to
--   be revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
newUpdateCertificateAuthority :: Text -> UpdateCertificateAuthority

-- | Status of your private CA.
updateCertificateAuthority_status :: Lens' UpdateCertificateAuthority (Maybe CertificateAuthorityStatus)

-- | Contains information to enable Online Certificate Status Protocol
--   (OCSP) support, to enable a certificate revocation list (CRL), to
--   enable both, or to enable neither. If this parameter is not supplied,
--   existing capibilites remain unchanged. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
updateCertificateAuthority_revocationConfiguration :: Lens' UpdateCertificateAuthority (Maybe RevocationConfiguration)

-- | Amazon Resource Name (ARN) of the private CA that issued the
--   certificate to be revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
updateCertificateAuthority_certificateAuthorityArn :: Lens' UpdateCertificateAuthority Text

-- | <i>See:</i> <a>newUpdateCertificateAuthorityResponse</a> smart
--   constructor.
data UpdateCertificateAuthorityResponse
UpdateCertificateAuthorityResponse' :: UpdateCertificateAuthorityResponse

-- | Create a value of <a>UpdateCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateCertificateAuthorityResponse :: UpdateCertificateAuthorityResponse
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance GHC.Generics.Generic Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.CertificateManagerPCA.UpdateCertificateAuthority.UpdateCertificateAuthority


module Network.AWS.CertificateManagerPCA.Lens

-- | The ID of the calling account.
createPermission_sourceAccount :: Lens' CreatePermission (Maybe Text)

-- | The Amazon Resource Name (ARN) of the CA that grants the permissions.
--   You can find the ARN by calling the <a>ListCertificateAuthorities</a>
--   action. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
createPermission_certificateAuthorityArn :: Lens' CreatePermission Text

-- | The AWS service or identity that receives the permission. At this
--   time, the only valid principal is <tt>acm.amazonaws.com</tt>.
createPermission_principal :: Lens' CreatePermission Text

-- | The actions that the specified AWS service principal can use. These
--   include <tt>IssueCertificate</tt>, <tt>GetCertificate</tt>, and
--   <tt>ListPermissions</tt>.
createPermission_actions :: Lens' CreatePermission (NonEmpty ActionType)

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
restoreCertificateAuthority_certificateAuthorityArn :: Lens' RestoreCertificateAuthority Text

-- | The Amazon Resource Number (ARN) of the private CA that will have its
--   policy deleted. You can find the CA's ARN by calling the
--   <a>ListCertificateAuthorities</a> action. The ARN value must have the
--   form
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/01234567-89ab-cdef-0123-0123456789ab</tt>.
deletePolicy_resourceArn :: Lens' DeletePolicy Text

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
describeCertificateAuthority_certificateAuthorityArn :: Lens' DescribeCertificateAuthority Text

-- | A <a>CertificateAuthority</a> structure that contains information
--   about your private CA.
describeCertificateAuthorityResponse_certificateAuthority :: Lens' DescribeCertificateAuthorityResponse (Maybe CertificateAuthority)

-- | The response's http status code.
describeCertificateAuthorityResponse_httpStatus :: Lens' DescribeCertificateAuthorityResponse Int

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
tagCertificateAuthority_certificateAuthorityArn :: Lens' TagCertificateAuthority Text

-- | List of tags to be associated with the CA.
tagCertificateAuthority_tags :: Lens' TagCertificateAuthority (NonEmpty Tag)

-- | The Amazon Resource Name (ARN) of the CA to be audited. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
createCertificateAuthorityAuditReport_certificateAuthorityArn :: Lens' CreateCertificateAuthorityAuditReport Text

-- | The name of the S3 bucket that will contain the audit report.
createCertificateAuthorityAuditReport_s3BucketName :: Lens' CreateCertificateAuthorityAuditReport Text

-- | The format in which to create the report. This can be either
--   <b>JSON</b> or <b>CSV</b>.
createCertificateAuthorityAuditReport_auditReportResponseFormat :: Lens' CreateCertificateAuthorityAuditReport AuditReportResponseFormat

-- | The <b>key</b> that uniquely identifies the report file in your S3
--   bucket.
createCertificateAuthorityAuditReportResponse_s3Key :: Lens' CreateCertificateAuthorityAuditReportResponse (Maybe Text)

-- | An alphanumeric string that contains a report identifier.
createCertificateAuthorityAuditReportResponse_auditReportId :: Lens' CreateCertificateAuthorityAuditReportResponse (Maybe Text)

-- | The response's http status code.
createCertificateAuthorityAuditReportResponse_httpStatus :: Lens' CreateCertificateAuthorityAuditReportResponse Int

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
getCertificate_certificateAuthorityArn :: Lens' GetCertificate Text

-- | The ARN of the issued certificate. The ARN contains the certificate
--   serial number and must be in the following form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
getCertificate_certificateArn :: Lens' GetCertificate Text

-- | The base64 PEM-encoded certificate chain that chains up to the root CA
--   certificate that you used to sign your private CA certificate.
getCertificateResponse_certificateChain :: Lens' GetCertificateResponse (Maybe Text)

-- | The base64 PEM-encoded certificate specified by the
--   <tt>CertificateArn</tt> parameter.
getCertificateResponse_certificate :: Lens' GetCertificateResponse (Maybe Text)

-- | The response's http status code.
getCertificateResponse_httpStatus :: Lens' GetCertificateResponse Int

-- | Custom string that can be used to distinguish between calls to the
--   <b>CreateCertificateAuthority</b> action. Idempotency tokens for
--   <b>CreateCertificateAuthority</b> time out after five minutes.
--   Therefore, if you call <b>CreateCertificateAuthority</b> multiple
--   times with the same idempotency token within five minutes, ACM Private
--   CA recognizes that you are requesting only certificate authority and
--   will issue only one. If you change the idempotency token for each
--   call, PCA recognizes that you are requesting multiple certificate
--   authorities.
createCertificateAuthority_idempotencyToken :: Lens' CreateCertificateAuthority (Maybe Text)

-- | Specifies a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: <tt>FIPS_140_2_LEVEL_3_OR_HIGHER</tt> is not supported in Region
--   ap-northeast-3. When creating a CA in the ap-northeast-3, you must
--   provide <tt>FIPS_140_2_LEVEL_2_OR_HIGHER</tt> as the argument for
--   <tt>KeyStorageSecurityStandard</tt>. Failure to do this results in an
--   <tt>InvalidArgsException</tt> with the message, "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
createCertificateAuthority_keyStorageSecurityStandard :: Lens' CreateCertificateAuthority (Maybe KeyStorageSecurityStandard)

-- | Contains information to enable Online Certificate Status Protocol
--   (OCSP) support, to enable a certificate revocation list (CRL), to
--   enable both, or to enable neither. The default is for both certificate
--   validation mechanisms to be disabled. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
createCertificateAuthority_revocationConfiguration :: Lens' CreateCertificateAuthority (Maybe RevocationConfiguration)

-- | Key-value pairs that will be attached to the new private CA. You can
--   associate up to 50 tags with a private CA. For information using tags
--   with IAM to manage permissions, see <a>Controlling Access Using IAM
--   Tags</a>.
createCertificateAuthority_tags :: Lens' CreateCertificateAuthority (Maybe (NonEmpty Tag))

-- | Name and bit size of the private key algorithm, the name of the
--   signing algorithm, and X.500 certificate subject information.
createCertificateAuthority_certificateAuthorityConfiguration :: Lens' CreateCertificateAuthority CertificateAuthorityConfiguration

-- | The type of the certificate authority.
createCertificateAuthority_certificateAuthorityType :: Lens' CreateCertificateAuthority CertificateAuthorityType

-- | If successful, the Amazon Resource Name (ARN) of the certificate
--   authority (CA). This is of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
createCertificateAuthorityResponse_certificateAuthorityArn :: Lens' CreateCertificateAuthorityResponse (Maybe Text)

-- | The response's http status code.
createCertificateAuthorityResponse_httpStatus :: Lens' CreateCertificateAuthorityResponse Int

-- | Use this parameter when paginating results in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of the <tt>NextToken</tt> parameter from the response you just
--   received.
listCertificateAuthorities_nextToken :: Lens' ListCertificateAuthorities (Maybe Text)

-- | Use this parameter when paginating results to specify the maximum
--   number of items to return in the response on each page. If additional
--   items exist beyond the number you specify, the <tt>NextToken</tt>
--   element is sent in the response. Use this <tt>NextToken</tt> value in
--   a subsequent request to retrieve additional items.
listCertificateAuthorities_maxResults :: Lens' ListCertificateAuthorities (Maybe Natural)

-- | Use this parameter to filter the returned set of certificate
--   authorities based on their owner. The default is SELF.
listCertificateAuthorities_resourceOwner :: Lens' ListCertificateAuthorities (Maybe ResourceOwner)

-- | When the list is truncated, this value is present and should be used
--   for the <tt>NextToken</tt> parameter in a subsequent pagination
--   request.
listCertificateAuthoritiesResponse_nextToken :: Lens' ListCertificateAuthoritiesResponse (Maybe Text)

-- | Summary information about each certificate authority you have created.
listCertificateAuthoritiesResponse_certificateAuthorities :: Lens' ListCertificateAuthoritiesResponse (Maybe [CertificateAuthority])

-- | The response's http status code.
listCertificateAuthoritiesResponse_httpStatus :: Lens' ListCertificateAuthoritiesResponse Int

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
getCertificateAuthorityCsr_certificateAuthorityArn :: Lens' GetCertificateAuthorityCsr Text

-- | The base64 PEM-encoded certificate signing request (CSR) for your
--   private CA certificate.
getCertificateAuthorityCsrResponse_csr :: Lens' GetCertificateAuthorityCsrResponse (Maybe Text)

-- | The response's http status code.
getCertificateAuthorityCsrResponse_httpStatus :: Lens' GetCertificateAuthorityCsrResponse Int

-- | Amazon Resource Name (ARN) of the private CA that issued the
--   certificate to be revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
revokeCertificate_certificateAuthorityArn :: Lens' RevokeCertificate Text

-- | Serial number of the certificate to be revoked. This must be in
--   hexadecimal format. You can retrieve the serial number by calling
--   <a>GetCertificate</a> with the Amazon Resource Name (ARN) of the
--   certificate you want and the ARN of your private CA. The
--   <b>GetCertificate</b> action retrieves the certificate in the PEM
--   format. You can use the following OpenSSL command to list the
--   certificate in text format and copy the hexadecimal serial number.
--   
--   <pre>
--   openssl x509 -in file_path -text -noout
--   </pre>
--   
--   You can also copy the serial number from the console or use the
--   <a>DescribeCertificate</a> action in the <i>AWS Certificate Manager
--   API Reference</i>.
revokeCertificate_certificateSerial :: Lens' RevokeCertificate Text

-- | Specifies why you revoked the certificate.
revokeCertificate_revocationReason :: Lens' RevokeCertificate RevocationReason

-- | The AWS account that calls this action.
deletePermission_sourceAccount :: Lens' DeletePermission (Maybe Text)

-- | The Amazon Resource Number (ARN) of the private CA that issued the
--   permissions. You can find the CA's ARN by calling the
--   <a>ListCertificateAuthorities</a> action. This must have the following
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
deletePermission_certificateAuthorityArn :: Lens' DeletePermission Text

-- | The AWS service or identity that will have its CA permissions revoked.
--   At this time, the only valid service principal is
--   <tt>acm.amazonaws.com</tt>
deletePermission_principal :: Lens' DeletePermission Text

-- | When paginating results, use this parameter in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of <b>NextToken</b> from the response you just received.
listPermissions_nextToken :: Lens' ListPermissions (Maybe Text)

-- | When paginating results, use this parameter to specify the maximum
--   number of items to return in the response. If additional items exist
--   beyond the number you specify, the <b>NextToken</b> element is sent in
--   the response. Use this <b>NextToken</b> value in a subsequent request
--   to retrieve additional items.
listPermissions_maxResults :: Lens' ListPermissions (Maybe Natural)

-- | The Amazon Resource Number (ARN) of the private CA to inspect. You can
--   find the ARN by calling the <a>ListCertificateAuthorities</a> action.
--   This must be of the form:
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</tt>
--   You can get a private CA's ARN by running the
--   <a>ListCertificateAuthorities</a> action.
listPermissions_certificateAuthorityArn :: Lens' ListPermissions Text

-- | When the list is truncated, this value is present and should be used
--   for the <b>NextToken</b> parameter in a subsequent pagination request.
listPermissionsResponse_nextToken :: Lens' ListPermissionsResponse (Maybe Text)

-- | Summary information about each permission assigned by the specified
--   private CA, including the action enabled, the policy provided, and the
--   time of creation.
listPermissionsResponse_permissions :: Lens' ListPermissionsResponse (Maybe [Permission])

-- | The response's http status code.
listPermissionsResponse_httpStatus :: Lens' ListPermissionsResponse Int

-- | The Amazon Resource Name (ARN) of your private CA. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
getCertificateAuthorityCertificate_certificateAuthorityArn :: Lens' GetCertificateAuthorityCertificate Text

-- | Base64-encoded certificate chain that includes any intermediate
--   certificates and chains up to root certificate that you used to sign
--   your private CA certificate. The chain does not include your private
--   CA certificate. If this is a root CA, the value will be null.
getCertificateAuthorityCertificateResponse_certificateChain :: Lens' GetCertificateAuthorityCertificateResponse (Maybe Text)

-- | Base64-encoded certificate authority (CA) certificate.
getCertificateAuthorityCertificateResponse_certificate :: Lens' GetCertificateAuthorityCertificateResponse (Maybe Text)

-- | The response's http status code.
getCertificateAuthorityCertificateResponse_httpStatus :: Lens' GetCertificateAuthorityCertificateResponse Int

-- | Alphanumeric string that can be used to distinguish between calls to
--   the <b>IssueCertificate</b> action. Idempotency tokens for
--   <b>IssueCertificate</b> time out after one minute. Therefore, if you
--   call <b>IssueCertificate</b> multiple times with the same idempotency
--   token within one minute, ACM Private CA recognizes that you are
--   requesting only one certificate and will issue only one. If you change
--   the idempotency token for each call, PCA recognizes that you are
--   requesting multiple certificates.
issueCertificate_idempotencyToken :: Lens' IssueCertificate (Maybe Text)

-- | Information describing the start of the validity period of the
--   certificate. This parameter sets the “Not Before" date for the
--   certificate.
--   
--   By default, when issuing a certificate, ACM Private CA sets the "Not
--   Before" date to the issuance time minus 60 minutes. This compensates
--   for clock inconsistencies across computer systems. The
--   <tt>ValidityNotBefore</tt> parameter can be used to customize the “Not
--   Before” value.
--   
--   Unlike the <tt>Validity</tt> parameter, the <tt>ValidityNotBefore</tt>
--   parameter is optional.
--   
--   The <tt>ValidityNotBefore</tt> value is expressed as an explicit date
--   and time, using the <tt>Validity</tt> type value <tt>ABSOLUTE</tt>.
--   For more information, see <a>Validity</a> in this API reference and
--   <a>Validity</a> in RFC 5280.
issueCertificate_validityNotBefore :: Lens' IssueCertificate (Maybe Validity)

-- | Specifies a custom configuration template to use when issuing a
--   certificate. If this parameter is not provided, ACM Private CA
--   defaults to the <tt>EndEntityCertificate/V1</tt> template. For CA
--   certificates, you should choose the shortest path length that meets
--   your needs. The path length is indicated by the PathLen<i>N</i>
--   portion of the ARN, where <i>N</i> is the <a>CA depth</a>.
--   
--   Note: The CA depth configured on a subordinate CA certificate must not
--   exceed the limit set by its parents in the CA hierarchy.
--   
--   For a list of <tt>TemplateArn</tt> values supported by ACM Private CA,
--   see <a>Understanding Certificate Templates</a>.
issueCertificate_templateArn :: Lens' IssueCertificate (Maybe Text)

-- | Specifies X.509 certificate information to be included in the issued
--   certificate. An <tt>APIPassthrough</tt> or <tt>APICSRPassthrough</tt>
--   template variant must be selected, or else this parameter is ignored.
--   For more information about using these templates, see <a>Understanding
--   Certificate Templates</a>.
--   
--   If conflicting or duplicate certificate information is supplied during
--   certificate issuance, ACM Private CA applies <a>order of operation
--   rules</a> to determine what information is used.
issueCertificate_apiPassthrough :: Lens' IssueCertificate (Maybe ApiPassthrough)

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
issueCertificate_certificateAuthorityArn :: Lens' IssueCertificate Text

-- | The certificate signing request (CSR) for the certificate you want to
--   issue. As an example, you can use the following OpenSSL command to
--   create the CSR and a 2048 bit RSA private key.
--   
--   <pre>
--   openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   If you have a configuration file, you can then use the following
--   OpenSSL command. The <tt>usr_cert</tt> block in the configuration file
--   contains your X509 version 3 extensions.
--   
--   <pre>
--   openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   Note: A CSR must provide either a <i>subject name</i> or a /subject
--   alternative name/ or the request will be rejected.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
issueCertificate_csr :: Lens' IssueCertificate ByteString

-- | The name of the algorithm that will be used to sign the certificate to
--   be issued.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign a CSR in the
--   <tt>CreateCertificateAuthority</tt> action.
issueCertificate_signingAlgorithm :: Lens' IssueCertificate SigningAlgorithm

-- | Information describing the end of the validity period of the
--   certificate. This parameter sets the “Not After” date for the
--   certificate.
--   
--   Certificate validity is the period of time during which a certificate
--   is valid. Validity can be expressed as an explicit date and time when
--   the certificate expires, or as a span of time after issuance, stated
--   in days, months, or years. For more information, see <a>Validity</a>
--   in RFC 5280.
--   
--   This value is unaffected when <tt>ValidityNotBefore</tt> is also
--   specified. For example, if <tt>Validity</tt> is set to 20 days in the
--   future, the certificate will expire 20 days from issuance time
--   regardless of the <tt>ValidityNotBefore</tt> value.
--   
--   The end of the validity period configured on a certificate must not
--   exceed the limit set on its parents in the CA hierarchy.
issueCertificate_validity :: Lens' IssueCertificate Validity

-- | The Amazon Resource Name (ARN) of the issued certificate and the
--   certificate serial number. This is of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
issueCertificateResponse_certificateArn :: Lens' IssueCertificateResponse (Maybe Text)

-- | The response's http status code.
issueCertificateResponse_httpStatus :: Lens' IssueCertificateResponse Int

-- | A PEM-encoded file that contains all of your certificates, other than
--   the certificate you're importing, chaining up to your root CA. Your
--   ACM Private CA-hosted or on-premises root certificate is the last in
--   the chain, and each certificate in the chain signs the one preceding.
--   
--   This parameter must be supplied when you import a subordinate CA. When
--   you import a root CA, there is no chain.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
importCertificateAuthorityCertificate_certificateChain :: Lens' ImportCertificateAuthorityCertificate (Maybe ByteString)

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
importCertificateAuthorityCertificate_certificateAuthorityArn :: Lens' ImportCertificateAuthorityCertificate Text

-- | The PEM-encoded certificate for a private CA. This may be a
--   self-signed certificate in the case of a root CA, or it may be signed
--   by another CA that you control.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
importCertificateAuthorityCertificate_certificate :: Lens' ImportCertificateAuthorityCertificate ByteString

-- | The Amazon Resource Number (ARN) of the private CA to associate with
--   the policy. The ARN of the CA can be found by calling the
--   <a>ListCertificateAuthorities</a> action.
putPolicy_resourceArn :: Lens' PutPolicy Text

-- | The path and file name of a JSON-formatted IAM policy to attach to the
--   specified private CA resource. If this policy does not contain all
--   required statements or if it includes any statement that is not
--   allowed, the <tt>PutPolicy</tt> action returns an
--   <tt>InvalidPolicyException</tt>. For information about IAM policy and
--   statement structure, see <a>Overview of JSON Policies</a>.
putPolicy_policy :: Lens' PutPolicy Text

-- | The Amazon Resource Number (ARN) of the private CA that will have its
--   policy retrieved. You can find the CA's ARN by calling the
--   ListCertificateAuthorities action.
getPolicy_resourceArn :: Lens' GetPolicy Text

-- | The policy attached to the private CA as a JSON document.
getPolicyResponse_policy :: Lens' GetPolicyResponse (Maybe Text)

-- | The response's http status code.
getPolicyResponse_httpStatus :: Lens' GetPolicyResponse Int

-- | Use this parameter when paginating results in a subsequent request
--   after you receive a response with truncated results. Set it to the
--   value of <b>NextToken</b> from the response you just received.
listTags_nextToken :: Lens' ListTags (Maybe Text)

-- | Use this parameter when paginating results to specify the maximum
--   number of items to return in the response. If additional items exist
--   beyond the number you specify, the <b>NextToken</b> element is sent in
--   the response. Use this <b>NextToken</b> value in a subsequent request
--   to retrieve additional items.
listTags_maxResults :: Lens' ListTags (Maybe Natural)

-- | The Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
listTags_certificateAuthorityArn :: Lens' ListTags Text

-- | When the list is truncated, this value is present and should be used
--   for the <b>NextToken</b> parameter in a subsequent pagination request.
listTagsResponse_nextToken :: Lens' ListTagsResponse (Maybe Text)

-- | The tags associated with your private CA.
listTagsResponse_tags :: Lens' ListTagsResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsResponse_httpStatus :: Lens' ListTagsResponse Int

-- | The number of days to make a CA restorable after it has been deleted.
--   This can be anywhere from 7 to 30 days, with 30 being the default.
deleteCertificateAuthority_permanentDeletionTimeInDays :: Lens' DeleteCertificateAuthority (Maybe Natural)

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
deleteCertificateAuthority_certificateAuthorityArn :: Lens' DeleteCertificateAuthority Text

-- | The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
untagCertificateAuthority_certificateAuthorityArn :: Lens' UntagCertificateAuthority Text

-- | List of tags to be removed from the CA.
untagCertificateAuthority_tags :: Lens' UntagCertificateAuthority (NonEmpty Tag)

-- | Status of your private CA.
updateCertificateAuthority_status :: Lens' UpdateCertificateAuthority (Maybe CertificateAuthorityStatus)

-- | Contains information to enable Online Certificate Status Protocol
--   (OCSP) support, to enable a certificate revocation list (CRL), to
--   enable both, or to enable neither. If this parameter is not supplied,
--   existing capibilites remain unchanged. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
updateCertificateAuthority_revocationConfiguration :: Lens' UpdateCertificateAuthority (Maybe RevocationConfiguration)

-- | Amazon Resource Name (ARN) of the private CA that issued the
--   certificate to be revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
updateCertificateAuthority_certificateAuthorityArn :: Lens' UpdateCertificateAuthority Text

-- | The Amazon Resource Name (ARN) of the private CA. This must be of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
describeCertificateAuthorityAuditReport_certificateAuthorityArn :: Lens' DescribeCertificateAuthorityAuditReport Text

-- | The report ID returned by calling the
--   <a>CreateCertificateAuthorityAuditReport</a> action.
describeCertificateAuthorityAuditReport_auditReportId :: Lens' DescribeCertificateAuthorityAuditReport Text

-- | Specifies whether report creation is in progress, has succeeded, or
--   has failed.
describeCertificateAuthorityAuditReportResponse_auditReportStatus :: Lens' DescribeCertificateAuthorityAuditReportResponse (Maybe AuditReportStatus)

-- | The date and time at which the report was created.
describeCertificateAuthorityAuditReportResponse_createdAt :: Lens' DescribeCertificateAuthorityAuditReportResponse (Maybe UTCTime)

-- | S3 <b>key</b> that uniquely identifies the report file in your S3
--   bucket.
describeCertificateAuthorityAuditReportResponse_s3Key :: Lens' DescribeCertificateAuthorityAuditReportResponse (Maybe Text)

-- | Name of the S3 bucket that contains the report.
describeCertificateAuthorityAuditReportResponse_s3BucketName :: Lens' DescribeCertificateAuthorityAuditReportResponse (Maybe Text)

-- | The response's http status code.
describeCertificateAuthorityAuditReportResponse_httpStatus :: Lens' DescribeCertificateAuthorityAuditReportResponse Int

-- | The locality (such as a city or town) in which the certificate subject
--   is located.
aSN1Subject_locality :: Lens' ASN1Subject (Maybe Text)

-- | Typically a qualifier appended to the name of an individual. Examples
--   include Jr. for junior, Sr. for senior, and III for third.
aSN1Subject_generationQualifier :: Lens' ASN1Subject (Maybe Text)

-- | Family name. In the US and the UK, for example, the surname of an
--   individual is ordered last. In Asian cultures the surname is typically
--   ordered first.
aSN1Subject_surname :: Lens' ASN1Subject (Maybe Text)

-- | A subdivision or unit of the organization (such as sales or finance)
--   with which the certificate subject is affiliated.
aSN1Subject_organizationalUnit :: Lens' ASN1Subject (Maybe Text)

-- | A title such as Mr. or Ms., which is pre-pended to the name to refer
--   formally to the certificate subject.
aSN1Subject_title :: Lens' ASN1Subject (Maybe Text)

-- | Concatenation that typically contains the first letter of the
--   <b>GivenName</b>, the first letter of the middle name if one exists,
--   and the first letter of the <b>Surname</b>.
aSN1Subject_initials :: Lens' ASN1Subject (Maybe Text)

-- | For CA and end-entity certificates in a private PKI, the common name
--   (CN) can be any string within the length limit.
--   
--   Note: In publicly trusted certificates, the common name must be a
--   fully qualified domain name (FQDN) associated with the certificate
--   subject.
aSN1Subject_commonName :: Lens' ASN1Subject (Maybe Text)

-- | Typically a shortened version of a longer <b>GivenName</b>. For
--   example, Jonathan is often shortened to John. Elizabeth is often
--   shortened to Beth, Liz, or Eliza.
aSN1Subject_pseudonym :: Lens' ASN1Subject (Maybe Text)

-- | State in which the subject of the certificate is located.
aSN1Subject_state :: Lens' ASN1Subject (Maybe Text)

-- | First name.
aSN1Subject_givenName :: Lens' ASN1Subject (Maybe Text)

-- | The certificate serial number.
aSN1Subject_serialNumber :: Lens' ASN1Subject (Maybe Text)

-- | Disambiguating information for the certificate subject.
aSN1Subject_distinguishedNameQualifier :: Lens' ASN1Subject (Maybe Text)

-- | Legal name of the organization with which the certificate subject is
--   affiliated.
aSN1Subject_organization :: Lens' ASN1Subject (Maybe Text)

-- | Two-digit code that specifies the country in which the certificate
--   subject located.
aSN1Subject_country :: Lens' ASN1Subject (Maybe Text)

-- | The type and format of <tt>AccessDescription</tt> information.
accessDescription_accessMethod :: Lens' AccessDescription AccessMethod

-- | The location of <tt>AccessDescription</tt> information.
accessDescription_accessLocation :: Lens' AccessDescription GeneralName

-- | Specifies the <tt>AccessMethod</tt>.
accessMethod_accessMethodType :: Lens' AccessMethod (Maybe AccessMethodType)

-- | An object identifier (OID) specifying the <tt>AccessMethod</tt>. The
--   OID must satisfy the regular expression shown below. For more
--   information, see NIST's definition of <a>Object Identifier (OID)</a>.
accessMethod_customObjectIdentifier :: Lens' AccessMethod (Maybe Text)

-- | Specifies X.509 extension information for a certificate.
apiPassthrough_extensions :: Lens' ApiPassthrough (Maybe Extensions)

-- | Undocumented member.
apiPassthrough_subject :: Lens' ApiPassthrough (Maybe ASN1Subject)

-- | Status of your private CA.
certificateAuthority_status :: Lens' CertificateAuthority (Maybe CertificateAuthorityStatus)

-- | Date and time before which your private CA certificate is not valid.
certificateAuthority_notBefore :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Defines a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: AWS Region ap-northeast-3 supports only
--   FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
--   parameter and value when creating a CA in that Region. Specifying a
--   different value (or no value) results in an
--   <tt>InvalidArgsException</tt> with the message "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
certificateAuthority_keyStorageSecurityStandard :: Lens' CertificateAuthority (Maybe KeyStorageSecurityStandard)

-- | Information about the Online Certificate Status Protocol (OCSP)
--   configuration or certificate revocation list (CRL) created and
--   maintained by your private CA.
certificateAuthority_revocationConfiguration :: Lens' CertificateAuthority (Maybe RevocationConfiguration)

-- | Serial number of your private CA.
certificateAuthority_serial :: Lens' CertificateAuthority (Maybe Text)

-- | Date and time at which your private CA was created.
certificateAuthority_createdAt :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Amazon Resource Name (ARN) for your private certificate authority
--   (CA). The format is <tt> 12345678-1234-1234-1234-123456789012 </tt>.
certificateAuthority_arn :: Lens' CertificateAuthority (Maybe Text)

-- | Your private CA configuration.
certificateAuthority_certificateAuthorityConfiguration :: Lens' CertificateAuthority (Maybe CertificateAuthorityConfiguration)

-- | Reason the request to create your private CA failed.
certificateAuthority_failureReason :: Lens' CertificateAuthority (Maybe FailureReason)

-- | Date and time after which your private CA certificate is not valid.
certificateAuthority_notAfter :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Date and time at which your private CA was last updated.
certificateAuthority_lastStateChangeAt :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Type of your private CA.
certificateAuthority_type :: Lens' CertificateAuthority (Maybe CertificateAuthorityType)

-- | The AWS account ID that owns the certificate authority.
certificateAuthority_ownerAccount :: Lens' CertificateAuthority (Maybe Text)

-- | The period during which a deleted CA can be restored. For more
--   information, see the <tt>PermanentDeletionTimeInDays</tt> parameter of
--   the <a>DeleteCertificateAuthorityRequest</a> action.
certificateAuthority_restorableUntil :: Lens' CertificateAuthority (Maybe UTCTime)

-- | Specifies information to be added to the extension section of the
--   certificate signing request (CSR).
certificateAuthorityConfiguration_csrExtensions :: Lens' CertificateAuthorityConfiguration (Maybe CsrExtensions)

-- | Type of the public key algorithm and size, in bits, of the key pair
--   that your CA creates when it issues a certificate. When you create a
--   subordinate CA, you must use a key algorithm supported by the parent
--   CA.
certificateAuthorityConfiguration_keyAlgorithm :: Lens' CertificateAuthorityConfiguration KeyAlgorithm

-- | Name of the algorithm your private CA uses to sign certificate
--   requests.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign certificates when
--   they are issued.
certificateAuthorityConfiguration_signingAlgorithm :: Lens' CertificateAuthorityConfiguration SigningAlgorithm

-- | Structure that contains X.500 distinguished name information for your
--   private CA.
certificateAuthorityConfiguration_subject :: Lens' CertificateAuthorityConfiguration ASN1Subject

-- | Name inserted into the certificate <b>CRL Distribution Points</b>
--   extension that enables the use of an alias for the CRL distribution
--   point. Use this value if you don't want the name of your S3 bucket to
--   be public.
crlConfiguration_customCname :: Lens' CrlConfiguration (Maybe Text)

-- | Determines whether the CRL will be publicly readable or privately held
--   in the CRL Amazon S3 bucket. If you choose PUBLIC_READ, the CRL will
--   be accessible over the public internet. If you choose
--   BUCKET_OWNER_FULL_CONTROL, only the owner of the CRL S3 bucket can
--   access the CRL, and your PKI clients may need an alternative method of
--   access.
--   
--   If no value is specified, the default is <tt>PUBLIC_READ</tt>.
--   
--   <i>Note:</i> This default can cause CA creation to fail in some
--   circumstances. If you have have enabled the Block Public Access (BPA)
--   feature in your S3 account, then you must specify the value of this
--   parameter as <tt>BUCKET_OWNER_FULL_CONTROL</tt>, and not doing so
--   results in an error. If you have disabled BPA in S3, then you can
--   specify either <tt>BUCKET_OWNER_FULL_CONTROL</tt> or
--   <tt>PUBLIC_READ</tt> as the value.
--   
--   For more information, see <a>Blocking public access to the S3
--   bucket</a>.
crlConfiguration_s3ObjectAcl :: Lens' CrlConfiguration (Maybe S3ObjectAcl)

-- | Name of the S3 bucket that contains the CRL. If you do not provide a
--   value for the <b>CustomCname</b> argument, the name of your S3 bucket
--   is placed into the <b>CRL Distribution Points</b> extension of the
--   issued certificate. You can change the name of your bucket by calling
--   the <a>UpdateCertificateAuthority</a> operation. You must specify a
--   <a>bucket policy</a> that allows ACM Private CA to write the CRL to
--   your bucket.
crlConfiguration_s3BucketName :: Lens' CrlConfiguration (Maybe Text)

-- | Validity period of the CRL in days.
crlConfiguration_expirationInDays :: Lens' CrlConfiguration (Maybe Natural)

-- | Boolean value that specifies whether certificate revocation lists
--   (CRLs) are enabled. You can use this value to enable certificate
--   revocation for a new CA when you call the
--   <a>CreateCertificateAuthority</a> action or for an existing CA when
--   you call the <a>UpdateCertificateAuthority</a> action.
crlConfiguration_enabled :: Lens' CrlConfiguration Bool

-- | For CA certificates, provides a path to additional information
--   pertaining to the CA, such as revocation and policy. For more
--   information, see <a>Subject Information Access</a> in RFC 5280.
csrExtensions_subjectInformationAccess :: Lens' CsrExtensions (Maybe [AccessDescription])

-- | Indicates the purpose of the certificate and of the key contained in
--   the certificate.
csrExtensions_keyUsage :: Lens' CsrExtensions (Maybe KeyUsage)

-- | Specifies the name assigner.
ediPartyName_nameAssigner :: Lens' EdiPartyName (Maybe Text)

-- | Specifies the party name.
ediPartyName_partyName :: Lens' EdiPartyName Text

-- | Specifies a custom <tt>ExtendedKeyUsage</tt> with an object identifier
--   (OID).
extendedKeyUsage_extendedKeyUsageObjectIdentifier :: Lens' ExtendedKeyUsage (Maybe Text)

-- | Specifies a standard <tt>ExtendedKeyUsage</tt> as defined as in <a>RFC
--   5280</a>.
extendedKeyUsage_extendedKeyUsageType :: Lens' ExtendedKeyUsage (Maybe ExtendedKeyUsageType)

-- | Contains a sequence of one or more policy information terms, each of
--   which consists of an object identifier (OID) and optional qualifiers.
--   For more information, see NIST's definition of <a>Object Identifier
--   (OID)</a>.
--   
--   In an end-entity certificate, these terms indicate the policy under
--   which the certificate was issued and the purposes for which it may be
--   used. In a CA certificate, these terms limit the set of policies for
--   certification paths that include this certificate.
extensions_certificatePolicies :: Lens' Extensions (Maybe (NonEmpty PolicyInformation))

-- | Specifies additional purposes for which the certified public key may
--   be used other than basic purposes indicated in the <tt>KeyUsage</tt>
--   extension.
extensions_extendedKeyUsage :: Lens' Extensions (Maybe (NonEmpty ExtendedKeyUsage))

-- | The subject alternative name extension allows identities to be bound
--   to the subject of the certificate. These identities may be included in
--   addition to or in place of the identity in the subject field of the
--   certificate.
extensions_subjectAlternativeNames :: Lens' Extensions (Maybe (NonEmpty GeneralName))

-- | Undocumented member.
extensions_keyUsage :: Lens' Extensions (Maybe KeyUsage)

-- | Represents <tt>GeneralName</tt> as an <tt>EdiPartyName</tt> object.
generalName_ediPartyName :: Lens' GeneralName (Maybe EdiPartyName)

-- | Represents <tt>GeneralName</tt> using an <tt>OtherName</tt> object.
generalName_otherName :: Lens' GeneralName (Maybe OtherName)

-- | Represents <tt>GeneralName</tt> as a URI.
generalName_uniformResourceIdentifier :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as an IPv4 or IPv6 address.
generalName_ipAddress :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as a DNS name.
generalName_dnsName :: Lens' GeneralName (Maybe Text)

-- | Undocumented member.
generalName_directoryName :: Lens' GeneralName (Maybe ASN1Subject)

-- | Represents <tt>GeneralName</tt> as an <a>RFC 822</a> email address.
generalName_rfc822Name :: Lens' GeneralName (Maybe Text)

-- | Represents <tt>GeneralName</tt> as an object identifier (OID).
generalName_registeredId :: Lens' GeneralName (Maybe Text)

-- | Key can be used to decipher data.
keyUsage_dataEncipherment :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to sign certificates.
keyUsage_keyCertSign :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to sign CRLs.
keyUsage_cRLSign :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used to encipher data.
keyUsage_keyEncipherment :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used only to encipher data.
keyUsage_encipherOnly :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used in a key-agreement protocol.
keyUsage_keyAgreement :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used for digital signing.
keyUsage_digitalSignature :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used only to decipher data.
keyUsage_decipherOnly :: Lens' KeyUsage (Maybe Bool)

-- | Key can be used for non-repudiation.
keyUsage_nonRepudiation :: Lens' KeyUsage (Maybe Bool)

-- | By default, ACM Private CA injects an AWS domain into certificates
--   being validated by the Online Certificate Status Protocol (OCSP). A
--   customer can alternatively use this object to define a CNAME
--   specifying a customized OCSP domain.
--   
--   Note: The value of the CNAME must not include a protocol prefix such
--   as "http://" or "https://".
--   
--   For more information, see <a>Customizing Online Certificate Status
--   Protocol (OCSP)</a> in the /AWS Certificate Manager Private
--   Certificate Authority (PCA) User Guide/.
ocspConfiguration_ocspCustomCname :: Lens' OcspConfiguration (Maybe Text)

-- | Flag enabling use of the Online Certificate Status Protocol (OCSP) for
--   validating certificate revocation status.
ocspConfiguration_enabled :: Lens' OcspConfiguration Bool

-- | Specifies an OID.
otherName_typeId :: Lens' OtherName Text

-- | Specifies an OID value.
otherName_value :: Lens' OtherName Text

-- | The Amazon Resource Number (ARN) of the private CA from which the
--   permission was issued.
permission_certificateAuthorityArn :: Lens' Permission (Maybe Text)

-- | The time at which the permission was created.
permission_createdAt :: Lens' Permission (Maybe UTCTime)

-- | The private CA actions that can be performed by the designated AWS
--   service.
permission_actions :: Lens' Permission (Maybe (NonEmpty ActionType))

-- | The AWS service or entity that holds the permission. At this time, the
--   only valid principal is <tt>acm.amazonaws.com</tt>.
permission_principal :: Lens' Permission (Maybe Text)

-- | The ID of the account that assigned the permission.
permission_sourceAccount :: Lens' Permission (Maybe Text)

-- | The name of the policy that is associated with the permission.
permission_policy :: Lens' Permission (Maybe Text)

-- | Modifies the given <tt>CertPolicyId</tt> with a qualifier. ACM Private
--   CA supports the certification practice statement (CPS) qualifier.
policyInformation_policyQualifiers :: Lens' PolicyInformation (Maybe (NonEmpty PolicyQualifierInfo))

-- | Specifies the object identifier (OID) of the certificate policy under
--   which the certificate was issued. For more information, see NIST's
--   definition of <a>Object Identifier (OID)</a>.
policyInformation_certPolicyId :: Lens' PolicyInformation Text

-- | Identifies the qualifier modifying a <tt>CertPolicyId</tt>.
policyQualifierInfo_policyQualifierId :: Lens' PolicyQualifierInfo PolicyQualifierId

-- | Defines the qualifier type. ACM Private CA supports the use of a URI
--   for a CPS qualifier in this field.
policyQualifierInfo_qualifier :: Lens' PolicyQualifierInfo Qualifier

-- | Contains a pointer to a certification practice statement (CPS)
--   published by the CA.
qualifier_cpsUri :: Lens' Qualifier Text

-- | Configuration of Online Certificate Status Protocol (OCSP) support, if
--   any, maintained by your private CA. When you revoke a certificate,
--   OCSP responses may take up to 60 minutes to reflect the new status.
revocationConfiguration_ocspConfiguration :: Lens' RevocationConfiguration (Maybe OcspConfiguration)

-- | Configuration of the certificate revocation list (CRL), if any,
--   maintained by your private CA. A CRL is typically updated
--   approximately 30 minutes after a certificate is revoked. If for any
--   reason a CRL update fails, ACM Private CA makes further attempts every
--   15 minutes.
revocationConfiguration_crlConfiguration :: Lens' RevocationConfiguration (Maybe CrlConfiguration)

-- | Value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | Key (name) of the tag.
tag_key :: Lens' Tag Text

-- | A long integer interpreted according to the value of <tt>Type</tt>,
--   below.
validity_value :: Lens' Validity Natural

-- | Determines how <i>ACM Private CA</i> interprets the <tt>Value</tt>
--   parameter, an integer. Supported validity types include those listed
--   below. Type definitions with values include a sample input value and
--   the resulting output.
--   
--   <tt>END_DATE</tt>: The specific date and time when the certificate
--   will expire, expressed using UTCTime (YYMMDDHHMMSS) or GeneralizedTime
--   (YYYYMMDDHHMMSS) format. When UTCTime is used, if the year field (YY)
--   is greater than or equal to 50, the year is interpreted as 19YY. If
--   the year field is less than 50, the year is interpreted as 20YY.
--   
--   <ul>
--   <li>Sample input value: 491231235959 (UTCTime format)</li>
--   <li>Output expiration date/time: 12/31/2049 23:59:59</li>
--   </ul>
--   
--   <tt>ABSOLUTE</tt>: The specific date and time when the validity of a
--   certificate will start or expire, expressed in seconds since the Unix
--   Epoch.
--   
--   <ul>
--   <li>Sample input value: 2524608000</li>
--   <li>Output expiration date/time: 01/01/2050 00:00:00</li>
--   </ul>
--   
--   <tt>DAYS</tt>, <tt>MONTHS</tt>, <tt>YEARS</tt>: The relative time from
--   the moment of issuance until the certificate will expire, expressed in
--   days, months, or years.
--   
--   Example if <tt>DAYS</tt>, issued on 10/12/2020 at 12:34:54 UTC:
--   
--   <ul>
--   <li>Sample input value: 90</li>
--   <li>Output expiration date: 01/10/2020 12:34:54 UTC</li>
--   </ul>
--   
--   The minimum validity duration for a certificate using relative time
--   (<tt>DAYS</tt>) is one day. The minimum validity for a certificate
--   using absolute time (<tt>ABSOLUTE</tt> or <tt>END_DATE</tt>) is one
--   second.
validity_type :: Lens' Validity ValidityPeriodType


module Network.AWS.CertificateManagerPCA.Waiters

-- | Polls <a>DescribeCertificateAuthorityAuditReport</a> every 3 seconds
--   until a successful state is reached. An error is returned after 60
--   failed checks.
newAuditReportCreated :: Wait DescribeCertificateAuthorityAuditReport

-- | Polls <a>GetCertificateAuthorityCsr</a> every 3 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newCertificateAuthorityCSRCreated :: Wait GetCertificateAuthorityCsr

-- | Polls <a>GetCertificate</a> every 3 seconds until a successful state
--   is reached. An error is returned after 60 failed checks.
newCertificateIssued :: Wait GetCertificate


-- | Derived from API version <tt>2017-08-22</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   This is the <i>ACM Private CA API Reference</i>. It provides
--   descriptions, syntax, and usage examples for each of the actions and
--   data types involved in creating and managing private certificate
--   authorities (CA) for your organization.
--   
--   The documentation for each action shows the Query API request
--   parameters and the XML response. Alternatively, you can use one of the
--   AWS SDKs to access an API that's tailored to the programming language
--   or platform that you're using. For more information, see <a>AWS
--   SDKs</a>.
--   
--   Each ACM Private CA API operation has a quota that determines the
--   number of times the operation can be called per second. ACM Private CA
--   throttles API requests at different rates depending on the operation.
--   Throttling means that ACM Private CA rejects an otherwise valid
--   request because the request exceeds the operation's quota for the
--   number of requests per second. When a request is throttled, ACM
--   Private CA returns a <a>ThrottlingException</a> error. ACM Private CA
--   does not guarantee a minimum request rate for APIs.
--   
--   To see an up-to-date list of your ACM Private CA quotas, or to request
--   a quota increase, log into your AWS account and visit the <a>Service
--   Quotas</a> console.
module Network.AWS.CertificateManagerPCA

-- | API version <tt>2017-08-22</tt> of the Amazon Certificate Manager
--   Private Certificate Authority SDK configuration.
defaultService :: Service

-- | You can associate up to 50 tags with a private CA. Exception
--   information is contained in the exception message field.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The state of the private CA does not allow this action to occur.
_InvalidStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more of the specified arguments was not valid.
_InvalidArgsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource policy is invalid or is missing a required statement. For
--   general information about IAM policy and statement structure, see
--   <a>Overview of JSON Policies</a>.
_InvalidPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested Amazon Resource Name (ARN) does not refer to an existing
--   resource.
_InvalidArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more fields in the certificate are invalid.
_MalformedCertificateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The designated permission has already been given to the user.
_PermissionAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A previous update to your private CA is still ongoing.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request has already been completed.
_RequestAlreadyProcessedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The token specified in the <tt>NextToken</tt> argument is not valid.
--   Use the token returned from your previous call to
--   <a>ListCertificateAuthorities</a>.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request action cannot be performed or is prohibited.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag associated with the CA is not valid. The invalid argument is
--   contained in the message field.
_InvalidTagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request is already in progress.
_RequestInProgressException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An ACM Private CA quota has been exceeded. See the exception message
--   returned to determine the quota that was exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource such as a private CA, S3 bucket, certificate, audit report,
--   or policy cannot be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The certificate authority certificate you are importing does not
--   comply with conditions specified in the certificate that signed it.
_CertificateMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request has failed for an unspecified reason.
_RequestFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current action was prevented because it would lock the caller out
--   from performing subsequent actions. Verify that the specified
--   parameters would not result in the caller being denied access to the
--   resource.
_LockoutPreventedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The certificate signing request is invalid.
_MalformedCSRException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeCertificateAuthorityAuditReport</a> every 3 seconds
--   until a successful state is reached. An error is returned after 60
--   failed checks.
newAuditReportCreated :: Wait DescribeCertificateAuthorityAuditReport

-- | Polls <a>GetCertificateAuthorityCsr</a> every 3 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newCertificateAuthorityCSRCreated :: Wait GetCertificateAuthorityCsr

-- | Polls <a>GetCertificate</a> every 3 seconds until a successful state
--   is reached. An error is returned after 60 failed checks.
newCertificateIssued :: Wait GetCertificate

-- | <i>See:</i> <a>newCreatePermission</a> smart constructor.
data CreatePermission
CreatePermission' :: Maybe Text -> Text -> Text -> NonEmpty ActionType -> CreatePermission

-- | Create a value of <a>CreatePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceAccount:CreatePermission'</a>,
--   <a>createPermission_sourceAccount</a> - The ID of the calling account.
--   
--   <a>$sel:certificateAuthorityArn:CreatePermission'</a>,
--   <a>createPermission_certificateAuthorityArn</a> - The Amazon Resource
--   Name (ARN) of the CA that grants the permissions. You can find the ARN
--   by calling the <a>ListCertificateAuthorities</a> action. This must
--   have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:principal:CreatePermission'</a>,
--   <a>createPermission_principal</a> - The AWS service or identity that
--   receives the permission. At this time, the only valid principal is
--   <tt>acm.amazonaws.com</tt>.
--   
--   <a>$sel:actions:CreatePermission'</a>, <a>createPermission_actions</a>
--   - The actions that the specified AWS service principal can use. These
--   include <tt>IssueCertificate</tt>, <tt>GetCertificate</tt>, and
--   <tt>ListPermissions</tt>.
newCreatePermission :: Text -> Text -> NonEmpty ActionType -> CreatePermission

-- | <i>See:</i> <a>newCreatePermissionResponse</a> smart constructor.
data CreatePermissionResponse
CreatePermissionResponse' :: CreatePermissionResponse

-- | Create a value of <a>CreatePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreatePermissionResponse :: CreatePermissionResponse

-- | <i>See:</i> <a>newRestoreCertificateAuthority</a> smart constructor.
data RestoreCertificateAuthority
RestoreCertificateAuthority' :: Text -> RestoreCertificateAuthority

-- | Create a value of <a>RestoreCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:RestoreCertificateAuthority'</a>,
--   <a>restoreCertificateAuthority_certificateAuthorityArn</a> - The
--   Amazon Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
newRestoreCertificateAuthority :: Text -> RestoreCertificateAuthority

-- | <i>See:</i> <a>newRestoreCertificateAuthorityResponse</a> smart
--   constructor.
data RestoreCertificateAuthorityResponse
RestoreCertificateAuthorityResponse' :: RestoreCertificateAuthorityResponse

-- | Create a value of <a>RestoreCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRestoreCertificateAuthorityResponse :: RestoreCertificateAuthorityResponse

-- | <i>See:</i> <a>newDeletePolicy</a> smart constructor.
data DeletePolicy
DeletePolicy' :: Text -> DeletePolicy

-- | Create a value of <a>DeletePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:DeletePolicy'</a>, <a>deletePolicy_resourceArn</a>
--   - The Amazon Resource Number (ARN) of the private CA that will have
--   its policy deleted. You can find the CA's ARN by calling the
--   <a>ListCertificateAuthorities</a> action. The ARN value must have the
--   form
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/01234567-89ab-cdef-0123-0123456789ab</tt>.
newDeletePolicy :: Text -> DeletePolicy

-- | <i>See:</i> <a>newDeletePolicyResponse</a> smart constructor.
data DeletePolicyResponse
DeletePolicyResponse' :: DeletePolicyResponse

-- | Create a value of <a>DeletePolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePolicyResponse :: DeletePolicyResponse

-- | <i>See:</i> <a>newDescribeCertificateAuthority</a> smart constructor.
data DescribeCertificateAuthority
DescribeCertificateAuthority' :: Text -> DescribeCertificateAuthority

-- | Create a value of <a>DescribeCertificateAuthority</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:DescribeCertificateAuthority'</a>,
--   <a>describeCertificateAuthority_certificateAuthorityArn</a> - The
--   Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
newDescribeCertificateAuthority :: Text -> DescribeCertificateAuthority

-- | <i>See:</i> <a>newDescribeCertificateAuthorityResponse</a> smart
--   constructor.
data DescribeCertificateAuthorityResponse
DescribeCertificateAuthorityResponse' :: Maybe CertificateAuthority -> Int -> DescribeCertificateAuthorityResponse

-- | Create a value of <a>DescribeCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthority:DescribeCertificateAuthorityResponse'</a>,
--   <a>describeCertificateAuthorityResponse_certificateAuthority</a> - A
--   <a>CertificateAuthority</a> structure that contains information about
--   your private CA.
--   
--   <a>$sel:httpStatus:DescribeCertificateAuthorityResponse'</a>,
--   <a>describeCertificateAuthorityResponse_httpStatus</a> - The
--   response's http status code.
newDescribeCertificateAuthorityResponse :: Int -> DescribeCertificateAuthorityResponse

-- | <i>See:</i> <a>newTagCertificateAuthority</a> smart constructor.
data TagCertificateAuthority
TagCertificateAuthority' :: Text -> NonEmpty Tag -> TagCertificateAuthority

-- | Create a value of <a>TagCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:TagCertificateAuthority'</a>,
--   <a>tagCertificateAuthority_certificateAuthorityArn</a> - The Amazon
--   Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:tags:TagCertificateAuthority'</a>,
--   <a>tagCertificateAuthority_tags</a> - List of tags to be associated
--   with the CA.
newTagCertificateAuthority :: Text -> NonEmpty Tag -> TagCertificateAuthority

-- | <i>See:</i> <a>newTagCertificateAuthorityResponse</a> smart
--   constructor.
data TagCertificateAuthorityResponse
TagCertificateAuthorityResponse' :: TagCertificateAuthorityResponse

-- | Create a value of <a>TagCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagCertificateAuthorityResponse :: TagCertificateAuthorityResponse

-- | <i>See:</i> <a>newCreateCertificateAuthorityAuditReport</a> smart
--   constructor.
data CreateCertificateAuthorityAuditReport
CreateCertificateAuthorityAuditReport' :: Text -> Text -> AuditReportResponseFormat -> CreateCertificateAuthorityAuditReport

-- | Create a value of <a>CreateCertificateAuthorityAuditReport</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArn:CreateCertificateAuthorityAuditReport'</a>,
--   <a>createCertificateAuthorityAuditReport_certificateAuthorityArn</a> -
--   The Amazon Resource Name (ARN) of the CA to be audited. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:s3BucketName:CreateCertificateAuthorityAuditReport'</a>,
--   <a>createCertificateAuthorityAuditReport_s3BucketName</a> - The name
--   of the S3 bucket that will contain the audit report.
--   
--   
--   <a>$sel:auditReportResponseFormat:CreateCertificateAuthorityAuditReport'</a>,
--   <a>createCertificateAuthorityAuditReport_auditReportResponseFormat</a>
--   - The format in which to create the report. This can be either
--   <b>JSON</b> or <b>CSV</b>.
newCreateCertificateAuthorityAuditReport :: Text -> Text -> AuditReportResponseFormat -> CreateCertificateAuthorityAuditReport

-- | <i>See:</i> <a>newCreateCertificateAuthorityAuditReportResponse</a>
--   smart constructor.
data CreateCertificateAuthorityAuditReportResponse
CreateCertificateAuthorityAuditReportResponse' :: Maybe Text -> Maybe Text -> Int -> CreateCertificateAuthorityAuditReportResponse

-- | Create a value of <a>CreateCertificateAuthorityAuditReportResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Key:CreateCertificateAuthorityAuditReportResponse'</a>,
--   <a>createCertificateAuthorityAuditReportResponse_s3Key</a> - The
--   <b>key</b> that uniquely identifies the report file in your S3 bucket.
--   
--   
--   <a>$sel:auditReportId:CreateCertificateAuthorityAuditReportResponse'</a>,
--   <a>createCertificateAuthorityAuditReportResponse_auditReportId</a> -
--   An alphanumeric string that contains a report identifier.
--   
--   <a>$sel:httpStatus:CreateCertificateAuthorityAuditReportResponse'</a>,
--   <a>createCertificateAuthorityAuditReportResponse_httpStatus</a> - The
--   response's http status code.
newCreateCertificateAuthorityAuditReportResponse :: Int -> CreateCertificateAuthorityAuditReportResponse

-- | <i>See:</i> <a>newGetCertificate</a> smart constructor.
data GetCertificate
GetCertificate' :: Text -> Text -> GetCertificate

-- | Create a value of <a>GetCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:GetCertificate'</a>,
--   <a>getCertificate_certificateAuthorityArn</a> - The Amazon Resource
--   Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:certificateArn:GetCertificate'</a>,
--   <a>getCertificate_certificateArn</a> - The ARN of the issued
--   certificate. The ARN contains the certificate serial number and must
--   be in the following form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
newGetCertificate :: Text -> Text -> GetCertificate

-- | <i>See:</i> <a>newGetCertificateResponse</a> smart constructor.
data GetCertificateResponse
GetCertificateResponse' :: Maybe Text -> Maybe Text -> Int -> GetCertificateResponse

-- | Create a value of <a>GetCertificateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:GetCertificateResponse'</a>,
--   <a>getCertificateResponse_certificateChain</a> - The base64
--   PEM-encoded certificate chain that chains up to the root CA
--   certificate that you used to sign your private CA certificate.
--   
--   <a>$sel:certificate:GetCertificateResponse'</a>,
--   <a>getCertificateResponse_certificate</a> - The base64 PEM-encoded
--   certificate specified by the <tt>CertificateArn</tt> parameter.
--   
--   <a>$sel:httpStatus:GetCertificateResponse'</a>,
--   <a>getCertificateResponse_httpStatus</a> - The response's http status
--   code.
newGetCertificateResponse :: Int -> GetCertificateResponse

-- | <i>See:</i> <a>newCreateCertificateAuthority</a> smart constructor.
data CreateCertificateAuthority
CreateCertificateAuthority' :: Maybe Text -> Maybe KeyStorageSecurityStandard -> Maybe RevocationConfiguration -> Maybe (NonEmpty Tag) -> CertificateAuthorityConfiguration -> CertificateAuthorityType -> CreateCertificateAuthority

-- | Create a value of <a>CreateCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idempotencyToken:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_idempotencyToken</a> - Custom string
--   that can be used to distinguish between calls to the
--   <b>CreateCertificateAuthority</b> action. Idempotency tokens for
--   <b>CreateCertificateAuthority</b> time out after five minutes.
--   Therefore, if you call <b>CreateCertificateAuthority</b> multiple
--   times with the same idempotency token within five minutes, ACM Private
--   CA recognizes that you are requesting only certificate authority and
--   will issue only one. If you change the idempotency token for each
--   call, PCA recognizes that you are requesting multiple certificate
--   authorities.
--   
--   <a>$sel:keyStorageSecurityStandard:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_keyStorageSecurityStandard</a> -
--   Specifies a cryptographic key management compliance standard used for
--   handling CA keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: <tt>FIPS_140_2_LEVEL_3_OR_HIGHER</tt> is not supported in Region
--   ap-northeast-3. When creating a CA in the ap-northeast-3, you must
--   provide <tt>FIPS_140_2_LEVEL_2_OR_HIGHER</tt> as the argument for
--   <tt>KeyStorageSecurityStandard</tt>. Failure to do this results in an
--   <tt>InvalidArgsException</tt> with the message, "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
--   
--   <a>$sel:revocationConfiguration:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_revocationConfiguration</a> - Contains
--   information to enable Online Certificate Status Protocol (OCSP)
--   support, to enable a certificate revocation list (CRL), to enable
--   both, or to enable neither. The default is for both certificate
--   validation mechanisms to be disabled. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
--   
--   <a>$sel:tags:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_tags</a> - Key-value pairs that will be
--   attached to the new private CA. You can associate up to 50 tags with a
--   private CA. For information using tags with IAM to manage permissions,
--   see <a>Controlling Access Using IAM Tags</a>.
--   
--   
--   <a>$sel:certificateAuthorityConfiguration:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_certificateAuthorityConfiguration</a> -
--   Name and bit size of the private key algorithm, the name of the
--   signing algorithm, and X.500 certificate subject information.
--   
--   <a>$sel:certificateAuthorityType:CreateCertificateAuthority'</a>,
--   <a>createCertificateAuthority_certificateAuthorityType</a> - The type
--   of the certificate authority.
newCreateCertificateAuthority :: CertificateAuthorityConfiguration -> CertificateAuthorityType -> CreateCertificateAuthority

-- | <i>See:</i> <a>newCreateCertificateAuthorityResponse</a> smart
--   constructor.
data CreateCertificateAuthorityResponse
CreateCertificateAuthorityResponse' :: Maybe Text -> Int -> CreateCertificateAuthorityResponse

-- | Create a value of <a>CreateCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArn:CreateCertificateAuthorityResponse'</a>,
--   <a>createCertificateAuthorityResponse_certificateAuthorityArn</a> - If
--   successful, the Amazon Resource Name (ARN) of the certificate
--   authority (CA). This is of the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:httpStatus:CreateCertificateAuthorityResponse'</a>,
--   <a>createCertificateAuthorityResponse_httpStatus</a> - The response's
--   http status code.
newCreateCertificateAuthorityResponse :: Int -> CreateCertificateAuthorityResponse

-- | <i>See:</i> <a>newListCertificateAuthorities</a> smart constructor.
data ListCertificateAuthorities
ListCertificateAuthorities' :: Maybe Text -> Maybe Natural -> Maybe ResourceOwner -> ListCertificateAuthorities

-- | Create a value of <a>ListCertificateAuthorities</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCertificateAuthorities'</a>,
--   <a>listCertificateAuthorities_nextToken</a> - Use this parameter when
--   paginating results in a subsequent request after you receive a
--   response with truncated results. Set it to the value of the
--   <tt>NextToken</tt> parameter from the response you just received.
--   
--   <a>$sel:maxResults:ListCertificateAuthorities'</a>,
--   <a>listCertificateAuthorities_maxResults</a> - Use this parameter when
--   paginating results to specify the maximum number of items to return in
--   the response on each page. If additional items exist beyond the number
--   you specify, the <tt>NextToken</tt> element is sent in the response.
--   Use this <tt>NextToken</tt> value in a subsequent request to retrieve
--   additional items.
--   
--   <a>$sel:resourceOwner:ListCertificateAuthorities'</a>,
--   <a>listCertificateAuthorities_resourceOwner</a> - Use this parameter
--   to filter the returned set of certificate authorities based on their
--   owner. The default is SELF.
newListCertificateAuthorities :: ListCertificateAuthorities

-- | <i>See:</i> <a>newListCertificateAuthoritiesResponse</a> smart
--   constructor.
data ListCertificateAuthoritiesResponse
ListCertificateAuthoritiesResponse' :: Maybe Text -> Maybe [CertificateAuthority] -> Int -> ListCertificateAuthoritiesResponse

-- | Create a value of <a>ListCertificateAuthoritiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCertificateAuthorities'</a>,
--   <a>listCertificateAuthoritiesResponse_nextToken</a> - When the list is
--   truncated, this value is present and should be used for the
--   <tt>NextToken</tt> parameter in a subsequent pagination request.
--   
--   
--   <a>$sel:certificateAuthorities:ListCertificateAuthoritiesResponse'</a>,
--   <a>listCertificateAuthoritiesResponse_certificateAuthorities</a> -
--   Summary information about each certificate authority you have created.
--   
--   <a>$sel:httpStatus:ListCertificateAuthoritiesResponse'</a>,
--   <a>listCertificateAuthoritiesResponse_httpStatus</a> - The response's
--   http status code.
newListCertificateAuthoritiesResponse :: Int -> ListCertificateAuthoritiesResponse

-- | <i>See:</i> <a>newGetCertificateAuthorityCsr</a> smart constructor.
data GetCertificateAuthorityCsr
GetCertificateAuthorityCsr' :: Text -> GetCertificateAuthorityCsr

-- | Create a value of <a>GetCertificateAuthorityCsr</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:GetCertificateAuthorityCsr'</a>,
--   <a>getCertificateAuthorityCsr_certificateAuthorityArn</a> - The Amazon
--   Resource Name (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
newGetCertificateAuthorityCsr :: Text -> GetCertificateAuthorityCsr

-- | <i>See:</i> <a>newGetCertificateAuthorityCsrResponse</a> smart
--   constructor.
data GetCertificateAuthorityCsrResponse
GetCertificateAuthorityCsrResponse' :: Maybe Text -> Int -> GetCertificateAuthorityCsrResponse

-- | Create a value of <a>GetCertificateAuthorityCsrResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:csr:GetCertificateAuthorityCsrResponse'</a>,
--   <a>getCertificateAuthorityCsrResponse_csr</a> - The base64 PEM-encoded
--   certificate signing request (CSR) for your private CA certificate.
--   
--   <a>$sel:httpStatus:GetCertificateAuthorityCsrResponse'</a>,
--   <a>getCertificateAuthorityCsrResponse_httpStatus</a> - The response's
--   http status code.
newGetCertificateAuthorityCsrResponse :: Int -> GetCertificateAuthorityCsrResponse

-- | <i>See:</i> <a>newRevokeCertificate</a> smart constructor.
data RevokeCertificate
RevokeCertificate' :: Text -> Text -> RevocationReason -> RevokeCertificate

-- | Create a value of <a>RevokeCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:RevokeCertificate'</a>,
--   <a>revokeCertificate_certificateAuthorityArn</a> - Amazon Resource
--   Name (ARN) of the private CA that issued the certificate to be
--   revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:certificateSerial:RevokeCertificate'</a>,
--   <a>revokeCertificate_certificateSerial</a> - Serial number of the
--   certificate to be revoked. This must be in hexadecimal format. You can
--   retrieve the serial number by calling <a>GetCertificate</a> with the
--   Amazon Resource Name (ARN) of the certificate you want and the ARN of
--   your private CA. The <b>GetCertificate</b> action retrieves the
--   certificate in the PEM format. You can use the following OpenSSL
--   command to list the certificate in text format and copy the
--   hexadecimal serial number.
--   
--   <pre>
--   openssl x509 -in file_path -text -noout
--   </pre>
--   
--   You can also copy the serial number from the console or use the
--   <a>DescribeCertificate</a> action in the <i>AWS Certificate Manager
--   API Reference</i>.
--   
--   <a>$sel:revocationReason:RevokeCertificate'</a>,
--   <a>revokeCertificate_revocationReason</a> - Specifies why you revoked
--   the certificate.
newRevokeCertificate :: Text -> Text -> RevocationReason -> RevokeCertificate

-- | <i>See:</i> <a>newRevokeCertificateResponse</a> smart constructor.
data RevokeCertificateResponse
RevokeCertificateResponse' :: RevokeCertificateResponse

-- | Create a value of <a>RevokeCertificateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRevokeCertificateResponse :: RevokeCertificateResponse

-- | <i>See:</i> <a>newDeletePermission</a> smart constructor.
data DeletePermission
DeletePermission' :: Maybe Text -> Text -> Text -> DeletePermission

-- | Create a value of <a>DeletePermission</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceAccount:DeletePermission'</a>,
--   <a>deletePermission_sourceAccount</a> - The AWS account that calls
--   this action.
--   
--   <a>$sel:certificateAuthorityArn:DeletePermission'</a>,
--   <a>deletePermission_certificateAuthorityArn</a> - The Amazon Resource
--   Number (ARN) of the private CA that issued the permissions. You can
--   find the CA's ARN by calling the <a>ListCertificateAuthorities</a>
--   action. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:principal:DeletePermission'</a>,
--   <a>deletePermission_principal</a> - The AWS service or identity that
--   will have its CA permissions revoked. At this time, the only valid
--   service principal is <tt>acm.amazonaws.com</tt>
newDeletePermission :: Text -> Text -> DeletePermission

-- | <i>See:</i> <a>newDeletePermissionResponse</a> smart constructor.
data DeletePermissionResponse
DeletePermissionResponse' :: DeletePermissionResponse

-- | Create a value of <a>DeletePermissionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePermissionResponse :: DeletePermissionResponse

-- | <i>See:</i> <a>newListPermissions</a> smart constructor.
data ListPermissions
ListPermissions' :: Maybe Text -> Maybe Natural -> Text -> ListPermissions

-- | Create a value of <a>ListPermissions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPermissions'</a>,
--   <a>listPermissions_nextToken</a> - When paginating results, use this
--   parameter in a subsequent request after you receive a response with
--   truncated results. Set it to the value of <b>NextToken</b> from the
--   response you just received.
--   
--   <a>$sel:maxResults:ListPermissions'</a>,
--   <a>listPermissions_maxResults</a> - When paginating results, use this
--   parameter to specify the maximum number of items to return in the
--   response. If additional items exist beyond the number you specify, the
--   <b>NextToken</b> element is sent in the response. Use this
--   <b>NextToken</b> value in a subsequent request to retrieve additional
--   items.
--   
--   <a>$sel:certificateAuthorityArn:ListPermissions'</a>,
--   <a>listPermissions_certificateAuthorityArn</a> - The Amazon Resource
--   Number (ARN) of the private CA to inspect. You can find the ARN by
--   calling the <a>ListCertificateAuthorities</a> action. This must be of
--   the form:
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012</tt>
--   You can get a private CA's ARN by running the
--   <a>ListCertificateAuthorities</a> action.
newListPermissions :: Text -> ListPermissions

-- | <i>See:</i> <a>newListPermissionsResponse</a> smart constructor.
data ListPermissionsResponse
ListPermissionsResponse' :: Maybe Text -> Maybe [Permission] -> Int -> ListPermissionsResponse

-- | Create a value of <a>ListPermissionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPermissions'</a>,
--   <a>listPermissionsResponse_nextToken</a> - When the list is truncated,
--   this value is present and should be used for the <b>NextToken</b>
--   parameter in a subsequent pagination request.
--   
--   <a>$sel:permissions:ListPermissionsResponse'</a>,
--   <a>listPermissionsResponse_permissions</a> - Summary information about
--   each permission assigned by the specified private CA, including the
--   action enabled, the policy provided, and the time of creation.
--   
--   <a>$sel:httpStatus:ListPermissionsResponse'</a>,
--   <a>listPermissionsResponse_httpStatus</a> - The response's http status
--   code.
newListPermissionsResponse :: Int -> ListPermissionsResponse

-- | <i>See:</i> <a>newGetCertificateAuthorityCertificate</a> smart
--   constructor.
data GetCertificateAuthorityCertificate
GetCertificateAuthorityCertificate' :: Text -> GetCertificateAuthorityCertificate

-- | Create a value of <a>GetCertificateAuthorityCertificate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArn:GetCertificateAuthorityCertificate'</a>,
--   <a>getCertificateAuthorityCertificate_certificateAuthorityArn</a> -
--   The Amazon Resource Name (ARN) of your private CA. This is of the
--   form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
newGetCertificateAuthorityCertificate :: Text -> GetCertificateAuthorityCertificate

-- | <i>See:</i> <a>newGetCertificateAuthorityCertificateResponse</a> smart
--   constructor.
data GetCertificateAuthorityCertificateResponse
GetCertificateAuthorityCertificateResponse' :: Maybe Text -> Maybe Text -> Int -> GetCertificateAuthorityCertificateResponse

-- | Create a value of <a>GetCertificateAuthorityCertificateResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateChain:GetCertificateAuthorityCertificateResponse'</a>,
--   <a>getCertificateAuthorityCertificateResponse_certificateChain</a> -
--   Base64-encoded certificate chain that includes any intermediate
--   certificates and chains up to root certificate that you used to sign
--   your private CA certificate. The chain does not include your private
--   CA certificate. If this is a root CA, the value will be null.
--   
--   <a>$sel:certificate:GetCertificateAuthorityCertificateResponse'</a>,
--   <a>getCertificateAuthorityCertificateResponse_certificate</a> -
--   Base64-encoded certificate authority (CA) certificate.
--   
--   <a>$sel:httpStatus:GetCertificateAuthorityCertificateResponse'</a>,
--   <a>getCertificateAuthorityCertificateResponse_httpStatus</a> - The
--   response's http status code.
newGetCertificateAuthorityCertificateResponse :: Int -> GetCertificateAuthorityCertificateResponse

-- | <i>See:</i> <a>newIssueCertificate</a> smart constructor.
data IssueCertificate
IssueCertificate' :: Maybe Text -> Maybe Validity -> Maybe Text -> Maybe ApiPassthrough -> Text -> Base64 -> SigningAlgorithm -> Validity -> IssueCertificate

-- | Create a value of <a>IssueCertificate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:idempotencyToken:IssueCertificate'</a>,
--   <a>issueCertificate_idempotencyToken</a> - Alphanumeric string that
--   can be used to distinguish between calls to the
--   <b>IssueCertificate</b> action. Idempotency tokens for
--   <b>IssueCertificate</b> time out after one minute. Therefore, if you
--   call <b>IssueCertificate</b> multiple times with the same idempotency
--   token within one minute, ACM Private CA recognizes that you are
--   requesting only one certificate and will issue only one. If you change
--   the idempotency token for each call, PCA recognizes that you are
--   requesting multiple certificates.
--   
--   <a>$sel:validityNotBefore:IssueCertificate'</a>,
--   <a>issueCertificate_validityNotBefore</a> - Information describing the
--   start of the validity period of the certificate. This parameter sets
--   the “Not Before" date for the certificate.
--   
--   By default, when issuing a certificate, ACM Private CA sets the "Not
--   Before" date to the issuance time minus 60 minutes. This compensates
--   for clock inconsistencies across computer systems. The
--   <tt>ValidityNotBefore</tt> parameter can be used to customize the “Not
--   Before” value.
--   
--   Unlike the <tt>Validity</tt> parameter, the <tt>ValidityNotBefore</tt>
--   parameter is optional.
--   
--   The <tt>ValidityNotBefore</tt> value is expressed as an explicit date
--   and time, using the <tt>Validity</tt> type value <tt>ABSOLUTE</tt>.
--   For more information, see <a>Validity</a> in this API reference and
--   <a>Validity</a> in RFC 5280.
--   
--   <a>$sel:templateArn:IssueCertificate'</a>,
--   <a>issueCertificate_templateArn</a> - Specifies a custom configuration
--   template to use when issuing a certificate. If this parameter is not
--   provided, ACM Private CA defaults to the
--   <tt>EndEntityCertificate/V1</tt> template. For CA certificates, you
--   should choose the shortest path length that meets your needs. The path
--   length is indicated by the PathLen<i>N</i> portion of the ARN, where
--   <i>N</i> is the <a>CA depth</a>.
--   
--   Note: The CA depth configured on a subordinate CA certificate must not
--   exceed the limit set by its parents in the CA hierarchy.
--   
--   For a list of <tt>TemplateArn</tt> values supported by ACM Private CA,
--   see <a>Understanding Certificate Templates</a>.
--   
--   <a>$sel:apiPassthrough:IssueCertificate'</a>,
--   <a>issueCertificate_apiPassthrough</a> - Specifies X.509 certificate
--   information to be included in the issued certificate. An
--   <tt>APIPassthrough</tt> or <tt>APICSRPassthrough</tt> template variant
--   must be selected, or else this parameter is ignored. For more
--   information about using these templates, see <a>Understanding
--   Certificate Templates</a>.
--   
--   If conflicting or duplicate certificate information is supplied during
--   certificate issuance, ACM Private CA applies <a>order of operation
--   rules</a> to determine what information is used.
--   
--   <a>$sel:certificateAuthorityArn:IssueCertificate'</a>,
--   <a>issueCertificate_certificateAuthorityArn</a> - The Amazon Resource
--   Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:csr:IssueCertificate'</a>, <a>issueCertificate_csr</a> - The
--   certificate signing request (CSR) for the certificate you want to
--   issue. As an example, you can use the following OpenSSL command to
--   create the CSR and a 2048 bit RSA private key.
--   
--   <pre>
--   openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   If you have a configuration file, you can then use the following
--   OpenSSL command. The <tt>usr_cert</tt> block in the configuration file
--   contains your X509 version 3 extensions.
--   
--   <pre>
--   openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr
--   </pre>
--   
--   Note: A CSR must provide either a <i>subject name</i> or a /subject
--   alternative name/ or the request will be rejected.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:signingAlgorithm:IssueCertificate'</a>,
--   <a>issueCertificate_signingAlgorithm</a> - The name of the algorithm
--   that will be used to sign the certificate to be issued.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign a CSR in the
--   <tt>CreateCertificateAuthority</tt> action.
--   
--   <a>$sel:validity:IssueCertificate'</a>,
--   <a>issueCertificate_validity</a> - Information describing the end of
--   the validity period of the certificate. This parameter sets the “Not
--   After” date for the certificate.
--   
--   Certificate validity is the period of time during which a certificate
--   is valid. Validity can be expressed as an explicit date and time when
--   the certificate expires, or as a span of time after issuance, stated
--   in days, months, or years. For more information, see <a>Validity</a>
--   in RFC 5280.
--   
--   This value is unaffected when <tt>ValidityNotBefore</tt> is also
--   specified. For example, if <tt>Validity</tt> is set to 20 days in the
--   future, the certificate will expire 20 days from issuance time
--   regardless of the <tt>ValidityNotBefore</tt> value.
--   
--   The end of the validity period configured on a certificate must not
--   exceed the limit set on its parents in the CA hierarchy.
newIssueCertificate :: Text -> ByteString -> SigningAlgorithm -> Validity -> IssueCertificate

-- | <i>See:</i> <a>newIssueCertificateResponse</a> smart constructor.
data IssueCertificateResponse
IssueCertificateResponse' :: Maybe Text -> Int -> IssueCertificateResponse

-- | Create a value of <a>IssueCertificateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateArn:IssueCertificateResponse'</a>,
--   <a>issueCertificateResponse_certificateArn</a> - The Amazon Resource
--   Name (ARN) of the issued certificate and the certificate serial
--   number. This is of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012/certificate/286535153982981100925020015808220737245
--   </pre>
--   
--   <a>$sel:httpStatus:IssueCertificateResponse'</a>,
--   <a>issueCertificateResponse_httpStatus</a> - The response's http
--   status code.
newIssueCertificateResponse :: Int -> IssueCertificateResponse

-- | <i>See:</i> <a>newImportCertificateAuthorityCertificate</a> smart
--   constructor.
data ImportCertificateAuthorityCertificate
ImportCertificateAuthorityCertificate' :: Maybe Base64 -> Text -> Base64 -> ImportCertificateAuthorityCertificate

-- | Create a value of <a>ImportCertificateAuthorityCertificate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateChain:ImportCertificateAuthorityCertificate'</a>,
--   <a>importCertificateAuthorityCertificate_certificateChain</a> - A
--   PEM-encoded file that contains all of your certificates, other than
--   the certificate you're importing, chaining up to your root CA. Your
--   ACM Private CA-hosted or on-premises root certificate is the last in
--   the chain, and each certificate in the chain signs the one preceding.
--   
--   This parameter must be supplied when you import a subordinate CA. When
--   you import a root CA, there is no chain.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   
--   <a>$sel:certificateAuthorityArn:ImportCertificateAuthorityCertificate'</a>,
--   <a>importCertificateAuthorityCertificate_certificateAuthorityArn</a> -
--   The Amazon Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:certificate:ImportCertificateAuthorityCertificate'</a>,
--   <a>importCertificateAuthorityCertificate_certificate</a> - The
--   PEM-encoded certificate for a private CA. This may be a self-signed
--   certificate in the case of a root CA, or it may be signed by another
--   CA that you control.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newImportCertificateAuthorityCertificate :: Text -> ByteString -> ImportCertificateAuthorityCertificate

-- | <i>See:</i> <a>newImportCertificateAuthorityCertificateResponse</a>
--   smart constructor.
data ImportCertificateAuthorityCertificateResponse
ImportCertificateAuthorityCertificateResponse' :: ImportCertificateAuthorityCertificateResponse

-- | Create a value of <a>ImportCertificateAuthorityCertificateResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newImportCertificateAuthorityCertificateResponse :: ImportCertificateAuthorityCertificateResponse

-- | <i>See:</i> <a>newPutPolicy</a> smart constructor.
data PutPolicy
PutPolicy' :: Text -> Text -> PutPolicy

-- | Create a value of <a>PutPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:PutPolicy'</a>, <a>putPolicy_resourceArn</a> - The
--   Amazon Resource Number (ARN) of the private CA to associate with the
--   policy. The ARN of the CA can be found by calling the
--   <a>ListCertificateAuthorities</a> action.
--   
--   <a>$sel:policy:PutPolicy'</a>, <a>putPolicy_policy</a> - The path and
--   file name of a JSON-formatted IAM policy to attach to the specified
--   private CA resource. If this policy does not contain all required
--   statements or if it includes any statement that is not allowed, the
--   <tt>PutPolicy</tt> action returns an <tt>InvalidPolicyException</tt>.
--   For information about IAM policy and statement structure, see
--   <a>Overview of JSON Policies</a>.
newPutPolicy :: Text -> Text -> PutPolicy

-- | <i>See:</i> <a>newPutPolicyResponse</a> smart constructor.
data PutPolicyResponse
PutPolicyResponse' :: PutPolicyResponse

-- | Create a value of <a>PutPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutPolicyResponse :: PutPolicyResponse

-- | <i>See:</i> <a>newGetPolicy</a> smart constructor.
data GetPolicy
GetPolicy' :: Text -> GetPolicy

-- | Create a value of <a>GetPolicy</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetPolicy'</a>, <a>getPolicy_resourceArn</a> - The
--   Amazon Resource Number (ARN) of the private CA that will have its
--   policy retrieved. You can find the CA's ARN by calling the
--   ListCertificateAuthorities action.
newGetPolicy :: Text -> GetPolicy

-- | <i>See:</i> <a>newGetPolicyResponse</a> smart constructor.
data GetPolicyResponse
GetPolicyResponse' :: Maybe Text -> Int -> GetPolicyResponse

-- | Create a value of <a>GetPolicyResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policy:GetPolicyResponse'</a>, <a>getPolicyResponse_policy</a>
--   - The policy attached to the private CA as a JSON document.
--   
--   <a>$sel:httpStatus:GetPolicyResponse'</a>,
--   <a>getPolicyResponse_httpStatus</a> - The response's http status code.
newGetPolicyResponse :: Int -> GetPolicyResponse

-- | <i>See:</i> <a>newListTags</a> smart constructor.
data ListTags
ListTags' :: Maybe Text -> Maybe Natural -> Text -> ListTags

-- | Create a value of <a>ListTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTags'</a>, <a>listTags_nextToken</a> - Use this
--   parameter when paginating results in a subsequent request after you
--   receive a response with truncated results. Set it to the value of
--   <b>NextToken</b> from the response you just received.
--   
--   <a>$sel:maxResults:ListTags'</a>, <a>listTags_maxResults</a> - Use
--   this parameter when paginating results to specify the maximum number
--   of items to return in the response. If additional items exist beyond
--   the number you specify, the <b>NextToken</b> element is sent in the
--   response. Use this <b>NextToken</b> value in a subsequent request to
--   retrieve additional items.
--   
--   <a>$sel:certificateAuthorityArn:ListTags'</a>,
--   <a>listTags_certificateAuthorityArn</a> - The Amazon Resource Name
--   (ARN) that was returned when you called the
--   <a>CreateCertificateAuthority</a> action. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
newListTags :: Text -> ListTags

-- | <i>See:</i> <a>newListTagsResponse</a> smart constructor.
data ListTagsResponse
ListTagsResponse' :: Maybe Text -> Maybe (NonEmpty Tag) -> Int -> ListTagsResponse

-- | Create a value of <a>ListTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTags'</a>, <a>listTagsResponse_nextToken</a> -
--   When the list is truncated, this value is present and should be used
--   for the <b>NextToken</b> parameter in a subsequent pagination request.
--   
--   <a>$sel:tags:ListTagsResponse'</a>, <a>listTagsResponse_tags</a> - The
--   tags associated with your private CA.
--   
--   <a>$sel:httpStatus:ListTagsResponse'</a>,
--   <a>listTagsResponse_httpStatus</a> - The response's http status code.
newListTagsResponse :: Int -> ListTagsResponse

-- | <i>See:</i> <a>newDeleteCertificateAuthority</a> smart constructor.
data DeleteCertificateAuthority
DeleteCertificateAuthority' :: Maybe Natural -> Text -> DeleteCertificateAuthority

-- | Create a value of <a>DeleteCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permanentDeletionTimeInDays:DeleteCertificateAuthority'</a>,
--   <a>deleteCertificateAuthority_permanentDeletionTimeInDays</a> - The
--   number of days to make a CA restorable after it has been deleted. This
--   can be anywhere from 7 to 30 days, with 30 being the default.
--   
--   <a>$sel:certificateAuthorityArn:DeleteCertificateAuthority'</a>,
--   <a>deleteCertificateAuthority_certificateAuthorityArn</a> - The Amazon
--   Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must have the following form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
newDeleteCertificateAuthority :: Text -> DeleteCertificateAuthority

-- | <i>See:</i> <a>newDeleteCertificateAuthorityResponse</a> smart
--   constructor.
data DeleteCertificateAuthorityResponse
DeleteCertificateAuthorityResponse' :: DeleteCertificateAuthorityResponse

-- | Create a value of <a>DeleteCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCertificateAuthorityResponse :: DeleteCertificateAuthorityResponse

-- | <i>See:</i> <a>newUntagCertificateAuthority</a> smart constructor.
data UntagCertificateAuthority
UntagCertificateAuthority' :: Text -> NonEmpty Tag -> UntagCertificateAuthority

-- | Create a value of <a>UntagCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:UntagCertificateAuthority'</a>,
--   <a>untagCertificateAuthority_certificateAuthorityArn</a> - The Amazon
--   Resource Name (ARN) that was returned when you called
--   <a>CreateCertificateAuthority</a>. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
--   
--   <a>$sel:tags:UntagCertificateAuthority'</a>,
--   <a>untagCertificateAuthority_tags</a> - List of tags to be removed
--   from the CA.
newUntagCertificateAuthority :: Text -> NonEmpty Tag -> UntagCertificateAuthority

-- | <i>See:</i> <a>newUntagCertificateAuthorityResponse</a> smart
--   constructor.
data UntagCertificateAuthorityResponse
UntagCertificateAuthorityResponse' :: UntagCertificateAuthorityResponse

-- | Create a value of <a>UntagCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagCertificateAuthorityResponse :: UntagCertificateAuthorityResponse

-- | <i>See:</i> <a>newUpdateCertificateAuthority</a> smart constructor.
data UpdateCertificateAuthority
UpdateCertificateAuthority' :: Maybe CertificateAuthorityStatus -> Maybe RevocationConfiguration -> Text -> UpdateCertificateAuthority

-- | Create a value of <a>UpdateCertificateAuthority</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateCertificateAuthority'</a>,
--   <a>updateCertificateAuthority_status</a> - Status of your private CA.
--   
--   <a>$sel:revocationConfiguration:UpdateCertificateAuthority'</a>,
--   <a>updateCertificateAuthority_revocationConfiguration</a> - Contains
--   information to enable Online Certificate Status Protocol (OCSP)
--   support, to enable a certificate revocation list (CRL), to enable
--   both, or to enable neither. If this parameter is not supplied,
--   existing capibilites remain unchanged. For more information, see the
--   <a>OcspConfiguration</a> and <a>CrlConfiguration</a> types.
--   
--   <a>$sel:certificateAuthorityArn:UpdateCertificateAuthority'</a>,
--   <a>updateCertificateAuthority_certificateAuthorityArn</a> - Amazon
--   Resource Name (ARN) of the private CA that issued the certificate to
--   be revoked. This must be of the form:
--   
--   <pre>
--   arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </pre>
newUpdateCertificateAuthority :: Text -> UpdateCertificateAuthority

-- | <i>See:</i> <a>newUpdateCertificateAuthorityResponse</a> smart
--   constructor.
data UpdateCertificateAuthorityResponse
UpdateCertificateAuthorityResponse' :: UpdateCertificateAuthorityResponse

-- | Create a value of <a>UpdateCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateCertificateAuthorityResponse :: UpdateCertificateAuthorityResponse

-- | <i>See:</i> <a>newDescribeCertificateAuthorityAuditReport</a> smart
--   constructor.
data DescribeCertificateAuthorityAuditReport
DescribeCertificateAuthorityAuditReport' :: Text -> Text -> DescribeCertificateAuthorityAuditReport

-- | Create a value of <a>DescribeCertificateAuthorityAuditReport</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateAuthorityArn:DescribeCertificateAuthorityAuditReport'</a>,
--   <a>describeCertificateAuthorityAuditReport_certificateAuthorityArn</a>
--   - The Amazon Resource Name (ARN) of the private CA. This must be of
--   the form:
--   
--   
--   <tt>arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012
--   </tt>.
--   
--   <a>$sel:auditReportId:DescribeCertificateAuthorityAuditReport'</a>,
--   <a>describeCertificateAuthorityAuditReport_auditReportId</a> - The
--   report ID returned by calling the
--   <a>CreateCertificateAuthorityAuditReport</a> action.
newDescribeCertificateAuthorityAuditReport :: Text -> Text -> DescribeCertificateAuthorityAuditReport

-- | <i>See:</i> <a>newDescribeCertificateAuthorityAuditReportResponse</a>
--   smart constructor.
data DescribeCertificateAuthorityAuditReportResponse
DescribeCertificateAuthorityAuditReportResponse' :: Maybe AuditReportStatus -> Maybe POSIX -> Maybe Text -> Maybe Text -> Int -> DescribeCertificateAuthorityAuditReportResponse

-- | Create a value of
--   <a>DescribeCertificateAuthorityAuditReportResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:auditReportStatus:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_auditReportStatus</a>
--   - Specifies whether report creation is in progress, has succeeded, or
--   has failed.
--   
--   
--   <a>$sel:createdAt:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_createdAt</a> - The
--   date and time at which the report was created.
--   
--   <a>$sel:s3Key:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_s3Key</a> - S3
--   <b>key</b> that uniquely identifies the report file in your S3 bucket.
--   
--   
--   <a>$sel:s3BucketName:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_s3BucketName</a> -
--   Name of the S3 bucket that contains the report.
--   
--   
--   <a>$sel:httpStatus:DescribeCertificateAuthorityAuditReportResponse'</a>,
--   <a>describeCertificateAuthorityAuditReportResponse_httpStatus</a> -
--   The response's http status code.
newDescribeCertificateAuthorityAuditReportResponse :: Int -> DescribeCertificateAuthorityAuditReportResponse
newtype AccessMethodType
AccessMethodType' :: Text -> AccessMethodType
[fromAccessMethodType] :: AccessMethodType -> Text
pattern AccessMethodType_CA_REPOSITORY :: AccessMethodType
pattern AccessMethodType_RESOURCE_PKI_MANIFEST :: AccessMethodType
pattern AccessMethodType_RESOURCE_PKI_NOTIFY :: AccessMethodType
newtype ActionType
ActionType' :: Text -> ActionType
[fromActionType] :: ActionType -> Text
pattern ActionType_GetCertificate :: ActionType
pattern ActionType_IssueCertificate :: ActionType
pattern ActionType_ListPermissions :: ActionType
newtype AuditReportResponseFormat
AuditReportResponseFormat' :: Text -> AuditReportResponseFormat
[fromAuditReportResponseFormat] :: AuditReportResponseFormat -> Text
pattern AuditReportResponseFormat_CSV :: AuditReportResponseFormat
pattern AuditReportResponseFormat_JSON :: AuditReportResponseFormat
newtype AuditReportStatus
AuditReportStatus' :: Text -> AuditReportStatus
[fromAuditReportStatus] :: AuditReportStatus -> Text
pattern AuditReportStatus_CREATING :: AuditReportStatus
pattern AuditReportStatus_FAILED :: AuditReportStatus
pattern AuditReportStatus_SUCCESS :: AuditReportStatus
newtype CertificateAuthorityStatus
CertificateAuthorityStatus' :: Text -> CertificateAuthorityStatus
[fromCertificateAuthorityStatus] :: CertificateAuthorityStatus -> Text
pattern CertificateAuthorityStatus_ACTIVE :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_CREATING :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_DELETED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_DISABLED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_EXPIRED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_FAILED :: CertificateAuthorityStatus
pattern CertificateAuthorityStatus_PENDING_CERTIFICATE :: CertificateAuthorityStatus
newtype CertificateAuthorityType
CertificateAuthorityType' :: Text -> CertificateAuthorityType
[fromCertificateAuthorityType] :: CertificateAuthorityType -> Text
pattern CertificateAuthorityType_ROOT :: CertificateAuthorityType
pattern CertificateAuthorityType_SUBORDINATE :: CertificateAuthorityType
newtype ExtendedKeyUsageType
ExtendedKeyUsageType' :: Text -> ExtendedKeyUsageType
[fromExtendedKeyUsageType] :: ExtendedKeyUsageType -> Text
pattern ExtendedKeyUsageType_CERTIFICATE_TRANSPARENCY :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_CLIENT_AUTH :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_CODE_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_DOCUMENT_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_EMAIL_PROTECTION :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_OCSP_SIGNING :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_SERVER_AUTH :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_SMART_CARD_LOGIN :: ExtendedKeyUsageType
pattern ExtendedKeyUsageType_TIME_STAMPING :: ExtendedKeyUsageType
newtype FailureReason
FailureReason' :: Text -> FailureReason
[fromFailureReason] :: FailureReason -> Text
pattern FailureReason_OTHER :: FailureReason
pattern FailureReason_REQUEST_TIMED_OUT :: FailureReason
pattern FailureReason_UNSUPPORTED_ALGORITHM :: FailureReason
newtype KeyAlgorithm
KeyAlgorithm' :: Text -> KeyAlgorithm
[fromKeyAlgorithm] :: KeyAlgorithm -> Text
pattern KeyAlgorithm_EC_prime256v1 :: KeyAlgorithm
pattern KeyAlgorithm_EC_secp384r1 :: KeyAlgorithm
pattern KeyAlgorithm_RSA_2048 :: KeyAlgorithm
pattern KeyAlgorithm_RSA_4096 :: KeyAlgorithm
newtype KeyStorageSecurityStandard
KeyStorageSecurityStandard' :: Text -> KeyStorageSecurityStandard
[fromKeyStorageSecurityStandard] :: KeyStorageSecurityStandard -> Text
pattern KeyStorageSecurityStandard_FIPS_140_2_LEVEL_2_OR_HIGHER :: KeyStorageSecurityStandard
pattern KeyStorageSecurityStandard_FIPS_140_2_LEVEL_3_OR_HIGHER :: KeyStorageSecurityStandard
newtype PolicyQualifierId
PolicyQualifierId' :: Text -> PolicyQualifierId
[fromPolicyQualifierId] :: PolicyQualifierId -> Text
pattern PolicyQualifierId_CPS :: PolicyQualifierId
newtype ResourceOwner
ResourceOwner' :: Text -> ResourceOwner
[fromResourceOwner] :: ResourceOwner -> Text
pattern ResourceOwner_OTHER_ACCOUNTS :: ResourceOwner
pattern ResourceOwner_SELF :: ResourceOwner
newtype RevocationReason
RevocationReason' :: Text -> RevocationReason
[fromRevocationReason] :: RevocationReason -> Text
pattern RevocationReason_AFFILIATION_CHANGED :: RevocationReason
pattern RevocationReason_A_A_COMPROMISE :: RevocationReason
pattern RevocationReason_CERTIFICATE_AUTHORITY_COMPROMISE :: RevocationReason
pattern RevocationReason_CESSATION_OF_OPERATION :: RevocationReason
pattern RevocationReason_KEY_COMPROMISE :: RevocationReason
pattern RevocationReason_PRIVILEGE_WITHDRAWN :: RevocationReason
pattern RevocationReason_SUPERSEDED :: RevocationReason
pattern RevocationReason_UNSPECIFIED :: RevocationReason
newtype S3ObjectAcl
S3ObjectAcl' :: Text -> S3ObjectAcl
[fromS3ObjectAcl] :: S3ObjectAcl -> Text
pattern S3ObjectAcl_BUCKET_OWNER_FULL_CONTROL :: S3ObjectAcl
pattern S3ObjectAcl_PUBLIC_READ :: S3ObjectAcl
newtype SigningAlgorithm
SigningAlgorithm' :: Text -> SigningAlgorithm
[fromSigningAlgorithm] :: SigningAlgorithm -> Text
pattern SigningAlgorithm_SHA256WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA256WITHRSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA384WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA384WITHRSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA512WITHECDSA :: SigningAlgorithm
pattern SigningAlgorithm_SHA512WITHRSA :: SigningAlgorithm
newtype ValidityPeriodType
ValidityPeriodType' :: Text -> ValidityPeriodType
[fromValidityPeriodType] :: ValidityPeriodType -> Text
pattern ValidityPeriodType_ABSOLUTE :: ValidityPeriodType
pattern ValidityPeriodType_DAYS :: ValidityPeriodType
pattern ValidityPeriodType_END_DATE :: ValidityPeriodType
pattern ValidityPeriodType_MONTHS :: ValidityPeriodType
pattern ValidityPeriodType_YEARS :: ValidityPeriodType

-- | Contains information about the certificate subject. The
--   <tt>Subject</tt> field in the certificate identifies the entity that
--   owns or controls the public key in the certificate. The entity can be
--   a user, computer, device, or service. The <tt>Subject </tt>must
--   contain an X.500 distinguished name (DN). A DN is a sequence of
--   relative distinguished names (RDNs). The RDNs are separated by commas
--   in the certificate.
--   
--   <i>See:</i> <a>newASN1Subject</a> smart constructor.
data ASN1Subject
ASN1Subject' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ASN1Subject

-- | Create a value of <a>ASN1Subject</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:locality:ASN1Subject'</a>, <a>aSN1Subject_locality</a> - The
--   locality (such as a city or town) in which the certificate subject is
--   located.
--   
--   <a>$sel:generationQualifier:ASN1Subject'</a>,
--   <a>aSN1Subject_generationQualifier</a> - Typically a qualifier
--   appended to the name of an individual. Examples include Jr. for
--   junior, Sr. for senior, and III for third.
--   
--   <a>$sel:surname:ASN1Subject'</a>, <a>aSN1Subject_surname</a> - Family
--   name. In the US and the UK, for example, the surname of an individual
--   is ordered last. In Asian cultures the surname is typically ordered
--   first.
--   
--   <a>$sel:organizationalUnit:ASN1Subject'</a>,
--   <a>aSN1Subject_organizationalUnit</a> - A subdivision or unit of the
--   organization (such as sales or finance) with which the certificate
--   subject is affiliated.
--   
--   <a>$sel:title:ASN1Subject'</a>, <a>aSN1Subject_title</a> - A title
--   such as Mr. or Ms., which is pre-pended to the name to refer formally
--   to the certificate subject.
--   
--   <a>$sel:initials:ASN1Subject'</a>, <a>aSN1Subject_initials</a> -
--   Concatenation that typically contains the first letter of the
--   <b>GivenName</b>, the first letter of the middle name if one exists,
--   and the first letter of the <b>Surname</b>.
--   
--   <a>$sel:commonName:ASN1Subject'</a>, <a>aSN1Subject_commonName</a> -
--   For CA and end-entity certificates in a private PKI, the common name
--   (CN) can be any string within the length limit.
--   
--   Note: In publicly trusted certificates, the common name must be a
--   fully qualified domain name (FQDN) associated with the certificate
--   subject.
--   
--   <a>$sel:pseudonym:ASN1Subject'</a>, <a>aSN1Subject_pseudonym</a> -
--   Typically a shortened version of a longer <b>GivenName</b>. For
--   example, Jonathan is often shortened to John. Elizabeth is often
--   shortened to Beth, Liz, or Eliza.
--   
--   <a>$sel:state:ASN1Subject'</a>, <a>aSN1Subject_state</a> - State in
--   which the subject of the certificate is located.
--   
--   <a>$sel:givenName:ASN1Subject'</a>, <a>aSN1Subject_givenName</a> -
--   First name.
--   
--   <a>$sel:serialNumber:ASN1Subject'</a>, <a>aSN1Subject_serialNumber</a>
--   - The certificate serial number.
--   
--   <a>$sel:distinguishedNameQualifier:ASN1Subject'</a>,
--   <a>aSN1Subject_distinguishedNameQualifier</a> - Disambiguating
--   information for the certificate subject.
--   
--   <a>$sel:organization:ASN1Subject'</a>, <a>aSN1Subject_organization</a>
--   - Legal name of the organization with which the certificate subject is
--   affiliated.
--   
--   <a>$sel:country:ASN1Subject'</a>, <a>aSN1Subject_country</a> -
--   Two-digit code that specifies the country in which the certificate
--   subject located.
newASN1Subject :: ASN1Subject

-- | Provides access information used by the <tt>authorityInfoAccess</tt>
--   and <tt>subjectInfoAccess</tt> extensions described in <a>RFC
--   5280</a>.
--   
--   <i>See:</i> <a>newAccessDescription</a> smart constructor.
data AccessDescription
AccessDescription' :: AccessMethod -> GeneralName -> AccessDescription

-- | Create a value of <a>AccessDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessMethod:AccessDescription'</a>,
--   <a>accessDescription_accessMethod</a> - The type and format of
--   <tt>AccessDescription</tt> information.
--   
--   <a>$sel:accessLocation:AccessDescription'</a>,
--   <a>accessDescription_accessLocation</a> - The location of
--   <tt>AccessDescription</tt> information.
newAccessDescription :: AccessMethod -> GeneralName -> AccessDescription

-- | Describes the type and format of extension access. Only one of
--   <tt>CustomObjectIdentifier</tt> or <tt>AccessMethodType</tt> may be
--   provided. Providing both results in <tt>InvalidArgsException</tt>.
--   
--   <i>See:</i> <a>newAccessMethod</a> smart constructor.
data AccessMethod
AccessMethod' :: Maybe AccessMethodType -> Maybe Text -> AccessMethod

-- | Create a value of <a>AccessMethod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessMethodType:AccessMethod'</a>,
--   <a>accessMethod_accessMethodType</a> - Specifies the
--   <tt>AccessMethod</tt>.
--   
--   <a>$sel:customObjectIdentifier:AccessMethod'</a>,
--   <a>accessMethod_customObjectIdentifier</a> - An object identifier
--   (OID) specifying the <tt>AccessMethod</tt>. The OID must satisfy the
--   regular expression shown below. For more information, see NIST's
--   definition of <a>Object Identifier (OID)</a>.
newAccessMethod :: AccessMethod

-- | Contains X.509 certificate information to be placed in an issued
--   certificate. An <tt>APIPassthrough</tt> or <tt>APICSRPassthrough</tt>
--   template variant must be selected, or else this parameter is ignored.
--   
--   If conflicting or duplicate certificate information is supplied from
--   other sources, ACM Private CA applies <a>order of operation rules</a>
--   to determine what information is used.
--   
--   <i>See:</i> <a>newApiPassthrough</a> smart constructor.
data ApiPassthrough
ApiPassthrough' :: Maybe Extensions -> Maybe ASN1Subject -> ApiPassthrough

-- | Create a value of <a>ApiPassthrough</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extensions:ApiPassthrough'</a>,
--   <a>apiPassthrough_extensions</a> - Specifies X.509 extension
--   information for a certificate.
--   
--   <a>$sel:subject:ApiPassthrough'</a>, <a>apiPassthrough_subject</a> -
--   Undocumented member.
newApiPassthrough :: ApiPassthrough

-- | Contains information about your private certificate authority (CA).
--   Your private CA can issue and revoke X.509 digital certificates.
--   Digital certificates verify that the entity named in the certificate
--   <b>Subject</b> field owns or controls the public key contained in the
--   __Subject Public Key Info__ field. Call the
--   <a>CreateCertificateAuthority</a> action to create your private CA.
--   You must then call the <a>GetCertificateAuthorityCertificate</a>
--   action to retrieve a private CA certificate signing request (CSR).
--   Sign the CSR with your ACM Private CA-hosted or on-premises root or
--   subordinate CA certificate. Call the
--   <a>ImportCertificateAuthorityCertificate</a> action to import the
--   signed certificate into AWS Certificate Manager (ACM).
--   
--   <i>See:</i> <a>newCertificateAuthority</a> smart constructor.
data CertificateAuthority
CertificateAuthority' :: Maybe CertificateAuthorityStatus -> Maybe POSIX -> Maybe KeyStorageSecurityStandard -> Maybe RevocationConfiguration -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe CertificateAuthorityConfiguration -> Maybe FailureReason -> Maybe POSIX -> Maybe POSIX -> Maybe CertificateAuthorityType -> Maybe Text -> Maybe POSIX -> CertificateAuthority

-- | Create a value of <a>CertificateAuthority</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CertificateAuthority'</a>,
--   <a>certificateAuthority_status</a> - Status of your private CA.
--   
--   <a>$sel:notBefore:CertificateAuthority'</a>,
--   <a>certificateAuthority_notBefore</a> - Date and time before which
--   your private CA certificate is not valid.
--   
--   <a>$sel:keyStorageSecurityStandard:CertificateAuthority'</a>,
--   <a>certificateAuthority_keyStorageSecurityStandard</a> - Defines a
--   cryptographic key management compliance standard used for handling CA
--   keys.
--   
--   Default: FIPS_140_2_LEVEL_3_OR_HIGHER
--   
--   Note: AWS Region ap-northeast-3 supports only
--   FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
--   parameter and value when creating a CA in that Region. Specifying a
--   different value (or no value) results in an
--   <tt>InvalidArgsException</tt> with the message "A certificate
--   authority cannot be created in this region with the specified security
--   standard."
--   
--   <a>$sel:revocationConfiguration:CertificateAuthority'</a>,
--   <a>certificateAuthority_revocationConfiguration</a> - Information
--   about the Online Certificate Status Protocol (OCSP) configuration or
--   certificate revocation list (CRL) created and maintained by your
--   private CA.
--   
--   <a>$sel:serial:CertificateAuthority'</a>,
--   <a>certificateAuthority_serial</a> - Serial number of your private CA.
--   
--   <a>$sel:createdAt:CertificateAuthority'</a>,
--   <a>certificateAuthority_createdAt</a> - Date and time at which your
--   private CA was created.
--   
--   <a>$sel:arn:CertificateAuthority'</a>, <a>certificateAuthority_arn</a>
--   - Amazon Resource Name (ARN) for your private certificate authority
--   (CA). The format is <tt> 12345678-1234-1234-1234-123456789012 </tt>.
--   
--   <a>$sel:certificateAuthorityConfiguration:CertificateAuthority'</a>,
--   <a>certificateAuthority_certificateAuthorityConfiguration</a> - Your
--   private CA configuration.
--   
--   <a>$sel:failureReason:CertificateAuthority'</a>,
--   <a>certificateAuthority_failureReason</a> - Reason the request to
--   create your private CA failed.
--   
--   <a>$sel:notAfter:CertificateAuthority'</a>,
--   <a>certificateAuthority_notAfter</a> - Date and time after which your
--   private CA certificate is not valid.
--   
--   <a>$sel:lastStateChangeAt:CertificateAuthority'</a>,
--   <a>certificateAuthority_lastStateChangeAt</a> - Date and time at which
--   your private CA was last updated.
--   
--   <a>$sel:type':CertificateAuthority'</a>,
--   <a>certificateAuthority_type</a> - Type of your private CA.
--   
--   <a>$sel:ownerAccount:CertificateAuthority'</a>,
--   <a>certificateAuthority_ownerAccount</a> - The AWS account ID that
--   owns the certificate authority.
--   
--   <a>$sel:restorableUntil:CertificateAuthority'</a>,
--   <a>certificateAuthority_restorableUntil</a> - The period during which
--   a deleted CA can be restored. For more information, see the
--   <tt>PermanentDeletionTimeInDays</tt> parameter of the
--   <a>DeleteCertificateAuthorityRequest</a> action.
newCertificateAuthority :: CertificateAuthority

-- | Contains configuration information for your private certificate
--   authority (CA). This includes information about the class of public
--   key algorithm and the key pair that your private CA creates when it
--   issues a certificate. It also includes the signature algorithm that it
--   uses when issuing certificates, and its X.500 distinguished name. You
--   must specify this information when you call the
--   <a>CreateCertificateAuthority</a> action.
--   
--   <i>See:</i> <a>newCertificateAuthorityConfiguration</a> smart
--   constructor.
data CertificateAuthorityConfiguration
CertificateAuthorityConfiguration' :: Maybe CsrExtensions -> KeyAlgorithm -> SigningAlgorithm -> ASN1Subject -> CertificateAuthorityConfiguration

-- | Create a value of <a>CertificateAuthorityConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:csrExtensions:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_csrExtensions</a> - Specifies
--   information to be added to the extension section of the certificate
--   signing request (CSR).
--   
--   <a>$sel:keyAlgorithm:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_keyAlgorithm</a> - Type of the
--   public key algorithm and size, in bits, of the key pair that your CA
--   creates when it issues a certificate. When you create a subordinate
--   CA, you must use a key algorithm supported by the parent CA.
--   
--   <a>$sel:signingAlgorithm:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_signingAlgorithm</a> - Name of
--   the algorithm your private CA uses to sign certificate requests.
--   
--   This parameter should not be confused with the
--   <tt>SigningAlgorithm</tt> parameter used to sign certificates when
--   they are issued.
--   
--   <a>$sel:subject:CertificateAuthorityConfiguration'</a>,
--   <a>certificateAuthorityConfiguration_subject</a> - Structure that
--   contains X.500 distinguished name information for your private CA.
newCertificateAuthorityConfiguration :: KeyAlgorithm -> SigningAlgorithm -> ASN1Subject -> CertificateAuthorityConfiguration

-- | Contains configuration information for a certificate revocation list
--   (CRL). Your private certificate authority (CA) creates base CRLs.
--   Delta CRLs are not supported. You can enable CRLs for your new or an
--   existing private CA by setting the <b>Enabled</b> parameter to
--   <tt>true</tt>. Your private CA writes CRLs to an S3 bucket that you
--   specify in the <b>S3BucketName</b> parameter. You can hide the name of
--   your bucket by specifying a value for the <b>CustomCname</b>
--   parameter. Your private CA copies the CNAME or the S3 bucket name to
--   the <b>CRL Distribution Points</b> extension of each certificate it
--   issues. Your S3 bucket policy must give write permission to ACM
--   Private CA.
--   
--   ACM Private CA assets that are stored in Amazon S3 can be protected
--   with encryption. For more information, see <a>Encrypting Your
--   CRLs</a>.
--   
--   Your private CA uses the value in the <b>ExpirationInDays</b>
--   parameter to calculate the <b>nextUpdate</b> field in the CRL. The CRL
--   is refreshed at 1/2 the age of next update or when a certificate is
--   revoked. When a certificate is revoked, it is recorded in the next CRL
--   that is generated and in the next audit report. Only time valid
--   certificates are listed in the CRL. Expired certificates are not
--   included.
--   
--   A CRL is typically updated approximately 30 minutes after a
--   certificate is revoked. If for any reason a CRL update fails, ACM
--   Private CA makes further attempts every 15 minutes.
--   
--   CRLs contain the following fields:
--   
--   <ul>
--   <li><b>Version</b>: The current version number defined in RFC 5280 is
--   V2. The integer value is 0x1.</li>
--   <li><b>Signature Algorithm</b>: The name of the algorithm used to sign
--   the CRL.</li>
--   <li><b>Issuer</b>: The X.500 distinguished name of your private CA
--   that issued the CRL.</li>
--   <li><b>Last Update</b>: The issue date and time of this CRL.</li>
--   <li><b>Next Update</b>: The day and time by which the next CRL will be
--   issued.</li>
--   <li><b>Revoked Certificates</b>: List of revoked certificates. Each
--   list item contains the following information.<ul><li><b>Serial
--   Number</b>: The serial number, in hexadecimal format, of the revoked
--   certificate.</li><li><b>Revocation Date</b>: Date and time the
--   certificate was revoked.</li><li><b>CRL Entry Extensions</b>: Optional
--   extensions for the CRL entry.<ul><li><b>X509v3 CRL Reason Code</b>:
--   Reason the certificate was revoked.</li></ul></li></ul></li>
--   <li><b>CRL Extensions</b>: Optional extensions for the
--   CRL.<ul><li><b>X509v3 Authority Key Identifier</b>: Identifies the
--   public key associated with the private key used to sign the
--   certificate.</li><li><b>X509v3 CRL Number:</b>: Decimal sequence
--   number for the CRL.</li></ul></li>
--   <li><b>Signature Algorithm</b>: Algorithm used by your private CA to
--   sign the CRL.</li>
--   <li><b>Signature Value</b>: Signature computed over the CRL.</li>
--   </ul>
--   
--   Certificate revocation lists created by ACM Private CA are
--   DER-encoded. You can use the following OpenSSL command to list a CRL.
--   
--   <pre>
--   openssl crl -inform DER -text -in crl_path -noout
--   </pre>
--   
--   For more information, see <a>Planning a certificate revocation list
--   (CRL)</a> in the /AWS Certificate Manager Private Certificate
--   Authority (PCA) User Guide/
--   
--   <i>See:</i> <a>newCrlConfiguration</a> smart constructor.
data CrlConfiguration
CrlConfiguration' :: Maybe Text -> Maybe S3ObjectAcl -> Maybe Text -> Maybe Natural -> Bool -> CrlConfiguration

-- | Create a value of <a>CrlConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:customCname:CrlConfiguration'</a>,
--   <a>crlConfiguration_customCname</a> - Name inserted into the
--   certificate <b>CRL Distribution Points</b> extension that enables the
--   use of an alias for the CRL distribution point. Use this value if you
--   don't want the name of your S3 bucket to be public.
--   
--   <a>$sel:s3ObjectAcl:CrlConfiguration'</a>,
--   <a>crlConfiguration_s3ObjectAcl</a> - Determines whether the CRL will
--   be publicly readable or privately held in the CRL Amazon S3 bucket. If
--   you choose PUBLIC_READ, the CRL will be accessible over the public
--   internet. If you choose BUCKET_OWNER_FULL_CONTROL, only the owner of
--   the CRL S3 bucket can access the CRL, and your PKI clients may need an
--   alternative method of access.
--   
--   If no value is specified, the default is <tt>PUBLIC_READ</tt>.
--   
--   <i>Note:</i> This default can cause CA creation to fail in some
--   circumstances. If you have have enabled the Block Public Access (BPA)
--   feature in your S3 account, then you must specify the value of this
--   parameter as <tt>BUCKET_OWNER_FULL_CONTROL</tt>, and not doing so
--   results in an error. If you have disabled BPA in S3, then you can
--   specify either <tt>BUCKET_OWNER_FULL_CONTROL</tt> or
--   <tt>PUBLIC_READ</tt> as the value.
--   
--   For more information, see <a>Blocking public access to the S3
--   bucket</a>.
--   
--   <a>$sel:s3BucketName:CrlConfiguration'</a>,
--   <a>crlConfiguration_s3BucketName</a> - Name of the S3 bucket that
--   contains the CRL. If you do not provide a value for the
--   <b>CustomCname</b> argument, the name of your S3 bucket is placed into
--   the <b>CRL Distribution Points</b> extension of the issued
--   certificate. You can change the name of your bucket by calling the
--   <a>UpdateCertificateAuthority</a> operation. You must specify a
--   <a>bucket policy</a> that allows ACM Private CA to write the CRL to
--   your bucket.
--   
--   <a>$sel:expirationInDays:CrlConfiguration'</a>,
--   <a>crlConfiguration_expirationInDays</a> - Validity period of the CRL
--   in days.
--   
--   <a>$sel:enabled:CrlConfiguration'</a>, <a>crlConfiguration_enabled</a>
--   - Boolean value that specifies whether certificate revocation lists
--   (CRLs) are enabled. You can use this value to enable certificate
--   revocation for a new CA when you call the
--   <a>CreateCertificateAuthority</a> action or for an existing CA when
--   you call the <a>UpdateCertificateAuthority</a> action.
newCrlConfiguration :: Bool -> CrlConfiguration

-- | Describes the certificate extensions to be added to the certificate
--   signing request (CSR).
--   
--   <i>See:</i> <a>newCsrExtensions</a> smart constructor.
data CsrExtensions
CsrExtensions' :: Maybe [AccessDescription] -> Maybe KeyUsage -> CsrExtensions

-- | Create a value of <a>CsrExtensions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subjectInformationAccess:CsrExtensions'</a>,
--   <a>csrExtensions_subjectInformationAccess</a> - For CA certificates,
--   provides a path to additional information pertaining to the CA, such
--   as revocation and policy. For more information, see <a>Subject
--   Information Access</a> in RFC 5280.
--   
--   <a>$sel:keyUsage:CsrExtensions'</a>, <a>csrExtensions_keyUsage</a> -
--   Indicates the purpose of the certificate and of the key contained in
--   the certificate.
newCsrExtensions :: CsrExtensions

-- | Describes an Electronic Data Interchange (EDI) entity as described in
--   as defined in <a>Subject Alternative Name</a> in RFC 5280.
--   
--   <i>See:</i> <a>newEdiPartyName</a> smart constructor.
data EdiPartyName
EdiPartyName' :: Maybe Text -> Text -> EdiPartyName

-- | Create a value of <a>EdiPartyName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nameAssigner:EdiPartyName'</a>,
--   <a>ediPartyName_nameAssigner</a> - Specifies the name assigner.
--   
--   <a>$sel:partyName:EdiPartyName'</a>, <a>ediPartyName_partyName</a> -
--   Specifies the party name.
newEdiPartyName :: Text -> EdiPartyName

-- | Specifies additional purposes for which the certified public key may
--   be used other than basic purposes indicated in the <tt>KeyUsage</tt>
--   extension.
--   
--   <i>See:</i> <a>newExtendedKeyUsage</a> smart constructor.
data ExtendedKeyUsage
ExtendedKeyUsage' :: Maybe Text -> Maybe ExtendedKeyUsageType -> ExtendedKeyUsage

-- | Create a value of <a>ExtendedKeyUsage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extendedKeyUsageObjectIdentifier:ExtendedKeyUsage'</a>,
--   <a>extendedKeyUsage_extendedKeyUsageObjectIdentifier</a> - Specifies a
--   custom <tt>ExtendedKeyUsage</tt> with an object identifier (OID).
--   
--   <a>$sel:extendedKeyUsageType:ExtendedKeyUsage'</a>,
--   <a>extendedKeyUsage_extendedKeyUsageType</a> - Specifies a standard
--   <tt>ExtendedKeyUsage</tt> as defined as in <a>RFC 5280</a>.
newExtendedKeyUsage :: ExtendedKeyUsage

-- | Contains X.509 extension information for a certificate.
--   
--   <i>See:</i> <a>newExtensions</a> smart constructor.
data Extensions
Extensions' :: Maybe (NonEmpty PolicyInformation) -> Maybe (NonEmpty ExtendedKeyUsage) -> Maybe (NonEmpty GeneralName) -> Maybe KeyUsage -> Extensions

-- | Create a value of <a>Extensions</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificatePolicies:Extensions'</a>,
--   <a>extensions_certificatePolicies</a> - Contains a sequence of one or
--   more policy information terms, each of which consists of an object
--   identifier (OID) and optional qualifiers. For more information, see
--   NIST's definition of <a>Object Identifier (OID)</a>.
--   
--   In an end-entity certificate, these terms indicate the policy under
--   which the certificate was issued and the purposes for which it may be
--   used. In a CA certificate, these terms limit the set of policies for
--   certification paths that include this certificate.
--   
--   <a>$sel:extendedKeyUsage:Extensions'</a>,
--   <a>extensions_extendedKeyUsage</a> - Specifies additional purposes for
--   which the certified public key may be used other than basic purposes
--   indicated in the <tt>KeyUsage</tt> extension.
--   
--   <a>$sel:subjectAlternativeNames:Extensions'</a>,
--   <a>extensions_subjectAlternativeNames</a> - The subject alternative
--   name extension allows identities to be bound to the subject of the
--   certificate. These identities may be included in addition to or in
--   place of the identity in the subject field of the certificate.
--   
--   <a>$sel:keyUsage:Extensions'</a>, <a>extensions_keyUsage</a> -
--   Undocumented member.
newExtensions :: Extensions

-- | Describes an ASN.1 X.400 <tt>GeneralName</tt> as defined in <a>RFC
--   5280</a>. Only one of the following naming options should be provided.
--   Providing more than one option results in an
--   <tt>InvalidArgsException</tt> error.
--   
--   <i>See:</i> <a>newGeneralName</a> smart constructor.
data GeneralName
GeneralName' :: Maybe EdiPartyName -> Maybe OtherName -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ASN1Subject -> Maybe Text -> Maybe Text -> GeneralName

-- | Create a value of <a>GeneralName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ediPartyName:GeneralName'</a>, <a>generalName_ediPartyName</a>
--   - Represents <tt>GeneralName</tt> as an <tt>EdiPartyName</tt> object.
--   
--   <a>$sel:otherName:GeneralName'</a>, <a>generalName_otherName</a> -
--   Represents <tt>GeneralName</tt> using an <tt>OtherName</tt> object.
--   
--   <a>$sel:uniformResourceIdentifier:GeneralName'</a>,
--   <a>generalName_uniformResourceIdentifier</a> - Represents
--   <tt>GeneralName</tt> as a URI.
--   
--   <a>$sel:ipAddress:GeneralName'</a>, <a>generalName_ipAddress</a> -
--   Represents <tt>GeneralName</tt> as an IPv4 or IPv6 address.
--   
--   <a>$sel:dnsName:GeneralName'</a>, <a>generalName_dnsName</a> -
--   Represents <tt>GeneralName</tt> as a DNS name.
--   
--   <a>$sel:directoryName:GeneralName'</a>,
--   <a>generalName_directoryName</a> - Undocumented member.
--   
--   <a>$sel:rfc822Name:GeneralName'</a>, <a>generalName_rfc822Name</a> -
--   Represents <tt>GeneralName</tt> as an <a>RFC 822</a> email address.
--   
--   <a>$sel:registeredId:GeneralName'</a>, <a>generalName_registeredId</a>
--   - Represents <tt>GeneralName</tt> as an object identifier (OID).
newGeneralName :: GeneralName

-- | Defines one or more purposes for which the key contained in the
--   certificate can be used. Default value for each option is false.
--   
--   <i>See:</i> <a>newKeyUsage</a> smart constructor.
data KeyUsage
KeyUsage' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> KeyUsage

-- | Create a value of <a>KeyUsage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataEncipherment:KeyUsage'</a>,
--   <a>keyUsage_dataEncipherment</a> - Key can be used to decipher data.
--   
--   <a>$sel:keyCertSign:KeyUsage'</a>, <a>keyUsage_keyCertSign</a> - Key
--   can be used to sign certificates.
--   
--   <a>$sel:cRLSign:KeyUsage'</a>, <a>keyUsage_cRLSign</a> - Key can be
--   used to sign CRLs.
--   
--   <a>$sel:keyEncipherment:KeyUsage'</a>, <a>keyUsage_keyEncipherment</a>
--   - Key can be used to encipher data.
--   
--   <a>$sel:encipherOnly:KeyUsage'</a>, <a>keyUsage_encipherOnly</a> - Key
--   can be used only to encipher data.
--   
--   <a>$sel:keyAgreement:KeyUsage'</a>, <a>keyUsage_keyAgreement</a> - Key
--   can be used in a key-agreement protocol.
--   
--   <a>$sel:digitalSignature:KeyUsage'</a>,
--   <a>keyUsage_digitalSignature</a> - Key can be used for digital
--   signing.
--   
--   <a>$sel:decipherOnly:KeyUsage'</a>, <a>keyUsage_decipherOnly</a> - Key
--   can be used only to decipher data.
--   
--   <a>$sel:nonRepudiation:KeyUsage'</a>, <a>keyUsage_nonRepudiation</a> -
--   Key can be used for non-repudiation.
newKeyUsage :: KeyUsage

-- | Contains information to enable and configure Online Certificate Status
--   Protocol (OCSP) for validating certificate revocation status.
--   
--   When you revoke a certificate, OCSP responses may take up to 60
--   minutes to reflect the new status.
--   
--   <i>See:</i> <a>newOcspConfiguration</a> smart constructor.
data OcspConfiguration
OcspConfiguration' :: Maybe Text -> Bool -> OcspConfiguration

-- | Create a value of <a>OcspConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ocspCustomCname:OcspConfiguration'</a>,
--   <a>ocspConfiguration_ocspCustomCname</a> - By default, ACM Private CA
--   injects an AWS domain into certificates being validated by the Online
--   Certificate Status Protocol (OCSP). A customer can alternatively use
--   this object to define a CNAME specifying a customized OCSP domain.
--   
--   Note: The value of the CNAME must not include a protocol prefix such
--   as "http://" or "https://".
--   
--   For more information, see <a>Customizing Online Certificate Status
--   Protocol (OCSP)</a> in the /AWS Certificate Manager Private
--   Certificate Authority (PCA) User Guide/.
--   
--   <a>$sel:enabled:OcspConfiguration'</a>,
--   <a>ocspConfiguration_enabled</a> - Flag enabling use of the Online
--   Certificate Status Protocol (OCSP) for validating certificate
--   revocation status.
newOcspConfiguration :: Bool -> OcspConfiguration

-- | Defines a custom ASN.1 X.400 <tt>GeneralName</tt> using an object
--   identifier (OID) and value. The OID must satisfy the regular
--   expression shown below. For more information, see NIST's definition of
--   <a>Object Identifier (OID)</a>.
--   
--   <i>See:</i> <a>newOtherName</a> smart constructor.
data OtherName
OtherName' :: Text -> Text -> OtherName

-- | Create a value of <a>OtherName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:typeId:OtherName'</a>, <a>otherName_typeId</a> - Specifies an
--   OID.
--   
--   <a>$sel:value:OtherName'</a>, <a>otherName_value</a> - Specifies an
--   OID value.
newOtherName :: Text -> Text -> OtherName

-- | Permissions designate which private CA actions can be performed by an
--   AWS service or entity. In order for ACM to automatically renew private
--   certificates, you must give the ACM service principal all available
--   permissions (<tt>IssueCertificate</tt>, <tt>GetCertificate</tt>, and
--   <tt>ListPermissions</tt>). Permissions can be assigned with the
--   <a>CreatePermission</a> action, removed with the
--   <a>DeletePermission</a> action, and listed with the
--   <a>ListPermissions</a> action.
--   
--   <i>See:</i> <a>newPermission</a> smart constructor.
data Permission
Permission' :: Maybe Text -> Maybe POSIX -> Maybe (NonEmpty ActionType) -> Maybe Text -> Maybe Text -> Maybe Text -> Permission

-- | Create a value of <a>Permission</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityArn:Permission'</a>,
--   <a>permission_certificateAuthorityArn</a> - The Amazon Resource Number
--   (ARN) of the private CA from which the permission was issued.
--   
--   <a>$sel:createdAt:Permission'</a>, <a>permission_createdAt</a> - The
--   time at which the permission was created.
--   
--   <a>$sel:actions:Permission'</a>, <a>permission_actions</a> - The
--   private CA actions that can be performed by the designated AWS
--   service.
--   
--   <a>$sel:principal:Permission'</a>, <a>permission_principal</a> - The
--   AWS service or entity that holds the permission. At this time, the
--   only valid principal is <tt>acm.amazonaws.com</tt>.
--   
--   <a>$sel:sourceAccount:Permission'</a>, <a>permission_sourceAccount</a>
--   - The ID of the account that assigned the permission.
--   
--   <a>$sel:policy:Permission'</a>, <a>permission_policy</a> - The name of
--   the policy that is associated with the permission.
newPermission :: Permission

-- | Defines the X.509 <tt>CertificatePolicies</tt> extension.
--   
--   <i>See:</i> <a>newPolicyInformation</a> smart constructor.
data PolicyInformation
PolicyInformation' :: Maybe (NonEmpty PolicyQualifierInfo) -> Text -> PolicyInformation

-- | Create a value of <a>PolicyInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyQualifiers:PolicyInformation'</a>,
--   <a>policyInformation_policyQualifiers</a> - Modifies the given
--   <tt>CertPolicyId</tt> with a qualifier. ACM Private CA supports the
--   certification practice statement (CPS) qualifier.
--   
--   <a>$sel:certPolicyId:PolicyInformation'</a>,
--   <a>policyInformation_certPolicyId</a> - Specifies the object
--   identifier (OID) of the certificate policy under which the certificate
--   was issued. For more information, see NIST's definition of <a>Object
--   Identifier (OID)</a>.
newPolicyInformation :: Text -> PolicyInformation

-- | Modifies the <tt>CertPolicyId</tt> of a <tt>PolicyInformation</tt>
--   object with a qualifier. ACM Private CA supports the certification
--   practice statement (CPS) qualifier.
--   
--   <i>See:</i> <a>newPolicyQualifierInfo</a> smart constructor.
data PolicyQualifierInfo
PolicyQualifierInfo' :: PolicyQualifierId -> Qualifier -> PolicyQualifierInfo

-- | Create a value of <a>PolicyQualifierInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyQualifierId:PolicyQualifierInfo'</a>,
--   <a>policyQualifierInfo_policyQualifierId</a> - Identifies the
--   qualifier modifying a <tt>CertPolicyId</tt>.
--   
--   <a>$sel:qualifier:PolicyQualifierInfo'</a>,
--   <a>policyQualifierInfo_qualifier</a> - Defines the qualifier type. ACM
--   Private CA supports the use of a URI for a CPS qualifier in this
--   field.
newPolicyQualifierInfo :: PolicyQualifierId -> Qualifier -> PolicyQualifierInfo

-- | Defines a <tt>PolicyInformation</tt> qualifier. ACM Private CA
--   supports the <a>certification practice statement (CPS) qualifier</a>
--   defined in RFC 5280.
--   
--   <i>See:</i> <a>newQualifier</a> smart constructor.
data Qualifier
Qualifier' :: Text -> Qualifier

-- | Create a value of <a>Qualifier</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cpsUri:Qualifier'</a>, <a>qualifier_cpsUri</a> - Contains a
--   pointer to a certification practice statement (CPS) published by the
--   CA.
newQualifier :: Text -> Qualifier

-- | Certificate revocation information used by the
--   <a>CreateCertificateAuthority</a> and
--   <a>UpdateCertificateAuthority</a> actions. Your private certificate
--   authority (CA) can configure Online Certificate Status Protocol (OCSP)
--   support and/or maintain a certificate revocation list (CRL). OCSP
--   returns validation information about certificates as requested by
--   clients, and a CRL contains an updated list of certificates revoked by
--   your CA. For more information, see <a>RevokeCertificate</a> and
--   <a>Setting up a certificate revocation method</a> in the /AWS
--   Certificate Manager Private Certificate Authority (PCA) User Guide/.
--   
--   <i>See:</i> <a>newRevocationConfiguration</a> smart constructor.
data RevocationConfiguration
RevocationConfiguration' :: Maybe OcspConfiguration -> Maybe CrlConfiguration -> RevocationConfiguration

-- | Create a value of <a>RevocationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ocspConfiguration:RevocationConfiguration'</a>,
--   <a>revocationConfiguration_ocspConfiguration</a> - Configuration of
--   Online Certificate Status Protocol (OCSP) support, if any, maintained
--   by your private CA. When you revoke a certificate, OCSP responses may
--   take up to 60 minutes to reflect the new status.
--   
--   <a>$sel:crlConfiguration:RevocationConfiguration'</a>,
--   <a>revocationConfiguration_crlConfiguration</a> - Configuration of the
--   certificate revocation list (CRL), if any, maintained by your private
--   CA. A CRL is typically updated approximately 30 minutes after a
--   certificate is revoked. If for any reason a CRL update fails, ACM
--   Private CA makes further attempts every 15 minutes.
newRevocationConfiguration :: RevocationConfiguration

-- | Tags are labels that you can use to identify and organize your private
--   CAs. Each tag consists of a key and an optional value. You can
--   associate up to 50 tags with a private CA. To add one or more tags to
--   a private CA, call the <a>TagCertificateAuthority</a> action. To
--   remove a tag, call the <a>UntagCertificateAuthority</a> action.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - Value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - Key (name) of the tag.
newTag :: Text -> Tag

-- | Validity specifies the period of time during which a certificate is
--   valid. Validity can be expressed as an explicit date and time when the
--   validity of a certificate starts or expires, or as a span of time
--   after issuance, stated in days, months, or years. For more
--   information, see <a>Validity</a> in RFC 5280.
--   
--   ACM Private CA API consumes the <tt>Validity</tt> data type
--   differently in two distinct parameters of the
--   <tt>IssueCertificate</tt> action. The required parameter
--   <tt>IssueCertificate</tt>:<tt>Validity</tt> specifies the end of a
--   certificate's validity period. The optional parameter
--   <tt>IssueCertificate</tt>:<tt>ValidityNotBefore</tt> specifies a
--   customized starting time for the validity period.
--   
--   <i>See:</i> <a>newValidity</a> smart constructor.
data Validity
Validity' :: Natural -> ValidityPeriodType -> Validity

-- | Create a value of <a>Validity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Validity'</a>, <a>validity_value</a> - A long integer
--   interpreted according to the value of <tt>Type</tt>, below.
--   
--   <a>$sel:type':Validity'</a>, <a>validity_type</a> - Determines how
--   <i>ACM Private CA</i> interprets the <tt>Value</tt> parameter, an
--   integer. Supported validity types include those listed below. Type
--   definitions with values include a sample input value and the resulting
--   output.
--   
--   <tt>END_DATE</tt>: The specific date and time when the certificate
--   will expire, expressed using UTCTime (YYMMDDHHMMSS) or GeneralizedTime
--   (YYYYMMDDHHMMSS) format. When UTCTime is used, if the year field (YY)
--   is greater than or equal to 50, the year is interpreted as 19YY. If
--   the year field is less than 50, the year is interpreted as 20YY.
--   
--   <ul>
--   <li>Sample input value: 491231235959 (UTCTime format)</li>
--   <li>Output expiration date/time: 12/31/2049 23:59:59</li>
--   </ul>
--   
--   <tt>ABSOLUTE</tt>: The specific date and time when the validity of a
--   certificate will start or expire, expressed in seconds since the Unix
--   Epoch.
--   
--   <ul>
--   <li>Sample input value: 2524608000</li>
--   <li>Output expiration date/time: 01/01/2050 00:00:00</li>
--   </ul>
--   
--   <tt>DAYS</tt>, <tt>MONTHS</tt>, <tt>YEARS</tt>: The relative time from
--   the moment of issuance until the certificate will expire, expressed in
--   days, months, or years.
--   
--   Example if <tt>DAYS</tt>, issued on 10/12/2020 at 12:34:54 UTC:
--   
--   <ul>
--   <li>Sample input value: 90</li>
--   <li>Output expiration date: 01/10/2020 12:34:54 UTC</li>
--   </ul>
--   
--   The minimum validity duration for a certificate using relative time
--   (<tt>DAYS</tt>) is one day. The minimum validity for a certificate
--   using absolute time (<tt>ABSOLUTE</tt> or <tt>END_DATE</tt>) is one
--   second.
newValidity :: Natural -> ValidityPeriodType -> Validity
