-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-pricingZSamazonka-pricing
@version 1.6.1


module Network.AWS.Pricing.Types.AttributeValue

-- | The values of a given attribute, such as <tt>Throughput Optimized
--   HDD</tt> or <tt>Provisioned IOPS</tt> for the <tt>Amazon EC2</tt>
--   <tt>volumeType</tt> attribute.
--   
--   <i>See:</i> <a>newAttributeValue</a> smart constructor.
data AttributeValue
AttributeValue' :: Maybe Text -> AttributeValue

-- | The specific value of an <tt>attributeName</tt>.
[$sel:value:AttributeValue'] :: AttributeValue -> Maybe Text

-- | Create a value of <a>AttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AttributeValue'</a>, <a>attributeValue_value</a> - The
--   specific value of an <tt>attributeName</tt>.
newAttributeValue :: AttributeValue

-- | The specific value of an <tt>attributeName</tt>.
attributeValue_value :: Lens' AttributeValue (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Pricing.Types.AttributeValue.AttributeValue
instance GHC.Show.Show Network.AWS.Pricing.Types.AttributeValue.AttributeValue
instance GHC.Read.Read Network.AWS.Pricing.Types.AttributeValue.AttributeValue
instance GHC.Classes.Eq Network.AWS.Pricing.Types.AttributeValue.AttributeValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Pricing.Types.AttributeValue.AttributeValue
instance Data.Hashable.Class.Hashable Network.AWS.Pricing.Types.AttributeValue.AttributeValue
instance Control.DeepSeq.NFData Network.AWS.Pricing.Types.AttributeValue.AttributeValue


module Network.AWS.Pricing.Types.FilterType
newtype FilterType
FilterType' :: Text -> FilterType
[fromFilterType] :: FilterType -> Text
pattern FilterType_TERM_MATCH :: FilterType
instance Network.AWS.Data.XML.ToXML Network.AWS.Pricing.Types.FilterType.FilterType
instance Network.AWS.Data.XML.FromXML Network.AWS.Pricing.Types.FilterType.FilterType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Pricing.Types.FilterType.FilterType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Pricing.Types.FilterType.FilterType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Pricing.Types.FilterType.FilterType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Pricing.Types.FilterType.FilterType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Pricing.Types.FilterType.FilterType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Pricing.Types.FilterType.FilterType
instance Network.AWS.Data.Log.ToLog Network.AWS.Pricing.Types.FilterType.FilterType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Pricing.Types.FilterType.FilterType
instance Network.AWS.Data.Text.ToText Network.AWS.Pricing.Types.FilterType.FilterType
instance Network.AWS.Data.Text.FromText Network.AWS.Pricing.Types.FilterType.FilterType
instance Control.DeepSeq.NFData Network.AWS.Pricing.Types.FilterType.FilterType
instance Data.Hashable.Class.Hashable Network.AWS.Pricing.Types.FilterType.FilterType
instance GHC.Generics.Generic Network.AWS.Pricing.Types.FilterType.FilterType
instance GHC.Classes.Ord Network.AWS.Pricing.Types.FilterType.FilterType
instance GHC.Classes.Eq Network.AWS.Pricing.Types.FilterType.FilterType
instance GHC.Read.Read Network.AWS.Pricing.Types.FilterType.FilterType
instance GHC.Show.Show Network.AWS.Pricing.Types.FilterType.FilterType


module Network.AWS.Pricing.Types.Filter

-- | The constraints that you want all returned products to match.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: FilterType -> Text -> Text -> Filter

-- | The type of filter that you want to use.
--   
--   Valid values are: <tt>TERM_MATCH</tt>. <tt>TERM_MATCH</tt> returns
--   only products that match both the given filter field and the given
--   value.
[$sel:type':Filter'] :: Filter -> FilterType

-- | The product metadata field that you want to filter on. You can filter
--   by just the service code to see all products for a specific service,
--   filter by just the attribute name to see a specific attribute for
--   multiple services, or use both a service code and an attribute name to
--   retrieve only products that match both fields.
--   
--   Valid values include: <tt>ServiceCode</tt>, and all attribute names
--   
--   For example, you can filter by the <tt>AmazonEC2</tt> service code and
--   the <tt>volumeType</tt> attribute name to get the prices for only
--   Amazon EC2 volumes.
[$sel:field:Filter'] :: Filter -> Text

-- | The service code or attribute value that you want to filter by. If you
--   are filtering by service code this is the actual service code, such as
--   <tt>AmazonEC2</tt>. If you are filtering by attribute name, this is
--   the attribute value that you want the returned products to match, such
--   as a <tt>Provisioned IOPS</tt> volume.
[$sel:value:Filter'] :: Filter -> Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Filter'</a>, <a>filter_type</a> - The type of filter
--   that you want to use.
--   
--   Valid values are: <tt>TERM_MATCH</tt>. <tt>TERM_MATCH</tt> returns
--   only products that match both the given filter field and the given
--   value.
--   
--   <a>$sel:field:Filter'</a>, <a>filter_field</a> - The product metadata
--   field that you want to filter on. You can filter by just the service
--   code to see all products for a specific service, filter by just the
--   attribute name to see a specific attribute for multiple services, or
--   use both a service code and an attribute name to retrieve only
--   products that match both fields.
--   
--   Valid values include: <tt>ServiceCode</tt>, and all attribute names
--   
--   For example, you can filter by the <tt>AmazonEC2</tt> service code and
--   the <tt>volumeType</tt> attribute name to get the prices for only
--   Amazon EC2 volumes.
--   
--   <a>$sel:value:Filter'</a>, <a>filter_value</a> - The service code or
--   attribute value that you want to filter by. If you are filtering by
--   service code this is the actual service code, such as
--   <tt>AmazonEC2</tt>. If you are filtering by attribute name, this is
--   the attribute value that you want the returned products to match, such
--   as a <tt>Provisioned IOPS</tt> volume.
newFilter :: FilterType -> Text -> Text -> Filter

-- | The type of filter that you want to use.
--   
--   Valid values are: <tt>TERM_MATCH</tt>. <tt>TERM_MATCH</tt> returns
--   only products that match both the given filter field and the given
--   value.
filter_type :: Lens' Filter FilterType

-- | The product metadata field that you want to filter on. You can filter
--   by just the service code to see all products for a specific service,
--   filter by just the attribute name to see a specific attribute for
--   multiple services, or use both a service code and an attribute name to
--   retrieve only products that match both fields.
--   
--   Valid values include: <tt>ServiceCode</tt>, and all attribute names
--   
--   For example, you can filter by the <tt>AmazonEC2</tt> service code and
--   the <tt>volumeType</tt> attribute name to get the prices for only
--   Amazon EC2 volumes.
filter_field :: Lens' Filter Text

-- | The service code or attribute value that you want to filter by. If you
--   are filtering by service code this is the actual service code, such as
--   <tt>AmazonEC2</tt>. If you are filtering by attribute name, this is
--   the attribute value that you want the returned products to match, such
--   as a <tt>Provisioned IOPS</tt> volume.
filter_value :: Lens' Filter Text
instance GHC.Generics.Generic Network.AWS.Pricing.Types.Filter.Filter
instance GHC.Show.Show Network.AWS.Pricing.Types.Filter.Filter
instance GHC.Read.Read Network.AWS.Pricing.Types.Filter.Filter
instance GHC.Classes.Eq Network.AWS.Pricing.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Network.AWS.Pricing.Types.Filter.Filter
instance Control.DeepSeq.NFData Network.AWS.Pricing.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Pricing.Types.Filter.Filter


module Network.AWS.Pricing.Types.PricingService

-- | The metadata for a service, such as the service code and available
--   attribute names.
--   
--   <i>See:</i> <a>newPricingService</a> smart constructor.
data PricingService
PricingService' :: Maybe Text -> Maybe [Text] -> PricingService

-- | The code for the Amazon Web Services service.
[$sel:serviceCode:PricingService'] :: PricingService -> Maybe Text

-- | The attributes that are available for this service.
[$sel:attributeNames:PricingService'] :: PricingService -> Maybe [Text]

-- | Create a value of <a>PricingService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceCode:PricingService'</a>,
--   <a>pricingService_serviceCode</a> - The code for the Amazon Web
--   Services service.
--   
--   <a>$sel:attributeNames:PricingService'</a>,
--   <a>pricingService_attributeNames</a> - The attributes that are
--   available for this service.
newPricingService :: PricingService

-- | The code for the Amazon Web Services service.
pricingService_serviceCode :: Lens' PricingService (Maybe Text)

-- | The attributes that are available for this service.
pricingService_attributeNames :: Lens' PricingService (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.Pricing.Types.PricingService.PricingService
instance GHC.Show.Show Network.AWS.Pricing.Types.PricingService.PricingService
instance GHC.Read.Read Network.AWS.Pricing.Types.PricingService.PricingService
instance GHC.Classes.Eq Network.AWS.Pricing.Types.PricingService.PricingService
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Pricing.Types.PricingService.PricingService
instance Data.Hashable.Class.Hashable Network.AWS.Pricing.Types.PricingService.PricingService
instance Control.DeepSeq.NFData Network.AWS.Pricing.Types.PricingService.PricingService


module Network.AWS.Pricing.Types

-- | API version <tt>2017-10-15</tt> of the Amazon Price List Service SDK
--   configuration.
defaultService :: Service

-- | The pagination token expired. Try again without a pagination token.
_ExpiredNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource can't be found.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the server occurred during the processing of your request.
--   Try again later.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pagination token is invalid. Try again without a pagination token.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters had an invalid value.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError
newtype FilterType
FilterType' :: Text -> FilterType
[fromFilterType] :: FilterType -> Text
pattern FilterType_TERM_MATCH :: FilterType

-- | The values of a given attribute, such as <tt>Throughput Optimized
--   HDD</tt> or <tt>Provisioned IOPS</tt> for the <tt>Amazon EC2</tt>
--   <tt>volumeType</tt> attribute.
--   
--   <i>See:</i> <a>newAttributeValue</a> smart constructor.
data AttributeValue
AttributeValue' :: Maybe Text -> AttributeValue

-- | The specific value of an <tt>attributeName</tt>.
[$sel:value:AttributeValue'] :: AttributeValue -> Maybe Text

-- | Create a value of <a>AttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AttributeValue'</a>, <a>attributeValue_value</a> - The
--   specific value of an <tt>attributeName</tt>.
newAttributeValue :: AttributeValue

-- | The specific value of an <tt>attributeName</tt>.
attributeValue_value :: Lens' AttributeValue (Maybe Text)

-- | The constraints that you want all returned products to match.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: FilterType -> Text -> Text -> Filter

-- | The type of filter that you want to use.
--   
--   Valid values are: <tt>TERM_MATCH</tt>. <tt>TERM_MATCH</tt> returns
--   only products that match both the given filter field and the given
--   value.
[$sel:type':Filter'] :: Filter -> FilterType

-- | The product metadata field that you want to filter on. You can filter
--   by just the service code to see all products for a specific service,
--   filter by just the attribute name to see a specific attribute for
--   multiple services, or use both a service code and an attribute name to
--   retrieve only products that match both fields.
--   
--   Valid values include: <tt>ServiceCode</tt>, and all attribute names
--   
--   For example, you can filter by the <tt>AmazonEC2</tt> service code and
--   the <tt>volumeType</tt> attribute name to get the prices for only
--   Amazon EC2 volumes.
[$sel:field:Filter'] :: Filter -> Text

-- | The service code or attribute value that you want to filter by. If you
--   are filtering by service code this is the actual service code, such as
--   <tt>AmazonEC2</tt>. If you are filtering by attribute name, this is
--   the attribute value that you want the returned products to match, such
--   as a <tt>Provisioned IOPS</tt> volume.
[$sel:value:Filter'] :: Filter -> Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Filter'</a>, <a>filter_type</a> - The type of filter
--   that you want to use.
--   
--   Valid values are: <tt>TERM_MATCH</tt>. <tt>TERM_MATCH</tt> returns
--   only products that match both the given filter field and the given
--   value.
--   
--   <a>$sel:field:Filter'</a>, <a>filter_field</a> - The product metadata
--   field that you want to filter on. You can filter by just the service
--   code to see all products for a specific service, filter by just the
--   attribute name to see a specific attribute for multiple services, or
--   use both a service code and an attribute name to retrieve only
--   products that match both fields.
--   
--   Valid values include: <tt>ServiceCode</tt>, and all attribute names
--   
--   For example, you can filter by the <tt>AmazonEC2</tt> service code and
--   the <tt>volumeType</tt> attribute name to get the prices for only
--   Amazon EC2 volumes.
--   
--   <a>$sel:value:Filter'</a>, <a>filter_value</a> - The service code or
--   attribute value that you want to filter by. If you are filtering by
--   service code this is the actual service code, such as
--   <tt>AmazonEC2</tt>. If you are filtering by attribute name, this is
--   the attribute value that you want the returned products to match, such
--   as a <tt>Provisioned IOPS</tt> volume.
newFilter :: FilterType -> Text -> Text -> Filter

-- | The type of filter that you want to use.
--   
--   Valid values are: <tt>TERM_MATCH</tt>. <tt>TERM_MATCH</tt> returns
--   only products that match both the given filter field and the given
--   value.
filter_type :: Lens' Filter FilterType

-- | The product metadata field that you want to filter on. You can filter
--   by just the service code to see all products for a specific service,
--   filter by just the attribute name to see a specific attribute for
--   multiple services, or use both a service code and an attribute name to
--   retrieve only products that match both fields.
--   
--   Valid values include: <tt>ServiceCode</tt>, and all attribute names
--   
--   For example, you can filter by the <tt>AmazonEC2</tt> service code and
--   the <tt>volumeType</tt> attribute name to get the prices for only
--   Amazon EC2 volumes.
filter_field :: Lens' Filter Text

-- | The service code or attribute value that you want to filter by. If you
--   are filtering by service code this is the actual service code, such as
--   <tt>AmazonEC2</tt>. If you are filtering by attribute name, this is
--   the attribute value that you want the returned products to match, such
--   as a <tt>Provisioned IOPS</tt> volume.
filter_value :: Lens' Filter Text

-- | The metadata for a service, such as the service code and available
--   attribute names.
--   
--   <i>See:</i> <a>newPricingService</a> smart constructor.
data PricingService
PricingService' :: Maybe Text -> Maybe [Text] -> PricingService

-- | The code for the Amazon Web Services service.
[$sel:serviceCode:PricingService'] :: PricingService -> Maybe Text

-- | The attributes that are available for this service.
[$sel:attributeNames:PricingService'] :: PricingService -> Maybe [Text]

-- | Create a value of <a>PricingService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceCode:PricingService'</a>,
--   <a>pricingService_serviceCode</a> - The code for the Amazon Web
--   Services service.
--   
--   <a>$sel:attributeNames:PricingService'</a>,
--   <a>pricingService_attributeNames</a> - The attributes that are
--   available for this service.
newPricingService :: PricingService

-- | The code for the Amazon Web Services service.
pricingService_serviceCode :: Lens' PricingService (Maybe Text)

-- | The attributes that are available for this service.
pricingService_attributeNames :: Lens' PricingService (Maybe [Text])


-- | Returns a list of all products that match the filter criteria.
--   
--   This operation returns paginated results.
module Network.AWS.Pricing.GetProducts

-- | <i>See:</i> <a>newGetProducts</a> smart constructor.
data GetProducts
GetProducts' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [Filter] -> GetProducts

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
[$sel:nextToken:GetProducts'] :: GetProducts -> Maybe Text

-- | The maximum number of results to return in the response.
[$sel:maxResults:GetProducts'] :: GetProducts -> Maybe Natural

-- | The code for the service whose products you want to retrieve.
[$sel:serviceCode:GetProducts'] :: GetProducts -> Maybe Text

-- | The format version that you want the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
[$sel:formatVersion:GetProducts'] :: GetProducts -> Maybe Text

-- | The list of filters that limit the returned products. only products
--   that match all filters are returned.
[$sel:filters:GetProducts'] :: GetProducts -> Maybe [Filter]

-- | Create a value of <a>GetProducts</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetProducts'</a>, <a>getProducts_nextToken</a> - The
--   pagination token that indicates the next set of results that you want
--   to retrieve.
--   
--   <a>$sel:maxResults:GetProducts'</a>, <a>getProducts_maxResults</a> -
--   The maximum number of results to return in the response.
--   
--   <a>$sel:serviceCode:GetProducts'</a>, <a>getProducts_serviceCode</a> -
--   The code for the service whose products you want to retrieve.
--   
--   <a>$sel:formatVersion:GetProducts'</a>,
--   <a>getProducts_formatVersion</a> - The format version that you want
--   the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
--   
--   <a>$sel:filters:GetProducts'</a>, <a>getProducts_filters</a> - The
--   list of filters that limit the returned products. only products that
--   match all filters are returned.
newGetProducts :: GetProducts

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
getProducts_nextToken :: Lens' GetProducts (Maybe Text)

-- | The maximum number of results to return in the response.
getProducts_maxResults :: Lens' GetProducts (Maybe Natural)

-- | The code for the service whose products you want to retrieve.
getProducts_serviceCode :: Lens' GetProducts (Maybe Text)

-- | The format version that you want the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
getProducts_formatVersion :: Lens' GetProducts (Maybe Text)

-- | The list of filters that limit the returned products. only products
--   that match all filters are returned.
getProducts_filters :: Lens' GetProducts (Maybe [Filter])

-- | <i>See:</i> <a>newGetProductsResponse</a> smart constructor.
data GetProductsResponse
GetProductsResponse' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Int -> GetProductsResponse

-- | The list of products that match your filters. The list contains both
--   the product metadata and the price information.
[$sel:priceList:GetProductsResponse'] :: GetProductsResponse -> Maybe [Text]

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:GetProductsResponse'] :: GetProductsResponse -> Maybe Text

-- | The format version of the response. For example, aws_v1.
[$sel:formatVersion:GetProductsResponse'] :: GetProductsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetProductsResponse'] :: GetProductsResponse -> Int

-- | Create a value of <a>GetProductsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priceList:GetProductsResponse'</a>,
--   <a>getProductsResponse_priceList</a> - The list of products that match
--   your filters. The list contains both the product metadata and the
--   price information.
--   
--   <a>$sel:nextToken:GetProducts'</a>,
--   <a>getProductsResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:formatVersion:GetProducts'</a>,
--   <a>getProductsResponse_formatVersion</a> - The format version of the
--   response. For example, aws_v1.
--   
--   <a>$sel:httpStatus:GetProductsResponse'</a>,
--   <a>getProductsResponse_httpStatus</a> - The response's http status
--   code.
newGetProductsResponse :: Int -> GetProductsResponse

-- | The list of products that match your filters. The list contains both
--   the product metadata and the price information.
getProductsResponse_priceList :: Lens' GetProductsResponse (Maybe [Text])

-- | The pagination token that indicates the next set of results to
--   retrieve.
getProductsResponse_nextToken :: Lens' GetProductsResponse (Maybe Text)

-- | The format version of the response. For example, aws_v1.
getProductsResponse_formatVersion :: Lens' GetProductsResponse (Maybe Text)

-- | The response's http status code.
getProductsResponse_httpStatus :: Lens' GetProductsResponse Int
instance GHC.Generics.Generic Network.AWS.Pricing.GetProducts.GetProducts
instance GHC.Show.Show Network.AWS.Pricing.GetProducts.GetProducts
instance GHC.Read.Read Network.AWS.Pricing.GetProducts.GetProducts
instance GHC.Classes.Eq Network.AWS.Pricing.GetProducts.GetProducts
instance GHC.Generics.Generic Network.AWS.Pricing.GetProducts.GetProductsResponse
instance GHC.Show.Show Network.AWS.Pricing.GetProducts.GetProductsResponse
instance GHC.Read.Read Network.AWS.Pricing.GetProducts.GetProductsResponse
instance GHC.Classes.Eq Network.AWS.Pricing.GetProducts.GetProductsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Pricing.GetProducts.GetProducts
instance Control.DeepSeq.NFData Network.AWS.Pricing.GetProducts.GetProductsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Pricing.GetProducts.GetProducts
instance Data.Hashable.Class.Hashable Network.AWS.Pricing.GetProducts.GetProducts
instance Control.DeepSeq.NFData Network.AWS.Pricing.GetProducts.GetProducts
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Pricing.GetProducts.GetProducts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Pricing.GetProducts.GetProducts
instance Network.AWS.Data.Path.ToPath Network.AWS.Pricing.GetProducts.GetProducts
instance Network.AWS.Data.Query.ToQuery Network.AWS.Pricing.GetProducts.GetProducts


-- | Returns a list of attribute values. Attibutes are similar to the
--   details in a Price List API offer file. For a list of available
--   attributes, see <a>Offer File Definitions</a> in the <a>Amazon Web
--   Services Billing and Cost Management User Guide</a>.
--   
--   This operation returns paginated results.
module Network.AWS.Pricing.GetAttributeValues

-- | <i>See:</i> <a>newGetAttributeValues</a> smart constructor.
data GetAttributeValues
GetAttributeValues' :: Maybe Text -> Maybe Natural -> Text -> Text -> GetAttributeValues

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
[$sel:nextToken:GetAttributeValues'] :: GetAttributeValues -> Maybe Text

-- | The maximum number of results to return in response.
[$sel:maxResults:GetAttributeValues'] :: GetAttributeValues -> Maybe Natural

-- | The service code for the service whose attributes you want to
--   retrieve. For example, if you want the retrieve an EC2 attribute, use
--   <tt>AmazonEC2</tt>.
[$sel:serviceCode:GetAttributeValues'] :: GetAttributeValues -> Text

-- | The name of the attribute that you want to retrieve the values for,
--   such as <tt>volumeType</tt>.
[$sel:attributeName:GetAttributeValues'] :: GetAttributeValues -> Text

-- | Create a value of <a>GetAttributeValues</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAttributeValues'</a>,
--   <a>getAttributeValues_nextToken</a> - The pagination token that
--   indicates the next set of results that you want to retrieve.
--   
--   <a>$sel:maxResults:GetAttributeValues'</a>,
--   <a>getAttributeValues_maxResults</a> - The maximum number of results
--   to return in response.
--   
--   <a>$sel:serviceCode:GetAttributeValues'</a>,
--   <a>getAttributeValues_serviceCode</a> - The service code for the
--   service whose attributes you want to retrieve. For example, if you
--   want the retrieve an EC2 attribute, use <tt>AmazonEC2</tt>.
--   
--   <a>$sel:attributeName:GetAttributeValues'</a>,
--   <a>getAttributeValues_attributeName</a> - The name of the attribute
--   that you want to retrieve the values for, such as <tt>volumeType</tt>.
newGetAttributeValues :: Text -> Text -> GetAttributeValues

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
getAttributeValues_nextToken :: Lens' GetAttributeValues (Maybe Text)

-- | The maximum number of results to return in response.
getAttributeValues_maxResults :: Lens' GetAttributeValues (Maybe Natural)

-- | The service code for the service whose attributes you want to
--   retrieve. For example, if you want the retrieve an EC2 attribute, use
--   <tt>AmazonEC2</tt>.
getAttributeValues_serviceCode :: Lens' GetAttributeValues Text

-- | The name of the attribute that you want to retrieve the values for,
--   such as <tt>volumeType</tt>.
getAttributeValues_attributeName :: Lens' GetAttributeValues Text

-- | <i>See:</i> <a>newGetAttributeValuesResponse</a> smart constructor.
data GetAttributeValuesResponse
GetAttributeValuesResponse' :: Maybe Text -> Maybe [AttributeValue] -> Int -> GetAttributeValuesResponse

-- | The pagination token that indicates the next set of results to
--   retrieve.
[$sel:nextToken:GetAttributeValuesResponse'] :: GetAttributeValuesResponse -> Maybe Text

-- | The list of values for an attribute. For example, <tt>Throughput
--   Optimized HDD</tt> and <tt>Provisioned IOPS</tt> are two available
--   values for the <tt>AmazonEC2</tt> <tt>volumeType</tt>.
[$sel:attributeValues:GetAttributeValuesResponse'] :: GetAttributeValuesResponse -> Maybe [AttributeValue]

-- | The response's http status code.
[$sel:httpStatus:GetAttributeValuesResponse'] :: GetAttributeValuesResponse -> Int

-- | Create a value of <a>GetAttributeValuesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAttributeValues'</a>,
--   <a>getAttributeValuesResponse_nextToken</a> - The pagination token
--   that indicates the next set of results to retrieve.
--   
--   <a>$sel:attributeValues:GetAttributeValuesResponse'</a>,
--   <a>getAttributeValuesResponse_attributeValues</a> - The list of values
--   for an attribute. For example, <tt>Throughput Optimized HDD</tt> and
--   <tt>Provisioned IOPS</tt> are two available values for the
--   <tt>AmazonEC2</tt> <tt>volumeType</tt>.
--   
--   <a>$sel:httpStatus:GetAttributeValuesResponse'</a>,
--   <a>getAttributeValuesResponse_httpStatus</a> - The response's http
--   status code.
newGetAttributeValuesResponse :: Int -> GetAttributeValuesResponse

-- | The pagination token that indicates the next set of results to
--   retrieve.
getAttributeValuesResponse_nextToken :: Lens' GetAttributeValuesResponse (Maybe Text)

-- | The list of values for an attribute. For example, <tt>Throughput
--   Optimized HDD</tt> and <tt>Provisioned IOPS</tt> are two available
--   values for the <tt>AmazonEC2</tt> <tt>volumeType</tt>.
getAttributeValuesResponse_attributeValues :: Lens' GetAttributeValuesResponse (Maybe [AttributeValue])

-- | The response's http status code.
getAttributeValuesResponse_httpStatus :: Lens' GetAttributeValuesResponse Int
instance GHC.Generics.Generic Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance GHC.Show.Show Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance GHC.Read.Read Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance GHC.Classes.Eq Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance GHC.Generics.Generic Network.AWS.Pricing.GetAttributeValues.GetAttributeValuesResponse
instance GHC.Show.Show Network.AWS.Pricing.GetAttributeValues.GetAttributeValuesResponse
instance GHC.Read.Read Network.AWS.Pricing.GetAttributeValues.GetAttributeValuesResponse
instance GHC.Classes.Eq Network.AWS.Pricing.GetAttributeValues.GetAttributeValuesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance Control.DeepSeq.NFData Network.AWS.Pricing.GetAttributeValues.GetAttributeValuesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance Data.Hashable.Class.Hashable Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance Control.DeepSeq.NFData Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance Network.AWS.Data.Path.ToPath Network.AWS.Pricing.GetAttributeValues.GetAttributeValues
instance Network.AWS.Data.Query.ToQuery Network.AWS.Pricing.GetAttributeValues.GetAttributeValues


-- | Returns the metadata for one service or a list of the metadata for all
--   services. Use this without a service code to get the service codes for
--   all services. Use it with a service code, such as <tt>AmazonEC2</tt>,
--   to get information specific to that service, such as the attribute
--   names available for that service. For example, some of the attribute
--   names available for EC2 are <tt>volumeType</tt>,
--   <tt>maxIopsVolume</tt>, <tt>operation</tt>, <tt>locationType</tt>, and
--   <tt>instanceCapacity10xlarge</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Pricing.DescribeServices

-- | <i>See:</i> <a>newDescribeServices</a> smart constructor.
data DescribeServices
DescribeServices' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> DescribeServices

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
[$sel:nextToken:DescribeServices'] :: DescribeServices -> Maybe Text

-- | The maximum number of results that you want returned in the response.
[$sel:maxResults:DescribeServices'] :: DescribeServices -> Maybe Natural

-- | The code for the service whose information you want to retrieve, such
--   as <tt>AmazonEC2</tt>. You can use the <tt>ServiceCode</tt> to filter
--   the results in a <tt>GetProducts</tt> call. To retrieve a list of all
--   services, leave this blank.
[$sel:serviceCode:DescribeServices'] :: DescribeServices -> Maybe Text

-- | The format version that you want the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
[$sel:formatVersion:DescribeServices'] :: DescribeServices -> Maybe Text

-- | Create a value of <a>DescribeServices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeServices'</a>,
--   <a>describeServices_nextToken</a> - The pagination token that
--   indicates the next set of results that you want to retrieve.
--   
--   <a>$sel:maxResults:DescribeServices'</a>,
--   <a>describeServices_maxResults</a> - The maximum number of results
--   that you want returned in the response.
--   
--   <a>$sel:serviceCode:DescribeServices'</a>,
--   <a>describeServices_serviceCode</a> - The code for the service whose
--   information you want to retrieve, such as <tt>AmazonEC2</tt>. You can
--   use the <tt>ServiceCode</tt> to filter the results in a
--   <tt>GetProducts</tt> call. To retrieve a list of all services, leave
--   this blank.
--   
--   <a>$sel:formatVersion:DescribeServices'</a>,
--   <a>describeServices_formatVersion</a> - The format version that you
--   want the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
newDescribeServices :: DescribeServices

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
describeServices_nextToken :: Lens' DescribeServices (Maybe Text)

-- | The maximum number of results that you want returned in the response.
describeServices_maxResults :: Lens' DescribeServices (Maybe Natural)

-- | The code for the service whose information you want to retrieve, such
--   as <tt>AmazonEC2</tt>. You can use the <tt>ServiceCode</tt> to filter
--   the results in a <tt>GetProducts</tt> call. To retrieve a list of all
--   services, leave this blank.
describeServices_serviceCode :: Lens' DescribeServices (Maybe Text)

-- | The format version that you want the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
describeServices_formatVersion :: Lens' DescribeServices (Maybe Text)

-- | <i>See:</i> <a>newDescribeServicesResponse</a> smart constructor.
data DescribeServicesResponse
DescribeServicesResponse' :: Maybe Text -> Maybe [PricingService] -> Maybe Text -> Int -> DescribeServicesResponse

-- | The pagination token for the next set of retreivable results.
[$sel:nextToken:DescribeServicesResponse'] :: DescribeServicesResponse -> Maybe Text

-- | The service metadata for the service or services in the response.
[$sel:services:DescribeServicesResponse'] :: DescribeServicesResponse -> Maybe [PricingService]

-- | The format version of the response. For example, <tt>aws_v1</tt>.
[$sel:formatVersion:DescribeServicesResponse'] :: DescribeServicesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeServicesResponse'] :: DescribeServicesResponse -> Int

-- | Create a value of <a>DescribeServicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeServices'</a>,
--   <a>describeServicesResponse_nextToken</a> - The pagination token for
--   the next set of retreivable results.
--   
--   <a>$sel:services:DescribeServicesResponse'</a>,
--   <a>describeServicesResponse_services</a> - The service metadata for
--   the service or services in the response.
--   
--   <a>$sel:formatVersion:DescribeServices'</a>,
--   <a>describeServicesResponse_formatVersion</a> - The format version of
--   the response. For example, <tt>aws_v1</tt>.
--   
--   <a>$sel:httpStatus:DescribeServicesResponse'</a>,
--   <a>describeServicesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeServicesResponse :: Int -> DescribeServicesResponse

-- | The pagination token for the next set of retreivable results.
describeServicesResponse_nextToken :: Lens' DescribeServicesResponse (Maybe Text)

-- | The service metadata for the service or services in the response.
describeServicesResponse_services :: Lens' DescribeServicesResponse (Maybe [PricingService])

-- | The format version of the response. For example, <tt>aws_v1</tt>.
describeServicesResponse_formatVersion :: Lens' DescribeServicesResponse (Maybe Text)

-- | The response's http status code.
describeServicesResponse_httpStatus :: Lens' DescribeServicesResponse Int
instance GHC.Generics.Generic Network.AWS.Pricing.DescribeServices.DescribeServices
instance GHC.Show.Show Network.AWS.Pricing.DescribeServices.DescribeServices
instance GHC.Read.Read Network.AWS.Pricing.DescribeServices.DescribeServices
instance GHC.Classes.Eq Network.AWS.Pricing.DescribeServices.DescribeServices
instance GHC.Generics.Generic Network.AWS.Pricing.DescribeServices.DescribeServicesResponse
instance GHC.Show.Show Network.AWS.Pricing.DescribeServices.DescribeServicesResponse
instance GHC.Read.Read Network.AWS.Pricing.DescribeServices.DescribeServicesResponse
instance GHC.Classes.Eq Network.AWS.Pricing.DescribeServices.DescribeServicesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Pricing.DescribeServices.DescribeServices
instance Control.DeepSeq.NFData Network.AWS.Pricing.DescribeServices.DescribeServicesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Pricing.DescribeServices.DescribeServices
instance Data.Hashable.Class.Hashable Network.AWS.Pricing.DescribeServices.DescribeServices
instance Control.DeepSeq.NFData Network.AWS.Pricing.DescribeServices.DescribeServices
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Pricing.DescribeServices.DescribeServices
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Pricing.DescribeServices.DescribeServices
instance Network.AWS.Data.Path.ToPath Network.AWS.Pricing.DescribeServices.DescribeServices
instance Network.AWS.Data.Query.ToQuery Network.AWS.Pricing.DescribeServices.DescribeServices


module Network.AWS.Pricing.Lens

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
getProducts_nextToken :: Lens' GetProducts (Maybe Text)

-- | The maximum number of results to return in the response.
getProducts_maxResults :: Lens' GetProducts (Maybe Natural)

-- | The code for the service whose products you want to retrieve.
getProducts_serviceCode :: Lens' GetProducts (Maybe Text)

-- | The format version that you want the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
getProducts_formatVersion :: Lens' GetProducts (Maybe Text)

-- | The list of filters that limit the returned products. only products
--   that match all filters are returned.
getProducts_filters :: Lens' GetProducts (Maybe [Filter])

-- | The list of products that match your filters. The list contains both
--   the product metadata and the price information.
getProductsResponse_priceList :: Lens' GetProductsResponse (Maybe [Text])

-- | The pagination token that indicates the next set of results to
--   retrieve.
getProductsResponse_nextToken :: Lens' GetProductsResponse (Maybe Text)

-- | The format version of the response. For example, aws_v1.
getProductsResponse_formatVersion :: Lens' GetProductsResponse (Maybe Text)

-- | The response's http status code.
getProductsResponse_httpStatus :: Lens' GetProductsResponse Int

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
describeServices_nextToken :: Lens' DescribeServices (Maybe Text)

-- | The maximum number of results that you want returned in the response.
describeServices_maxResults :: Lens' DescribeServices (Maybe Natural)

-- | The code for the service whose information you want to retrieve, such
--   as <tt>AmazonEC2</tt>. You can use the <tt>ServiceCode</tt> to filter
--   the results in a <tt>GetProducts</tt> call. To retrieve a list of all
--   services, leave this blank.
describeServices_serviceCode :: Lens' DescribeServices (Maybe Text)

-- | The format version that you want the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
describeServices_formatVersion :: Lens' DescribeServices (Maybe Text)

-- | The pagination token for the next set of retreivable results.
describeServicesResponse_nextToken :: Lens' DescribeServicesResponse (Maybe Text)

-- | The service metadata for the service or services in the response.
describeServicesResponse_services :: Lens' DescribeServicesResponse (Maybe [PricingService])

-- | The format version of the response. For example, <tt>aws_v1</tt>.
describeServicesResponse_formatVersion :: Lens' DescribeServicesResponse (Maybe Text)

-- | The response's http status code.
describeServicesResponse_httpStatus :: Lens' DescribeServicesResponse Int

-- | The pagination token that indicates the next set of results that you
--   want to retrieve.
getAttributeValues_nextToken :: Lens' GetAttributeValues (Maybe Text)

-- | The maximum number of results to return in response.
getAttributeValues_maxResults :: Lens' GetAttributeValues (Maybe Natural)

-- | The service code for the service whose attributes you want to
--   retrieve. For example, if you want the retrieve an EC2 attribute, use
--   <tt>AmazonEC2</tt>.
getAttributeValues_serviceCode :: Lens' GetAttributeValues Text

-- | The name of the attribute that you want to retrieve the values for,
--   such as <tt>volumeType</tt>.
getAttributeValues_attributeName :: Lens' GetAttributeValues Text

-- | The pagination token that indicates the next set of results to
--   retrieve.
getAttributeValuesResponse_nextToken :: Lens' GetAttributeValuesResponse (Maybe Text)

-- | The list of values for an attribute. For example, <tt>Throughput
--   Optimized HDD</tt> and <tt>Provisioned IOPS</tt> are two available
--   values for the <tt>AmazonEC2</tt> <tt>volumeType</tt>.
getAttributeValuesResponse_attributeValues :: Lens' GetAttributeValuesResponse (Maybe [AttributeValue])

-- | The response's http status code.
getAttributeValuesResponse_httpStatus :: Lens' GetAttributeValuesResponse Int

-- | The specific value of an <tt>attributeName</tt>.
attributeValue_value :: Lens' AttributeValue (Maybe Text)

-- | The type of filter that you want to use.
--   
--   Valid values are: <tt>TERM_MATCH</tt>. <tt>TERM_MATCH</tt> returns
--   only products that match both the given filter field and the given
--   value.
filter_type :: Lens' Filter FilterType

-- | The product metadata field that you want to filter on. You can filter
--   by just the service code to see all products for a specific service,
--   filter by just the attribute name to see a specific attribute for
--   multiple services, or use both a service code and an attribute name to
--   retrieve only products that match both fields.
--   
--   Valid values include: <tt>ServiceCode</tt>, and all attribute names
--   
--   For example, you can filter by the <tt>AmazonEC2</tt> service code and
--   the <tt>volumeType</tt> attribute name to get the prices for only
--   Amazon EC2 volumes.
filter_field :: Lens' Filter Text

-- | The service code or attribute value that you want to filter by. If you
--   are filtering by service code this is the actual service code, such as
--   <tt>AmazonEC2</tt>. If you are filtering by attribute name, this is
--   the attribute value that you want the returned products to match, such
--   as a <tt>Provisioned IOPS</tt> volume.
filter_value :: Lens' Filter Text

-- | The code for the Amazon Web Services service.
pricingService_serviceCode :: Lens' PricingService (Maybe Text)

-- | The attributes that are available for this service.
pricingService_attributeNames :: Lens' PricingService (Maybe [Text])


module Network.AWS.Pricing.Waiters


-- | Derived from API version <tt>2017-10-15</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Web Services Price List Service API (Amazon Web Services Price
--   List Service) is a centralized and convenient way to programmatically
--   query Amazon Web Services for services, products, and pricing
--   information. The Amazon Web Services Price List Service uses
--   standardized product attributes such as <tt>Location</tt>, <tt>Storage
--   Class</tt>, and <tt>Operating System</tt>, and provides prices at the
--   SKU level. You can use the Amazon Web Services Price List Service to
--   build cost control and scenario planning tools, reconcile billing
--   data, forecast future spend for budgeting purposes, and provide cost
--   benefit analysis that compare your internal workloads with Amazon Web
--   Services.
--   
--   Use <tt>GetServices</tt> without a service code to retrieve the
--   service codes for all AWS services, then <tt>GetServices</tt> with a
--   service code to retreive the attribute names for that service. After
--   you have the service code and attribute names, you can use
--   <tt>GetAttributeValues</tt> to see what values are available for an
--   attribute. With the service code and an attribute name and value, you
--   can use <tt>GetProducts</tt> to find specific products that you're
--   interested in, such as an <tt>AmazonEC2</tt> instance, with a
--   <tt>Provisioned IOPS</tt> <tt>volumeType</tt>.
--   
--   Service Endpoint
--   
--   Amazon Web Services Price List Service API provides the following two
--   endpoints:
--   
--   <ul>
--   <li>https://api.pricing.us-east-1.amazonaws.com</li>
--   <li>https://api.pricing.ap-south-1.amazonaws.com</li>
--   </ul>
module Network.AWS.Pricing

-- | API version <tt>2017-10-15</tt> of the Amazon Price List Service SDK
--   configuration.
defaultService :: Service

-- | The pagination token expired. Try again without a pagination token.
_ExpiredNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested resource can't be found.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error on the server occurred during the processing of your request.
--   Try again later.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pagination token is invalid. Try again without a pagination token.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters had an invalid value.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetProducts</a> smart constructor.
data GetProducts
GetProducts' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [Filter] -> GetProducts

-- | Create a value of <a>GetProducts</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetProducts'</a>, <a>getProducts_nextToken</a> - The
--   pagination token that indicates the next set of results that you want
--   to retrieve.
--   
--   <a>$sel:maxResults:GetProducts'</a>, <a>getProducts_maxResults</a> -
--   The maximum number of results to return in the response.
--   
--   <a>$sel:serviceCode:GetProducts'</a>, <a>getProducts_serviceCode</a> -
--   The code for the service whose products you want to retrieve.
--   
--   <a>$sel:formatVersion:GetProducts'</a>,
--   <a>getProducts_formatVersion</a> - The format version that you want
--   the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
--   
--   <a>$sel:filters:GetProducts'</a>, <a>getProducts_filters</a> - The
--   list of filters that limit the returned products. only products that
--   match all filters are returned.
newGetProducts :: GetProducts

-- | <i>See:</i> <a>newGetProductsResponse</a> smart constructor.
data GetProductsResponse
GetProductsResponse' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Int -> GetProductsResponse

-- | Create a value of <a>GetProductsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:priceList:GetProductsResponse'</a>,
--   <a>getProductsResponse_priceList</a> - The list of products that match
--   your filters. The list contains both the product metadata and the
--   price information.
--   
--   <a>$sel:nextToken:GetProducts'</a>,
--   <a>getProductsResponse_nextToken</a> - The pagination token that
--   indicates the next set of results to retrieve.
--   
--   <a>$sel:formatVersion:GetProducts'</a>,
--   <a>getProductsResponse_formatVersion</a> - The format version of the
--   response. For example, aws_v1.
--   
--   <a>$sel:httpStatus:GetProductsResponse'</a>,
--   <a>getProductsResponse_httpStatus</a> - The response's http status
--   code.
newGetProductsResponse :: Int -> GetProductsResponse

-- | <i>See:</i> <a>newDescribeServices</a> smart constructor.
data DescribeServices
DescribeServices' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> DescribeServices

-- | Create a value of <a>DescribeServices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeServices'</a>,
--   <a>describeServices_nextToken</a> - The pagination token that
--   indicates the next set of results that you want to retrieve.
--   
--   <a>$sel:maxResults:DescribeServices'</a>,
--   <a>describeServices_maxResults</a> - The maximum number of results
--   that you want returned in the response.
--   
--   <a>$sel:serviceCode:DescribeServices'</a>,
--   <a>describeServices_serviceCode</a> - The code for the service whose
--   information you want to retrieve, such as <tt>AmazonEC2</tt>. You can
--   use the <tt>ServiceCode</tt> to filter the results in a
--   <tt>GetProducts</tt> call. To retrieve a list of all services, leave
--   this blank.
--   
--   <a>$sel:formatVersion:DescribeServices'</a>,
--   <a>describeServices_formatVersion</a> - The format version that you
--   want the response to be in.
--   
--   Valid values are: <tt>aws_v1</tt>
newDescribeServices :: DescribeServices

-- | <i>See:</i> <a>newDescribeServicesResponse</a> smart constructor.
data DescribeServicesResponse
DescribeServicesResponse' :: Maybe Text -> Maybe [PricingService] -> Maybe Text -> Int -> DescribeServicesResponse

-- | Create a value of <a>DescribeServicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeServices'</a>,
--   <a>describeServicesResponse_nextToken</a> - The pagination token for
--   the next set of retreivable results.
--   
--   <a>$sel:services:DescribeServicesResponse'</a>,
--   <a>describeServicesResponse_services</a> - The service metadata for
--   the service or services in the response.
--   
--   <a>$sel:formatVersion:DescribeServices'</a>,
--   <a>describeServicesResponse_formatVersion</a> - The format version of
--   the response. For example, <tt>aws_v1</tt>.
--   
--   <a>$sel:httpStatus:DescribeServicesResponse'</a>,
--   <a>describeServicesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeServicesResponse :: Int -> DescribeServicesResponse

-- | <i>See:</i> <a>newGetAttributeValues</a> smart constructor.
data GetAttributeValues
GetAttributeValues' :: Maybe Text -> Maybe Natural -> Text -> Text -> GetAttributeValues

-- | Create a value of <a>GetAttributeValues</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAttributeValues'</a>,
--   <a>getAttributeValues_nextToken</a> - The pagination token that
--   indicates the next set of results that you want to retrieve.
--   
--   <a>$sel:maxResults:GetAttributeValues'</a>,
--   <a>getAttributeValues_maxResults</a> - The maximum number of results
--   to return in response.
--   
--   <a>$sel:serviceCode:GetAttributeValues'</a>,
--   <a>getAttributeValues_serviceCode</a> - The service code for the
--   service whose attributes you want to retrieve. For example, if you
--   want the retrieve an EC2 attribute, use <tt>AmazonEC2</tt>.
--   
--   <a>$sel:attributeName:GetAttributeValues'</a>,
--   <a>getAttributeValues_attributeName</a> - The name of the attribute
--   that you want to retrieve the values for, such as <tt>volumeType</tt>.
newGetAttributeValues :: Text -> Text -> GetAttributeValues

-- | <i>See:</i> <a>newGetAttributeValuesResponse</a> smart constructor.
data GetAttributeValuesResponse
GetAttributeValuesResponse' :: Maybe Text -> Maybe [AttributeValue] -> Int -> GetAttributeValuesResponse

-- | Create a value of <a>GetAttributeValuesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAttributeValues'</a>,
--   <a>getAttributeValuesResponse_nextToken</a> - The pagination token
--   that indicates the next set of results to retrieve.
--   
--   <a>$sel:attributeValues:GetAttributeValuesResponse'</a>,
--   <a>getAttributeValuesResponse_attributeValues</a> - The list of values
--   for an attribute. For example, <tt>Throughput Optimized HDD</tt> and
--   <tt>Provisioned IOPS</tt> are two available values for the
--   <tt>AmazonEC2</tt> <tt>volumeType</tt>.
--   
--   <a>$sel:httpStatus:GetAttributeValuesResponse'</a>,
--   <a>getAttributeValuesResponse_httpStatus</a> - The response's http
--   status code.
newGetAttributeValuesResponse :: Int -> GetAttributeValuesResponse
newtype FilterType
FilterType' :: Text -> FilterType
[fromFilterType] :: FilterType -> Text
pattern FilterType_TERM_MATCH :: FilterType

-- | The values of a given attribute, such as <tt>Throughput Optimized
--   HDD</tt> or <tt>Provisioned IOPS</tt> for the <tt>Amazon EC2</tt>
--   <tt>volumeType</tt> attribute.
--   
--   <i>See:</i> <a>newAttributeValue</a> smart constructor.
data AttributeValue
AttributeValue' :: Maybe Text -> AttributeValue

-- | Create a value of <a>AttributeValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:AttributeValue'</a>, <a>attributeValue_value</a> - The
--   specific value of an <tt>attributeName</tt>.
newAttributeValue :: AttributeValue

-- | The constraints that you want all returned products to match.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: FilterType -> Text -> Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':Filter'</a>, <a>filter_type</a> - The type of filter
--   that you want to use.
--   
--   Valid values are: <tt>TERM_MATCH</tt>. <tt>TERM_MATCH</tt> returns
--   only products that match both the given filter field and the given
--   value.
--   
--   <a>$sel:field:Filter'</a>, <a>filter_field</a> - The product metadata
--   field that you want to filter on. You can filter by just the service
--   code to see all products for a specific service, filter by just the
--   attribute name to see a specific attribute for multiple services, or
--   use both a service code and an attribute name to retrieve only
--   products that match both fields.
--   
--   Valid values include: <tt>ServiceCode</tt>, and all attribute names
--   
--   For example, you can filter by the <tt>AmazonEC2</tt> service code and
--   the <tt>volumeType</tt> attribute name to get the prices for only
--   Amazon EC2 volumes.
--   
--   <a>$sel:value:Filter'</a>, <a>filter_value</a> - The service code or
--   attribute value that you want to filter by. If you are filtering by
--   service code this is the actual service code, such as
--   <tt>AmazonEC2</tt>. If you are filtering by attribute name, this is
--   the attribute value that you want the returned products to match, such
--   as a <tt>Provisioned IOPS</tt> volume.
newFilter :: FilterType -> Text -> Text -> Filter

-- | The metadata for a service, such as the service code and available
--   attribute names.
--   
--   <i>See:</i> <a>newPricingService</a> smart constructor.
data PricingService
PricingService' :: Maybe Text -> Maybe [Text] -> PricingService

-- | Create a value of <a>PricingService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceCode:PricingService'</a>,
--   <a>pricingService_serviceCode</a> - The code for the Amazon Web
--   Services service.
--   
--   <a>$sel:attributeNames:PricingService'</a>,
--   <a>pricingService_attributeNames</a> - The attributes that are
--   available for this service.
newPricingService :: PricingService
