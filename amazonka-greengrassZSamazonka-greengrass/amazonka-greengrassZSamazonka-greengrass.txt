-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-greengrassZSamazonka-greengrass
@version 1.6.1


module Network.AWS.Greengrass.Types.BulkDeployment

-- | Information about a bulk deployment. You cannot start a new bulk
--   deployment while another one is still running or in a non-terminal
--   state.
--   
--   <i>See:</i> <a>newBulkDeployment</a> smart constructor.
data BulkDeployment
BulkDeployment' :: Maybe Text -> Maybe Text -> Maybe Text -> BulkDeployment

-- | The ID of the bulk deployment.
[$sel:bulkDeploymentId:BulkDeployment'] :: BulkDeployment -> Maybe Text

-- | The time, in ISO format, when the deployment was created.
[$sel:createdAt:BulkDeployment'] :: BulkDeployment -> Maybe Text

-- | The ARN of the bulk deployment.
[$sel:bulkDeploymentArn:BulkDeployment'] :: BulkDeployment -> Maybe Text

-- | Create a value of <a>BulkDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:BulkDeployment'</a>,
--   <a>bulkDeployment_bulkDeploymentId</a> - The ID of the bulk
--   deployment.
--   
--   <a>$sel:createdAt:BulkDeployment'</a>, <a>bulkDeployment_createdAt</a>
--   - The time, in ISO format, when the deployment was created.
--   
--   <a>$sel:bulkDeploymentArn:BulkDeployment'</a>,
--   <a>bulkDeployment_bulkDeploymentArn</a> - The ARN of the bulk
--   deployment.
newBulkDeployment :: BulkDeployment

-- | The ID of the bulk deployment.
bulkDeployment_bulkDeploymentId :: Lens' BulkDeployment (Maybe Text)

-- | The time, in ISO format, when the deployment was created.
bulkDeployment_createdAt :: Lens' BulkDeployment (Maybe Text)

-- | The ARN of the bulk deployment.
bulkDeployment_bulkDeploymentArn :: Lens' BulkDeployment (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.BulkDeployment.BulkDeployment
instance GHC.Show.Show Network.AWS.Greengrass.Types.BulkDeployment.BulkDeployment
instance GHC.Read.Read Network.AWS.Greengrass.Types.BulkDeployment.BulkDeployment
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.BulkDeployment.BulkDeployment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.BulkDeployment.BulkDeployment
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.BulkDeployment.BulkDeployment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.BulkDeployment.BulkDeployment


module Network.AWS.Greengrass.Types.BulkDeploymentMetrics

-- | Relevant metrics on input records processed during bulk deployment.
--   
--   <i>See:</i> <a>newBulkDeploymentMetrics</a> smart constructor.
data BulkDeploymentMetrics
BulkDeploymentMetrics' :: Maybe Int -> Maybe Int -> Maybe Int -> BulkDeploymentMetrics

-- | The total number of group records from the input file that have been
--   processed so far, or attempted.
[$sel:recordsProcessed:BulkDeploymentMetrics'] :: BulkDeploymentMetrics -> Maybe Int

-- | The total number of deployment attempts that returned a retryable
--   error. For example, a retry is triggered if the attempt to deploy a
--   group returns a throttling error. ''StartBulkDeployment'' retries a
--   group deployment up to five times.
[$sel:retryAttempts:BulkDeploymentMetrics'] :: BulkDeploymentMetrics -> Maybe Int

-- | The total number of records that returned a non-retryable error. For
--   example, this can occur if a group record from the input file uses an
--   invalid format or specifies a nonexistent group version, or if the
--   execution role doesn't grant permission to deploy a group or group
--   version.
[$sel:invalidInputRecords:BulkDeploymentMetrics'] :: BulkDeploymentMetrics -> Maybe Int

-- | Create a value of <a>BulkDeploymentMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordsProcessed:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_recordsProcessed</a> - The total number of
--   group records from the input file that have been processed so far, or
--   attempted.
--   
--   <a>$sel:retryAttempts:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_retryAttempts</a> - The total number of
--   deployment attempts that returned a retryable error. For example, a
--   retry is triggered if the attempt to deploy a group returns a
--   throttling error. ''StartBulkDeployment'' retries a group deployment
--   up to five times.
--   
--   <a>$sel:invalidInputRecords:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_invalidInputRecords</a> - The total number of
--   records that returned a non-retryable error. For example, this can
--   occur if a group record from the input file uses an invalid format or
--   specifies a nonexistent group version, or if the execution role
--   doesn't grant permission to deploy a group or group version.
newBulkDeploymentMetrics :: BulkDeploymentMetrics

-- | The total number of group records from the input file that have been
--   processed so far, or attempted.
bulkDeploymentMetrics_recordsProcessed :: Lens' BulkDeploymentMetrics (Maybe Int)

-- | The total number of deployment attempts that returned a retryable
--   error. For example, a retry is triggered if the attempt to deploy a
--   group returns a throttling error. ''StartBulkDeployment'' retries a
--   group deployment up to five times.
bulkDeploymentMetrics_retryAttempts :: Lens' BulkDeploymentMetrics (Maybe Int)

-- | The total number of records that returned a non-retryable error. For
--   example, this can occur if a group record from the input file uses an
--   invalid format or specifies a nonexistent group version, or if the
--   execution role doesn't grant permission to deploy a group or group
--   version.
bulkDeploymentMetrics_invalidInputRecords :: Lens' BulkDeploymentMetrics (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.BulkDeploymentMetrics.BulkDeploymentMetrics
instance GHC.Show.Show Network.AWS.Greengrass.Types.BulkDeploymentMetrics.BulkDeploymentMetrics
instance GHC.Read.Read Network.AWS.Greengrass.Types.BulkDeploymentMetrics.BulkDeploymentMetrics
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.BulkDeploymentMetrics.BulkDeploymentMetrics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.BulkDeploymentMetrics.BulkDeploymentMetrics
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.BulkDeploymentMetrics.BulkDeploymentMetrics
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.BulkDeploymentMetrics.BulkDeploymentMetrics


module Network.AWS.Greengrass.Types.BulkDeploymentStatus

-- | The current status of the bulk deployment.
newtype BulkDeploymentStatus
BulkDeploymentStatus' :: Text -> BulkDeploymentStatus
[fromBulkDeploymentStatus] :: BulkDeploymentStatus -> Text
pattern BulkDeploymentStatus_Completed :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Failed :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Initializing :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Running :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Stopped :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Stopping :: BulkDeploymentStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance GHC.Read.Read Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus
instance GHC.Show.Show Network.AWS.Greengrass.Types.BulkDeploymentStatus.BulkDeploymentStatus


module Network.AWS.Greengrass.Types.ConfigurationSyncStatus
newtype ConfigurationSyncStatus
ConfigurationSyncStatus' :: Text -> ConfigurationSyncStatus
[fromConfigurationSyncStatus] :: ConfigurationSyncStatus -> Text
pattern ConfigurationSyncStatus_InSync :: ConfigurationSyncStatus
pattern ConfigurationSyncStatus_OutOfSync :: ConfigurationSyncStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance GHC.Read.Read Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus
instance GHC.Show.Show Network.AWS.Greengrass.Types.ConfigurationSyncStatus.ConfigurationSyncStatus


module Network.AWS.Greengrass.Types.ConnectivityInfo

-- | Information about a Greengrass core's connectivity.
--   
--   <i>See:</i> <a>newConnectivityInfo</a> smart constructor.
data ConnectivityInfo
ConnectivityInfo' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> ConnectivityInfo

-- | Metadata for this endpoint.
[$sel:metadata:ConnectivityInfo'] :: ConnectivityInfo -> Maybe Text

-- | The ID of the connectivity information.
[$sel:id:ConnectivityInfo'] :: ConnectivityInfo -> Maybe Text

-- | The port of the Greengrass core. Usually 8883.
[$sel:portNumber:ConnectivityInfo'] :: ConnectivityInfo -> Maybe Int

-- | The endpoint for the Greengrass core. Can be an IP address or DNS.
[$sel:hostAddress:ConnectivityInfo'] :: ConnectivityInfo -> Maybe Text

-- | Create a value of <a>ConnectivityInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadata:ConnectivityInfo'</a>,
--   <a>connectivityInfo_metadata</a> - Metadata for this endpoint.
--   
--   <a>$sel:id:ConnectivityInfo'</a>, <a>connectivityInfo_id</a> - The ID
--   of the connectivity information.
--   
--   <a>$sel:portNumber:ConnectivityInfo'</a>,
--   <a>connectivityInfo_portNumber</a> - The port of the Greengrass core.
--   Usually 8883.
--   
--   <a>$sel:hostAddress:ConnectivityInfo'</a>,
--   <a>connectivityInfo_hostAddress</a> - The endpoint for the Greengrass
--   core. Can be an IP address or DNS.
newConnectivityInfo :: ConnectivityInfo

-- | Metadata for this endpoint.
connectivityInfo_metadata :: Lens' ConnectivityInfo (Maybe Text)

-- | The ID of the connectivity information.
connectivityInfo_id :: Lens' ConnectivityInfo (Maybe Text)

-- | The port of the Greengrass core. Usually 8883.
connectivityInfo_portNumber :: Lens' ConnectivityInfo (Maybe Int)

-- | The endpoint for the Greengrass core. Can be an IP address or DNS.
connectivityInfo_hostAddress :: Lens' ConnectivityInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.ConnectivityInfo.ConnectivityInfo
instance GHC.Show.Show Network.AWS.Greengrass.Types.ConnectivityInfo.ConnectivityInfo
instance GHC.Read.Read Network.AWS.Greengrass.Types.ConnectivityInfo.ConnectivityInfo
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.ConnectivityInfo.ConnectivityInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.ConnectivityInfo.ConnectivityInfo
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.ConnectivityInfo.ConnectivityInfo
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.ConnectivityInfo.ConnectivityInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.ConnectivityInfo.ConnectivityInfo


module Network.AWS.Greengrass.Types.Connector

-- | Information about a connector. Connectors run on the Greengrass core
--   and contain built-in integration with local infrastructure, device
--   protocols, AWS, and other cloud services.
--   
--   <i>See:</i> <a>newConnector</a> smart constructor.
data Connector
Connector' :: Maybe (HashMap Text Text) -> Text -> Text -> Connector

-- | The parameters or configuration that the connector uses.
[$sel:parameters:Connector'] :: Connector -> Maybe (HashMap Text Text)

-- | The ARN of the connector.
[$sel:connectorArn:Connector'] :: Connector -> Text

-- | A descriptive or arbitrary ID for the connector. This value must be
--   unique within the connector definition version. Max length is 128
--   characters with pattern [a-zA-Z0-9:_-]+.
[$sel:id:Connector'] :: Connector -> Text

-- | Create a value of <a>Connector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:Connector'</a>, <a>connector_parameters</a> - The
--   parameters or configuration that the connector uses.
--   
--   <a>$sel:connectorArn:Connector'</a>, <a>connector_connectorArn</a> -
--   The ARN of the connector.
--   
--   <a>$sel:id:Connector'</a>, <a>connector_id</a> - A descriptive or
--   arbitrary ID for the connector. This value must be unique within the
--   connector definition version. Max length is 128 characters with
--   pattern [a-zA-Z0-9:_-]+.
newConnector :: Text -> Text -> Connector

-- | The parameters or configuration that the connector uses.
connector_parameters :: Lens' Connector (Maybe (HashMap Text Text))

-- | The ARN of the connector.
connector_connectorArn :: Lens' Connector Text

-- | A descriptive or arbitrary ID for the connector. This value must be
--   unique within the connector definition version. Max length is 128
--   characters with pattern [a-zA-Z0-9:_-]+.
connector_id :: Lens' Connector Text
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Connector.Connector
instance GHC.Show.Show Network.AWS.Greengrass.Types.Connector.Connector
instance GHC.Read.Read Network.AWS.Greengrass.Types.Connector.Connector
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Connector.Connector
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Connector.Connector
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Connector.Connector
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Connector.Connector
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.Connector.Connector


module Network.AWS.Greengrass.Types.ConnectorDefinitionVersion

-- | Information about the connector definition version, which is a
--   container for connectors.
--   
--   <i>See:</i> <a>newConnectorDefinitionVersion</a> smart constructor.
data ConnectorDefinitionVersion
ConnectorDefinitionVersion' :: Maybe [Connector] -> ConnectorDefinitionVersion

-- | A list of references to connectors in this version, with their
--   corresponding configuration settings.
[$sel:connectors:ConnectorDefinitionVersion'] :: ConnectorDefinitionVersion -> Maybe [Connector]

-- | Create a value of <a>ConnectorDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectors:ConnectorDefinitionVersion'</a>,
--   <a>connectorDefinitionVersion_connectors</a> - A list of references to
--   connectors in this version, with their corresponding configuration
--   settings.
newConnectorDefinitionVersion :: ConnectorDefinitionVersion

-- | A list of references to connectors in this version, with their
--   corresponding configuration settings.
connectorDefinitionVersion_connectors :: Lens' ConnectorDefinitionVersion (Maybe [Connector])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.ConnectorDefinitionVersion.ConnectorDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.Types.ConnectorDefinitionVersion.ConnectorDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.Types.ConnectorDefinitionVersion.ConnectorDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.ConnectorDefinitionVersion.ConnectorDefinitionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.ConnectorDefinitionVersion.ConnectorDefinitionVersion
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.ConnectorDefinitionVersion.ConnectorDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.ConnectorDefinitionVersion.ConnectorDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.ConnectorDefinitionVersion.ConnectorDefinitionVersion


module Network.AWS.Greengrass.Types.Core

-- | Information about a core.
--   
--   <i>See:</i> <a>newCore</a> smart constructor.
data Core
Core' :: Maybe Bool -> Text -> Text -> Text -> Core

-- | If true, the core's local shadow is automatically synced with the
--   cloud.
[$sel:syncShadow:Core'] :: Core -> Maybe Bool

-- | The ARN of the thing which is the core.
[$sel:thingArn:Core'] :: Core -> Text

-- | A descriptive or arbitrary ID for the core. This value must be unique
--   within the core definition version. Max length is 128 characters with
--   pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:Core'] :: Core -> Text

-- | The ARN of the certificate associated with the core.
[$sel:certificateArn:Core'] :: Core -> Text

-- | Create a value of <a>Core</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:syncShadow:Core'</a>, <a>core_syncShadow</a> - If true, the
--   core's local shadow is automatically synced with the cloud.
--   
--   <a>$sel:thingArn:Core'</a>, <a>core_thingArn</a> - The ARN of the
--   thing which is the core.
--   
--   <a>$sel:id:Core'</a>, <a>core_id</a> - A descriptive or arbitrary ID
--   for the core. This value must be unique within the core definition
--   version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:certificateArn:Core'</a>, <a>core_certificateArn</a> - The ARN
--   of the certificate associated with the core.
newCore :: Text -> Text -> Text -> Core

-- | If true, the core's local shadow is automatically synced with the
--   cloud.
core_syncShadow :: Lens' Core (Maybe Bool)

-- | The ARN of the thing which is the core.
core_thingArn :: Lens' Core Text

-- | A descriptive or arbitrary ID for the core. This value must be unique
--   within the core definition version. Max length is 128 characters with
--   pattern ''[a-zA-Z0-9:_-]+''.
core_id :: Lens' Core Text

-- | The ARN of the certificate associated with the core.
core_certificateArn :: Lens' Core Text
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Core.Core
instance GHC.Show.Show Network.AWS.Greengrass.Types.Core.Core
instance GHC.Read.Read Network.AWS.Greengrass.Types.Core.Core
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Core.Core
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Core.Core
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Core.Core
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Core.Core
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.Core.Core


module Network.AWS.Greengrass.Types.CoreDefinitionVersion

-- | Information about a core definition version.
--   
--   <i>See:</i> <a>newCoreDefinitionVersion</a> smart constructor.
data CoreDefinitionVersion
CoreDefinitionVersion' :: Maybe [Core] -> CoreDefinitionVersion

-- | A list of cores in the core definition version.
[$sel:cores:CoreDefinitionVersion'] :: CoreDefinitionVersion -> Maybe [Core]

-- | Create a value of <a>CoreDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cores:CoreDefinitionVersion'</a>,
--   <a>coreDefinitionVersion_cores</a> - A list of cores in the core
--   definition version.
newCoreDefinitionVersion :: CoreDefinitionVersion

-- | A list of cores in the core definition version.
coreDefinitionVersion_cores :: Lens' CoreDefinitionVersion (Maybe [Core])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.CoreDefinitionVersion.CoreDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.Types.CoreDefinitionVersion.CoreDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.Types.CoreDefinitionVersion.CoreDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.CoreDefinitionVersion.CoreDefinitionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.CoreDefinitionVersion.CoreDefinitionVersion
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.CoreDefinitionVersion.CoreDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.CoreDefinitionVersion.CoreDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.CoreDefinitionVersion.CoreDefinitionVersion


module Network.AWS.Greengrass.Types.DefinitionInformation

-- | Information about a definition.
--   
--   <i>See:</i> <a>newDefinitionInformation</a> smart constructor.
data DefinitionInformation
DefinitionInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> DefinitionInformation

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The ID of the definition.
[$sel:id:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The name of the definition.
[$sel:name:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:DefinitionInformation'] :: DefinitionInformation -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | Create a value of <a>DefinitionInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:DefinitionInformation'</a>,
--   <a>definitionInformation_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:DefinitionInformation'</a>,
--   <a>definitionInformation_latestVersionArn</a> - The ARN of the latest
--   version associated with the definition.
--   
--   <a>$sel:latestVersion:DefinitionInformation'</a>,
--   <a>definitionInformation_latestVersion</a> - The ID of the latest
--   version associated with the definition.
--   
--   <a>$sel:arn:DefinitionInformation'</a>,
--   <a>definitionInformation_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:DefinitionInformation'</a>, <a>definitionInformation_id</a>
--   - The ID of the definition.
--   
--   <a>$sel:name:DefinitionInformation'</a>,
--   <a>definitionInformation_name</a> - The name of the definition.
--   
--   <a>$sel:tags:DefinitionInformation'</a>,
--   <a>definitionInformation_tags</a> - Tag(s) attached to the resource
--   arn.
--   
--   <a>$sel:lastUpdatedTimestamp:DefinitionInformation'</a>,
--   <a>definitionInformation_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
newDefinitionInformation :: DefinitionInformation

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
definitionInformation_creationTimestamp :: Lens' DefinitionInformation (Maybe Text)

-- | The ARN of the latest version associated with the definition.
definitionInformation_latestVersionArn :: Lens' DefinitionInformation (Maybe Text)

-- | The ID of the latest version associated with the definition.
definitionInformation_latestVersion :: Lens' DefinitionInformation (Maybe Text)

-- | The ARN of the definition.
definitionInformation_arn :: Lens' DefinitionInformation (Maybe Text)

-- | The ID of the definition.
definitionInformation_id :: Lens' DefinitionInformation (Maybe Text)

-- | The name of the definition.
definitionInformation_name :: Lens' DefinitionInformation (Maybe Text)

-- | Tag(s) attached to the resource arn.
definitionInformation_tags :: Lens' DefinitionInformation (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
definitionInformation_lastUpdatedTimestamp :: Lens' DefinitionInformation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.DefinitionInformation.DefinitionInformation
instance GHC.Show.Show Network.AWS.Greengrass.Types.DefinitionInformation.DefinitionInformation
instance GHC.Read.Read Network.AWS.Greengrass.Types.DefinitionInformation.DefinitionInformation
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.DefinitionInformation.DefinitionInformation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.DefinitionInformation.DefinitionInformation
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.DefinitionInformation.DefinitionInformation
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.DefinitionInformation.DefinitionInformation


module Network.AWS.Greengrass.Types.DeploymentType

-- | The type of deployment. When used for ''CreateDeployment'', only
--   ''NewDeployment'' and ''Redeployment'' are valid.
newtype DeploymentType
DeploymentType' :: Text -> DeploymentType
[fromDeploymentType] :: DeploymentType -> Text
pattern DeploymentType_ForceResetDeployment :: DeploymentType
pattern DeploymentType_NewDeployment :: DeploymentType
pattern DeploymentType_Redeployment :: DeploymentType
pattern DeploymentType_ResetDeployment :: DeploymentType
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance GHC.Read.Read Network.AWS.Greengrass.Types.DeploymentType.DeploymentType
instance GHC.Show.Show Network.AWS.Greengrass.Types.DeploymentType.DeploymentType


module Network.AWS.Greengrass.Types.Deployment

-- | Information about a deployment.
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Text -> Maybe DeploymentType -> Maybe Text -> Maybe Text -> Maybe Text -> Deployment

-- | The ID of the deployment.
[$sel:deploymentId:Deployment'] :: Deployment -> Maybe Text

-- | The type of the deployment.
[$sel:deploymentType:Deployment'] :: Deployment -> Maybe DeploymentType

-- | The time, in milliseconds since the epoch, when the deployment was
--   created.
[$sel:createdAt:Deployment'] :: Deployment -> Maybe Text

-- | The ARN of the deployment.
[$sel:deploymentArn:Deployment'] :: Deployment -> Maybe Text

-- | The ARN of the group for this deployment.
[$sel:groupArn:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Deployment'</a>, <a>deployment_deploymentId</a> -
--   The ID of the deployment.
--   
--   <a>$sel:deploymentType:Deployment'</a>,
--   <a>deployment_deploymentType</a> - The type of the deployment.
--   
--   <a>$sel:createdAt:Deployment'</a>, <a>deployment_createdAt</a> - The
--   time, in milliseconds since the epoch, when the deployment was
--   created.
--   
--   <a>$sel:deploymentArn:Deployment'</a>, <a>deployment_deploymentArn</a>
--   - The ARN of the deployment.
--   
--   <a>$sel:groupArn:Deployment'</a>, <a>deployment_groupArn</a> - The ARN
--   of the group for this deployment.
newDeployment :: Deployment

-- | The ID of the deployment.
deployment_deploymentId :: Lens' Deployment (Maybe Text)

-- | The type of the deployment.
deployment_deploymentType :: Lens' Deployment (Maybe DeploymentType)

-- | The time, in milliseconds since the epoch, when the deployment was
--   created.
deployment_createdAt :: Lens' Deployment (Maybe Text)

-- | The ARN of the deployment.
deployment_deploymentArn :: Lens' Deployment (Maybe Text)

-- | The ARN of the group for this deployment.
deployment_groupArn :: Lens' Deployment (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Deployment.Deployment
instance GHC.Show.Show Network.AWS.Greengrass.Types.Deployment.Deployment
instance GHC.Read.Read Network.AWS.Greengrass.Types.Deployment.Deployment
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Deployment.Deployment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Deployment.Deployment
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Deployment.Deployment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Deployment.Deployment


module Network.AWS.Greengrass.Types.Device

-- | Information about a device.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Bool -> Text -> Text -> Text -> Device

-- | If true, the device's local shadow will be automatically synced with
--   the cloud.
[$sel:syncShadow:Device'] :: Device -> Maybe Bool

-- | The thing ARN of the device.
[$sel:thingArn:Device'] :: Device -> Text

-- | A descriptive or arbitrary ID for the device. This value must be
--   unique within the device definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:Device'] :: Device -> Text

-- | The ARN of the certificate associated with the device.
[$sel:certificateArn:Device'] :: Device -> Text

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:syncShadow:Device'</a>, <a>device_syncShadow</a> - If true,
--   the device's local shadow will be automatically synced with the cloud.
--   
--   <a>$sel:thingArn:Device'</a>, <a>device_thingArn</a> - The thing ARN
--   of the device.
--   
--   <a>$sel:id:Device'</a>, <a>device_id</a> - A descriptive or arbitrary
--   ID for the device. This value must be unique within the device
--   definition version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:certificateArn:Device'</a>, <a>device_certificateArn</a> - The
--   ARN of the certificate associated with the device.
newDevice :: Text -> Text -> Text -> Device

-- | If true, the device's local shadow will be automatically synced with
--   the cloud.
device_syncShadow :: Lens' Device (Maybe Bool)

-- | The thing ARN of the device.
device_thingArn :: Lens' Device Text

-- | A descriptive or arbitrary ID for the device. This value must be
--   unique within the device definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
device_id :: Lens' Device Text

-- | The ARN of the certificate associated with the device.
device_certificateArn :: Lens' Device Text
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Device.Device
instance GHC.Show.Show Network.AWS.Greengrass.Types.Device.Device
instance GHC.Read.Read Network.AWS.Greengrass.Types.Device.Device
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Device.Device
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Device.Device
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Device.Device
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Device.Device
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.Device.Device


module Network.AWS.Greengrass.Types.DeviceDefinitionVersion

-- | Information about a device definition version.
--   
--   <i>See:</i> <a>newDeviceDefinitionVersion</a> smart constructor.
data DeviceDefinitionVersion
DeviceDefinitionVersion' :: Maybe [Device] -> DeviceDefinitionVersion

-- | A list of devices in the definition version.
[$sel:devices:DeviceDefinitionVersion'] :: DeviceDefinitionVersion -> Maybe [Device]

-- | Create a value of <a>DeviceDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devices:DeviceDefinitionVersion'</a>,
--   <a>deviceDefinitionVersion_devices</a> - A list of devices in the
--   definition version.
newDeviceDefinitionVersion :: DeviceDefinitionVersion

-- | A list of devices in the definition version.
deviceDefinitionVersion_devices :: Lens' DeviceDefinitionVersion (Maybe [Device])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.DeviceDefinitionVersion.DeviceDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.Types.DeviceDefinitionVersion.DeviceDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.Types.DeviceDefinitionVersion.DeviceDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.DeviceDefinitionVersion.DeviceDefinitionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.DeviceDefinitionVersion.DeviceDefinitionVersion
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.DeviceDefinitionVersion.DeviceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.DeviceDefinitionVersion.DeviceDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.DeviceDefinitionVersion.DeviceDefinitionVersion


module Network.AWS.Greengrass.Types.EncodingType
newtype EncodingType
EncodingType' :: Text -> EncodingType
[fromEncodingType] :: EncodingType -> Text
pattern EncodingType_Binary :: EncodingType
pattern EncodingType_Json :: EncodingType
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance GHC.Read.Read Network.AWS.Greengrass.Types.EncodingType.EncodingType
instance GHC.Show.Show Network.AWS.Greengrass.Types.EncodingType.EncodingType


module Network.AWS.Greengrass.Types.ErrorDetail

-- | Details about the error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | A detailed error message.
[$sel:detailedErrorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | A detailed error code.
[$sel:detailedErrorCode:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detailedErrorMessage:ErrorDetail'</a>,
--   <a>errorDetail_detailedErrorMessage</a> - A detailed error message.
--   
--   <a>$sel:detailedErrorCode:ErrorDetail'</a>,
--   <a>errorDetail_detailedErrorCode</a> - A detailed error code.
newErrorDetail :: ErrorDetail

-- | A detailed error message.
errorDetail_detailedErrorMessage :: Lens' ErrorDetail (Maybe Text)

-- | A detailed error code.
errorDetail_detailedErrorCode :: Lens' ErrorDetail (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.ErrorDetail.ErrorDetail
instance GHC.Show.Show Network.AWS.Greengrass.Types.ErrorDetail.ErrorDetail
instance GHC.Read.Read Network.AWS.Greengrass.Types.ErrorDetail.ErrorDetail
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.ErrorDetail.ErrorDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.ErrorDetail.ErrorDetail
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.ErrorDetail.ErrorDetail
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.ErrorDetail.ErrorDetail


module Network.AWS.Greengrass.Types.BulkDeploymentResult

-- | Information about an individual group deployment in a bulk deployment
--   operation.
--   
--   <i>See:</i> <a>newBulkDeploymentResult</a> smart constructor.
data BulkDeploymentResult
BulkDeploymentResult' :: Maybe Text -> Maybe DeploymentType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ErrorDetail] -> BulkDeploymentResult

-- | The ID of the group deployment.
[$sel:deploymentId:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The type of the deployment.
[$sel:deploymentType:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe DeploymentType

-- | The time, in ISO format, when the deployment was created.
[$sel:createdAt:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The current status of the group deployment: ''InProgress'',
--   ''Building'', ''Success'', or ''Failure''.
[$sel:deploymentStatus:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The ARN of the group deployment.
[$sel:deploymentArn:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The error message for a failed deployment
[$sel:errorMessage:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The ARN of the Greengrass group.
[$sel:groupArn:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | Details about the error.
[$sel:errorDetails:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe [ErrorDetail]

-- | Create a value of <a>BulkDeploymentResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentId</a> - The ID of the group
--   deployment.
--   
--   <a>$sel:deploymentType:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentType</a> - The type of the
--   deployment.
--   
--   <a>$sel:createdAt:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_createdAt</a> - The time, in ISO format, when
--   the deployment was created.
--   
--   <a>$sel:deploymentStatus:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentStatus</a> - The current status of
--   the group deployment: ''InProgress'', ''Building'', ''Success'', or
--   ''Failure''.
--   
--   <a>$sel:deploymentArn:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentArn</a> - The ARN of the group
--   deployment.
--   
--   <a>$sel:errorMessage:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_errorMessage</a> - The error message for a
--   failed deployment
--   
--   <a>$sel:groupArn:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_groupArn</a> - The ARN of the Greengrass
--   group.
--   
--   <a>$sel:errorDetails:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_errorDetails</a> - Details about the error.
newBulkDeploymentResult :: BulkDeploymentResult

-- | The ID of the group deployment.
bulkDeploymentResult_deploymentId :: Lens' BulkDeploymentResult (Maybe Text)

-- | The type of the deployment.
bulkDeploymentResult_deploymentType :: Lens' BulkDeploymentResult (Maybe DeploymentType)

-- | The time, in ISO format, when the deployment was created.
bulkDeploymentResult_createdAt :: Lens' BulkDeploymentResult (Maybe Text)

-- | The current status of the group deployment: ''InProgress'',
--   ''Building'', ''Success'', or ''Failure''.
bulkDeploymentResult_deploymentStatus :: Lens' BulkDeploymentResult (Maybe Text)

-- | The ARN of the group deployment.
bulkDeploymentResult_deploymentArn :: Lens' BulkDeploymentResult (Maybe Text)

-- | The error message for a failed deployment
bulkDeploymentResult_errorMessage :: Lens' BulkDeploymentResult (Maybe Text)

-- | The ARN of the Greengrass group.
bulkDeploymentResult_groupArn :: Lens' BulkDeploymentResult (Maybe Text)

-- | Details about the error.
bulkDeploymentResult_errorDetails :: Lens' BulkDeploymentResult (Maybe [ErrorDetail])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.BulkDeploymentResult.BulkDeploymentResult
instance GHC.Show.Show Network.AWS.Greengrass.Types.BulkDeploymentResult.BulkDeploymentResult
instance GHC.Read.Read Network.AWS.Greengrass.Types.BulkDeploymentResult.BulkDeploymentResult
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.BulkDeploymentResult.BulkDeploymentResult
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.BulkDeploymentResult.BulkDeploymentResult
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.BulkDeploymentResult.BulkDeploymentResult
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.BulkDeploymentResult.BulkDeploymentResult


module Network.AWS.Greengrass.Types.FunctionIsolationMode

-- | Specifies whether the Lambda function runs in a Greengrass container
--   (default) or without containerization. Unless your scenario requires
--   that you run without containerization, we recommend that you run in a
--   Greengrass container. Omit this value to run the Lambda function with
--   the default containerization for the group.
newtype FunctionIsolationMode
FunctionIsolationMode' :: Text -> FunctionIsolationMode
[fromFunctionIsolationMode] :: FunctionIsolationMode -> Text
pattern FunctionIsolationMode_GreengrassContainer :: FunctionIsolationMode
pattern FunctionIsolationMode_NoContainer :: FunctionIsolationMode
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance GHC.Read.Read Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode
instance GHC.Show.Show Network.AWS.Greengrass.Types.FunctionIsolationMode.FunctionIsolationMode


module Network.AWS.Greengrass.Types.FunctionRunAsConfig

-- | Specifies the user and group whose permissions are used when running
--   the Lambda function. You can specify one or both values to override
--   the default values. We recommend that you avoid running as root unless
--   absolutely necessary to minimize the risk of unintended changes or
--   malicious attacks. To run as root, you must set ''IsolationMode'' to
--   ''NoContainer'' and update config.json in ''greengrass-root/config''
--   to set ''allowFunctionsToRunAsRoot'' to ''yes''.
--   
--   <i>See:</i> <a>newFunctionRunAsConfig</a> smart constructor.
data FunctionRunAsConfig
FunctionRunAsConfig' :: Maybe Int -> Maybe Int -> FunctionRunAsConfig

-- | The group ID whose permissions are used to run a Lambda function.
[$sel:gid:FunctionRunAsConfig'] :: FunctionRunAsConfig -> Maybe Int

-- | The user ID whose permissions are used to run a Lambda function.
[$sel:uid:FunctionRunAsConfig'] :: FunctionRunAsConfig -> Maybe Int

-- | Create a value of <a>FunctionRunAsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gid:FunctionRunAsConfig'</a>, <a>functionRunAsConfig_gid</a> -
--   The group ID whose permissions are used to run a Lambda function.
--   
--   <a>$sel:uid:FunctionRunAsConfig'</a>, <a>functionRunAsConfig_uid</a> -
--   The user ID whose permissions are used to run a Lambda function.
newFunctionRunAsConfig :: FunctionRunAsConfig

-- | The group ID whose permissions are used to run a Lambda function.
functionRunAsConfig_gid :: Lens' FunctionRunAsConfig (Maybe Int)

-- | The user ID whose permissions are used to run a Lambda function.
functionRunAsConfig_uid :: Lens' FunctionRunAsConfig (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.FunctionRunAsConfig.FunctionRunAsConfig
instance GHC.Show.Show Network.AWS.Greengrass.Types.FunctionRunAsConfig.FunctionRunAsConfig
instance GHC.Read.Read Network.AWS.Greengrass.Types.FunctionRunAsConfig.FunctionRunAsConfig
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.FunctionRunAsConfig.FunctionRunAsConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.FunctionRunAsConfig.FunctionRunAsConfig
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.FunctionRunAsConfig.FunctionRunAsConfig
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.FunctionRunAsConfig.FunctionRunAsConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.FunctionRunAsConfig.FunctionRunAsConfig


module Network.AWS.Greengrass.Types.FunctionExecutionConfig

-- | Configuration information that specifies how a Lambda function runs.
--   
--   <i>See:</i> <a>newFunctionExecutionConfig</a> smart constructor.
data FunctionExecutionConfig
FunctionExecutionConfig' :: Maybe FunctionIsolationMode -> Maybe FunctionRunAsConfig -> FunctionExecutionConfig
[$sel:isolationMode:FunctionExecutionConfig'] :: FunctionExecutionConfig -> Maybe FunctionIsolationMode
[$sel:runAs:FunctionExecutionConfig'] :: FunctionExecutionConfig -> Maybe FunctionRunAsConfig

-- | Create a value of <a>FunctionExecutionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isolationMode:FunctionExecutionConfig'</a>,
--   <a>functionExecutionConfig_isolationMode</a> - Undocumented member.
--   
--   <a>$sel:runAs:FunctionExecutionConfig'</a>,
--   <a>functionExecutionConfig_runAs</a> - Undocumented member.
newFunctionExecutionConfig :: FunctionExecutionConfig

-- | Undocumented member.
functionExecutionConfig_isolationMode :: Lens' FunctionExecutionConfig (Maybe FunctionIsolationMode)

-- | Undocumented member.
functionExecutionConfig_runAs :: Lens' FunctionExecutionConfig (Maybe FunctionRunAsConfig)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.FunctionExecutionConfig.FunctionExecutionConfig
instance GHC.Show.Show Network.AWS.Greengrass.Types.FunctionExecutionConfig.FunctionExecutionConfig
instance GHC.Read.Read Network.AWS.Greengrass.Types.FunctionExecutionConfig.FunctionExecutionConfig
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.FunctionExecutionConfig.FunctionExecutionConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.FunctionExecutionConfig.FunctionExecutionConfig
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.FunctionExecutionConfig.FunctionExecutionConfig
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.FunctionExecutionConfig.FunctionExecutionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.FunctionExecutionConfig.FunctionExecutionConfig


module Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig

-- | Configuration information that specifies how a Lambda function runs.
--   
--   <i>See:</i> <a>newFunctionDefaultExecutionConfig</a> smart
--   constructor.
data FunctionDefaultExecutionConfig
FunctionDefaultExecutionConfig' :: Maybe FunctionIsolationMode -> Maybe FunctionRunAsConfig -> FunctionDefaultExecutionConfig
[$sel:isolationMode:FunctionDefaultExecutionConfig'] :: FunctionDefaultExecutionConfig -> Maybe FunctionIsolationMode
[$sel:runAs:FunctionDefaultExecutionConfig'] :: FunctionDefaultExecutionConfig -> Maybe FunctionRunAsConfig

-- | Create a value of <a>FunctionDefaultExecutionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isolationMode:FunctionDefaultExecutionConfig'</a>,
--   <a>functionDefaultExecutionConfig_isolationMode</a> - Undocumented
--   member.
--   
--   <a>$sel:runAs:FunctionDefaultExecutionConfig'</a>,
--   <a>functionDefaultExecutionConfig_runAs</a> - Undocumented member.
newFunctionDefaultExecutionConfig :: FunctionDefaultExecutionConfig

-- | Undocumented member.
functionDefaultExecutionConfig_isolationMode :: Lens' FunctionDefaultExecutionConfig (Maybe FunctionIsolationMode)

-- | Undocumented member.
functionDefaultExecutionConfig_runAs :: Lens' FunctionDefaultExecutionConfig (Maybe FunctionRunAsConfig)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig.FunctionDefaultExecutionConfig
instance GHC.Show.Show Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig.FunctionDefaultExecutionConfig
instance GHC.Read.Read Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig.FunctionDefaultExecutionConfig
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig.FunctionDefaultExecutionConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig.FunctionDefaultExecutionConfig
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig.FunctionDefaultExecutionConfig
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig.FunctionDefaultExecutionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.FunctionDefaultExecutionConfig.FunctionDefaultExecutionConfig


module Network.AWS.Greengrass.Types.FunctionDefaultConfig

-- | The default configuration that applies to all Lambda functions in the
--   group. Individual Lambda functions can override these settings.
--   
--   <i>See:</i> <a>newFunctionDefaultConfig</a> smart constructor.
data FunctionDefaultConfig
FunctionDefaultConfig' :: Maybe FunctionDefaultExecutionConfig -> FunctionDefaultConfig
[$sel:execution:FunctionDefaultConfig'] :: FunctionDefaultConfig -> Maybe FunctionDefaultExecutionConfig

-- | Create a value of <a>FunctionDefaultConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:execution:FunctionDefaultConfig'</a>,
--   <a>functionDefaultConfig_execution</a> - Undocumented member.
newFunctionDefaultConfig :: FunctionDefaultConfig

-- | Undocumented member.
functionDefaultConfig_execution :: Lens' FunctionDefaultConfig (Maybe FunctionDefaultExecutionConfig)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.FunctionDefaultConfig.FunctionDefaultConfig
instance GHC.Show.Show Network.AWS.Greengrass.Types.FunctionDefaultConfig.FunctionDefaultConfig
instance GHC.Read.Read Network.AWS.Greengrass.Types.FunctionDefaultConfig.FunctionDefaultConfig
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.FunctionDefaultConfig.FunctionDefaultConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.FunctionDefaultConfig.FunctionDefaultConfig
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.FunctionDefaultConfig.FunctionDefaultConfig
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.FunctionDefaultConfig.FunctionDefaultConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.FunctionDefaultConfig.FunctionDefaultConfig


module Network.AWS.Greengrass.Types.GroupCertificateAuthorityProperties

-- | Information about a certificate authority for a group.
--   
--   <i>See:</i> <a>newGroupCertificateAuthorityProperties</a> smart
--   constructor.
data GroupCertificateAuthorityProperties
GroupCertificateAuthorityProperties' :: Maybe Text -> Maybe Text -> GroupCertificateAuthorityProperties

-- | The ARN of the certificate authority for the group.
[$sel:groupCertificateAuthorityArn:GroupCertificateAuthorityProperties'] :: GroupCertificateAuthorityProperties -> Maybe Text

-- | The ID of the certificate authority for the group.
[$sel:groupCertificateAuthorityId:GroupCertificateAuthorityProperties'] :: GroupCertificateAuthorityProperties -> Maybe Text

-- | Create a value of <a>GroupCertificateAuthorityProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorityArn:GroupCertificateAuthorityProperties'</a>,
--   <a>groupCertificateAuthorityProperties_groupCertificateAuthorityArn</a>
--   - The ARN of the certificate authority for the group.
--   
--   
--   <a>$sel:groupCertificateAuthorityId:GroupCertificateAuthorityProperties'</a>,
--   <a>groupCertificateAuthorityProperties_groupCertificateAuthorityId</a>
--   - The ID of the certificate authority for the group.
newGroupCertificateAuthorityProperties :: GroupCertificateAuthorityProperties

-- | The ARN of the certificate authority for the group.
groupCertificateAuthorityProperties_groupCertificateAuthorityArn :: Lens' GroupCertificateAuthorityProperties (Maybe Text)

-- | The ID of the certificate authority for the group.
groupCertificateAuthorityProperties_groupCertificateAuthorityId :: Lens' GroupCertificateAuthorityProperties (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.GroupCertificateAuthorityProperties.GroupCertificateAuthorityProperties
instance GHC.Show.Show Network.AWS.Greengrass.Types.GroupCertificateAuthorityProperties.GroupCertificateAuthorityProperties
instance GHC.Read.Read Network.AWS.Greengrass.Types.GroupCertificateAuthorityProperties.GroupCertificateAuthorityProperties
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.GroupCertificateAuthorityProperties.GroupCertificateAuthorityProperties
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.GroupCertificateAuthorityProperties.GroupCertificateAuthorityProperties
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.GroupCertificateAuthorityProperties.GroupCertificateAuthorityProperties
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.GroupCertificateAuthorityProperties.GroupCertificateAuthorityProperties


module Network.AWS.Greengrass.Types.GroupInformation

-- | Information about a group.
--   
--   <i>See:</i> <a>newGroupInformation</a> smart constructor.
data GroupInformation
GroupInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GroupInformation

-- | The time, in milliseconds since the epoch, when the group was created.
[$sel:creationTimestamp:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The ARN of the latest version associated with the group.
[$sel:latestVersionArn:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The ID of the latest version associated with the group.
[$sel:latestVersion:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The ARN of the group.
[$sel:arn:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The ID of the group.
[$sel:id:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The name of the group.
[$sel:name:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The time, in milliseconds since the epoch, when the group was last
--   updated.
[$sel:lastUpdatedTimestamp:GroupInformation'] :: GroupInformation -> Maybe Text

-- | Create a value of <a>GroupInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GroupInformation'</a>,
--   <a>groupInformation_creationTimestamp</a> - The time, in milliseconds
--   since the epoch, when the group was created.
--   
--   <a>$sel:latestVersionArn:GroupInformation'</a>,
--   <a>groupInformation_latestVersionArn</a> - The ARN of the latest
--   version associated with the group.
--   
--   <a>$sel:latestVersion:GroupInformation'</a>,
--   <a>groupInformation_latestVersion</a> - The ID of the latest version
--   associated with the group.
--   
--   <a>$sel:arn:GroupInformation'</a>, <a>groupInformation_arn</a> - The
--   ARN of the group.
--   
--   <a>$sel:id:GroupInformation'</a>, <a>groupInformation_id</a> - The ID
--   of the group.
--   
--   <a>$sel:name:GroupInformation'</a>, <a>groupInformation_name</a> - The
--   name of the group.
--   
--   <a>$sel:lastUpdatedTimestamp:GroupInformation'</a>,
--   <a>groupInformation_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the group was last updated.
newGroupInformation :: GroupInformation

-- | The time, in milliseconds since the epoch, when the group was created.
groupInformation_creationTimestamp :: Lens' GroupInformation (Maybe Text)

-- | The ARN of the latest version associated with the group.
groupInformation_latestVersionArn :: Lens' GroupInformation (Maybe Text)

-- | The ID of the latest version associated with the group.
groupInformation_latestVersion :: Lens' GroupInformation (Maybe Text)

-- | The ARN of the group.
groupInformation_arn :: Lens' GroupInformation (Maybe Text)

-- | The ID of the group.
groupInformation_id :: Lens' GroupInformation (Maybe Text)

-- | The name of the group.
groupInformation_name :: Lens' GroupInformation (Maybe Text)

-- | The time, in milliseconds since the epoch, when the group was last
--   updated.
groupInformation_lastUpdatedTimestamp :: Lens' GroupInformation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.GroupInformation.GroupInformation
instance GHC.Show.Show Network.AWS.Greengrass.Types.GroupInformation.GroupInformation
instance GHC.Read.Read Network.AWS.Greengrass.Types.GroupInformation.GroupInformation
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.GroupInformation.GroupInformation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.GroupInformation.GroupInformation
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.GroupInformation.GroupInformation
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.GroupInformation.GroupInformation


module Network.AWS.Greengrass.Types.GroupOwnerSetting

-- | Group owner related settings for local resources.
--   
--   <i>See:</i> <a>newGroupOwnerSetting</a> smart constructor.
data GroupOwnerSetting
GroupOwnerSetting' :: Maybe Text -> Maybe Bool -> GroupOwnerSetting

-- | The name of the Linux OS group whose privileges will be added to the
--   Lambda process. This field is optional.
[$sel:groupOwner:GroupOwnerSetting'] :: GroupOwnerSetting -> Maybe Text

-- | If true, AWS IoT Greengrass automatically adds the specified Linux OS
--   group owner of the resource to the Lambda process privileges. Thus the
--   Lambda process will have the file access permissions of the added
--   Linux group.
[$sel:autoAddGroupOwner:GroupOwnerSetting'] :: GroupOwnerSetting -> Maybe Bool

-- | Create a value of <a>GroupOwnerSetting</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupOwner:GroupOwnerSetting'</a>,
--   <a>groupOwnerSetting_groupOwner</a> - The name of the Linux OS group
--   whose privileges will be added to the Lambda process. This field is
--   optional.
--   
--   <a>$sel:autoAddGroupOwner:GroupOwnerSetting'</a>,
--   <a>groupOwnerSetting_autoAddGroupOwner</a> - If true, AWS IoT
--   Greengrass automatically adds the specified Linux OS group owner of
--   the resource to the Lambda process privileges. Thus the Lambda process
--   will have the file access permissions of the added Linux group.
newGroupOwnerSetting :: GroupOwnerSetting

-- | The name of the Linux OS group whose privileges will be added to the
--   Lambda process. This field is optional.
groupOwnerSetting_groupOwner :: Lens' GroupOwnerSetting (Maybe Text)

-- | If true, AWS IoT Greengrass automatically adds the specified Linux OS
--   group owner of the resource to the Lambda process privileges. Thus the
--   Lambda process will have the file access permissions of the added
--   Linux group.
groupOwnerSetting_autoAddGroupOwner :: Lens' GroupOwnerSetting (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.GroupOwnerSetting.GroupOwnerSetting
instance GHC.Show.Show Network.AWS.Greengrass.Types.GroupOwnerSetting.GroupOwnerSetting
instance GHC.Read.Read Network.AWS.Greengrass.Types.GroupOwnerSetting.GroupOwnerSetting
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.GroupOwnerSetting.GroupOwnerSetting
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.GroupOwnerSetting.GroupOwnerSetting
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.GroupOwnerSetting.GroupOwnerSetting
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.GroupOwnerSetting.GroupOwnerSetting
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.GroupOwnerSetting.GroupOwnerSetting


module Network.AWS.Greengrass.Types.GroupVersion

-- | Information about a group version.
--   
--   <i>See:</i> <a>newGroupVersion</a> smart constructor.
data GroupVersion
GroupVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GroupVersion

-- | The ARN of the subscription definition version for this group.
[$sel:subscriptionDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the core definition version for this group.
[$sel:coreDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the connector definition version for this group.
[$sel:connectorDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the logger definition version for this group.
[$sel:loggerDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the resource definition version for this group.
[$sel:resourceDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the function definition version for this group.
[$sel:functionDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the device definition version for this group.
[$sel:deviceDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | Create a value of <a>GroupVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_subscriptionDefinitionVersionArn</a> - The ARN of the
--   subscription definition version for this group.
--   
--   <a>$sel:coreDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_coreDefinitionVersionArn</a> - The ARN of the core
--   definition version for this group.
--   
--   <a>$sel:connectorDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_connectorDefinitionVersionArn</a> - The ARN of the
--   connector definition version for this group.
--   
--   <a>$sel:loggerDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_loggerDefinitionVersionArn</a> - The ARN of the logger
--   definition version for this group.
--   
--   <a>$sel:resourceDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_resourceDefinitionVersionArn</a> - The ARN of the
--   resource definition version for this group.
--   
--   <a>$sel:functionDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_functionDefinitionVersionArn</a> - The ARN of the
--   function definition version for this group.
--   
--   <a>$sel:deviceDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_deviceDefinitionVersionArn</a> - The ARN of the device
--   definition version for this group.
newGroupVersion :: GroupVersion

-- | The ARN of the subscription definition version for this group.
groupVersion_subscriptionDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the core definition version for this group.
groupVersion_coreDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the connector definition version for this group.
groupVersion_connectorDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the logger definition version for this group.
groupVersion_loggerDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the resource definition version for this group.
groupVersion_resourceDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the function definition version for this group.
groupVersion_functionDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the device definition version for this group.
groupVersion_deviceDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.GroupVersion.GroupVersion
instance GHC.Show.Show Network.AWS.Greengrass.Types.GroupVersion.GroupVersion
instance GHC.Read.Read Network.AWS.Greengrass.Types.GroupVersion.GroupVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.GroupVersion.GroupVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.GroupVersion.GroupVersion
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.GroupVersion.GroupVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.GroupVersion.GroupVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.GroupVersion.GroupVersion


module Network.AWS.Greengrass.Types.LocalDeviceResourceData

-- | Attributes that define a local device resource.
--   
--   <i>See:</i> <a>newLocalDeviceResourceData</a> smart constructor.
data LocalDeviceResourceData
LocalDeviceResourceData' :: Maybe Text -> Maybe GroupOwnerSetting -> LocalDeviceResourceData

-- | The local absolute path of the device resource. The source path for a
--   device resource can refer only to a character device or block device
--   under ''/dev''.
[$sel:sourcePath:LocalDeviceResourceData'] :: LocalDeviceResourceData -> Maybe Text

-- | Group/owner related settings for local resources.
[$sel:groupOwnerSetting:LocalDeviceResourceData'] :: LocalDeviceResourceData -> Maybe GroupOwnerSetting

-- | Create a value of <a>LocalDeviceResourceData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourcePath:LocalDeviceResourceData'</a>,
--   <a>localDeviceResourceData_sourcePath</a> - The local absolute path of
--   the device resource. The source path for a device resource can refer
--   only to a character device or block device under ''/dev''.
--   
--   <a>$sel:groupOwnerSetting:LocalDeviceResourceData'</a>,
--   <a>localDeviceResourceData_groupOwnerSetting</a> - Group/owner related
--   settings for local resources.
newLocalDeviceResourceData :: LocalDeviceResourceData

-- | The local absolute path of the device resource. The source path for a
--   device resource can refer only to a character device or block device
--   under ''/dev''.
localDeviceResourceData_sourcePath :: Lens' LocalDeviceResourceData (Maybe Text)

-- | Group/owner related settings for local resources.
localDeviceResourceData_groupOwnerSetting :: Lens' LocalDeviceResourceData (Maybe GroupOwnerSetting)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.LocalDeviceResourceData.LocalDeviceResourceData
instance GHC.Show.Show Network.AWS.Greengrass.Types.LocalDeviceResourceData.LocalDeviceResourceData
instance GHC.Read.Read Network.AWS.Greengrass.Types.LocalDeviceResourceData.LocalDeviceResourceData
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.LocalDeviceResourceData.LocalDeviceResourceData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.LocalDeviceResourceData.LocalDeviceResourceData
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.LocalDeviceResourceData.LocalDeviceResourceData
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.LocalDeviceResourceData.LocalDeviceResourceData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.LocalDeviceResourceData.LocalDeviceResourceData


module Network.AWS.Greengrass.Types.LocalVolumeResourceData

-- | Attributes that define a local volume resource.
--   
--   <i>See:</i> <a>newLocalVolumeResourceData</a> smart constructor.
data LocalVolumeResourceData
LocalVolumeResourceData' :: Maybe Text -> Maybe Text -> Maybe GroupOwnerSetting -> LocalVolumeResourceData

-- | The absolute local path of the resource inside the Lambda environment.
[$sel:destinationPath:LocalVolumeResourceData'] :: LocalVolumeResourceData -> Maybe Text

-- | The local absolute path of the volume resource on the host. The source
--   path for a volume resource type cannot start with ''/sys''.
[$sel:sourcePath:LocalVolumeResourceData'] :: LocalVolumeResourceData -> Maybe Text

-- | Allows you to configure additional group privileges for the Lambda
--   process. This field is optional.
[$sel:groupOwnerSetting:LocalVolumeResourceData'] :: LocalVolumeResourceData -> Maybe GroupOwnerSetting

-- | Create a value of <a>LocalVolumeResourceData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationPath:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_destinationPath</a> - The absolute local
--   path of the resource inside the Lambda environment.
--   
--   <a>$sel:sourcePath:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_sourcePath</a> - The local absolute path of
--   the volume resource on the host. The source path for a volume resource
--   type cannot start with ''/sys''.
--   
--   <a>$sel:groupOwnerSetting:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_groupOwnerSetting</a> - Allows you to
--   configure additional group privileges for the Lambda process. This
--   field is optional.
newLocalVolumeResourceData :: LocalVolumeResourceData

-- | The absolute local path of the resource inside the Lambda environment.
localVolumeResourceData_destinationPath :: Lens' LocalVolumeResourceData (Maybe Text)

-- | The local absolute path of the volume resource on the host. The source
--   path for a volume resource type cannot start with ''/sys''.
localVolumeResourceData_sourcePath :: Lens' LocalVolumeResourceData (Maybe Text)

-- | Allows you to configure additional group privileges for the Lambda
--   process. This field is optional.
localVolumeResourceData_groupOwnerSetting :: Lens' LocalVolumeResourceData (Maybe GroupOwnerSetting)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.LocalVolumeResourceData.LocalVolumeResourceData
instance GHC.Show.Show Network.AWS.Greengrass.Types.LocalVolumeResourceData.LocalVolumeResourceData
instance GHC.Read.Read Network.AWS.Greengrass.Types.LocalVolumeResourceData.LocalVolumeResourceData
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.LocalVolumeResourceData.LocalVolumeResourceData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.LocalVolumeResourceData.LocalVolumeResourceData
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.LocalVolumeResourceData.LocalVolumeResourceData
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.LocalVolumeResourceData.LocalVolumeResourceData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.LocalVolumeResourceData.LocalVolumeResourceData


module Network.AWS.Greengrass.Types.LoggerComponent
newtype LoggerComponent
LoggerComponent' :: Text -> LoggerComponent
[fromLoggerComponent] :: LoggerComponent -> Text
pattern LoggerComponent_GreengrassSystem :: LoggerComponent
pattern LoggerComponent_Lambda :: LoggerComponent
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance GHC.Read.Read Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent
instance GHC.Show.Show Network.AWS.Greengrass.Types.LoggerComponent.LoggerComponent


module Network.AWS.Greengrass.Types.LoggerLevel
newtype LoggerLevel
LoggerLevel' :: Text -> LoggerLevel
[fromLoggerLevel] :: LoggerLevel -> Text
pattern LoggerLevel_DEBUG :: LoggerLevel
pattern LoggerLevel_ERROR :: LoggerLevel
pattern LoggerLevel_FATAL :: LoggerLevel
pattern LoggerLevel_INFO :: LoggerLevel
pattern LoggerLevel_WARN :: LoggerLevel
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance GHC.Read.Read Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel
instance GHC.Show.Show Network.AWS.Greengrass.Types.LoggerLevel.LoggerLevel


module Network.AWS.Greengrass.Types.LoggerType
newtype LoggerType
LoggerType' :: Text -> LoggerType
[fromLoggerType] :: LoggerType -> Text
pattern LoggerType_AWSCloudWatch :: LoggerType
pattern LoggerType_FileSystem :: LoggerType
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance GHC.Read.Read Network.AWS.Greengrass.Types.LoggerType.LoggerType
instance GHC.Show.Show Network.AWS.Greengrass.Types.LoggerType.LoggerType


module Network.AWS.Greengrass.Types.GreengrassLogger

-- | Information about a logger
--   
--   <i>See:</i> <a>newGreengrassLogger</a> smart constructor.
data GreengrassLogger
GreengrassLogger' :: Maybe Int -> LoggerType -> LoggerLevel -> Text -> LoggerComponent -> GreengrassLogger

-- | The amount of file space, in KB, to use if the local file system is
--   used for logging purposes.
[$sel:space:GreengrassLogger'] :: GreengrassLogger -> Maybe Int

-- | The type of log output which will be used.
[$sel:type':GreengrassLogger'] :: GreengrassLogger -> LoggerType

-- | The level of the logs.
[$sel:level:GreengrassLogger'] :: GreengrassLogger -> LoggerLevel

-- | A descriptive or arbitrary ID for the logger. This value must be
--   unique within the logger definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:GreengrassLogger'] :: GreengrassLogger -> Text

-- | The component that will be subject to logging.
[$sel:component:GreengrassLogger'] :: GreengrassLogger -> LoggerComponent

-- | Create a value of <a>GreengrassLogger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:space:GreengrassLogger'</a>, <a>greengrassLogger_space</a> -
--   The amount of file space, in KB, to use if the local file system is
--   used for logging purposes.
--   
--   <a>$sel:type':GreengrassLogger'</a>, <a>greengrassLogger_type</a> -
--   The type of log output which will be used.
--   
--   <a>$sel:level:GreengrassLogger'</a>, <a>greengrassLogger_level</a> -
--   The level of the logs.
--   
--   <a>$sel:id:GreengrassLogger'</a>, <a>greengrassLogger_id</a> - A
--   descriptive or arbitrary ID for the logger. This value must be unique
--   within the logger definition version. Max length is 128 characters
--   with pattern ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:component:GreengrassLogger'</a>,
--   <a>greengrassLogger_component</a> - The component that will be subject
--   to logging.
newGreengrassLogger :: LoggerType -> LoggerLevel -> Text -> LoggerComponent -> GreengrassLogger

-- | The amount of file space, in KB, to use if the local file system is
--   used for logging purposes.
greengrassLogger_space :: Lens' GreengrassLogger (Maybe Int)

-- | The type of log output which will be used.
greengrassLogger_type :: Lens' GreengrassLogger LoggerType

-- | The level of the logs.
greengrassLogger_level :: Lens' GreengrassLogger LoggerLevel

-- | A descriptive or arbitrary ID for the logger. This value must be
--   unique within the logger definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
greengrassLogger_id :: Lens' GreengrassLogger Text

-- | The component that will be subject to logging.
greengrassLogger_component :: Lens' GreengrassLogger LoggerComponent
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.GreengrassLogger.GreengrassLogger
instance GHC.Show.Show Network.AWS.Greengrass.Types.GreengrassLogger.GreengrassLogger
instance GHC.Read.Read Network.AWS.Greengrass.Types.GreengrassLogger.GreengrassLogger
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.GreengrassLogger.GreengrassLogger
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.GreengrassLogger.GreengrassLogger
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.GreengrassLogger.GreengrassLogger
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.GreengrassLogger.GreengrassLogger
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.GreengrassLogger.GreengrassLogger


module Network.AWS.Greengrass.Types.LoggerDefinitionVersion

-- | Information about a logger definition version.
--   
--   <i>See:</i> <a>newLoggerDefinitionVersion</a> smart constructor.
data LoggerDefinitionVersion
LoggerDefinitionVersion' :: Maybe [GreengrassLogger] -> LoggerDefinitionVersion

-- | A list of loggers.
[$sel:loggers:LoggerDefinitionVersion'] :: LoggerDefinitionVersion -> Maybe [GreengrassLogger]

-- | Create a value of <a>LoggerDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggers:LoggerDefinitionVersion'</a>,
--   <a>loggerDefinitionVersion_loggers</a> - A list of loggers.
newLoggerDefinitionVersion :: LoggerDefinitionVersion

-- | A list of loggers.
loggerDefinitionVersion_loggers :: Lens' LoggerDefinitionVersion (Maybe [GreengrassLogger])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.LoggerDefinitionVersion.LoggerDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.Types.LoggerDefinitionVersion.LoggerDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.Types.LoggerDefinitionVersion.LoggerDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.LoggerDefinitionVersion.LoggerDefinitionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.LoggerDefinitionVersion.LoggerDefinitionVersion
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.LoggerDefinitionVersion.LoggerDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.LoggerDefinitionVersion.LoggerDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.LoggerDefinitionVersion.LoggerDefinitionVersion


module Network.AWS.Greengrass.Types.Permission

-- | The type of permission a function has to access a resource.
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_Ro :: Permission
pattern Permission_Rw :: Permission
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.Permission.Permission
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.Permission.Permission
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.Permission.Permission
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.Permission.Permission
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Permission.Permission
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.Permission.Permission
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.Permission.Permission
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.Permission.Permission
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.Permission.Permission
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.Permission.Permission
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.Permission.Permission
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Permission.Permission
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Permission.Permission
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Permission.Permission
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.Permission.Permission
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Permission.Permission
instance GHC.Read.Read Network.AWS.Greengrass.Types.Permission.Permission
instance GHC.Show.Show Network.AWS.Greengrass.Types.Permission.Permission


module Network.AWS.Greengrass.Types.ResourceAccessPolicy

-- | A policy used by the function to access a resource.
--   
--   <i>See:</i> <a>newResourceAccessPolicy</a> smart constructor.
data ResourceAccessPolicy
ResourceAccessPolicy' :: Maybe Permission -> Text -> ResourceAccessPolicy

-- | The permissions that the Lambda function has to the resource. Can be
--   one of ''rw'' (read/write) or ''ro'' (read-only).
[$sel:permission:ResourceAccessPolicy'] :: ResourceAccessPolicy -> Maybe Permission

-- | The ID of the resource. (This ID is assigned to the resource when you
--   create the resource definiton.)
[$sel:resourceId:ResourceAccessPolicy'] :: ResourceAccessPolicy -> Text

-- | Create a value of <a>ResourceAccessPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permission:ResourceAccessPolicy'</a>,
--   <a>resourceAccessPolicy_permission</a> - The permissions that the
--   Lambda function has to the resource. Can be one of ''rw'' (read/write)
--   or ''ro'' (read-only).
--   
--   <a>$sel:resourceId:ResourceAccessPolicy'</a>,
--   <a>resourceAccessPolicy_resourceId</a> - The ID of the resource. (This
--   ID is assigned to the resource when you create the resource
--   definiton.)
newResourceAccessPolicy :: Text -> ResourceAccessPolicy

-- | The permissions that the Lambda function has to the resource. Can be
--   one of ''rw'' (read/write) or ''ro'' (read-only).
resourceAccessPolicy_permission :: Lens' ResourceAccessPolicy (Maybe Permission)

-- | The ID of the resource. (This ID is assigned to the resource when you
--   create the resource definiton.)
resourceAccessPolicy_resourceId :: Lens' ResourceAccessPolicy Text
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.ResourceAccessPolicy.ResourceAccessPolicy
instance GHC.Show.Show Network.AWS.Greengrass.Types.ResourceAccessPolicy.ResourceAccessPolicy
instance GHC.Read.Read Network.AWS.Greengrass.Types.ResourceAccessPolicy.ResourceAccessPolicy
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.ResourceAccessPolicy.ResourceAccessPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.ResourceAccessPolicy.ResourceAccessPolicy
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.ResourceAccessPolicy.ResourceAccessPolicy
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.ResourceAccessPolicy.ResourceAccessPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.ResourceAccessPolicy.ResourceAccessPolicy


module Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment

-- | The environment configuration of the function.
--   
--   <i>See:</i> <a>newFunctionConfigurationEnvironment</a> smart
--   constructor.
data FunctionConfigurationEnvironment
FunctionConfigurationEnvironment' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe FunctionExecutionConfig -> Maybe [ResourceAccessPolicy] -> FunctionConfigurationEnvironment

-- | If true, the Lambda function is allowed to access the host's /sys
--   folder. Use this when the Lambda function needs to read device
--   information from /sys. This setting applies only when you run the
--   Lambda function in a Greengrass container.
[$sel:accessSysfs:FunctionConfigurationEnvironment'] :: FunctionConfigurationEnvironment -> Maybe Bool

-- | Environment variables for the Lambda function's configuration.
[$sel:variables:FunctionConfigurationEnvironment'] :: FunctionConfigurationEnvironment -> Maybe (HashMap Text Text)

-- | Configuration related to executing the Lambda function
[$sel:execution:FunctionConfigurationEnvironment'] :: FunctionConfigurationEnvironment -> Maybe FunctionExecutionConfig

-- | A list of the resources, with their permissions, to which the Lambda
--   function will be granted access. A Lambda function can have at most 10
--   resources. ResourceAccessPolicies apply only when you run the Lambda
--   function in a Greengrass container.
[$sel:resourceAccessPolicies:FunctionConfigurationEnvironment'] :: FunctionConfigurationEnvironment -> Maybe [ResourceAccessPolicy]

-- | Create a value of <a>FunctionConfigurationEnvironment</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessSysfs:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_accessSysfs</a> - If true, the
--   Lambda function is allowed to access the host's /sys folder. Use this
--   when the Lambda function needs to read device information from /sys.
--   This setting applies only when you run the Lambda function in a
--   Greengrass container.
--   
--   <a>$sel:variables:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_variables</a> - Environment
--   variables for the Lambda function's configuration.
--   
--   <a>$sel:execution:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_execution</a> - Configuration
--   related to executing the Lambda function
--   
--   <a>$sel:resourceAccessPolicies:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_resourceAccessPolicies</a> - A
--   list of the resources, with their permissions, to which the Lambda
--   function will be granted access. A Lambda function can have at most 10
--   resources. ResourceAccessPolicies apply only when you run the Lambda
--   function in a Greengrass container.
newFunctionConfigurationEnvironment :: FunctionConfigurationEnvironment

-- | If true, the Lambda function is allowed to access the host's /sys
--   folder. Use this when the Lambda function needs to read device
--   information from /sys. This setting applies only when you run the
--   Lambda function in a Greengrass container.
functionConfigurationEnvironment_accessSysfs :: Lens' FunctionConfigurationEnvironment (Maybe Bool)

-- | Environment variables for the Lambda function's configuration.
functionConfigurationEnvironment_variables :: Lens' FunctionConfigurationEnvironment (Maybe (HashMap Text Text))

-- | Configuration related to executing the Lambda function
functionConfigurationEnvironment_execution :: Lens' FunctionConfigurationEnvironment (Maybe FunctionExecutionConfig)

-- | A list of the resources, with their permissions, to which the Lambda
--   function will be granted access. A Lambda function can have at most 10
--   resources. ResourceAccessPolicies apply only when you run the Lambda
--   function in a Greengrass container.
functionConfigurationEnvironment_resourceAccessPolicies :: Lens' FunctionConfigurationEnvironment (Maybe [ResourceAccessPolicy])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment.FunctionConfigurationEnvironment
instance GHC.Show.Show Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment.FunctionConfigurationEnvironment
instance GHC.Read.Read Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment.FunctionConfigurationEnvironment
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment.FunctionConfigurationEnvironment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment.FunctionConfigurationEnvironment
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment.FunctionConfigurationEnvironment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment.FunctionConfigurationEnvironment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.FunctionConfigurationEnvironment.FunctionConfigurationEnvironment


module Network.AWS.Greengrass.Types.FunctionConfiguration

-- | The configuration of the Lambda function.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Int -> Maybe Text -> Maybe Int -> Maybe EncodingType -> Maybe Text -> Maybe Bool -> Maybe FunctionConfigurationEnvironment -> FunctionConfiguration

-- | The memory size, in KB, which the function requires. This setting is
--   not applicable and should be cleared when you run the Lambda function
--   without containerization.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Int

-- | The execution arguments.
[$sel:execArgs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The allowed function execution time, after which Lambda should
--   terminate the function. This timeout still applies to pinned Lambda
--   functions for each request.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Int

-- | The expected encoding type of the input payload for the function. The
--   default is ''json''.
[$sel:encodingType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EncodingType

-- | The name of the function executable.
[$sel:executable:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | True if the function is pinned. Pinned means the function is
--   long-lived and starts when the core starts.
[$sel:pinned:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Bool

-- | The environment configuration of the function.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe FunctionConfigurationEnvironment

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The memory size, in KB,
--   which the function requires. This setting is not applicable and should
--   be cleared when you run the Lambda function without containerization.
--   
--   <a>$sel:execArgs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_execArgs</a> - The execution arguments.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The allowed function execution
--   time, after which Lambda should terminate the function. This timeout
--   still applies to pinned Lambda functions for each request.
--   
--   <a>$sel:encodingType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_encodingType</a> - The expected encoding type
--   of the input payload for the function. The default is ''json''.
--   
--   <a>$sel:executable:FunctionConfiguration'</a>,
--   <a>functionConfiguration_executable</a> - The name of the function
--   executable.
--   
--   <a>$sel:pinned:FunctionConfiguration'</a>,
--   <a>functionConfiguration_pinned</a> - True if the function is pinned.
--   Pinned means the function is long-lived and starts when the core
--   starts.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The environment
--   configuration of the function.
newFunctionConfiguration :: FunctionConfiguration

-- | The memory size, in KB, which the function requires. This setting is
--   not applicable and should be cleared when you run the Lambda function
--   without containerization.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Int)

-- | The execution arguments.
functionConfiguration_execArgs :: Lens' FunctionConfiguration (Maybe Text)

-- | The allowed function execution time, after which Lambda should
--   terminate the function. This timeout still applies to pinned Lambda
--   functions for each request.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Int)

-- | The expected encoding type of the input payload for the function. The
--   default is ''json''.
functionConfiguration_encodingType :: Lens' FunctionConfiguration (Maybe EncodingType)

-- | The name of the function executable.
functionConfiguration_executable :: Lens' FunctionConfiguration (Maybe Text)

-- | True if the function is pinned. Pinned means the function is
--   long-lived and starts when the core starts.
functionConfiguration_pinned :: Lens' FunctionConfiguration (Maybe Bool)

-- | The environment configuration of the function.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe FunctionConfigurationEnvironment)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.FunctionConfiguration.FunctionConfiguration
instance GHC.Show.Show Network.AWS.Greengrass.Types.FunctionConfiguration.FunctionConfiguration
instance GHC.Read.Read Network.AWS.Greengrass.Types.FunctionConfiguration.FunctionConfiguration
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.FunctionConfiguration.FunctionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.FunctionConfiguration.FunctionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.FunctionConfiguration.FunctionConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.FunctionConfiguration.FunctionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.FunctionConfiguration.FunctionConfiguration


module Network.AWS.Greengrass.Types.Function

-- | Information about a Lambda function.
--   
--   <i>See:</i> <a>newFunction</a> smart constructor.
data Function
Function' :: Maybe FunctionConfiguration -> Maybe Text -> Text -> Function

-- | The configuration of the Lambda function.
[$sel:functionConfiguration:Function'] :: Function -> Maybe FunctionConfiguration

-- | The ARN of the Lambda function.
[$sel:functionArn:Function'] :: Function -> Maybe Text

-- | A descriptive or arbitrary ID for the function. This value must be
--   unique within the function definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:Function'] :: Function -> Text

-- | Create a value of <a>Function</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionConfiguration:Function'</a>,
--   <a>function_functionConfiguration</a> - The configuration of the
--   Lambda function.
--   
--   <a>$sel:functionArn:Function'</a>, <a>function_functionArn</a> - The
--   ARN of the Lambda function.
--   
--   <a>$sel:id:Function'</a>, <a>function_id</a> - A descriptive or
--   arbitrary ID for the function. This value must be unique within the
--   function definition version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
newFunction :: Text -> Function

-- | The configuration of the Lambda function.
function_functionConfiguration :: Lens' Function (Maybe FunctionConfiguration)

-- | The ARN of the Lambda function.
function_functionArn :: Lens' Function (Maybe Text)

-- | A descriptive or arbitrary ID for the function. This value must be
--   unique within the function definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
function_id :: Lens' Function Text
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Function.Function
instance GHC.Show.Show Network.AWS.Greengrass.Types.Function.Function
instance GHC.Read.Read Network.AWS.Greengrass.Types.Function.Function
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Function.Function
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Function.Function
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Function.Function
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Function.Function
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.Function.Function


module Network.AWS.Greengrass.Types.FunctionDefinitionVersion

-- | Information about a function definition version.
--   
--   <i>See:</i> <a>newFunctionDefinitionVersion</a> smart constructor.
data FunctionDefinitionVersion
FunctionDefinitionVersion' :: Maybe [Function] -> Maybe FunctionDefaultConfig -> FunctionDefinitionVersion

-- | A list of Lambda functions in this function definition version.
[$sel:functions:FunctionDefinitionVersion'] :: FunctionDefinitionVersion -> Maybe [Function]

-- | The default configuration that applies to all Lambda functions in this
--   function definition version. Individual Lambda functions can override
--   these settings.
[$sel:defaultConfig:FunctionDefinitionVersion'] :: FunctionDefinitionVersion -> Maybe FunctionDefaultConfig

-- | Create a value of <a>FunctionDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functions:FunctionDefinitionVersion'</a>,
--   <a>functionDefinitionVersion_functions</a> - A list of Lambda
--   functions in this function definition version.
--   
--   <a>$sel:defaultConfig:FunctionDefinitionVersion'</a>,
--   <a>functionDefinitionVersion_defaultConfig</a> - The default
--   configuration that applies to all Lambda functions in this function
--   definition version. Individual Lambda functions can override these
--   settings.
newFunctionDefinitionVersion :: FunctionDefinitionVersion

-- | A list of Lambda functions in this function definition version.
functionDefinitionVersion_functions :: Lens' FunctionDefinitionVersion (Maybe [Function])

-- | The default configuration that applies to all Lambda functions in this
--   function definition version. Individual Lambda functions can override
--   these settings.
functionDefinitionVersion_defaultConfig :: Lens' FunctionDefinitionVersion (Maybe FunctionDefaultConfig)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.FunctionDefinitionVersion.FunctionDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.Types.FunctionDefinitionVersion.FunctionDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.Types.FunctionDefinitionVersion.FunctionDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.FunctionDefinitionVersion.FunctionDefinitionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.FunctionDefinitionVersion.FunctionDefinitionVersion
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.FunctionDefinitionVersion.FunctionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.FunctionDefinitionVersion.FunctionDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.FunctionDefinitionVersion.FunctionDefinitionVersion


module Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting

-- | The owner setting for downloaded machine learning resources.
--   
--   <i>See:</i> <a>newResourceDownloadOwnerSetting</a> smart constructor.
data ResourceDownloadOwnerSetting
ResourceDownloadOwnerSetting' :: Text -> Permission -> ResourceDownloadOwnerSetting

-- | The group owner of the resource. This is the name of an existing Linux
--   OS group on the system or a GID. The group's permissions are added to
--   the Lambda process.
[$sel:groupOwner:ResourceDownloadOwnerSetting'] :: ResourceDownloadOwnerSetting -> Text

-- | The permissions that the group owner has to the resource. Valid values
--   are ''rw'' (read/write) or ''ro'' (read-only).
[$sel:groupPermission:ResourceDownloadOwnerSetting'] :: ResourceDownloadOwnerSetting -> Permission

-- | Create a value of <a>ResourceDownloadOwnerSetting</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupOwner:ResourceDownloadOwnerSetting'</a>,
--   <a>resourceDownloadOwnerSetting_groupOwner</a> - The group owner of
--   the resource. This is the name of an existing Linux OS group on the
--   system or a GID. The group's permissions are added to the Lambda
--   process.
--   
--   <a>$sel:groupPermission:ResourceDownloadOwnerSetting'</a>,
--   <a>resourceDownloadOwnerSetting_groupPermission</a> - The permissions
--   that the group owner has to the resource. Valid values are ''rw''
--   (read/write) or ''ro'' (read-only).
newResourceDownloadOwnerSetting :: Text -> Permission -> ResourceDownloadOwnerSetting

-- | The group owner of the resource. This is the name of an existing Linux
--   OS group on the system or a GID. The group's permissions are added to
--   the Lambda process.
resourceDownloadOwnerSetting_groupOwner :: Lens' ResourceDownloadOwnerSetting Text

-- | The permissions that the group owner has to the resource. Valid values
--   are ''rw'' (read/write) or ''ro'' (read-only).
resourceDownloadOwnerSetting_groupPermission :: Lens' ResourceDownloadOwnerSetting Permission
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting.ResourceDownloadOwnerSetting
instance GHC.Show.Show Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting.ResourceDownloadOwnerSetting
instance GHC.Read.Read Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting.ResourceDownloadOwnerSetting
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting.ResourceDownloadOwnerSetting
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting.ResourceDownloadOwnerSetting
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting.ResourceDownloadOwnerSetting
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting.ResourceDownloadOwnerSetting
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.ResourceDownloadOwnerSetting.ResourceDownloadOwnerSetting


module Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData

-- | Attributes that define an Amazon S3 machine learning resource.
--   
--   <i>See:</i> <a>newS3MachineLearningModelResourceData</a> smart
--   constructor.
data S3MachineLearningModelResourceData
S3MachineLearningModelResourceData' :: Maybe ResourceDownloadOwnerSetting -> Maybe Text -> Maybe Text -> S3MachineLearningModelResourceData
[$sel:ownerSetting:S3MachineLearningModelResourceData'] :: S3MachineLearningModelResourceData -> Maybe ResourceDownloadOwnerSetting

-- | The absolute local path of the resource inside the Lambda environment.
[$sel:destinationPath:S3MachineLearningModelResourceData'] :: S3MachineLearningModelResourceData -> Maybe Text

-- | The URI of the source model in an S3 bucket. The model package must be
--   in tar.gz or .zip format.
[$sel:s3Uri:S3MachineLearningModelResourceData'] :: S3MachineLearningModelResourceData -> Maybe Text

-- | Create a value of <a>S3MachineLearningModelResourceData</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerSetting:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_ownerSetting</a> - Undocumented
--   member.
--   
--   <a>$sel:destinationPath:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_destinationPath</a> - The
--   absolute local path of the resource inside the Lambda environment.
--   
--   <a>$sel:s3Uri:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_s3Uri</a> - The URI of the
--   source model in an S3 bucket. The model package must be in tar.gz or
--   .zip format.
newS3MachineLearningModelResourceData :: S3MachineLearningModelResourceData

-- | Undocumented member.
s3MachineLearningModelResourceData_ownerSetting :: Lens' S3MachineLearningModelResourceData (Maybe ResourceDownloadOwnerSetting)

-- | The absolute local path of the resource inside the Lambda environment.
s3MachineLearningModelResourceData_destinationPath :: Lens' S3MachineLearningModelResourceData (Maybe Text)

-- | The URI of the source model in an S3 bucket. The model package must be
--   in tar.gz or .zip format.
s3MachineLearningModelResourceData_s3Uri :: Lens' S3MachineLearningModelResourceData (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData.S3MachineLearningModelResourceData
instance GHC.Show.Show Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData.S3MachineLearningModelResourceData
instance GHC.Read.Read Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData.S3MachineLearningModelResourceData
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData.S3MachineLearningModelResourceData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData.S3MachineLearningModelResourceData
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData.S3MachineLearningModelResourceData
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData.S3MachineLearningModelResourceData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.S3MachineLearningModelResourceData.S3MachineLearningModelResourceData


module Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData

-- | Attributes that define an Amazon SageMaker machine learning resource.
--   
--   <i>See:</i> <a>newSageMakerMachineLearningModelResourceData</a> smart
--   constructor.
data SageMakerMachineLearningModelResourceData
SageMakerMachineLearningModelResourceData' :: Maybe ResourceDownloadOwnerSetting -> Maybe Text -> Maybe Text -> SageMakerMachineLearningModelResourceData
[$sel:ownerSetting:SageMakerMachineLearningModelResourceData'] :: SageMakerMachineLearningModelResourceData -> Maybe ResourceDownloadOwnerSetting

-- | The absolute local path of the resource inside the Lambda environment.
[$sel:destinationPath:SageMakerMachineLearningModelResourceData'] :: SageMakerMachineLearningModelResourceData -> Maybe Text

-- | The ARN of the Amazon SageMaker training job that represents the
--   source model.
[$sel:sageMakerJobArn:SageMakerMachineLearningModelResourceData'] :: SageMakerMachineLearningModelResourceData -> Maybe Text

-- | Create a value of <a>SageMakerMachineLearningModelResourceData</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerSetting:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_ownerSetting</a> -
--   Undocumented member.
--   
--   
--   <a>$sel:destinationPath:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_destinationPath</a> - The
--   absolute local path of the resource inside the Lambda environment.
--   
--   
--   <a>$sel:sageMakerJobArn:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_sageMakerJobArn</a> - The
--   ARN of the Amazon SageMaker training job that represents the source
--   model.
newSageMakerMachineLearningModelResourceData :: SageMakerMachineLearningModelResourceData

-- | Undocumented member.
sageMakerMachineLearningModelResourceData_ownerSetting :: Lens' SageMakerMachineLearningModelResourceData (Maybe ResourceDownloadOwnerSetting)

-- | The absolute local path of the resource inside the Lambda environment.
sageMakerMachineLearningModelResourceData_destinationPath :: Lens' SageMakerMachineLearningModelResourceData (Maybe Text)

-- | The ARN of the Amazon SageMaker training job that represents the
--   source model.
sageMakerMachineLearningModelResourceData_sageMakerJobArn :: Lens' SageMakerMachineLearningModelResourceData (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData.SageMakerMachineLearningModelResourceData
instance GHC.Show.Show Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData.SageMakerMachineLearningModelResourceData
instance GHC.Read.Read Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData.SageMakerMachineLearningModelResourceData
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData.SageMakerMachineLearningModelResourceData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData.SageMakerMachineLearningModelResourceData
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData.SageMakerMachineLearningModelResourceData
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData.SageMakerMachineLearningModelResourceData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.SageMakerMachineLearningModelResourceData.SageMakerMachineLearningModelResourceData


module Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData

-- | Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager. AWS IoT Greengrass stores a local, encrypted
--   copy of the secret on the Greengrass core, where it can be securely
--   accessed by connectors and Lambda functions.
--   
--   <i>See:</i> <a>newSecretsManagerSecretResourceData</a> smart
--   constructor.
data SecretsManagerSecretResourceData
SecretsManagerSecretResourceData' :: Maybe Text -> Maybe [Text] -> SecretsManagerSecretResourceData

-- | The ARN of the Secrets Manager secret to make available on the core.
--   The value of the secret's latest version (represented by the
--   ''AWSCURRENT'' staging label) is included by default.
[$sel:arn:SecretsManagerSecretResourceData'] :: SecretsManagerSecretResourceData -> Maybe Text

-- | Optional. The staging labels whose values you want to make available
--   on the core, in addition to ''AWSCURRENT''.
[$sel:additionalStagingLabelsToDownload:SecretsManagerSecretResourceData'] :: SecretsManagerSecretResourceData -> Maybe [Text]

-- | Create a value of <a>SecretsManagerSecretResourceData</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SecretsManagerSecretResourceData'</a>,
--   <a>secretsManagerSecretResourceData_arn</a> - The ARN of the Secrets
--   Manager secret to make available on the core. The value of the
--   secret's latest version (represented by the ''AWSCURRENT'' staging
--   label) is included by default.
--   
--   
--   <a>$sel:additionalStagingLabelsToDownload:SecretsManagerSecretResourceData'</a>,
--   <a>secretsManagerSecretResourceData_additionalStagingLabelsToDownload</a>
--   - Optional. The staging labels whose values you want to make available
--   on the core, in addition to ''AWSCURRENT''.
newSecretsManagerSecretResourceData :: SecretsManagerSecretResourceData

-- | The ARN of the Secrets Manager secret to make available on the core.
--   The value of the secret's latest version (represented by the
--   ''AWSCURRENT'' staging label) is included by default.
secretsManagerSecretResourceData_arn :: Lens' SecretsManagerSecretResourceData (Maybe Text)

-- | Optional. The staging labels whose values you want to make available
--   on the core, in addition to ''AWSCURRENT''.
secretsManagerSecretResourceData_additionalStagingLabelsToDownload :: Lens' SecretsManagerSecretResourceData (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData.SecretsManagerSecretResourceData
instance GHC.Show.Show Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData.SecretsManagerSecretResourceData
instance GHC.Read.Read Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData.SecretsManagerSecretResourceData
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData.SecretsManagerSecretResourceData
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData.SecretsManagerSecretResourceData
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData.SecretsManagerSecretResourceData
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData.SecretsManagerSecretResourceData
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.SecretsManagerSecretResourceData.SecretsManagerSecretResourceData


module Network.AWS.Greengrass.Types.ResourceDataContainer

-- | A container for resource data. The container takes only one of the
--   following supported resource data types: ''LocalDeviceResourceData'',
--   ''LocalVolumeResourceData'',
--   ''SageMakerMachineLearningModelResourceData'',
--   ''S3MachineLearningModelResourceData'',
--   ''SecretsManagerSecretResourceData''.
--   
--   <i>See:</i> <a>newResourceDataContainer</a> smart constructor.
data ResourceDataContainer
ResourceDataContainer' :: Maybe LocalVolumeResourceData -> Maybe LocalDeviceResourceData -> Maybe S3MachineLearningModelResourceData -> Maybe SageMakerMachineLearningModelResourceData -> Maybe SecretsManagerSecretResourceData -> ResourceDataContainer

-- | Attributes that define the local volume resource.
[$sel:localVolumeResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe LocalVolumeResourceData

-- | Attributes that define the local device resource.
[$sel:localDeviceResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe LocalDeviceResourceData

-- | Attributes that define an Amazon S3 machine learning resource.
[$sel:s3MachineLearningModelResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe S3MachineLearningModelResourceData

-- | Attributes that define an Amazon SageMaker machine learning resource.
[$sel:sageMakerMachineLearningModelResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe SageMakerMachineLearningModelResourceData

-- | Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager.
[$sel:secretsManagerSecretResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe SecretsManagerSecretResourceData

-- | Create a value of <a>ResourceDataContainer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:localVolumeResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_localVolumeResourceData</a> - Attributes that
--   define the local volume resource.
--   
--   <a>$sel:localDeviceResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_localDeviceResourceData</a> - Attributes that
--   define the local device resource.
--   
--   <a>$sel:s3MachineLearningModelResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_s3MachineLearningModelResourceData</a> -
--   Attributes that define an Amazon S3 machine learning resource.
--   
--   
--   <a>$sel:sageMakerMachineLearningModelResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_sageMakerMachineLearningModelResourceData</a>
--   - Attributes that define an Amazon SageMaker machine learning
--   resource.
--   
--   <a>$sel:secretsManagerSecretResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_secretsManagerSecretResourceData</a> -
--   Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager.
newResourceDataContainer :: ResourceDataContainer

-- | Attributes that define the local volume resource.
resourceDataContainer_localVolumeResourceData :: Lens' ResourceDataContainer (Maybe LocalVolumeResourceData)

-- | Attributes that define the local device resource.
resourceDataContainer_localDeviceResourceData :: Lens' ResourceDataContainer (Maybe LocalDeviceResourceData)

-- | Attributes that define an Amazon S3 machine learning resource.
resourceDataContainer_s3MachineLearningModelResourceData :: Lens' ResourceDataContainer (Maybe S3MachineLearningModelResourceData)

-- | Attributes that define an Amazon SageMaker machine learning resource.
resourceDataContainer_sageMakerMachineLearningModelResourceData :: Lens' ResourceDataContainer (Maybe SageMakerMachineLearningModelResourceData)

-- | Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager.
resourceDataContainer_secretsManagerSecretResourceData :: Lens' ResourceDataContainer (Maybe SecretsManagerSecretResourceData)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.ResourceDataContainer.ResourceDataContainer
instance GHC.Show.Show Network.AWS.Greengrass.Types.ResourceDataContainer.ResourceDataContainer
instance GHC.Read.Read Network.AWS.Greengrass.Types.ResourceDataContainer.ResourceDataContainer
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.ResourceDataContainer.ResourceDataContainer
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.ResourceDataContainer.ResourceDataContainer
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.ResourceDataContainer.ResourceDataContainer
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.ResourceDataContainer.ResourceDataContainer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.ResourceDataContainer.ResourceDataContainer


module Network.AWS.Greengrass.Types.Resource

-- | Information about a resource.
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: ResourceDataContainer -> Text -> Text -> Resource

-- | A container of data for all resource types.
[$sel:resourceDataContainer:Resource'] :: Resource -> ResourceDataContainer

-- | The resource ID, used to refer to a resource in the Lambda function
--   configuration. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
[$sel:id:Resource'] :: Resource -> Text

-- | The descriptive resource name, which is displayed on the AWS IoT
--   Greengrass console. Max length 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
[$sel:name:Resource'] :: Resource -> Text

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDataContainer:Resource'</a>,
--   <a>resource_resourceDataContainer</a> - A container of data for all
--   resource types.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource ID, used
--   to refer to a resource in the Lambda function configuration. Max
--   length is 128 characters with pattern ''[a-zA-Z0-9:_-]+''. This must
--   be unique within a Greengrass group.
--   
--   <a>$sel:name:Resource'</a>, <a>resource_name</a> - The descriptive
--   resource name, which is displayed on the AWS IoT Greengrass console.
--   Max length 128 characters with pattern ''[a-zA-Z0-9:_-]+''. This must
--   be unique within a Greengrass group.
newResource :: ResourceDataContainer -> Text -> Text -> Resource

-- | A container of data for all resource types.
resource_resourceDataContainer :: Lens' Resource ResourceDataContainer

-- | The resource ID, used to refer to a resource in the Lambda function
--   configuration. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
resource_id :: Lens' Resource Text

-- | The descriptive resource name, which is displayed on the AWS IoT
--   Greengrass console. Max length 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
resource_name :: Lens' Resource Text
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Resource.Resource
instance GHC.Show.Show Network.AWS.Greengrass.Types.Resource.Resource
instance GHC.Read.Read Network.AWS.Greengrass.Types.Resource.Resource
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Resource.Resource
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Resource.Resource
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Resource.Resource
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Resource.Resource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.Resource.Resource


module Network.AWS.Greengrass.Types.ResourceDefinitionVersion

-- | Information about a resource definition version.
--   
--   <i>See:</i> <a>newResourceDefinitionVersion</a> smart constructor.
data ResourceDefinitionVersion
ResourceDefinitionVersion' :: Maybe [Resource] -> ResourceDefinitionVersion

-- | A list of resources.
[$sel:resources:ResourceDefinitionVersion'] :: ResourceDefinitionVersion -> Maybe [Resource]

-- | Create a value of <a>ResourceDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:ResourceDefinitionVersion'</a>,
--   <a>resourceDefinitionVersion_resources</a> - A list of resources.
newResourceDefinitionVersion :: ResourceDefinitionVersion

-- | A list of resources.
resourceDefinitionVersion_resources :: Lens' ResourceDefinitionVersion (Maybe [Resource])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.ResourceDefinitionVersion.ResourceDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.Types.ResourceDefinitionVersion.ResourceDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.Types.ResourceDefinitionVersion.ResourceDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.ResourceDefinitionVersion.ResourceDefinitionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.ResourceDefinitionVersion.ResourceDefinitionVersion
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.ResourceDefinitionVersion.ResourceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.ResourceDefinitionVersion.ResourceDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.ResourceDefinitionVersion.ResourceDefinitionVersion


module Network.AWS.Greengrass.Types.SoftwareToUpdate

-- | The piece of software on the Greengrass core that will be updated.
newtype SoftwareToUpdate
SoftwareToUpdate' :: Text -> SoftwareToUpdate
[fromSoftwareToUpdate] :: SoftwareToUpdate -> Text
pattern SoftwareToUpdate_Core :: SoftwareToUpdate
pattern SoftwareToUpdate_Ota_agent :: SoftwareToUpdate
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance GHC.Read.Read Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate
instance GHC.Show.Show Network.AWS.Greengrass.Types.SoftwareToUpdate.SoftwareToUpdate


module Network.AWS.Greengrass.Types.Subscription

-- | Information about a subscription.
--   
--   <i>See:</i> <a>newSubscription</a> smart constructor.
data Subscription
Subscription' :: Text -> Text -> Text -> Text -> Subscription

-- | Where the message is sent to. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
[$sel:target:Subscription'] :: Subscription -> Text

-- | A descriptive or arbitrary ID for the subscription. This value must be
--   unique within the subscription definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:Subscription'] :: Subscription -> Text

-- | The MQTT topic used to route the message.
[$sel:subject:Subscription'] :: Subscription -> Text

-- | The source of the subscription. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
[$sel:source:Subscription'] :: Subscription -> Text

-- | Create a value of <a>Subscription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:target:Subscription'</a>, <a>subscription_target</a> - Where
--   the message is sent to. Can be a thing ARN, a Lambda function ARN, a
--   connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
--   
--   <a>$sel:id:Subscription'</a>, <a>subscription_id</a> - A descriptive
--   or arbitrary ID for the subscription. This value must be unique within
--   the subscription definition version. Max length is 128 characters with
--   pattern ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:subject:Subscription'</a>, <a>subscription_subject</a> - The
--   MQTT topic used to route the message.
--   
--   <a>$sel:source:Subscription'</a>, <a>subscription_source</a> - The
--   source of the subscription. Can be a thing ARN, a Lambda function ARN,
--   a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
newSubscription :: Text -> Text -> Text -> Text -> Subscription

-- | Where the message is sent to. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
subscription_target :: Lens' Subscription Text

-- | A descriptive or arbitrary ID for the subscription. This value must be
--   unique within the subscription definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
subscription_id :: Lens' Subscription Text

-- | The MQTT topic used to route the message.
subscription_subject :: Lens' Subscription Text

-- | The source of the subscription. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
subscription_source :: Lens' Subscription Text
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Subscription.Subscription
instance GHC.Show.Show Network.AWS.Greengrass.Types.Subscription.Subscription
instance GHC.Read.Read Network.AWS.Greengrass.Types.Subscription.Subscription
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Subscription.Subscription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Subscription.Subscription
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Subscription.Subscription
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Subscription.Subscription
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.Subscription.Subscription


module Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion

-- | Information about a subscription definition version.
--   
--   <i>See:</i> <a>newSubscriptionDefinitionVersion</a> smart constructor.
data SubscriptionDefinitionVersion
SubscriptionDefinitionVersion' :: Maybe [Subscription] -> SubscriptionDefinitionVersion

-- | A list of subscriptions.
[$sel:subscriptions:SubscriptionDefinitionVersion'] :: SubscriptionDefinitionVersion -> Maybe [Subscription]

-- | Create a value of <a>SubscriptionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptions:SubscriptionDefinitionVersion'</a>,
--   <a>subscriptionDefinitionVersion_subscriptions</a> - A list of
--   subscriptions.
newSubscriptionDefinitionVersion :: SubscriptionDefinitionVersion

-- | A list of subscriptions.
subscriptionDefinitionVersion_subscriptions :: Lens' SubscriptionDefinitionVersion (Maybe [Subscription])
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion.SubscriptionDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion.SubscriptionDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion.SubscriptionDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion.SubscriptionDefinitionVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion.SubscriptionDefinitionVersion
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion.SubscriptionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion.SubscriptionDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.SubscriptionDefinitionVersion.SubscriptionDefinitionVersion


module Network.AWS.Greengrass.Types.Telemetry
newtype Telemetry
Telemetry' :: Text -> Telemetry
[fromTelemetry] :: Telemetry -> Text
pattern Telemetry_Off :: Telemetry
pattern Telemetry_On :: Telemetry
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance GHC.Read.Read Network.AWS.Greengrass.Types.Telemetry.Telemetry
instance GHC.Show.Show Network.AWS.Greengrass.Types.Telemetry.Telemetry


module Network.AWS.Greengrass.Types.TelemetryConfiguration

-- | Configuration settings for running telemetry.
--   
--   <i>See:</i> <a>newTelemetryConfiguration</a> smart constructor.
data TelemetryConfiguration
TelemetryConfiguration' :: Maybe ConfigurationSyncStatus -> Telemetry -> TelemetryConfiguration

-- | Synchronization status of the device reported configuration with the
--   desired configuration.
[$sel:configurationSyncStatus:TelemetryConfiguration'] :: TelemetryConfiguration -> Maybe ConfigurationSyncStatus

-- | Configure telemetry to be on or off.
[$sel:telemetry:TelemetryConfiguration'] :: TelemetryConfiguration -> Telemetry

-- | Create a value of <a>TelemetryConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationSyncStatus:TelemetryConfiguration'</a>,
--   <a>telemetryConfiguration_configurationSyncStatus</a> -
--   Synchronization status of the device reported configuration with the
--   desired configuration.
--   
--   <a>$sel:telemetry:TelemetryConfiguration'</a>,
--   <a>telemetryConfiguration_telemetry</a> - Configure telemetry to be on
--   or off.
newTelemetryConfiguration :: Telemetry -> TelemetryConfiguration

-- | Synchronization status of the device reported configuration with the
--   desired configuration.
telemetryConfiguration_configurationSyncStatus :: Lens' TelemetryConfiguration (Maybe ConfigurationSyncStatus)

-- | Configure telemetry to be on or off.
telemetryConfiguration_telemetry :: Lens' TelemetryConfiguration Telemetry
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.TelemetryConfiguration.TelemetryConfiguration
instance GHC.Show.Show Network.AWS.Greengrass.Types.TelemetryConfiguration.TelemetryConfiguration
instance GHC.Read.Read Network.AWS.Greengrass.Types.TelemetryConfiguration.TelemetryConfiguration
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.TelemetryConfiguration.TelemetryConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.TelemetryConfiguration.TelemetryConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.TelemetryConfiguration.TelemetryConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.TelemetryConfiguration.TelemetryConfiguration


module Network.AWS.Greengrass.Types.RuntimeConfiguration

-- | Runtime configuration for a thing.
--   
--   <i>See:</i> <a>newRuntimeConfiguration</a> smart constructor.
data RuntimeConfiguration
RuntimeConfiguration' :: Maybe TelemetryConfiguration -> RuntimeConfiguration

-- | Configuration for telemetry service.
[$sel:telemetryConfiguration:RuntimeConfiguration'] :: RuntimeConfiguration -> Maybe TelemetryConfiguration

-- | Create a value of <a>RuntimeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:telemetryConfiguration:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_telemetryConfiguration</a> - Configuration for
--   telemetry service.
newRuntimeConfiguration :: RuntimeConfiguration

-- | Configuration for telemetry service.
runtimeConfiguration_telemetryConfiguration :: Lens' RuntimeConfiguration (Maybe TelemetryConfiguration)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.RuntimeConfiguration.RuntimeConfiguration
instance GHC.Show.Show Network.AWS.Greengrass.Types.RuntimeConfiguration.RuntimeConfiguration
instance GHC.Read.Read Network.AWS.Greengrass.Types.RuntimeConfiguration.RuntimeConfiguration
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.RuntimeConfiguration.RuntimeConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.RuntimeConfiguration.RuntimeConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.RuntimeConfiguration.RuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.RuntimeConfiguration.RuntimeConfiguration


module Network.AWS.Greengrass.Types.TelemetryConfigurationUpdate

-- | Configuration settings for running telemetry.
--   
--   <i>See:</i> <a>newTelemetryConfigurationUpdate</a> smart constructor.
data TelemetryConfigurationUpdate
TelemetryConfigurationUpdate' :: Telemetry -> TelemetryConfigurationUpdate

-- | Configure telemetry to be on or off.
[$sel:telemetry:TelemetryConfigurationUpdate'] :: TelemetryConfigurationUpdate -> Telemetry

-- | Create a value of <a>TelemetryConfigurationUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:telemetry:TelemetryConfigurationUpdate'</a>,
--   <a>telemetryConfigurationUpdate_telemetry</a> - Configure telemetry to
--   be on or off.
newTelemetryConfigurationUpdate :: Telemetry -> TelemetryConfigurationUpdate

-- | Configure telemetry to be on or off.
telemetryConfigurationUpdate_telemetry :: Lens' TelemetryConfigurationUpdate Telemetry
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.TelemetryConfigurationUpdate.TelemetryConfigurationUpdate
instance GHC.Show.Show Network.AWS.Greengrass.Types.TelemetryConfigurationUpdate.TelemetryConfigurationUpdate
instance GHC.Read.Read Network.AWS.Greengrass.Types.TelemetryConfigurationUpdate.TelemetryConfigurationUpdate
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.TelemetryConfigurationUpdate.TelemetryConfigurationUpdate
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.TelemetryConfigurationUpdate.TelemetryConfigurationUpdate
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.TelemetryConfigurationUpdate.TelemetryConfigurationUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.TelemetryConfigurationUpdate.TelemetryConfigurationUpdate


module Network.AWS.Greengrass.Types.UpdateAgentLogLevel

-- | The minimum level of log statements that should be logged by the OTA
--   Agent during an update.
newtype UpdateAgentLogLevel
UpdateAgentLogLevel' :: Text -> UpdateAgentLogLevel
[fromUpdateAgentLogLevel] :: UpdateAgentLogLevel -> Text
pattern UpdateAgentLogLevel_DEBUG :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_ERROR :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_FATAL :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_INFO :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_NONE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_TRACE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_VERBOSE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_WARN :: UpdateAgentLogLevel
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance GHC.Read.Read Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel
instance GHC.Show.Show Network.AWS.Greengrass.Types.UpdateAgentLogLevel.UpdateAgentLogLevel


module Network.AWS.Greengrass.Types.UpdateTargetsArchitecture

-- | The architecture of the cores which are the targets of an update.
newtype UpdateTargetsArchitecture
UpdateTargetsArchitecture' :: Text -> UpdateTargetsArchitecture
[fromUpdateTargetsArchitecture] :: UpdateTargetsArchitecture -> Text
pattern UpdateTargetsArchitecture_Aarch64 :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_Armv6l :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_Armv7l :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_X86_64 :: UpdateTargetsArchitecture
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance GHC.Read.Read Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture
instance GHC.Show.Show Network.AWS.Greengrass.Types.UpdateTargetsArchitecture.UpdateTargetsArchitecture


module Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem

-- | The operating system of the cores which are the targets of an update.
newtype UpdateTargetsOperatingSystem
UpdateTargetsOperatingSystem' :: Text -> UpdateTargetsOperatingSystem
[fromUpdateTargetsOperatingSystem] :: UpdateTargetsOperatingSystem -> Text
pattern UpdateTargetsOperatingSystem_Amazon_linux :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Openwrt :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Raspbian :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Ubuntu :: UpdateTargetsOperatingSystem
instance Network.AWS.Data.XML.ToXML Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Network.AWS.Data.XML.FromXML Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Network.AWS.Data.Log.ToLog Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Network.AWS.Data.Text.ToText Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Network.AWS.Data.Text.FromText Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance GHC.Classes.Ord Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance GHC.Read.Read Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem
instance GHC.Show.Show Network.AWS.Greengrass.Types.UpdateTargetsOperatingSystem.UpdateTargetsOperatingSystem


module Network.AWS.Greengrass.Types.VersionInformation

-- | Information about a version.
--   
--   <i>See:</i> <a>newVersionInformation</a> smart constructor.
data VersionInformation
VersionInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VersionInformation

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:VersionInformation'] :: VersionInformation -> Maybe Text

-- | The ARN of the version.
[$sel:arn:VersionInformation'] :: VersionInformation -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:VersionInformation'] :: VersionInformation -> Maybe Text

-- | The ID of the version.
[$sel:version:VersionInformation'] :: VersionInformation -> Maybe Text

-- | Create a value of <a>VersionInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:VersionInformation'</a>,
--   <a>versionInformation_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:VersionInformation'</a>, <a>versionInformation_arn</a> -
--   The ARN of the version.
--   
--   <a>$sel:id:VersionInformation'</a>, <a>versionInformation_id</a> - The
--   ID of the parent definition that the version is associated with.
--   
--   <a>$sel:version:VersionInformation'</a>,
--   <a>versionInformation_version</a> - The ID of the version.
newVersionInformation :: VersionInformation

-- | The time, in milliseconds since the epoch, when the version was
--   created.
versionInformation_creationTimestamp :: Lens' VersionInformation (Maybe Text)

-- | The ARN of the version.
versionInformation_arn :: Lens' VersionInformation (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
versionInformation_id :: Lens' VersionInformation (Maybe Text)

-- | The ID of the version.
versionInformation_version :: Lens' VersionInformation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Greengrass.Types.VersionInformation.VersionInformation
instance GHC.Show.Show Network.AWS.Greengrass.Types.VersionInformation.VersionInformation
instance GHC.Read.Read Network.AWS.Greengrass.Types.VersionInformation.VersionInformation
instance GHC.Classes.Eq Network.AWS.Greengrass.Types.VersionInformation.VersionInformation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Greengrass.Types.VersionInformation.VersionInformation
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.Types.VersionInformation.VersionInformation
instance Control.DeepSeq.NFData Network.AWS.Greengrass.Types.VersionInformation.VersionInformation


module Network.AWS.Greengrass.Types

-- | API version <tt>2017-06-07</tt> of the Amazon Greengrass SDK
--   configuration.
defaultService :: Service

-- | General error information.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | General error information.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The current status of the bulk deployment.
newtype BulkDeploymentStatus
BulkDeploymentStatus' :: Text -> BulkDeploymentStatus
[fromBulkDeploymentStatus] :: BulkDeploymentStatus -> Text
pattern BulkDeploymentStatus_Completed :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Failed :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Initializing :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Running :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Stopped :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Stopping :: BulkDeploymentStatus
newtype ConfigurationSyncStatus
ConfigurationSyncStatus' :: Text -> ConfigurationSyncStatus
[fromConfigurationSyncStatus] :: ConfigurationSyncStatus -> Text
pattern ConfigurationSyncStatus_InSync :: ConfigurationSyncStatus
pattern ConfigurationSyncStatus_OutOfSync :: ConfigurationSyncStatus

-- | The type of deployment. When used for ''CreateDeployment'', only
--   ''NewDeployment'' and ''Redeployment'' are valid.
newtype DeploymentType
DeploymentType' :: Text -> DeploymentType
[fromDeploymentType] :: DeploymentType -> Text
pattern DeploymentType_ForceResetDeployment :: DeploymentType
pattern DeploymentType_NewDeployment :: DeploymentType
pattern DeploymentType_Redeployment :: DeploymentType
pattern DeploymentType_ResetDeployment :: DeploymentType
newtype EncodingType
EncodingType' :: Text -> EncodingType
[fromEncodingType] :: EncodingType -> Text
pattern EncodingType_Binary :: EncodingType
pattern EncodingType_Json :: EncodingType

-- | Specifies whether the Lambda function runs in a Greengrass container
--   (default) or without containerization. Unless your scenario requires
--   that you run without containerization, we recommend that you run in a
--   Greengrass container. Omit this value to run the Lambda function with
--   the default containerization for the group.
newtype FunctionIsolationMode
FunctionIsolationMode' :: Text -> FunctionIsolationMode
[fromFunctionIsolationMode] :: FunctionIsolationMode -> Text
pattern FunctionIsolationMode_GreengrassContainer :: FunctionIsolationMode
pattern FunctionIsolationMode_NoContainer :: FunctionIsolationMode
newtype LoggerComponent
LoggerComponent' :: Text -> LoggerComponent
[fromLoggerComponent] :: LoggerComponent -> Text
pattern LoggerComponent_GreengrassSystem :: LoggerComponent
pattern LoggerComponent_Lambda :: LoggerComponent
newtype LoggerLevel
LoggerLevel' :: Text -> LoggerLevel
[fromLoggerLevel] :: LoggerLevel -> Text
pattern LoggerLevel_DEBUG :: LoggerLevel
pattern LoggerLevel_ERROR :: LoggerLevel
pattern LoggerLevel_FATAL :: LoggerLevel
pattern LoggerLevel_INFO :: LoggerLevel
pattern LoggerLevel_WARN :: LoggerLevel
newtype LoggerType
LoggerType' :: Text -> LoggerType
[fromLoggerType] :: LoggerType -> Text
pattern LoggerType_AWSCloudWatch :: LoggerType
pattern LoggerType_FileSystem :: LoggerType

-- | The type of permission a function has to access a resource.
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_Ro :: Permission
pattern Permission_Rw :: Permission

-- | The piece of software on the Greengrass core that will be updated.
newtype SoftwareToUpdate
SoftwareToUpdate' :: Text -> SoftwareToUpdate
[fromSoftwareToUpdate] :: SoftwareToUpdate -> Text
pattern SoftwareToUpdate_Core :: SoftwareToUpdate
pattern SoftwareToUpdate_Ota_agent :: SoftwareToUpdate
newtype Telemetry
Telemetry' :: Text -> Telemetry
[fromTelemetry] :: Telemetry -> Text
pattern Telemetry_Off :: Telemetry
pattern Telemetry_On :: Telemetry

-- | The minimum level of log statements that should be logged by the OTA
--   Agent during an update.
newtype UpdateAgentLogLevel
UpdateAgentLogLevel' :: Text -> UpdateAgentLogLevel
[fromUpdateAgentLogLevel] :: UpdateAgentLogLevel -> Text
pattern UpdateAgentLogLevel_DEBUG :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_ERROR :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_FATAL :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_INFO :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_NONE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_TRACE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_VERBOSE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_WARN :: UpdateAgentLogLevel

-- | The architecture of the cores which are the targets of an update.
newtype UpdateTargetsArchitecture
UpdateTargetsArchitecture' :: Text -> UpdateTargetsArchitecture
[fromUpdateTargetsArchitecture] :: UpdateTargetsArchitecture -> Text
pattern UpdateTargetsArchitecture_Aarch64 :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_Armv6l :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_Armv7l :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_X86_64 :: UpdateTargetsArchitecture

-- | The operating system of the cores which are the targets of an update.
newtype UpdateTargetsOperatingSystem
UpdateTargetsOperatingSystem' :: Text -> UpdateTargetsOperatingSystem
[fromUpdateTargetsOperatingSystem] :: UpdateTargetsOperatingSystem -> Text
pattern UpdateTargetsOperatingSystem_Amazon_linux :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Openwrt :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Raspbian :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Ubuntu :: UpdateTargetsOperatingSystem

-- | Information about a bulk deployment. You cannot start a new bulk
--   deployment while another one is still running or in a non-terminal
--   state.
--   
--   <i>See:</i> <a>newBulkDeployment</a> smart constructor.
data BulkDeployment
BulkDeployment' :: Maybe Text -> Maybe Text -> Maybe Text -> BulkDeployment

-- | The ID of the bulk deployment.
[$sel:bulkDeploymentId:BulkDeployment'] :: BulkDeployment -> Maybe Text

-- | The time, in ISO format, when the deployment was created.
[$sel:createdAt:BulkDeployment'] :: BulkDeployment -> Maybe Text

-- | The ARN of the bulk deployment.
[$sel:bulkDeploymentArn:BulkDeployment'] :: BulkDeployment -> Maybe Text

-- | Create a value of <a>BulkDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:BulkDeployment'</a>,
--   <a>bulkDeployment_bulkDeploymentId</a> - The ID of the bulk
--   deployment.
--   
--   <a>$sel:createdAt:BulkDeployment'</a>, <a>bulkDeployment_createdAt</a>
--   - The time, in ISO format, when the deployment was created.
--   
--   <a>$sel:bulkDeploymentArn:BulkDeployment'</a>,
--   <a>bulkDeployment_bulkDeploymentArn</a> - The ARN of the bulk
--   deployment.
newBulkDeployment :: BulkDeployment

-- | The ID of the bulk deployment.
bulkDeployment_bulkDeploymentId :: Lens' BulkDeployment (Maybe Text)

-- | The time, in ISO format, when the deployment was created.
bulkDeployment_createdAt :: Lens' BulkDeployment (Maybe Text)

-- | The ARN of the bulk deployment.
bulkDeployment_bulkDeploymentArn :: Lens' BulkDeployment (Maybe Text)

-- | Relevant metrics on input records processed during bulk deployment.
--   
--   <i>See:</i> <a>newBulkDeploymentMetrics</a> smart constructor.
data BulkDeploymentMetrics
BulkDeploymentMetrics' :: Maybe Int -> Maybe Int -> Maybe Int -> BulkDeploymentMetrics

-- | The total number of group records from the input file that have been
--   processed so far, or attempted.
[$sel:recordsProcessed:BulkDeploymentMetrics'] :: BulkDeploymentMetrics -> Maybe Int

-- | The total number of deployment attempts that returned a retryable
--   error. For example, a retry is triggered if the attempt to deploy a
--   group returns a throttling error. ''StartBulkDeployment'' retries a
--   group deployment up to five times.
[$sel:retryAttempts:BulkDeploymentMetrics'] :: BulkDeploymentMetrics -> Maybe Int

-- | The total number of records that returned a non-retryable error. For
--   example, this can occur if a group record from the input file uses an
--   invalid format or specifies a nonexistent group version, or if the
--   execution role doesn't grant permission to deploy a group or group
--   version.
[$sel:invalidInputRecords:BulkDeploymentMetrics'] :: BulkDeploymentMetrics -> Maybe Int

-- | Create a value of <a>BulkDeploymentMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordsProcessed:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_recordsProcessed</a> - The total number of
--   group records from the input file that have been processed so far, or
--   attempted.
--   
--   <a>$sel:retryAttempts:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_retryAttempts</a> - The total number of
--   deployment attempts that returned a retryable error. For example, a
--   retry is triggered if the attempt to deploy a group returns a
--   throttling error. ''StartBulkDeployment'' retries a group deployment
--   up to five times.
--   
--   <a>$sel:invalidInputRecords:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_invalidInputRecords</a> - The total number of
--   records that returned a non-retryable error. For example, this can
--   occur if a group record from the input file uses an invalid format or
--   specifies a nonexistent group version, or if the execution role
--   doesn't grant permission to deploy a group or group version.
newBulkDeploymentMetrics :: BulkDeploymentMetrics

-- | The total number of group records from the input file that have been
--   processed so far, or attempted.
bulkDeploymentMetrics_recordsProcessed :: Lens' BulkDeploymentMetrics (Maybe Int)

-- | The total number of deployment attempts that returned a retryable
--   error. For example, a retry is triggered if the attempt to deploy a
--   group returns a throttling error. ''StartBulkDeployment'' retries a
--   group deployment up to five times.
bulkDeploymentMetrics_retryAttempts :: Lens' BulkDeploymentMetrics (Maybe Int)

-- | The total number of records that returned a non-retryable error. For
--   example, this can occur if a group record from the input file uses an
--   invalid format or specifies a nonexistent group version, or if the
--   execution role doesn't grant permission to deploy a group or group
--   version.
bulkDeploymentMetrics_invalidInputRecords :: Lens' BulkDeploymentMetrics (Maybe Int)

-- | Information about an individual group deployment in a bulk deployment
--   operation.
--   
--   <i>See:</i> <a>newBulkDeploymentResult</a> smart constructor.
data BulkDeploymentResult
BulkDeploymentResult' :: Maybe Text -> Maybe DeploymentType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ErrorDetail] -> BulkDeploymentResult

-- | The ID of the group deployment.
[$sel:deploymentId:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The type of the deployment.
[$sel:deploymentType:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe DeploymentType

-- | The time, in ISO format, when the deployment was created.
[$sel:createdAt:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The current status of the group deployment: ''InProgress'',
--   ''Building'', ''Success'', or ''Failure''.
[$sel:deploymentStatus:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The ARN of the group deployment.
[$sel:deploymentArn:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The error message for a failed deployment
[$sel:errorMessage:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | The ARN of the Greengrass group.
[$sel:groupArn:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe Text

-- | Details about the error.
[$sel:errorDetails:BulkDeploymentResult'] :: BulkDeploymentResult -> Maybe [ErrorDetail]

-- | Create a value of <a>BulkDeploymentResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentId</a> - The ID of the group
--   deployment.
--   
--   <a>$sel:deploymentType:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentType</a> - The type of the
--   deployment.
--   
--   <a>$sel:createdAt:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_createdAt</a> - The time, in ISO format, when
--   the deployment was created.
--   
--   <a>$sel:deploymentStatus:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentStatus</a> - The current status of
--   the group deployment: ''InProgress'', ''Building'', ''Success'', or
--   ''Failure''.
--   
--   <a>$sel:deploymentArn:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentArn</a> - The ARN of the group
--   deployment.
--   
--   <a>$sel:errorMessage:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_errorMessage</a> - The error message for a
--   failed deployment
--   
--   <a>$sel:groupArn:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_groupArn</a> - The ARN of the Greengrass
--   group.
--   
--   <a>$sel:errorDetails:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_errorDetails</a> - Details about the error.
newBulkDeploymentResult :: BulkDeploymentResult

-- | The ID of the group deployment.
bulkDeploymentResult_deploymentId :: Lens' BulkDeploymentResult (Maybe Text)

-- | The type of the deployment.
bulkDeploymentResult_deploymentType :: Lens' BulkDeploymentResult (Maybe DeploymentType)

-- | The time, in ISO format, when the deployment was created.
bulkDeploymentResult_createdAt :: Lens' BulkDeploymentResult (Maybe Text)

-- | The current status of the group deployment: ''InProgress'',
--   ''Building'', ''Success'', or ''Failure''.
bulkDeploymentResult_deploymentStatus :: Lens' BulkDeploymentResult (Maybe Text)

-- | The ARN of the group deployment.
bulkDeploymentResult_deploymentArn :: Lens' BulkDeploymentResult (Maybe Text)

-- | The error message for a failed deployment
bulkDeploymentResult_errorMessage :: Lens' BulkDeploymentResult (Maybe Text)

-- | The ARN of the Greengrass group.
bulkDeploymentResult_groupArn :: Lens' BulkDeploymentResult (Maybe Text)

-- | Details about the error.
bulkDeploymentResult_errorDetails :: Lens' BulkDeploymentResult (Maybe [ErrorDetail])

-- | Information about a Greengrass core's connectivity.
--   
--   <i>See:</i> <a>newConnectivityInfo</a> smart constructor.
data ConnectivityInfo
ConnectivityInfo' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> ConnectivityInfo

-- | Metadata for this endpoint.
[$sel:metadata:ConnectivityInfo'] :: ConnectivityInfo -> Maybe Text

-- | The ID of the connectivity information.
[$sel:id:ConnectivityInfo'] :: ConnectivityInfo -> Maybe Text

-- | The port of the Greengrass core. Usually 8883.
[$sel:portNumber:ConnectivityInfo'] :: ConnectivityInfo -> Maybe Int

-- | The endpoint for the Greengrass core. Can be an IP address or DNS.
[$sel:hostAddress:ConnectivityInfo'] :: ConnectivityInfo -> Maybe Text

-- | Create a value of <a>ConnectivityInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadata:ConnectivityInfo'</a>,
--   <a>connectivityInfo_metadata</a> - Metadata for this endpoint.
--   
--   <a>$sel:id:ConnectivityInfo'</a>, <a>connectivityInfo_id</a> - The ID
--   of the connectivity information.
--   
--   <a>$sel:portNumber:ConnectivityInfo'</a>,
--   <a>connectivityInfo_portNumber</a> - The port of the Greengrass core.
--   Usually 8883.
--   
--   <a>$sel:hostAddress:ConnectivityInfo'</a>,
--   <a>connectivityInfo_hostAddress</a> - The endpoint for the Greengrass
--   core. Can be an IP address or DNS.
newConnectivityInfo :: ConnectivityInfo

-- | Metadata for this endpoint.
connectivityInfo_metadata :: Lens' ConnectivityInfo (Maybe Text)

-- | The ID of the connectivity information.
connectivityInfo_id :: Lens' ConnectivityInfo (Maybe Text)

-- | The port of the Greengrass core. Usually 8883.
connectivityInfo_portNumber :: Lens' ConnectivityInfo (Maybe Int)

-- | The endpoint for the Greengrass core. Can be an IP address or DNS.
connectivityInfo_hostAddress :: Lens' ConnectivityInfo (Maybe Text)

-- | Information about a connector. Connectors run on the Greengrass core
--   and contain built-in integration with local infrastructure, device
--   protocols, AWS, and other cloud services.
--   
--   <i>See:</i> <a>newConnector</a> smart constructor.
data Connector
Connector' :: Maybe (HashMap Text Text) -> Text -> Text -> Connector

-- | The parameters or configuration that the connector uses.
[$sel:parameters:Connector'] :: Connector -> Maybe (HashMap Text Text)

-- | The ARN of the connector.
[$sel:connectorArn:Connector'] :: Connector -> Text

-- | A descriptive or arbitrary ID for the connector. This value must be
--   unique within the connector definition version. Max length is 128
--   characters with pattern [a-zA-Z0-9:_-]+.
[$sel:id:Connector'] :: Connector -> Text

-- | Create a value of <a>Connector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:Connector'</a>, <a>connector_parameters</a> - The
--   parameters or configuration that the connector uses.
--   
--   <a>$sel:connectorArn:Connector'</a>, <a>connector_connectorArn</a> -
--   The ARN of the connector.
--   
--   <a>$sel:id:Connector'</a>, <a>connector_id</a> - A descriptive or
--   arbitrary ID for the connector. This value must be unique within the
--   connector definition version. Max length is 128 characters with
--   pattern [a-zA-Z0-9:_-]+.
newConnector :: Text -> Text -> Connector

-- | The parameters or configuration that the connector uses.
connector_parameters :: Lens' Connector (Maybe (HashMap Text Text))

-- | The ARN of the connector.
connector_connectorArn :: Lens' Connector Text

-- | A descriptive or arbitrary ID for the connector. This value must be
--   unique within the connector definition version. Max length is 128
--   characters with pattern [a-zA-Z0-9:_-]+.
connector_id :: Lens' Connector Text

-- | Information about the connector definition version, which is a
--   container for connectors.
--   
--   <i>See:</i> <a>newConnectorDefinitionVersion</a> smart constructor.
data ConnectorDefinitionVersion
ConnectorDefinitionVersion' :: Maybe [Connector] -> ConnectorDefinitionVersion

-- | A list of references to connectors in this version, with their
--   corresponding configuration settings.
[$sel:connectors:ConnectorDefinitionVersion'] :: ConnectorDefinitionVersion -> Maybe [Connector]

-- | Create a value of <a>ConnectorDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectors:ConnectorDefinitionVersion'</a>,
--   <a>connectorDefinitionVersion_connectors</a> - A list of references to
--   connectors in this version, with their corresponding configuration
--   settings.
newConnectorDefinitionVersion :: ConnectorDefinitionVersion

-- | A list of references to connectors in this version, with their
--   corresponding configuration settings.
connectorDefinitionVersion_connectors :: Lens' ConnectorDefinitionVersion (Maybe [Connector])

-- | Information about a core.
--   
--   <i>See:</i> <a>newCore</a> smart constructor.
data Core
Core' :: Maybe Bool -> Text -> Text -> Text -> Core

-- | If true, the core's local shadow is automatically synced with the
--   cloud.
[$sel:syncShadow:Core'] :: Core -> Maybe Bool

-- | The ARN of the thing which is the core.
[$sel:thingArn:Core'] :: Core -> Text

-- | A descriptive or arbitrary ID for the core. This value must be unique
--   within the core definition version. Max length is 128 characters with
--   pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:Core'] :: Core -> Text

-- | The ARN of the certificate associated with the core.
[$sel:certificateArn:Core'] :: Core -> Text

-- | Create a value of <a>Core</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:syncShadow:Core'</a>, <a>core_syncShadow</a> - If true, the
--   core's local shadow is automatically synced with the cloud.
--   
--   <a>$sel:thingArn:Core'</a>, <a>core_thingArn</a> - The ARN of the
--   thing which is the core.
--   
--   <a>$sel:id:Core'</a>, <a>core_id</a> - A descriptive or arbitrary ID
--   for the core. This value must be unique within the core definition
--   version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:certificateArn:Core'</a>, <a>core_certificateArn</a> - The ARN
--   of the certificate associated with the core.
newCore :: Text -> Text -> Text -> Core

-- | If true, the core's local shadow is automatically synced with the
--   cloud.
core_syncShadow :: Lens' Core (Maybe Bool)

-- | The ARN of the thing which is the core.
core_thingArn :: Lens' Core Text

-- | A descriptive or arbitrary ID for the core. This value must be unique
--   within the core definition version. Max length is 128 characters with
--   pattern ''[a-zA-Z0-9:_-]+''.
core_id :: Lens' Core Text

-- | The ARN of the certificate associated with the core.
core_certificateArn :: Lens' Core Text

-- | Information about a core definition version.
--   
--   <i>See:</i> <a>newCoreDefinitionVersion</a> smart constructor.
data CoreDefinitionVersion
CoreDefinitionVersion' :: Maybe [Core] -> CoreDefinitionVersion

-- | A list of cores in the core definition version.
[$sel:cores:CoreDefinitionVersion'] :: CoreDefinitionVersion -> Maybe [Core]

-- | Create a value of <a>CoreDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cores:CoreDefinitionVersion'</a>,
--   <a>coreDefinitionVersion_cores</a> - A list of cores in the core
--   definition version.
newCoreDefinitionVersion :: CoreDefinitionVersion

-- | A list of cores in the core definition version.
coreDefinitionVersion_cores :: Lens' CoreDefinitionVersion (Maybe [Core])

-- | Information about a definition.
--   
--   <i>See:</i> <a>newDefinitionInformation</a> smart constructor.
data DefinitionInformation
DefinitionInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> DefinitionInformation

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The ID of the definition.
[$sel:id:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | The name of the definition.
[$sel:name:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:DefinitionInformation'] :: DefinitionInformation -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:DefinitionInformation'] :: DefinitionInformation -> Maybe Text

-- | Create a value of <a>DefinitionInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:DefinitionInformation'</a>,
--   <a>definitionInformation_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:DefinitionInformation'</a>,
--   <a>definitionInformation_latestVersionArn</a> - The ARN of the latest
--   version associated with the definition.
--   
--   <a>$sel:latestVersion:DefinitionInformation'</a>,
--   <a>definitionInformation_latestVersion</a> - The ID of the latest
--   version associated with the definition.
--   
--   <a>$sel:arn:DefinitionInformation'</a>,
--   <a>definitionInformation_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:DefinitionInformation'</a>, <a>definitionInformation_id</a>
--   - The ID of the definition.
--   
--   <a>$sel:name:DefinitionInformation'</a>,
--   <a>definitionInformation_name</a> - The name of the definition.
--   
--   <a>$sel:tags:DefinitionInformation'</a>,
--   <a>definitionInformation_tags</a> - Tag(s) attached to the resource
--   arn.
--   
--   <a>$sel:lastUpdatedTimestamp:DefinitionInformation'</a>,
--   <a>definitionInformation_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
newDefinitionInformation :: DefinitionInformation

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
definitionInformation_creationTimestamp :: Lens' DefinitionInformation (Maybe Text)

-- | The ARN of the latest version associated with the definition.
definitionInformation_latestVersionArn :: Lens' DefinitionInformation (Maybe Text)

-- | The ID of the latest version associated with the definition.
definitionInformation_latestVersion :: Lens' DefinitionInformation (Maybe Text)

-- | The ARN of the definition.
definitionInformation_arn :: Lens' DefinitionInformation (Maybe Text)

-- | The ID of the definition.
definitionInformation_id :: Lens' DefinitionInformation (Maybe Text)

-- | The name of the definition.
definitionInformation_name :: Lens' DefinitionInformation (Maybe Text)

-- | Tag(s) attached to the resource arn.
definitionInformation_tags :: Lens' DefinitionInformation (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
definitionInformation_lastUpdatedTimestamp :: Lens' DefinitionInformation (Maybe Text)

-- | Information about a deployment.
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Text -> Maybe DeploymentType -> Maybe Text -> Maybe Text -> Maybe Text -> Deployment

-- | The ID of the deployment.
[$sel:deploymentId:Deployment'] :: Deployment -> Maybe Text

-- | The type of the deployment.
[$sel:deploymentType:Deployment'] :: Deployment -> Maybe DeploymentType

-- | The time, in milliseconds since the epoch, when the deployment was
--   created.
[$sel:createdAt:Deployment'] :: Deployment -> Maybe Text

-- | The ARN of the deployment.
[$sel:deploymentArn:Deployment'] :: Deployment -> Maybe Text

-- | The ARN of the group for this deployment.
[$sel:groupArn:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Deployment'</a>, <a>deployment_deploymentId</a> -
--   The ID of the deployment.
--   
--   <a>$sel:deploymentType:Deployment'</a>,
--   <a>deployment_deploymentType</a> - The type of the deployment.
--   
--   <a>$sel:createdAt:Deployment'</a>, <a>deployment_createdAt</a> - The
--   time, in milliseconds since the epoch, when the deployment was
--   created.
--   
--   <a>$sel:deploymentArn:Deployment'</a>, <a>deployment_deploymentArn</a>
--   - The ARN of the deployment.
--   
--   <a>$sel:groupArn:Deployment'</a>, <a>deployment_groupArn</a> - The ARN
--   of the group for this deployment.
newDeployment :: Deployment

-- | The ID of the deployment.
deployment_deploymentId :: Lens' Deployment (Maybe Text)

-- | The type of the deployment.
deployment_deploymentType :: Lens' Deployment (Maybe DeploymentType)

-- | The time, in milliseconds since the epoch, when the deployment was
--   created.
deployment_createdAt :: Lens' Deployment (Maybe Text)

-- | The ARN of the deployment.
deployment_deploymentArn :: Lens' Deployment (Maybe Text)

-- | The ARN of the group for this deployment.
deployment_groupArn :: Lens' Deployment (Maybe Text)

-- | Information about a device.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Bool -> Text -> Text -> Text -> Device

-- | If true, the device's local shadow will be automatically synced with
--   the cloud.
[$sel:syncShadow:Device'] :: Device -> Maybe Bool

-- | The thing ARN of the device.
[$sel:thingArn:Device'] :: Device -> Text

-- | A descriptive or arbitrary ID for the device. This value must be
--   unique within the device definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:Device'] :: Device -> Text

-- | The ARN of the certificate associated with the device.
[$sel:certificateArn:Device'] :: Device -> Text

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:syncShadow:Device'</a>, <a>device_syncShadow</a> - If true,
--   the device's local shadow will be automatically synced with the cloud.
--   
--   <a>$sel:thingArn:Device'</a>, <a>device_thingArn</a> - The thing ARN
--   of the device.
--   
--   <a>$sel:id:Device'</a>, <a>device_id</a> - A descriptive or arbitrary
--   ID for the device. This value must be unique within the device
--   definition version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:certificateArn:Device'</a>, <a>device_certificateArn</a> - The
--   ARN of the certificate associated with the device.
newDevice :: Text -> Text -> Text -> Device

-- | If true, the device's local shadow will be automatically synced with
--   the cloud.
device_syncShadow :: Lens' Device (Maybe Bool)

-- | The thing ARN of the device.
device_thingArn :: Lens' Device Text

-- | A descriptive or arbitrary ID for the device. This value must be
--   unique within the device definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
device_id :: Lens' Device Text

-- | The ARN of the certificate associated with the device.
device_certificateArn :: Lens' Device Text

-- | Information about a device definition version.
--   
--   <i>See:</i> <a>newDeviceDefinitionVersion</a> smart constructor.
data DeviceDefinitionVersion
DeviceDefinitionVersion' :: Maybe [Device] -> DeviceDefinitionVersion

-- | A list of devices in the definition version.
[$sel:devices:DeviceDefinitionVersion'] :: DeviceDefinitionVersion -> Maybe [Device]

-- | Create a value of <a>DeviceDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devices:DeviceDefinitionVersion'</a>,
--   <a>deviceDefinitionVersion_devices</a> - A list of devices in the
--   definition version.
newDeviceDefinitionVersion :: DeviceDefinitionVersion

-- | A list of devices in the definition version.
deviceDefinitionVersion_devices :: Lens' DeviceDefinitionVersion (Maybe [Device])

-- | Details about the error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | A detailed error message.
[$sel:detailedErrorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | A detailed error code.
[$sel:detailedErrorCode:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detailedErrorMessage:ErrorDetail'</a>,
--   <a>errorDetail_detailedErrorMessage</a> - A detailed error message.
--   
--   <a>$sel:detailedErrorCode:ErrorDetail'</a>,
--   <a>errorDetail_detailedErrorCode</a> - A detailed error code.
newErrorDetail :: ErrorDetail

-- | A detailed error message.
errorDetail_detailedErrorMessage :: Lens' ErrorDetail (Maybe Text)

-- | A detailed error code.
errorDetail_detailedErrorCode :: Lens' ErrorDetail (Maybe Text)

-- | Information about a Lambda function.
--   
--   <i>See:</i> <a>newFunction</a> smart constructor.
data Function
Function' :: Maybe FunctionConfiguration -> Maybe Text -> Text -> Function

-- | The configuration of the Lambda function.
[$sel:functionConfiguration:Function'] :: Function -> Maybe FunctionConfiguration

-- | The ARN of the Lambda function.
[$sel:functionArn:Function'] :: Function -> Maybe Text

-- | A descriptive or arbitrary ID for the function. This value must be
--   unique within the function definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:Function'] :: Function -> Text

-- | Create a value of <a>Function</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionConfiguration:Function'</a>,
--   <a>function_functionConfiguration</a> - The configuration of the
--   Lambda function.
--   
--   <a>$sel:functionArn:Function'</a>, <a>function_functionArn</a> - The
--   ARN of the Lambda function.
--   
--   <a>$sel:id:Function'</a>, <a>function_id</a> - A descriptive or
--   arbitrary ID for the function. This value must be unique within the
--   function definition version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
newFunction :: Text -> Function

-- | The configuration of the Lambda function.
function_functionConfiguration :: Lens' Function (Maybe FunctionConfiguration)

-- | The ARN of the Lambda function.
function_functionArn :: Lens' Function (Maybe Text)

-- | A descriptive or arbitrary ID for the function. This value must be
--   unique within the function definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
function_id :: Lens' Function Text

-- | The configuration of the Lambda function.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Int -> Maybe Text -> Maybe Int -> Maybe EncodingType -> Maybe Text -> Maybe Bool -> Maybe FunctionConfigurationEnvironment -> FunctionConfiguration

-- | The memory size, in KB, which the function requires. This setting is
--   not applicable and should be cleared when you run the Lambda function
--   without containerization.
[$sel:memorySize:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Int

-- | The execution arguments.
[$sel:execArgs:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | The allowed function execution time, after which Lambda should
--   terminate the function. This timeout still applies to pinned Lambda
--   functions for each request.
[$sel:timeout:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Int

-- | The expected encoding type of the input payload for the function. The
--   default is ''json''.
[$sel:encodingType:FunctionConfiguration'] :: FunctionConfiguration -> Maybe EncodingType

-- | The name of the function executable.
[$sel:executable:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Text

-- | True if the function is pinned. Pinned means the function is
--   long-lived and starts when the core starts.
[$sel:pinned:FunctionConfiguration'] :: FunctionConfiguration -> Maybe Bool

-- | The environment configuration of the function.
[$sel:environment:FunctionConfiguration'] :: FunctionConfiguration -> Maybe FunctionConfigurationEnvironment

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The memory size, in KB,
--   which the function requires. This setting is not applicable and should
--   be cleared when you run the Lambda function without containerization.
--   
--   <a>$sel:execArgs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_execArgs</a> - The execution arguments.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The allowed function execution
--   time, after which Lambda should terminate the function. This timeout
--   still applies to pinned Lambda functions for each request.
--   
--   <a>$sel:encodingType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_encodingType</a> - The expected encoding type
--   of the input payload for the function. The default is ''json''.
--   
--   <a>$sel:executable:FunctionConfiguration'</a>,
--   <a>functionConfiguration_executable</a> - The name of the function
--   executable.
--   
--   <a>$sel:pinned:FunctionConfiguration'</a>,
--   <a>functionConfiguration_pinned</a> - True if the function is pinned.
--   Pinned means the function is long-lived and starts when the core
--   starts.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The environment
--   configuration of the function.
newFunctionConfiguration :: FunctionConfiguration

-- | The memory size, in KB, which the function requires. This setting is
--   not applicable and should be cleared when you run the Lambda function
--   without containerization.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Int)

-- | The execution arguments.
functionConfiguration_execArgs :: Lens' FunctionConfiguration (Maybe Text)

-- | The allowed function execution time, after which Lambda should
--   terminate the function. This timeout still applies to pinned Lambda
--   functions for each request.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Int)

-- | The expected encoding type of the input payload for the function. The
--   default is ''json''.
functionConfiguration_encodingType :: Lens' FunctionConfiguration (Maybe EncodingType)

-- | The name of the function executable.
functionConfiguration_executable :: Lens' FunctionConfiguration (Maybe Text)

-- | True if the function is pinned. Pinned means the function is
--   long-lived and starts when the core starts.
functionConfiguration_pinned :: Lens' FunctionConfiguration (Maybe Bool)

-- | The environment configuration of the function.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe FunctionConfigurationEnvironment)

-- | The environment configuration of the function.
--   
--   <i>See:</i> <a>newFunctionConfigurationEnvironment</a> smart
--   constructor.
data FunctionConfigurationEnvironment
FunctionConfigurationEnvironment' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe FunctionExecutionConfig -> Maybe [ResourceAccessPolicy] -> FunctionConfigurationEnvironment

-- | If true, the Lambda function is allowed to access the host's /sys
--   folder. Use this when the Lambda function needs to read device
--   information from /sys. This setting applies only when you run the
--   Lambda function in a Greengrass container.
[$sel:accessSysfs:FunctionConfigurationEnvironment'] :: FunctionConfigurationEnvironment -> Maybe Bool

-- | Environment variables for the Lambda function's configuration.
[$sel:variables:FunctionConfigurationEnvironment'] :: FunctionConfigurationEnvironment -> Maybe (HashMap Text Text)

-- | Configuration related to executing the Lambda function
[$sel:execution:FunctionConfigurationEnvironment'] :: FunctionConfigurationEnvironment -> Maybe FunctionExecutionConfig

-- | A list of the resources, with their permissions, to which the Lambda
--   function will be granted access. A Lambda function can have at most 10
--   resources. ResourceAccessPolicies apply only when you run the Lambda
--   function in a Greengrass container.
[$sel:resourceAccessPolicies:FunctionConfigurationEnvironment'] :: FunctionConfigurationEnvironment -> Maybe [ResourceAccessPolicy]

-- | Create a value of <a>FunctionConfigurationEnvironment</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessSysfs:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_accessSysfs</a> - If true, the
--   Lambda function is allowed to access the host's /sys folder. Use this
--   when the Lambda function needs to read device information from /sys.
--   This setting applies only when you run the Lambda function in a
--   Greengrass container.
--   
--   <a>$sel:variables:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_variables</a> - Environment
--   variables for the Lambda function's configuration.
--   
--   <a>$sel:execution:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_execution</a> - Configuration
--   related to executing the Lambda function
--   
--   <a>$sel:resourceAccessPolicies:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_resourceAccessPolicies</a> - A
--   list of the resources, with their permissions, to which the Lambda
--   function will be granted access. A Lambda function can have at most 10
--   resources. ResourceAccessPolicies apply only when you run the Lambda
--   function in a Greengrass container.
newFunctionConfigurationEnvironment :: FunctionConfigurationEnvironment

-- | If true, the Lambda function is allowed to access the host's /sys
--   folder. Use this when the Lambda function needs to read device
--   information from /sys. This setting applies only when you run the
--   Lambda function in a Greengrass container.
functionConfigurationEnvironment_accessSysfs :: Lens' FunctionConfigurationEnvironment (Maybe Bool)

-- | Environment variables for the Lambda function's configuration.
functionConfigurationEnvironment_variables :: Lens' FunctionConfigurationEnvironment (Maybe (HashMap Text Text))

-- | Configuration related to executing the Lambda function
functionConfigurationEnvironment_execution :: Lens' FunctionConfigurationEnvironment (Maybe FunctionExecutionConfig)

-- | A list of the resources, with their permissions, to which the Lambda
--   function will be granted access. A Lambda function can have at most 10
--   resources. ResourceAccessPolicies apply only when you run the Lambda
--   function in a Greengrass container.
functionConfigurationEnvironment_resourceAccessPolicies :: Lens' FunctionConfigurationEnvironment (Maybe [ResourceAccessPolicy])

-- | The default configuration that applies to all Lambda functions in the
--   group. Individual Lambda functions can override these settings.
--   
--   <i>See:</i> <a>newFunctionDefaultConfig</a> smart constructor.
data FunctionDefaultConfig
FunctionDefaultConfig' :: Maybe FunctionDefaultExecutionConfig -> FunctionDefaultConfig
[$sel:execution:FunctionDefaultConfig'] :: FunctionDefaultConfig -> Maybe FunctionDefaultExecutionConfig

-- | Create a value of <a>FunctionDefaultConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:execution:FunctionDefaultConfig'</a>,
--   <a>functionDefaultConfig_execution</a> - Undocumented member.
newFunctionDefaultConfig :: FunctionDefaultConfig

-- | Undocumented member.
functionDefaultConfig_execution :: Lens' FunctionDefaultConfig (Maybe FunctionDefaultExecutionConfig)

-- | Configuration information that specifies how a Lambda function runs.
--   
--   <i>See:</i> <a>newFunctionDefaultExecutionConfig</a> smart
--   constructor.
data FunctionDefaultExecutionConfig
FunctionDefaultExecutionConfig' :: Maybe FunctionIsolationMode -> Maybe FunctionRunAsConfig -> FunctionDefaultExecutionConfig
[$sel:isolationMode:FunctionDefaultExecutionConfig'] :: FunctionDefaultExecutionConfig -> Maybe FunctionIsolationMode
[$sel:runAs:FunctionDefaultExecutionConfig'] :: FunctionDefaultExecutionConfig -> Maybe FunctionRunAsConfig

-- | Create a value of <a>FunctionDefaultExecutionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isolationMode:FunctionDefaultExecutionConfig'</a>,
--   <a>functionDefaultExecutionConfig_isolationMode</a> - Undocumented
--   member.
--   
--   <a>$sel:runAs:FunctionDefaultExecutionConfig'</a>,
--   <a>functionDefaultExecutionConfig_runAs</a> - Undocumented member.
newFunctionDefaultExecutionConfig :: FunctionDefaultExecutionConfig

-- | Undocumented member.
functionDefaultExecutionConfig_isolationMode :: Lens' FunctionDefaultExecutionConfig (Maybe FunctionIsolationMode)

-- | Undocumented member.
functionDefaultExecutionConfig_runAs :: Lens' FunctionDefaultExecutionConfig (Maybe FunctionRunAsConfig)

-- | Information about a function definition version.
--   
--   <i>See:</i> <a>newFunctionDefinitionVersion</a> smart constructor.
data FunctionDefinitionVersion
FunctionDefinitionVersion' :: Maybe [Function] -> Maybe FunctionDefaultConfig -> FunctionDefinitionVersion

-- | A list of Lambda functions in this function definition version.
[$sel:functions:FunctionDefinitionVersion'] :: FunctionDefinitionVersion -> Maybe [Function]

-- | The default configuration that applies to all Lambda functions in this
--   function definition version. Individual Lambda functions can override
--   these settings.
[$sel:defaultConfig:FunctionDefinitionVersion'] :: FunctionDefinitionVersion -> Maybe FunctionDefaultConfig

-- | Create a value of <a>FunctionDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functions:FunctionDefinitionVersion'</a>,
--   <a>functionDefinitionVersion_functions</a> - A list of Lambda
--   functions in this function definition version.
--   
--   <a>$sel:defaultConfig:FunctionDefinitionVersion'</a>,
--   <a>functionDefinitionVersion_defaultConfig</a> - The default
--   configuration that applies to all Lambda functions in this function
--   definition version. Individual Lambda functions can override these
--   settings.
newFunctionDefinitionVersion :: FunctionDefinitionVersion

-- | A list of Lambda functions in this function definition version.
functionDefinitionVersion_functions :: Lens' FunctionDefinitionVersion (Maybe [Function])

-- | The default configuration that applies to all Lambda functions in this
--   function definition version. Individual Lambda functions can override
--   these settings.
functionDefinitionVersion_defaultConfig :: Lens' FunctionDefinitionVersion (Maybe FunctionDefaultConfig)

-- | Configuration information that specifies how a Lambda function runs.
--   
--   <i>See:</i> <a>newFunctionExecutionConfig</a> smart constructor.
data FunctionExecutionConfig
FunctionExecutionConfig' :: Maybe FunctionIsolationMode -> Maybe FunctionRunAsConfig -> FunctionExecutionConfig
[$sel:isolationMode:FunctionExecutionConfig'] :: FunctionExecutionConfig -> Maybe FunctionIsolationMode
[$sel:runAs:FunctionExecutionConfig'] :: FunctionExecutionConfig -> Maybe FunctionRunAsConfig

-- | Create a value of <a>FunctionExecutionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isolationMode:FunctionExecutionConfig'</a>,
--   <a>functionExecutionConfig_isolationMode</a> - Undocumented member.
--   
--   <a>$sel:runAs:FunctionExecutionConfig'</a>,
--   <a>functionExecutionConfig_runAs</a> - Undocumented member.
newFunctionExecutionConfig :: FunctionExecutionConfig

-- | Undocumented member.
functionExecutionConfig_isolationMode :: Lens' FunctionExecutionConfig (Maybe FunctionIsolationMode)

-- | Undocumented member.
functionExecutionConfig_runAs :: Lens' FunctionExecutionConfig (Maybe FunctionRunAsConfig)

-- | Specifies the user and group whose permissions are used when running
--   the Lambda function. You can specify one or both values to override
--   the default values. We recommend that you avoid running as root unless
--   absolutely necessary to minimize the risk of unintended changes or
--   malicious attacks. To run as root, you must set ''IsolationMode'' to
--   ''NoContainer'' and update config.json in ''greengrass-root/config''
--   to set ''allowFunctionsToRunAsRoot'' to ''yes''.
--   
--   <i>See:</i> <a>newFunctionRunAsConfig</a> smart constructor.
data FunctionRunAsConfig
FunctionRunAsConfig' :: Maybe Int -> Maybe Int -> FunctionRunAsConfig

-- | The group ID whose permissions are used to run a Lambda function.
[$sel:gid:FunctionRunAsConfig'] :: FunctionRunAsConfig -> Maybe Int

-- | The user ID whose permissions are used to run a Lambda function.
[$sel:uid:FunctionRunAsConfig'] :: FunctionRunAsConfig -> Maybe Int

-- | Create a value of <a>FunctionRunAsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gid:FunctionRunAsConfig'</a>, <a>functionRunAsConfig_gid</a> -
--   The group ID whose permissions are used to run a Lambda function.
--   
--   <a>$sel:uid:FunctionRunAsConfig'</a>, <a>functionRunAsConfig_uid</a> -
--   The user ID whose permissions are used to run a Lambda function.
newFunctionRunAsConfig :: FunctionRunAsConfig

-- | The group ID whose permissions are used to run a Lambda function.
functionRunAsConfig_gid :: Lens' FunctionRunAsConfig (Maybe Int)

-- | The user ID whose permissions are used to run a Lambda function.
functionRunAsConfig_uid :: Lens' FunctionRunAsConfig (Maybe Int)

-- | Information about a logger
--   
--   <i>See:</i> <a>newGreengrassLogger</a> smart constructor.
data GreengrassLogger
GreengrassLogger' :: Maybe Int -> LoggerType -> LoggerLevel -> Text -> LoggerComponent -> GreengrassLogger

-- | The amount of file space, in KB, to use if the local file system is
--   used for logging purposes.
[$sel:space:GreengrassLogger'] :: GreengrassLogger -> Maybe Int

-- | The type of log output which will be used.
[$sel:type':GreengrassLogger'] :: GreengrassLogger -> LoggerType

-- | The level of the logs.
[$sel:level:GreengrassLogger'] :: GreengrassLogger -> LoggerLevel

-- | A descriptive or arbitrary ID for the logger. This value must be
--   unique within the logger definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:GreengrassLogger'] :: GreengrassLogger -> Text

-- | The component that will be subject to logging.
[$sel:component:GreengrassLogger'] :: GreengrassLogger -> LoggerComponent

-- | Create a value of <a>GreengrassLogger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:space:GreengrassLogger'</a>, <a>greengrassLogger_space</a> -
--   The amount of file space, in KB, to use if the local file system is
--   used for logging purposes.
--   
--   <a>$sel:type':GreengrassLogger'</a>, <a>greengrassLogger_type</a> -
--   The type of log output which will be used.
--   
--   <a>$sel:level:GreengrassLogger'</a>, <a>greengrassLogger_level</a> -
--   The level of the logs.
--   
--   <a>$sel:id:GreengrassLogger'</a>, <a>greengrassLogger_id</a> - A
--   descriptive or arbitrary ID for the logger. This value must be unique
--   within the logger definition version. Max length is 128 characters
--   with pattern ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:component:GreengrassLogger'</a>,
--   <a>greengrassLogger_component</a> - The component that will be subject
--   to logging.
newGreengrassLogger :: LoggerType -> LoggerLevel -> Text -> LoggerComponent -> GreengrassLogger

-- | The amount of file space, in KB, to use if the local file system is
--   used for logging purposes.
greengrassLogger_space :: Lens' GreengrassLogger (Maybe Int)

-- | The type of log output which will be used.
greengrassLogger_type :: Lens' GreengrassLogger LoggerType

-- | The level of the logs.
greengrassLogger_level :: Lens' GreengrassLogger LoggerLevel

-- | A descriptive or arbitrary ID for the logger. This value must be
--   unique within the logger definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
greengrassLogger_id :: Lens' GreengrassLogger Text

-- | The component that will be subject to logging.
greengrassLogger_component :: Lens' GreengrassLogger LoggerComponent

-- | Information about a certificate authority for a group.
--   
--   <i>See:</i> <a>newGroupCertificateAuthorityProperties</a> smart
--   constructor.
data GroupCertificateAuthorityProperties
GroupCertificateAuthorityProperties' :: Maybe Text -> Maybe Text -> GroupCertificateAuthorityProperties

-- | The ARN of the certificate authority for the group.
[$sel:groupCertificateAuthorityArn:GroupCertificateAuthorityProperties'] :: GroupCertificateAuthorityProperties -> Maybe Text

-- | The ID of the certificate authority for the group.
[$sel:groupCertificateAuthorityId:GroupCertificateAuthorityProperties'] :: GroupCertificateAuthorityProperties -> Maybe Text

-- | Create a value of <a>GroupCertificateAuthorityProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorityArn:GroupCertificateAuthorityProperties'</a>,
--   <a>groupCertificateAuthorityProperties_groupCertificateAuthorityArn</a>
--   - The ARN of the certificate authority for the group.
--   
--   
--   <a>$sel:groupCertificateAuthorityId:GroupCertificateAuthorityProperties'</a>,
--   <a>groupCertificateAuthorityProperties_groupCertificateAuthorityId</a>
--   - The ID of the certificate authority for the group.
newGroupCertificateAuthorityProperties :: GroupCertificateAuthorityProperties

-- | The ARN of the certificate authority for the group.
groupCertificateAuthorityProperties_groupCertificateAuthorityArn :: Lens' GroupCertificateAuthorityProperties (Maybe Text)

-- | The ID of the certificate authority for the group.
groupCertificateAuthorityProperties_groupCertificateAuthorityId :: Lens' GroupCertificateAuthorityProperties (Maybe Text)

-- | Information about a group.
--   
--   <i>See:</i> <a>newGroupInformation</a> smart constructor.
data GroupInformation
GroupInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GroupInformation

-- | The time, in milliseconds since the epoch, when the group was created.
[$sel:creationTimestamp:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The ARN of the latest version associated with the group.
[$sel:latestVersionArn:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The ID of the latest version associated with the group.
[$sel:latestVersion:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The ARN of the group.
[$sel:arn:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The ID of the group.
[$sel:id:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The name of the group.
[$sel:name:GroupInformation'] :: GroupInformation -> Maybe Text

-- | The time, in milliseconds since the epoch, when the group was last
--   updated.
[$sel:lastUpdatedTimestamp:GroupInformation'] :: GroupInformation -> Maybe Text

-- | Create a value of <a>GroupInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GroupInformation'</a>,
--   <a>groupInformation_creationTimestamp</a> - The time, in milliseconds
--   since the epoch, when the group was created.
--   
--   <a>$sel:latestVersionArn:GroupInformation'</a>,
--   <a>groupInformation_latestVersionArn</a> - The ARN of the latest
--   version associated with the group.
--   
--   <a>$sel:latestVersion:GroupInformation'</a>,
--   <a>groupInformation_latestVersion</a> - The ID of the latest version
--   associated with the group.
--   
--   <a>$sel:arn:GroupInformation'</a>, <a>groupInformation_arn</a> - The
--   ARN of the group.
--   
--   <a>$sel:id:GroupInformation'</a>, <a>groupInformation_id</a> - The ID
--   of the group.
--   
--   <a>$sel:name:GroupInformation'</a>, <a>groupInformation_name</a> - The
--   name of the group.
--   
--   <a>$sel:lastUpdatedTimestamp:GroupInformation'</a>,
--   <a>groupInformation_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the group was last updated.
newGroupInformation :: GroupInformation

-- | The time, in milliseconds since the epoch, when the group was created.
groupInformation_creationTimestamp :: Lens' GroupInformation (Maybe Text)

-- | The ARN of the latest version associated with the group.
groupInformation_latestVersionArn :: Lens' GroupInformation (Maybe Text)

-- | The ID of the latest version associated with the group.
groupInformation_latestVersion :: Lens' GroupInformation (Maybe Text)

-- | The ARN of the group.
groupInformation_arn :: Lens' GroupInformation (Maybe Text)

-- | The ID of the group.
groupInformation_id :: Lens' GroupInformation (Maybe Text)

-- | The name of the group.
groupInformation_name :: Lens' GroupInformation (Maybe Text)

-- | The time, in milliseconds since the epoch, when the group was last
--   updated.
groupInformation_lastUpdatedTimestamp :: Lens' GroupInformation (Maybe Text)

-- | Group owner related settings for local resources.
--   
--   <i>See:</i> <a>newGroupOwnerSetting</a> smart constructor.
data GroupOwnerSetting
GroupOwnerSetting' :: Maybe Text -> Maybe Bool -> GroupOwnerSetting

-- | The name of the Linux OS group whose privileges will be added to the
--   Lambda process. This field is optional.
[$sel:groupOwner:GroupOwnerSetting'] :: GroupOwnerSetting -> Maybe Text

-- | If true, AWS IoT Greengrass automatically adds the specified Linux OS
--   group owner of the resource to the Lambda process privileges. Thus the
--   Lambda process will have the file access permissions of the added
--   Linux group.
[$sel:autoAddGroupOwner:GroupOwnerSetting'] :: GroupOwnerSetting -> Maybe Bool

-- | Create a value of <a>GroupOwnerSetting</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupOwner:GroupOwnerSetting'</a>,
--   <a>groupOwnerSetting_groupOwner</a> - The name of the Linux OS group
--   whose privileges will be added to the Lambda process. This field is
--   optional.
--   
--   <a>$sel:autoAddGroupOwner:GroupOwnerSetting'</a>,
--   <a>groupOwnerSetting_autoAddGroupOwner</a> - If true, AWS IoT
--   Greengrass automatically adds the specified Linux OS group owner of
--   the resource to the Lambda process privileges. Thus the Lambda process
--   will have the file access permissions of the added Linux group.
newGroupOwnerSetting :: GroupOwnerSetting

-- | The name of the Linux OS group whose privileges will be added to the
--   Lambda process. This field is optional.
groupOwnerSetting_groupOwner :: Lens' GroupOwnerSetting (Maybe Text)

-- | If true, AWS IoT Greengrass automatically adds the specified Linux OS
--   group owner of the resource to the Lambda process privileges. Thus the
--   Lambda process will have the file access permissions of the added
--   Linux group.
groupOwnerSetting_autoAddGroupOwner :: Lens' GroupOwnerSetting (Maybe Bool)

-- | Information about a group version.
--   
--   <i>See:</i> <a>newGroupVersion</a> smart constructor.
data GroupVersion
GroupVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GroupVersion

-- | The ARN of the subscription definition version for this group.
[$sel:subscriptionDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the core definition version for this group.
[$sel:coreDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the connector definition version for this group.
[$sel:connectorDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the logger definition version for this group.
[$sel:loggerDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the resource definition version for this group.
[$sel:resourceDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the function definition version for this group.
[$sel:functionDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | The ARN of the device definition version for this group.
[$sel:deviceDefinitionVersionArn:GroupVersion'] :: GroupVersion -> Maybe Text

-- | Create a value of <a>GroupVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_subscriptionDefinitionVersionArn</a> - The ARN of the
--   subscription definition version for this group.
--   
--   <a>$sel:coreDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_coreDefinitionVersionArn</a> - The ARN of the core
--   definition version for this group.
--   
--   <a>$sel:connectorDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_connectorDefinitionVersionArn</a> - The ARN of the
--   connector definition version for this group.
--   
--   <a>$sel:loggerDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_loggerDefinitionVersionArn</a> - The ARN of the logger
--   definition version for this group.
--   
--   <a>$sel:resourceDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_resourceDefinitionVersionArn</a> - The ARN of the
--   resource definition version for this group.
--   
--   <a>$sel:functionDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_functionDefinitionVersionArn</a> - The ARN of the
--   function definition version for this group.
--   
--   <a>$sel:deviceDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_deviceDefinitionVersionArn</a> - The ARN of the device
--   definition version for this group.
newGroupVersion :: GroupVersion

-- | The ARN of the subscription definition version for this group.
groupVersion_subscriptionDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the core definition version for this group.
groupVersion_coreDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the connector definition version for this group.
groupVersion_connectorDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the logger definition version for this group.
groupVersion_loggerDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the resource definition version for this group.
groupVersion_resourceDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the function definition version for this group.
groupVersion_functionDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the device definition version for this group.
groupVersion_deviceDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | Attributes that define a local device resource.
--   
--   <i>See:</i> <a>newLocalDeviceResourceData</a> smart constructor.
data LocalDeviceResourceData
LocalDeviceResourceData' :: Maybe Text -> Maybe GroupOwnerSetting -> LocalDeviceResourceData

-- | The local absolute path of the device resource. The source path for a
--   device resource can refer only to a character device or block device
--   under ''/dev''.
[$sel:sourcePath:LocalDeviceResourceData'] :: LocalDeviceResourceData -> Maybe Text

-- | Group/owner related settings for local resources.
[$sel:groupOwnerSetting:LocalDeviceResourceData'] :: LocalDeviceResourceData -> Maybe GroupOwnerSetting

-- | Create a value of <a>LocalDeviceResourceData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourcePath:LocalDeviceResourceData'</a>,
--   <a>localDeviceResourceData_sourcePath</a> - The local absolute path of
--   the device resource. The source path for a device resource can refer
--   only to a character device or block device under ''/dev''.
--   
--   <a>$sel:groupOwnerSetting:LocalDeviceResourceData'</a>,
--   <a>localDeviceResourceData_groupOwnerSetting</a> - Group/owner related
--   settings for local resources.
newLocalDeviceResourceData :: LocalDeviceResourceData

-- | The local absolute path of the device resource. The source path for a
--   device resource can refer only to a character device or block device
--   under ''/dev''.
localDeviceResourceData_sourcePath :: Lens' LocalDeviceResourceData (Maybe Text)

-- | Group/owner related settings for local resources.
localDeviceResourceData_groupOwnerSetting :: Lens' LocalDeviceResourceData (Maybe GroupOwnerSetting)

-- | Attributes that define a local volume resource.
--   
--   <i>See:</i> <a>newLocalVolumeResourceData</a> smart constructor.
data LocalVolumeResourceData
LocalVolumeResourceData' :: Maybe Text -> Maybe Text -> Maybe GroupOwnerSetting -> LocalVolumeResourceData

-- | The absolute local path of the resource inside the Lambda environment.
[$sel:destinationPath:LocalVolumeResourceData'] :: LocalVolumeResourceData -> Maybe Text

-- | The local absolute path of the volume resource on the host. The source
--   path for a volume resource type cannot start with ''/sys''.
[$sel:sourcePath:LocalVolumeResourceData'] :: LocalVolumeResourceData -> Maybe Text

-- | Allows you to configure additional group privileges for the Lambda
--   process. This field is optional.
[$sel:groupOwnerSetting:LocalVolumeResourceData'] :: LocalVolumeResourceData -> Maybe GroupOwnerSetting

-- | Create a value of <a>LocalVolumeResourceData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationPath:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_destinationPath</a> - The absolute local
--   path of the resource inside the Lambda environment.
--   
--   <a>$sel:sourcePath:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_sourcePath</a> - The local absolute path of
--   the volume resource on the host. The source path for a volume resource
--   type cannot start with ''/sys''.
--   
--   <a>$sel:groupOwnerSetting:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_groupOwnerSetting</a> - Allows you to
--   configure additional group privileges for the Lambda process. This
--   field is optional.
newLocalVolumeResourceData :: LocalVolumeResourceData

-- | The absolute local path of the resource inside the Lambda environment.
localVolumeResourceData_destinationPath :: Lens' LocalVolumeResourceData (Maybe Text)

-- | The local absolute path of the volume resource on the host. The source
--   path for a volume resource type cannot start with ''/sys''.
localVolumeResourceData_sourcePath :: Lens' LocalVolumeResourceData (Maybe Text)

-- | Allows you to configure additional group privileges for the Lambda
--   process. This field is optional.
localVolumeResourceData_groupOwnerSetting :: Lens' LocalVolumeResourceData (Maybe GroupOwnerSetting)

-- | Information about a logger definition version.
--   
--   <i>See:</i> <a>newLoggerDefinitionVersion</a> smart constructor.
data LoggerDefinitionVersion
LoggerDefinitionVersion' :: Maybe [GreengrassLogger] -> LoggerDefinitionVersion

-- | A list of loggers.
[$sel:loggers:LoggerDefinitionVersion'] :: LoggerDefinitionVersion -> Maybe [GreengrassLogger]

-- | Create a value of <a>LoggerDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggers:LoggerDefinitionVersion'</a>,
--   <a>loggerDefinitionVersion_loggers</a> - A list of loggers.
newLoggerDefinitionVersion :: LoggerDefinitionVersion

-- | A list of loggers.
loggerDefinitionVersion_loggers :: Lens' LoggerDefinitionVersion (Maybe [GreengrassLogger])

-- | Information about a resource.
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: ResourceDataContainer -> Text -> Text -> Resource

-- | A container of data for all resource types.
[$sel:resourceDataContainer:Resource'] :: Resource -> ResourceDataContainer

-- | The resource ID, used to refer to a resource in the Lambda function
--   configuration. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
[$sel:id:Resource'] :: Resource -> Text

-- | The descriptive resource name, which is displayed on the AWS IoT
--   Greengrass console. Max length 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
[$sel:name:Resource'] :: Resource -> Text

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDataContainer:Resource'</a>,
--   <a>resource_resourceDataContainer</a> - A container of data for all
--   resource types.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource ID, used
--   to refer to a resource in the Lambda function configuration. Max
--   length is 128 characters with pattern ''[a-zA-Z0-9:_-]+''. This must
--   be unique within a Greengrass group.
--   
--   <a>$sel:name:Resource'</a>, <a>resource_name</a> - The descriptive
--   resource name, which is displayed on the AWS IoT Greengrass console.
--   Max length 128 characters with pattern ''[a-zA-Z0-9:_-]+''. This must
--   be unique within a Greengrass group.
newResource :: ResourceDataContainer -> Text -> Text -> Resource

-- | A container of data for all resource types.
resource_resourceDataContainer :: Lens' Resource ResourceDataContainer

-- | The resource ID, used to refer to a resource in the Lambda function
--   configuration. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
resource_id :: Lens' Resource Text

-- | The descriptive resource name, which is displayed on the AWS IoT
--   Greengrass console. Max length 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
resource_name :: Lens' Resource Text

-- | A policy used by the function to access a resource.
--   
--   <i>See:</i> <a>newResourceAccessPolicy</a> smart constructor.
data ResourceAccessPolicy
ResourceAccessPolicy' :: Maybe Permission -> Text -> ResourceAccessPolicy

-- | The permissions that the Lambda function has to the resource. Can be
--   one of ''rw'' (read/write) or ''ro'' (read-only).
[$sel:permission:ResourceAccessPolicy'] :: ResourceAccessPolicy -> Maybe Permission

-- | The ID of the resource. (This ID is assigned to the resource when you
--   create the resource definiton.)
[$sel:resourceId:ResourceAccessPolicy'] :: ResourceAccessPolicy -> Text

-- | Create a value of <a>ResourceAccessPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permission:ResourceAccessPolicy'</a>,
--   <a>resourceAccessPolicy_permission</a> - The permissions that the
--   Lambda function has to the resource. Can be one of ''rw'' (read/write)
--   or ''ro'' (read-only).
--   
--   <a>$sel:resourceId:ResourceAccessPolicy'</a>,
--   <a>resourceAccessPolicy_resourceId</a> - The ID of the resource. (This
--   ID is assigned to the resource when you create the resource
--   definiton.)
newResourceAccessPolicy :: Text -> ResourceAccessPolicy

-- | The permissions that the Lambda function has to the resource. Can be
--   one of ''rw'' (read/write) or ''ro'' (read-only).
resourceAccessPolicy_permission :: Lens' ResourceAccessPolicy (Maybe Permission)

-- | The ID of the resource. (This ID is assigned to the resource when you
--   create the resource definiton.)
resourceAccessPolicy_resourceId :: Lens' ResourceAccessPolicy Text

-- | A container for resource data. The container takes only one of the
--   following supported resource data types: ''LocalDeviceResourceData'',
--   ''LocalVolumeResourceData'',
--   ''SageMakerMachineLearningModelResourceData'',
--   ''S3MachineLearningModelResourceData'',
--   ''SecretsManagerSecretResourceData''.
--   
--   <i>See:</i> <a>newResourceDataContainer</a> smart constructor.
data ResourceDataContainer
ResourceDataContainer' :: Maybe LocalVolumeResourceData -> Maybe LocalDeviceResourceData -> Maybe S3MachineLearningModelResourceData -> Maybe SageMakerMachineLearningModelResourceData -> Maybe SecretsManagerSecretResourceData -> ResourceDataContainer

-- | Attributes that define the local volume resource.
[$sel:localVolumeResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe LocalVolumeResourceData

-- | Attributes that define the local device resource.
[$sel:localDeviceResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe LocalDeviceResourceData

-- | Attributes that define an Amazon S3 machine learning resource.
[$sel:s3MachineLearningModelResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe S3MachineLearningModelResourceData

-- | Attributes that define an Amazon SageMaker machine learning resource.
[$sel:sageMakerMachineLearningModelResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe SageMakerMachineLearningModelResourceData

-- | Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager.
[$sel:secretsManagerSecretResourceData:ResourceDataContainer'] :: ResourceDataContainer -> Maybe SecretsManagerSecretResourceData

-- | Create a value of <a>ResourceDataContainer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:localVolumeResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_localVolumeResourceData</a> - Attributes that
--   define the local volume resource.
--   
--   <a>$sel:localDeviceResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_localDeviceResourceData</a> - Attributes that
--   define the local device resource.
--   
--   <a>$sel:s3MachineLearningModelResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_s3MachineLearningModelResourceData</a> -
--   Attributes that define an Amazon S3 machine learning resource.
--   
--   
--   <a>$sel:sageMakerMachineLearningModelResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_sageMakerMachineLearningModelResourceData</a>
--   - Attributes that define an Amazon SageMaker machine learning
--   resource.
--   
--   <a>$sel:secretsManagerSecretResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_secretsManagerSecretResourceData</a> -
--   Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager.
newResourceDataContainer :: ResourceDataContainer

-- | Attributes that define the local volume resource.
resourceDataContainer_localVolumeResourceData :: Lens' ResourceDataContainer (Maybe LocalVolumeResourceData)

-- | Attributes that define the local device resource.
resourceDataContainer_localDeviceResourceData :: Lens' ResourceDataContainer (Maybe LocalDeviceResourceData)

-- | Attributes that define an Amazon S3 machine learning resource.
resourceDataContainer_s3MachineLearningModelResourceData :: Lens' ResourceDataContainer (Maybe S3MachineLearningModelResourceData)

-- | Attributes that define an Amazon SageMaker machine learning resource.
resourceDataContainer_sageMakerMachineLearningModelResourceData :: Lens' ResourceDataContainer (Maybe SageMakerMachineLearningModelResourceData)

-- | Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager.
resourceDataContainer_secretsManagerSecretResourceData :: Lens' ResourceDataContainer (Maybe SecretsManagerSecretResourceData)

-- | Information about a resource definition version.
--   
--   <i>See:</i> <a>newResourceDefinitionVersion</a> smart constructor.
data ResourceDefinitionVersion
ResourceDefinitionVersion' :: Maybe [Resource] -> ResourceDefinitionVersion

-- | A list of resources.
[$sel:resources:ResourceDefinitionVersion'] :: ResourceDefinitionVersion -> Maybe [Resource]

-- | Create a value of <a>ResourceDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:ResourceDefinitionVersion'</a>,
--   <a>resourceDefinitionVersion_resources</a> - A list of resources.
newResourceDefinitionVersion :: ResourceDefinitionVersion

-- | A list of resources.
resourceDefinitionVersion_resources :: Lens' ResourceDefinitionVersion (Maybe [Resource])

-- | The owner setting for downloaded machine learning resources.
--   
--   <i>See:</i> <a>newResourceDownloadOwnerSetting</a> smart constructor.
data ResourceDownloadOwnerSetting
ResourceDownloadOwnerSetting' :: Text -> Permission -> ResourceDownloadOwnerSetting

-- | The group owner of the resource. This is the name of an existing Linux
--   OS group on the system or a GID. The group's permissions are added to
--   the Lambda process.
[$sel:groupOwner:ResourceDownloadOwnerSetting'] :: ResourceDownloadOwnerSetting -> Text

-- | The permissions that the group owner has to the resource. Valid values
--   are ''rw'' (read/write) or ''ro'' (read-only).
[$sel:groupPermission:ResourceDownloadOwnerSetting'] :: ResourceDownloadOwnerSetting -> Permission

-- | Create a value of <a>ResourceDownloadOwnerSetting</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupOwner:ResourceDownloadOwnerSetting'</a>,
--   <a>resourceDownloadOwnerSetting_groupOwner</a> - The group owner of
--   the resource. This is the name of an existing Linux OS group on the
--   system or a GID. The group's permissions are added to the Lambda
--   process.
--   
--   <a>$sel:groupPermission:ResourceDownloadOwnerSetting'</a>,
--   <a>resourceDownloadOwnerSetting_groupPermission</a> - The permissions
--   that the group owner has to the resource. Valid values are ''rw''
--   (read/write) or ''ro'' (read-only).
newResourceDownloadOwnerSetting :: Text -> Permission -> ResourceDownloadOwnerSetting

-- | The group owner of the resource. This is the name of an existing Linux
--   OS group on the system or a GID. The group's permissions are added to
--   the Lambda process.
resourceDownloadOwnerSetting_groupOwner :: Lens' ResourceDownloadOwnerSetting Text

-- | The permissions that the group owner has to the resource. Valid values
--   are ''rw'' (read/write) or ''ro'' (read-only).
resourceDownloadOwnerSetting_groupPermission :: Lens' ResourceDownloadOwnerSetting Permission

-- | Runtime configuration for a thing.
--   
--   <i>See:</i> <a>newRuntimeConfiguration</a> smart constructor.
data RuntimeConfiguration
RuntimeConfiguration' :: Maybe TelemetryConfiguration -> RuntimeConfiguration

-- | Configuration for telemetry service.
[$sel:telemetryConfiguration:RuntimeConfiguration'] :: RuntimeConfiguration -> Maybe TelemetryConfiguration

-- | Create a value of <a>RuntimeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:telemetryConfiguration:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_telemetryConfiguration</a> - Configuration for
--   telemetry service.
newRuntimeConfiguration :: RuntimeConfiguration

-- | Configuration for telemetry service.
runtimeConfiguration_telemetryConfiguration :: Lens' RuntimeConfiguration (Maybe TelemetryConfiguration)

-- | Attributes that define an Amazon S3 machine learning resource.
--   
--   <i>See:</i> <a>newS3MachineLearningModelResourceData</a> smart
--   constructor.
data S3MachineLearningModelResourceData
S3MachineLearningModelResourceData' :: Maybe ResourceDownloadOwnerSetting -> Maybe Text -> Maybe Text -> S3MachineLearningModelResourceData
[$sel:ownerSetting:S3MachineLearningModelResourceData'] :: S3MachineLearningModelResourceData -> Maybe ResourceDownloadOwnerSetting

-- | The absolute local path of the resource inside the Lambda environment.
[$sel:destinationPath:S3MachineLearningModelResourceData'] :: S3MachineLearningModelResourceData -> Maybe Text

-- | The URI of the source model in an S3 bucket. The model package must be
--   in tar.gz or .zip format.
[$sel:s3Uri:S3MachineLearningModelResourceData'] :: S3MachineLearningModelResourceData -> Maybe Text

-- | Create a value of <a>S3MachineLearningModelResourceData</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerSetting:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_ownerSetting</a> - Undocumented
--   member.
--   
--   <a>$sel:destinationPath:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_destinationPath</a> - The
--   absolute local path of the resource inside the Lambda environment.
--   
--   <a>$sel:s3Uri:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_s3Uri</a> - The URI of the
--   source model in an S3 bucket. The model package must be in tar.gz or
--   .zip format.
newS3MachineLearningModelResourceData :: S3MachineLearningModelResourceData

-- | Undocumented member.
s3MachineLearningModelResourceData_ownerSetting :: Lens' S3MachineLearningModelResourceData (Maybe ResourceDownloadOwnerSetting)

-- | The absolute local path of the resource inside the Lambda environment.
s3MachineLearningModelResourceData_destinationPath :: Lens' S3MachineLearningModelResourceData (Maybe Text)

-- | The URI of the source model in an S3 bucket. The model package must be
--   in tar.gz or .zip format.
s3MachineLearningModelResourceData_s3Uri :: Lens' S3MachineLearningModelResourceData (Maybe Text)

-- | Attributes that define an Amazon SageMaker machine learning resource.
--   
--   <i>See:</i> <a>newSageMakerMachineLearningModelResourceData</a> smart
--   constructor.
data SageMakerMachineLearningModelResourceData
SageMakerMachineLearningModelResourceData' :: Maybe ResourceDownloadOwnerSetting -> Maybe Text -> Maybe Text -> SageMakerMachineLearningModelResourceData
[$sel:ownerSetting:SageMakerMachineLearningModelResourceData'] :: SageMakerMachineLearningModelResourceData -> Maybe ResourceDownloadOwnerSetting

-- | The absolute local path of the resource inside the Lambda environment.
[$sel:destinationPath:SageMakerMachineLearningModelResourceData'] :: SageMakerMachineLearningModelResourceData -> Maybe Text

-- | The ARN of the Amazon SageMaker training job that represents the
--   source model.
[$sel:sageMakerJobArn:SageMakerMachineLearningModelResourceData'] :: SageMakerMachineLearningModelResourceData -> Maybe Text

-- | Create a value of <a>SageMakerMachineLearningModelResourceData</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerSetting:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_ownerSetting</a> -
--   Undocumented member.
--   
--   
--   <a>$sel:destinationPath:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_destinationPath</a> - The
--   absolute local path of the resource inside the Lambda environment.
--   
--   
--   <a>$sel:sageMakerJobArn:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_sageMakerJobArn</a> - The
--   ARN of the Amazon SageMaker training job that represents the source
--   model.
newSageMakerMachineLearningModelResourceData :: SageMakerMachineLearningModelResourceData

-- | Undocumented member.
sageMakerMachineLearningModelResourceData_ownerSetting :: Lens' SageMakerMachineLearningModelResourceData (Maybe ResourceDownloadOwnerSetting)

-- | The absolute local path of the resource inside the Lambda environment.
sageMakerMachineLearningModelResourceData_destinationPath :: Lens' SageMakerMachineLearningModelResourceData (Maybe Text)

-- | The ARN of the Amazon SageMaker training job that represents the
--   source model.
sageMakerMachineLearningModelResourceData_sageMakerJobArn :: Lens' SageMakerMachineLearningModelResourceData (Maybe Text)

-- | Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager. AWS IoT Greengrass stores a local, encrypted
--   copy of the secret on the Greengrass core, where it can be securely
--   accessed by connectors and Lambda functions.
--   
--   <i>See:</i> <a>newSecretsManagerSecretResourceData</a> smart
--   constructor.
data SecretsManagerSecretResourceData
SecretsManagerSecretResourceData' :: Maybe Text -> Maybe [Text] -> SecretsManagerSecretResourceData

-- | The ARN of the Secrets Manager secret to make available on the core.
--   The value of the secret's latest version (represented by the
--   ''AWSCURRENT'' staging label) is included by default.
[$sel:arn:SecretsManagerSecretResourceData'] :: SecretsManagerSecretResourceData -> Maybe Text

-- | Optional. The staging labels whose values you want to make available
--   on the core, in addition to ''AWSCURRENT''.
[$sel:additionalStagingLabelsToDownload:SecretsManagerSecretResourceData'] :: SecretsManagerSecretResourceData -> Maybe [Text]

-- | Create a value of <a>SecretsManagerSecretResourceData</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SecretsManagerSecretResourceData'</a>,
--   <a>secretsManagerSecretResourceData_arn</a> - The ARN of the Secrets
--   Manager secret to make available on the core. The value of the
--   secret's latest version (represented by the ''AWSCURRENT'' staging
--   label) is included by default.
--   
--   
--   <a>$sel:additionalStagingLabelsToDownload:SecretsManagerSecretResourceData'</a>,
--   <a>secretsManagerSecretResourceData_additionalStagingLabelsToDownload</a>
--   - Optional. The staging labels whose values you want to make available
--   on the core, in addition to ''AWSCURRENT''.
newSecretsManagerSecretResourceData :: SecretsManagerSecretResourceData

-- | The ARN of the Secrets Manager secret to make available on the core.
--   The value of the secret's latest version (represented by the
--   ''AWSCURRENT'' staging label) is included by default.
secretsManagerSecretResourceData_arn :: Lens' SecretsManagerSecretResourceData (Maybe Text)

-- | Optional. The staging labels whose values you want to make available
--   on the core, in addition to ''AWSCURRENT''.
secretsManagerSecretResourceData_additionalStagingLabelsToDownload :: Lens' SecretsManagerSecretResourceData (Maybe [Text])

-- | Information about a subscription.
--   
--   <i>See:</i> <a>newSubscription</a> smart constructor.
data Subscription
Subscription' :: Text -> Text -> Text -> Text -> Subscription

-- | Where the message is sent to. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
[$sel:target:Subscription'] :: Subscription -> Text

-- | A descriptive or arbitrary ID for the subscription. This value must be
--   unique within the subscription definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
[$sel:id:Subscription'] :: Subscription -> Text

-- | The MQTT topic used to route the message.
[$sel:subject:Subscription'] :: Subscription -> Text

-- | The source of the subscription. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
[$sel:source:Subscription'] :: Subscription -> Text

-- | Create a value of <a>Subscription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:target:Subscription'</a>, <a>subscription_target</a> - Where
--   the message is sent to. Can be a thing ARN, a Lambda function ARN, a
--   connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
--   
--   <a>$sel:id:Subscription'</a>, <a>subscription_id</a> - A descriptive
--   or arbitrary ID for the subscription. This value must be unique within
--   the subscription definition version. Max length is 128 characters with
--   pattern ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:subject:Subscription'</a>, <a>subscription_subject</a> - The
--   MQTT topic used to route the message.
--   
--   <a>$sel:source:Subscription'</a>, <a>subscription_source</a> - The
--   source of the subscription. Can be a thing ARN, a Lambda function ARN,
--   a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
newSubscription :: Text -> Text -> Text -> Text -> Subscription

-- | Where the message is sent to. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
subscription_target :: Lens' Subscription Text

-- | A descriptive or arbitrary ID for the subscription. This value must be
--   unique within the subscription definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
subscription_id :: Lens' Subscription Text

-- | The MQTT topic used to route the message.
subscription_subject :: Lens' Subscription Text

-- | The source of the subscription. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
subscription_source :: Lens' Subscription Text

-- | Information about a subscription definition version.
--   
--   <i>See:</i> <a>newSubscriptionDefinitionVersion</a> smart constructor.
data SubscriptionDefinitionVersion
SubscriptionDefinitionVersion' :: Maybe [Subscription] -> SubscriptionDefinitionVersion

-- | A list of subscriptions.
[$sel:subscriptions:SubscriptionDefinitionVersion'] :: SubscriptionDefinitionVersion -> Maybe [Subscription]

-- | Create a value of <a>SubscriptionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptions:SubscriptionDefinitionVersion'</a>,
--   <a>subscriptionDefinitionVersion_subscriptions</a> - A list of
--   subscriptions.
newSubscriptionDefinitionVersion :: SubscriptionDefinitionVersion

-- | A list of subscriptions.
subscriptionDefinitionVersion_subscriptions :: Lens' SubscriptionDefinitionVersion (Maybe [Subscription])

-- | Configuration settings for running telemetry.
--   
--   <i>See:</i> <a>newTelemetryConfiguration</a> smart constructor.
data TelemetryConfiguration
TelemetryConfiguration' :: Maybe ConfigurationSyncStatus -> Telemetry -> TelemetryConfiguration

-- | Synchronization status of the device reported configuration with the
--   desired configuration.
[$sel:configurationSyncStatus:TelemetryConfiguration'] :: TelemetryConfiguration -> Maybe ConfigurationSyncStatus

-- | Configure telemetry to be on or off.
[$sel:telemetry:TelemetryConfiguration'] :: TelemetryConfiguration -> Telemetry

-- | Create a value of <a>TelemetryConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationSyncStatus:TelemetryConfiguration'</a>,
--   <a>telemetryConfiguration_configurationSyncStatus</a> -
--   Synchronization status of the device reported configuration with the
--   desired configuration.
--   
--   <a>$sel:telemetry:TelemetryConfiguration'</a>,
--   <a>telemetryConfiguration_telemetry</a> - Configure telemetry to be on
--   or off.
newTelemetryConfiguration :: Telemetry -> TelemetryConfiguration

-- | Synchronization status of the device reported configuration with the
--   desired configuration.
telemetryConfiguration_configurationSyncStatus :: Lens' TelemetryConfiguration (Maybe ConfigurationSyncStatus)

-- | Configure telemetry to be on or off.
telemetryConfiguration_telemetry :: Lens' TelemetryConfiguration Telemetry

-- | Configuration settings for running telemetry.
--   
--   <i>See:</i> <a>newTelemetryConfigurationUpdate</a> smart constructor.
data TelemetryConfigurationUpdate
TelemetryConfigurationUpdate' :: Telemetry -> TelemetryConfigurationUpdate

-- | Configure telemetry to be on or off.
[$sel:telemetry:TelemetryConfigurationUpdate'] :: TelemetryConfigurationUpdate -> Telemetry

-- | Create a value of <a>TelemetryConfigurationUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:telemetry:TelemetryConfigurationUpdate'</a>,
--   <a>telemetryConfigurationUpdate_telemetry</a> - Configure telemetry to
--   be on or off.
newTelemetryConfigurationUpdate :: Telemetry -> TelemetryConfigurationUpdate

-- | Configure telemetry to be on or off.
telemetryConfigurationUpdate_telemetry :: Lens' TelemetryConfigurationUpdate Telemetry

-- | Information about a version.
--   
--   <i>See:</i> <a>newVersionInformation</a> smart constructor.
data VersionInformation
VersionInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VersionInformation

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:VersionInformation'] :: VersionInformation -> Maybe Text

-- | The ARN of the version.
[$sel:arn:VersionInformation'] :: VersionInformation -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:VersionInformation'] :: VersionInformation -> Maybe Text

-- | The ID of the version.
[$sel:version:VersionInformation'] :: VersionInformation -> Maybe Text

-- | Create a value of <a>VersionInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:VersionInformation'</a>,
--   <a>versionInformation_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:VersionInformation'</a>, <a>versionInformation_arn</a> -
--   The ARN of the version.
--   
--   <a>$sel:id:VersionInformation'</a>, <a>versionInformation_id</a> - The
--   ID of the parent definition that the version is associated with.
--   
--   <a>$sel:version:VersionInformation'</a>,
--   <a>versionInformation_version</a> - The ID of the version.
newVersionInformation :: VersionInformation

-- | The time, in milliseconds since the epoch, when the version was
--   created.
versionInformation_creationTimestamp :: Lens' VersionInformation (Maybe Text)

-- | The ARN of the version.
versionInformation_arn :: Lens' VersionInformation (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
versionInformation_id :: Lens' VersionInformation (Maybe Text)

-- | The ID of the version.
versionInformation_version :: Lens' VersionInformation (Maybe Text)


-- | Adds tags to a Greengrass resource. Valid resources are 'Group',
--   'ConnectorDefinition', 'CoreDefinition', 'DeviceDefinition',
--   'FunctionDefinition', 'LoggerDefinition', 'SubscriptionDefinition',
--   'ResourceDefinition', and 'BulkDeployment'.
module Network.AWS.Greengrass.TagResource

-- | A map of the key-value pairs for the resource tag.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Maybe (HashMap Text Text) -> Text -> TagResource
[$sel:tags:TagResource'] :: TagResource -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Undocumented
--   member.
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
newTagResource :: Text -> TagResource

-- | Undocumented member.
tagResource_tags :: Lens' TagResource (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Network.AWS.Greengrass.TagResource.TagResource
instance GHC.Show.Show Network.AWS.Greengrass.TagResource.TagResource
instance GHC.Read.Read Network.AWS.Greengrass.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.Greengrass.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.Greengrass.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.Greengrass.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.Greengrass.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Greengrass.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.Greengrass.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.TagResource.TagResource


-- | Stops the execution of a bulk deployment. This action returns a status
--   of ''Stopping'' until the deployment is stopped. You cannot start a
--   new bulk deployment while a previous deployment is in the ''Stopping''
--   state. This action doesn't rollback completed deployments or cancel
--   pending deployments.
module Network.AWS.Greengrass.StopBulkDeployment

-- | <i>See:</i> <a>newStopBulkDeployment</a> smart constructor.
data StopBulkDeployment
StopBulkDeployment' :: Text -> StopBulkDeployment

-- | The ID of the bulk deployment.
[$sel:bulkDeploymentId:StopBulkDeployment'] :: StopBulkDeployment -> Text

-- | Create a value of <a>StopBulkDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:StopBulkDeployment'</a>,
--   <a>stopBulkDeployment_bulkDeploymentId</a> - The ID of the bulk
--   deployment.
newStopBulkDeployment :: Text -> StopBulkDeployment

-- | The ID of the bulk deployment.
stopBulkDeployment_bulkDeploymentId :: Lens' StopBulkDeployment Text

-- | <i>See:</i> <a>newStopBulkDeploymentResponse</a> smart constructor.
data StopBulkDeploymentResponse
StopBulkDeploymentResponse' :: Int -> StopBulkDeploymentResponse

-- | The response's http status code.
[$sel:httpStatus:StopBulkDeploymentResponse'] :: StopBulkDeploymentResponse -> Int

-- | Create a value of <a>StopBulkDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopBulkDeploymentResponse'</a>,
--   <a>stopBulkDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newStopBulkDeploymentResponse :: Int -> StopBulkDeploymentResponse

-- | The response's http status code.
stopBulkDeploymentResponse_httpStatus :: Lens' StopBulkDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance GHC.Show.Show Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance GHC.Read.Read Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance GHC.Classes.Eq Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance GHC.Generics.Generic Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeploymentResponse
instance GHC.Show.Show Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeploymentResponse
instance GHC.Read.Read Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeploymentResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.StopBulkDeployment.StopBulkDeployment


-- | Deploys multiple groups in one operation. This action starts the bulk
--   deployment of a specified set of group versions. Each group version
--   deployment will be triggered with an adaptive rate that has a fixed
--   upper limit. We recommend that you include an ''X-Amzn-Client-Token''
--   token in every ''StartBulkDeployment'' request. These requests are
--   idempotent with respect to the token and the request parameters.
module Network.AWS.Greengrass.StartBulkDeployment

-- | <i>See:</i> <a>newStartBulkDeployment</a> smart constructor.
data StartBulkDeployment
StartBulkDeployment' :: Maybe (HashMap Text Text) -> Maybe Text -> Text -> Text -> StartBulkDeployment

-- | Tag(s) to add to the new resource.
[$sel:tags:StartBulkDeployment'] :: StartBulkDeployment -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:StartBulkDeployment'] :: StartBulkDeployment -> Maybe Text

-- | The ARN of the execution role to associate with the bulk deployment
--   operation. This IAM role must allow the
--   ''greengrass:CreateDeployment'' action for all group versions that are
--   listed in the input file. This IAM role must have access to the S3
--   bucket containing the input file.
[$sel:executionRoleArn:StartBulkDeployment'] :: StartBulkDeployment -> Text

-- | The URI of the input file contained in the S3 bucket. The execution
--   role must have ''getObject'' permissions on this bucket to access the
--   input file. The input file is a JSON-serialized, line delimited file
--   with UTF-8 encoding that provides a list of group and version IDs and
--   the deployment type. This file must be less than 100 MB. Currently,
--   AWS IoT Greengrass supports only ''NewDeployment'' deployment types.
[$sel:inputFileUri:StartBulkDeployment'] :: StartBulkDeployment -> Text

-- | Create a value of <a>StartBulkDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:StartBulkDeployment'</a>, <a>startBulkDeployment_tags</a>
--   - Tag(s) to add to the new resource.
--   
--   <a>$sel:amznClientToken:StartBulkDeployment'</a>,
--   <a>startBulkDeployment_amznClientToken</a> - A client token used to
--   correlate requests and responses.
--   
--   <a>$sel:executionRoleArn:StartBulkDeployment'</a>,
--   <a>startBulkDeployment_executionRoleArn</a> - The ARN of the execution
--   role to associate with the bulk deployment operation. This IAM role
--   must allow the ''greengrass:CreateDeployment'' action for all group
--   versions that are listed in the input file. This IAM role must have
--   access to the S3 bucket containing the input file.
--   
--   <a>$sel:inputFileUri:StartBulkDeployment'</a>,
--   <a>startBulkDeployment_inputFileUri</a> - The URI of the input file
--   contained in the S3 bucket. The execution role must have ''getObject''
--   permissions on this bucket to access the input file. The input file is
--   a JSON-serialized, line delimited file with UTF-8 encoding that
--   provides a list of group and version IDs and the deployment type. This
--   file must be less than 100 MB. Currently, AWS IoT Greengrass supports
--   only ''NewDeployment'' deployment types.
newStartBulkDeployment :: Text -> Text -> StartBulkDeployment

-- | Tag(s) to add to the new resource.
startBulkDeployment_tags :: Lens' StartBulkDeployment (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
startBulkDeployment_amznClientToken :: Lens' StartBulkDeployment (Maybe Text)

-- | The ARN of the execution role to associate with the bulk deployment
--   operation. This IAM role must allow the
--   ''greengrass:CreateDeployment'' action for all group versions that are
--   listed in the input file. This IAM role must have access to the S3
--   bucket containing the input file.
startBulkDeployment_executionRoleArn :: Lens' StartBulkDeployment Text

-- | The URI of the input file contained in the S3 bucket. The execution
--   role must have ''getObject'' permissions on this bucket to access the
--   input file. The input file is a JSON-serialized, line delimited file
--   with UTF-8 encoding that provides a list of group and version IDs and
--   the deployment type. This file must be less than 100 MB. Currently,
--   AWS IoT Greengrass supports only ''NewDeployment'' deployment types.
startBulkDeployment_inputFileUri :: Lens' StartBulkDeployment Text

-- | <i>See:</i> <a>newStartBulkDeploymentResponse</a> smart constructor.
data StartBulkDeploymentResponse
StartBulkDeploymentResponse' :: Maybe Text -> Maybe Text -> Int -> StartBulkDeploymentResponse

-- | The ID of the bulk deployment.
[$sel:bulkDeploymentId:StartBulkDeploymentResponse'] :: StartBulkDeploymentResponse -> Maybe Text

-- | The ARN of the bulk deployment.
[$sel:bulkDeploymentArn:StartBulkDeploymentResponse'] :: StartBulkDeploymentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartBulkDeploymentResponse'] :: StartBulkDeploymentResponse -> Int

-- | Create a value of <a>StartBulkDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:StartBulkDeploymentResponse'</a>,
--   <a>startBulkDeploymentResponse_bulkDeploymentId</a> - The ID of the
--   bulk deployment.
--   
--   <a>$sel:bulkDeploymentArn:StartBulkDeploymentResponse'</a>,
--   <a>startBulkDeploymentResponse_bulkDeploymentArn</a> - The ARN of the
--   bulk deployment.
--   
--   <a>$sel:httpStatus:StartBulkDeploymentResponse'</a>,
--   <a>startBulkDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newStartBulkDeploymentResponse :: Int -> StartBulkDeploymentResponse

-- | The ID of the bulk deployment.
startBulkDeploymentResponse_bulkDeploymentId :: Lens' StartBulkDeploymentResponse (Maybe Text)

-- | The ARN of the bulk deployment.
startBulkDeploymentResponse_bulkDeploymentArn :: Lens' StartBulkDeploymentResponse (Maybe Text)

-- | The response's http status code.
startBulkDeploymentResponse_httpStatus :: Lens' StartBulkDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance GHC.Show.Show Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance GHC.Read.Read Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance GHC.Classes.Eq Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance GHC.Generics.Generic Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeploymentResponse
instance GHC.Show.Show Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeploymentResponse
instance GHC.Read.Read Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeploymentResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.StartBulkDeployment.StartBulkDeployment


-- | Resets a group's deployments.
module Network.AWS.Greengrass.ResetDeployments

-- | Information needed to reset deployments.
--   
--   <i>See:</i> <a>newResetDeployments</a> smart constructor.
data ResetDeployments
ResetDeployments' :: Maybe Bool -> Maybe Text -> Text -> ResetDeployments

-- | If true, performs a best-effort only core reset.
[$sel:force:ResetDeployments'] :: ResetDeployments -> Maybe Bool

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:ResetDeployments'] :: ResetDeployments -> Maybe Text

-- | The ID of the Greengrass group.
[$sel:groupId:ResetDeployments'] :: ResetDeployments -> Text

-- | Create a value of <a>ResetDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:ResetDeployments'</a>, <a>resetDeployments_force</a> -
--   If true, performs a best-effort only core reset.
--   
--   <a>$sel:amznClientToken:ResetDeployments'</a>,
--   <a>resetDeployments_amznClientToken</a> - A client token used to
--   correlate requests and responses.
--   
--   <a>$sel:groupId:ResetDeployments'</a>, <a>resetDeployments_groupId</a>
--   - The ID of the Greengrass group.
newResetDeployments :: Text -> ResetDeployments

-- | If true, performs a best-effort only core reset.
resetDeployments_force :: Lens' ResetDeployments (Maybe Bool)

-- | A client token used to correlate requests and responses.
resetDeployments_amznClientToken :: Lens' ResetDeployments (Maybe Text)

-- | The ID of the Greengrass group.
resetDeployments_groupId :: Lens' ResetDeployments Text

-- | <i>See:</i> <a>newResetDeploymentsResponse</a> smart constructor.
data ResetDeploymentsResponse
ResetDeploymentsResponse' :: Maybe Text -> Maybe Text -> Int -> ResetDeploymentsResponse

-- | The ID of the deployment.
[$sel:deploymentId:ResetDeploymentsResponse'] :: ResetDeploymentsResponse -> Maybe Text

-- | The ARN of the deployment.
[$sel:deploymentArn:ResetDeploymentsResponse'] :: ResetDeploymentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ResetDeploymentsResponse'] :: ResetDeploymentsResponse -> Int

-- | Create a value of <a>ResetDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:ResetDeploymentsResponse'</a>,
--   <a>resetDeploymentsResponse_deploymentId</a> - The ID of the
--   deployment.
--   
--   <a>$sel:deploymentArn:ResetDeploymentsResponse'</a>,
--   <a>resetDeploymentsResponse_deploymentArn</a> - The ARN of the
--   deployment.
--   
--   <a>$sel:httpStatus:ResetDeploymentsResponse'</a>,
--   <a>resetDeploymentsResponse_httpStatus</a> - The response's http
--   status code.
newResetDeploymentsResponse :: Int -> ResetDeploymentsResponse

-- | The ID of the deployment.
resetDeploymentsResponse_deploymentId :: Lens' ResetDeploymentsResponse (Maybe Text)

-- | The ARN of the deployment.
resetDeploymentsResponse_deploymentArn :: Lens' ResetDeploymentsResponse (Maybe Text)

-- | The response's http status code.
resetDeploymentsResponse_httpStatus :: Lens' ResetDeploymentsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance GHC.Show.Show Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance GHC.Read.Read Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance GHC.Classes.Eq Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance GHC.Generics.Generic Network.AWS.Greengrass.ResetDeployments.ResetDeploymentsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ResetDeployments.ResetDeploymentsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ResetDeployments.ResetDeploymentsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ResetDeployments.ResetDeploymentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ResetDeployments.ResetDeploymentsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ResetDeployments.ResetDeployments
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ResetDeployments.ResetDeployments


-- | Retrieves a list of resource tags for a resource arn.
module Network.AWS.Greengrass.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | Undocumented member.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Greengrass.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListTagsForResource.ListTagsForResource


-- | Retrieves a list of subscription definitions.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListSubscriptionDefinitions

-- | <i>See:</i> <a>newListSubscriptionDefinitions</a> smart constructor.
data ListSubscriptionDefinitions
ListSubscriptionDefinitions' :: Maybe Text -> Maybe Text -> ListSubscriptionDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListSubscriptionDefinitions'] :: ListSubscriptionDefinitions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListSubscriptionDefinitions'] :: ListSubscriptionDefinitions -> Maybe Text

-- | Create a value of <a>ListSubscriptionDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionDefinitions'</a>,
--   <a>listSubscriptionDefinitions_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListSubscriptionDefinitions'</a>,
--   <a>listSubscriptionDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListSubscriptionDefinitions :: ListSubscriptionDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listSubscriptionDefinitions_nextToken :: Lens' ListSubscriptionDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listSubscriptionDefinitions_maxResults :: Lens' ListSubscriptionDefinitions (Maybe Text)

-- | <i>See:</i> <a>newListSubscriptionDefinitionsResponse</a> smart
--   constructor.
data ListSubscriptionDefinitionsResponse
ListSubscriptionDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListSubscriptionDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListSubscriptionDefinitionsResponse'] :: ListSubscriptionDefinitionsResponse -> Maybe Text

-- | Information about a definition.
[$sel:definitions:ListSubscriptionDefinitionsResponse'] :: ListSubscriptionDefinitionsResponse -> Maybe [DefinitionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListSubscriptionDefinitionsResponse'] :: ListSubscriptionDefinitionsResponse -> Int

-- | Create a value of <a>ListSubscriptionDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionDefinitions'</a>,
--   <a>listSubscriptionDefinitionsResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:definitions:ListSubscriptionDefinitionsResponse'</a>,
--   <a>listSubscriptionDefinitionsResponse_definitions</a> - Information
--   about a definition.
--   
--   <a>$sel:httpStatus:ListSubscriptionDefinitionsResponse'</a>,
--   <a>listSubscriptionDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newListSubscriptionDefinitionsResponse :: Int -> ListSubscriptionDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listSubscriptionDefinitionsResponse_nextToken :: Lens' ListSubscriptionDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listSubscriptionDefinitionsResponse_definitions :: Lens' ListSubscriptionDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listSubscriptionDefinitionsResponse_httpStatus :: Lens' ListSubscriptionDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance GHC.Show.Show Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance GHC.Read.Read Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListSubscriptionDefinitions.ListSubscriptionDefinitions


-- | Lists the versions of a subscription definition.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListSubscriptionDefinitionVersions

-- | <i>See:</i> <a>newListSubscriptionDefinitionVersions</a> smart
--   constructor.
data ListSubscriptionDefinitionVersions
ListSubscriptionDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListSubscriptionDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListSubscriptionDefinitionVersions'] :: ListSubscriptionDefinitionVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListSubscriptionDefinitionVersions'] :: ListSubscriptionDefinitionVersions -> Maybe Text

-- | The ID of the subscription definition.
[$sel:subscriptionDefinitionId:ListSubscriptionDefinitionVersions'] :: ListSubscriptionDefinitionVersions -> Text

-- | Create a value of <a>ListSubscriptionDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionDefinitionVersions'</a>,
--   <a>listSubscriptionDefinitionVersions_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:maxResults:ListSubscriptionDefinitionVersions'</a>,
--   <a>listSubscriptionDefinitionVersions_maxResults</a> - The maximum
--   number of results to be returned per request.
--   
--   
--   <a>$sel:subscriptionDefinitionId:ListSubscriptionDefinitionVersions'</a>,
--   <a>listSubscriptionDefinitionVersions_subscriptionDefinitionId</a> -
--   The ID of the subscription definition.
newListSubscriptionDefinitionVersions :: Text -> ListSubscriptionDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listSubscriptionDefinitionVersions_nextToken :: Lens' ListSubscriptionDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listSubscriptionDefinitionVersions_maxResults :: Lens' ListSubscriptionDefinitionVersions (Maybe Text)

-- | The ID of the subscription definition.
listSubscriptionDefinitionVersions_subscriptionDefinitionId :: Lens' ListSubscriptionDefinitionVersions Text

-- | <i>See:</i> <a>newListSubscriptionDefinitionVersionsResponse</a> smart
--   constructor.
data ListSubscriptionDefinitionVersionsResponse
ListSubscriptionDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListSubscriptionDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListSubscriptionDefinitionVersionsResponse'] :: ListSubscriptionDefinitionVersionsResponse -> Maybe Text

-- | Information about a version.
[$sel:versions:ListSubscriptionDefinitionVersionsResponse'] :: ListSubscriptionDefinitionVersionsResponse -> Maybe [VersionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListSubscriptionDefinitionVersionsResponse'] :: ListSubscriptionDefinitionVersionsResponse -> Int

-- | Create a value of <a>ListSubscriptionDefinitionVersionsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionDefinitionVersions'</a>,
--   <a>listSubscriptionDefinitionVersionsResponse_nextToken</a> - The
--   token for the next set of results, or ''null'' if there are no
--   additional results.
--   
--   <a>$sel:versions:ListSubscriptionDefinitionVersionsResponse'</a>,
--   <a>listSubscriptionDefinitionVersionsResponse_versions</a> -
--   Information about a version.
--   
--   <a>$sel:httpStatus:ListSubscriptionDefinitionVersionsResponse'</a>,
--   <a>listSubscriptionDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListSubscriptionDefinitionVersionsResponse :: Int -> ListSubscriptionDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listSubscriptionDefinitionVersionsResponse_nextToken :: Lens' ListSubscriptionDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listSubscriptionDefinitionVersionsResponse_versions :: Lens' ListSubscriptionDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listSubscriptionDefinitionVersionsResponse_httpStatus :: Lens' ListSubscriptionDefinitionVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance GHC.Show.Show Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance GHC.Read.Read Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListSubscriptionDefinitionVersions.ListSubscriptionDefinitionVersions


-- | Retrieves a list of resource definitions.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListResourceDefinitions

-- | <i>See:</i> <a>newListResourceDefinitions</a> smart constructor.
data ListResourceDefinitions
ListResourceDefinitions' :: Maybe Text -> Maybe Text -> ListResourceDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListResourceDefinitions'] :: ListResourceDefinitions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListResourceDefinitions'] :: ListResourceDefinitions -> Maybe Text

-- | Create a value of <a>ListResourceDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceDefinitions'</a>,
--   <a>listResourceDefinitions_nextToken</a> - The token for the next set
--   of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListResourceDefinitions'</a>,
--   <a>listResourceDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListResourceDefinitions :: ListResourceDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listResourceDefinitions_nextToken :: Lens' ListResourceDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listResourceDefinitions_maxResults :: Lens' ListResourceDefinitions (Maybe Text)

-- | <i>See:</i> <a>newListResourceDefinitionsResponse</a> smart
--   constructor.
data ListResourceDefinitionsResponse
ListResourceDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListResourceDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListResourceDefinitionsResponse'] :: ListResourceDefinitionsResponse -> Maybe Text

-- | Information about a definition.
[$sel:definitions:ListResourceDefinitionsResponse'] :: ListResourceDefinitionsResponse -> Maybe [DefinitionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListResourceDefinitionsResponse'] :: ListResourceDefinitionsResponse -> Int

-- | Create a value of <a>ListResourceDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceDefinitions'</a>,
--   <a>listResourceDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListResourceDefinitionsResponse'</a>,
--   <a>listResourceDefinitionsResponse_definitions</a> - Information about
--   a definition.
--   
--   <a>$sel:httpStatus:ListResourceDefinitionsResponse'</a>,
--   <a>listResourceDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newListResourceDefinitionsResponse :: Int -> ListResourceDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listResourceDefinitionsResponse_nextToken :: Lens' ListResourceDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listResourceDefinitionsResponse_definitions :: Lens' ListResourceDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listResourceDefinitionsResponse_httpStatus :: Lens' ListResourceDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance GHC.Show.Show Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance GHC.Read.Read Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListResourceDefinitions.ListResourceDefinitions


-- | Lists the versions of a resource definition.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListResourceDefinitionVersions

-- | <i>See:</i> <a>newListResourceDefinitionVersions</a> smart
--   constructor.
data ListResourceDefinitionVersions
ListResourceDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListResourceDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListResourceDefinitionVersions'] :: ListResourceDefinitionVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListResourceDefinitionVersions'] :: ListResourceDefinitionVersions -> Maybe Text

-- | The ID of the resource definition.
[$sel:resourceDefinitionId:ListResourceDefinitionVersions'] :: ListResourceDefinitionVersions -> Text

-- | Create a value of <a>ListResourceDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceDefinitionVersions'</a>,
--   <a>listResourceDefinitionVersions_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListResourceDefinitionVersions'</a>,
--   <a>listResourceDefinitionVersions_maxResults</a> - The maximum number
--   of results to be returned per request.
--   
--   <a>$sel:resourceDefinitionId:ListResourceDefinitionVersions'</a>,
--   <a>listResourceDefinitionVersions_resourceDefinitionId</a> - The ID of
--   the resource definition.
newListResourceDefinitionVersions :: Text -> ListResourceDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listResourceDefinitionVersions_nextToken :: Lens' ListResourceDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listResourceDefinitionVersions_maxResults :: Lens' ListResourceDefinitionVersions (Maybe Text)

-- | The ID of the resource definition.
listResourceDefinitionVersions_resourceDefinitionId :: Lens' ListResourceDefinitionVersions Text

-- | <i>See:</i> <a>newListResourceDefinitionVersionsResponse</a> smart
--   constructor.
data ListResourceDefinitionVersionsResponse
ListResourceDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListResourceDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListResourceDefinitionVersionsResponse'] :: ListResourceDefinitionVersionsResponse -> Maybe Text

-- | Information about a version.
[$sel:versions:ListResourceDefinitionVersionsResponse'] :: ListResourceDefinitionVersionsResponse -> Maybe [VersionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListResourceDefinitionVersionsResponse'] :: ListResourceDefinitionVersionsResponse -> Int

-- | Create a value of <a>ListResourceDefinitionVersionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceDefinitionVersions'</a>,
--   <a>listResourceDefinitionVersionsResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListResourceDefinitionVersionsResponse'</a>,
--   <a>listResourceDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListResourceDefinitionVersionsResponse'</a>,
--   <a>listResourceDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListResourceDefinitionVersionsResponse :: Int -> ListResourceDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listResourceDefinitionVersionsResponse_nextToken :: Lens' ListResourceDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listResourceDefinitionVersionsResponse_versions :: Lens' ListResourceDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listResourceDefinitionVersionsResponse_httpStatus :: Lens' ListResourceDefinitionVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance GHC.Show.Show Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance GHC.Read.Read Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListResourceDefinitionVersions.ListResourceDefinitionVersions


-- | Retrieves a list of logger definitions.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListLoggerDefinitions

-- | <i>See:</i> <a>newListLoggerDefinitions</a> smart constructor.
data ListLoggerDefinitions
ListLoggerDefinitions' :: Maybe Text -> Maybe Text -> ListLoggerDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListLoggerDefinitions'] :: ListLoggerDefinitions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListLoggerDefinitions'] :: ListLoggerDefinitions -> Maybe Text

-- | Create a value of <a>ListLoggerDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLoggerDefinitions'</a>,
--   <a>listLoggerDefinitions_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListLoggerDefinitions'</a>,
--   <a>listLoggerDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListLoggerDefinitions :: ListLoggerDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listLoggerDefinitions_nextToken :: Lens' ListLoggerDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listLoggerDefinitions_maxResults :: Lens' ListLoggerDefinitions (Maybe Text)

-- | <i>See:</i> <a>newListLoggerDefinitionsResponse</a> smart constructor.
data ListLoggerDefinitionsResponse
ListLoggerDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListLoggerDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListLoggerDefinitionsResponse'] :: ListLoggerDefinitionsResponse -> Maybe Text

-- | Information about a definition.
[$sel:definitions:ListLoggerDefinitionsResponse'] :: ListLoggerDefinitionsResponse -> Maybe [DefinitionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListLoggerDefinitionsResponse'] :: ListLoggerDefinitionsResponse -> Int

-- | Create a value of <a>ListLoggerDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLoggerDefinitions'</a>,
--   <a>listLoggerDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListLoggerDefinitionsResponse'</a>,
--   <a>listLoggerDefinitionsResponse_definitions</a> - Information about a
--   definition.
--   
--   <a>$sel:httpStatus:ListLoggerDefinitionsResponse'</a>,
--   <a>listLoggerDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newListLoggerDefinitionsResponse :: Int -> ListLoggerDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listLoggerDefinitionsResponse_nextToken :: Lens' ListLoggerDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listLoggerDefinitionsResponse_definitions :: Lens' ListLoggerDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listLoggerDefinitionsResponse_httpStatus :: Lens' ListLoggerDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance GHC.Show.Show Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance GHC.Read.Read Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListLoggerDefinitions.ListLoggerDefinitions


-- | Lists the versions of a logger definition.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListLoggerDefinitionVersions

-- | <i>See:</i> <a>newListLoggerDefinitionVersions</a> smart constructor.
data ListLoggerDefinitionVersions
ListLoggerDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListLoggerDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListLoggerDefinitionVersions'] :: ListLoggerDefinitionVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListLoggerDefinitionVersions'] :: ListLoggerDefinitionVersions -> Maybe Text

-- | The ID of the logger definition.
[$sel:loggerDefinitionId:ListLoggerDefinitionVersions'] :: ListLoggerDefinitionVersions -> Text

-- | Create a value of <a>ListLoggerDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLoggerDefinitionVersions'</a>,
--   <a>listLoggerDefinitionVersions_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListLoggerDefinitionVersions'</a>,
--   <a>listLoggerDefinitionVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:loggerDefinitionId:ListLoggerDefinitionVersions'</a>,
--   <a>listLoggerDefinitionVersions_loggerDefinitionId</a> - The ID of the
--   logger definition.
newListLoggerDefinitionVersions :: Text -> ListLoggerDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listLoggerDefinitionVersions_nextToken :: Lens' ListLoggerDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listLoggerDefinitionVersions_maxResults :: Lens' ListLoggerDefinitionVersions (Maybe Text)

-- | The ID of the logger definition.
listLoggerDefinitionVersions_loggerDefinitionId :: Lens' ListLoggerDefinitionVersions Text

-- | <i>See:</i> <a>newListLoggerDefinitionVersionsResponse</a> smart
--   constructor.
data ListLoggerDefinitionVersionsResponse
ListLoggerDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListLoggerDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListLoggerDefinitionVersionsResponse'] :: ListLoggerDefinitionVersionsResponse -> Maybe Text

-- | Information about a version.
[$sel:versions:ListLoggerDefinitionVersionsResponse'] :: ListLoggerDefinitionVersionsResponse -> Maybe [VersionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListLoggerDefinitionVersionsResponse'] :: ListLoggerDefinitionVersionsResponse -> Int

-- | Create a value of <a>ListLoggerDefinitionVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLoggerDefinitionVersions'</a>,
--   <a>listLoggerDefinitionVersionsResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListLoggerDefinitionVersionsResponse'</a>,
--   <a>listLoggerDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListLoggerDefinitionVersionsResponse'</a>,
--   <a>listLoggerDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListLoggerDefinitionVersionsResponse :: Int -> ListLoggerDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listLoggerDefinitionVersionsResponse_nextToken :: Lens' ListLoggerDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listLoggerDefinitionVersionsResponse_versions :: Lens' ListLoggerDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listLoggerDefinitionVersionsResponse_httpStatus :: Lens' ListLoggerDefinitionVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance GHC.Show.Show Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance GHC.Read.Read Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListLoggerDefinitionVersions.ListLoggerDefinitionVersions


-- | Retrieves a list of groups.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListGroups

-- | <i>See:</i> <a>newListGroups</a> smart constructor.
data ListGroups
ListGroups' :: Maybe Text -> Maybe Text -> ListGroups

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListGroups'] :: ListGroups -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListGroups'] :: ListGroups -> Maybe Text

-- | Create a value of <a>ListGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroups_nextToken</a> - The
--   token for the next set of results, or ''null'' if there are no
--   additional results.
--   
--   <a>$sel:maxResults:ListGroups'</a>, <a>listGroups_maxResults</a> - The
--   maximum number of results to be returned per request.
newListGroups :: ListGroups

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listGroups_nextToken :: Lens' ListGroups (Maybe Text)

-- | The maximum number of results to be returned per request.
listGroups_maxResults :: Lens' ListGroups (Maybe Text)

-- | <i>See:</i> <a>newListGroupsResponse</a> smart constructor.
data ListGroupsResponse
ListGroupsResponse' :: Maybe [GroupInformation] -> Maybe Text -> Int -> ListGroupsResponse

-- | Information about a group.
[$sel:groups:ListGroupsResponse'] :: ListGroupsResponse -> Maybe [GroupInformation]

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListGroupsResponse'] :: ListGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListGroupsResponse'] :: ListGroupsResponse -> Int

-- | Create a value of <a>ListGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groups</a> - Information about a group.
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroupsResponse_nextToken</a>
--   - The token for the next set of results, or ''null'' if there are no
--   additional results.
--   
--   <a>$sel:httpStatus:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_httpStatus</a> - The response's http status
--   code.
newListGroupsResponse :: Int -> ListGroupsResponse

-- | Information about a group.
listGroupsResponse_groups :: Lens' ListGroupsResponse (Maybe [GroupInformation])

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listGroupsResponse_nextToken :: Lens' ListGroupsResponse (Maybe Text)

-- | The response's http status code.
listGroupsResponse_httpStatus :: Lens' ListGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListGroups.ListGroups
instance GHC.Show.Show Network.AWS.Greengrass.ListGroups.ListGroups
instance GHC.Read.Read Network.AWS.Greengrass.ListGroups.ListGroups
instance GHC.Classes.Eq Network.AWS.Greengrass.ListGroups.ListGroups
instance GHC.Generics.Generic Network.AWS.Greengrass.ListGroups.ListGroupsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListGroups.ListGroupsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListGroups.ListGroupsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListGroups.ListGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListGroups.ListGroups
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListGroups.ListGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListGroups.ListGroups
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListGroups.ListGroups
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListGroups.ListGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListGroups.ListGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListGroups.ListGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListGroups.ListGroups


-- | Lists the versions of a group.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListGroupVersions

-- | <i>See:</i> <a>newListGroupVersions</a> smart constructor.
data ListGroupVersions
ListGroupVersions' :: Maybe Text -> Maybe Text -> Text -> ListGroupVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListGroupVersions'] :: ListGroupVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListGroupVersions'] :: ListGroupVersions -> Maybe Text

-- | The ID of the Greengrass group.
[$sel:groupId:ListGroupVersions'] :: ListGroupVersions -> Text

-- | Create a value of <a>ListGroupVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroupVersions'</a>,
--   <a>listGroupVersions_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListGroupVersions'</a>,
--   <a>listGroupVersions_maxResults</a> - The maximum number of results to
--   be returned per request.
--   
--   <a>$sel:groupId:ListGroupVersions'</a>,
--   <a>listGroupVersions_groupId</a> - The ID of the Greengrass group.
newListGroupVersions :: Text -> ListGroupVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listGroupVersions_nextToken :: Lens' ListGroupVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listGroupVersions_maxResults :: Lens' ListGroupVersions (Maybe Text)

-- | The ID of the Greengrass group.
listGroupVersions_groupId :: Lens' ListGroupVersions Text

-- | <i>See:</i> <a>newListGroupVersionsResponse</a> smart constructor.
data ListGroupVersionsResponse
ListGroupVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListGroupVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListGroupVersionsResponse'] :: ListGroupVersionsResponse -> Maybe Text

-- | Information about a version.
[$sel:versions:ListGroupVersionsResponse'] :: ListGroupVersionsResponse -> Maybe [VersionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListGroupVersionsResponse'] :: ListGroupVersionsResponse -> Int

-- | Create a value of <a>ListGroupVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroupVersions'</a>,
--   <a>listGroupVersionsResponse_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:versions:ListGroupVersionsResponse'</a>,
--   <a>listGroupVersionsResponse_versions</a> - Information about a
--   version.
--   
--   <a>$sel:httpStatus:ListGroupVersionsResponse'</a>,
--   <a>listGroupVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListGroupVersionsResponse :: Int -> ListGroupVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listGroupVersionsResponse_nextToken :: Lens' ListGroupVersionsResponse (Maybe Text)

-- | Information about a version.
listGroupVersionsResponse_versions :: Lens' ListGroupVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listGroupVersionsResponse_httpStatus :: Lens' ListGroupVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance GHC.Show.Show Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance GHC.Read.Read Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListGroupVersions.ListGroupVersionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListGroupVersions.ListGroupVersionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListGroupVersions.ListGroupVersionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListGroupVersions.ListGroupVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListGroupVersions.ListGroupVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListGroupVersions.ListGroupVersions


-- | Retrieves the current CAs for a group.
module Network.AWS.Greengrass.ListGroupCertificateAuthorities

-- | <i>See:</i> <a>newListGroupCertificateAuthorities</a> smart
--   constructor.
data ListGroupCertificateAuthorities
ListGroupCertificateAuthorities' :: Text -> ListGroupCertificateAuthorities

-- | The ID of the Greengrass group.
[$sel:groupId:ListGroupCertificateAuthorities'] :: ListGroupCertificateAuthorities -> Text

-- | Create a value of <a>ListGroupCertificateAuthorities</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:ListGroupCertificateAuthorities'</a>,
--   <a>listGroupCertificateAuthorities_groupId</a> - The ID of the
--   Greengrass group.
newListGroupCertificateAuthorities :: Text -> ListGroupCertificateAuthorities

-- | The ID of the Greengrass group.
listGroupCertificateAuthorities_groupId :: Lens' ListGroupCertificateAuthorities Text

-- | <i>See:</i> <a>newListGroupCertificateAuthoritiesResponse</a> smart
--   constructor.
data ListGroupCertificateAuthoritiesResponse
ListGroupCertificateAuthoritiesResponse' :: Maybe [GroupCertificateAuthorityProperties] -> Int -> ListGroupCertificateAuthoritiesResponse

-- | A list of certificate authorities associated with the group.
[$sel:groupCertificateAuthorities:ListGroupCertificateAuthoritiesResponse'] :: ListGroupCertificateAuthoritiesResponse -> Maybe [GroupCertificateAuthorityProperties]

-- | The response's http status code.
[$sel:httpStatus:ListGroupCertificateAuthoritiesResponse'] :: ListGroupCertificateAuthoritiesResponse -> Int

-- | Create a value of <a>ListGroupCertificateAuthoritiesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorities:ListGroupCertificateAuthoritiesResponse'</a>,
--   <a>listGroupCertificateAuthoritiesResponse_groupCertificateAuthorities</a>
--   - A list of certificate authorities associated with the group.
--   
--   <a>$sel:httpStatus:ListGroupCertificateAuthoritiesResponse'</a>,
--   <a>listGroupCertificateAuthoritiesResponse_httpStatus</a> - The
--   response's http status code.
newListGroupCertificateAuthoritiesResponse :: Int -> ListGroupCertificateAuthoritiesResponse

-- | A list of certificate authorities associated with the group.
listGroupCertificateAuthoritiesResponse_groupCertificateAuthorities :: Lens' ListGroupCertificateAuthoritiesResponse (Maybe [GroupCertificateAuthorityProperties])

-- | The response's http status code.
listGroupCertificateAuthoritiesResponse_httpStatus :: Lens' ListGroupCertificateAuthoritiesResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance GHC.Show.Show Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance GHC.Read.Read Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance GHC.Classes.Eq Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance GHC.Generics.Generic Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthoritiesResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthoritiesResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthoritiesResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthoritiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthoritiesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListGroupCertificateAuthorities.ListGroupCertificateAuthorities


-- | Retrieves a list of Lambda function definitions.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListFunctionDefinitions

-- | <i>See:</i> <a>newListFunctionDefinitions</a> smart constructor.
data ListFunctionDefinitions
ListFunctionDefinitions' :: Maybe Text -> Maybe Text -> ListFunctionDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListFunctionDefinitions'] :: ListFunctionDefinitions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListFunctionDefinitions'] :: ListFunctionDefinitions -> Maybe Text

-- | Create a value of <a>ListFunctionDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFunctionDefinitions'</a>,
--   <a>listFunctionDefinitions_nextToken</a> - The token for the next set
--   of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListFunctionDefinitions'</a>,
--   <a>listFunctionDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListFunctionDefinitions :: ListFunctionDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listFunctionDefinitions_nextToken :: Lens' ListFunctionDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listFunctionDefinitions_maxResults :: Lens' ListFunctionDefinitions (Maybe Text)

-- | <i>See:</i> <a>newListFunctionDefinitionsResponse</a> smart
--   constructor.
data ListFunctionDefinitionsResponse
ListFunctionDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListFunctionDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListFunctionDefinitionsResponse'] :: ListFunctionDefinitionsResponse -> Maybe Text

-- | Information about a definition.
[$sel:definitions:ListFunctionDefinitionsResponse'] :: ListFunctionDefinitionsResponse -> Maybe [DefinitionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListFunctionDefinitionsResponse'] :: ListFunctionDefinitionsResponse -> Int

-- | Create a value of <a>ListFunctionDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFunctionDefinitions'</a>,
--   <a>listFunctionDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListFunctionDefinitionsResponse'</a>,
--   <a>listFunctionDefinitionsResponse_definitions</a> - Information about
--   a definition.
--   
--   <a>$sel:httpStatus:ListFunctionDefinitionsResponse'</a>,
--   <a>listFunctionDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newListFunctionDefinitionsResponse :: Int -> ListFunctionDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listFunctionDefinitionsResponse_nextToken :: Lens' ListFunctionDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listFunctionDefinitionsResponse_definitions :: Lens' ListFunctionDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listFunctionDefinitionsResponse_httpStatus :: Lens' ListFunctionDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance GHC.Show.Show Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance GHC.Read.Read Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListFunctionDefinitions.ListFunctionDefinitions


-- | Lists the versions of a Lambda function definition.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListFunctionDefinitionVersions

-- | <i>See:</i> <a>newListFunctionDefinitionVersions</a> smart
--   constructor.
data ListFunctionDefinitionVersions
ListFunctionDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListFunctionDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListFunctionDefinitionVersions'] :: ListFunctionDefinitionVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListFunctionDefinitionVersions'] :: ListFunctionDefinitionVersions -> Maybe Text

-- | The ID of the Lambda function definition.
[$sel:functionDefinitionId:ListFunctionDefinitionVersions'] :: ListFunctionDefinitionVersions -> Text

-- | Create a value of <a>ListFunctionDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFunctionDefinitionVersions'</a>,
--   <a>listFunctionDefinitionVersions_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListFunctionDefinitionVersions'</a>,
--   <a>listFunctionDefinitionVersions_maxResults</a> - The maximum number
--   of results to be returned per request.
--   
--   <a>$sel:functionDefinitionId:ListFunctionDefinitionVersions'</a>,
--   <a>listFunctionDefinitionVersions_functionDefinitionId</a> - The ID of
--   the Lambda function definition.
newListFunctionDefinitionVersions :: Text -> ListFunctionDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listFunctionDefinitionVersions_nextToken :: Lens' ListFunctionDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listFunctionDefinitionVersions_maxResults :: Lens' ListFunctionDefinitionVersions (Maybe Text)

-- | The ID of the Lambda function definition.
listFunctionDefinitionVersions_functionDefinitionId :: Lens' ListFunctionDefinitionVersions Text

-- | <i>See:</i> <a>newListFunctionDefinitionVersionsResponse</a> smart
--   constructor.
data ListFunctionDefinitionVersionsResponse
ListFunctionDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListFunctionDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListFunctionDefinitionVersionsResponse'] :: ListFunctionDefinitionVersionsResponse -> Maybe Text

-- | Information about a version.
[$sel:versions:ListFunctionDefinitionVersionsResponse'] :: ListFunctionDefinitionVersionsResponse -> Maybe [VersionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListFunctionDefinitionVersionsResponse'] :: ListFunctionDefinitionVersionsResponse -> Int

-- | Create a value of <a>ListFunctionDefinitionVersionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFunctionDefinitionVersions'</a>,
--   <a>listFunctionDefinitionVersionsResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListFunctionDefinitionVersionsResponse'</a>,
--   <a>listFunctionDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListFunctionDefinitionVersionsResponse'</a>,
--   <a>listFunctionDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListFunctionDefinitionVersionsResponse :: Int -> ListFunctionDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listFunctionDefinitionVersionsResponse_nextToken :: Lens' ListFunctionDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listFunctionDefinitionVersionsResponse_versions :: Lens' ListFunctionDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listFunctionDefinitionVersionsResponse_httpStatus :: Lens' ListFunctionDefinitionVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance GHC.Show.Show Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance GHC.Read.Read Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListFunctionDefinitionVersions.ListFunctionDefinitionVersions


-- | Retrieves a list of device definitions.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListDeviceDefinitions

-- | <i>See:</i> <a>newListDeviceDefinitions</a> smart constructor.
data ListDeviceDefinitions
ListDeviceDefinitions' :: Maybe Text -> Maybe Text -> ListDeviceDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListDeviceDefinitions'] :: ListDeviceDefinitions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListDeviceDefinitions'] :: ListDeviceDefinitions -> Maybe Text

-- | Create a value of <a>ListDeviceDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceDefinitions'</a>,
--   <a>listDeviceDefinitions_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListDeviceDefinitions'</a>,
--   <a>listDeviceDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListDeviceDefinitions :: ListDeviceDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeviceDefinitions_nextToken :: Lens' ListDeviceDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listDeviceDefinitions_maxResults :: Lens' ListDeviceDefinitions (Maybe Text)

-- | <i>See:</i> <a>newListDeviceDefinitionsResponse</a> smart constructor.
data ListDeviceDefinitionsResponse
ListDeviceDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListDeviceDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListDeviceDefinitionsResponse'] :: ListDeviceDefinitionsResponse -> Maybe Text

-- | Information about a definition.
[$sel:definitions:ListDeviceDefinitionsResponse'] :: ListDeviceDefinitionsResponse -> Maybe [DefinitionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListDeviceDefinitionsResponse'] :: ListDeviceDefinitionsResponse -> Int

-- | Create a value of <a>ListDeviceDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceDefinitions'</a>,
--   <a>listDeviceDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListDeviceDefinitionsResponse'</a>,
--   <a>listDeviceDefinitionsResponse_definitions</a> - Information about a
--   definition.
--   
--   <a>$sel:httpStatus:ListDeviceDefinitionsResponse'</a>,
--   <a>listDeviceDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newListDeviceDefinitionsResponse :: Int -> ListDeviceDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeviceDefinitionsResponse_nextToken :: Lens' ListDeviceDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listDeviceDefinitionsResponse_definitions :: Lens' ListDeviceDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listDeviceDefinitionsResponse_httpStatus :: Lens' ListDeviceDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance GHC.Show.Show Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance GHC.Read.Read Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListDeviceDefinitions.ListDeviceDefinitions


-- | Lists the versions of a device definition.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListDeviceDefinitionVersions

-- | <i>See:</i> <a>newListDeviceDefinitionVersions</a> smart constructor.
data ListDeviceDefinitionVersions
ListDeviceDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListDeviceDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListDeviceDefinitionVersions'] :: ListDeviceDefinitionVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListDeviceDefinitionVersions'] :: ListDeviceDefinitionVersions -> Maybe Text

-- | The ID of the device definition.
[$sel:deviceDefinitionId:ListDeviceDefinitionVersions'] :: ListDeviceDefinitionVersions -> Text

-- | Create a value of <a>ListDeviceDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceDefinitionVersions'</a>,
--   <a>listDeviceDefinitionVersions_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListDeviceDefinitionVersions'</a>,
--   <a>listDeviceDefinitionVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:deviceDefinitionId:ListDeviceDefinitionVersions'</a>,
--   <a>listDeviceDefinitionVersions_deviceDefinitionId</a> - The ID of the
--   device definition.
newListDeviceDefinitionVersions :: Text -> ListDeviceDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeviceDefinitionVersions_nextToken :: Lens' ListDeviceDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listDeviceDefinitionVersions_maxResults :: Lens' ListDeviceDefinitionVersions (Maybe Text)

-- | The ID of the device definition.
listDeviceDefinitionVersions_deviceDefinitionId :: Lens' ListDeviceDefinitionVersions Text

-- | <i>See:</i> <a>newListDeviceDefinitionVersionsResponse</a> smart
--   constructor.
data ListDeviceDefinitionVersionsResponse
ListDeviceDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListDeviceDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListDeviceDefinitionVersionsResponse'] :: ListDeviceDefinitionVersionsResponse -> Maybe Text

-- | Information about a version.
[$sel:versions:ListDeviceDefinitionVersionsResponse'] :: ListDeviceDefinitionVersionsResponse -> Maybe [VersionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListDeviceDefinitionVersionsResponse'] :: ListDeviceDefinitionVersionsResponse -> Int

-- | Create a value of <a>ListDeviceDefinitionVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceDefinitionVersions'</a>,
--   <a>listDeviceDefinitionVersionsResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListDeviceDefinitionVersionsResponse'</a>,
--   <a>listDeviceDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListDeviceDefinitionVersionsResponse'</a>,
--   <a>listDeviceDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListDeviceDefinitionVersionsResponse :: Int -> ListDeviceDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeviceDefinitionVersionsResponse_nextToken :: Lens' ListDeviceDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listDeviceDefinitionVersionsResponse_versions :: Lens' ListDeviceDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listDeviceDefinitionVersionsResponse_httpStatus :: Lens' ListDeviceDefinitionVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance GHC.Show.Show Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance GHC.Read.Read Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListDeviceDefinitionVersions.ListDeviceDefinitionVersions


-- | Returns a history of deployments for the group.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListDeployments

-- | <i>See:</i> <a>newListDeployments</a> smart constructor.
data ListDeployments
ListDeployments' :: Maybe Text -> Maybe Text -> Text -> ListDeployments

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListDeployments'] :: ListDeployments -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListDeployments'] :: ListDeployments -> Maybe Text

-- | The ID of the Greengrass group.
[$sel:groupId:ListDeployments'] :: ListDeployments -> Text

-- | Create a value of <a>ListDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeployments_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListDeployments'</a>,
--   <a>listDeployments_maxResults</a> - The maximum number of results to
--   be returned per request.
--   
--   <a>$sel:groupId:ListDeployments'</a>, <a>listDeployments_groupId</a> -
--   The ID of the Greengrass group.
newListDeployments :: Text -> ListDeployments

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeployments_nextToken :: Lens' ListDeployments (Maybe Text)

-- | The maximum number of results to be returned per request.
listDeployments_maxResults :: Lens' ListDeployments (Maybe Text)

-- | The ID of the Greengrass group.
listDeployments_groupId :: Lens' ListDeployments Text

-- | <i>See:</i> <a>newListDeploymentsResponse</a> smart constructor.
data ListDeploymentsResponse
ListDeploymentsResponse' :: Maybe Text -> Maybe [Deployment] -> Int -> ListDeploymentsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Maybe Text

-- | A list of deployments for the requested groups.
[$sel:deployments:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Maybe [Deployment]

-- | The response's http status code.
[$sel:httpStatus:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Int

-- | Create a value of <a>ListDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeploymentsResponse_nextToken</a> - The token for the next set
--   of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:deployments:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_deployments</a> - A list of deployments for
--   the requested groups.
--   
--   <a>$sel:httpStatus:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newListDeploymentsResponse :: Int -> ListDeploymentsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeploymentsResponse_nextToken :: Lens' ListDeploymentsResponse (Maybe Text)

-- | A list of deployments for the requested groups.
listDeploymentsResponse_deployments :: Lens' ListDeploymentsResponse (Maybe [Deployment])

-- | The response's http status code.
listDeploymentsResponse_httpStatus :: Lens' ListDeploymentsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListDeployments.ListDeployments
instance GHC.Show.Show Network.AWS.Greengrass.ListDeployments.ListDeployments
instance GHC.Read.Read Network.AWS.Greengrass.ListDeployments.ListDeployments
instance GHC.Classes.Eq Network.AWS.Greengrass.ListDeployments.ListDeployments
instance GHC.Generics.Generic Network.AWS.Greengrass.ListDeployments.ListDeploymentsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListDeployments.ListDeploymentsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListDeployments.ListDeploymentsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListDeployments.ListDeploymentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListDeployments.ListDeployments
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListDeployments.ListDeploymentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListDeployments.ListDeployments
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListDeployments.ListDeployments
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListDeployments.ListDeployments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListDeployments.ListDeployments
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListDeployments.ListDeployments
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListDeployments.ListDeployments


-- | Retrieves a list of core definitions.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListCoreDefinitions

-- | <i>See:</i> <a>newListCoreDefinitions</a> smart constructor.
data ListCoreDefinitions
ListCoreDefinitions' :: Maybe Text -> Maybe Text -> ListCoreDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListCoreDefinitions'] :: ListCoreDefinitions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListCoreDefinitions'] :: ListCoreDefinitions -> Maybe Text

-- | Create a value of <a>ListCoreDefinitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCoreDefinitions'</a>,
--   <a>listCoreDefinitions_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListCoreDefinitions'</a>,
--   <a>listCoreDefinitions_maxResults</a> - The maximum number of results
--   to be returned per request.
newListCoreDefinitions :: ListCoreDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listCoreDefinitions_nextToken :: Lens' ListCoreDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listCoreDefinitions_maxResults :: Lens' ListCoreDefinitions (Maybe Text)

-- | <i>See:</i> <a>newListCoreDefinitionsResponse</a> smart constructor.
data ListCoreDefinitionsResponse
ListCoreDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListCoreDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListCoreDefinitionsResponse'] :: ListCoreDefinitionsResponse -> Maybe Text

-- | Information about a definition.
[$sel:definitions:ListCoreDefinitionsResponse'] :: ListCoreDefinitionsResponse -> Maybe [DefinitionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListCoreDefinitionsResponse'] :: ListCoreDefinitionsResponse -> Int

-- | Create a value of <a>ListCoreDefinitionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCoreDefinitions'</a>,
--   <a>listCoreDefinitionsResponse_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListCoreDefinitionsResponse'</a>,
--   <a>listCoreDefinitionsResponse_definitions</a> - Information about a
--   definition.
--   
--   <a>$sel:httpStatus:ListCoreDefinitionsResponse'</a>,
--   <a>listCoreDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newListCoreDefinitionsResponse :: Int -> ListCoreDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listCoreDefinitionsResponse_nextToken :: Lens' ListCoreDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listCoreDefinitionsResponse_definitions :: Lens' ListCoreDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listCoreDefinitionsResponse_httpStatus :: Lens' ListCoreDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance GHC.Show.Show Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance GHC.Read.Read Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListCoreDefinitions.ListCoreDefinitions


-- | Lists the versions of a core definition.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListCoreDefinitionVersions

-- | <i>See:</i> <a>newListCoreDefinitionVersions</a> smart constructor.
data ListCoreDefinitionVersions
ListCoreDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListCoreDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListCoreDefinitionVersions'] :: ListCoreDefinitionVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListCoreDefinitionVersions'] :: ListCoreDefinitionVersions -> Maybe Text

-- | The ID of the core definition.
[$sel:coreDefinitionId:ListCoreDefinitionVersions'] :: ListCoreDefinitionVersions -> Text

-- | Create a value of <a>ListCoreDefinitionVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCoreDefinitionVersions'</a>,
--   <a>listCoreDefinitionVersions_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListCoreDefinitionVersions'</a>,
--   <a>listCoreDefinitionVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:coreDefinitionId:ListCoreDefinitionVersions'</a>,
--   <a>listCoreDefinitionVersions_coreDefinitionId</a> - The ID of the
--   core definition.
newListCoreDefinitionVersions :: Text -> ListCoreDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listCoreDefinitionVersions_nextToken :: Lens' ListCoreDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listCoreDefinitionVersions_maxResults :: Lens' ListCoreDefinitionVersions (Maybe Text)

-- | The ID of the core definition.
listCoreDefinitionVersions_coreDefinitionId :: Lens' ListCoreDefinitionVersions Text

-- | <i>See:</i> <a>newListCoreDefinitionVersionsResponse</a> smart
--   constructor.
data ListCoreDefinitionVersionsResponse
ListCoreDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListCoreDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListCoreDefinitionVersionsResponse'] :: ListCoreDefinitionVersionsResponse -> Maybe Text

-- | Information about a version.
[$sel:versions:ListCoreDefinitionVersionsResponse'] :: ListCoreDefinitionVersionsResponse -> Maybe [VersionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListCoreDefinitionVersionsResponse'] :: ListCoreDefinitionVersionsResponse -> Int

-- | Create a value of <a>ListCoreDefinitionVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCoreDefinitionVersions'</a>,
--   <a>listCoreDefinitionVersionsResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListCoreDefinitionVersionsResponse'</a>,
--   <a>listCoreDefinitionVersionsResponse_versions</a> - Information about
--   a version.
--   
--   <a>$sel:httpStatus:ListCoreDefinitionVersionsResponse'</a>,
--   <a>listCoreDefinitionVersionsResponse_httpStatus</a> - The response's
--   http status code.
newListCoreDefinitionVersionsResponse :: Int -> ListCoreDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listCoreDefinitionVersionsResponse_nextToken :: Lens' ListCoreDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listCoreDefinitionVersionsResponse_versions :: Lens' ListCoreDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listCoreDefinitionVersionsResponse_httpStatus :: Lens' ListCoreDefinitionVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance GHC.Show.Show Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance GHC.Read.Read Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListCoreDefinitionVersions.ListCoreDefinitionVersions


-- | Retrieves a list of connector definitions.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListConnectorDefinitions

-- | <i>See:</i> <a>newListConnectorDefinitions</a> smart constructor.
data ListConnectorDefinitions
ListConnectorDefinitions' :: Maybe Text -> Maybe Text -> ListConnectorDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListConnectorDefinitions'] :: ListConnectorDefinitions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListConnectorDefinitions'] :: ListConnectorDefinitions -> Maybe Text

-- | Create a value of <a>ListConnectorDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnectorDefinitions'</a>,
--   <a>listConnectorDefinitions_nextToken</a> - The token for the next set
--   of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListConnectorDefinitions'</a>,
--   <a>listConnectorDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListConnectorDefinitions :: ListConnectorDefinitions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listConnectorDefinitions_nextToken :: Lens' ListConnectorDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listConnectorDefinitions_maxResults :: Lens' ListConnectorDefinitions (Maybe Text)

-- | <i>See:</i> <a>newListConnectorDefinitionsResponse</a> smart
--   constructor.
data ListConnectorDefinitionsResponse
ListConnectorDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListConnectorDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListConnectorDefinitionsResponse'] :: ListConnectorDefinitionsResponse -> Maybe Text

-- | Information about a definition.
[$sel:definitions:ListConnectorDefinitionsResponse'] :: ListConnectorDefinitionsResponse -> Maybe [DefinitionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListConnectorDefinitionsResponse'] :: ListConnectorDefinitionsResponse -> Int

-- | Create a value of <a>ListConnectorDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnectorDefinitions'</a>,
--   <a>listConnectorDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListConnectorDefinitionsResponse'</a>,
--   <a>listConnectorDefinitionsResponse_definitions</a> - Information
--   about a definition.
--   
--   <a>$sel:httpStatus:ListConnectorDefinitionsResponse'</a>,
--   <a>listConnectorDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newListConnectorDefinitionsResponse :: Int -> ListConnectorDefinitionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listConnectorDefinitionsResponse_nextToken :: Lens' ListConnectorDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listConnectorDefinitionsResponse_definitions :: Lens' ListConnectorDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listConnectorDefinitionsResponse_httpStatus :: Lens' ListConnectorDefinitionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance GHC.Show.Show Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance GHC.Read.Read Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListConnectorDefinitions.ListConnectorDefinitions


-- | Lists the versions of a connector definition, which are containers for
--   connectors. Connectors run on the Greengrass core and contain built-in
--   integration with local infrastructure, device protocols, AWS, and
--   other cloud services.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListConnectorDefinitionVersions

-- | <i>See:</i> <a>newListConnectorDefinitionVersions</a> smart
--   constructor.
data ListConnectorDefinitionVersions
ListConnectorDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListConnectorDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListConnectorDefinitionVersions'] :: ListConnectorDefinitionVersions -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListConnectorDefinitionVersions'] :: ListConnectorDefinitionVersions -> Maybe Text

-- | The ID of the connector definition.
[$sel:connectorDefinitionId:ListConnectorDefinitionVersions'] :: ListConnectorDefinitionVersions -> Text

-- | Create a value of <a>ListConnectorDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnectorDefinitionVersions'</a>,
--   <a>listConnectorDefinitionVersions_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListConnectorDefinitionVersions'</a>,
--   <a>listConnectorDefinitionVersions_maxResults</a> - The maximum number
--   of results to be returned per request.
--   
--   <a>$sel:connectorDefinitionId:ListConnectorDefinitionVersions'</a>,
--   <a>listConnectorDefinitionVersions_connectorDefinitionId</a> - The ID
--   of the connector definition.
newListConnectorDefinitionVersions :: Text -> ListConnectorDefinitionVersions

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listConnectorDefinitionVersions_nextToken :: Lens' ListConnectorDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listConnectorDefinitionVersions_maxResults :: Lens' ListConnectorDefinitionVersions (Maybe Text)

-- | The ID of the connector definition.
listConnectorDefinitionVersions_connectorDefinitionId :: Lens' ListConnectorDefinitionVersions Text

-- | <i>See:</i> <a>newListConnectorDefinitionVersionsResponse</a> smart
--   constructor.
data ListConnectorDefinitionVersionsResponse
ListConnectorDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListConnectorDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListConnectorDefinitionVersionsResponse'] :: ListConnectorDefinitionVersionsResponse -> Maybe Text

-- | Information about a version.
[$sel:versions:ListConnectorDefinitionVersionsResponse'] :: ListConnectorDefinitionVersionsResponse -> Maybe [VersionInformation]

-- | The response's http status code.
[$sel:httpStatus:ListConnectorDefinitionVersionsResponse'] :: ListConnectorDefinitionVersionsResponse -> Int

-- | Create a value of <a>ListConnectorDefinitionVersionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnectorDefinitionVersions'</a>,
--   <a>listConnectorDefinitionVersionsResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListConnectorDefinitionVersionsResponse'</a>,
--   <a>listConnectorDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListConnectorDefinitionVersionsResponse'</a>,
--   <a>listConnectorDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListConnectorDefinitionVersionsResponse :: Int -> ListConnectorDefinitionVersionsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listConnectorDefinitionVersionsResponse_nextToken :: Lens' ListConnectorDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listConnectorDefinitionVersionsResponse_versions :: Lens' ListConnectorDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listConnectorDefinitionVersionsResponse_httpStatus :: Lens' ListConnectorDefinitionVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance GHC.Show.Show Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance GHC.Read.Read Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance GHC.Classes.Eq Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance GHC.Generics.Generic Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersionsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersionsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersionsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListConnectorDefinitionVersions.ListConnectorDefinitionVersions


-- | Returns a list of bulk deployments.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListBulkDeployments

-- | <i>See:</i> <a>newListBulkDeployments</a> smart constructor.
data ListBulkDeployments
ListBulkDeployments' :: Maybe Text -> Maybe Text -> ListBulkDeployments

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListBulkDeployments'] :: ListBulkDeployments -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListBulkDeployments'] :: ListBulkDeployments -> Maybe Text

-- | Create a value of <a>ListBulkDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBulkDeployments'</a>,
--   <a>listBulkDeployments_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListBulkDeployments'</a>,
--   <a>listBulkDeployments_maxResults</a> - The maximum number of results
--   to be returned per request.
newListBulkDeployments :: ListBulkDeployments

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listBulkDeployments_nextToken :: Lens' ListBulkDeployments (Maybe Text)

-- | The maximum number of results to be returned per request.
listBulkDeployments_maxResults :: Lens' ListBulkDeployments (Maybe Text)

-- | <i>See:</i> <a>newListBulkDeploymentsResponse</a> smart constructor.
data ListBulkDeploymentsResponse
ListBulkDeploymentsResponse' :: Maybe Text -> Maybe [BulkDeployment] -> Int -> ListBulkDeploymentsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListBulkDeploymentsResponse'] :: ListBulkDeploymentsResponse -> Maybe Text

-- | A list of bulk deployments.
[$sel:bulkDeployments:ListBulkDeploymentsResponse'] :: ListBulkDeploymentsResponse -> Maybe [BulkDeployment]

-- | The response's http status code.
[$sel:httpStatus:ListBulkDeploymentsResponse'] :: ListBulkDeploymentsResponse -> Int

-- | Create a value of <a>ListBulkDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBulkDeployments'</a>,
--   <a>listBulkDeploymentsResponse_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:bulkDeployments:ListBulkDeploymentsResponse'</a>,
--   <a>listBulkDeploymentsResponse_bulkDeployments</a> - A list of bulk
--   deployments.
--   
--   <a>$sel:httpStatus:ListBulkDeploymentsResponse'</a>,
--   <a>listBulkDeploymentsResponse_httpStatus</a> - The response's http
--   status code.
newListBulkDeploymentsResponse :: Int -> ListBulkDeploymentsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listBulkDeploymentsResponse_nextToken :: Lens' ListBulkDeploymentsResponse (Maybe Text)

-- | A list of bulk deployments.
listBulkDeploymentsResponse_bulkDeployments :: Lens' ListBulkDeploymentsResponse (Maybe [BulkDeployment])

-- | The response's http status code.
listBulkDeploymentsResponse_httpStatus :: Lens' ListBulkDeploymentsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance GHC.Show.Show Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance GHC.Read.Read Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance GHC.Classes.Eq Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance GHC.Generics.Generic Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeploymentsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeploymentsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeploymentsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeploymentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeploymentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListBulkDeployments.ListBulkDeployments


-- | Gets a paginated list of the deployments that have been started in a
--   bulk deployment operation, and their current deployment status.
--   
--   This operation returns paginated results.
module Network.AWS.Greengrass.ListBulkDeploymentDetailedReports

-- | <i>See:</i> <a>newListBulkDeploymentDetailedReports</a> smart
--   constructor.
data ListBulkDeploymentDetailedReports
ListBulkDeploymentDetailedReports' :: Maybe Text -> Maybe Text -> Text -> ListBulkDeploymentDetailedReports

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListBulkDeploymentDetailedReports'] :: ListBulkDeploymentDetailedReports -> Maybe Text

-- | The maximum number of results to be returned per request.
[$sel:maxResults:ListBulkDeploymentDetailedReports'] :: ListBulkDeploymentDetailedReports -> Maybe Text

-- | The ID of the bulk deployment.
[$sel:bulkDeploymentId:ListBulkDeploymentDetailedReports'] :: ListBulkDeploymentDetailedReports -> Text

-- | Create a value of <a>ListBulkDeploymentDetailedReports</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBulkDeploymentDetailedReports'</a>,
--   <a>listBulkDeploymentDetailedReports_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListBulkDeploymentDetailedReports'</a>,
--   <a>listBulkDeploymentDetailedReports_maxResults</a> - The maximum
--   number of results to be returned per request.
--   
--   <a>$sel:bulkDeploymentId:ListBulkDeploymentDetailedReports'</a>,
--   <a>listBulkDeploymentDetailedReports_bulkDeploymentId</a> - The ID of
--   the bulk deployment.
newListBulkDeploymentDetailedReports :: Text -> ListBulkDeploymentDetailedReports

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listBulkDeploymentDetailedReports_nextToken :: Lens' ListBulkDeploymentDetailedReports (Maybe Text)

-- | The maximum number of results to be returned per request.
listBulkDeploymentDetailedReports_maxResults :: Lens' ListBulkDeploymentDetailedReports (Maybe Text)

-- | The ID of the bulk deployment.
listBulkDeploymentDetailedReports_bulkDeploymentId :: Lens' ListBulkDeploymentDetailedReports Text

-- | <i>See:</i> <a>newListBulkDeploymentDetailedReportsResponse</a> smart
--   constructor.
data ListBulkDeploymentDetailedReportsResponse
ListBulkDeploymentDetailedReportsResponse' :: Maybe Text -> Maybe [BulkDeploymentResult] -> Int -> ListBulkDeploymentDetailedReportsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:ListBulkDeploymentDetailedReportsResponse'] :: ListBulkDeploymentDetailedReportsResponse -> Maybe Text

-- | A list of the individual group deployments in the bulk deployment
--   operation.
[$sel:deployments:ListBulkDeploymentDetailedReportsResponse'] :: ListBulkDeploymentDetailedReportsResponse -> Maybe [BulkDeploymentResult]

-- | The response's http status code.
[$sel:httpStatus:ListBulkDeploymentDetailedReportsResponse'] :: ListBulkDeploymentDetailedReportsResponse -> Int

-- | Create a value of <a>ListBulkDeploymentDetailedReportsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBulkDeploymentDetailedReports'</a>,
--   <a>listBulkDeploymentDetailedReportsResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:deployments:ListBulkDeploymentDetailedReportsResponse'</a>,
--   <a>listBulkDeploymentDetailedReportsResponse_deployments</a> - A list
--   of the individual group deployments in the bulk deployment operation.
--   
--   <a>$sel:httpStatus:ListBulkDeploymentDetailedReportsResponse'</a>,
--   <a>listBulkDeploymentDetailedReportsResponse_httpStatus</a> - The
--   response's http status code.
newListBulkDeploymentDetailedReportsResponse :: Int -> ListBulkDeploymentDetailedReportsResponse

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listBulkDeploymentDetailedReportsResponse_nextToken :: Lens' ListBulkDeploymentDetailedReportsResponse (Maybe Text)

-- | A list of the individual group deployments in the bulk deployment
--   operation.
listBulkDeploymentDetailedReportsResponse_deployments :: Lens' ListBulkDeploymentDetailedReportsResponse (Maybe [BulkDeploymentResult])

-- | The response's http status code.
listBulkDeploymentDetailedReportsResponse_httpStatus :: Lens' ListBulkDeploymentDetailedReportsResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance GHC.Show.Show Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance GHC.Read.Read Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance GHC.Classes.Eq Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance GHC.Generics.Generic Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReportsResponse
instance GHC.Show.Show Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReportsResponse
instance GHC.Read.Read Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReportsResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReportsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReportsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance Control.DeepSeq.NFData Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.ListBulkDeploymentDetailedReports.ListBulkDeploymentDetailedReports


-- | Get the runtime configuration of a thing.
module Network.AWS.Greengrass.GetThingRuntimeConfiguration

-- | <i>See:</i> <a>newGetThingRuntimeConfiguration</a> smart constructor.
data GetThingRuntimeConfiguration
GetThingRuntimeConfiguration' :: Text -> GetThingRuntimeConfiguration

-- | The thing name.
[$sel:thingName:GetThingRuntimeConfiguration'] :: GetThingRuntimeConfiguration -> Text

-- | Create a value of <a>GetThingRuntimeConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thingName:GetThingRuntimeConfiguration'</a>,
--   <a>getThingRuntimeConfiguration_thingName</a> - The thing name.
newGetThingRuntimeConfiguration :: Text -> GetThingRuntimeConfiguration

-- | The thing name.
getThingRuntimeConfiguration_thingName :: Lens' GetThingRuntimeConfiguration Text

-- | <i>See:</i> <a>newGetThingRuntimeConfigurationResponse</a> smart
--   constructor.
data GetThingRuntimeConfigurationResponse
GetThingRuntimeConfigurationResponse' :: Maybe RuntimeConfiguration -> Int -> GetThingRuntimeConfigurationResponse

-- | Runtime configuration for a thing.
[$sel:runtimeConfiguration:GetThingRuntimeConfigurationResponse'] :: GetThingRuntimeConfigurationResponse -> Maybe RuntimeConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetThingRuntimeConfigurationResponse'] :: GetThingRuntimeConfigurationResponse -> Int

-- | Create a value of <a>GetThingRuntimeConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:runtimeConfiguration:GetThingRuntimeConfigurationResponse'</a>,
--   <a>getThingRuntimeConfigurationResponse_runtimeConfiguration</a> -
--   Runtime configuration for a thing.
--   
--   <a>$sel:httpStatus:GetThingRuntimeConfigurationResponse'</a>,
--   <a>getThingRuntimeConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newGetThingRuntimeConfigurationResponse :: Int -> GetThingRuntimeConfigurationResponse

-- | Runtime configuration for a thing.
getThingRuntimeConfigurationResponse_runtimeConfiguration :: Lens' GetThingRuntimeConfigurationResponse (Maybe RuntimeConfiguration)

-- | The response's http status code.
getThingRuntimeConfigurationResponse_httpStatus :: Lens' GetThingRuntimeConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance GHC.Show.Show Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance GHC.Read.Read Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance GHC.Classes.Eq Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance GHC.Generics.Generic Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfigurationResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfigurationResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetThingRuntimeConfiguration.GetThingRuntimeConfiguration


-- | Retrieves information about a subscription definition version.
module Network.AWS.Greengrass.GetSubscriptionDefinitionVersion

-- | <i>See:</i> <a>newGetSubscriptionDefinitionVersion</a> smart
--   constructor.
data GetSubscriptionDefinitionVersion
GetSubscriptionDefinitionVersion' :: Maybe Text -> Text -> Text -> GetSubscriptionDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetSubscriptionDefinitionVersion'] :: GetSubscriptionDefinitionVersion -> Maybe Text

-- | The ID of the subscription definition.
[$sel:subscriptionDefinitionId:GetSubscriptionDefinitionVersion'] :: GetSubscriptionDefinitionVersion -> Text

-- | The ID of the subscription definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListSubscriptionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   subscription definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
[$sel:subscriptionDefinitionVersionId:GetSubscriptionDefinitionVersion'] :: GetSubscriptionDefinitionVersion -> Text

-- | Create a value of <a>GetSubscriptionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSubscriptionDefinitionVersion'</a>,
--   <a>getSubscriptionDefinitionVersion_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   
--   <a>$sel:subscriptionDefinitionId:GetSubscriptionDefinitionVersion'</a>,
--   <a>getSubscriptionDefinitionVersion_subscriptionDefinitionId</a> - The
--   ID of the subscription definition.
--   
--   
--   <a>$sel:subscriptionDefinitionVersionId:GetSubscriptionDefinitionVersion'</a>,
--   <a>getSubscriptionDefinitionVersion_subscriptionDefinitionVersionId</a>
--   - The ID of the subscription definition version. This value maps to
--   the ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListSubscriptionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   subscription definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
newGetSubscriptionDefinitionVersion :: Text -> Text -> GetSubscriptionDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getSubscriptionDefinitionVersion_nextToken :: Lens' GetSubscriptionDefinitionVersion (Maybe Text)

-- | The ID of the subscription definition.
getSubscriptionDefinitionVersion_subscriptionDefinitionId :: Lens' GetSubscriptionDefinitionVersion Text

-- | The ID of the subscription definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListSubscriptionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   subscription definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getSubscriptionDefinitionVersion_subscriptionDefinitionVersionId :: Lens' GetSubscriptionDefinitionVersion Text

-- | <i>See:</i> <a>newGetSubscriptionDefinitionVersionResponse</a> smart
--   constructor.
data GetSubscriptionDefinitionVersionResponse
GetSubscriptionDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SubscriptionDefinitionVersion -> Int -> GetSubscriptionDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the subscription
--   definition version was created.
[$sel:creationTimestamp:GetSubscriptionDefinitionVersionResponse'] :: GetSubscriptionDefinitionVersionResponse -> Maybe Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetSubscriptionDefinitionVersionResponse'] :: GetSubscriptionDefinitionVersionResponse -> Maybe Text

-- | The ARN of the subscription definition version.
[$sel:arn:GetSubscriptionDefinitionVersionResponse'] :: GetSubscriptionDefinitionVersionResponse -> Maybe Text

-- | The ID of the subscription definition version.
[$sel:id:GetSubscriptionDefinitionVersionResponse'] :: GetSubscriptionDefinitionVersionResponse -> Maybe Text

-- | The version of the subscription definition version.
[$sel:version:GetSubscriptionDefinitionVersionResponse'] :: GetSubscriptionDefinitionVersionResponse -> Maybe Text

-- | Information about the subscription definition version.
[$sel:definition:GetSubscriptionDefinitionVersionResponse'] :: GetSubscriptionDefinitionVersionResponse -> Maybe SubscriptionDefinitionVersion

-- | The response's http status code.
[$sel:httpStatus:GetSubscriptionDefinitionVersionResponse'] :: GetSubscriptionDefinitionVersionResponse -> Int

-- | Create a value of <a>GetSubscriptionDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_creationTimestamp</a> -
--   The time, in milliseconds since the epoch, when the subscription
--   definition version was created.
--   
--   <a>$sel:nextToken:GetSubscriptionDefinitionVersion'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:arn:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_arn</a> - The ARN of the
--   subscription definition version.
--   
--   <a>$sel:id:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_id</a> - The ID of the
--   subscription definition version.
--   
--   <a>$sel:version:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_version</a> - The version
--   of the subscription definition version.
--   
--   <a>$sel:definition:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_definition</a> -
--   Information about the subscription definition version.
--   
--   <a>$sel:httpStatus:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newGetSubscriptionDefinitionVersionResponse :: Int -> GetSubscriptionDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the subscription
--   definition version was created.
getSubscriptionDefinitionVersionResponse_creationTimestamp :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getSubscriptionDefinitionVersionResponse_nextToken :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ARN of the subscription definition version.
getSubscriptionDefinitionVersionResponse_arn :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ID of the subscription definition version.
getSubscriptionDefinitionVersionResponse_id :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The version of the subscription definition version.
getSubscriptionDefinitionVersionResponse_version :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | Information about the subscription definition version.
getSubscriptionDefinitionVersionResponse_definition :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe SubscriptionDefinitionVersion)

-- | The response's http status code.
getSubscriptionDefinitionVersionResponse_httpStatus :: Lens' GetSubscriptionDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetSubscriptionDefinitionVersion.GetSubscriptionDefinitionVersion


-- | Retrieves information about a subscription definition.
module Network.AWS.Greengrass.GetSubscriptionDefinition

-- | <i>See:</i> <a>newGetSubscriptionDefinition</a> smart constructor.
data GetSubscriptionDefinition
GetSubscriptionDefinition' :: Text -> GetSubscriptionDefinition

-- | The ID of the subscription definition.
[$sel:subscriptionDefinitionId:GetSubscriptionDefinition'] :: GetSubscriptionDefinition -> Text

-- | Create a value of <a>GetSubscriptionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionId:GetSubscriptionDefinition'</a>,
--   <a>getSubscriptionDefinition_subscriptionDefinitionId</a> - The ID of
--   the subscription definition.
newGetSubscriptionDefinition :: Text -> GetSubscriptionDefinition

-- | The ID of the subscription definition.
getSubscriptionDefinition_subscriptionDefinitionId :: Lens' GetSubscriptionDefinition Text

-- | <i>See:</i> <a>newGetSubscriptionDefinitionResponse</a> smart
--   constructor.
data GetSubscriptionDefinitionResponse
GetSubscriptionDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetSubscriptionDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSubscriptionDefinitionResponse'] :: GetSubscriptionDefinitionResponse -> Int

-- | Create a value of <a>GetSubscriptionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_id</a> - The ID of the
--   definition.
--   
--   <a>$sel:name:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:tags:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newGetSubscriptionDefinitionResponse :: Int -> GetSubscriptionDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getSubscriptionDefinitionResponse_creationTimestamp :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getSubscriptionDefinitionResponse_latestVersionArn :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getSubscriptionDefinitionResponse_latestVersion :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getSubscriptionDefinitionResponse_arn :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getSubscriptionDefinitionResponse_id :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The name of the definition.
getSubscriptionDefinitionResponse_name :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getSubscriptionDefinitionResponse_tags :: Lens' GetSubscriptionDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getSubscriptionDefinitionResponse_lastUpdatedTimestamp :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The response's http status code.
getSubscriptionDefinitionResponse_httpStatus :: Lens' GetSubscriptionDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance GHC.Show.Show Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance GHC.Read.Read Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetSubscriptionDefinition.GetSubscriptionDefinition


-- | Retrieves the service role that is attached to your account.
module Network.AWS.Greengrass.GetServiceRoleForAccount

-- | <i>See:</i> <a>newGetServiceRoleForAccount</a> smart constructor.
data GetServiceRoleForAccount
GetServiceRoleForAccount' :: GetServiceRoleForAccount

-- | Create a value of <a>GetServiceRoleForAccount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetServiceRoleForAccount :: GetServiceRoleForAccount

-- | <i>See:</i> <a>newGetServiceRoleForAccountResponse</a> smart
--   constructor.
data GetServiceRoleForAccountResponse
GetServiceRoleForAccountResponse' :: Maybe Text -> Maybe Text -> Int -> GetServiceRoleForAccountResponse

-- | The ARN of the role which is associated with the account.
[$sel:roleArn:GetServiceRoleForAccountResponse'] :: GetServiceRoleForAccountResponse -> Maybe Text

-- | The time when the service role was associated with the account.
[$sel:associatedAt:GetServiceRoleForAccountResponse'] :: GetServiceRoleForAccountResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetServiceRoleForAccountResponse'] :: GetServiceRoleForAccountResponse -> Int

-- | Create a value of <a>GetServiceRoleForAccountResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:GetServiceRoleForAccountResponse'</a>,
--   <a>getServiceRoleForAccountResponse_roleArn</a> - The ARN of the role
--   which is associated with the account.
--   
--   <a>$sel:associatedAt:GetServiceRoleForAccountResponse'</a>,
--   <a>getServiceRoleForAccountResponse_associatedAt</a> - The time when
--   the service role was associated with the account.
--   
--   <a>$sel:httpStatus:GetServiceRoleForAccountResponse'</a>,
--   <a>getServiceRoleForAccountResponse_httpStatus</a> - The response's
--   http status code.
newGetServiceRoleForAccountResponse :: Int -> GetServiceRoleForAccountResponse

-- | The ARN of the role which is associated with the account.
getServiceRoleForAccountResponse_roleArn :: Lens' GetServiceRoleForAccountResponse (Maybe Text)

-- | The time when the service role was associated with the account.
getServiceRoleForAccountResponse_associatedAt :: Lens' GetServiceRoleForAccountResponse (Maybe Text)

-- | The response's http status code.
getServiceRoleForAccountResponse_httpStatus :: Lens' GetServiceRoleForAccountResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance GHC.Show.Show Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance GHC.Read.Read Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance GHC.Classes.Eq Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance GHC.Generics.Generic Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccountResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccountResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccountResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccountResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccountResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetServiceRoleForAccount.GetServiceRoleForAccount


-- | Retrieves information about a resource definition version, including
--   which resources are included in the version.
module Network.AWS.Greengrass.GetResourceDefinitionVersion

-- | <i>See:</i> <a>newGetResourceDefinitionVersion</a> smart constructor.
data GetResourceDefinitionVersion
GetResourceDefinitionVersion' :: Text -> Text -> GetResourceDefinitionVersion

-- | The ID of the resource definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListResourceDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   resource definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
[$sel:resourceDefinitionVersionId:GetResourceDefinitionVersion'] :: GetResourceDefinitionVersion -> Text

-- | The ID of the resource definition.
[$sel:resourceDefinitionId:GetResourceDefinitionVersion'] :: GetResourceDefinitionVersion -> Text

-- | Create a value of <a>GetResourceDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDefinitionVersionId:GetResourceDefinitionVersion'</a>,
--   <a>getResourceDefinitionVersion_resourceDefinitionVersionId</a> - The
--   ID of the resource definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListResourceDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   resource definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
--   
--   <a>$sel:resourceDefinitionId:GetResourceDefinitionVersion'</a>,
--   <a>getResourceDefinitionVersion_resourceDefinitionId</a> - The ID of
--   the resource definition.
newGetResourceDefinitionVersion :: Text -> Text -> GetResourceDefinitionVersion

-- | The ID of the resource definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListResourceDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   resource definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getResourceDefinitionVersion_resourceDefinitionVersionId :: Lens' GetResourceDefinitionVersion Text

-- | The ID of the resource definition.
getResourceDefinitionVersion_resourceDefinitionId :: Lens' GetResourceDefinitionVersion Text

-- | <i>See:</i> <a>newGetResourceDefinitionVersionResponse</a> smart
--   constructor.
data GetResourceDefinitionVersionResponse
GetResourceDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ResourceDefinitionVersion -> Int -> GetResourceDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the resource
--   definition version was created.
[$sel:creationTimestamp:GetResourceDefinitionVersionResponse'] :: GetResourceDefinitionVersionResponse -> Maybe Text

-- | Arn of the resource definition version.
[$sel:arn:GetResourceDefinitionVersionResponse'] :: GetResourceDefinitionVersionResponse -> Maybe Text

-- | The ID of the resource definition version.
[$sel:id:GetResourceDefinitionVersionResponse'] :: GetResourceDefinitionVersionResponse -> Maybe Text

-- | The version of the resource definition version.
[$sel:version:GetResourceDefinitionVersionResponse'] :: GetResourceDefinitionVersionResponse -> Maybe Text

-- | Information about the definition.
[$sel:definition:GetResourceDefinitionVersionResponse'] :: GetResourceDefinitionVersionResponse -> Maybe ResourceDefinitionVersion

-- | The response's http status code.
[$sel:httpStatus:GetResourceDefinitionVersionResponse'] :: GetResourceDefinitionVersionResponse -> Int

-- | Create a value of <a>GetResourceDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the resource definition
--   version was created.
--   
--   <a>$sel:arn:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_arn</a> - Arn of the resource
--   definition version.
--   
--   <a>$sel:id:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_id</a> - The ID of the
--   resource definition version.
--   
--   <a>$sel:version:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_version</a> - The version of
--   the resource definition version.
--   
--   <a>$sel:definition:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_definition</a> - Information
--   about the definition.
--   
--   <a>$sel:httpStatus:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newGetResourceDefinitionVersionResponse :: Int -> GetResourceDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the resource
--   definition version was created.
getResourceDefinitionVersionResponse_creationTimestamp :: Lens' GetResourceDefinitionVersionResponse (Maybe Text)

-- | Arn of the resource definition version.
getResourceDefinitionVersionResponse_arn :: Lens' GetResourceDefinitionVersionResponse (Maybe Text)

-- | The ID of the resource definition version.
getResourceDefinitionVersionResponse_id :: Lens' GetResourceDefinitionVersionResponse (Maybe Text)

-- | The version of the resource definition version.
getResourceDefinitionVersionResponse_version :: Lens' GetResourceDefinitionVersionResponse (Maybe Text)

-- | Information about the definition.
getResourceDefinitionVersionResponse_definition :: Lens' GetResourceDefinitionVersionResponse (Maybe ResourceDefinitionVersion)

-- | The response's http status code.
getResourceDefinitionVersionResponse_httpStatus :: Lens' GetResourceDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetResourceDefinitionVersion.GetResourceDefinitionVersion


-- | Retrieves information about a resource definition, including its
--   creation time and latest version.
module Network.AWS.Greengrass.GetResourceDefinition

-- | <i>See:</i> <a>newGetResourceDefinition</a> smart constructor.
data GetResourceDefinition
GetResourceDefinition' :: Text -> GetResourceDefinition

-- | The ID of the resource definition.
[$sel:resourceDefinitionId:GetResourceDefinition'] :: GetResourceDefinition -> Text

-- | Create a value of <a>GetResourceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDefinitionId:GetResourceDefinition'</a>,
--   <a>getResourceDefinition_resourceDefinitionId</a> - The ID of the
--   resource definition.
newGetResourceDefinition :: Text -> GetResourceDefinition

-- | The ID of the resource definition.
getResourceDefinition_resourceDefinitionId :: Lens' GetResourceDefinition Text

-- | <i>See:</i> <a>newGetResourceDefinitionResponse</a> smart constructor.
data GetResourceDefinitionResponse
GetResourceDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetResourceDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetResourceDefinitionResponse'] :: GetResourceDefinitionResponse -> Int

-- | Create a value of <a>GetResourceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:tags:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetResourceDefinitionResponse :: Int -> GetResourceDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getResourceDefinitionResponse_creationTimestamp :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getResourceDefinitionResponse_latestVersionArn :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getResourceDefinitionResponse_latestVersion :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getResourceDefinitionResponse_arn :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getResourceDefinitionResponse_id :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The name of the definition.
getResourceDefinitionResponse_name :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getResourceDefinitionResponse_tags :: Lens' GetResourceDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getResourceDefinitionResponse_lastUpdatedTimestamp :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The response's http status code.
getResourceDefinitionResponse_httpStatus :: Lens' GetResourceDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance GHC.Show.Show Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance GHC.Read.Read Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetResourceDefinition.GetResourceDefinition


-- | Retrieves information about a logger definition version.
module Network.AWS.Greengrass.GetLoggerDefinitionVersion

-- | <i>See:</i> <a>newGetLoggerDefinitionVersion</a> smart constructor.
data GetLoggerDefinitionVersion
GetLoggerDefinitionVersion' :: Maybe Text -> Text -> Text -> GetLoggerDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetLoggerDefinitionVersion'] :: GetLoggerDefinitionVersion -> Maybe Text

-- | The ID of the logger definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListLoggerDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   logger definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
[$sel:loggerDefinitionVersionId:GetLoggerDefinitionVersion'] :: GetLoggerDefinitionVersion -> Text

-- | The ID of the logger definition.
[$sel:loggerDefinitionId:GetLoggerDefinitionVersion'] :: GetLoggerDefinitionVersion -> Text

-- | Create a value of <a>GetLoggerDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetLoggerDefinitionVersion'</a>,
--   <a>getLoggerDefinitionVersion_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:loggerDefinitionVersionId:GetLoggerDefinitionVersion'</a>,
--   <a>getLoggerDefinitionVersion_loggerDefinitionVersionId</a> - The ID
--   of the logger definition version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListLoggerDefinitionVersions'' requests. If the version
--   is the last one that was associated with a logger definition, the
--   value also maps to the ''LatestVersion'' property of the corresponding
--   ''DefinitionInformation'' object.
--   
--   <a>$sel:loggerDefinitionId:GetLoggerDefinitionVersion'</a>,
--   <a>getLoggerDefinitionVersion_loggerDefinitionId</a> - The ID of the
--   logger definition.
newGetLoggerDefinitionVersion :: Text -> Text -> GetLoggerDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getLoggerDefinitionVersion_nextToken :: Lens' GetLoggerDefinitionVersion (Maybe Text)

-- | The ID of the logger definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListLoggerDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   logger definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getLoggerDefinitionVersion_loggerDefinitionVersionId :: Lens' GetLoggerDefinitionVersion Text

-- | The ID of the logger definition.
getLoggerDefinitionVersion_loggerDefinitionId :: Lens' GetLoggerDefinitionVersion Text

-- | <i>See:</i> <a>newGetLoggerDefinitionVersionResponse</a> smart
--   constructor.
data GetLoggerDefinitionVersionResponse
GetLoggerDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LoggerDefinitionVersion -> Int -> GetLoggerDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the logger definition
--   version was created.
[$sel:creationTimestamp:GetLoggerDefinitionVersionResponse'] :: GetLoggerDefinitionVersionResponse -> Maybe Text

-- | The ARN of the logger definition version.
[$sel:arn:GetLoggerDefinitionVersionResponse'] :: GetLoggerDefinitionVersionResponse -> Maybe Text

-- | The ID of the logger definition version.
[$sel:id:GetLoggerDefinitionVersionResponse'] :: GetLoggerDefinitionVersionResponse -> Maybe Text

-- | The version of the logger definition version.
[$sel:version:GetLoggerDefinitionVersionResponse'] :: GetLoggerDefinitionVersionResponse -> Maybe Text

-- | Information about the logger definition version.
[$sel:definition:GetLoggerDefinitionVersionResponse'] :: GetLoggerDefinitionVersionResponse -> Maybe LoggerDefinitionVersion

-- | The response's http status code.
[$sel:httpStatus:GetLoggerDefinitionVersionResponse'] :: GetLoggerDefinitionVersionResponse -> Int

-- | Create a value of <a>GetLoggerDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the logger definition
--   version was created.
--   
--   <a>$sel:arn:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_arn</a> - The ARN of the logger
--   definition version.
--   
--   <a>$sel:id:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_id</a> - The ID of the logger
--   definition version.
--   
--   <a>$sel:version:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_version</a> - The version of the
--   logger definition version.
--   
--   <a>$sel:definition:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_definition</a> - Information
--   about the logger definition version.
--   
--   <a>$sel:httpStatus:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_httpStatus</a> - The response's
--   http status code.
newGetLoggerDefinitionVersionResponse :: Int -> GetLoggerDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the logger definition
--   version was created.
getLoggerDefinitionVersionResponse_creationTimestamp :: Lens' GetLoggerDefinitionVersionResponse (Maybe Text)

-- | The ARN of the logger definition version.
getLoggerDefinitionVersionResponse_arn :: Lens' GetLoggerDefinitionVersionResponse (Maybe Text)

-- | The ID of the logger definition version.
getLoggerDefinitionVersionResponse_id :: Lens' GetLoggerDefinitionVersionResponse (Maybe Text)

-- | The version of the logger definition version.
getLoggerDefinitionVersionResponse_version :: Lens' GetLoggerDefinitionVersionResponse (Maybe Text)

-- | Information about the logger definition version.
getLoggerDefinitionVersionResponse_definition :: Lens' GetLoggerDefinitionVersionResponse (Maybe LoggerDefinitionVersion)

-- | The response's http status code.
getLoggerDefinitionVersionResponse_httpStatus :: Lens' GetLoggerDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetLoggerDefinitionVersion.GetLoggerDefinitionVersion


-- | Retrieves information about a logger definition.
module Network.AWS.Greengrass.GetLoggerDefinition

-- | <i>See:</i> <a>newGetLoggerDefinition</a> smart constructor.
data GetLoggerDefinition
GetLoggerDefinition' :: Text -> GetLoggerDefinition

-- | The ID of the logger definition.
[$sel:loggerDefinitionId:GetLoggerDefinition'] :: GetLoggerDefinition -> Text

-- | Create a value of <a>GetLoggerDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggerDefinitionId:GetLoggerDefinition'</a>,
--   <a>getLoggerDefinition_loggerDefinitionId</a> - The ID of the logger
--   definition.
newGetLoggerDefinition :: Text -> GetLoggerDefinition

-- | The ID of the logger definition.
getLoggerDefinition_loggerDefinitionId :: Lens' GetLoggerDefinition Text

-- | <i>See:</i> <a>newGetLoggerDefinitionResponse</a> smart constructor.
data GetLoggerDefinitionResponse
GetLoggerDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetLoggerDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetLoggerDefinitionResponse'] :: GetLoggerDefinitionResponse -> Int

-- | Create a value of <a>GetLoggerDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_name</a> - The name of the definition.
--   
--   <a>$sel:tags:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetLoggerDefinitionResponse :: Int -> GetLoggerDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getLoggerDefinitionResponse_creationTimestamp :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getLoggerDefinitionResponse_latestVersionArn :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getLoggerDefinitionResponse_latestVersion :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getLoggerDefinitionResponse_arn :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getLoggerDefinitionResponse_id :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The name of the definition.
getLoggerDefinitionResponse_name :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getLoggerDefinitionResponse_tags :: Lens' GetLoggerDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getLoggerDefinitionResponse_lastUpdatedTimestamp :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The response's http status code.
getLoggerDefinitionResponse_httpStatus :: Lens' GetLoggerDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance GHC.Show.Show Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance GHC.Read.Read Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetLoggerDefinition.GetLoggerDefinition


-- | Retrieves information about a group version.
module Network.AWS.Greengrass.GetGroupVersion

-- | <i>See:</i> <a>newGetGroupVersion</a> smart constructor.
data GetGroupVersion
GetGroupVersion' :: Text -> Text -> GetGroupVersion

-- | The ID of the group version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListGroupVersions'' requests. If the version is the last
--   one that was associated with a group, the value also maps to the
--   ''LatestVersion'' property of the corresponding ''GroupInformation''
--   object.
[$sel:groupVersionId:GetGroupVersion'] :: GetGroupVersion -> Text

-- | The ID of the Greengrass group.
[$sel:groupId:GetGroupVersion'] :: GetGroupVersion -> Text

-- | Create a value of <a>GetGroupVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupVersionId:GetGroupVersion'</a>,
--   <a>getGroupVersion_groupVersionId</a> - The ID of the group version.
--   This value maps to the ''Version'' property of the corresponding
--   ''VersionInformation'' object, which is returned by
--   ''ListGroupVersions'' requests. If the version is the last one that
--   was associated with a group, the value also maps to the
--   ''LatestVersion'' property of the corresponding ''GroupInformation''
--   object.
--   
--   <a>$sel:groupId:GetGroupVersion'</a>, <a>getGroupVersion_groupId</a> -
--   The ID of the Greengrass group.
newGetGroupVersion :: Text -> Text -> GetGroupVersion

-- | The ID of the group version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListGroupVersions'' requests. If the version is the last
--   one that was associated with a group, the value also maps to the
--   ''LatestVersion'' property of the corresponding ''GroupInformation''
--   object.
getGroupVersion_groupVersionId :: Lens' GetGroupVersion Text

-- | The ID of the Greengrass group.
getGroupVersion_groupId :: Lens' GetGroupVersion Text

-- | <i>See:</i> <a>newGetGroupVersionResponse</a> smart constructor.
data GetGroupVersionResponse
GetGroupVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe GroupVersion -> Int -> GetGroupVersionResponse

-- | The time, in milliseconds since the epoch, when the group version was
--   created.
[$sel:creationTimestamp:GetGroupVersionResponse'] :: GetGroupVersionResponse -> Maybe Text

-- | The ARN of the group version.
[$sel:arn:GetGroupVersionResponse'] :: GetGroupVersionResponse -> Maybe Text

-- | The ID of the group that the version is associated with.
[$sel:id:GetGroupVersionResponse'] :: GetGroupVersionResponse -> Maybe Text

-- | The ID of the group version.
[$sel:version:GetGroupVersionResponse'] :: GetGroupVersionResponse -> Maybe Text

-- | Information about the group version definition.
[$sel:definition:GetGroupVersionResponse'] :: GetGroupVersionResponse -> Maybe GroupVersion

-- | The response's http status code.
[$sel:httpStatus:GetGroupVersionResponse'] :: GetGroupVersionResponse -> Int

-- | Create a value of <a>GetGroupVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the group version was created.
--   
--   <a>$sel:arn:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_arn</a> - The ARN of the group version.
--   
--   <a>$sel:id:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_id</a> - The ID of the group that the
--   version is associated with.
--   
--   <a>$sel:version:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_version</a> - The ID of the group version.
--   
--   <a>$sel:definition:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_definition</a> - Information about the
--   group version definition.
--   
--   <a>$sel:httpStatus:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_httpStatus</a> - The response's http status
--   code.
newGetGroupVersionResponse :: Int -> GetGroupVersionResponse

-- | The time, in milliseconds since the epoch, when the group version was
--   created.
getGroupVersionResponse_creationTimestamp :: Lens' GetGroupVersionResponse (Maybe Text)

-- | The ARN of the group version.
getGroupVersionResponse_arn :: Lens' GetGroupVersionResponse (Maybe Text)

-- | The ID of the group that the version is associated with.
getGroupVersionResponse_id :: Lens' GetGroupVersionResponse (Maybe Text)

-- | The ID of the group version.
getGroupVersionResponse_version :: Lens' GetGroupVersionResponse (Maybe Text)

-- | Information about the group version definition.
getGroupVersionResponse_definition :: Lens' GetGroupVersionResponse (Maybe GroupVersion)

-- | The response's http status code.
getGroupVersionResponse_httpStatus :: Lens' GetGroupVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance GHC.Show.Show Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance GHC.Read.Read Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.GetGroupVersion.GetGroupVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetGroupVersion.GetGroupVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetGroupVersion.GetGroupVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetGroupVersion.GetGroupVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetGroupVersion.GetGroupVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetGroupVersion.GetGroupVersion


-- | Retrieves the current configuration for the CA used by the group.
module Network.AWS.Greengrass.GetGroupCertificateConfiguration

-- | <i>See:</i> <a>newGetGroupCertificateConfiguration</a> smart
--   constructor.
data GetGroupCertificateConfiguration
GetGroupCertificateConfiguration' :: Text -> GetGroupCertificateConfiguration

-- | The ID of the Greengrass group.
[$sel:groupId:GetGroupCertificateConfiguration'] :: GetGroupCertificateConfiguration -> Text

-- | Create a value of <a>GetGroupCertificateConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:GetGroupCertificateConfiguration'</a>,
--   <a>getGroupCertificateConfiguration_groupId</a> - The ID of the
--   Greengrass group.
newGetGroupCertificateConfiguration :: Text -> GetGroupCertificateConfiguration

-- | The ID of the Greengrass group.
getGroupCertificateConfiguration_groupId :: Lens' GetGroupCertificateConfiguration Text

-- | <i>See:</i> <a>newGetGroupCertificateConfigurationResponse</a> smart
--   constructor.
data GetGroupCertificateConfigurationResponse
GetGroupCertificateConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetGroupCertificateConfigurationResponse

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
[$sel:certificateExpiryInMilliseconds:GetGroupCertificateConfigurationResponse'] :: GetGroupCertificateConfigurationResponse -> Maybe Text

-- | The ID of the group certificate configuration.
[$sel:groupId:GetGroupCertificateConfigurationResponse'] :: GetGroupCertificateConfigurationResponse -> Maybe Text

-- | The amount of time remaining before the certificate authority expires,
--   in milliseconds.
[$sel:certificateAuthorityExpiryInMilliseconds:GetGroupCertificateConfigurationResponse'] :: GetGroupCertificateConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetGroupCertificateConfigurationResponse'] :: GetGroupCertificateConfigurationResponse -> Int

-- | Create a value of <a>GetGroupCertificateConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateExpiryInMilliseconds:GetGroupCertificateConfigurationResponse'</a>,
--   <a>getGroupCertificateConfigurationResponse_certificateExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate expires, in
--   milliseconds.
--   
--   <a>$sel:groupId:GetGroupCertificateConfiguration'</a>,
--   <a>getGroupCertificateConfigurationResponse_groupId</a> - The ID of
--   the group certificate configuration.
--   
--   
--   <a>$sel:certificateAuthorityExpiryInMilliseconds:GetGroupCertificateConfigurationResponse'</a>,
--   <a>getGroupCertificateConfigurationResponse_certificateAuthorityExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate authority
--   expires, in milliseconds.
--   
--   <a>$sel:httpStatus:GetGroupCertificateConfigurationResponse'</a>,
--   <a>getGroupCertificateConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newGetGroupCertificateConfigurationResponse :: Int -> GetGroupCertificateConfigurationResponse

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
getGroupCertificateConfigurationResponse_certificateExpiryInMilliseconds :: Lens' GetGroupCertificateConfigurationResponse (Maybe Text)

-- | The ID of the group certificate configuration.
getGroupCertificateConfigurationResponse_groupId :: Lens' GetGroupCertificateConfigurationResponse (Maybe Text)

-- | The amount of time remaining before the certificate authority expires,
--   in milliseconds.
getGroupCertificateConfigurationResponse_certificateAuthorityExpiryInMilliseconds :: Lens' GetGroupCertificateConfigurationResponse (Maybe Text)

-- | The response's http status code.
getGroupCertificateConfigurationResponse_httpStatus :: Lens' GetGroupCertificateConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance GHC.Show.Show Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance GHC.Read.Read Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance GHC.Classes.Eq Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance GHC.Generics.Generic Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfigurationResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfigurationResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetGroupCertificateConfiguration.GetGroupCertificateConfiguration


-- | Retreives the CA associated with a group. Returns the public key of
--   the CA.
module Network.AWS.Greengrass.GetGroupCertificateAuthority

-- | <i>See:</i> <a>newGetGroupCertificateAuthority</a> smart constructor.
data GetGroupCertificateAuthority
GetGroupCertificateAuthority' :: Text -> Text -> GetGroupCertificateAuthority

-- | The ID of the certificate authority.
[$sel:certificateAuthorityId:GetGroupCertificateAuthority'] :: GetGroupCertificateAuthority -> Text

-- | The ID of the Greengrass group.
[$sel:groupId:GetGroupCertificateAuthority'] :: GetGroupCertificateAuthority -> Text

-- | Create a value of <a>GetGroupCertificateAuthority</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityId:GetGroupCertificateAuthority'</a>,
--   <a>getGroupCertificateAuthority_certificateAuthorityId</a> - The ID of
--   the certificate authority.
--   
--   <a>$sel:groupId:GetGroupCertificateAuthority'</a>,
--   <a>getGroupCertificateAuthority_groupId</a> - The ID of the Greengrass
--   group.
newGetGroupCertificateAuthority :: Text -> Text -> GetGroupCertificateAuthority

-- | The ID of the certificate authority.
getGroupCertificateAuthority_certificateAuthorityId :: Lens' GetGroupCertificateAuthority Text

-- | The ID of the Greengrass group.
getGroupCertificateAuthority_groupId :: Lens' GetGroupCertificateAuthority Text

-- | <i>See:</i> <a>newGetGroupCertificateAuthorityResponse</a> smart
--   constructor.
data GetGroupCertificateAuthorityResponse
GetGroupCertificateAuthorityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetGroupCertificateAuthorityResponse

-- | The ARN of the certificate authority for the group.
[$sel:groupCertificateAuthorityArn:GetGroupCertificateAuthorityResponse'] :: GetGroupCertificateAuthorityResponse -> Maybe Text

-- | The PEM encoded certificate for the group.
[$sel:pemEncodedCertificate:GetGroupCertificateAuthorityResponse'] :: GetGroupCertificateAuthorityResponse -> Maybe Text

-- | The ID of the certificate authority for the group.
[$sel:groupCertificateAuthorityId:GetGroupCertificateAuthorityResponse'] :: GetGroupCertificateAuthorityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetGroupCertificateAuthorityResponse'] :: GetGroupCertificateAuthorityResponse -> Int

-- | Create a value of <a>GetGroupCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorityArn:GetGroupCertificateAuthorityResponse'</a>,
--   <a>getGroupCertificateAuthorityResponse_groupCertificateAuthorityArn</a>
--   - The ARN of the certificate authority for the group.
--   
--   
--   <a>$sel:pemEncodedCertificate:GetGroupCertificateAuthorityResponse'</a>,
--   <a>getGroupCertificateAuthorityResponse_pemEncodedCertificate</a> -
--   The PEM encoded certificate for the group.
--   
--   
--   <a>$sel:groupCertificateAuthorityId:GetGroupCertificateAuthorityResponse'</a>,
--   <a>getGroupCertificateAuthorityResponse_groupCertificateAuthorityId</a>
--   - The ID of the certificate authority for the group.
--   
--   <a>$sel:httpStatus:GetGroupCertificateAuthorityResponse'</a>,
--   <a>getGroupCertificateAuthorityResponse_httpStatus</a> - The
--   response's http status code.
newGetGroupCertificateAuthorityResponse :: Int -> GetGroupCertificateAuthorityResponse

-- | The ARN of the certificate authority for the group.
getGroupCertificateAuthorityResponse_groupCertificateAuthorityArn :: Lens' GetGroupCertificateAuthorityResponse (Maybe Text)

-- | The PEM encoded certificate for the group.
getGroupCertificateAuthorityResponse_pemEncodedCertificate :: Lens' GetGroupCertificateAuthorityResponse (Maybe Text)

-- | The ID of the certificate authority for the group.
getGroupCertificateAuthorityResponse_groupCertificateAuthorityId :: Lens' GetGroupCertificateAuthorityResponse (Maybe Text)

-- | The response's http status code.
getGroupCertificateAuthorityResponse_httpStatus :: Lens' GetGroupCertificateAuthorityResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance GHC.Show.Show Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance GHC.Read.Read Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance GHC.Classes.Eq Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance GHC.Generics.Generic Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetGroupCertificateAuthority.GetGroupCertificateAuthority


-- | Retrieves information about a group.
module Network.AWS.Greengrass.GetGroup

-- | <i>See:</i> <a>newGetGroup</a> smart constructor.
data GetGroup
GetGroup' :: Text -> GetGroup

-- | The ID of the Greengrass group.
[$sel:groupId:GetGroup'] :: GetGroup -> Text

-- | Create a value of <a>GetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:GetGroup'</a>, <a>getGroup_groupId</a> - The ID of the
--   Greengrass group.
newGetGroup :: Text -> GetGroup

-- | The ID of the Greengrass group.
getGroup_groupId :: Lens' GetGroup Text

-- | <i>See:</i> <a>newGetGroupResponse</a> smart constructor.
data GetGroupResponse
GetGroupResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetGroupResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:GetGroupResponse'] :: GetGroupResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:GetGroupResponse'] :: GetGroupResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:GetGroupResponse'] :: GetGroupResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:GetGroupResponse'] :: GetGroupResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:GetGroupResponse'] :: GetGroupResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:GetGroupResponse'] :: GetGroupResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetGroupResponse'] :: GetGroupResponse -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:GetGroupResponse'] :: GetGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetGroupResponse'] :: GetGroupResponse -> Int

-- | Create a value of <a>GetGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetGroupResponse'</a>,
--   <a>getGroupResponse_creationTimestamp</a> - The time, in milliseconds
--   since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetGroupResponse'</a>,
--   <a>getGroupResponse_latestVersionArn</a> - The ARN of the latest
--   version associated with the definition.
--   
--   <a>$sel:latestVersion:GetGroupResponse'</a>,
--   <a>getGroupResponse_latestVersion</a> - The ID of the latest version
--   associated with the definition.
--   
--   <a>$sel:arn:GetGroupResponse'</a>, <a>getGroupResponse_arn</a> - The
--   ARN of the definition.
--   
--   <a>$sel:id:GetGroupResponse'</a>, <a>getGroupResponse_id</a> - The ID
--   of the definition.
--   
--   <a>$sel:name:GetGroupResponse'</a>, <a>getGroupResponse_name</a> - The
--   name of the definition.
--   
--   <a>$sel:tags:GetGroupResponse'</a>, <a>getGroupResponse_tags</a> -
--   Tag(s) attached to the resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetGroupResponse'</a>,
--   <a>getGroupResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetGroupResponse'</a>,
--   <a>getGroupResponse_httpStatus</a> - The response's http status code.
newGetGroupResponse :: Int -> GetGroupResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getGroupResponse_creationTimestamp :: Lens' GetGroupResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getGroupResponse_latestVersionArn :: Lens' GetGroupResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getGroupResponse_latestVersion :: Lens' GetGroupResponse (Maybe Text)

-- | The ARN of the definition.
getGroupResponse_arn :: Lens' GetGroupResponse (Maybe Text)

-- | The ID of the definition.
getGroupResponse_id :: Lens' GetGroupResponse (Maybe Text)

-- | The name of the definition.
getGroupResponse_name :: Lens' GetGroupResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getGroupResponse_tags :: Lens' GetGroupResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getGroupResponse_lastUpdatedTimestamp :: Lens' GetGroupResponse (Maybe Text)

-- | The response's http status code.
getGroupResponse_httpStatus :: Lens' GetGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetGroup.GetGroup
instance GHC.Show.Show Network.AWS.Greengrass.GetGroup.GetGroup
instance GHC.Read.Read Network.AWS.Greengrass.GetGroup.GetGroup
instance GHC.Classes.Eq Network.AWS.Greengrass.GetGroup.GetGroup
instance GHC.Generics.Generic Network.AWS.Greengrass.GetGroup.GetGroupResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetGroup.GetGroupResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetGroup.GetGroupResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetGroup.GetGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetGroup.GetGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetGroup.GetGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetGroup.GetGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetGroup.GetGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetGroup.GetGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetGroup.GetGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetGroup.GetGroup


-- | Retrieves information about a Lambda function definition version,
--   including which Lambda functions are included in the version and their
--   configurations.
module Network.AWS.Greengrass.GetFunctionDefinitionVersion

-- | <i>See:</i> <a>newGetFunctionDefinitionVersion</a> smart constructor.
data GetFunctionDefinitionVersion
GetFunctionDefinitionVersion' :: Maybe Text -> Text -> Text -> GetFunctionDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetFunctionDefinitionVersion'] :: GetFunctionDefinitionVersion -> Maybe Text

-- | The ID of the Lambda function definition.
[$sel:functionDefinitionId:GetFunctionDefinitionVersion'] :: GetFunctionDefinitionVersion -> Text

-- | The ID of the function definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListFunctionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   function definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
[$sel:functionDefinitionVersionId:GetFunctionDefinitionVersion'] :: GetFunctionDefinitionVersion -> Text

-- | Create a value of <a>GetFunctionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetFunctionDefinitionVersion'</a>,
--   <a>getFunctionDefinitionVersion_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:functionDefinitionId:GetFunctionDefinitionVersion'</a>,
--   <a>getFunctionDefinitionVersion_functionDefinitionId</a> - The ID of
--   the Lambda function definition.
--   
--   <a>$sel:functionDefinitionVersionId:GetFunctionDefinitionVersion'</a>,
--   <a>getFunctionDefinitionVersion_functionDefinitionVersionId</a> - The
--   ID of the function definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListFunctionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   function definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
newGetFunctionDefinitionVersion :: Text -> Text -> GetFunctionDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getFunctionDefinitionVersion_nextToken :: Lens' GetFunctionDefinitionVersion (Maybe Text)

-- | The ID of the Lambda function definition.
getFunctionDefinitionVersion_functionDefinitionId :: Lens' GetFunctionDefinitionVersion Text

-- | The ID of the function definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListFunctionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   function definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getFunctionDefinitionVersion_functionDefinitionVersionId :: Lens' GetFunctionDefinitionVersion Text

-- | <i>See:</i> <a>newGetFunctionDefinitionVersionResponse</a> smart
--   constructor.
data GetFunctionDefinitionVersionResponse
GetFunctionDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe FunctionDefinitionVersion -> Int -> GetFunctionDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the function
--   definition version was created.
[$sel:creationTimestamp:GetFunctionDefinitionVersionResponse'] :: GetFunctionDefinitionVersionResponse -> Maybe Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetFunctionDefinitionVersionResponse'] :: GetFunctionDefinitionVersionResponse -> Maybe Text

-- | The ARN of the function definition version.
[$sel:arn:GetFunctionDefinitionVersionResponse'] :: GetFunctionDefinitionVersionResponse -> Maybe Text

-- | The ID of the function definition version.
[$sel:id:GetFunctionDefinitionVersionResponse'] :: GetFunctionDefinitionVersionResponse -> Maybe Text

-- | The version of the function definition version.
[$sel:version:GetFunctionDefinitionVersionResponse'] :: GetFunctionDefinitionVersionResponse -> Maybe Text

-- | Information on the definition.
[$sel:definition:GetFunctionDefinitionVersionResponse'] :: GetFunctionDefinitionVersionResponse -> Maybe FunctionDefinitionVersion

-- | The response's http status code.
[$sel:httpStatus:GetFunctionDefinitionVersionResponse'] :: GetFunctionDefinitionVersionResponse -> Int

-- | Create a value of <a>GetFunctionDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the function definition
--   version was created.
--   
--   <a>$sel:nextToken:GetFunctionDefinitionVersion'</a>,
--   <a>getFunctionDefinitionVersionResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:arn:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_arn</a> - The ARN of the
--   function definition version.
--   
--   <a>$sel:id:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_id</a> - The ID of the
--   function definition version.
--   
--   <a>$sel:version:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_version</a> - The version of
--   the function definition version.
--   
--   <a>$sel:definition:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_definition</a> - Information
--   on the definition.
--   
--   <a>$sel:httpStatus:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newGetFunctionDefinitionVersionResponse :: Int -> GetFunctionDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the function
--   definition version was created.
getFunctionDefinitionVersionResponse_creationTimestamp :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getFunctionDefinitionVersionResponse_nextToken :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | The ARN of the function definition version.
getFunctionDefinitionVersionResponse_arn :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | The ID of the function definition version.
getFunctionDefinitionVersionResponse_id :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | The version of the function definition version.
getFunctionDefinitionVersionResponse_version :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | Information on the definition.
getFunctionDefinitionVersionResponse_definition :: Lens' GetFunctionDefinitionVersionResponse (Maybe FunctionDefinitionVersion)

-- | The response's http status code.
getFunctionDefinitionVersionResponse_httpStatus :: Lens' GetFunctionDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetFunctionDefinitionVersion.GetFunctionDefinitionVersion


-- | Retrieves information about a Lambda function definition, including
--   its creation time and latest version.
module Network.AWS.Greengrass.GetFunctionDefinition

-- | <i>See:</i> <a>newGetFunctionDefinition</a> smart constructor.
data GetFunctionDefinition
GetFunctionDefinition' :: Text -> GetFunctionDefinition

-- | The ID of the Lambda function definition.
[$sel:functionDefinitionId:GetFunctionDefinition'] :: GetFunctionDefinition -> Text

-- | Create a value of <a>GetFunctionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionDefinitionId:GetFunctionDefinition'</a>,
--   <a>getFunctionDefinition_functionDefinitionId</a> - The ID of the
--   Lambda function definition.
newGetFunctionDefinition :: Text -> GetFunctionDefinition

-- | The ID of the Lambda function definition.
getFunctionDefinition_functionDefinitionId :: Lens' GetFunctionDefinition Text

-- | <i>See:</i> <a>newGetFunctionDefinitionResponse</a> smart constructor.
data GetFunctionDefinitionResponse
GetFunctionDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetFunctionDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetFunctionDefinitionResponse'] :: GetFunctionDefinitionResponse -> Int

-- | Create a value of <a>GetFunctionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:tags:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetFunctionDefinitionResponse :: Int -> GetFunctionDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getFunctionDefinitionResponse_creationTimestamp :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getFunctionDefinitionResponse_latestVersionArn :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getFunctionDefinitionResponse_latestVersion :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getFunctionDefinitionResponse_arn :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getFunctionDefinitionResponse_id :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The name of the definition.
getFunctionDefinitionResponse_name :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getFunctionDefinitionResponse_tags :: Lens' GetFunctionDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getFunctionDefinitionResponse_lastUpdatedTimestamp :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The response's http status code.
getFunctionDefinitionResponse_httpStatus :: Lens' GetFunctionDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance GHC.Show.Show Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance GHC.Read.Read Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetFunctionDefinition.GetFunctionDefinition


-- | Retrieves information about a device definition version.
module Network.AWS.Greengrass.GetDeviceDefinitionVersion

-- | <i>See:</i> <a>newGetDeviceDefinitionVersion</a> smart constructor.
data GetDeviceDefinitionVersion
GetDeviceDefinitionVersion' :: Maybe Text -> Text -> Text -> GetDeviceDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetDeviceDefinitionVersion'] :: GetDeviceDefinitionVersion -> Maybe Text

-- | The ID of the device definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListDeviceDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   device definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
[$sel:deviceDefinitionVersionId:GetDeviceDefinitionVersion'] :: GetDeviceDefinitionVersion -> Text

-- | The ID of the device definition.
[$sel:deviceDefinitionId:GetDeviceDefinitionVersion'] :: GetDeviceDefinitionVersion -> Text

-- | Create a value of <a>GetDeviceDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDeviceDefinitionVersion'</a>,
--   <a>getDeviceDefinitionVersion_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:deviceDefinitionVersionId:GetDeviceDefinitionVersion'</a>,
--   <a>getDeviceDefinitionVersion_deviceDefinitionVersionId</a> - The ID
--   of the device definition version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListDeviceDefinitionVersions'' requests. If the version
--   is the last one that was associated with a device definition, the
--   value also maps to the ''LatestVersion'' property of the corresponding
--   ''DefinitionInformation'' object.
--   
--   <a>$sel:deviceDefinitionId:GetDeviceDefinitionVersion'</a>,
--   <a>getDeviceDefinitionVersion_deviceDefinitionId</a> - The ID of the
--   device definition.
newGetDeviceDefinitionVersion :: Text -> Text -> GetDeviceDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getDeviceDefinitionVersion_nextToken :: Lens' GetDeviceDefinitionVersion (Maybe Text)

-- | The ID of the device definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListDeviceDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   device definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getDeviceDefinitionVersion_deviceDefinitionVersionId :: Lens' GetDeviceDefinitionVersion Text

-- | The ID of the device definition.
getDeviceDefinitionVersion_deviceDefinitionId :: Lens' GetDeviceDefinitionVersion Text

-- | <i>See:</i> <a>newGetDeviceDefinitionVersionResponse</a> smart
--   constructor.
data GetDeviceDefinitionVersionResponse
GetDeviceDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DeviceDefinitionVersion -> Int -> GetDeviceDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the device definition
--   version was created.
[$sel:creationTimestamp:GetDeviceDefinitionVersionResponse'] :: GetDeviceDefinitionVersionResponse -> Maybe Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetDeviceDefinitionVersionResponse'] :: GetDeviceDefinitionVersionResponse -> Maybe Text

-- | The ARN of the device definition version.
[$sel:arn:GetDeviceDefinitionVersionResponse'] :: GetDeviceDefinitionVersionResponse -> Maybe Text

-- | The ID of the device definition version.
[$sel:id:GetDeviceDefinitionVersionResponse'] :: GetDeviceDefinitionVersionResponse -> Maybe Text

-- | The version of the device definition version.
[$sel:version:GetDeviceDefinitionVersionResponse'] :: GetDeviceDefinitionVersionResponse -> Maybe Text

-- | Information about the device definition version.
[$sel:definition:GetDeviceDefinitionVersionResponse'] :: GetDeviceDefinitionVersionResponse -> Maybe DeviceDefinitionVersion

-- | The response's http status code.
[$sel:httpStatus:GetDeviceDefinitionVersionResponse'] :: GetDeviceDefinitionVersionResponse -> Int

-- | Create a value of <a>GetDeviceDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the device definition
--   version was created.
--   
--   <a>$sel:nextToken:GetDeviceDefinitionVersion'</a>,
--   <a>getDeviceDefinitionVersionResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:arn:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_arn</a> - The ARN of the device
--   definition version.
--   
--   <a>$sel:id:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_id</a> - The ID of the device
--   definition version.
--   
--   <a>$sel:version:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_version</a> - The version of the
--   device definition version.
--   
--   <a>$sel:definition:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_definition</a> - Information
--   about the device definition version.
--   
--   <a>$sel:httpStatus:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_httpStatus</a> - The response's
--   http status code.
newGetDeviceDefinitionVersionResponse :: Int -> GetDeviceDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the device definition
--   version was created.
getDeviceDefinitionVersionResponse_creationTimestamp :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getDeviceDefinitionVersionResponse_nextToken :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | The ARN of the device definition version.
getDeviceDefinitionVersionResponse_arn :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | The ID of the device definition version.
getDeviceDefinitionVersionResponse_id :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | The version of the device definition version.
getDeviceDefinitionVersionResponse_version :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | Information about the device definition version.
getDeviceDefinitionVersionResponse_definition :: Lens' GetDeviceDefinitionVersionResponse (Maybe DeviceDefinitionVersion)

-- | The response's http status code.
getDeviceDefinitionVersionResponse_httpStatus :: Lens' GetDeviceDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetDeviceDefinitionVersion.GetDeviceDefinitionVersion


-- | Retrieves information about a device definition.
module Network.AWS.Greengrass.GetDeviceDefinition

-- | <i>See:</i> <a>newGetDeviceDefinition</a> smart constructor.
data GetDeviceDefinition
GetDeviceDefinition' :: Text -> GetDeviceDefinition

-- | The ID of the device definition.
[$sel:deviceDefinitionId:GetDeviceDefinition'] :: GetDeviceDefinition -> Text

-- | Create a value of <a>GetDeviceDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceDefinitionId:GetDeviceDefinition'</a>,
--   <a>getDeviceDefinition_deviceDefinitionId</a> - The ID of the device
--   definition.
newGetDeviceDefinition :: Text -> GetDeviceDefinition

-- | The ID of the device definition.
getDeviceDefinition_deviceDefinitionId :: Lens' GetDeviceDefinition Text

-- | <i>See:</i> <a>newGetDeviceDefinitionResponse</a> smart constructor.
data GetDeviceDefinitionResponse
GetDeviceDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetDeviceDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDeviceDefinitionResponse'] :: GetDeviceDefinitionResponse -> Int

-- | Create a value of <a>GetDeviceDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_name</a> - The name of the definition.
--   
--   <a>$sel:tags:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetDeviceDefinitionResponse :: Int -> GetDeviceDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getDeviceDefinitionResponse_creationTimestamp :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getDeviceDefinitionResponse_latestVersionArn :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getDeviceDefinitionResponse_latestVersion :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getDeviceDefinitionResponse_arn :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getDeviceDefinitionResponse_id :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The name of the definition.
getDeviceDefinitionResponse_name :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getDeviceDefinitionResponse_tags :: Lens' GetDeviceDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getDeviceDefinitionResponse_lastUpdatedTimestamp :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The response's http status code.
getDeviceDefinitionResponse_httpStatus :: Lens' GetDeviceDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance GHC.Show.Show Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance GHC.Read.Read Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetDeviceDefinition.GetDeviceDefinition


-- | Returns the status of a deployment.
module Network.AWS.Greengrass.GetDeploymentStatus

-- | <i>See:</i> <a>newGetDeploymentStatus</a> smart constructor.
data GetDeploymentStatus
GetDeploymentStatus' :: Text -> Text -> GetDeploymentStatus

-- | The ID of the Greengrass group.
[$sel:groupId:GetDeploymentStatus'] :: GetDeploymentStatus -> Text

-- | The ID of the deployment.
[$sel:deploymentId:GetDeploymentStatus'] :: GetDeploymentStatus -> Text

-- | Create a value of <a>GetDeploymentStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:GetDeploymentStatus'</a>,
--   <a>getDeploymentStatus_groupId</a> - The ID of the Greengrass group.
--   
--   <a>$sel:deploymentId:GetDeploymentStatus'</a>,
--   <a>getDeploymentStatus_deploymentId</a> - The ID of the deployment.
newGetDeploymentStatus :: Text -> Text -> GetDeploymentStatus

-- | The ID of the Greengrass group.
getDeploymentStatus_groupId :: Lens' GetDeploymentStatus Text

-- | The ID of the deployment.
getDeploymentStatus_deploymentId :: Lens' GetDeploymentStatus Text

-- | <i>See:</i> <a>newGetDeploymentStatusResponse</a> smart constructor.
data GetDeploymentStatusResponse
GetDeploymentStatusResponse' :: Maybe DeploymentType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ErrorDetail] -> Int -> GetDeploymentStatusResponse

-- | The type of the deployment.
[$sel:deploymentType:GetDeploymentStatusResponse'] :: GetDeploymentStatusResponse -> Maybe DeploymentType

-- | The time, in milliseconds since the epoch, when the deployment status
--   was updated.
[$sel:updatedAt:GetDeploymentStatusResponse'] :: GetDeploymentStatusResponse -> Maybe Text

-- | The status of the deployment: ''InProgress'', ''Building'',
--   ''Success'', or ''Failure''.
[$sel:deploymentStatus:GetDeploymentStatusResponse'] :: GetDeploymentStatusResponse -> Maybe Text

-- | Error message
[$sel:errorMessage:GetDeploymentStatusResponse'] :: GetDeploymentStatusResponse -> Maybe Text

-- | Error details
[$sel:errorDetails:GetDeploymentStatusResponse'] :: GetDeploymentStatusResponse -> Maybe [ErrorDetail]

-- | The response's http status code.
[$sel:httpStatus:GetDeploymentStatusResponse'] :: GetDeploymentStatusResponse -> Int

-- | Create a value of <a>GetDeploymentStatusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentType:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_deploymentType</a> - The type of the
--   deployment.
--   
--   <a>$sel:updatedAt:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_updatedAt</a> - The time, in
--   milliseconds since the epoch, when the deployment status was updated.
--   
--   <a>$sel:deploymentStatus:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_deploymentStatus</a> - The status of
--   the deployment: ''InProgress'', ''Building'', ''Success'', or
--   ''Failure''.
--   
--   <a>$sel:errorMessage:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_errorMessage</a> - Error message
--   
--   <a>$sel:errorDetails:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_errorDetails</a> - Error details
--   
--   <a>$sel:httpStatus:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_httpStatus</a> - The response's http
--   status code.
newGetDeploymentStatusResponse :: Int -> GetDeploymentStatusResponse

-- | The type of the deployment.
getDeploymentStatusResponse_deploymentType :: Lens' GetDeploymentStatusResponse (Maybe DeploymentType)

-- | The time, in milliseconds since the epoch, when the deployment status
--   was updated.
getDeploymentStatusResponse_updatedAt :: Lens' GetDeploymentStatusResponse (Maybe Text)

-- | The status of the deployment: ''InProgress'', ''Building'',
--   ''Success'', or ''Failure''.
getDeploymentStatusResponse_deploymentStatus :: Lens' GetDeploymentStatusResponse (Maybe Text)

-- | Error message
getDeploymentStatusResponse_errorMessage :: Lens' GetDeploymentStatusResponse (Maybe Text)

-- | Error details
getDeploymentStatusResponse_errorDetails :: Lens' GetDeploymentStatusResponse (Maybe [ErrorDetail])

-- | The response's http status code.
getDeploymentStatusResponse_httpStatus :: Lens' GetDeploymentStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance GHC.Show.Show Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance GHC.Read.Read Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance GHC.Classes.Eq Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance GHC.Generics.Generic Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatusResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatusResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatusResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetDeploymentStatus.GetDeploymentStatus


-- | Retrieves information about a core definition version.
module Network.AWS.Greengrass.GetCoreDefinitionVersion

-- | <i>See:</i> <a>newGetCoreDefinitionVersion</a> smart constructor.
data GetCoreDefinitionVersion
GetCoreDefinitionVersion' :: Text -> Text -> GetCoreDefinitionVersion

-- | The ID of the core definition.
[$sel:coreDefinitionId:GetCoreDefinitionVersion'] :: GetCoreDefinitionVersion -> Text

-- | The ID of the core definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListCoreDefinitionVersions'' requests.
--   If the version is the last one that was associated with a core
--   definition, the value also maps to the ''LatestVersion'' property of
--   the corresponding ''DefinitionInformation'' object.
[$sel:coreDefinitionVersionId:GetCoreDefinitionVersion'] :: GetCoreDefinitionVersion -> Text

-- | Create a value of <a>GetCoreDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreDefinitionId:GetCoreDefinitionVersion'</a>,
--   <a>getCoreDefinitionVersion_coreDefinitionId</a> - The ID of the core
--   definition.
--   
--   <a>$sel:coreDefinitionVersionId:GetCoreDefinitionVersion'</a>,
--   <a>getCoreDefinitionVersion_coreDefinitionVersionId</a> - The ID of
--   the core definition version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListCoreDefinitionVersions'' requests. If the version is
--   the last one that was associated with a core definition, the value
--   also maps to the ''LatestVersion'' property of the corresponding
--   ''DefinitionInformation'' object.
newGetCoreDefinitionVersion :: Text -> Text -> GetCoreDefinitionVersion

-- | The ID of the core definition.
getCoreDefinitionVersion_coreDefinitionId :: Lens' GetCoreDefinitionVersion Text

-- | The ID of the core definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListCoreDefinitionVersions'' requests.
--   If the version is the last one that was associated with a core
--   definition, the value also maps to the ''LatestVersion'' property of
--   the corresponding ''DefinitionInformation'' object.
getCoreDefinitionVersion_coreDefinitionVersionId :: Lens' GetCoreDefinitionVersion Text

-- | <i>See:</i> <a>newGetCoreDefinitionVersionResponse</a> smart
--   constructor.
data GetCoreDefinitionVersionResponse
GetCoreDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CoreDefinitionVersion -> Int -> GetCoreDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the core definition
--   version was created.
[$sel:creationTimestamp:GetCoreDefinitionVersionResponse'] :: GetCoreDefinitionVersionResponse -> Maybe Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetCoreDefinitionVersionResponse'] :: GetCoreDefinitionVersionResponse -> Maybe Text

-- | The ARN of the core definition version.
[$sel:arn:GetCoreDefinitionVersionResponse'] :: GetCoreDefinitionVersionResponse -> Maybe Text

-- | The ID of the core definition version.
[$sel:id:GetCoreDefinitionVersionResponse'] :: GetCoreDefinitionVersionResponse -> Maybe Text

-- | The version of the core definition version.
[$sel:version:GetCoreDefinitionVersionResponse'] :: GetCoreDefinitionVersionResponse -> Maybe Text

-- | Information about the core definition version.
[$sel:definition:GetCoreDefinitionVersionResponse'] :: GetCoreDefinitionVersionResponse -> Maybe CoreDefinitionVersion

-- | The response's http status code.
[$sel:httpStatus:GetCoreDefinitionVersionResponse'] :: GetCoreDefinitionVersionResponse -> Int

-- | Create a value of <a>GetCoreDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the core definition version was
--   created.
--   
--   <a>$sel:nextToken:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:arn:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_arn</a> - The ARN of the core
--   definition version.
--   
--   <a>$sel:id:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_id</a> - The ID of the core
--   definition version.
--   
--   <a>$sel:version:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_version</a> - The version of the
--   core definition version.
--   
--   <a>$sel:definition:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_definition</a> - Information about
--   the core definition version.
--   
--   <a>$sel:httpStatus:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_httpStatus</a> - The response's
--   http status code.
newGetCoreDefinitionVersionResponse :: Int -> GetCoreDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the core definition
--   version was created.
getCoreDefinitionVersionResponse_creationTimestamp :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getCoreDefinitionVersionResponse_nextToken :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | The ARN of the core definition version.
getCoreDefinitionVersionResponse_arn :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | The ID of the core definition version.
getCoreDefinitionVersionResponse_id :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | The version of the core definition version.
getCoreDefinitionVersionResponse_version :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | Information about the core definition version.
getCoreDefinitionVersionResponse_definition :: Lens' GetCoreDefinitionVersionResponse (Maybe CoreDefinitionVersion)

-- | The response's http status code.
getCoreDefinitionVersionResponse_httpStatus :: Lens' GetCoreDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetCoreDefinitionVersion.GetCoreDefinitionVersion


-- | Retrieves information about a core definition version.
module Network.AWS.Greengrass.GetCoreDefinition

-- | <i>See:</i> <a>newGetCoreDefinition</a> smart constructor.
data GetCoreDefinition
GetCoreDefinition' :: Text -> GetCoreDefinition

-- | The ID of the core definition.
[$sel:coreDefinitionId:GetCoreDefinition'] :: GetCoreDefinition -> Text

-- | Create a value of <a>GetCoreDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreDefinitionId:GetCoreDefinition'</a>,
--   <a>getCoreDefinition_coreDefinitionId</a> - The ID of the core
--   definition.
newGetCoreDefinition :: Text -> GetCoreDefinition

-- | The ID of the core definition.
getCoreDefinition_coreDefinitionId :: Lens' GetCoreDefinition Text

-- | <i>See:</i> <a>newGetCoreDefinitionResponse</a> smart constructor.
data GetCoreDefinitionResponse
GetCoreDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetCoreDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCoreDefinitionResponse'] :: GetCoreDefinitionResponse -> Int

-- | Create a value of <a>GetCoreDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_latestVersion</a> - The ID of the latest
--   version associated with the definition.
--   
--   <a>$sel:arn:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_name</a> - The name of the definition.
--   
--   <a>$sel:tags:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetCoreDefinitionResponse :: Int -> GetCoreDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getCoreDefinitionResponse_creationTimestamp :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getCoreDefinitionResponse_latestVersionArn :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getCoreDefinitionResponse_latestVersion :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getCoreDefinitionResponse_arn :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getCoreDefinitionResponse_id :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The name of the definition.
getCoreDefinitionResponse_name :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getCoreDefinitionResponse_tags :: Lens' GetCoreDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getCoreDefinitionResponse_lastUpdatedTimestamp :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The response's http status code.
getCoreDefinitionResponse_httpStatus :: Lens' GetCoreDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance GHC.Show.Show Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance GHC.Read.Read Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetCoreDefinition.GetCoreDefinition


-- | Retrieves information about a connector definition version, including
--   the connectors that the version contains. Connectors are prebuilt
--   modules that interact with local infrastructure, device protocols,
--   AWS, and other cloud services.
module Network.AWS.Greengrass.GetConnectorDefinitionVersion

-- | <i>See:</i> <a>newGetConnectorDefinitionVersion</a> smart constructor.
data GetConnectorDefinitionVersion
GetConnectorDefinitionVersion' :: Maybe Text -> Text -> Text -> GetConnectorDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetConnectorDefinitionVersion'] :: GetConnectorDefinitionVersion -> Maybe Text

-- | The ID of the connector definition.
[$sel:connectorDefinitionId:GetConnectorDefinitionVersion'] :: GetConnectorDefinitionVersion -> Text

-- | The ID of the connector definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListConnectorDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   connector definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
[$sel:connectorDefinitionVersionId:GetConnectorDefinitionVersion'] :: GetConnectorDefinitionVersion -> Text

-- | Create a value of <a>GetConnectorDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetConnectorDefinitionVersion'</a>,
--   <a>getConnectorDefinitionVersion_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:connectorDefinitionId:GetConnectorDefinitionVersion'</a>,
--   <a>getConnectorDefinitionVersion_connectorDefinitionId</a> - The ID of
--   the connector definition.
--   
--   
--   <a>$sel:connectorDefinitionVersionId:GetConnectorDefinitionVersion'</a>,
--   <a>getConnectorDefinitionVersion_connectorDefinitionVersionId</a> -
--   The ID of the connector definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListConnectorDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   connector definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
newGetConnectorDefinitionVersion :: Text -> Text -> GetConnectorDefinitionVersion

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getConnectorDefinitionVersion_nextToken :: Lens' GetConnectorDefinitionVersion (Maybe Text)

-- | The ID of the connector definition.
getConnectorDefinitionVersion_connectorDefinitionId :: Lens' GetConnectorDefinitionVersion Text

-- | The ID of the connector definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListConnectorDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   connector definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getConnectorDefinitionVersion_connectorDefinitionVersionId :: Lens' GetConnectorDefinitionVersion Text

-- | <i>See:</i> <a>newGetConnectorDefinitionVersionResponse</a> smart
--   constructor.
data GetConnectorDefinitionVersionResponse
GetConnectorDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConnectorDefinitionVersion -> Int -> GetConnectorDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the connector
--   definition version was created.
[$sel:creationTimestamp:GetConnectorDefinitionVersionResponse'] :: GetConnectorDefinitionVersionResponse -> Maybe Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
[$sel:nextToken:GetConnectorDefinitionVersionResponse'] :: GetConnectorDefinitionVersionResponse -> Maybe Text

-- | The ARN of the connector definition version.
[$sel:arn:GetConnectorDefinitionVersionResponse'] :: GetConnectorDefinitionVersionResponse -> Maybe Text

-- | The ID of the connector definition version.
[$sel:id:GetConnectorDefinitionVersionResponse'] :: GetConnectorDefinitionVersionResponse -> Maybe Text

-- | The version of the connector definition version.
[$sel:version:GetConnectorDefinitionVersionResponse'] :: GetConnectorDefinitionVersionResponse -> Maybe Text

-- | Information about the connector definition version.
[$sel:definition:GetConnectorDefinitionVersionResponse'] :: GetConnectorDefinitionVersionResponse -> Maybe ConnectorDefinitionVersion

-- | The response's http status code.
[$sel:httpStatus:GetConnectorDefinitionVersionResponse'] :: GetConnectorDefinitionVersionResponse -> Int

-- | Create a value of <a>GetConnectorDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the connector definition
--   version was created.
--   
--   <a>$sel:nextToken:GetConnectorDefinitionVersion'</a>,
--   <a>getConnectorDefinitionVersionResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:arn:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_arn</a> - The ARN of the
--   connector definition version.
--   
--   <a>$sel:id:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_id</a> - The ID of the
--   connector definition version.
--   
--   <a>$sel:version:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_version</a> - The version of
--   the connector definition version.
--   
--   <a>$sel:definition:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_definition</a> - Information
--   about the connector definition version.
--   
--   <a>$sel:httpStatus:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newGetConnectorDefinitionVersionResponse :: Int -> GetConnectorDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the connector
--   definition version was created.
getConnectorDefinitionVersionResponse_creationTimestamp :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getConnectorDefinitionVersionResponse_nextToken :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | The ARN of the connector definition version.
getConnectorDefinitionVersionResponse_arn :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | The ID of the connector definition version.
getConnectorDefinitionVersionResponse_id :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | The version of the connector definition version.
getConnectorDefinitionVersionResponse_version :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | Information about the connector definition version.
getConnectorDefinitionVersionResponse_definition :: Lens' GetConnectorDefinitionVersionResponse (Maybe ConnectorDefinitionVersion)

-- | The response's http status code.
getConnectorDefinitionVersionResponse_httpStatus :: Lens' GetConnectorDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetConnectorDefinitionVersion.GetConnectorDefinitionVersion


-- | Retrieves information about a connector definition.
module Network.AWS.Greengrass.GetConnectorDefinition

-- | <i>See:</i> <a>newGetConnectorDefinition</a> smart constructor.
data GetConnectorDefinition
GetConnectorDefinition' :: Text -> GetConnectorDefinition

-- | The ID of the connector definition.
[$sel:connectorDefinitionId:GetConnectorDefinition'] :: GetConnectorDefinition -> Text

-- | Create a value of <a>GetConnectorDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectorDefinitionId:GetConnectorDefinition'</a>,
--   <a>getConnectorDefinition_connectorDefinitionId</a> - The ID of the
--   connector definition.
newGetConnectorDefinition :: Text -> GetConnectorDefinition

-- | The ID of the connector definition.
getConnectorDefinition_connectorDefinitionId :: Lens' GetConnectorDefinition Text

-- | <i>See:</i> <a>newGetConnectorDefinitionResponse</a> smart
--   constructor.
data GetConnectorDefinitionResponse
GetConnectorDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetConnectorDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Maybe (HashMap Text Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetConnectorDefinitionResponse'] :: GetConnectorDefinitionResponse -> Int

-- | Create a value of <a>GetConnectorDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:tags:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetConnectorDefinitionResponse :: Int -> GetConnectorDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getConnectorDefinitionResponse_creationTimestamp :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getConnectorDefinitionResponse_latestVersionArn :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getConnectorDefinitionResponse_latestVersion :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getConnectorDefinitionResponse_arn :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getConnectorDefinitionResponse_id :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The name of the definition.
getConnectorDefinitionResponse_name :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getConnectorDefinitionResponse_tags :: Lens' GetConnectorDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getConnectorDefinitionResponse_lastUpdatedTimestamp :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The response's http status code.
getConnectorDefinitionResponse_httpStatus :: Lens' GetConnectorDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance GHC.Show.Show Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance GHC.Read.Read Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetConnectorDefinition.GetConnectorDefinition


-- | Retrieves the connectivity information for a core.
module Network.AWS.Greengrass.GetConnectivityInfo

-- | <i>See:</i> <a>newGetConnectivityInfo</a> smart constructor.
data GetConnectivityInfo
GetConnectivityInfo' :: Text -> GetConnectivityInfo

-- | The thing name.
[$sel:thingName:GetConnectivityInfo'] :: GetConnectivityInfo -> Text

-- | Create a value of <a>GetConnectivityInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thingName:GetConnectivityInfo'</a>,
--   <a>getConnectivityInfo_thingName</a> - The thing name.
newGetConnectivityInfo :: Text -> GetConnectivityInfo

-- | The thing name.
getConnectivityInfo_thingName :: Lens' GetConnectivityInfo Text

-- | <i>See:</i> <a>newGetConnectivityInfoResponse</a> smart constructor.
data GetConnectivityInfoResponse
GetConnectivityInfoResponse' :: Maybe Text -> Maybe [ConnectivityInfo] -> Int -> GetConnectivityInfoResponse

-- | A message about the connectivity info request.
[$sel:message:GetConnectivityInfoResponse'] :: GetConnectivityInfoResponse -> Maybe Text

-- | Connectivity info list.
[$sel:connectivityInfo:GetConnectivityInfoResponse'] :: GetConnectivityInfoResponse -> Maybe [ConnectivityInfo]

-- | The response's http status code.
[$sel:httpStatus:GetConnectivityInfoResponse'] :: GetConnectivityInfoResponse -> Int

-- | Create a value of <a>GetConnectivityInfoResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:GetConnectivityInfoResponse'</a>,
--   <a>getConnectivityInfoResponse_message</a> - A message about the
--   connectivity info request.
--   
--   <a>$sel:connectivityInfo:GetConnectivityInfoResponse'</a>,
--   <a>getConnectivityInfoResponse_connectivityInfo</a> - Connectivity
--   info list.
--   
--   <a>$sel:httpStatus:GetConnectivityInfoResponse'</a>,
--   <a>getConnectivityInfoResponse_httpStatus</a> - The response's http
--   status code.
newGetConnectivityInfoResponse :: Int -> GetConnectivityInfoResponse

-- | A message about the connectivity info request.
getConnectivityInfoResponse_message :: Lens' GetConnectivityInfoResponse (Maybe Text)

-- | Connectivity info list.
getConnectivityInfoResponse_connectivityInfo :: Lens' GetConnectivityInfoResponse (Maybe [ConnectivityInfo])

-- | The response's http status code.
getConnectivityInfoResponse_httpStatus :: Lens' GetConnectivityInfoResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance GHC.Show.Show Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance GHC.Read.Read Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance GHC.Classes.Eq Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance GHC.Generics.Generic Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfoResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfoResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfoResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfoResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfoResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetConnectivityInfo.GetConnectivityInfo


-- | Returns the status of a bulk deployment.
module Network.AWS.Greengrass.GetBulkDeploymentStatus

-- | <i>See:</i> <a>newGetBulkDeploymentStatus</a> smart constructor.
data GetBulkDeploymentStatus
GetBulkDeploymentStatus' :: Text -> GetBulkDeploymentStatus

-- | The ID of the bulk deployment.
[$sel:bulkDeploymentId:GetBulkDeploymentStatus'] :: GetBulkDeploymentStatus -> Text

-- | Create a value of <a>GetBulkDeploymentStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:GetBulkDeploymentStatus'</a>,
--   <a>getBulkDeploymentStatus_bulkDeploymentId</a> - The ID of the bulk
--   deployment.
newGetBulkDeploymentStatus :: Text -> GetBulkDeploymentStatus

-- | The ID of the bulk deployment.
getBulkDeploymentStatus_bulkDeploymentId :: Lens' GetBulkDeploymentStatus Text

-- | <i>See:</i> <a>newGetBulkDeploymentStatusResponse</a> smart
--   constructor.
data GetBulkDeploymentStatusResponse
GetBulkDeploymentStatusResponse' :: Maybe BulkDeploymentStatus -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe BulkDeploymentMetrics -> Maybe Text -> Maybe [ErrorDetail] -> Int -> GetBulkDeploymentStatusResponse

-- | The status of the bulk deployment.
[$sel:bulkDeploymentStatus:GetBulkDeploymentStatusResponse'] :: GetBulkDeploymentStatusResponse -> Maybe BulkDeploymentStatus

-- | The time, in ISO format, when the deployment was created.
[$sel:createdAt:GetBulkDeploymentStatusResponse'] :: GetBulkDeploymentStatusResponse -> Maybe Text

-- | Tag(s) attached to the resource arn.
[$sel:tags:GetBulkDeploymentStatusResponse'] :: GetBulkDeploymentStatusResponse -> Maybe (HashMap Text Text)

-- | Relevant metrics on input records processed during bulk deployment.
[$sel:bulkDeploymentMetrics:GetBulkDeploymentStatusResponse'] :: GetBulkDeploymentStatusResponse -> Maybe BulkDeploymentMetrics

-- | Error message
[$sel:errorMessage:GetBulkDeploymentStatusResponse'] :: GetBulkDeploymentStatusResponse -> Maybe Text

-- | Error details
[$sel:errorDetails:GetBulkDeploymentStatusResponse'] :: GetBulkDeploymentStatusResponse -> Maybe [ErrorDetail]

-- | The response's http status code.
[$sel:httpStatus:GetBulkDeploymentStatusResponse'] :: GetBulkDeploymentStatusResponse -> Int

-- | Create a value of <a>GetBulkDeploymentStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentStatus:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_bulkDeploymentStatus</a> - The
--   status of the bulk deployment.
--   
--   <a>$sel:createdAt:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_createdAt</a> - The time, in ISO
--   format, when the deployment was created.
--   
--   <a>$sel:tags:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:bulkDeploymentMetrics:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_bulkDeploymentMetrics</a> -
--   Relevant metrics on input records processed during bulk deployment.
--   
--   <a>$sel:errorMessage:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_errorMessage</a> - Error message
--   
--   <a>$sel:errorDetails:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_errorDetails</a> - Error details
--   
--   <a>$sel:httpStatus:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_httpStatus</a> - The response's
--   http status code.
newGetBulkDeploymentStatusResponse :: Int -> GetBulkDeploymentStatusResponse

-- | The status of the bulk deployment.
getBulkDeploymentStatusResponse_bulkDeploymentStatus :: Lens' GetBulkDeploymentStatusResponse (Maybe BulkDeploymentStatus)

-- | The time, in ISO format, when the deployment was created.
getBulkDeploymentStatusResponse_createdAt :: Lens' GetBulkDeploymentStatusResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getBulkDeploymentStatusResponse_tags :: Lens' GetBulkDeploymentStatusResponse (Maybe (HashMap Text Text))

-- | Relevant metrics on input records processed during bulk deployment.
getBulkDeploymentStatusResponse_bulkDeploymentMetrics :: Lens' GetBulkDeploymentStatusResponse (Maybe BulkDeploymentMetrics)

-- | Error message
getBulkDeploymentStatusResponse_errorMessage :: Lens' GetBulkDeploymentStatusResponse (Maybe Text)

-- | Error details
getBulkDeploymentStatusResponse_errorDetails :: Lens' GetBulkDeploymentStatusResponse (Maybe [ErrorDetail])

-- | The response's http status code.
getBulkDeploymentStatusResponse_httpStatus :: Lens' GetBulkDeploymentStatusResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance GHC.Show.Show Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance GHC.Read.Read Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance GHC.Classes.Eq Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance GHC.Generics.Generic Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatusResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatusResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatusResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetBulkDeploymentStatus.GetBulkDeploymentStatus


-- | Retrieves the role associated with a particular group.
module Network.AWS.Greengrass.GetAssociatedRole

-- | <i>See:</i> <a>newGetAssociatedRole</a> smart constructor.
data GetAssociatedRole
GetAssociatedRole' :: Text -> GetAssociatedRole

-- | The ID of the Greengrass group.
[$sel:groupId:GetAssociatedRole'] :: GetAssociatedRole -> Text

-- | Create a value of <a>GetAssociatedRole</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:GetAssociatedRole'</a>,
--   <a>getAssociatedRole_groupId</a> - The ID of the Greengrass group.
newGetAssociatedRole :: Text -> GetAssociatedRole

-- | The ID of the Greengrass group.
getAssociatedRole_groupId :: Lens' GetAssociatedRole Text

-- | <i>See:</i> <a>newGetAssociatedRoleResponse</a> smart constructor.
data GetAssociatedRoleResponse
GetAssociatedRoleResponse' :: Maybe Text -> Maybe Text -> Int -> GetAssociatedRoleResponse

-- | The ARN of the role that is associated with the group.
[$sel:roleArn:GetAssociatedRoleResponse'] :: GetAssociatedRoleResponse -> Maybe Text

-- | The time when the role was associated with the group.
[$sel:associatedAt:GetAssociatedRoleResponse'] :: GetAssociatedRoleResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAssociatedRoleResponse'] :: GetAssociatedRoleResponse -> Int

-- | Create a value of <a>GetAssociatedRoleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:GetAssociatedRoleResponse'</a>,
--   <a>getAssociatedRoleResponse_roleArn</a> - The ARN of the role that is
--   associated with the group.
--   
--   <a>$sel:associatedAt:GetAssociatedRoleResponse'</a>,
--   <a>getAssociatedRoleResponse_associatedAt</a> - The time when the role
--   was associated with the group.
--   
--   <a>$sel:httpStatus:GetAssociatedRoleResponse'</a>,
--   <a>getAssociatedRoleResponse_httpStatus</a> - The response's http
--   status code.
newGetAssociatedRoleResponse :: Int -> GetAssociatedRoleResponse

-- | The ARN of the role that is associated with the group.
getAssociatedRoleResponse_roleArn :: Lens' GetAssociatedRoleResponse (Maybe Text)

-- | The time when the role was associated with the group.
getAssociatedRoleResponse_associatedAt :: Lens' GetAssociatedRoleResponse (Maybe Text)

-- | The response's http status code.
getAssociatedRoleResponse_httpStatus :: Lens' GetAssociatedRoleResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance GHC.Show.Show Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance GHC.Read.Read Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance GHC.Classes.Eq Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance GHC.Generics.Generic Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRoleResponse
instance GHC.Show.Show Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRoleResponse
instance GHC.Read.Read Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRoleResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRoleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRoleResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance Control.DeepSeq.NFData Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.GetAssociatedRole.GetAssociatedRole


-- | Disassociates the service role from your account. Without a service
--   role, deployments will not work.
module Network.AWS.Greengrass.DisassociateServiceRoleFromAccount

-- | <i>See:</i> <a>newDisassociateServiceRoleFromAccount</a> smart
--   constructor.
data DisassociateServiceRoleFromAccount
DisassociateServiceRoleFromAccount' :: DisassociateServiceRoleFromAccount

-- | Create a value of <a>DisassociateServiceRoleFromAccount</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateServiceRoleFromAccount :: DisassociateServiceRoleFromAccount

-- | <i>See:</i> <a>newDisassociateServiceRoleFromAccountResponse</a> smart
--   constructor.
data DisassociateServiceRoleFromAccountResponse
DisassociateServiceRoleFromAccountResponse' :: Maybe Text -> Int -> DisassociateServiceRoleFromAccountResponse

-- | The time when the service role was disassociated from the account.
[$sel:disassociatedAt:DisassociateServiceRoleFromAccountResponse'] :: DisassociateServiceRoleFromAccountResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DisassociateServiceRoleFromAccountResponse'] :: DisassociateServiceRoleFromAccountResponse -> Int

-- | Create a value of <a>DisassociateServiceRoleFromAccountResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:disassociatedAt:DisassociateServiceRoleFromAccountResponse'</a>,
--   <a>disassociateServiceRoleFromAccountResponse_disassociatedAt</a> -
--   The time when the service role was disassociated from the account.
--   
--   <a>$sel:httpStatus:DisassociateServiceRoleFromAccountResponse'</a>,
--   <a>disassociateServiceRoleFromAccountResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateServiceRoleFromAccountResponse :: Int -> DisassociateServiceRoleFromAccountResponse

-- | The time when the service role was disassociated from the account.
disassociateServiceRoleFromAccountResponse_disassociatedAt :: Lens' DisassociateServiceRoleFromAccountResponse (Maybe Text)

-- | The response's http status code.
disassociateServiceRoleFromAccountResponse_httpStatus :: Lens' DisassociateServiceRoleFromAccountResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance GHC.Show.Show Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance GHC.Read.Read Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance GHC.Classes.Eq Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance GHC.Generics.Generic Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccountResponse
instance GHC.Show.Show Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccountResponse
instance GHC.Read.Read Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccountResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccountResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccountResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DisassociateServiceRoleFromAccount.DisassociateServiceRoleFromAccount


-- | Disassociates the role from a group.
module Network.AWS.Greengrass.DisassociateRoleFromGroup

-- | <i>See:</i> <a>newDisassociateRoleFromGroup</a> smart constructor.
data DisassociateRoleFromGroup
DisassociateRoleFromGroup' :: Text -> DisassociateRoleFromGroup

-- | The ID of the Greengrass group.
[$sel:groupId:DisassociateRoleFromGroup'] :: DisassociateRoleFromGroup -> Text

-- | Create a value of <a>DisassociateRoleFromGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:DisassociateRoleFromGroup'</a>,
--   <a>disassociateRoleFromGroup_groupId</a> - The ID of the Greengrass
--   group.
newDisassociateRoleFromGroup :: Text -> DisassociateRoleFromGroup

-- | The ID of the Greengrass group.
disassociateRoleFromGroup_groupId :: Lens' DisassociateRoleFromGroup Text

-- | <i>See:</i> <a>newDisassociateRoleFromGroupResponse</a> smart
--   constructor.
data DisassociateRoleFromGroupResponse
DisassociateRoleFromGroupResponse' :: Maybe Text -> Int -> DisassociateRoleFromGroupResponse

-- | The time, in milliseconds since the epoch, when the role was
--   disassociated from the group.
[$sel:disassociatedAt:DisassociateRoleFromGroupResponse'] :: DisassociateRoleFromGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DisassociateRoleFromGroupResponse'] :: DisassociateRoleFromGroupResponse -> Int

-- | Create a value of <a>DisassociateRoleFromGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disassociatedAt:DisassociateRoleFromGroupResponse'</a>,
--   <a>disassociateRoleFromGroupResponse_disassociatedAt</a> - The time,
--   in milliseconds since the epoch, when the role was disassociated from
--   the group.
--   
--   <a>$sel:httpStatus:DisassociateRoleFromGroupResponse'</a>,
--   <a>disassociateRoleFromGroupResponse_httpStatus</a> - The response's
--   http status code.
newDisassociateRoleFromGroupResponse :: Int -> DisassociateRoleFromGroupResponse

-- | The time, in milliseconds since the epoch, when the role was
--   disassociated from the group.
disassociateRoleFromGroupResponse_disassociatedAt :: Lens' DisassociateRoleFromGroupResponse (Maybe Text)

-- | The response's http status code.
disassociateRoleFromGroupResponse_httpStatus :: Lens' DisassociateRoleFromGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance GHC.Show.Show Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance GHC.Read.Read Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance GHC.Classes.Eq Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance GHC.Generics.Generic Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroupResponse
instance GHC.Show.Show Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroupResponse
instance GHC.Read.Read Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroupResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DisassociateRoleFromGroup.DisassociateRoleFromGroup


-- | Deletes a subscription definition.
module Network.AWS.Greengrass.DeleteSubscriptionDefinition

-- | <i>See:</i> <a>newDeleteSubscriptionDefinition</a> smart constructor.
data DeleteSubscriptionDefinition
DeleteSubscriptionDefinition' :: Text -> DeleteSubscriptionDefinition

-- | The ID of the subscription definition.
[$sel:subscriptionDefinitionId:DeleteSubscriptionDefinition'] :: DeleteSubscriptionDefinition -> Text

-- | Create a value of <a>DeleteSubscriptionDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionId:DeleteSubscriptionDefinition'</a>,
--   <a>deleteSubscriptionDefinition_subscriptionDefinitionId</a> - The ID
--   of the subscription definition.
newDeleteSubscriptionDefinition :: Text -> DeleteSubscriptionDefinition

-- | The ID of the subscription definition.
deleteSubscriptionDefinition_subscriptionDefinitionId :: Lens' DeleteSubscriptionDefinition Text

-- | <i>See:</i> <a>newDeleteSubscriptionDefinitionResponse</a> smart
--   constructor.
data DeleteSubscriptionDefinitionResponse
DeleteSubscriptionDefinitionResponse' :: Int -> DeleteSubscriptionDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteSubscriptionDefinitionResponse'] :: DeleteSubscriptionDefinitionResponse -> Int

-- | Create a value of <a>DeleteSubscriptionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSubscriptionDefinitionResponse'</a>,
--   <a>deleteSubscriptionDefinitionResponse_httpStatus</a> - The
--   response's http status code.
newDeleteSubscriptionDefinitionResponse :: Int -> DeleteSubscriptionDefinitionResponse

-- | The response's http status code.
deleteSubscriptionDefinitionResponse_httpStatus :: Lens' DeleteSubscriptionDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance GHC.Show.Show Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance GHC.Read.Read Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DeleteSubscriptionDefinition.DeleteSubscriptionDefinition


-- | Deletes a resource definition.
module Network.AWS.Greengrass.DeleteResourceDefinition

-- | <i>See:</i> <a>newDeleteResourceDefinition</a> smart constructor.
data DeleteResourceDefinition
DeleteResourceDefinition' :: Text -> DeleteResourceDefinition

-- | The ID of the resource definition.
[$sel:resourceDefinitionId:DeleteResourceDefinition'] :: DeleteResourceDefinition -> Text

-- | Create a value of <a>DeleteResourceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDefinitionId:DeleteResourceDefinition'</a>,
--   <a>deleteResourceDefinition_resourceDefinitionId</a> - The ID of the
--   resource definition.
newDeleteResourceDefinition :: Text -> DeleteResourceDefinition

-- | The ID of the resource definition.
deleteResourceDefinition_resourceDefinitionId :: Lens' DeleteResourceDefinition Text

-- | <i>See:</i> <a>newDeleteResourceDefinitionResponse</a> smart
--   constructor.
data DeleteResourceDefinitionResponse
DeleteResourceDefinitionResponse' :: Int -> DeleteResourceDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteResourceDefinitionResponse'] :: DeleteResourceDefinitionResponse -> Int

-- | Create a value of <a>DeleteResourceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteResourceDefinitionResponse'</a>,
--   <a>deleteResourceDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteResourceDefinitionResponse :: Int -> DeleteResourceDefinitionResponse

-- | The response's http status code.
deleteResourceDefinitionResponse_httpStatus :: Lens' DeleteResourceDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance GHC.Show.Show Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance GHC.Read.Read Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DeleteResourceDefinition.DeleteResourceDefinition


-- | Deletes a logger definition.
module Network.AWS.Greengrass.DeleteLoggerDefinition

-- | <i>See:</i> <a>newDeleteLoggerDefinition</a> smart constructor.
data DeleteLoggerDefinition
DeleteLoggerDefinition' :: Text -> DeleteLoggerDefinition

-- | The ID of the logger definition.
[$sel:loggerDefinitionId:DeleteLoggerDefinition'] :: DeleteLoggerDefinition -> Text

-- | Create a value of <a>DeleteLoggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggerDefinitionId:DeleteLoggerDefinition'</a>,
--   <a>deleteLoggerDefinition_loggerDefinitionId</a> - The ID of the
--   logger definition.
newDeleteLoggerDefinition :: Text -> DeleteLoggerDefinition

-- | The ID of the logger definition.
deleteLoggerDefinition_loggerDefinitionId :: Lens' DeleteLoggerDefinition Text

-- | <i>See:</i> <a>newDeleteLoggerDefinitionResponse</a> smart
--   constructor.
data DeleteLoggerDefinitionResponse
DeleteLoggerDefinitionResponse' :: Int -> DeleteLoggerDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLoggerDefinitionResponse'] :: DeleteLoggerDefinitionResponse -> Int

-- | Create a value of <a>DeleteLoggerDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLoggerDefinitionResponse'</a>,
--   <a>deleteLoggerDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLoggerDefinitionResponse :: Int -> DeleteLoggerDefinitionResponse

-- | The response's http status code.
deleteLoggerDefinitionResponse_httpStatus :: Lens' DeleteLoggerDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance GHC.Show.Show Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance GHC.Read.Read Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DeleteLoggerDefinition.DeleteLoggerDefinition


-- | Deletes a group.
module Network.AWS.Greengrass.DeleteGroup

-- | <i>See:</i> <a>newDeleteGroup</a> smart constructor.
data DeleteGroup
DeleteGroup' :: Text -> DeleteGroup

-- | The ID of the Greengrass group.
[$sel:groupId:DeleteGroup'] :: DeleteGroup -> Text

-- | Create a value of <a>DeleteGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:DeleteGroup'</a>, <a>deleteGroup_groupId</a> - The ID
--   of the Greengrass group.
newDeleteGroup :: Text -> DeleteGroup

-- | The ID of the Greengrass group.
deleteGroup_groupId :: Lens' DeleteGroup Text

-- | <i>See:</i> <a>newDeleteGroupResponse</a> smart constructor.
data DeleteGroupResponse
DeleteGroupResponse' :: Int -> DeleteGroupResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteGroupResponse'] :: DeleteGroupResponse -> Int

-- | Create a value of <a>DeleteGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGroupResponse'</a>,
--   <a>deleteGroupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteGroupResponse :: Int -> DeleteGroupResponse

-- | The response's http status code.
deleteGroupResponse_httpStatus :: Lens' DeleteGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance GHC.Show.Show Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance GHC.Read.Read Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteGroup.DeleteGroupResponse
instance GHC.Show.Show Network.AWS.Greengrass.DeleteGroup.DeleteGroupResponse
instance GHC.Read.Read Network.AWS.Greengrass.DeleteGroup.DeleteGroupResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteGroup.DeleteGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteGroup.DeleteGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DeleteGroup.DeleteGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DeleteGroup.DeleteGroup


-- | Deletes a Lambda function definition.
module Network.AWS.Greengrass.DeleteFunctionDefinition

-- | <i>See:</i> <a>newDeleteFunctionDefinition</a> smart constructor.
data DeleteFunctionDefinition
DeleteFunctionDefinition' :: Text -> DeleteFunctionDefinition

-- | The ID of the Lambda function definition.
[$sel:functionDefinitionId:DeleteFunctionDefinition'] :: DeleteFunctionDefinition -> Text

-- | Create a value of <a>DeleteFunctionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionDefinitionId:DeleteFunctionDefinition'</a>,
--   <a>deleteFunctionDefinition_functionDefinitionId</a> - The ID of the
--   Lambda function definition.
newDeleteFunctionDefinition :: Text -> DeleteFunctionDefinition

-- | The ID of the Lambda function definition.
deleteFunctionDefinition_functionDefinitionId :: Lens' DeleteFunctionDefinition Text

-- | <i>See:</i> <a>newDeleteFunctionDefinitionResponse</a> smart
--   constructor.
data DeleteFunctionDefinitionResponse
DeleteFunctionDefinitionResponse' :: Int -> DeleteFunctionDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteFunctionDefinitionResponse'] :: DeleteFunctionDefinitionResponse -> Int

-- | Create a value of <a>DeleteFunctionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFunctionDefinitionResponse'</a>,
--   <a>deleteFunctionDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteFunctionDefinitionResponse :: Int -> DeleteFunctionDefinitionResponse

-- | The response's http status code.
deleteFunctionDefinitionResponse_httpStatus :: Lens' DeleteFunctionDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance GHC.Show.Show Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance GHC.Read.Read Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DeleteFunctionDefinition.DeleteFunctionDefinition


-- | Deletes a device definition.
module Network.AWS.Greengrass.DeleteDeviceDefinition

-- | <i>See:</i> <a>newDeleteDeviceDefinition</a> smart constructor.
data DeleteDeviceDefinition
DeleteDeviceDefinition' :: Text -> DeleteDeviceDefinition

-- | The ID of the device definition.
[$sel:deviceDefinitionId:DeleteDeviceDefinition'] :: DeleteDeviceDefinition -> Text

-- | Create a value of <a>DeleteDeviceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceDefinitionId:DeleteDeviceDefinition'</a>,
--   <a>deleteDeviceDefinition_deviceDefinitionId</a> - The ID of the
--   device definition.
newDeleteDeviceDefinition :: Text -> DeleteDeviceDefinition

-- | The ID of the device definition.
deleteDeviceDefinition_deviceDefinitionId :: Lens' DeleteDeviceDefinition Text

-- | <i>See:</i> <a>newDeleteDeviceDefinitionResponse</a> smart
--   constructor.
data DeleteDeviceDefinitionResponse
DeleteDeviceDefinitionResponse' :: Int -> DeleteDeviceDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDeviceDefinitionResponse'] :: DeleteDeviceDefinitionResponse -> Int

-- | Create a value of <a>DeleteDeviceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDeviceDefinitionResponse'</a>,
--   <a>deleteDeviceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDeviceDefinitionResponse :: Int -> DeleteDeviceDefinitionResponse

-- | The response's http status code.
deleteDeviceDefinitionResponse_httpStatus :: Lens' DeleteDeviceDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance GHC.Show.Show Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance GHC.Read.Read Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DeleteDeviceDefinition.DeleteDeviceDefinition


-- | Deletes a core definition.
module Network.AWS.Greengrass.DeleteCoreDefinition

-- | <i>See:</i> <a>newDeleteCoreDefinition</a> smart constructor.
data DeleteCoreDefinition
DeleteCoreDefinition' :: Text -> DeleteCoreDefinition

-- | The ID of the core definition.
[$sel:coreDefinitionId:DeleteCoreDefinition'] :: DeleteCoreDefinition -> Text

-- | Create a value of <a>DeleteCoreDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreDefinitionId:DeleteCoreDefinition'</a>,
--   <a>deleteCoreDefinition_coreDefinitionId</a> - The ID of the core
--   definition.
newDeleteCoreDefinition :: Text -> DeleteCoreDefinition

-- | The ID of the core definition.
deleteCoreDefinition_coreDefinitionId :: Lens' DeleteCoreDefinition Text

-- | <i>See:</i> <a>newDeleteCoreDefinitionResponse</a> smart constructor.
data DeleteCoreDefinitionResponse
DeleteCoreDefinitionResponse' :: Int -> DeleteCoreDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteCoreDefinitionResponse'] :: DeleteCoreDefinitionResponse -> Int

-- | Create a value of <a>DeleteCoreDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteCoreDefinitionResponse'</a>,
--   <a>deleteCoreDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteCoreDefinitionResponse :: Int -> DeleteCoreDefinitionResponse

-- | The response's http status code.
deleteCoreDefinitionResponse_httpStatus :: Lens' DeleteCoreDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance GHC.Show.Show Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance GHC.Read.Read Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DeleteCoreDefinition.DeleteCoreDefinition


-- | Deletes a connector definition.
module Network.AWS.Greengrass.DeleteConnectorDefinition

-- | <i>See:</i> <a>newDeleteConnectorDefinition</a> smart constructor.
data DeleteConnectorDefinition
DeleteConnectorDefinition' :: Text -> DeleteConnectorDefinition

-- | The ID of the connector definition.
[$sel:connectorDefinitionId:DeleteConnectorDefinition'] :: DeleteConnectorDefinition -> Text

-- | Create a value of <a>DeleteConnectorDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectorDefinitionId:DeleteConnectorDefinition'</a>,
--   <a>deleteConnectorDefinition_connectorDefinitionId</a> - The ID of the
--   connector definition.
newDeleteConnectorDefinition :: Text -> DeleteConnectorDefinition

-- | The ID of the connector definition.
deleteConnectorDefinition_connectorDefinitionId :: Lens' DeleteConnectorDefinition Text

-- | <i>See:</i> <a>newDeleteConnectorDefinitionResponse</a> smart
--   constructor.
data DeleteConnectorDefinitionResponse
DeleteConnectorDefinitionResponse' :: Int -> DeleteConnectorDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteConnectorDefinitionResponse'] :: DeleteConnectorDefinitionResponse -> Int

-- | Create a value of <a>DeleteConnectorDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteConnectorDefinitionResponse'</a>,
--   <a>deleteConnectorDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteConnectorDefinitionResponse :: Int -> DeleteConnectorDefinitionResponse

-- | The response's http status code.
deleteConnectorDefinitionResponse_httpStatus :: Lens' DeleteConnectorDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance GHC.Show.Show Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance GHC.Read.Read Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.DeleteConnectorDefinition.DeleteConnectorDefinition


-- | Creates a version of a subscription definition which has already been
--   defined.
module Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion

-- | <i>See:</i> <a>newCreateSubscriptionDefinitionVersion</a> smart
--   constructor.
data CreateSubscriptionDefinitionVersion
CreateSubscriptionDefinitionVersion' :: Maybe [Subscription] -> Maybe Text -> Text -> CreateSubscriptionDefinitionVersion

-- | A list of subscriptions.
[$sel:subscriptions:CreateSubscriptionDefinitionVersion'] :: CreateSubscriptionDefinitionVersion -> Maybe [Subscription]

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateSubscriptionDefinitionVersion'] :: CreateSubscriptionDefinitionVersion -> Maybe Text

-- | The ID of the subscription definition.
[$sel:subscriptionDefinitionId:CreateSubscriptionDefinitionVersion'] :: CreateSubscriptionDefinitionVersion -> Text

-- | Create a value of <a>CreateSubscriptionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptions:CreateSubscriptionDefinitionVersion'</a>,
--   <a>createSubscriptionDefinitionVersion_subscriptions</a> - A list of
--   subscriptions.
--   
--   <a>$sel:amznClientToken:CreateSubscriptionDefinitionVersion'</a>,
--   <a>createSubscriptionDefinitionVersion_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   
--   <a>$sel:subscriptionDefinitionId:CreateSubscriptionDefinitionVersion'</a>,
--   <a>createSubscriptionDefinitionVersion_subscriptionDefinitionId</a> -
--   The ID of the subscription definition.
newCreateSubscriptionDefinitionVersion :: Text -> CreateSubscriptionDefinitionVersion

-- | A list of subscriptions.
createSubscriptionDefinitionVersion_subscriptions :: Lens' CreateSubscriptionDefinitionVersion (Maybe [Subscription])

-- | A client token used to correlate requests and responses.
createSubscriptionDefinitionVersion_amznClientToken :: Lens' CreateSubscriptionDefinitionVersion (Maybe Text)

-- | The ID of the subscription definition.
createSubscriptionDefinitionVersion_subscriptionDefinitionId :: Lens' CreateSubscriptionDefinitionVersion Text

-- | <i>See:</i> <a>newCreateSubscriptionDefinitionVersionResponse</a>
--   smart constructor.
data CreateSubscriptionDefinitionVersionResponse
CreateSubscriptionDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSubscriptionDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:CreateSubscriptionDefinitionVersionResponse'] :: CreateSubscriptionDefinitionVersionResponse -> Maybe Text

-- | The ARN of the version.
[$sel:arn:CreateSubscriptionDefinitionVersionResponse'] :: CreateSubscriptionDefinitionVersionResponse -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:CreateSubscriptionDefinitionVersionResponse'] :: CreateSubscriptionDefinitionVersionResponse -> Maybe Text

-- | The ID of the version.
[$sel:version:CreateSubscriptionDefinitionVersionResponse'] :: CreateSubscriptionDefinitionVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSubscriptionDefinitionVersionResponse'] :: CreateSubscriptionDefinitionVersionResponse -> Int

-- | Create a value of <a>CreateSubscriptionDefinitionVersionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_creationTimestamp</a> -
--   The time, in milliseconds since the epoch, when the version was
--   created.
--   
--   <a>$sel:arn:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_arn</a> - The ARN of
--   the version.
--   
--   <a>$sel:id:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_id</a> - The ID of the
--   parent definition that the version is associated with.
--   
--   <a>$sel:version:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_version</a> - The ID of
--   the version.
--   
--   <a>$sel:httpStatus:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateSubscriptionDefinitionVersionResponse :: Int -> CreateSubscriptionDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createSubscriptionDefinitionVersionResponse_creationTimestamp :: Lens' CreateSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createSubscriptionDefinitionVersionResponse_arn :: Lens' CreateSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createSubscriptionDefinitionVersionResponse_id :: Lens' CreateSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createSubscriptionDefinitionVersionResponse_version :: Lens' CreateSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createSubscriptionDefinitionVersionResponse_httpStatus :: Lens' CreateSubscriptionDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateSubscriptionDefinitionVersion.CreateSubscriptionDefinitionVersion


-- | Creates a subscription definition. You may provide the initial version
--   of the subscription definition now or use
--   ''CreateSubscriptionDefinitionVersion'' at a later time.
module Network.AWS.Greengrass.CreateSubscriptionDefinition

-- | <i>See:</i> <a>newCreateSubscriptionDefinition</a> smart constructor.
data CreateSubscriptionDefinition
CreateSubscriptionDefinition' :: Maybe Text -> Maybe SubscriptionDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateSubscriptionDefinition

-- | The name of the subscription definition.
[$sel:name:CreateSubscriptionDefinition'] :: CreateSubscriptionDefinition -> Maybe Text

-- | Information about the initial version of the subscription definition.
[$sel:initialVersion:CreateSubscriptionDefinition'] :: CreateSubscriptionDefinition -> Maybe SubscriptionDefinitionVersion

-- | Tag(s) to add to the new resource.
[$sel:tags:CreateSubscriptionDefinition'] :: CreateSubscriptionDefinition -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateSubscriptionDefinition'] :: CreateSubscriptionDefinition -> Maybe Text

-- | Create a value of <a>CreateSubscriptionDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinition_name</a> - The name of the
--   subscription definition.
--   
--   <a>$sel:initialVersion:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinition_initialVersion</a> - Information about
--   the initial version of the subscription definition.
--   
--   <a>$sel:tags:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinition_amznClientToken</a> - A client token
--   used to correlate requests and responses.
newCreateSubscriptionDefinition :: CreateSubscriptionDefinition

-- | The name of the subscription definition.
createSubscriptionDefinition_name :: Lens' CreateSubscriptionDefinition (Maybe Text)

-- | Information about the initial version of the subscription definition.
createSubscriptionDefinition_initialVersion :: Lens' CreateSubscriptionDefinition (Maybe SubscriptionDefinitionVersion)

-- | Tag(s) to add to the new resource.
createSubscriptionDefinition_tags :: Lens' CreateSubscriptionDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createSubscriptionDefinition_amznClientToken :: Lens' CreateSubscriptionDefinition (Maybe Text)

-- | <i>See:</i> <a>newCreateSubscriptionDefinitionResponse</a> smart
--   constructor.
data CreateSubscriptionDefinitionResponse
CreateSubscriptionDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSubscriptionDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:CreateSubscriptionDefinitionResponse'] :: CreateSubscriptionDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:CreateSubscriptionDefinitionResponse'] :: CreateSubscriptionDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:CreateSubscriptionDefinitionResponse'] :: CreateSubscriptionDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:CreateSubscriptionDefinitionResponse'] :: CreateSubscriptionDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:CreateSubscriptionDefinitionResponse'] :: CreateSubscriptionDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:CreateSubscriptionDefinitionResponse'] :: CreateSubscriptionDefinitionResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:CreateSubscriptionDefinitionResponse'] :: CreateSubscriptionDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSubscriptionDefinitionResponse'] :: CreateSubscriptionDefinitionResponse -> Int

-- | Create a value of <a>CreateSubscriptionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was
--   created.
--   
--   <a>$sel:latestVersionArn:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_latestVersionArn</a> - The ARN
--   of the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_latestVersion</a> - The ID of
--   the latest version associated with the definition.
--   
--   <a>$sel:arn:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_id</a> - The ID of the
--   definition.
--   
--   <a>$sel:name:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   
--   <a>$sel:lastUpdatedTimestamp:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_httpStatus</a> - The
--   response's http status code.
newCreateSubscriptionDefinitionResponse :: Int -> CreateSubscriptionDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createSubscriptionDefinitionResponse_creationTimestamp :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createSubscriptionDefinitionResponse_latestVersionArn :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createSubscriptionDefinitionResponse_latestVersion :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createSubscriptionDefinitionResponse_arn :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createSubscriptionDefinitionResponse_id :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The name of the definition.
createSubscriptionDefinitionResponse_name :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createSubscriptionDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The response's http status code.
createSubscriptionDefinitionResponse_httpStatus :: Lens' CreateSubscriptionDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance GHC.Show.Show Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance GHC.Read.Read Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateSubscriptionDefinition.CreateSubscriptionDefinition


-- | Creates a software update for a core or group of cores (specified as
--   an IoT thing group.) Use this to update the OTA Agent as well as the
--   Greengrass core software. It makes use of the IoT Jobs feature which
--   provides additional commands to manage a Greengrass core software
--   update job.
module Network.AWS.Greengrass.CreateSoftwareUpdateJob

-- | <i>See:</i> <a>newCreateSoftwareUpdateJob</a> smart constructor.
data CreateSoftwareUpdateJob
CreateSoftwareUpdateJob' :: Maybe UpdateAgentLogLevel -> Maybe Text -> Text -> UpdateTargetsArchitecture -> SoftwareToUpdate -> [Text] -> UpdateTargetsOperatingSystem -> CreateSoftwareUpdateJob
[$sel:updateAgentLogLevel:CreateSoftwareUpdateJob'] :: CreateSoftwareUpdateJob -> Maybe UpdateAgentLogLevel

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateSoftwareUpdateJob'] :: CreateSoftwareUpdateJob -> Maybe Text
[$sel:s3UrlSignerRole:CreateSoftwareUpdateJob'] :: CreateSoftwareUpdateJob -> Text
[$sel:updateTargetsArchitecture:CreateSoftwareUpdateJob'] :: CreateSoftwareUpdateJob -> UpdateTargetsArchitecture
[$sel:softwareToUpdate:CreateSoftwareUpdateJob'] :: CreateSoftwareUpdateJob -> SoftwareToUpdate
[$sel:updateTargets:CreateSoftwareUpdateJob'] :: CreateSoftwareUpdateJob -> [Text]
[$sel:updateTargetsOperatingSystem:CreateSoftwareUpdateJob'] :: CreateSoftwareUpdateJob -> UpdateTargetsOperatingSystem

-- | Create a value of <a>CreateSoftwareUpdateJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updateAgentLogLevel:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_updateAgentLogLevel</a> - Undocumented
--   member.
--   
--   <a>$sel:amznClientToken:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_amznClientToken</a> - A client token used
--   to correlate requests and responses.
--   
--   <a>$sel:s3UrlSignerRole:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_s3UrlSignerRole</a> - Undocumented member.
--   
--   <a>$sel:updateTargetsArchitecture:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_updateTargetsArchitecture</a> -
--   Undocumented member.
--   
--   <a>$sel:softwareToUpdate:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_softwareToUpdate</a> - Undocumented member.
--   
--   <a>$sel:updateTargets:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_updateTargets</a> - Undocumented member.
--   
--   <a>$sel:updateTargetsOperatingSystem:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_updateTargetsOperatingSystem</a> -
--   Undocumented member.
newCreateSoftwareUpdateJob :: Text -> UpdateTargetsArchitecture -> SoftwareToUpdate -> UpdateTargetsOperatingSystem -> CreateSoftwareUpdateJob

-- | Undocumented member.
createSoftwareUpdateJob_updateAgentLogLevel :: Lens' CreateSoftwareUpdateJob (Maybe UpdateAgentLogLevel)

-- | A client token used to correlate requests and responses.
createSoftwareUpdateJob_amznClientToken :: Lens' CreateSoftwareUpdateJob (Maybe Text)

-- | Undocumented member.
createSoftwareUpdateJob_s3UrlSignerRole :: Lens' CreateSoftwareUpdateJob Text

-- | Undocumented member.
createSoftwareUpdateJob_updateTargetsArchitecture :: Lens' CreateSoftwareUpdateJob UpdateTargetsArchitecture

-- | Undocumented member.
createSoftwareUpdateJob_softwareToUpdate :: Lens' CreateSoftwareUpdateJob SoftwareToUpdate

-- | Undocumented member.
createSoftwareUpdateJob_updateTargets :: Lens' CreateSoftwareUpdateJob [Text]

-- | Undocumented member.
createSoftwareUpdateJob_updateTargetsOperatingSystem :: Lens' CreateSoftwareUpdateJob UpdateTargetsOperatingSystem

-- | <i>See:</i> <a>newCreateSoftwareUpdateJobResponse</a> smart
--   constructor.
data CreateSoftwareUpdateJobResponse
CreateSoftwareUpdateJobResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSoftwareUpdateJobResponse

-- | The IoT Job Id corresponding to this update.
[$sel:iotJobId:CreateSoftwareUpdateJobResponse'] :: CreateSoftwareUpdateJobResponse -> Maybe Text

-- | The IoT Job ARN corresponding to this update.
[$sel:iotJobArn:CreateSoftwareUpdateJobResponse'] :: CreateSoftwareUpdateJobResponse -> Maybe Text

-- | The software version installed on the device or devices after the
--   update.
[$sel:platformSoftwareVersion:CreateSoftwareUpdateJobResponse'] :: CreateSoftwareUpdateJobResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSoftwareUpdateJobResponse'] :: CreateSoftwareUpdateJobResponse -> Int

-- | Create a value of <a>CreateSoftwareUpdateJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotJobId:CreateSoftwareUpdateJobResponse'</a>,
--   <a>createSoftwareUpdateJobResponse_iotJobId</a> - The IoT Job Id
--   corresponding to this update.
--   
--   <a>$sel:iotJobArn:CreateSoftwareUpdateJobResponse'</a>,
--   <a>createSoftwareUpdateJobResponse_iotJobArn</a> - The IoT Job ARN
--   corresponding to this update.
--   
--   <a>$sel:platformSoftwareVersion:CreateSoftwareUpdateJobResponse'</a>,
--   <a>createSoftwareUpdateJobResponse_platformSoftwareVersion</a> - The
--   software version installed on the device or devices after the update.
--   
--   <a>$sel:httpStatus:CreateSoftwareUpdateJobResponse'</a>,
--   <a>createSoftwareUpdateJobResponse_httpStatus</a> - The response's
--   http status code.
newCreateSoftwareUpdateJobResponse :: Int -> CreateSoftwareUpdateJobResponse

-- | The IoT Job Id corresponding to this update.
createSoftwareUpdateJobResponse_iotJobId :: Lens' CreateSoftwareUpdateJobResponse (Maybe Text)

-- | The IoT Job ARN corresponding to this update.
createSoftwareUpdateJobResponse_iotJobArn :: Lens' CreateSoftwareUpdateJobResponse (Maybe Text)

-- | The software version installed on the device or devices after the
--   update.
createSoftwareUpdateJobResponse_platformSoftwareVersion :: Lens' CreateSoftwareUpdateJobResponse (Maybe Text)

-- | The response's http status code.
createSoftwareUpdateJobResponse_httpStatus :: Lens' CreateSoftwareUpdateJobResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance GHC.Show.Show Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance GHC.Read.Read Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJobResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJobResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJobResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJobResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJobResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateSoftwareUpdateJob.CreateSoftwareUpdateJob


-- | Creates a version of a resource definition that has already been
--   defined.
module Network.AWS.Greengrass.CreateResourceDefinitionVersion

-- | <i>See:</i> <a>newCreateResourceDefinitionVersion</a> smart
--   constructor.
data CreateResourceDefinitionVersion
CreateResourceDefinitionVersion' :: Maybe [Resource] -> Maybe Text -> Text -> CreateResourceDefinitionVersion

-- | A list of resources.
[$sel:resources:CreateResourceDefinitionVersion'] :: CreateResourceDefinitionVersion -> Maybe [Resource]

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateResourceDefinitionVersion'] :: CreateResourceDefinitionVersion -> Maybe Text

-- | The ID of the resource definition.
[$sel:resourceDefinitionId:CreateResourceDefinitionVersion'] :: CreateResourceDefinitionVersion -> Text

-- | Create a value of <a>CreateResourceDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:CreateResourceDefinitionVersion'</a>,
--   <a>createResourceDefinitionVersion_resources</a> - A list of
--   resources.
--   
--   <a>$sel:amznClientToken:CreateResourceDefinitionVersion'</a>,
--   <a>createResourceDefinitionVersion_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   <a>$sel:resourceDefinitionId:CreateResourceDefinitionVersion'</a>,
--   <a>createResourceDefinitionVersion_resourceDefinitionId</a> - The ID
--   of the resource definition.
newCreateResourceDefinitionVersion :: Text -> CreateResourceDefinitionVersion

-- | A list of resources.
createResourceDefinitionVersion_resources :: Lens' CreateResourceDefinitionVersion (Maybe [Resource])

-- | A client token used to correlate requests and responses.
createResourceDefinitionVersion_amznClientToken :: Lens' CreateResourceDefinitionVersion (Maybe Text)

-- | The ID of the resource definition.
createResourceDefinitionVersion_resourceDefinitionId :: Lens' CreateResourceDefinitionVersion Text

-- | <i>See:</i> <a>newCreateResourceDefinitionVersionResponse</a> smart
--   constructor.
data CreateResourceDefinitionVersionResponse
CreateResourceDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateResourceDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:CreateResourceDefinitionVersionResponse'] :: CreateResourceDefinitionVersionResponse -> Maybe Text

-- | The ARN of the version.
[$sel:arn:CreateResourceDefinitionVersionResponse'] :: CreateResourceDefinitionVersionResponse -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:CreateResourceDefinitionVersionResponse'] :: CreateResourceDefinitionVersionResponse -> Maybe Text

-- | The ID of the version.
[$sel:version:CreateResourceDefinitionVersionResponse'] :: CreateResourceDefinitionVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateResourceDefinitionVersionResponse'] :: CreateResourceDefinitionVersionResponse -> Int

-- | Create a value of <a>CreateResourceDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_id</a> - The ID of the
--   parent definition that the version is associated with.
--   
--   <a>$sel:version:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateResourceDefinitionVersionResponse :: Int -> CreateResourceDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createResourceDefinitionVersionResponse_creationTimestamp :: Lens' CreateResourceDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createResourceDefinitionVersionResponse_arn :: Lens' CreateResourceDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createResourceDefinitionVersionResponse_id :: Lens' CreateResourceDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createResourceDefinitionVersionResponse_version :: Lens' CreateResourceDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createResourceDefinitionVersionResponse_httpStatus :: Lens' CreateResourceDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateResourceDefinitionVersion.CreateResourceDefinitionVersion


-- | Creates a resource definition which contains a list of resources to be
--   used in a group. You can create an initial version of the definition
--   by providing a list of resources now, or use
--   ''CreateResourceDefinitionVersion'' later.
module Network.AWS.Greengrass.CreateResourceDefinition

-- | <i>See:</i> <a>newCreateResourceDefinition</a> smart constructor.
data CreateResourceDefinition
CreateResourceDefinition' :: Maybe Text -> Maybe ResourceDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateResourceDefinition

-- | The name of the resource definition.
[$sel:name:CreateResourceDefinition'] :: CreateResourceDefinition -> Maybe Text

-- | Information about the initial version of the resource definition.
[$sel:initialVersion:CreateResourceDefinition'] :: CreateResourceDefinition -> Maybe ResourceDefinitionVersion

-- | Tag(s) to add to the new resource.
[$sel:tags:CreateResourceDefinition'] :: CreateResourceDefinition -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateResourceDefinition'] :: CreateResourceDefinition -> Maybe Text

-- | Create a value of <a>CreateResourceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateResourceDefinition'</a>,
--   <a>createResourceDefinition_name</a> - The name of the resource
--   definition.
--   
--   <a>$sel:initialVersion:CreateResourceDefinition'</a>,
--   <a>createResourceDefinition_initialVersion</a> - Information about the
--   initial version of the resource definition.
--   
--   <a>$sel:tags:CreateResourceDefinition'</a>,
--   <a>createResourceDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateResourceDefinition'</a>,
--   <a>createResourceDefinition_amznClientToken</a> - A client token used
--   to correlate requests and responses.
newCreateResourceDefinition :: CreateResourceDefinition

-- | The name of the resource definition.
createResourceDefinition_name :: Lens' CreateResourceDefinition (Maybe Text)

-- | Information about the initial version of the resource definition.
createResourceDefinition_initialVersion :: Lens' CreateResourceDefinition (Maybe ResourceDefinitionVersion)

-- | Tag(s) to add to the new resource.
createResourceDefinition_tags :: Lens' CreateResourceDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createResourceDefinition_amznClientToken :: Lens' CreateResourceDefinition (Maybe Text)

-- | <i>See:</i> <a>newCreateResourceDefinitionResponse</a> smart
--   constructor.
data CreateResourceDefinitionResponse
CreateResourceDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateResourceDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:CreateResourceDefinitionResponse'] :: CreateResourceDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:CreateResourceDefinitionResponse'] :: CreateResourceDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:CreateResourceDefinitionResponse'] :: CreateResourceDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:CreateResourceDefinitionResponse'] :: CreateResourceDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:CreateResourceDefinitionResponse'] :: CreateResourceDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:CreateResourceDefinitionResponse'] :: CreateResourceDefinitionResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:CreateResourceDefinitionResponse'] :: CreateResourceDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateResourceDefinitionResponse'] :: CreateResourceDefinitionResponse -> Int

-- | Create a value of <a>CreateResourceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateResourceDefinition'</a>,
--   <a>createResourceDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newCreateResourceDefinitionResponse :: Int -> CreateResourceDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createResourceDefinitionResponse_creationTimestamp :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createResourceDefinitionResponse_latestVersionArn :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createResourceDefinitionResponse_latestVersion :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createResourceDefinitionResponse_arn :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createResourceDefinitionResponse_id :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The name of the definition.
createResourceDefinitionResponse_name :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createResourceDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The response's http status code.
createResourceDefinitionResponse_httpStatus :: Lens' CreateResourceDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance GHC.Show.Show Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance GHC.Read.Read Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateResourceDefinition.CreateResourceDefinition


-- | Creates a version of a logger definition that has already been
--   defined.
module Network.AWS.Greengrass.CreateLoggerDefinitionVersion

-- | <i>See:</i> <a>newCreateLoggerDefinitionVersion</a> smart constructor.
data CreateLoggerDefinitionVersion
CreateLoggerDefinitionVersion' :: Maybe [GreengrassLogger] -> Maybe Text -> Text -> CreateLoggerDefinitionVersion

-- | A list of loggers.
[$sel:loggers:CreateLoggerDefinitionVersion'] :: CreateLoggerDefinitionVersion -> Maybe [GreengrassLogger]

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateLoggerDefinitionVersion'] :: CreateLoggerDefinitionVersion -> Maybe Text

-- | The ID of the logger definition.
[$sel:loggerDefinitionId:CreateLoggerDefinitionVersion'] :: CreateLoggerDefinitionVersion -> Text

-- | Create a value of <a>CreateLoggerDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggers:CreateLoggerDefinitionVersion'</a>,
--   <a>createLoggerDefinitionVersion_loggers</a> - A list of loggers.
--   
--   <a>$sel:amznClientToken:CreateLoggerDefinitionVersion'</a>,
--   <a>createLoggerDefinitionVersion_amznClientToken</a> - A client token
--   used to correlate requests and responses.
--   
--   <a>$sel:loggerDefinitionId:CreateLoggerDefinitionVersion'</a>,
--   <a>createLoggerDefinitionVersion_loggerDefinitionId</a> - The ID of
--   the logger definition.
newCreateLoggerDefinitionVersion :: Text -> CreateLoggerDefinitionVersion

-- | A list of loggers.
createLoggerDefinitionVersion_loggers :: Lens' CreateLoggerDefinitionVersion (Maybe [GreengrassLogger])

-- | A client token used to correlate requests and responses.
createLoggerDefinitionVersion_amznClientToken :: Lens' CreateLoggerDefinitionVersion (Maybe Text)

-- | The ID of the logger definition.
createLoggerDefinitionVersion_loggerDefinitionId :: Lens' CreateLoggerDefinitionVersion Text

-- | <i>See:</i> <a>newCreateLoggerDefinitionVersionResponse</a> smart
--   constructor.
data CreateLoggerDefinitionVersionResponse
CreateLoggerDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateLoggerDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:CreateLoggerDefinitionVersionResponse'] :: CreateLoggerDefinitionVersionResponse -> Maybe Text

-- | The ARN of the version.
[$sel:arn:CreateLoggerDefinitionVersionResponse'] :: CreateLoggerDefinitionVersionResponse -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:CreateLoggerDefinitionVersionResponse'] :: CreateLoggerDefinitionVersionResponse -> Maybe Text

-- | The ID of the version.
[$sel:version:CreateLoggerDefinitionVersionResponse'] :: CreateLoggerDefinitionVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateLoggerDefinitionVersionResponse'] :: CreateLoggerDefinitionVersionResponse -> Int

-- | Create a value of <a>CreateLoggerDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_id</a> - The ID of the parent
--   definition that the version is associated with.
--   
--   <a>$sel:version:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateLoggerDefinitionVersionResponse :: Int -> CreateLoggerDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createLoggerDefinitionVersionResponse_creationTimestamp :: Lens' CreateLoggerDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createLoggerDefinitionVersionResponse_arn :: Lens' CreateLoggerDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createLoggerDefinitionVersionResponse_id :: Lens' CreateLoggerDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createLoggerDefinitionVersionResponse_version :: Lens' CreateLoggerDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createLoggerDefinitionVersionResponse_httpStatus :: Lens' CreateLoggerDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateLoggerDefinitionVersion.CreateLoggerDefinitionVersion


-- | Creates a logger definition. You may provide the initial version of
--   the logger definition now or use ''CreateLoggerDefinitionVersion'' at
--   a later time.
module Network.AWS.Greengrass.CreateLoggerDefinition

-- | <i>See:</i> <a>newCreateLoggerDefinition</a> smart constructor.
data CreateLoggerDefinition
CreateLoggerDefinition' :: Maybe Text -> Maybe LoggerDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateLoggerDefinition

-- | The name of the logger definition.
[$sel:name:CreateLoggerDefinition'] :: CreateLoggerDefinition -> Maybe Text

-- | Information about the initial version of the logger definition.
[$sel:initialVersion:CreateLoggerDefinition'] :: CreateLoggerDefinition -> Maybe LoggerDefinitionVersion

-- | Tag(s) to add to the new resource.
[$sel:tags:CreateLoggerDefinition'] :: CreateLoggerDefinition -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateLoggerDefinition'] :: CreateLoggerDefinition -> Maybe Text

-- | Create a value of <a>CreateLoggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinition_name</a> - The name of the logger
--   definition.
--   
--   <a>$sel:initialVersion:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinition_initialVersion</a> - Information about the
--   initial version of the logger definition.
--   
--   <a>$sel:tags:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinition_amznClientToken</a> - A client token used to
--   correlate requests and responses.
newCreateLoggerDefinition :: CreateLoggerDefinition

-- | The name of the logger definition.
createLoggerDefinition_name :: Lens' CreateLoggerDefinition (Maybe Text)

-- | Information about the initial version of the logger definition.
createLoggerDefinition_initialVersion :: Lens' CreateLoggerDefinition (Maybe LoggerDefinitionVersion)

-- | Tag(s) to add to the new resource.
createLoggerDefinition_tags :: Lens' CreateLoggerDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createLoggerDefinition_amznClientToken :: Lens' CreateLoggerDefinition (Maybe Text)

-- | <i>See:</i> <a>newCreateLoggerDefinitionResponse</a> smart
--   constructor.
data CreateLoggerDefinitionResponse
CreateLoggerDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateLoggerDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:CreateLoggerDefinitionResponse'] :: CreateLoggerDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:CreateLoggerDefinitionResponse'] :: CreateLoggerDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:CreateLoggerDefinitionResponse'] :: CreateLoggerDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:CreateLoggerDefinitionResponse'] :: CreateLoggerDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:CreateLoggerDefinitionResponse'] :: CreateLoggerDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:CreateLoggerDefinitionResponse'] :: CreateLoggerDefinitionResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:CreateLoggerDefinitionResponse'] :: CreateLoggerDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateLoggerDefinitionResponse'] :: CreateLoggerDefinitionResponse -> Int

-- | Create a value of <a>CreateLoggerDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newCreateLoggerDefinitionResponse :: Int -> CreateLoggerDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createLoggerDefinitionResponse_creationTimestamp :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createLoggerDefinitionResponse_latestVersionArn :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createLoggerDefinitionResponse_latestVersion :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createLoggerDefinitionResponse_arn :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createLoggerDefinitionResponse_id :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The name of the definition.
createLoggerDefinitionResponse_name :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createLoggerDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The response's http status code.
createLoggerDefinitionResponse_httpStatus :: Lens' CreateLoggerDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance GHC.Show.Show Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance GHC.Read.Read Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateLoggerDefinition.CreateLoggerDefinition


-- | Creates a version of a group which has already been defined.
module Network.AWS.Greengrass.CreateGroupVersion

-- | <i>See:</i> <a>newCreateGroupVersion</a> smart constructor.
data CreateGroupVersion
CreateGroupVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> CreateGroupVersion

-- | The ARN of the subscription definition version for this group.
[$sel:subscriptionDefinitionVersionArn:CreateGroupVersion'] :: CreateGroupVersion -> Maybe Text

-- | The ARN of the core definition version for this group.
[$sel:coreDefinitionVersionArn:CreateGroupVersion'] :: CreateGroupVersion -> Maybe Text

-- | The ARN of the connector definition version for this group.
[$sel:connectorDefinitionVersionArn:CreateGroupVersion'] :: CreateGroupVersion -> Maybe Text

-- | The ARN of the logger definition version for this group.
[$sel:loggerDefinitionVersionArn:CreateGroupVersion'] :: CreateGroupVersion -> Maybe Text

-- | The ARN of the resource definition version for this group.
[$sel:resourceDefinitionVersionArn:CreateGroupVersion'] :: CreateGroupVersion -> Maybe Text

-- | The ARN of the function definition version for this group.
[$sel:functionDefinitionVersionArn:CreateGroupVersion'] :: CreateGroupVersion -> Maybe Text

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateGroupVersion'] :: CreateGroupVersion -> Maybe Text

-- | The ARN of the device definition version for this group.
[$sel:deviceDefinitionVersionArn:CreateGroupVersion'] :: CreateGroupVersion -> Maybe Text

-- | The ID of the Greengrass group.
[$sel:groupId:CreateGroupVersion'] :: CreateGroupVersion -> Text

-- | Create a value of <a>CreateGroupVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_subscriptionDefinitionVersionArn</a> - The ARN
--   of the subscription definition version for this group.
--   
--   <a>$sel:coreDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_coreDefinitionVersionArn</a> - The ARN of the
--   core definition version for this group.
--   
--   <a>$sel:connectorDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_connectorDefinitionVersionArn</a> - The ARN of
--   the connector definition version for this group.
--   
--   <a>$sel:loggerDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_loggerDefinitionVersionArn</a> - The ARN of the
--   logger definition version for this group.
--   
--   <a>$sel:resourceDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_resourceDefinitionVersionArn</a> - The ARN of
--   the resource definition version for this group.
--   
--   <a>$sel:functionDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_functionDefinitionVersionArn</a> - The ARN of
--   the function definition version for this group.
--   
--   <a>$sel:amznClientToken:CreateGroupVersion'</a>,
--   <a>createGroupVersion_amznClientToken</a> - A client token used to
--   correlate requests and responses.
--   
--   <a>$sel:deviceDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_deviceDefinitionVersionArn</a> - The ARN of the
--   device definition version for this group.
--   
--   <a>$sel:groupId:CreateGroupVersion'</a>,
--   <a>createGroupVersion_groupId</a> - The ID of the Greengrass group.
newCreateGroupVersion :: Text -> CreateGroupVersion

-- | The ARN of the subscription definition version for this group.
createGroupVersion_subscriptionDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the core definition version for this group.
createGroupVersion_coreDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the connector definition version for this group.
createGroupVersion_connectorDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the logger definition version for this group.
createGroupVersion_loggerDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the resource definition version for this group.
createGroupVersion_resourceDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the function definition version for this group.
createGroupVersion_functionDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | A client token used to correlate requests and responses.
createGroupVersion_amznClientToken :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the device definition version for this group.
createGroupVersion_deviceDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ID of the Greengrass group.
createGroupVersion_groupId :: Lens' CreateGroupVersion Text

-- | <i>See:</i> <a>newCreateGroupVersionResponse</a> smart constructor.
data CreateGroupVersionResponse
CreateGroupVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateGroupVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:CreateGroupVersionResponse'] :: CreateGroupVersionResponse -> Maybe Text

-- | The ARN of the version.
[$sel:arn:CreateGroupVersionResponse'] :: CreateGroupVersionResponse -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:CreateGroupVersionResponse'] :: CreateGroupVersionResponse -> Maybe Text

-- | The ID of the version.
[$sel:version:CreateGroupVersionResponse'] :: CreateGroupVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateGroupVersionResponse'] :: CreateGroupVersionResponse -> Int

-- | Create a value of <a>CreateGroupVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_arn</a> - The ARN of the version.
--   
--   <a>$sel:id:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_id</a> - The ID of the parent definition
--   that the version is associated with.
--   
--   <a>$sel:version:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_version</a> - The ID of the version.
--   
--   <a>$sel:httpStatus:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateGroupVersionResponse :: Int -> CreateGroupVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createGroupVersionResponse_creationTimestamp :: Lens' CreateGroupVersionResponse (Maybe Text)

-- | The ARN of the version.
createGroupVersionResponse_arn :: Lens' CreateGroupVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createGroupVersionResponse_id :: Lens' CreateGroupVersionResponse (Maybe Text)

-- | The ID of the version.
createGroupVersionResponse_version :: Lens' CreateGroupVersionResponse (Maybe Text)

-- | The response's http status code.
createGroupVersionResponse_httpStatus :: Lens' CreateGroupVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance GHC.Show.Show Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance GHC.Read.Read Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateGroupVersion.CreateGroupVersion


-- | Creates a CA for the group. If a CA already exists, it will rotate the
--   existing CA.
module Network.AWS.Greengrass.CreateGroupCertificateAuthority

-- | <i>See:</i> <a>newCreateGroupCertificateAuthority</a> smart
--   constructor.
data CreateGroupCertificateAuthority
CreateGroupCertificateAuthority' :: Maybe Text -> Text -> CreateGroupCertificateAuthority

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateGroupCertificateAuthority'] :: CreateGroupCertificateAuthority -> Maybe Text

-- | The ID of the Greengrass group.
[$sel:groupId:CreateGroupCertificateAuthority'] :: CreateGroupCertificateAuthority -> Text

-- | Create a value of <a>CreateGroupCertificateAuthority</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amznClientToken:CreateGroupCertificateAuthority'</a>,
--   <a>createGroupCertificateAuthority_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   <a>$sel:groupId:CreateGroupCertificateAuthority'</a>,
--   <a>createGroupCertificateAuthority_groupId</a> - The ID of the
--   Greengrass group.
newCreateGroupCertificateAuthority :: Text -> CreateGroupCertificateAuthority

-- | A client token used to correlate requests and responses.
createGroupCertificateAuthority_amznClientToken :: Lens' CreateGroupCertificateAuthority (Maybe Text)

-- | The ID of the Greengrass group.
createGroupCertificateAuthority_groupId :: Lens' CreateGroupCertificateAuthority Text

-- | <i>See:</i> <a>newCreateGroupCertificateAuthorityResponse</a> smart
--   constructor.
data CreateGroupCertificateAuthorityResponse
CreateGroupCertificateAuthorityResponse' :: Maybe Text -> Int -> CreateGroupCertificateAuthorityResponse

-- | The ARN of the group certificate authority.
[$sel:groupCertificateAuthorityArn:CreateGroupCertificateAuthorityResponse'] :: CreateGroupCertificateAuthorityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateGroupCertificateAuthorityResponse'] :: CreateGroupCertificateAuthorityResponse -> Int

-- | Create a value of <a>CreateGroupCertificateAuthorityResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorityArn:CreateGroupCertificateAuthorityResponse'</a>,
--   <a>createGroupCertificateAuthorityResponse_groupCertificateAuthorityArn</a>
--   - The ARN of the group certificate authority.
--   
--   <a>$sel:httpStatus:CreateGroupCertificateAuthorityResponse'</a>,
--   <a>createGroupCertificateAuthorityResponse_httpStatus</a> - The
--   response's http status code.
newCreateGroupCertificateAuthorityResponse :: Int -> CreateGroupCertificateAuthorityResponse

-- | The ARN of the group certificate authority.
createGroupCertificateAuthorityResponse_groupCertificateAuthorityArn :: Lens' CreateGroupCertificateAuthorityResponse (Maybe Text)

-- | The response's http status code.
createGroupCertificateAuthorityResponse_httpStatus :: Lens' CreateGroupCertificateAuthorityResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance GHC.Show.Show Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance GHC.Read.Read Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthorityResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthorityResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthorityResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthorityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthorityResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateGroupCertificateAuthority.CreateGroupCertificateAuthority


-- | Creates a group. You may provide the initial version of the group or
--   use ''CreateGroupVersion'' at a later time. Tip: You can use the
--   ''gg_group_setup'' package
--   (https://github.com/awslabs/aws-greengrass-group-setup) as a library
--   or command-line application to create and deploy Greengrass groups.
module Network.AWS.Greengrass.CreateGroup

-- | <i>See:</i> <a>newCreateGroup</a> smart constructor.
data CreateGroup
CreateGroup' :: Maybe GroupVersion -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> CreateGroup

-- | Information about the initial version of the group.
[$sel:initialVersion:CreateGroup'] :: CreateGroup -> Maybe GroupVersion

-- | Tag(s) to add to the new resource.
[$sel:tags:CreateGroup'] :: CreateGroup -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateGroup'] :: CreateGroup -> Maybe Text

-- | The name of the group.
[$sel:name:CreateGroup'] :: CreateGroup -> Text

-- | Create a value of <a>CreateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initialVersion:CreateGroup'</a>,
--   <a>createGroup_initialVersion</a> - Information about the initial
--   version of the group.
--   
--   <a>$sel:tags:CreateGroup'</a>, <a>createGroup_tags</a> - Tag(s) to add
--   to the new resource.
--   
--   <a>$sel:amznClientToken:CreateGroup'</a>,
--   <a>createGroup_amznClientToken</a> - A client token used to correlate
--   requests and responses.
--   
--   <a>$sel:name:CreateGroup'</a>, <a>createGroup_name</a> - The name of
--   the group.
newCreateGroup :: Text -> CreateGroup

-- | Information about the initial version of the group.
createGroup_initialVersion :: Lens' CreateGroup (Maybe GroupVersion)

-- | Tag(s) to add to the new resource.
createGroup_tags :: Lens' CreateGroup (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createGroup_amznClientToken :: Lens' CreateGroup (Maybe Text)

-- | The name of the group.
createGroup_name :: Lens' CreateGroup Text

-- | <i>See:</i> <a>newCreateGroupResponse</a> smart constructor.
data CreateGroupResponse
CreateGroupResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateGroupResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:CreateGroupResponse'] :: CreateGroupResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:CreateGroupResponse'] :: CreateGroupResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:CreateGroupResponse'] :: CreateGroupResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:CreateGroupResponse'] :: CreateGroupResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:CreateGroupResponse'] :: CreateGroupResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:CreateGroupResponse'] :: CreateGroupResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:CreateGroupResponse'] :: CreateGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateGroupResponse'] :: CreateGroupResponse -> Int

-- | Create a value of <a>CreateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateGroupResponse'</a>,
--   <a>createGroupResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateGroupResponse'</a>,
--   <a>createGroupResponse_latestVersionArn</a> - The ARN of the latest
--   version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateGroupResponse'</a>,
--   <a>createGroupResponse_latestVersion</a> - The ID of the latest
--   version associated with the definition.
--   
--   <a>$sel:arn:CreateGroupResponse'</a>, <a>createGroupResponse_arn</a> -
--   The ARN of the definition.
--   
--   <a>$sel:id:CreateGroupResponse'</a>, <a>createGroupResponse_id</a> -
--   The ID of the definition.
--   
--   <a>$sel:name:CreateGroup'</a>, <a>createGroupResponse_name</a> - The
--   name of the definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateGroupResponse'</a>,
--   <a>createGroupResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:CreateGroupResponse'</a>,
--   <a>createGroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateGroupResponse :: Int -> CreateGroupResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createGroupResponse_creationTimestamp :: Lens' CreateGroupResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createGroupResponse_latestVersionArn :: Lens' CreateGroupResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createGroupResponse_latestVersion :: Lens' CreateGroupResponse (Maybe Text)

-- | The ARN of the definition.
createGroupResponse_arn :: Lens' CreateGroupResponse (Maybe Text)

-- | The ID of the definition.
createGroupResponse_id :: Lens' CreateGroupResponse (Maybe Text)

-- | The name of the definition.
createGroupResponse_name :: Lens' CreateGroupResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createGroupResponse_lastUpdatedTimestamp :: Lens' CreateGroupResponse (Maybe Text)

-- | The response's http status code.
createGroupResponse_httpStatus :: Lens' CreateGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateGroup.CreateGroup
instance GHC.Show.Show Network.AWS.Greengrass.CreateGroup.CreateGroup
instance GHC.Read.Read Network.AWS.Greengrass.CreateGroup.CreateGroup
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateGroup.CreateGroup
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateGroup.CreateGroupResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateGroup.CreateGroupResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateGroup.CreateGroupResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateGroup.CreateGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateGroup.CreateGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateGroup.CreateGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateGroup.CreateGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateGroup.CreateGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateGroup.CreateGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateGroup.CreateGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateGroup.CreateGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateGroup.CreateGroup


-- | Creates a version of a Lambda function definition that has already
--   been defined.
module Network.AWS.Greengrass.CreateFunctionDefinitionVersion

-- | Information needed to create a function definition version.
--   
--   <i>See:</i> <a>newCreateFunctionDefinitionVersion</a> smart
--   constructor.
data CreateFunctionDefinitionVersion
CreateFunctionDefinitionVersion' :: Maybe [Function] -> Maybe FunctionDefaultConfig -> Maybe Text -> Text -> CreateFunctionDefinitionVersion

-- | A list of Lambda functions in this function definition version.
[$sel:functions:CreateFunctionDefinitionVersion'] :: CreateFunctionDefinitionVersion -> Maybe [Function]

-- | The default configuration that applies to all Lambda functions in this
--   function definition version. Individual Lambda functions can override
--   these settings.
[$sel:defaultConfig:CreateFunctionDefinitionVersion'] :: CreateFunctionDefinitionVersion -> Maybe FunctionDefaultConfig

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateFunctionDefinitionVersion'] :: CreateFunctionDefinitionVersion -> Maybe Text

-- | The ID of the Lambda function definition.
[$sel:functionDefinitionId:CreateFunctionDefinitionVersion'] :: CreateFunctionDefinitionVersion -> Text

-- | Create a value of <a>CreateFunctionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functions:CreateFunctionDefinitionVersion'</a>,
--   <a>createFunctionDefinitionVersion_functions</a> - A list of Lambda
--   functions in this function definition version.
--   
--   <a>$sel:defaultConfig:CreateFunctionDefinitionVersion'</a>,
--   <a>createFunctionDefinitionVersion_defaultConfig</a> - The default
--   configuration that applies to all Lambda functions in this function
--   definition version. Individual Lambda functions can override these
--   settings.
--   
--   <a>$sel:amznClientToken:CreateFunctionDefinitionVersion'</a>,
--   <a>createFunctionDefinitionVersion_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   <a>$sel:functionDefinitionId:CreateFunctionDefinitionVersion'</a>,
--   <a>createFunctionDefinitionVersion_functionDefinitionId</a> - The ID
--   of the Lambda function definition.
newCreateFunctionDefinitionVersion :: Text -> CreateFunctionDefinitionVersion

-- | A list of Lambda functions in this function definition version.
createFunctionDefinitionVersion_functions :: Lens' CreateFunctionDefinitionVersion (Maybe [Function])

-- | The default configuration that applies to all Lambda functions in this
--   function definition version. Individual Lambda functions can override
--   these settings.
createFunctionDefinitionVersion_defaultConfig :: Lens' CreateFunctionDefinitionVersion (Maybe FunctionDefaultConfig)

-- | A client token used to correlate requests and responses.
createFunctionDefinitionVersion_amznClientToken :: Lens' CreateFunctionDefinitionVersion (Maybe Text)

-- | The ID of the Lambda function definition.
createFunctionDefinitionVersion_functionDefinitionId :: Lens' CreateFunctionDefinitionVersion Text

-- | <i>See:</i> <a>newCreateFunctionDefinitionVersionResponse</a> smart
--   constructor.
data CreateFunctionDefinitionVersionResponse
CreateFunctionDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateFunctionDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:CreateFunctionDefinitionVersionResponse'] :: CreateFunctionDefinitionVersionResponse -> Maybe Text

-- | The ARN of the version.
[$sel:arn:CreateFunctionDefinitionVersionResponse'] :: CreateFunctionDefinitionVersionResponse -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:CreateFunctionDefinitionVersionResponse'] :: CreateFunctionDefinitionVersionResponse -> Maybe Text

-- | The ID of the version.
[$sel:version:CreateFunctionDefinitionVersionResponse'] :: CreateFunctionDefinitionVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateFunctionDefinitionVersionResponse'] :: CreateFunctionDefinitionVersionResponse -> Int

-- | Create a value of <a>CreateFunctionDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_id</a> - The ID of the
--   parent definition that the version is associated with.
--   
--   <a>$sel:version:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateFunctionDefinitionVersionResponse :: Int -> CreateFunctionDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createFunctionDefinitionVersionResponse_creationTimestamp :: Lens' CreateFunctionDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createFunctionDefinitionVersionResponse_arn :: Lens' CreateFunctionDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createFunctionDefinitionVersionResponse_id :: Lens' CreateFunctionDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createFunctionDefinitionVersionResponse_version :: Lens' CreateFunctionDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createFunctionDefinitionVersionResponse_httpStatus :: Lens' CreateFunctionDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateFunctionDefinitionVersion.CreateFunctionDefinitionVersion


-- | Creates a Lambda function definition which contains a list of Lambda
--   functions and their configurations to be used in a group. You can
--   create an initial version of the definition by providing a list of
--   Lambda functions and their configurations now, or use
--   ''CreateFunctionDefinitionVersion'' later.
module Network.AWS.Greengrass.CreateFunctionDefinition

-- | <i>See:</i> <a>newCreateFunctionDefinition</a> smart constructor.
data CreateFunctionDefinition
CreateFunctionDefinition' :: Maybe Text -> Maybe FunctionDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateFunctionDefinition

-- | The name of the function definition.
[$sel:name:CreateFunctionDefinition'] :: CreateFunctionDefinition -> Maybe Text

-- | Information about the initial version of the function definition.
[$sel:initialVersion:CreateFunctionDefinition'] :: CreateFunctionDefinition -> Maybe FunctionDefinitionVersion

-- | Tag(s) to add to the new resource.
[$sel:tags:CreateFunctionDefinition'] :: CreateFunctionDefinition -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateFunctionDefinition'] :: CreateFunctionDefinition -> Maybe Text

-- | Create a value of <a>CreateFunctionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinition_name</a> - The name of the function
--   definition.
--   
--   <a>$sel:initialVersion:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinition_initialVersion</a> - Information about the
--   initial version of the function definition.
--   
--   <a>$sel:tags:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinition_amznClientToken</a> - A client token used
--   to correlate requests and responses.
newCreateFunctionDefinition :: CreateFunctionDefinition

-- | The name of the function definition.
createFunctionDefinition_name :: Lens' CreateFunctionDefinition (Maybe Text)

-- | Information about the initial version of the function definition.
createFunctionDefinition_initialVersion :: Lens' CreateFunctionDefinition (Maybe FunctionDefinitionVersion)

-- | Tag(s) to add to the new resource.
createFunctionDefinition_tags :: Lens' CreateFunctionDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createFunctionDefinition_amznClientToken :: Lens' CreateFunctionDefinition (Maybe Text)

-- | <i>See:</i> <a>newCreateFunctionDefinitionResponse</a> smart
--   constructor.
data CreateFunctionDefinitionResponse
CreateFunctionDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateFunctionDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:CreateFunctionDefinitionResponse'] :: CreateFunctionDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:CreateFunctionDefinitionResponse'] :: CreateFunctionDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:CreateFunctionDefinitionResponse'] :: CreateFunctionDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:CreateFunctionDefinitionResponse'] :: CreateFunctionDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:CreateFunctionDefinitionResponse'] :: CreateFunctionDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:CreateFunctionDefinitionResponse'] :: CreateFunctionDefinitionResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:CreateFunctionDefinitionResponse'] :: CreateFunctionDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateFunctionDefinitionResponse'] :: CreateFunctionDefinitionResponse -> Int

-- | Create a value of <a>CreateFunctionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newCreateFunctionDefinitionResponse :: Int -> CreateFunctionDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createFunctionDefinitionResponse_creationTimestamp :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createFunctionDefinitionResponse_latestVersionArn :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createFunctionDefinitionResponse_latestVersion :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createFunctionDefinitionResponse_arn :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createFunctionDefinitionResponse_id :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The name of the definition.
createFunctionDefinitionResponse_name :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createFunctionDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The response's http status code.
createFunctionDefinitionResponse_httpStatus :: Lens' CreateFunctionDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance GHC.Show.Show Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance GHC.Read.Read Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateFunctionDefinition.CreateFunctionDefinition


-- | Creates a version of a device definition that has already been
--   defined.
module Network.AWS.Greengrass.CreateDeviceDefinitionVersion

-- | <i>See:</i> <a>newCreateDeviceDefinitionVersion</a> smart constructor.
data CreateDeviceDefinitionVersion
CreateDeviceDefinitionVersion' :: Maybe [Device] -> Maybe Text -> Text -> CreateDeviceDefinitionVersion

-- | A list of devices in the definition version.
[$sel:devices:CreateDeviceDefinitionVersion'] :: CreateDeviceDefinitionVersion -> Maybe [Device]

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateDeviceDefinitionVersion'] :: CreateDeviceDefinitionVersion -> Maybe Text

-- | The ID of the device definition.
[$sel:deviceDefinitionId:CreateDeviceDefinitionVersion'] :: CreateDeviceDefinitionVersion -> Text

-- | Create a value of <a>CreateDeviceDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devices:CreateDeviceDefinitionVersion'</a>,
--   <a>createDeviceDefinitionVersion_devices</a> - A list of devices in
--   the definition version.
--   
--   <a>$sel:amznClientToken:CreateDeviceDefinitionVersion'</a>,
--   <a>createDeviceDefinitionVersion_amznClientToken</a> - A client token
--   used to correlate requests and responses.
--   
--   <a>$sel:deviceDefinitionId:CreateDeviceDefinitionVersion'</a>,
--   <a>createDeviceDefinitionVersion_deviceDefinitionId</a> - The ID of
--   the device definition.
newCreateDeviceDefinitionVersion :: Text -> CreateDeviceDefinitionVersion

-- | A list of devices in the definition version.
createDeviceDefinitionVersion_devices :: Lens' CreateDeviceDefinitionVersion (Maybe [Device])

-- | A client token used to correlate requests and responses.
createDeviceDefinitionVersion_amznClientToken :: Lens' CreateDeviceDefinitionVersion (Maybe Text)

-- | The ID of the device definition.
createDeviceDefinitionVersion_deviceDefinitionId :: Lens' CreateDeviceDefinitionVersion Text

-- | <i>See:</i> <a>newCreateDeviceDefinitionVersionResponse</a> smart
--   constructor.
data CreateDeviceDefinitionVersionResponse
CreateDeviceDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateDeviceDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:CreateDeviceDefinitionVersionResponse'] :: CreateDeviceDefinitionVersionResponse -> Maybe Text

-- | The ARN of the version.
[$sel:arn:CreateDeviceDefinitionVersionResponse'] :: CreateDeviceDefinitionVersionResponse -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:CreateDeviceDefinitionVersionResponse'] :: CreateDeviceDefinitionVersionResponse -> Maybe Text

-- | The ID of the version.
[$sel:version:CreateDeviceDefinitionVersionResponse'] :: CreateDeviceDefinitionVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDeviceDefinitionVersionResponse'] :: CreateDeviceDefinitionVersionResponse -> Int

-- | Create a value of <a>CreateDeviceDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_id</a> - The ID of the parent
--   definition that the version is associated with.
--   
--   <a>$sel:version:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateDeviceDefinitionVersionResponse :: Int -> CreateDeviceDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createDeviceDefinitionVersionResponse_creationTimestamp :: Lens' CreateDeviceDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createDeviceDefinitionVersionResponse_arn :: Lens' CreateDeviceDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createDeviceDefinitionVersionResponse_id :: Lens' CreateDeviceDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createDeviceDefinitionVersionResponse_version :: Lens' CreateDeviceDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createDeviceDefinitionVersionResponse_httpStatus :: Lens' CreateDeviceDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateDeviceDefinitionVersion.CreateDeviceDefinitionVersion


-- | Creates a device definition. You may provide the initial version of
--   the device definition now or use ''CreateDeviceDefinitionVersion'' at
--   a later time.
module Network.AWS.Greengrass.CreateDeviceDefinition

-- | <i>See:</i> <a>newCreateDeviceDefinition</a> smart constructor.
data CreateDeviceDefinition
CreateDeviceDefinition' :: Maybe Text -> Maybe DeviceDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateDeviceDefinition

-- | The name of the device definition.
[$sel:name:CreateDeviceDefinition'] :: CreateDeviceDefinition -> Maybe Text

-- | Information about the initial version of the device definition.
[$sel:initialVersion:CreateDeviceDefinition'] :: CreateDeviceDefinition -> Maybe DeviceDefinitionVersion

-- | Tag(s) to add to the new resource.
[$sel:tags:CreateDeviceDefinition'] :: CreateDeviceDefinition -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateDeviceDefinition'] :: CreateDeviceDefinition -> Maybe Text

-- | Create a value of <a>CreateDeviceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinition_name</a> - The name of the device
--   definition.
--   
--   <a>$sel:initialVersion:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinition_initialVersion</a> - Information about the
--   initial version of the device definition.
--   
--   <a>$sel:tags:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinition_amznClientToken</a> - A client token used to
--   correlate requests and responses.
newCreateDeviceDefinition :: CreateDeviceDefinition

-- | The name of the device definition.
createDeviceDefinition_name :: Lens' CreateDeviceDefinition (Maybe Text)

-- | Information about the initial version of the device definition.
createDeviceDefinition_initialVersion :: Lens' CreateDeviceDefinition (Maybe DeviceDefinitionVersion)

-- | Tag(s) to add to the new resource.
createDeviceDefinition_tags :: Lens' CreateDeviceDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createDeviceDefinition_amznClientToken :: Lens' CreateDeviceDefinition (Maybe Text)

-- | <i>See:</i> <a>newCreateDeviceDefinitionResponse</a> smart
--   constructor.
data CreateDeviceDefinitionResponse
CreateDeviceDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateDeviceDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:CreateDeviceDefinitionResponse'] :: CreateDeviceDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:CreateDeviceDefinitionResponse'] :: CreateDeviceDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:CreateDeviceDefinitionResponse'] :: CreateDeviceDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:CreateDeviceDefinitionResponse'] :: CreateDeviceDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:CreateDeviceDefinitionResponse'] :: CreateDeviceDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:CreateDeviceDefinitionResponse'] :: CreateDeviceDefinitionResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:CreateDeviceDefinitionResponse'] :: CreateDeviceDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDeviceDefinitionResponse'] :: CreateDeviceDefinitionResponse -> Int

-- | Create a value of <a>CreateDeviceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeviceDefinitionResponse :: Int -> CreateDeviceDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createDeviceDefinitionResponse_creationTimestamp :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createDeviceDefinitionResponse_latestVersionArn :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createDeviceDefinitionResponse_latestVersion :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createDeviceDefinitionResponse_arn :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createDeviceDefinitionResponse_id :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The name of the definition.
createDeviceDefinitionResponse_name :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createDeviceDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The response's http status code.
createDeviceDefinitionResponse_httpStatus :: Lens' CreateDeviceDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance GHC.Show.Show Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance GHC.Read.Read Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateDeviceDefinition.CreateDeviceDefinition


-- | Creates a deployment. ''CreateDeployment'' requests are idempotent
--   with respect to the ''X-Amzn-Client-Token'' token and the request
--   parameters.
module Network.AWS.Greengrass.CreateDeployment

-- | <i>See:</i> <a>newCreateDeployment</a> smart constructor.
data CreateDeployment
CreateDeployment' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> DeploymentType -> CreateDeployment

-- | The ID of the deployment if you wish to redeploy a previous
--   deployment.
[$sel:deploymentId:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | The ID of the group version to be deployed.
[$sel:groupVersionId:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | The ID of the Greengrass group.
[$sel:groupId:CreateDeployment'] :: CreateDeployment -> Text

-- | The type of deployment. When used for ''CreateDeployment'', only
--   ''NewDeployment'' and ''Redeployment'' are valid.
[$sel:deploymentType:CreateDeployment'] :: CreateDeployment -> DeploymentType

-- | Create a value of <a>CreateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateDeployment'</a>,
--   <a>createDeployment_deploymentId</a> - The ID of the deployment if you
--   wish to redeploy a previous deployment.
--   
--   <a>$sel:groupVersionId:CreateDeployment'</a>,
--   <a>createDeployment_groupVersionId</a> - The ID of the group version
--   to be deployed.
--   
--   <a>$sel:amznClientToken:CreateDeployment'</a>,
--   <a>createDeployment_amznClientToken</a> - A client token used to
--   correlate requests and responses.
--   
--   <a>$sel:groupId:CreateDeployment'</a>, <a>createDeployment_groupId</a>
--   - The ID of the Greengrass group.
--   
--   <a>$sel:deploymentType:CreateDeployment'</a>,
--   <a>createDeployment_deploymentType</a> - The type of deployment. When
--   used for ''CreateDeployment'', only ''NewDeployment'' and
--   ''Redeployment'' are valid.
newCreateDeployment :: Text -> DeploymentType -> CreateDeployment

-- | The ID of the deployment if you wish to redeploy a previous
--   deployment.
createDeployment_deploymentId :: Lens' CreateDeployment (Maybe Text)

-- | The ID of the group version to be deployed.
createDeployment_groupVersionId :: Lens' CreateDeployment (Maybe Text)

-- | A client token used to correlate requests and responses.
createDeployment_amznClientToken :: Lens' CreateDeployment (Maybe Text)

-- | The ID of the Greengrass group.
createDeployment_groupId :: Lens' CreateDeployment Text

-- | The type of deployment. When used for ''CreateDeployment'', only
--   ''NewDeployment'' and ''Redeployment'' are valid.
createDeployment_deploymentType :: Lens' CreateDeployment DeploymentType

-- | <i>See:</i> <a>newCreateDeploymentResponse</a> smart constructor.
data CreateDeploymentResponse
CreateDeploymentResponse' :: Maybe Text -> Maybe Text -> Int -> CreateDeploymentResponse

-- | The ID of the deployment.
[$sel:deploymentId:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe Text

-- | The ARN of the deployment.
[$sel:deploymentArn:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Int

-- | Create a value of <a>CreateDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateDeployment'</a>,
--   <a>createDeploymentResponse_deploymentId</a> - The ID of the
--   deployment.
--   
--   <a>$sel:deploymentArn:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentArn</a> - The ARN of the
--   deployment.
--   
--   <a>$sel:httpStatus:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentResponse :: Int -> CreateDeploymentResponse

-- | The ID of the deployment.
createDeploymentResponse_deploymentId :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The ARN of the deployment.
createDeploymentResponse_deploymentArn :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The response's http status code.
createDeploymentResponse_httpStatus :: Lens' CreateDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance GHC.Show.Show Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance GHC.Read.Read Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateDeployment.CreateDeploymentResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateDeployment.CreateDeploymentResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateDeployment.CreateDeploymentResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateDeployment.CreateDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateDeployment.CreateDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateDeployment.CreateDeployment


-- | Creates a version of a core definition that has already been defined.
--   Greengrass groups must each contain exactly one Greengrass core.
module Network.AWS.Greengrass.CreateCoreDefinitionVersion

-- | <i>See:</i> <a>newCreateCoreDefinitionVersion</a> smart constructor.
data CreateCoreDefinitionVersion
CreateCoreDefinitionVersion' :: Maybe [Core] -> Maybe Text -> Text -> CreateCoreDefinitionVersion

-- | A list of cores in the core definition version.
[$sel:cores:CreateCoreDefinitionVersion'] :: CreateCoreDefinitionVersion -> Maybe [Core]

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateCoreDefinitionVersion'] :: CreateCoreDefinitionVersion -> Maybe Text

-- | The ID of the core definition.
[$sel:coreDefinitionId:CreateCoreDefinitionVersion'] :: CreateCoreDefinitionVersion -> Text

-- | Create a value of <a>CreateCoreDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cores:CreateCoreDefinitionVersion'</a>,
--   <a>createCoreDefinitionVersion_cores</a> - A list of cores in the core
--   definition version.
--   
--   <a>$sel:amznClientToken:CreateCoreDefinitionVersion'</a>,
--   <a>createCoreDefinitionVersion_amznClientToken</a> - A client token
--   used to correlate requests and responses.
--   
--   <a>$sel:coreDefinitionId:CreateCoreDefinitionVersion'</a>,
--   <a>createCoreDefinitionVersion_coreDefinitionId</a> - The ID of the
--   core definition.
newCreateCoreDefinitionVersion :: Text -> CreateCoreDefinitionVersion

-- | A list of cores in the core definition version.
createCoreDefinitionVersion_cores :: Lens' CreateCoreDefinitionVersion (Maybe [Core])

-- | A client token used to correlate requests and responses.
createCoreDefinitionVersion_amznClientToken :: Lens' CreateCoreDefinitionVersion (Maybe Text)

-- | The ID of the core definition.
createCoreDefinitionVersion_coreDefinitionId :: Lens' CreateCoreDefinitionVersion Text

-- | <i>See:</i> <a>newCreateCoreDefinitionVersionResponse</a> smart
--   constructor.
data CreateCoreDefinitionVersionResponse
CreateCoreDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateCoreDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:CreateCoreDefinitionVersionResponse'] :: CreateCoreDefinitionVersionResponse -> Maybe Text

-- | The ARN of the version.
[$sel:arn:CreateCoreDefinitionVersionResponse'] :: CreateCoreDefinitionVersionResponse -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:CreateCoreDefinitionVersionResponse'] :: CreateCoreDefinitionVersionResponse -> Maybe Text

-- | The ID of the version.
[$sel:version:CreateCoreDefinitionVersionResponse'] :: CreateCoreDefinitionVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateCoreDefinitionVersionResponse'] :: CreateCoreDefinitionVersionResponse -> Int

-- | Create a value of <a>CreateCoreDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_id</a> - The ID of the parent
--   definition that the version is associated with.
--   
--   <a>$sel:version:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_httpStatus</a> - The response's
--   http status code.
newCreateCoreDefinitionVersionResponse :: Int -> CreateCoreDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createCoreDefinitionVersionResponse_creationTimestamp :: Lens' CreateCoreDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createCoreDefinitionVersionResponse_arn :: Lens' CreateCoreDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createCoreDefinitionVersionResponse_id :: Lens' CreateCoreDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createCoreDefinitionVersionResponse_version :: Lens' CreateCoreDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createCoreDefinitionVersionResponse_httpStatus :: Lens' CreateCoreDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateCoreDefinitionVersion.CreateCoreDefinitionVersion


-- | Creates a core definition. You may provide the initial version of the
--   core definition now or use ''CreateCoreDefinitionVersion'' at a later
--   time. Greengrass groups must each contain exactly one Greengrass core.
module Network.AWS.Greengrass.CreateCoreDefinition

-- | Information needed to create a core definition.
--   
--   <i>See:</i> <a>newCreateCoreDefinition</a> smart constructor.
data CreateCoreDefinition
CreateCoreDefinition' :: Maybe Text -> Maybe CoreDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateCoreDefinition

-- | The name of the core definition.
[$sel:name:CreateCoreDefinition'] :: CreateCoreDefinition -> Maybe Text

-- | Information about the initial version of the core definition.
[$sel:initialVersion:CreateCoreDefinition'] :: CreateCoreDefinition -> Maybe CoreDefinitionVersion

-- | Tag(s) to add to the new resource.
[$sel:tags:CreateCoreDefinition'] :: CreateCoreDefinition -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateCoreDefinition'] :: CreateCoreDefinition -> Maybe Text

-- | Create a value of <a>CreateCoreDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateCoreDefinition'</a>,
--   <a>createCoreDefinition_name</a> - The name of the core definition.
--   
--   <a>$sel:initialVersion:CreateCoreDefinition'</a>,
--   <a>createCoreDefinition_initialVersion</a> - Information about the
--   initial version of the core definition.
--   
--   <a>$sel:tags:CreateCoreDefinition'</a>,
--   <a>createCoreDefinition_tags</a> - Tag(s) to add to the new resource.
--   
--   <a>$sel:amznClientToken:CreateCoreDefinition'</a>,
--   <a>createCoreDefinition_amznClientToken</a> - A client token used to
--   correlate requests and responses.
newCreateCoreDefinition :: CreateCoreDefinition

-- | The name of the core definition.
createCoreDefinition_name :: Lens' CreateCoreDefinition (Maybe Text)

-- | Information about the initial version of the core definition.
createCoreDefinition_initialVersion :: Lens' CreateCoreDefinition (Maybe CoreDefinitionVersion)

-- | Tag(s) to add to the new resource.
createCoreDefinition_tags :: Lens' CreateCoreDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createCoreDefinition_amznClientToken :: Lens' CreateCoreDefinition (Maybe Text)

-- | <i>See:</i> <a>newCreateCoreDefinitionResponse</a> smart constructor.
data CreateCoreDefinitionResponse
CreateCoreDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateCoreDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:CreateCoreDefinitionResponse'] :: CreateCoreDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:CreateCoreDefinitionResponse'] :: CreateCoreDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:CreateCoreDefinitionResponse'] :: CreateCoreDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:CreateCoreDefinitionResponse'] :: CreateCoreDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:CreateCoreDefinitionResponse'] :: CreateCoreDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:CreateCoreDefinitionResponse'] :: CreateCoreDefinitionResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:CreateCoreDefinitionResponse'] :: CreateCoreDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateCoreDefinitionResponse'] :: CreateCoreDefinitionResponse -> Int

-- | Create a value of <a>CreateCoreDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateCoreDefinition'</a>,
--   <a>createCoreDefinitionResponse_name</a> - The name of the definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newCreateCoreDefinitionResponse :: Int -> CreateCoreDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createCoreDefinitionResponse_creationTimestamp :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createCoreDefinitionResponse_latestVersionArn :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createCoreDefinitionResponse_latestVersion :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createCoreDefinitionResponse_arn :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createCoreDefinitionResponse_id :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The name of the definition.
createCoreDefinitionResponse_name :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createCoreDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The response's http status code.
createCoreDefinitionResponse_httpStatus :: Lens' CreateCoreDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance GHC.Show.Show Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance GHC.Read.Read Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateCoreDefinition.CreateCoreDefinition


-- | Creates a version of a connector definition which has already been
--   defined.
module Network.AWS.Greengrass.CreateConnectorDefinitionVersion

-- | <i>See:</i> <a>newCreateConnectorDefinitionVersion</a> smart
--   constructor.
data CreateConnectorDefinitionVersion
CreateConnectorDefinitionVersion' :: Maybe [Connector] -> Maybe Text -> Text -> CreateConnectorDefinitionVersion

-- | A list of references to connectors in this version, with their
--   corresponding configuration settings.
[$sel:connectors:CreateConnectorDefinitionVersion'] :: CreateConnectorDefinitionVersion -> Maybe [Connector]

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateConnectorDefinitionVersion'] :: CreateConnectorDefinitionVersion -> Maybe Text

-- | The ID of the connector definition.
[$sel:connectorDefinitionId:CreateConnectorDefinitionVersion'] :: CreateConnectorDefinitionVersion -> Text

-- | Create a value of <a>CreateConnectorDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectors:CreateConnectorDefinitionVersion'</a>,
--   <a>createConnectorDefinitionVersion_connectors</a> - A list of
--   references to connectors in this version, with their corresponding
--   configuration settings.
--   
--   <a>$sel:amznClientToken:CreateConnectorDefinitionVersion'</a>,
--   <a>createConnectorDefinitionVersion_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   <a>$sel:connectorDefinitionId:CreateConnectorDefinitionVersion'</a>,
--   <a>createConnectorDefinitionVersion_connectorDefinitionId</a> - The ID
--   of the connector definition.
newCreateConnectorDefinitionVersion :: Text -> CreateConnectorDefinitionVersion

-- | A list of references to connectors in this version, with their
--   corresponding configuration settings.
createConnectorDefinitionVersion_connectors :: Lens' CreateConnectorDefinitionVersion (Maybe [Connector])

-- | A client token used to correlate requests and responses.
createConnectorDefinitionVersion_amznClientToken :: Lens' CreateConnectorDefinitionVersion (Maybe Text)

-- | The ID of the connector definition.
createConnectorDefinitionVersion_connectorDefinitionId :: Lens' CreateConnectorDefinitionVersion Text

-- | <i>See:</i> <a>newCreateConnectorDefinitionVersionResponse</a> smart
--   constructor.
data CreateConnectorDefinitionVersionResponse
CreateConnectorDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateConnectorDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
[$sel:creationTimestamp:CreateConnectorDefinitionVersionResponse'] :: CreateConnectorDefinitionVersionResponse -> Maybe Text

-- | The ARN of the version.
[$sel:arn:CreateConnectorDefinitionVersionResponse'] :: CreateConnectorDefinitionVersionResponse -> Maybe Text

-- | The ID of the parent definition that the version is associated with.
[$sel:id:CreateConnectorDefinitionVersionResponse'] :: CreateConnectorDefinitionVersionResponse -> Maybe Text

-- | The ID of the version.
[$sel:version:CreateConnectorDefinitionVersionResponse'] :: CreateConnectorDefinitionVersionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateConnectorDefinitionVersionResponse'] :: CreateConnectorDefinitionVersionResponse -> Int

-- | Create a value of <a>CreateConnectorDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_creationTimestamp</a> -
--   The time, in milliseconds since the epoch, when the version was
--   created.
--   
--   <a>$sel:arn:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_id</a> - The ID of the
--   parent definition that the version is associated with.
--   
--   <a>$sel:version:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_version</a> - The ID of
--   the version.
--   
--   <a>$sel:httpStatus:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateConnectorDefinitionVersionResponse :: Int -> CreateConnectorDefinitionVersionResponse

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createConnectorDefinitionVersionResponse_creationTimestamp :: Lens' CreateConnectorDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createConnectorDefinitionVersionResponse_arn :: Lens' CreateConnectorDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createConnectorDefinitionVersionResponse_id :: Lens' CreateConnectorDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createConnectorDefinitionVersionResponse_version :: Lens' CreateConnectorDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createConnectorDefinitionVersionResponse_httpStatus :: Lens' CreateConnectorDefinitionVersionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance GHC.Show.Show Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance GHC.Read.Read Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateConnectorDefinitionVersion.CreateConnectorDefinitionVersion


-- | Creates a connector definition. You may provide the initial version of
--   the connector definition now or use
--   ''CreateConnectorDefinitionVersion'' at a later time.
module Network.AWS.Greengrass.CreateConnectorDefinition

-- | <i>See:</i> <a>newCreateConnectorDefinition</a> smart constructor.
data CreateConnectorDefinition
CreateConnectorDefinition' :: Maybe Text -> Maybe ConnectorDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateConnectorDefinition

-- | The name of the connector definition.
[$sel:name:CreateConnectorDefinition'] :: CreateConnectorDefinition -> Maybe Text

-- | Information about the initial version of the connector definition.
[$sel:initialVersion:CreateConnectorDefinition'] :: CreateConnectorDefinition -> Maybe ConnectorDefinitionVersion

-- | Tag(s) to add to the new resource.
[$sel:tags:CreateConnectorDefinition'] :: CreateConnectorDefinition -> Maybe (HashMap Text Text)

-- | A client token used to correlate requests and responses.
[$sel:amznClientToken:CreateConnectorDefinition'] :: CreateConnectorDefinition -> Maybe Text

-- | Create a value of <a>CreateConnectorDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinition_name</a> - The name of the connector
--   definition.
--   
--   <a>$sel:initialVersion:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinition_initialVersion</a> - Information about
--   the initial version of the connector definition.
--   
--   <a>$sel:tags:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinition_amznClientToken</a> - A client token used
--   to correlate requests and responses.
newCreateConnectorDefinition :: CreateConnectorDefinition

-- | The name of the connector definition.
createConnectorDefinition_name :: Lens' CreateConnectorDefinition (Maybe Text)

-- | Information about the initial version of the connector definition.
createConnectorDefinition_initialVersion :: Lens' CreateConnectorDefinition (Maybe ConnectorDefinitionVersion)

-- | Tag(s) to add to the new resource.
createConnectorDefinition_tags :: Lens' CreateConnectorDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createConnectorDefinition_amznClientToken :: Lens' CreateConnectorDefinition (Maybe Text)

-- | <i>See:</i> <a>newCreateConnectorDefinitionResponse</a> smart
--   constructor.
data CreateConnectorDefinitionResponse
CreateConnectorDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateConnectorDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
[$sel:creationTimestamp:CreateConnectorDefinitionResponse'] :: CreateConnectorDefinitionResponse -> Maybe Text

-- | The ARN of the latest version associated with the definition.
[$sel:latestVersionArn:CreateConnectorDefinitionResponse'] :: CreateConnectorDefinitionResponse -> Maybe Text

-- | The ID of the latest version associated with the definition.
[$sel:latestVersion:CreateConnectorDefinitionResponse'] :: CreateConnectorDefinitionResponse -> Maybe Text

-- | The ARN of the definition.
[$sel:arn:CreateConnectorDefinitionResponse'] :: CreateConnectorDefinitionResponse -> Maybe Text

-- | The ID of the definition.
[$sel:id:CreateConnectorDefinitionResponse'] :: CreateConnectorDefinitionResponse -> Maybe Text

-- | The name of the definition.
[$sel:name:CreateConnectorDefinitionResponse'] :: CreateConnectorDefinitionResponse -> Maybe Text

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
[$sel:lastUpdatedTimestamp:CreateConnectorDefinitionResponse'] :: CreateConnectorDefinitionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateConnectorDefinitionResponse'] :: CreateConnectorDefinitionResponse -> Int

-- | Create a value of <a>CreateConnectorDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_id</a> - The ID of the
--   definition.
--   
--   <a>$sel:name:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newCreateConnectorDefinitionResponse :: Int -> CreateConnectorDefinitionResponse

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createConnectorDefinitionResponse_creationTimestamp :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createConnectorDefinitionResponse_latestVersionArn :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createConnectorDefinitionResponse_latestVersion :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createConnectorDefinitionResponse_arn :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createConnectorDefinitionResponse_id :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The name of the definition.
createConnectorDefinitionResponse_name :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createConnectorDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The response's http status code.
createConnectorDefinitionResponse_httpStatus :: Lens' CreateConnectorDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance GHC.Show.Show Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance GHC.Read.Read Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.CreateConnectorDefinition.CreateConnectorDefinition


-- | Associates a role with your account. AWS IoT Greengrass will use the
--   role to access your Lambda functions and AWS IoT resources. This is
--   necessary for deployments to succeed. The role must have at least
--   minimum permissions in the policy
--   ''AWSGreengrassResourceAccessRolePolicy''.
module Network.AWS.Greengrass.AssociateServiceRoleToAccount

-- | <i>See:</i> <a>newAssociateServiceRoleToAccount</a> smart constructor.
data AssociateServiceRoleToAccount
AssociateServiceRoleToAccount' :: Text -> AssociateServiceRoleToAccount

-- | The ARN of the service role you wish to associate with your account.
[$sel:roleArn:AssociateServiceRoleToAccount'] :: AssociateServiceRoleToAccount -> Text

-- | Create a value of <a>AssociateServiceRoleToAccount</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:AssociateServiceRoleToAccount'</a>,
--   <a>associateServiceRoleToAccount_roleArn</a> - The ARN of the service
--   role you wish to associate with your account.
newAssociateServiceRoleToAccount :: Text -> AssociateServiceRoleToAccount

-- | The ARN of the service role you wish to associate with your account.
associateServiceRoleToAccount_roleArn :: Lens' AssociateServiceRoleToAccount Text

-- | <i>See:</i> <a>newAssociateServiceRoleToAccountResponse</a> smart
--   constructor.
data AssociateServiceRoleToAccountResponse
AssociateServiceRoleToAccountResponse' :: Maybe Text -> Int -> AssociateServiceRoleToAccountResponse

-- | The time when the service role was associated with the account.
[$sel:associatedAt:AssociateServiceRoleToAccountResponse'] :: AssociateServiceRoleToAccountResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AssociateServiceRoleToAccountResponse'] :: AssociateServiceRoleToAccountResponse -> Int

-- | Create a value of <a>AssociateServiceRoleToAccountResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associatedAt:AssociateServiceRoleToAccountResponse'</a>,
--   <a>associateServiceRoleToAccountResponse_associatedAt</a> - The time
--   when the service role was associated with the account.
--   
--   <a>$sel:httpStatus:AssociateServiceRoleToAccountResponse'</a>,
--   <a>associateServiceRoleToAccountResponse_httpStatus</a> - The
--   response's http status code.
newAssociateServiceRoleToAccountResponse :: Int -> AssociateServiceRoleToAccountResponse

-- | The time when the service role was associated with the account.
associateServiceRoleToAccountResponse_associatedAt :: Lens' AssociateServiceRoleToAccountResponse (Maybe Text)

-- | The response's http status code.
associateServiceRoleToAccountResponse_httpStatus :: Lens' AssociateServiceRoleToAccountResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance GHC.Show.Show Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance GHC.Read.Read Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance GHC.Classes.Eq Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance GHC.Generics.Generic Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccountResponse
instance GHC.Show.Show Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccountResponse
instance GHC.Read.Read Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccountResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccountResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance Control.DeepSeq.NFData Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccountResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance Control.DeepSeq.NFData Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.AssociateServiceRoleToAccount.AssociateServiceRoleToAccount


-- | Associates a role with a group. Your Greengrass core will use the role
--   to access AWS cloud services. The role's permissions should allow
--   Greengrass core Lambda functions to perform actions against the cloud.
module Network.AWS.Greengrass.AssociateRoleToGroup

-- | <i>See:</i> <a>newAssociateRoleToGroup</a> smart constructor.
data AssociateRoleToGroup
AssociateRoleToGroup' :: Text -> Text -> AssociateRoleToGroup

-- | The ID of the Greengrass group.
[$sel:groupId:AssociateRoleToGroup'] :: AssociateRoleToGroup -> Text

-- | The ARN of the role you wish to associate with this group. The
--   existence of the role is not validated.
[$sel:roleArn:AssociateRoleToGroup'] :: AssociateRoleToGroup -> Text

-- | Create a value of <a>AssociateRoleToGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:AssociateRoleToGroup'</a>,
--   <a>associateRoleToGroup_groupId</a> - The ID of the Greengrass group.
--   
--   <a>$sel:roleArn:AssociateRoleToGroup'</a>,
--   <a>associateRoleToGroup_roleArn</a> - The ARN of the role you wish to
--   associate with this group. The existence of the role is not validated.
newAssociateRoleToGroup :: Text -> Text -> AssociateRoleToGroup

-- | The ID of the Greengrass group.
associateRoleToGroup_groupId :: Lens' AssociateRoleToGroup Text

-- | The ARN of the role you wish to associate with this group. The
--   existence of the role is not validated.
associateRoleToGroup_roleArn :: Lens' AssociateRoleToGroup Text

-- | <i>See:</i> <a>newAssociateRoleToGroupResponse</a> smart constructor.
data AssociateRoleToGroupResponse
AssociateRoleToGroupResponse' :: Maybe Text -> Int -> AssociateRoleToGroupResponse

-- | The time, in milliseconds since the epoch, when the role ARN was
--   associated with the group.
[$sel:associatedAt:AssociateRoleToGroupResponse'] :: AssociateRoleToGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:AssociateRoleToGroupResponse'] :: AssociateRoleToGroupResponse -> Int

-- | Create a value of <a>AssociateRoleToGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associatedAt:AssociateRoleToGroupResponse'</a>,
--   <a>associateRoleToGroupResponse_associatedAt</a> - The time, in
--   milliseconds since the epoch, when the role ARN was associated with
--   the group.
--   
--   <a>$sel:httpStatus:AssociateRoleToGroupResponse'</a>,
--   <a>associateRoleToGroupResponse_httpStatus</a> - The response's http
--   status code.
newAssociateRoleToGroupResponse :: Int -> AssociateRoleToGroupResponse

-- | The time, in milliseconds since the epoch, when the role ARN was
--   associated with the group.
associateRoleToGroupResponse_associatedAt :: Lens' AssociateRoleToGroupResponse (Maybe Text)

-- | The response's http status code.
associateRoleToGroupResponse_httpStatus :: Lens' AssociateRoleToGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance GHC.Show.Show Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance GHC.Read.Read Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance GHC.Classes.Eq Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance GHC.Generics.Generic Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroupResponse
instance GHC.Show.Show Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroupResponse
instance GHC.Read.Read Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroupResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.AssociateRoleToGroup.AssociateRoleToGroup


-- | Remove resource tags from a Greengrass Resource.
module Network.AWS.Greengrass.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | An array of tag keys to delete
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | The Amazon Resource Name (ARN) of the resource.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - An
--   array of tag keys to delete
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
newUntagResource :: Text -> UntagResource

-- | An array of tag keys to delete
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The Amazon Resource Name (ARN) of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Network.AWS.Greengrass.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.Greengrass.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.Greengrass.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.Greengrass.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.Greengrass.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.Greengrass.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.Greengrass.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UntagResource.UntagResource


-- | Updates the connectivity information for the core. Any devices that
--   belong to the group which has this core will receive this information
--   in order to find the location of the core and connect to it.
module Network.AWS.Greengrass.UpdateConnectivityInfo

-- | Connectivity information.
--   
--   <i>See:</i> <a>newUpdateConnectivityInfo</a> smart constructor.
data UpdateConnectivityInfo
UpdateConnectivityInfo' :: Maybe [ConnectivityInfo] -> Text -> UpdateConnectivityInfo

-- | A list of connectivity info.
[$sel:connectivityInfo:UpdateConnectivityInfo'] :: UpdateConnectivityInfo -> Maybe [ConnectivityInfo]

-- | The thing name.
[$sel:thingName:UpdateConnectivityInfo'] :: UpdateConnectivityInfo -> Text

-- | Create a value of <a>UpdateConnectivityInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectivityInfo:UpdateConnectivityInfo'</a>,
--   <a>updateConnectivityInfo_connectivityInfo</a> - A list of
--   connectivity info.
--   
--   <a>$sel:thingName:UpdateConnectivityInfo'</a>,
--   <a>updateConnectivityInfo_thingName</a> - The thing name.
newUpdateConnectivityInfo :: Text -> UpdateConnectivityInfo

-- | A list of connectivity info.
updateConnectivityInfo_connectivityInfo :: Lens' UpdateConnectivityInfo (Maybe [ConnectivityInfo])

-- | The thing name.
updateConnectivityInfo_thingName :: Lens' UpdateConnectivityInfo Text

-- | <i>See:</i> <a>newUpdateConnectivityInfoResponse</a> smart
--   constructor.
data UpdateConnectivityInfoResponse
UpdateConnectivityInfoResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateConnectivityInfoResponse

-- | A message about the connectivity info update request.
[$sel:message:UpdateConnectivityInfoResponse'] :: UpdateConnectivityInfoResponse -> Maybe Text

-- | The new version of the connectivity info.
[$sel:version:UpdateConnectivityInfoResponse'] :: UpdateConnectivityInfoResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateConnectivityInfoResponse'] :: UpdateConnectivityInfoResponse -> Int

-- | Create a value of <a>UpdateConnectivityInfoResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:UpdateConnectivityInfoResponse'</a>,
--   <a>updateConnectivityInfoResponse_message</a> - A message about the
--   connectivity info update request.
--   
--   <a>$sel:version:UpdateConnectivityInfoResponse'</a>,
--   <a>updateConnectivityInfoResponse_version</a> - The new version of the
--   connectivity info.
--   
--   <a>$sel:httpStatus:UpdateConnectivityInfoResponse'</a>,
--   <a>updateConnectivityInfoResponse_httpStatus</a> - The response's http
--   status code.
newUpdateConnectivityInfoResponse :: Int -> UpdateConnectivityInfoResponse

-- | A message about the connectivity info update request.
updateConnectivityInfoResponse_message :: Lens' UpdateConnectivityInfoResponse (Maybe Text)

-- | The new version of the connectivity info.
updateConnectivityInfoResponse_version :: Lens' UpdateConnectivityInfoResponse (Maybe Text)

-- | The response's http status code.
updateConnectivityInfoResponse_httpStatus :: Lens' UpdateConnectivityInfoResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance GHC.Show.Show Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance GHC.Read.Read Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfoResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfoResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfoResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfoResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfoResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateConnectivityInfo.UpdateConnectivityInfo


-- | Updates a connector definition.
module Network.AWS.Greengrass.UpdateConnectorDefinition

-- | <i>See:</i> <a>newUpdateConnectorDefinition</a> smart constructor.
data UpdateConnectorDefinition
UpdateConnectorDefinition' :: Maybe Text -> Text -> UpdateConnectorDefinition

-- | The name of the definition.
[$sel:name:UpdateConnectorDefinition'] :: UpdateConnectorDefinition -> Maybe Text

-- | The ID of the connector definition.
[$sel:connectorDefinitionId:UpdateConnectorDefinition'] :: UpdateConnectorDefinition -> Text

-- | Create a value of <a>UpdateConnectorDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateConnectorDefinition'</a>,
--   <a>updateConnectorDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:connectorDefinitionId:UpdateConnectorDefinition'</a>,
--   <a>updateConnectorDefinition_connectorDefinitionId</a> - The ID of the
--   connector definition.
newUpdateConnectorDefinition :: Text -> UpdateConnectorDefinition

-- | The name of the definition.
updateConnectorDefinition_name :: Lens' UpdateConnectorDefinition (Maybe Text)

-- | The ID of the connector definition.
updateConnectorDefinition_connectorDefinitionId :: Lens' UpdateConnectorDefinition Text

-- | <i>See:</i> <a>newUpdateConnectorDefinitionResponse</a> smart
--   constructor.
data UpdateConnectorDefinitionResponse
UpdateConnectorDefinitionResponse' :: Int -> UpdateConnectorDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateConnectorDefinitionResponse'] :: UpdateConnectorDefinitionResponse -> Int

-- | Create a value of <a>UpdateConnectorDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateConnectorDefinitionResponse'</a>,
--   <a>updateConnectorDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateConnectorDefinitionResponse :: Int -> UpdateConnectorDefinitionResponse

-- | The response's http status code.
updateConnectorDefinitionResponse_httpStatus :: Lens' UpdateConnectorDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance GHC.Show.Show Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance GHC.Read.Read Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateConnectorDefinition.UpdateConnectorDefinition


-- | Updates a core definition.
module Network.AWS.Greengrass.UpdateCoreDefinition

-- | <i>See:</i> <a>newUpdateCoreDefinition</a> smart constructor.
data UpdateCoreDefinition
UpdateCoreDefinition' :: Maybe Text -> Text -> UpdateCoreDefinition

-- | The name of the definition.
[$sel:name:UpdateCoreDefinition'] :: UpdateCoreDefinition -> Maybe Text

-- | The ID of the core definition.
[$sel:coreDefinitionId:UpdateCoreDefinition'] :: UpdateCoreDefinition -> Text

-- | Create a value of <a>UpdateCoreDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateCoreDefinition'</a>,
--   <a>updateCoreDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:coreDefinitionId:UpdateCoreDefinition'</a>,
--   <a>updateCoreDefinition_coreDefinitionId</a> - The ID of the core
--   definition.
newUpdateCoreDefinition :: Text -> UpdateCoreDefinition

-- | The name of the definition.
updateCoreDefinition_name :: Lens' UpdateCoreDefinition (Maybe Text)

-- | The ID of the core definition.
updateCoreDefinition_coreDefinitionId :: Lens' UpdateCoreDefinition Text

-- | <i>See:</i> <a>newUpdateCoreDefinitionResponse</a> smart constructor.
data UpdateCoreDefinitionResponse
UpdateCoreDefinitionResponse' :: Int -> UpdateCoreDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateCoreDefinitionResponse'] :: UpdateCoreDefinitionResponse -> Int

-- | Create a value of <a>UpdateCoreDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCoreDefinitionResponse'</a>,
--   <a>updateCoreDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateCoreDefinitionResponse :: Int -> UpdateCoreDefinitionResponse

-- | The response's http status code.
updateCoreDefinitionResponse_httpStatus :: Lens' UpdateCoreDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance GHC.Show.Show Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance GHC.Read.Read Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateCoreDefinition.UpdateCoreDefinition


-- | Updates a device definition.
module Network.AWS.Greengrass.UpdateDeviceDefinition

-- | <i>See:</i> <a>newUpdateDeviceDefinition</a> smart constructor.
data UpdateDeviceDefinition
UpdateDeviceDefinition' :: Maybe Text -> Text -> UpdateDeviceDefinition

-- | The name of the definition.
[$sel:name:UpdateDeviceDefinition'] :: UpdateDeviceDefinition -> Maybe Text

-- | The ID of the device definition.
[$sel:deviceDefinitionId:UpdateDeviceDefinition'] :: UpdateDeviceDefinition -> Text

-- | Create a value of <a>UpdateDeviceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateDeviceDefinition'</a>,
--   <a>updateDeviceDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:deviceDefinitionId:UpdateDeviceDefinition'</a>,
--   <a>updateDeviceDefinition_deviceDefinitionId</a> - The ID of the
--   device definition.
newUpdateDeviceDefinition :: Text -> UpdateDeviceDefinition

-- | The name of the definition.
updateDeviceDefinition_name :: Lens' UpdateDeviceDefinition (Maybe Text)

-- | The ID of the device definition.
updateDeviceDefinition_deviceDefinitionId :: Lens' UpdateDeviceDefinition Text

-- | <i>See:</i> <a>newUpdateDeviceDefinitionResponse</a> smart
--   constructor.
data UpdateDeviceDefinitionResponse
UpdateDeviceDefinitionResponse' :: Int -> UpdateDeviceDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateDeviceDefinitionResponse'] :: UpdateDeviceDefinitionResponse -> Int

-- | Create a value of <a>UpdateDeviceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDeviceDefinitionResponse'</a>,
--   <a>updateDeviceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceDefinitionResponse :: Int -> UpdateDeviceDefinitionResponse

-- | The response's http status code.
updateDeviceDefinitionResponse_httpStatus :: Lens' UpdateDeviceDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance GHC.Show.Show Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance GHC.Read.Read Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateDeviceDefinition.UpdateDeviceDefinition


-- | Updates a Lambda function definition.
module Network.AWS.Greengrass.UpdateFunctionDefinition

-- | <i>See:</i> <a>newUpdateFunctionDefinition</a> smart constructor.
data UpdateFunctionDefinition
UpdateFunctionDefinition' :: Maybe Text -> Text -> UpdateFunctionDefinition

-- | The name of the definition.
[$sel:name:UpdateFunctionDefinition'] :: UpdateFunctionDefinition -> Maybe Text

-- | The ID of the Lambda function definition.
[$sel:functionDefinitionId:UpdateFunctionDefinition'] :: UpdateFunctionDefinition -> Text

-- | Create a value of <a>UpdateFunctionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateFunctionDefinition'</a>,
--   <a>updateFunctionDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:functionDefinitionId:UpdateFunctionDefinition'</a>,
--   <a>updateFunctionDefinition_functionDefinitionId</a> - The ID of the
--   Lambda function definition.
newUpdateFunctionDefinition :: Text -> UpdateFunctionDefinition

-- | The name of the definition.
updateFunctionDefinition_name :: Lens' UpdateFunctionDefinition (Maybe Text)

-- | The ID of the Lambda function definition.
updateFunctionDefinition_functionDefinitionId :: Lens' UpdateFunctionDefinition Text

-- | <i>See:</i> <a>newUpdateFunctionDefinitionResponse</a> smart
--   constructor.
data UpdateFunctionDefinitionResponse
UpdateFunctionDefinitionResponse' :: Int -> UpdateFunctionDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateFunctionDefinitionResponse'] :: UpdateFunctionDefinitionResponse -> Int

-- | Create a value of <a>UpdateFunctionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateFunctionDefinitionResponse'</a>,
--   <a>updateFunctionDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateFunctionDefinitionResponse :: Int -> UpdateFunctionDefinitionResponse

-- | The response's http status code.
updateFunctionDefinitionResponse_httpStatus :: Lens' UpdateFunctionDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance GHC.Show.Show Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance GHC.Read.Read Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateFunctionDefinition.UpdateFunctionDefinition


-- | Updates a group.
module Network.AWS.Greengrass.UpdateGroup

-- | <i>See:</i> <a>newUpdateGroup</a> smart constructor.
data UpdateGroup
UpdateGroup' :: Maybe Text -> Text -> UpdateGroup

-- | The name of the definition.
[$sel:name:UpdateGroup'] :: UpdateGroup -> Maybe Text

-- | The ID of the Greengrass group.
[$sel:groupId:UpdateGroup'] :: UpdateGroup -> Text

-- | Create a value of <a>UpdateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateGroup'</a>, <a>updateGroup_name</a> - The name of
--   the definition.
--   
--   <a>$sel:groupId:UpdateGroup'</a>, <a>updateGroup_groupId</a> - The ID
--   of the Greengrass group.
newUpdateGroup :: Text -> UpdateGroup

-- | The name of the definition.
updateGroup_name :: Lens' UpdateGroup (Maybe Text)

-- | The ID of the Greengrass group.
updateGroup_groupId :: Lens' UpdateGroup Text

-- | <i>See:</i> <a>newUpdateGroupResponse</a> smart constructor.
data UpdateGroupResponse
UpdateGroupResponse' :: Int -> UpdateGroupResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateGroupResponse'] :: UpdateGroupResponse -> Int

-- | Create a value of <a>UpdateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_httpStatus</a> - The response's http status
--   code.
newUpdateGroupResponse :: Int -> UpdateGroupResponse

-- | The response's http status code.
updateGroupResponse_httpStatus :: Lens' UpdateGroupResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance GHC.Show.Show Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance GHC.Read.Read Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateGroup.UpdateGroupResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateGroup.UpdateGroupResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateGroup.UpdateGroupResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateGroup.UpdateGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateGroup.UpdateGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateGroup.UpdateGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateGroup.UpdateGroup


-- | Updates the Certificate expiry time for a group.
module Network.AWS.Greengrass.UpdateGroupCertificateConfiguration

-- | <i>See:</i> <a>newUpdateGroupCertificateConfiguration</a> smart
--   constructor.
data UpdateGroupCertificateConfiguration
UpdateGroupCertificateConfiguration' :: Maybe Text -> Text -> UpdateGroupCertificateConfiguration

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
[$sel:certificateExpiryInMilliseconds:UpdateGroupCertificateConfiguration'] :: UpdateGroupCertificateConfiguration -> Maybe Text

-- | The ID of the Greengrass group.
[$sel:groupId:UpdateGroupCertificateConfiguration'] :: UpdateGroupCertificateConfiguration -> Text

-- | Create a value of <a>UpdateGroupCertificateConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateExpiryInMilliseconds:UpdateGroupCertificateConfiguration'</a>,
--   <a>updateGroupCertificateConfiguration_certificateExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate expires, in
--   milliseconds.
--   
--   <a>$sel:groupId:UpdateGroupCertificateConfiguration'</a>,
--   <a>updateGroupCertificateConfiguration_groupId</a> - The ID of the
--   Greengrass group.
newUpdateGroupCertificateConfiguration :: Text -> UpdateGroupCertificateConfiguration

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
updateGroupCertificateConfiguration_certificateExpiryInMilliseconds :: Lens' UpdateGroupCertificateConfiguration (Maybe Text)

-- | The ID of the Greengrass group.
updateGroupCertificateConfiguration_groupId :: Lens' UpdateGroupCertificateConfiguration Text

-- | <i>See:</i> <a>newUpdateGroupCertificateConfigurationResponse</a>
--   smart constructor.
data UpdateGroupCertificateConfigurationResponse
UpdateGroupCertificateConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateGroupCertificateConfigurationResponse

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
[$sel:certificateExpiryInMilliseconds:UpdateGroupCertificateConfigurationResponse'] :: UpdateGroupCertificateConfigurationResponse -> Maybe Text

-- | The ID of the group certificate configuration.
[$sel:groupId:UpdateGroupCertificateConfigurationResponse'] :: UpdateGroupCertificateConfigurationResponse -> Maybe Text

-- | The amount of time remaining before the certificate authority expires,
--   in milliseconds.
[$sel:certificateAuthorityExpiryInMilliseconds:UpdateGroupCertificateConfigurationResponse'] :: UpdateGroupCertificateConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateGroupCertificateConfigurationResponse'] :: UpdateGroupCertificateConfigurationResponse -> Int

-- | Create a value of <a>UpdateGroupCertificateConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateExpiryInMilliseconds:UpdateGroupCertificateConfiguration'</a>,
--   <a>updateGroupCertificateConfigurationResponse_certificateExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate expires, in
--   milliseconds.
--   
--   <a>$sel:groupId:UpdateGroupCertificateConfiguration'</a>,
--   <a>updateGroupCertificateConfigurationResponse_groupId</a> - The ID of
--   the group certificate configuration.
--   
--   
--   <a>$sel:certificateAuthorityExpiryInMilliseconds:UpdateGroupCertificateConfigurationResponse'</a>,
--   <a>updateGroupCertificateConfigurationResponse_certificateAuthorityExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate authority
--   expires, in milliseconds.
--   
--   <a>$sel:httpStatus:UpdateGroupCertificateConfigurationResponse'</a>,
--   <a>updateGroupCertificateConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateGroupCertificateConfigurationResponse :: Int -> UpdateGroupCertificateConfigurationResponse

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
updateGroupCertificateConfigurationResponse_certificateExpiryInMilliseconds :: Lens' UpdateGroupCertificateConfigurationResponse (Maybe Text)

-- | The ID of the group certificate configuration.
updateGroupCertificateConfigurationResponse_groupId :: Lens' UpdateGroupCertificateConfigurationResponse (Maybe Text)

-- | The amount of time remaining before the certificate authority expires,
--   in milliseconds.
updateGroupCertificateConfigurationResponse_certificateAuthorityExpiryInMilliseconds :: Lens' UpdateGroupCertificateConfigurationResponse (Maybe Text)

-- | The response's http status code.
updateGroupCertificateConfigurationResponse_httpStatus :: Lens' UpdateGroupCertificateConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance GHC.Show.Show Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance GHC.Read.Read Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfigurationResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfigurationResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateGroupCertificateConfiguration.UpdateGroupCertificateConfiguration


-- | Updates a logger definition.
module Network.AWS.Greengrass.UpdateLoggerDefinition

-- | <i>See:</i> <a>newUpdateLoggerDefinition</a> smart constructor.
data UpdateLoggerDefinition
UpdateLoggerDefinition' :: Maybe Text -> Text -> UpdateLoggerDefinition

-- | The name of the definition.
[$sel:name:UpdateLoggerDefinition'] :: UpdateLoggerDefinition -> Maybe Text

-- | The ID of the logger definition.
[$sel:loggerDefinitionId:UpdateLoggerDefinition'] :: UpdateLoggerDefinition -> Text

-- | Create a value of <a>UpdateLoggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateLoggerDefinition'</a>,
--   <a>updateLoggerDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:loggerDefinitionId:UpdateLoggerDefinition'</a>,
--   <a>updateLoggerDefinition_loggerDefinitionId</a> - The ID of the
--   logger definition.
newUpdateLoggerDefinition :: Text -> UpdateLoggerDefinition

-- | The name of the definition.
updateLoggerDefinition_name :: Lens' UpdateLoggerDefinition (Maybe Text)

-- | The ID of the logger definition.
updateLoggerDefinition_loggerDefinitionId :: Lens' UpdateLoggerDefinition Text

-- | <i>See:</i> <a>newUpdateLoggerDefinitionResponse</a> smart
--   constructor.
data UpdateLoggerDefinitionResponse
UpdateLoggerDefinitionResponse' :: Int -> UpdateLoggerDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateLoggerDefinitionResponse'] :: UpdateLoggerDefinitionResponse -> Int

-- | Create a value of <a>UpdateLoggerDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLoggerDefinitionResponse'</a>,
--   <a>updateLoggerDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLoggerDefinitionResponse :: Int -> UpdateLoggerDefinitionResponse

-- | The response's http status code.
updateLoggerDefinitionResponse_httpStatus :: Lens' UpdateLoggerDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance GHC.Show.Show Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance GHC.Read.Read Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateLoggerDefinition.UpdateLoggerDefinition


-- | Updates a resource definition.
module Network.AWS.Greengrass.UpdateResourceDefinition

-- | <i>See:</i> <a>newUpdateResourceDefinition</a> smart constructor.
data UpdateResourceDefinition
UpdateResourceDefinition' :: Maybe Text -> Text -> UpdateResourceDefinition

-- | The name of the definition.
[$sel:name:UpdateResourceDefinition'] :: UpdateResourceDefinition -> Maybe Text

-- | The ID of the resource definition.
[$sel:resourceDefinitionId:UpdateResourceDefinition'] :: UpdateResourceDefinition -> Text

-- | Create a value of <a>UpdateResourceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateResourceDefinition'</a>,
--   <a>updateResourceDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:resourceDefinitionId:UpdateResourceDefinition'</a>,
--   <a>updateResourceDefinition_resourceDefinitionId</a> - The ID of the
--   resource definition.
newUpdateResourceDefinition :: Text -> UpdateResourceDefinition

-- | The name of the definition.
updateResourceDefinition_name :: Lens' UpdateResourceDefinition (Maybe Text)

-- | The ID of the resource definition.
updateResourceDefinition_resourceDefinitionId :: Lens' UpdateResourceDefinition Text

-- | <i>See:</i> <a>newUpdateResourceDefinitionResponse</a> smart
--   constructor.
data UpdateResourceDefinitionResponse
UpdateResourceDefinitionResponse' :: Int -> UpdateResourceDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateResourceDefinitionResponse'] :: UpdateResourceDefinitionResponse -> Int

-- | Create a value of <a>UpdateResourceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateResourceDefinitionResponse'</a>,
--   <a>updateResourceDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateResourceDefinitionResponse :: Int -> UpdateResourceDefinitionResponse

-- | The response's http status code.
updateResourceDefinitionResponse_httpStatus :: Lens' UpdateResourceDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance GHC.Show.Show Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance GHC.Read.Read Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateResourceDefinition.UpdateResourceDefinition


-- | Updates a subscription definition.
module Network.AWS.Greengrass.UpdateSubscriptionDefinition

-- | <i>See:</i> <a>newUpdateSubscriptionDefinition</a> smart constructor.
data UpdateSubscriptionDefinition
UpdateSubscriptionDefinition' :: Maybe Text -> Text -> UpdateSubscriptionDefinition

-- | The name of the definition.
[$sel:name:UpdateSubscriptionDefinition'] :: UpdateSubscriptionDefinition -> Maybe Text

-- | The ID of the subscription definition.
[$sel:subscriptionDefinitionId:UpdateSubscriptionDefinition'] :: UpdateSubscriptionDefinition -> Text

-- | Create a value of <a>UpdateSubscriptionDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateSubscriptionDefinition'</a>,
--   <a>updateSubscriptionDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:subscriptionDefinitionId:UpdateSubscriptionDefinition'</a>,
--   <a>updateSubscriptionDefinition_subscriptionDefinitionId</a> - The ID
--   of the subscription definition.
newUpdateSubscriptionDefinition :: Text -> UpdateSubscriptionDefinition

-- | The name of the definition.
updateSubscriptionDefinition_name :: Lens' UpdateSubscriptionDefinition (Maybe Text)

-- | The ID of the subscription definition.
updateSubscriptionDefinition_subscriptionDefinitionId :: Lens' UpdateSubscriptionDefinition Text

-- | <i>See:</i> <a>newUpdateSubscriptionDefinitionResponse</a> smart
--   constructor.
data UpdateSubscriptionDefinitionResponse
UpdateSubscriptionDefinitionResponse' :: Int -> UpdateSubscriptionDefinitionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateSubscriptionDefinitionResponse'] :: UpdateSubscriptionDefinitionResponse -> Int

-- | Create a value of <a>UpdateSubscriptionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateSubscriptionDefinitionResponse'</a>,
--   <a>updateSubscriptionDefinitionResponse_httpStatus</a> - The
--   response's http status code.
newUpdateSubscriptionDefinitionResponse :: Int -> UpdateSubscriptionDefinitionResponse

-- | The response's http status code.
updateSubscriptionDefinitionResponse_httpStatus :: Lens' UpdateSubscriptionDefinitionResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance GHC.Show.Show Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance GHC.Read.Read Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinitionResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinitionResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinitionResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinitionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinitionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateSubscriptionDefinition.UpdateSubscriptionDefinition


-- | Updates the runtime configuration of a thing.
module Network.AWS.Greengrass.UpdateThingRuntimeConfiguration

-- | <i>See:</i> <a>newUpdateThingRuntimeConfiguration</a> smart
--   constructor.
data UpdateThingRuntimeConfiguration
UpdateThingRuntimeConfiguration' :: Maybe TelemetryConfigurationUpdate -> Text -> UpdateThingRuntimeConfiguration

-- | Configuration for telemetry service.
[$sel:telemetryConfiguration:UpdateThingRuntimeConfiguration'] :: UpdateThingRuntimeConfiguration -> Maybe TelemetryConfigurationUpdate

-- | The thing name.
[$sel:thingName:UpdateThingRuntimeConfiguration'] :: UpdateThingRuntimeConfiguration -> Text

-- | Create a value of <a>UpdateThingRuntimeConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:telemetryConfiguration:UpdateThingRuntimeConfiguration'</a>,
--   <a>updateThingRuntimeConfiguration_telemetryConfiguration</a> -
--   Configuration for telemetry service.
--   
--   <a>$sel:thingName:UpdateThingRuntimeConfiguration'</a>,
--   <a>updateThingRuntimeConfiguration_thingName</a> - The thing name.
newUpdateThingRuntimeConfiguration :: Text -> UpdateThingRuntimeConfiguration

-- | Configuration for telemetry service.
updateThingRuntimeConfiguration_telemetryConfiguration :: Lens' UpdateThingRuntimeConfiguration (Maybe TelemetryConfigurationUpdate)

-- | The thing name.
updateThingRuntimeConfiguration_thingName :: Lens' UpdateThingRuntimeConfiguration Text

-- | <i>See:</i> <a>newUpdateThingRuntimeConfigurationResponse</a> smart
--   constructor.
data UpdateThingRuntimeConfigurationResponse
UpdateThingRuntimeConfigurationResponse' :: Int -> UpdateThingRuntimeConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateThingRuntimeConfigurationResponse'] :: UpdateThingRuntimeConfigurationResponse -> Int

-- | Create a value of <a>UpdateThingRuntimeConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateThingRuntimeConfigurationResponse'</a>,
--   <a>updateThingRuntimeConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateThingRuntimeConfigurationResponse :: Int -> UpdateThingRuntimeConfigurationResponse

-- | The response's http status code.
updateThingRuntimeConfigurationResponse_httpStatus :: Lens' UpdateThingRuntimeConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance GHC.Show.Show Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance GHC.Read.Read Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance GHC.Generics.Generic Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfigurationResponse
instance GHC.Show.Show Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfigurationResponse
instance GHC.Read.Read Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfigurationResponse
instance GHC.Classes.Eq Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance Control.DeepSeq.NFData Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.Greengrass.UpdateThingRuntimeConfiguration.UpdateThingRuntimeConfiguration


module Network.AWS.Greengrass.Lens

-- | The ID of the core definition.
deleteCoreDefinition_coreDefinitionId :: Lens' DeleteCoreDefinition Text

-- | The response's http status code.
deleteCoreDefinitionResponse_httpStatus :: Lens' DeleteCoreDefinitionResponse Int

-- | The name of the definition.
updateCoreDefinition_name :: Lens' UpdateCoreDefinition (Maybe Text)

-- | The ID of the core definition.
updateCoreDefinition_coreDefinitionId :: Lens' UpdateCoreDefinition Text

-- | The response's http status code.
updateCoreDefinitionResponse_httpStatus :: Lens' UpdateCoreDefinitionResponse Int

-- | The ID of the subscription definition.
deleteSubscriptionDefinition_subscriptionDefinitionId :: Lens' DeleteSubscriptionDefinition Text

-- | The response's http status code.
deleteSubscriptionDefinitionResponse_httpStatus :: Lens' DeleteSubscriptionDefinitionResponse Int

-- | The name of the definition.
updateSubscriptionDefinition_name :: Lens' UpdateSubscriptionDefinition (Maybe Text)

-- | The ID of the subscription definition.
updateSubscriptionDefinition_subscriptionDefinitionId :: Lens' UpdateSubscriptionDefinition Text

-- | The response's http status code.
updateSubscriptionDefinitionResponse_httpStatus :: Lens' UpdateSubscriptionDefinitionResponse Int

-- | The ARN of the service role you wish to associate with your account.
associateServiceRoleToAccount_roleArn :: Lens' AssociateServiceRoleToAccount Text

-- | The time when the service role was associated with the account.
associateServiceRoleToAccountResponse_associatedAt :: Lens' AssociateServiceRoleToAccountResponse (Maybe Text)

-- | The response's http status code.
associateServiceRoleToAccountResponse_httpStatus :: Lens' AssociateServiceRoleToAccountResponse Int

-- | The ID of the Greengrass group.
getGroupCertificateConfiguration_groupId :: Lens' GetGroupCertificateConfiguration Text

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
getGroupCertificateConfigurationResponse_certificateExpiryInMilliseconds :: Lens' GetGroupCertificateConfigurationResponse (Maybe Text)

-- | The ID of the group certificate configuration.
getGroupCertificateConfigurationResponse_groupId :: Lens' GetGroupCertificateConfigurationResponse (Maybe Text)

-- | The amount of time remaining before the certificate authority expires,
--   in milliseconds.
getGroupCertificateConfigurationResponse_certificateAuthorityExpiryInMilliseconds :: Lens' GetGroupCertificateConfigurationResponse (Maybe Text)

-- | The response's http status code.
getGroupCertificateConfigurationResponse_httpStatus :: Lens' GetGroupCertificateConfigurationResponse Int

-- | The ID of the Greengrass group.
associateRoleToGroup_groupId :: Lens' AssociateRoleToGroup Text

-- | The ARN of the role you wish to associate with this group. The
--   existence of the role is not validated.
associateRoleToGroup_roleArn :: Lens' AssociateRoleToGroup Text

-- | The time, in milliseconds since the epoch, when the role ARN was
--   associated with the group.
associateRoleToGroupResponse_associatedAt :: Lens' AssociateRoleToGroupResponse (Maybe Text)

-- | The response's http status code.
associateRoleToGroupResponse_httpStatus :: Lens' AssociateRoleToGroupResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listFunctionDefinitionVersions_nextToken :: Lens' ListFunctionDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listFunctionDefinitionVersions_maxResults :: Lens' ListFunctionDefinitionVersions (Maybe Text)

-- | The ID of the Lambda function definition.
listFunctionDefinitionVersions_functionDefinitionId :: Lens' ListFunctionDefinitionVersions Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listFunctionDefinitionVersionsResponse_nextToken :: Lens' ListFunctionDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listFunctionDefinitionVersionsResponse_versions :: Lens' ListFunctionDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listFunctionDefinitionVersionsResponse_httpStatus :: Lens' ListFunctionDefinitionVersionsResponse Int

-- | The ID of the bulk deployment.
stopBulkDeployment_bulkDeploymentId :: Lens' StopBulkDeployment Text

-- | The response's http status code.
stopBulkDeploymentResponse_httpStatus :: Lens' StopBulkDeploymentResponse Int

-- | A list of Lambda functions in this function definition version.
createFunctionDefinitionVersion_functions :: Lens' CreateFunctionDefinitionVersion (Maybe [Function])

-- | The default configuration that applies to all Lambda functions in this
--   function definition version. Individual Lambda functions can override
--   these settings.
createFunctionDefinitionVersion_defaultConfig :: Lens' CreateFunctionDefinitionVersion (Maybe FunctionDefaultConfig)

-- | A client token used to correlate requests and responses.
createFunctionDefinitionVersion_amznClientToken :: Lens' CreateFunctionDefinitionVersion (Maybe Text)

-- | The ID of the Lambda function definition.
createFunctionDefinitionVersion_functionDefinitionId :: Lens' CreateFunctionDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createFunctionDefinitionVersionResponse_creationTimestamp :: Lens' CreateFunctionDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createFunctionDefinitionVersionResponse_arn :: Lens' CreateFunctionDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createFunctionDefinitionVersionResponse_id :: Lens' CreateFunctionDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createFunctionDefinitionVersionResponse_version :: Lens' CreateFunctionDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createFunctionDefinitionVersionResponse_httpStatus :: Lens' CreateFunctionDefinitionVersionResponse Int

-- | Configuration for telemetry service.
updateThingRuntimeConfiguration_telemetryConfiguration :: Lens' UpdateThingRuntimeConfiguration (Maybe TelemetryConfigurationUpdate)

-- | The thing name.
updateThingRuntimeConfiguration_thingName :: Lens' UpdateThingRuntimeConfiguration Text

-- | The response's http status code.
updateThingRuntimeConfigurationResponse_httpStatus :: Lens' UpdateThingRuntimeConfigurationResponse Int

-- | The ID of the Lambda function definition.
getFunctionDefinition_functionDefinitionId :: Lens' GetFunctionDefinition Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getFunctionDefinitionResponse_creationTimestamp :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getFunctionDefinitionResponse_latestVersionArn :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getFunctionDefinitionResponse_latestVersion :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getFunctionDefinitionResponse_arn :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getFunctionDefinitionResponse_id :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The name of the definition.
getFunctionDefinitionResponse_name :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getFunctionDefinitionResponse_tags :: Lens' GetFunctionDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getFunctionDefinitionResponse_lastUpdatedTimestamp :: Lens' GetFunctionDefinitionResponse (Maybe Text)

-- | The response's http status code.
getFunctionDefinitionResponse_httpStatus :: Lens' GetFunctionDefinitionResponse Int

-- | Tag(s) to add to the new resource.
startBulkDeployment_tags :: Lens' StartBulkDeployment (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
startBulkDeployment_amznClientToken :: Lens' StartBulkDeployment (Maybe Text)

-- | The ARN of the execution role to associate with the bulk deployment
--   operation. This IAM role must allow the
--   ''greengrass:CreateDeployment'' action for all group versions that are
--   listed in the input file. This IAM role must have access to the S3
--   bucket containing the input file.
startBulkDeployment_executionRoleArn :: Lens' StartBulkDeployment Text

-- | The URI of the input file contained in the S3 bucket. The execution
--   role must have ''getObject'' permissions on this bucket to access the
--   input file. The input file is a JSON-serialized, line delimited file
--   with UTF-8 encoding that provides a list of group and version IDs and
--   the deployment type. This file must be less than 100 MB. Currently,
--   AWS IoT Greengrass supports only ''NewDeployment'' deployment types.
startBulkDeployment_inputFileUri :: Lens' StartBulkDeployment Text

-- | The ID of the bulk deployment.
startBulkDeploymentResponse_bulkDeploymentId :: Lens' StartBulkDeploymentResponse (Maybe Text)

-- | The ARN of the bulk deployment.
startBulkDeploymentResponse_bulkDeploymentArn :: Lens' StartBulkDeploymentResponse (Maybe Text)

-- | The response's http status code.
startBulkDeploymentResponse_httpStatus :: Lens' StartBulkDeploymentResponse Int

-- | The thing name.
getThingRuntimeConfiguration_thingName :: Lens' GetThingRuntimeConfiguration Text

-- | Runtime configuration for a thing.
getThingRuntimeConfigurationResponse_runtimeConfiguration :: Lens' GetThingRuntimeConfigurationResponse (Maybe RuntimeConfiguration)

-- | The response's http status code.
getThingRuntimeConfigurationResponse_httpStatus :: Lens' GetThingRuntimeConfigurationResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listResourceDefinitions_nextToken :: Lens' ListResourceDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listResourceDefinitions_maxResults :: Lens' ListResourceDefinitions (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listResourceDefinitionsResponse_nextToken :: Lens' ListResourceDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listResourceDefinitionsResponse_definitions :: Lens' ListResourceDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listResourceDefinitionsResponse_httpStatus :: Lens' ListResourceDefinitionsResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeviceDefinitionVersions_nextToken :: Lens' ListDeviceDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listDeviceDefinitionVersions_maxResults :: Lens' ListDeviceDefinitionVersions (Maybe Text)

-- | The ID of the device definition.
listDeviceDefinitionVersions_deviceDefinitionId :: Lens' ListDeviceDefinitionVersions Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeviceDefinitionVersionsResponse_nextToken :: Lens' ListDeviceDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listDeviceDefinitionVersionsResponse_versions :: Lens' ListDeviceDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listDeviceDefinitionVersionsResponse_httpStatus :: Lens' ListDeviceDefinitionVersionsResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listGroups_nextToken :: Lens' ListGroups (Maybe Text)

-- | The maximum number of results to be returned per request.
listGroups_maxResults :: Lens' ListGroups (Maybe Text)

-- | Information about a group.
listGroupsResponse_groups :: Lens' ListGroupsResponse (Maybe [GroupInformation])

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listGroupsResponse_nextToken :: Lens' ListGroupsResponse (Maybe Text)

-- | The response's http status code.
listGroupsResponse_httpStatus :: Lens' ListGroupsResponse Int

-- | The ID of the resource definition.
deleteResourceDefinition_resourceDefinitionId :: Lens' DeleteResourceDefinition Text

-- | The response's http status code.
deleteResourceDefinitionResponse_httpStatus :: Lens' DeleteResourceDefinitionResponse Int

-- | The name of the definition.
updateResourceDefinition_name :: Lens' UpdateResourceDefinition (Maybe Text)

-- | The ID of the resource definition.
updateResourceDefinition_resourceDefinitionId :: Lens' UpdateResourceDefinition Text

-- | The response's http status code.
updateResourceDefinitionResponse_httpStatus :: Lens' UpdateResourceDefinitionResponse Int

-- | The ID of the group version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListGroupVersions'' requests. If the version is the last
--   one that was associated with a group, the value also maps to the
--   ''LatestVersion'' property of the corresponding ''GroupInformation''
--   object.
getGroupVersion_groupVersionId :: Lens' GetGroupVersion Text

-- | The ID of the Greengrass group.
getGroupVersion_groupId :: Lens' GetGroupVersion Text

-- | The time, in milliseconds since the epoch, when the group version was
--   created.
getGroupVersionResponse_creationTimestamp :: Lens' GetGroupVersionResponse (Maybe Text)

-- | The ARN of the group version.
getGroupVersionResponse_arn :: Lens' GetGroupVersionResponse (Maybe Text)

-- | The ID of the group that the version is associated with.
getGroupVersionResponse_id :: Lens' GetGroupVersionResponse (Maybe Text)

-- | The ID of the group version.
getGroupVersionResponse_version :: Lens' GetGroupVersionResponse (Maybe Text)

-- | Information about the group version definition.
getGroupVersionResponse_definition :: Lens' GetGroupVersionResponse (Maybe GroupVersion)

-- | The response's http status code.
getGroupVersionResponse_httpStatus :: Lens' GetGroupVersionResponse Int

-- | A list of devices in the definition version.
createDeviceDefinitionVersion_devices :: Lens' CreateDeviceDefinitionVersion (Maybe [Device])

-- | A client token used to correlate requests and responses.
createDeviceDefinitionVersion_amznClientToken :: Lens' CreateDeviceDefinitionVersion (Maybe Text)

-- | The ID of the device definition.
createDeviceDefinitionVersion_deviceDefinitionId :: Lens' CreateDeviceDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createDeviceDefinitionVersionResponse_creationTimestamp :: Lens' CreateDeviceDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createDeviceDefinitionVersionResponse_arn :: Lens' CreateDeviceDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createDeviceDefinitionVersionResponse_id :: Lens' CreateDeviceDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createDeviceDefinitionVersionResponse_version :: Lens' CreateDeviceDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createDeviceDefinitionVersionResponse_httpStatus :: Lens' CreateDeviceDefinitionVersionResponse Int

-- | The name of the resource definition.
createResourceDefinition_name :: Lens' CreateResourceDefinition (Maybe Text)

-- | Information about the initial version of the resource definition.
createResourceDefinition_initialVersion :: Lens' CreateResourceDefinition (Maybe ResourceDefinitionVersion)

-- | Tag(s) to add to the new resource.
createResourceDefinition_tags :: Lens' CreateResourceDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createResourceDefinition_amznClientToken :: Lens' CreateResourceDefinition (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createResourceDefinitionResponse_creationTimestamp :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createResourceDefinitionResponse_latestVersionArn :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createResourceDefinitionResponse_latestVersion :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createResourceDefinitionResponse_arn :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createResourceDefinitionResponse_id :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The name of the definition.
createResourceDefinitionResponse_name :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createResourceDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateResourceDefinitionResponse (Maybe Text)

-- | The response's http status code.
createResourceDefinitionResponse_httpStatus :: Lens' CreateResourceDefinitionResponse Int

-- | The ID of the device definition.
getDeviceDefinition_deviceDefinitionId :: Lens' GetDeviceDefinition Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getDeviceDefinitionResponse_creationTimestamp :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getDeviceDefinitionResponse_latestVersionArn :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getDeviceDefinitionResponse_latestVersion :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getDeviceDefinitionResponse_arn :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getDeviceDefinitionResponse_id :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The name of the definition.
getDeviceDefinitionResponse_name :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getDeviceDefinitionResponse_tags :: Lens' GetDeviceDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getDeviceDefinitionResponse_lastUpdatedTimestamp :: Lens' GetDeviceDefinitionResponse (Maybe Text)

-- | The response's http status code.
getDeviceDefinitionResponse_httpStatus :: Lens' GetDeviceDefinitionResponse Int

-- | Information about the initial version of the group.
createGroup_initialVersion :: Lens' CreateGroup (Maybe GroupVersion)

-- | Tag(s) to add to the new resource.
createGroup_tags :: Lens' CreateGroup (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createGroup_amznClientToken :: Lens' CreateGroup (Maybe Text)

-- | The name of the group.
createGroup_name :: Lens' CreateGroup Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createGroupResponse_creationTimestamp :: Lens' CreateGroupResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createGroupResponse_latestVersionArn :: Lens' CreateGroupResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createGroupResponse_latestVersion :: Lens' CreateGroupResponse (Maybe Text)

-- | The ARN of the definition.
createGroupResponse_arn :: Lens' CreateGroupResponse (Maybe Text)

-- | The ID of the definition.
createGroupResponse_id :: Lens' CreateGroupResponse (Maybe Text)

-- | The name of the definition.
createGroupResponse_name :: Lens' CreateGroupResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createGroupResponse_lastUpdatedTimestamp :: Lens' CreateGroupResponse (Maybe Text)

-- | The response's http status code.
createGroupResponse_httpStatus :: Lens' CreateGroupResponse Int

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
updateGroupCertificateConfiguration_certificateExpiryInMilliseconds :: Lens' UpdateGroupCertificateConfiguration (Maybe Text)

-- | The ID of the Greengrass group.
updateGroupCertificateConfiguration_groupId :: Lens' UpdateGroupCertificateConfiguration Text

-- | The amount of time remaining before the certificate expires, in
--   milliseconds.
updateGroupCertificateConfigurationResponse_certificateExpiryInMilliseconds :: Lens' UpdateGroupCertificateConfigurationResponse (Maybe Text)

-- | The ID of the group certificate configuration.
updateGroupCertificateConfigurationResponse_groupId :: Lens' UpdateGroupCertificateConfigurationResponse (Maybe Text)

-- | The amount of time remaining before the certificate authority expires,
--   in milliseconds.
updateGroupCertificateConfigurationResponse_certificateAuthorityExpiryInMilliseconds :: Lens' UpdateGroupCertificateConfigurationResponse (Maybe Text)

-- | The response's http status code.
updateGroupCertificateConfigurationResponse_httpStatus :: Lens' UpdateGroupCertificateConfigurationResponse Int

-- | An array of tag keys to delete
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The Amazon Resource Name (ARN) of the resource.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The ID of the resource definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListResourceDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   resource definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getResourceDefinitionVersion_resourceDefinitionVersionId :: Lens' GetResourceDefinitionVersion Text

-- | The ID of the resource definition.
getResourceDefinitionVersion_resourceDefinitionId :: Lens' GetResourceDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the resource
--   definition version was created.
getResourceDefinitionVersionResponse_creationTimestamp :: Lens' GetResourceDefinitionVersionResponse (Maybe Text)

-- | Arn of the resource definition version.
getResourceDefinitionVersionResponse_arn :: Lens' GetResourceDefinitionVersionResponse (Maybe Text)

-- | The ID of the resource definition version.
getResourceDefinitionVersionResponse_id :: Lens' GetResourceDefinitionVersionResponse (Maybe Text)

-- | The version of the resource definition version.
getResourceDefinitionVersionResponse_version :: Lens' GetResourceDefinitionVersionResponse (Maybe Text)

-- | Information about the definition.
getResourceDefinitionVersionResponse_definition :: Lens' GetResourceDefinitionVersionResponse (Maybe ResourceDefinitionVersion)

-- | The response's http status code.
getResourceDefinitionVersionResponse_httpStatus :: Lens' GetResourceDefinitionVersionResponse Int

-- | Undocumented member.
tagResource_tags :: Lens' TagResource (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the resource.
tagResource_resourceArn :: Lens' TagResource Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listLoggerDefinitions_nextToken :: Lens' ListLoggerDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listLoggerDefinitions_maxResults :: Lens' ListLoggerDefinitions (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listLoggerDefinitionsResponse_nextToken :: Lens' ListLoggerDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listLoggerDefinitionsResponse_definitions :: Lens' ListLoggerDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listLoggerDefinitionsResponse_httpStatus :: Lens' ListLoggerDefinitionsResponse Int

-- | The ID of the logger definition.
deleteLoggerDefinition_loggerDefinitionId :: Lens' DeleteLoggerDefinition Text

-- | The response's http status code.
deleteLoggerDefinitionResponse_httpStatus :: Lens' DeleteLoggerDefinitionResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeployments_nextToken :: Lens' ListDeployments (Maybe Text)

-- | The maximum number of results to be returned per request.
listDeployments_maxResults :: Lens' ListDeployments (Maybe Text)

-- | The ID of the Greengrass group.
listDeployments_groupId :: Lens' ListDeployments Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeploymentsResponse_nextToken :: Lens' ListDeploymentsResponse (Maybe Text)

-- | A list of deployments for the requested groups.
listDeploymentsResponse_deployments :: Lens' ListDeploymentsResponse (Maybe [Deployment])

-- | The response's http status code.
listDeploymentsResponse_httpStatus :: Lens' ListDeploymentsResponse Int

-- | A list of subscriptions.
createSubscriptionDefinitionVersion_subscriptions :: Lens' CreateSubscriptionDefinitionVersion (Maybe [Subscription])

-- | A client token used to correlate requests and responses.
createSubscriptionDefinitionVersion_amznClientToken :: Lens' CreateSubscriptionDefinitionVersion (Maybe Text)

-- | The ID of the subscription definition.
createSubscriptionDefinitionVersion_subscriptionDefinitionId :: Lens' CreateSubscriptionDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createSubscriptionDefinitionVersionResponse_creationTimestamp :: Lens' CreateSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createSubscriptionDefinitionVersionResponse_arn :: Lens' CreateSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createSubscriptionDefinitionVersionResponse_id :: Lens' CreateSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createSubscriptionDefinitionVersionResponse_version :: Lens' CreateSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createSubscriptionDefinitionVersionResponse_httpStatus :: Lens' CreateSubscriptionDefinitionVersionResponse Int

-- | A list of cores in the core definition version.
createCoreDefinitionVersion_cores :: Lens' CreateCoreDefinitionVersion (Maybe [Core])

-- | A client token used to correlate requests and responses.
createCoreDefinitionVersion_amznClientToken :: Lens' CreateCoreDefinitionVersion (Maybe Text)

-- | The ID of the core definition.
createCoreDefinitionVersion_coreDefinitionId :: Lens' CreateCoreDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createCoreDefinitionVersionResponse_creationTimestamp :: Lens' CreateCoreDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createCoreDefinitionVersionResponse_arn :: Lens' CreateCoreDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createCoreDefinitionVersionResponse_id :: Lens' CreateCoreDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createCoreDefinitionVersionResponse_version :: Lens' CreateCoreDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createCoreDefinitionVersionResponse_httpStatus :: Lens' CreateCoreDefinitionVersionResponse Int

-- | A list of references to connectors in this version, with their
--   corresponding configuration settings.
createConnectorDefinitionVersion_connectors :: Lens' CreateConnectorDefinitionVersion (Maybe [Connector])

-- | A client token used to correlate requests and responses.
createConnectorDefinitionVersion_amznClientToken :: Lens' CreateConnectorDefinitionVersion (Maybe Text)

-- | The ID of the connector definition.
createConnectorDefinitionVersion_connectorDefinitionId :: Lens' CreateConnectorDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createConnectorDefinitionVersionResponse_creationTimestamp :: Lens' CreateConnectorDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createConnectorDefinitionVersionResponse_arn :: Lens' CreateConnectorDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createConnectorDefinitionVersionResponse_id :: Lens' CreateConnectorDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createConnectorDefinitionVersionResponse_version :: Lens' CreateConnectorDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createConnectorDefinitionVersionResponse_httpStatus :: Lens' CreateConnectorDefinitionVersionResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listBulkDeployments_nextToken :: Lens' ListBulkDeployments (Maybe Text)

-- | The maximum number of results to be returned per request.
listBulkDeployments_maxResults :: Lens' ListBulkDeployments (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listBulkDeploymentsResponse_nextToken :: Lens' ListBulkDeploymentsResponse (Maybe Text)

-- | A list of bulk deployments.
listBulkDeploymentsResponse_bulkDeployments :: Lens' ListBulkDeploymentsResponse (Maybe [BulkDeployment])

-- | The response's http status code.
listBulkDeploymentsResponse_httpStatus :: Lens' ListBulkDeploymentsResponse Int

-- | The name of the definition.
updateLoggerDefinition_name :: Lens' UpdateLoggerDefinition (Maybe Text)

-- | The ID of the logger definition.
updateLoggerDefinition_loggerDefinitionId :: Lens' UpdateLoggerDefinition Text

-- | The response's http status code.
updateLoggerDefinitionResponse_httpStatus :: Lens' UpdateLoggerDefinitionResponse Int

-- | Undocumented member.
createSoftwareUpdateJob_updateAgentLogLevel :: Lens' CreateSoftwareUpdateJob (Maybe UpdateAgentLogLevel)

-- | A client token used to correlate requests and responses.
createSoftwareUpdateJob_amznClientToken :: Lens' CreateSoftwareUpdateJob (Maybe Text)

-- | Undocumented member.
createSoftwareUpdateJob_s3UrlSignerRole :: Lens' CreateSoftwareUpdateJob Text

-- | Undocumented member.
createSoftwareUpdateJob_updateTargetsArchitecture :: Lens' CreateSoftwareUpdateJob UpdateTargetsArchitecture

-- | Undocumented member.
createSoftwareUpdateJob_softwareToUpdate :: Lens' CreateSoftwareUpdateJob SoftwareToUpdate

-- | Undocumented member.
createSoftwareUpdateJob_updateTargets :: Lens' CreateSoftwareUpdateJob [Text]

-- | Undocumented member.
createSoftwareUpdateJob_updateTargetsOperatingSystem :: Lens' CreateSoftwareUpdateJob UpdateTargetsOperatingSystem

-- | The IoT Job Id corresponding to this update.
createSoftwareUpdateJobResponse_iotJobId :: Lens' CreateSoftwareUpdateJobResponse (Maybe Text)

-- | The IoT Job ARN corresponding to this update.
createSoftwareUpdateJobResponse_iotJobArn :: Lens' CreateSoftwareUpdateJobResponse (Maybe Text)

-- | The software version installed on the device or devices after the
--   update.
createSoftwareUpdateJobResponse_platformSoftwareVersion :: Lens' CreateSoftwareUpdateJobResponse (Maybe Text)

-- | The response's http status code.
createSoftwareUpdateJobResponse_httpStatus :: Lens' CreateSoftwareUpdateJobResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listSubscriptionDefinitionVersions_nextToken :: Lens' ListSubscriptionDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listSubscriptionDefinitionVersions_maxResults :: Lens' ListSubscriptionDefinitionVersions (Maybe Text)

-- | The ID of the subscription definition.
listSubscriptionDefinitionVersions_subscriptionDefinitionId :: Lens' ListSubscriptionDefinitionVersions Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listSubscriptionDefinitionVersionsResponse_nextToken :: Lens' ListSubscriptionDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listSubscriptionDefinitionVersionsResponse_versions :: Lens' ListSubscriptionDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listSubscriptionDefinitionVersionsResponse_httpStatus :: Lens' ListSubscriptionDefinitionVersionsResponse Int

-- | The thing name.
getConnectivityInfo_thingName :: Lens' GetConnectivityInfo Text

-- | A message about the connectivity info request.
getConnectivityInfoResponse_message :: Lens' GetConnectivityInfoResponse (Maybe Text)

-- | Connectivity info list.
getConnectivityInfoResponse_connectivityInfo :: Lens' GetConnectivityInfoResponse (Maybe [ConnectivityInfo])

-- | The response's http status code.
getConnectivityInfoResponse_httpStatus :: Lens' GetConnectivityInfoResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listConnectorDefinitionVersions_nextToken :: Lens' ListConnectorDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listConnectorDefinitionVersions_maxResults :: Lens' ListConnectorDefinitionVersions (Maybe Text)

-- | The ID of the connector definition.
listConnectorDefinitionVersions_connectorDefinitionId :: Lens' ListConnectorDefinitionVersions Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listConnectorDefinitionVersionsResponse_nextToken :: Lens' ListConnectorDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listConnectorDefinitionVersionsResponse_versions :: Lens' ListConnectorDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listConnectorDefinitionVersionsResponse_httpStatus :: Lens' ListConnectorDefinitionVersionsResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listCoreDefinitionVersions_nextToken :: Lens' ListCoreDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listCoreDefinitionVersions_maxResults :: Lens' ListCoreDefinitionVersions (Maybe Text)

-- | The ID of the core definition.
listCoreDefinitionVersions_coreDefinitionId :: Lens' ListCoreDefinitionVersions Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listCoreDefinitionVersionsResponse_nextToken :: Lens' ListCoreDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listCoreDefinitionVersionsResponse_versions :: Lens' ListCoreDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listCoreDefinitionVersionsResponse_httpStatus :: Lens' ListCoreDefinitionVersionsResponse Int

-- | The ID of the Greengrass group.
getAssociatedRole_groupId :: Lens' GetAssociatedRole Text

-- | The ARN of the role that is associated with the group.
getAssociatedRoleResponse_roleArn :: Lens' GetAssociatedRoleResponse (Maybe Text)

-- | The time when the role was associated with the group.
getAssociatedRoleResponse_associatedAt :: Lens' GetAssociatedRoleResponse (Maybe Text)

-- | The response's http status code.
getAssociatedRoleResponse_httpStatus :: Lens' GetAssociatedRoleResponse Int

-- | The name of the core definition.
createCoreDefinition_name :: Lens' CreateCoreDefinition (Maybe Text)

-- | Information about the initial version of the core definition.
createCoreDefinition_initialVersion :: Lens' CreateCoreDefinition (Maybe CoreDefinitionVersion)

-- | Tag(s) to add to the new resource.
createCoreDefinition_tags :: Lens' CreateCoreDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createCoreDefinition_amznClientToken :: Lens' CreateCoreDefinition (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createCoreDefinitionResponse_creationTimestamp :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createCoreDefinitionResponse_latestVersionArn :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createCoreDefinitionResponse_latestVersion :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createCoreDefinitionResponse_arn :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createCoreDefinitionResponse_id :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The name of the definition.
createCoreDefinitionResponse_name :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createCoreDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateCoreDefinitionResponse (Maybe Text)

-- | The response's http status code.
createCoreDefinitionResponse_httpStatus :: Lens' CreateCoreDefinitionResponse Int

-- | A list of connectivity info.
updateConnectivityInfo_connectivityInfo :: Lens' UpdateConnectivityInfo (Maybe [ConnectivityInfo])

-- | The thing name.
updateConnectivityInfo_thingName :: Lens' UpdateConnectivityInfo Text

-- | A message about the connectivity info update request.
updateConnectivityInfoResponse_message :: Lens' UpdateConnectivityInfoResponse (Maybe Text)

-- | The new version of the connectivity info.
updateConnectivityInfoResponse_version :: Lens' UpdateConnectivityInfoResponse (Maybe Text)

-- | The response's http status code.
updateConnectivityInfoResponse_httpStatus :: Lens' UpdateConnectivityInfoResponse Int

-- | The name of the subscription definition.
createSubscriptionDefinition_name :: Lens' CreateSubscriptionDefinition (Maybe Text)

-- | Information about the initial version of the subscription definition.
createSubscriptionDefinition_initialVersion :: Lens' CreateSubscriptionDefinition (Maybe SubscriptionDefinitionVersion)

-- | Tag(s) to add to the new resource.
createSubscriptionDefinition_tags :: Lens' CreateSubscriptionDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createSubscriptionDefinition_amznClientToken :: Lens' CreateSubscriptionDefinition (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createSubscriptionDefinitionResponse_creationTimestamp :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createSubscriptionDefinitionResponse_latestVersionArn :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createSubscriptionDefinitionResponse_latestVersion :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createSubscriptionDefinitionResponse_arn :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createSubscriptionDefinitionResponse_id :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The name of the definition.
createSubscriptionDefinitionResponse_name :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createSubscriptionDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateSubscriptionDefinitionResponse (Maybe Text)

-- | The response's http status code.
createSubscriptionDefinitionResponse_httpStatus :: Lens' CreateSubscriptionDefinitionResponse Int

-- | The name of the connector definition.
createConnectorDefinition_name :: Lens' CreateConnectorDefinition (Maybe Text)

-- | Information about the initial version of the connector definition.
createConnectorDefinition_initialVersion :: Lens' CreateConnectorDefinition (Maybe ConnectorDefinitionVersion)

-- | Tag(s) to add to the new resource.
createConnectorDefinition_tags :: Lens' CreateConnectorDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createConnectorDefinition_amznClientToken :: Lens' CreateConnectorDefinition (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createConnectorDefinitionResponse_creationTimestamp :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createConnectorDefinitionResponse_latestVersionArn :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createConnectorDefinitionResponse_latestVersion :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createConnectorDefinitionResponse_arn :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createConnectorDefinitionResponse_id :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The name of the definition.
createConnectorDefinitionResponse_name :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createConnectorDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateConnectorDefinitionResponse (Maybe Text)

-- | The response's http status code.
createConnectorDefinitionResponse_httpStatus :: Lens' CreateConnectorDefinitionResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listConnectorDefinitions_nextToken :: Lens' ListConnectorDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listConnectorDefinitions_maxResults :: Lens' ListConnectorDefinitions (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listConnectorDefinitionsResponse_nextToken :: Lens' ListConnectorDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listConnectorDefinitionsResponse_definitions :: Lens' ListConnectorDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listConnectorDefinitionsResponse_httpStatus :: Lens' ListConnectorDefinitionsResponse Int

-- | The ID of the logger definition.
getLoggerDefinition_loggerDefinitionId :: Lens' GetLoggerDefinition Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getLoggerDefinitionResponse_creationTimestamp :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getLoggerDefinitionResponse_latestVersionArn :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getLoggerDefinitionResponse_latestVersion :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getLoggerDefinitionResponse_arn :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getLoggerDefinitionResponse_id :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The name of the definition.
getLoggerDefinitionResponse_name :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getLoggerDefinitionResponse_tags :: Lens' GetLoggerDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getLoggerDefinitionResponse_lastUpdatedTimestamp :: Lens' GetLoggerDefinitionResponse (Maybe Text)

-- | The response's http status code.
getLoggerDefinitionResponse_httpStatus :: Lens' GetLoggerDefinitionResponse Int

-- | The ID of the connector definition.
deleteConnectorDefinition_connectorDefinitionId :: Lens' DeleteConnectorDefinition Text

-- | The response's http status code.
deleteConnectorDefinitionResponse_httpStatus :: Lens' DeleteConnectorDefinitionResponse Int

-- | A client token used to correlate requests and responses.
createGroupCertificateAuthority_amznClientToken :: Lens' CreateGroupCertificateAuthority (Maybe Text)

-- | The ID of the Greengrass group.
createGroupCertificateAuthority_groupId :: Lens' CreateGroupCertificateAuthority Text

-- | The ARN of the group certificate authority.
createGroupCertificateAuthorityResponse_groupCertificateAuthorityArn :: Lens' CreateGroupCertificateAuthorityResponse (Maybe Text)

-- | The response's http status code.
createGroupCertificateAuthorityResponse_httpStatus :: Lens' CreateGroupCertificateAuthorityResponse Int

-- | The ID of the Greengrass group.
listGroupCertificateAuthorities_groupId :: Lens' ListGroupCertificateAuthorities Text

-- | A list of certificate authorities associated with the group.
listGroupCertificateAuthoritiesResponse_groupCertificateAuthorities :: Lens' ListGroupCertificateAuthoritiesResponse (Maybe [GroupCertificateAuthorityProperties])

-- | The response's http status code.
listGroupCertificateAuthoritiesResponse_httpStatus :: Lens' ListGroupCertificateAuthoritiesResponse Int

-- | The ID of the Greengrass group.
disassociateRoleFromGroup_groupId :: Lens' DisassociateRoleFromGroup Text

-- | The time, in milliseconds since the epoch, when the role was
--   disassociated from the group.
disassociateRoleFromGroupResponse_disassociatedAt :: Lens' DisassociateRoleFromGroupResponse (Maybe Text)

-- | The response's http status code.
disassociateRoleFromGroupResponse_httpStatus :: Lens' DisassociateRoleFromGroupResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listCoreDefinitions_nextToken :: Lens' ListCoreDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listCoreDefinitions_maxResults :: Lens' ListCoreDefinitions (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listCoreDefinitionsResponse_nextToken :: Lens' ListCoreDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listCoreDefinitionsResponse_definitions :: Lens' ListCoreDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listCoreDefinitionsResponse_httpStatus :: Lens' ListCoreDefinitionsResponse Int

-- | The name of the definition.
updateConnectorDefinition_name :: Lens' UpdateConnectorDefinition (Maybe Text)

-- | The ID of the connector definition.
updateConnectorDefinition_connectorDefinitionId :: Lens' UpdateConnectorDefinition Text

-- | The response's http status code.
updateConnectorDefinitionResponse_httpStatus :: Lens' UpdateConnectorDefinitionResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listSubscriptionDefinitions_nextToken :: Lens' ListSubscriptionDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listSubscriptionDefinitions_maxResults :: Lens' ListSubscriptionDefinitions (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listSubscriptionDefinitionsResponse_nextToken :: Lens' ListSubscriptionDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listSubscriptionDefinitionsResponse_definitions :: Lens' ListSubscriptionDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listSubscriptionDefinitionsResponse_httpStatus :: Lens' ListSubscriptionDefinitionsResponse Int

-- | A list of loggers.
createLoggerDefinitionVersion_loggers :: Lens' CreateLoggerDefinitionVersion (Maybe [GreengrassLogger])

-- | A client token used to correlate requests and responses.
createLoggerDefinitionVersion_amznClientToken :: Lens' CreateLoggerDefinitionVersion (Maybe Text)

-- | The ID of the logger definition.
createLoggerDefinitionVersion_loggerDefinitionId :: Lens' CreateLoggerDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createLoggerDefinitionVersionResponse_creationTimestamp :: Lens' CreateLoggerDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createLoggerDefinitionVersionResponse_arn :: Lens' CreateLoggerDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createLoggerDefinitionVersionResponse_id :: Lens' CreateLoggerDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createLoggerDefinitionVersionResponse_version :: Lens' CreateLoggerDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createLoggerDefinitionVersionResponse_httpStatus :: Lens' CreateLoggerDefinitionVersionResponse Int

-- | If true, performs a best-effort only core reset.
resetDeployments_force :: Lens' ResetDeployments (Maybe Bool)

-- | A client token used to correlate requests and responses.
resetDeployments_amznClientToken :: Lens' ResetDeployments (Maybe Text)

-- | The ID of the Greengrass group.
resetDeployments_groupId :: Lens' ResetDeployments Text

-- | The ID of the deployment.
resetDeploymentsResponse_deploymentId :: Lens' ResetDeploymentsResponse (Maybe Text)

-- | The ARN of the deployment.
resetDeploymentsResponse_deploymentArn :: Lens' ResetDeploymentsResponse (Maybe Text)

-- | The response's http status code.
resetDeploymentsResponse_httpStatus :: Lens' ResetDeploymentsResponse Int

-- | The ID of the device definition.
deleteDeviceDefinition_deviceDefinitionId :: Lens' DeleteDeviceDefinition Text

-- | The response's http status code.
deleteDeviceDefinitionResponse_httpStatus :: Lens' DeleteDeviceDefinitionResponse Int

-- | The time when the service role was disassociated from the account.
disassociateServiceRoleFromAccountResponse_disassociatedAt :: Lens' DisassociateServiceRoleFromAccountResponse (Maybe Text)

-- | The response's http status code.
disassociateServiceRoleFromAccountResponse_httpStatus :: Lens' DisassociateServiceRoleFromAccountResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeviceDefinitions_nextToken :: Lens' ListDeviceDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listDeviceDefinitions_maxResults :: Lens' ListDeviceDefinitions (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listDeviceDefinitionsResponse_nextToken :: Lens' ListDeviceDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listDeviceDefinitionsResponse_definitions :: Lens' ListDeviceDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listDeviceDefinitionsResponse_httpStatus :: Lens' ListDeviceDefinitionsResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listGroupVersions_nextToken :: Lens' ListGroupVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listGroupVersions_maxResults :: Lens' ListGroupVersions (Maybe Text)

-- | The ID of the Greengrass group.
listGroupVersions_groupId :: Lens' ListGroupVersions Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listGroupVersionsResponse_nextToken :: Lens' ListGroupVersionsResponse (Maybe Text)

-- | Information about a version.
listGroupVersionsResponse_versions :: Lens' ListGroupVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listGroupVersionsResponse_httpStatus :: Lens' ListGroupVersionsResponse Int

-- | The name of the definition.
updateDeviceDefinition_name :: Lens' UpdateDeviceDefinition (Maybe Text)

-- | The ID of the device definition.
updateDeviceDefinition_deviceDefinitionId :: Lens' UpdateDeviceDefinition Text

-- | The response's http status code.
updateDeviceDefinitionResponse_httpStatus :: Lens' UpdateDeviceDefinitionResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listResourceDefinitionVersions_nextToken :: Lens' ListResourceDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listResourceDefinitionVersions_maxResults :: Lens' ListResourceDefinitionVersions (Maybe Text)

-- | The ID of the resource definition.
listResourceDefinitionVersions_resourceDefinitionId :: Lens' ListResourceDefinitionVersions Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listResourceDefinitionVersionsResponse_nextToken :: Lens' ListResourceDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listResourceDefinitionVersionsResponse_versions :: Lens' ListResourceDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listResourceDefinitionVersionsResponse_httpStatus :: Lens' ListResourceDefinitionVersionsResponse Int

-- | The name of the device definition.
createDeviceDefinition_name :: Lens' CreateDeviceDefinition (Maybe Text)

-- | Information about the initial version of the device definition.
createDeviceDefinition_initialVersion :: Lens' CreateDeviceDefinition (Maybe DeviceDefinitionVersion)

-- | Tag(s) to add to the new resource.
createDeviceDefinition_tags :: Lens' CreateDeviceDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createDeviceDefinition_amznClientToken :: Lens' CreateDeviceDefinition (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createDeviceDefinitionResponse_creationTimestamp :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createDeviceDefinitionResponse_latestVersionArn :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createDeviceDefinitionResponse_latestVersion :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createDeviceDefinitionResponse_arn :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createDeviceDefinitionResponse_id :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The name of the definition.
createDeviceDefinitionResponse_name :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createDeviceDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateDeviceDefinitionResponse (Maybe Text)

-- | The response's http status code.
createDeviceDefinitionResponse_httpStatus :: Lens' CreateDeviceDefinitionResponse Int

-- | The ID of the resource definition.
getResourceDefinition_resourceDefinitionId :: Lens' GetResourceDefinition Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getResourceDefinitionResponse_creationTimestamp :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getResourceDefinitionResponse_latestVersionArn :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getResourceDefinitionResponse_latestVersion :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getResourceDefinitionResponse_arn :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getResourceDefinitionResponse_id :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The name of the definition.
getResourceDefinitionResponse_name :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getResourceDefinitionResponse_tags :: Lens' GetResourceDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getResourceDefinitionResponse_lastUpdatedTimestamp :: Lens' GetResourceDefinitionResponse (Maybe Text)

-- | The response's http status code.
getResourceDefinitionResponse_httpStatus :: Lens' GetResourceDefinitionResponse Int

-- | A list of resources.
createResourceDefinitionVersion_resources :: Lens' CreateResourceDefinitionVersion (Maybe [Resource])

-- | A client token used to correlate requests and responses.
createResourceDefinitionVersion_amznClientToken :: Lens' CreateResourceDefinitionVersion (Maybe Text)

-- | The ID of the resource definition.
createResourceDefinitionVersion_resourceDefinitionId :: Lens' CreateResourceDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createResourceDefinitionVersionResponse_creationTimestamp :: Lens' CreateResourceDefinitionVersionResponse (Maybe Text)

-- | The ARN of the version.
createResourceDefinitionVersionResponse_arn :: Lens' CreateResourceDefinitionVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createResourceDefinitionVersionResponse_id :: Lens' CreateResourceDefinitionVersionResponse (Maybe Text)

-- | The ID of the version.
createResourceDefinitionVersionResponse_version :: Lens' CreateResourceDefinitionVersionResponse (Maybe Text)

-- | The response's http status code.
createResourceDefinitionVersionResponse_httpStatus :: Lens' CreateResourceDefinitionVersionResponse Int

-- | The ARN of the subscription definition version for this group.
createGroupVersion_subscriptionDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the core definition version for this group.
createGroupVersion_coreDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the connector definition version for this group.
createGroupVersion_connectorDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the logger definition version for this group.
createGroupVersion_loggerDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the resource definition version for this group.
createGroupVersion_resourceDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the function definition version for this group.
createGroupVersion_functionDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | A client token used to correlate requests and responses.
createGroupVersion_amznClientToken :: Lens' CreateGroupVersion (Maybe Text)

-- | The ARN of the device definition version for this group.
createGroupVersion_deviceDefinitionVersionArn :: Lens' CreateGroupVersion (Maybe Text)

-- | The ID of the Greengrass group.
createGroupVersion_groupId :: Lens' CreateGroupVersion Text

-- | The time, in milliseconds since the epoch, when the version was
--   created.
createGroupVersionResponse_creationTimestamp :: Lens' CreateGroupVersionResponse (Maybe Text)

-- | The ARN of the version.
createGroupVersionResponse_arn :: Lens' CreateGroupVersionResponse (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
createGroupVersionResponse_id :: Lens' CreateGroupVersionResponse (Maybe Text)

-- | The ID of the version.
createGroupVersionResponse_version :: Lens' CreateGroupVersionResponse (Maybe Text)

-- | The response's http status code.
createGroupVersionResponse_httpStatus :: Lens' CreateGroupVersionResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getDeviceDefinitionVersion_nextToken :: Lens' GetDeviceDefinitionVersion (Maybe Text)

-- | The ID of the device definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListDeviceDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   device definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getDeviceDefinitionVersion_deviceDefinitionVersionId :: Lens' GetDeviceDefinitionVersion Text

-- | The ID of the device definition.
getDeviceDefinitionVersion_deviceDefinitionId :: Lens' GetDeviceDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the device definition
--   version was created.
getDeviceDefinitionVersionResponse_creationTimestamp :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getDeviceDefinitionVersionResponse_nextToken :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | The ARN of the device definition version.
getDeviceDefinitionVersionResponse_arn :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | The ID of the device definition version.
getDeviceDefinitionVersionResponse_id :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | The version of the device definition version.
getDeviceDefinitionVersionResponse_version :: Lens' GetDeviceDefinitionVersionResponse (Maybe Text)

-- | Information about the device definition version.
getDeviceDefinitionVersionResponse_definition :: Lens' GetDeviceDefinitionVersionResponse (Maybe DeviceDefinitionVersion)

-- | The response's http status code.
getDeviceDefinitionVersionResponse_httpStatus :: Lens' GetDeviceDefinitionVersionResponse Int

-- | The ID of the Greengrass group.
getGroup_groupId :: Lens' GetGroup Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getGroupResponse_creationTimestamp :: Lens' GetGroupResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getGroupResponse_latestVersionArn :: Lens' GetGroupResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getGroupResponse_latestVersion :: Lens' GetGroupResponse (Maybe Text)

-- | The ARN of the definition.
getGroupResponse_arn :: Lens' GetGroupResponse (Maybe Text)

-- | The ID of the definition.
getGroupResponse_id :: Lens' GetGroupResponse (Maybe Text)

-- | The name of the definition.
getGroupResponse_name :: Lens' GetGroupResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getGroupResponse_tags :: Lens' GetGroupResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getGroupResponse_lastUpdatedTimestamp :: Lens' GetGroupResponse (Maybe Text)

-- | The response's http status code.
getGroupResponse_httpStatus :: Lens' GetGroupResponse Int

-- | The ID of the Greengrass group.
deleteGroup_groupId :: Lens' DeleteGroup Text

-- | The response's http status code.
deleteGroupResponse_httpStatus :: Lens' DeleteGroupResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listFunctionDefinitions_nextToken :: Lens' ListFunctionDefinitions (Maybe Text)

-- | The maximum number of results to be returned per request.
listFunctionDefinitions_maxResults :: Lens' ListFunctionDefinitions (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listFunctionDefinitionsResponse_nextToken :: Lens' ListFunctionDefinitionsResponse (Maybe Text)

-- | Information about a definition.
listFunctionDefinitionsResponse_definitions :: Lens' ListFunctionDefinitionsResponse (Maybe [DefinitionInformation])

-- | The response's http status code.
listFunctionDefinitionsResponse_httpStatus :: Lens' ListFunctionDefinitionsResponse Int

-- | The ID of the Lambda function definition.
deleteFunctionDefinition_functionDefinitionId :: Lens' DeleteFunctionDefinition Text

-- | The response's http status code.
deleteFunctionDefinitionResponse_httpStatus :: Lens' DeleteFunctionDefinitionResponse Int

-- | The name of the definition.
updateFunctionDefinition_name :: Lens' UpdateFunctionDefinition (Maybe Text)

-- | The ID of the Lambda function definition.
updateFunctionDefinition_functionDefinitionId :: Lens' UpdateFunctionDefinition Text

-- | The response's http status code.
updateFunctionDefinitionResponse_httpStatus :: Lens' UpdateFunctionDefinitionResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listBulkDeploymentDetailedReports_nextToken :: Lens' ListBulkDeploymentDetailedReports (Maybe Text)

-- | The maximum number of results to be returned per request.
listBulkDeploymentDetailedReports_maxResults :: Lens' ListBulkDeploymentDetailedReports (Maybe Text)

-- | The ID of the bulk deployment.
listBulkDeploymentDetailedReports_bulkDeploymentId :: Lens' ListBulkDeploymentDetailedReports Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listBulkDeploymentDetailedReportsResponse_nextToken :: Lens' ListBulkDeploymentDetailedReportsResponse (Maybe Text)

-- | A list of the individual group deployments in the bulk deployment
--   operation.
listBulkDeploymentDetailedReportsResponse_deployments :: Lens' ListBulkDeploymentDetailedReportsResponse (Maybe [BulkDeploymentResult])

-- | The response's http status code.
listBulkDeploymentDetailedReportsResponse_httpStatus :: Lens' ListBulkDeploymentDetailedReportsResponse Int

-- | The name of the definition.
updateGroup_name :: Lens' UpdateGroup (Maybe Text)

-- | The ID of the Greengrass group.
updateGroup_groupId :: Lens' UpdateGroup Text

-- | The response's http status code.
updateGroupResponse_httpStatus :: Lens' UpdateGroupResponse Int

-- | The ID of the Greengrass group.
getDeploymentStatus_groupId :: Lens' GetDeploymentStatus Text

-- | The ID of the deployment.
getDeploymentStatus_deploymentId :: Lens' GetDeploymentStatus Text

-- | The type of the deployment.
getDeploymentStatusResponse_deploymentType :: Lens' GetDeploymentStatusResponse (Maybe DeploymentType)

-- | The time, in milliseconds since the epoch, when the deployment status
--   was updated.
getDeploymentStatusResponse_updatedAt :: Lens' GetDeploymentStatusResponse (Maybe Text)

-- | The status of the deployment: ''InProgress'', ''Building'',
--   ''Success'', or ''Failure''.
getDeploymentStatusResponse_deploymentStatus :: Lens' GetDeploymentStatusResponse (Maybe Text)

-- | Error message
getDeploymentStatusResponse_errorMessage :: Lens' GetDeploymentStatusResponse (Maybe Text)

-- | Error details
getDeploymentStatusResponse_errorDetails :: Lens' GetDeploymentStatusResponse (Maybe [ErrorDetail])

-- | The response's http status code.
getDeploymentStatusResponse_httpStatus :: Lens' GetDeploymentStatusResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getFunctionDefinitionVersion_nextToken :: Lens' GetFunctionDefinitionVersion (Maybe Text)

-- | The ID of the Lambda function definition.
getFunctionDefinitionVersion_functionDefinitionId :: Lens' GetFunctionDefinitionVersion Text

-- | The ID of the function definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListFunctionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   function definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getFunctionDefinitionVersion_functionDefinitionVersionId :: Lens' GetFunctionDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the function
--   definition version was created.
getFunctionDefinitionVersionResponse_creationTimestamp :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getFunctionDefinitionVersionResponse_nextToken :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | The ARN of the function definition version.
getFunctionDefinitionVersionResponse_arn :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | The ID of the function definition version.
getFunctionDefinitionVersionResponse_id :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | The version of the function definition version.
getFunctionDefinitionVersionResponse_version :: Lens' GetFunctionDefinitionVersionResponse (Maybe Text)

-- | Information on the definition.
getFunctionDefinitionVersionResponse_definition :: Lens' GetFunctionDefinitionVersionResponse (Maybe FunctionDefinitionVersion)

-- | The response's http status code.
getFunctionDefinitionVersionResponse_httpStatus :: Lens' GetFunctionDefinitionVersionResponse Int

-- | The ID of the bulk deployment.
getBulkDeploymentStatus_bulkDeploymentId :: Lens' GetBulkDeploymentStatus Text

-- | The status of the bulk deployment.
getBulkDeploymentStatusResponse_bulkDeploymentStatus :: Lens' GetBulkDeploymentStatusResponse (Maybe BulkDeploymentStatus)

-- | The time, in ISO format, when the deployment was created.
getBulkDeploymentStatusResponse_createdAt :: Lens' GetBulkDeploymentStatusResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getBulkDeploymentStatusResponse_tags :: Lens' GetBulkDeploymentStatusResponse (Maybe (HashMap Text Text))

-- | Relevant metrics on input records processed during bulk deployment.
getBulkDeploymentStatusResponse_bulkDeploymentMetrics :: Lens' GetBulkDeploymentStatusResponse (Maybe BulkDeploymentMetrics)

-- | Error message
getBulkDeploymentStatusResponse_errorMessage :: Lens' GetBulkDeploymentStatusResponse (Maybe Text)

-- | Error details
getBulkDeploymentStatusResponse_errorDetails :: Lens' GetBulkDeploymentStatusResponse (Maybe [ErrorDetail])

-- | The response's http status code.
getBulkDeploymentStatusResponse_httpStatus :: Lens' GetBulkDeploymentStatusResponse Int

-- | The name of the function definition.
createFunctionDefinition_name :: Lens' CreateFunctionDefinition (Maybe Text)

-- | Information about the initial version of the function definition.
createFunctionDefinition_initialVersion :: Lens' CreateFunctionDefinition (Maybe FunctionDefinitionVersion)

-- | Tag(s) to add to the new resource.
createFunctionDefinition_tags :: Lens' CreateFunctionDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createFunctionDefinition_amznClientToken :: Lens' CreateFunctionDefinition (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createFunctionDefinitionResponse_creationTimestamp :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createFunctionDefinitionResponse_latestVersionArn :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createFunctionDefinitionResponse_latestVersion :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createFunctionDefinitionResponse_arn :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createFunctionDefinitionResponse_id :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The name of the definition.
createFunctionDefinitionResponse_name :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createFunctionDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateFunctionDefinitionResponse (Maybe Text)

-- | The response's http status code.
createFunctionDefinitionResponse_httpStatus :: Lens' CreateFunctionDefinitionResponse Int

-- | The ID of the connector definition.
getConnectorDefinition_connectorDefinitionId :: Lens' GetConnectorDefinition Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getConnectorDefinitionResponse_creationTimestamp :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getConnectorDefinitionResponse_latestVersionArn :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getConnectorDefinitionResponse_latestVersion :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getConnectorDefinitionResponse_arn :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getConnectorDefinitionResponse_id :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The name of the definition.
getConnectorDefinitionResponse_name :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getConnectorDefinitionResponse_tags :: Lens' GetConnectorDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getConnectorDefinitionResponse_lastUpdatedTimestamp :: Lens' GetConnectorDefinitionResponse (Maybe Text)

-- | The response's http status code.
getConnectorDefinitionResponse_httpStatus :: Lens' GetConnectorDefinitionResponse Int

-- | The ID of the subscription definition.
getSubscriptionDefinition_subscriptionDefinitionId :: Lens' GetSubscriptionDefinition Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getSubscriptionDefinitionResponse_creationTimestamp :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getSubscriptionDefinitionResponse_latestVersionArn :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getSubscriptionDefinitionResponse_latestVersion :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getSubscriptionDefinitionResponse_arn :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getSubscriptionDefinitionResponse_id :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The name of the definition.
getSubscriptionDefinitionResponse_name :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getSubscriptionDefinitionResponse_tags :: Lens' GetSubscriptionDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getSubscriptionDefinitionResponse_lastUpdatedTimestamp :: Lens' GetSubscriptionDefinitionResponse (Maybe Text)

-- | The response's http status code.
getSubscriptionDefinitionResponse_httpStatus :: Lens' GetSubscriptionDefinitionResponse Int

-- | The ID of the core definition.
getCoreDefinition_coreDefinitionId :: Lens' GetCoreDefinition Text

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
getCoreDefinitionResponse_creationTimestamp :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
getCoreDefinitionResponse_latestVersionArn :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
getCoreDefinitionResponse_latestVersion :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
getCoreDefinitionResponse_arn :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The ID of the definition.
getCoreDefinitionResponse_id :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The name of the definition.
getCoreDefinitionResponse_name :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | Tag(s) attached to the resource arn.
getCoreDefinitionResponse_tags :: Lens' GetCoreDefinitionResponse (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
getCoreDefinitionResponse_lastUpdatedTimestamp :: Lens' GetCoreDefinitionResponse (Maybe Text)

-- | The response's http status code.
getCoreDefinitionResponse_httpStatus :: Lens' GetCoreDefinitionResponse Int

-- | The ARN of the role which is associated with the account.
getServiceRoleForAccountResponse_roleArn :: Lens' GetServiceRoleForAccountResponse (Maybe Text)

-- | The time when the service role was associated with the account.
getServiceRoleForAccountResponse_associatedAt :: Lens' GetServiceRoleForAccountResponse (Maybe Text)

-- | The response's http status code.
getServiceRoleForAccountResponse_httpStatus :: Lens' GetServiceRoleForAccountResponse Int

-- | The ID of the deployment if you wish to redeploy a previous
--   deployment.
createDeployment_deploymentId :: Lens' CreateDeployment (Maybe Text)

-- | The ID of the group version to be deployed.
createDeployment_groupVersionId :: Lens' CreateDeployment (Maybe Text)

-- | A client token used to correlate requests and responses.
createDeployment_amznClientToken :: Lens' CreateDeployment (Maybe Text)

-- | The ID of the Greengrass group.
createDeployment_groupId :: Lens' CreateDeployment Text

-- | The type of deployment. When used for ''CreateDeployment'', only
--   ''NewDeployment'' and ''Redeployment'' are valid.
createDeployment_deploymentType :: Lens' CreateDeployment DeploymentType

-- | The ID of the deployment.
createDeploymentResponse_deploymentId :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The ARN of the deployment.
createDeploymentResponse_deploymentArn :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The response's http status code.
createDeploymentResponse_httpStatus :: Lens' CreateDeploymentResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getLoggerDefinitionVersion_nextToken :: Lens' GetLoggerDefinitionVersion (Maybe Text)

-- | The ID of the logger definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListLoggerDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   logger definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getLoggerDefinitionVersion_loggerDefinitionVersionId :: Lens' GetLoggerDefinitionVersion Text

-- | The ID of the logger definition.
getLoggerDefinitionVersion_loggerDefinitionId :: Lens' GetLoggerDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the logger definition
--   version was created.
getLoggerDefinitionVersionResponse_creationTimestamp :: Lens' GetLoggerDefinitionVersionResponse (Maybe Text)

-- | The ARN of the logger definition version.
getLoggerDefinitionVersionResponse_arn :: Lens' GetLoggerDefinitionVersionResponse (Maybe Text)

-- | The ID of the logger definition version.
getLoggerDefinitionVersionResponse_id :: Lens' GetLoggerDefinitionVersionResponse (Maybe Text)

-- | The version of the logger definition version.
getLoggerDefinitionVersionResponse_version :: Lens' GetLoggerDefinitionVersionResponse (Maybe Text)

-- | Information about the logger definition version.
getLoggerDefinitionVersionResponse_definition :: Lens' GetLoggerDefinitionVersionResponse (Maybe LoggerDefinitionVersion)

-- | The response's http status code.
getLoggerDefinitionVersionResponse_httpStatus :: Lens' GetLoggerDefinitionVersionResponse Int

-- | The name of the logger definition.
createLoggerDefinition_name :: Lens' CreateLoggerDefinition (Maybe Text)

-- | Information about the initial version of the logger definition.
createLoggerDefinition_initialVersion :: Lens' CreateLoggerDefinition (Maybe LoggerDefinitionVersion)

-- | Tag(s) to add to the new resource.
createLoggerDefinition_tags :: Lens' CreateLoggerDefinition (Maybe (HashMap Text Text))

-- | A client token used to correlate requests and responses.
createLoggerDefinition_amznClientToken :: Lens' CreateLoggerDefinition (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
createLoggerDefinitionResponse_creationTimestamp :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The ARN of the latest version associated with the definition.
createLoggerDefinitionResponse_latestVersionArn :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The ID of the latest version associated with the definition.
createLoggerDefinitionResponse_latestVersion :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The ARN of the definition.
createLoggerDefinitionResponse_arn :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The ID of the definition.
createLoggerDefinitionResponse_id :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The name of the definition.
createLoggerDefinitionResponse_name :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
createLoggerDefinitionResponse_lastUpdatedTimestamp :: Lens' CreateLoggerDefinitionResponse (Maybe Text)

-- | The response's http status code.
createLoggerDefinitionResponse_httpStatus :: Lens' CreateLoggerDefinitionResponse Int

-- | The ID of the certificate authority.
getGroupCertificateAuthority_certificateAuthorityId :: Lens' GetGroupCertificateAuthority Text

-- | The ID of the Greengrass group.
getGroupCertificateAuthority_groupId :: Lens' GetGroupCertificateAuthority Text

-- | The ARN of the certificate authority for the group.
getGroupCertificateAuthorityResponse_groupCertificateAuthorityArn :: Lens' GetGroupCertificateAuthorityResponse (Maybe Text)

-- | The PEM encoded certificate for the group.
getGroupCertificateAuthorityResponse_pemEncodedCertificate :: Lens' GetGroupCertificateAuthorityResponse (Maybe Text)

-- | The ID of the certificate authority for the group.
getGroupCertificateAuthorityResponse_groupCertificateAuthorityId :: Lens' GetGroupCertificateAuthorityResponse (Maybe Text)

-- | The response's http status code.
getGroupCertificateAuthorityResponse_httpStatus :: Lens' GetGroupCertificateAuthorityResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getConnectorDefinitionVersion_nextToken :: Lens' GetConnectorDefinitionVersion (Maybe Text)

-- | The ID of the connector definition.
getConnectorDefinitionVersion_connectorDefinitionId :: Lens' GetConnectorDefinitionVersion Text

-- | The ID of the connector definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListConnectorDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   connector definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getConnectorDefinitionVersion_connectorDefinitionVersionId :: Lens' GetConnectorDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the connector
--   definition version was created.
getConnectorDefinitionVersionResponse_creationTimestamp :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getConnectorDefinitionVersionResponse_nextToken :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | The ARN of the connector definition version.
getConnectorDefinitionVersionResponse_arn :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | The ID of the connector definition version.
getConnectorDefinitionVersionResponse_id :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | The version of the connector definition version.
getConnectorDefinitionVersionResponse_version :: Lens' GetConnectorDefinitionVersionResponse (Maybe Text)

-- | Information about the connector definition version.
getConnectorDefinitionVersionResponse_definition :: Lens' GetConnectorDefinitionVersionResponse (Maybe ConnectorDefinitionVersion)

-- | The response's http status code.
getConnectorDefinitionVersionResponse_httpStatus :: Lens' GetConnectorDefinitionVersionResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listLoggerDefinitionVersions_nextToken :: Lens' ListLoggerDefinitionVersions (Maybe Text)

-- | The maximum number of results to be returned per request.
listLoggerDefinitionVersions_maxResults :: Lens' ListLoggerDefinitionVersions (Maybe Text)

-- | The ID of the logger definition.
listLoggerDefinitionVersions_loggerDefinitionId :: Lens' ListLoggerDefinitionVersions Text

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
listLoggerDefinitionVersionsResponse_nextToken :: Lens' ListLoggerDefinitionVersionsResponse (Maybe Text)

-- | Information about a version.
listLoggerDefinitionVersionsResponse_versions :: Lens' ListLoggerDefinitionVersionsResponse (Maybe [VersionInformation])

-- | The response's http status code.
listLoggerDefinitionVersionsResponse_httpStatus :: Lens' ListLoggerDefinitionVersionsResponse Int

-- | The Amazon Resource Name (ARN) of the resource.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | Undocumented member.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getSubscriptionDefinitionVersion_nextToken :: Lens' GetSubscriptionDefinitionVersion (Maybe Text)

-- | The ID of the subscription definition.
getSubscriptionDefinitionVersion_subscriptionDefinitionId :: Lens' GetSubscriptionDefinitionVersion Text

-- | The ID of the subscription definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListSubscriptionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   subscription definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
getSubscriptionDefinitionVersion_subscriptionDefinitionVersionId :: Lens' GetSubscriptionDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the subscription
--   definition version was created.
getSubscriptionDefinitionVersionResponse_creationTimestamp :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getSubscriptionDefinitionVersionResponse_nextToken :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ARN of the subscription definition version.
getSubscriptionDefinitionVersionResponse_arn :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The ID of the subscription definition version.
getSubscriptionDefinitionVersionResponse_id :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | The version of the subscription definition version.
getSubscriptionDefinitionVersionResponse_version :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe Text)

-- | Information about the subscription definition version.
getSubscriptionDefinitionVersionResponse_definition :: Lens' GetSubscriptionDefinitionVersionResponse (Maybe SubscriptionDefinitionVersion)

-- | The response's http status code.
getSubscriptionDefinitionVersionResponse_httpStatus :: Lens' GetSubscriptionDefinitionVersionResponse Int

-- | The ID of the core definition.
getCoreDefinitionVersion_coreDefinitionId :: Lens' GetCoreDefinitionVersion Text

-- | The ID of the core definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListCoreDefinitionVersions'' requests.
--   If the version is the last one that was associated with a core
--   definition, the value also maps to the ''LatestVersion'' property of
--   the corresponding ''DefinitionInformation'' object.
getCoreDefinitionVersion_coreDefinitionVersionId :: Lens' GetCoreDefinitionVersion Text

-- | The time, in milliseconds since the epoch, when the core definition
--   version was created.
getCoreDefinitionVersionResponse_creationTimestamp :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | The token for the next set of results, or ''null'' if there are no
--   additional results.
getCoreDefinitionVersionResponse_nextToken :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | The ARN of the core definition version.
getCoreDefinitionVersionResponse_arn :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | The ID of the core definition version.
getCoreDefinitionVersionResponse_id :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | The version of the core definition version.
getCoreDefinitionVersionResponse_version :: Lens' GetCoreDefinitionVersionResponse (Maybe Text)

-- | Information about the core definition version.
getCoreDefinitionVersionResponse_definition :: Lens' GetCoreDefinitionVersionResponse (Maybe CoreDefinitionVersion)

-- | The response's http status code.
getCoreDefinitionVersionResponse_httpStatus :: Lens' GetCoreDefinitionVersionResponse Int

-- | The ID of the bulk deployment.
bulkDeployment_bulkDeploymentId :: Lens' BulkDeployment (Maybe Text)

-- | The time, in ISO format, when the deployment was created.
bulkDeployment_createdAt :: Lens' BulkDeployment (Maybe Text)

-- | The ARN of the bulk deployment.
bulkDeployment_bulkDeploymentArn :: Lens' BulkDeployment (Maybe Text)

-- | The total number of group records from the input file that have been
--   processed so far, or attempted.
bulkDeploymentMetrics_recordsProcessed :: Lens' BulkDeploymentMetrics (Maybe Int)

-- | The total number of deployment attempts that returned a retryable
--   error. For example, a retry is triggered if the attempt to deploy a
--   group returns a throttling error. ''StartBulkDeployment'' retries a
--   group deployment up to five times.
bulkDeploymentMetrics_retryAttempts :: Lens' BulkDeploymentMetrics (Maybe Int)

-- | The total number of records that returned a non-retryable error. For
--   example, this can occur if a group record from the input file uses an
--   invalid format or specifies a nonexistent group version, or if the
--   execution role doesn't grant permission to deploy a group or group
--   version.
bulkDeploymentMetrics_invalidInputRecords :: Lens' BulkDeploymentMetrics (Maybe Int)

-- | The ID of the group deployment.
bulkDeploymentResult_deploymentId :: Lens' BulkDeploymentResult (Maybe Text)

-- | The type of the deployment.
bulkDeploymentResult_deploymentType :: Lens' BulkDeploymentResult (Maybe DeploymentType)

-- | The time, in ISO format, when the deployment was created.
bulkDeploymentResult_createdAt :: Lens' BulkDeploymentResult (Maybe Text)

-- | The current status of the group deployment: ''InProgress'',
--   ''Building'', ''Success'', or ''Failure''.
bulkDeploymentResult_deploymentStatus :: Lens' BulkDeploymentResult (Maybe Text)

-- | The ARN of the group deployment.
bulkDeploymentResult_deploymentArn :: Lens' BulkDeploymentResult (Maybe Text)

-- | The error message for a failed deployment
bulkDeploymentResult_errorMessage :: Lens' BulkDeploymentResult (Maybe Text)

-- | The ARN of the Greengrass group.
bulkDeploymentResult_groupArn :: Lens' BulkDeploymentResult (Maybe Text)

-- | Details about the error.
bulkDeploymentResult_errorDetails :: Lens' BulkDeploymentResult (Maybe [ErrorDetail])

-- | Metadata for this endpoint.
connectivityInfo_metadata :: Lens' ConnectivityInfo (Maybe Text)

-- | The ID of the connectivity information.
connectivityInfo_id :: Lens' ConnectivityInfo (Maybe Text)

-- | The port of the Greengrass core. Usually 8883.
connectivityInfo_portNumber :: Lens' ConnectivityInfo (Maybe Int)

-- | The endpoint for the Greengrass core. Can be an IP address or DNS.
connectivityInfo_hostAddress :: Lens' ConnectivityInfo (Maybe Text)

-- | The parameters or configuration that the connector uses.
connector_parameters :: Lens' Connector (Maybe (HashMap Text Text))

-- | The ARN of the connector.
connector_connectorArn :: Lens' Connector Text

-- | A descriptive or arbitrary ID for the connector. This value must be
--   unique within the connector definition version. Max length is 128
--   characters with pattern [a-zA-Z0-9:_-]+.
connector_id :: Lens' Connector Text

-- | A list of references to connectors in this version, with their
--   corresponding configuration settings.
connectorDefinitionVersion_connectors :: Lens' ConnectorDefinitionVersion (Maybe [Connector])

-- | If true, the core's local shadow is automatically synced with the
--   cloud.
core_syncShadow :: Lens' Core (Maybe Bool)

-- | The ARN of the thing which is the core.
core_thingArn :: Lens' Core Text

-- | A descriptive or arbitrary ID for the core. This value must be unique
--   within the core definition version. Max length is 128 characters with
--   pattern ''[a-zA-Z0-9:_-]+''.
core_id :: Lens' Core Text

-- | The ARN of the certificate associated with the core.
core_certificateArn :: Lens' Core Text

-- | A list of cores in the core definition version.
coreDefinitionVersion_cores :: Lens' CoreDefinitionVersion (Maybe [Core])

-- | The time, in milliseconds since the epoch, when the definition was
--   created.
definitionInformation_creationTimestamp :: Lens' DefinitionInformation (Maybe Text)

-- | The ARN of the latest version associated with the definition.
definitionInformation_latestVersionArn :: Lens' DefinitionInformation (Maybe Text)

-- | The ID of the latest version associated with the definition.
definitionInformation_latestVersion :: Lens' DefinitionInformation (Maybe Text)

-- | The ARN of the definition.
definitionInformation_arn :: Lens' DefinitionInformation (Maybe Text)

-- | The ID of the definition.
definitionInformation_id :: Lens' DefinitionInformation (Maybe Text)

-- | The name of the definition.
definitionInformation_name :: Lens' DefinitionInformation (Maybe Text)

-- | Tag(s) attached to the resource arn.
definitionInformation_tags :: Lens' DefinitionInformation (Maybe (HashMap Text Text))

-- | The time, in milliseconds since the epoch, when the definition was
--   last updated.
definitionInformation_lastUpdatedTimestamp :: Lens' DefinitionInformation (Maybe Text)

-- | The ID of the deployment.
deployment_deploymentId :: Lens' Deployment (Maybe Text)

-- | The type of the deployment.
deployment_deploymentType :: Lens' Deployment (Maybe DeploymentType)

-- | The time, in milliseconds since the epoch, when the deployment was
--   created.
deployment_createdAt :: Lens' Deployment (Maybe Text)

-- | The ARN of the deployment.
deployment_deploymentArn :: Lens' Deployment (Maybe Text)

-- | The ARN of the group for this deployment.
deployment_groupArn :: Lens' Deployment (Maybe Text)

-- | If true, the device's local shadow will be automatically synced with
--   the cloud.
device_syncShadow :: Lens' Device (Maybe Bool)

-- | The thing ARN of the device.
device_thingArn :: Lens' Device Text

-- | A descriptive or arbitrary ID for the device. This value must be
--   unique within the device definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
device_id :: Lens' Device Text

-- | The ARN of the certificate associated with the device.
device_certificateArn :: Lens' Device Text

-- | A list of devices in the definition version.
deviceDefinitionVersion_devices :: Lens' DeviceDefinitionVersion (Maybe [Device])

-- | A detailed error message.
errorDetail_detailedErrorMessage :: Lens' ErrorDetail (Maybe Text)

-- | A detailed error code.
errorDetail_detailedErrorCode :: Lens' ErrorDetail (Maybe Text)

-- | The configuration of the Lambda function.
function_functionConfiguration :: Lens' Function (Maybe FunctionConfiguration)

-- | The ARN of the Lambda function.
function_functionArn :: Lens' Function (Maybe Text)

-- | A descriptive or arbitrary ID for the function. This value must be
--   unique within the function definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
function_id :: Lens' Function Text

-- | The memory size, in KB, which the function requires. This setting is
--   not applicable and should be cleared when you run the Lambda function
--   without containerization.
functionConfiguration_memorySize :: Lens' FunctionConfiguration (Maybe Int)

-- | The execution arguments.
functionConfiguration_execArgs :: Lens' FunctionConfiguration (Maybe Text)

-- | The allowed function execution time, after which Lambda should
--   terminate the function. This timeout still applies to pinned Lambda
--   functions for each request.
functionConfiguration_timeout :: Lens' FunctionConfiguration (Maybe Int)

-- | The expected encoding type of the input payload for the function. The
--   default is ''json''.
functionConfiguration_encodingType :: Lens' FunctionConfiguration (Maybe EncodingType)

-- | The name of the function executable.
functionConfiguration_executable :: Lens' FunctionConfiguration (Maybe Text)

-- | True if the function is pinned. Pinned means the function is
--   long-lived and starts when the core starts.
functionConfiguration_pinned :: Lens' FunctionConfiguration (Maybe Bool)

-- | The environment configuration of the function.
functionConfiguration_environment :: Lens' FunctionConfiguration (Maybe FunctionConfigurationEnvironment)

-- | If true, the Lambda function is allowed to access the host's /sys
--   folder. Use this when the Lambda function needs to read device
--   information from /sys. This setting applies only when you run the
--   Lambda function in a Greengrass container.
functionConfigurationEnvironment_accessSysfs :: Lens' FunctionConfigurationEnvironment (Maybe Bool)

-- | Environment variables for the Lambda function's configuration.
functionConfigurationEnvironment_variables :: Lens' FunctionConfigurationEnvironment (Maybe (HashMap Text Text))

-- | Configuration related to executing the Lambda function
functionConfigurationEnvironment_execution :: Lens' FunctionConfigurationEnvironment (Maybe FunctionExecutionConfig)

-- | A list of the resources, with their permissions, to which the Lambda
--   function will be granted access. A Lambda function can have at most 10
--   resources. ResourceAccessPolicies apply only when you run the Lambda
--   function in a Greengrass container.
functionConfigurationEnvironment_resourceAccessPolicies :: Lens' FunctionConfigurationEnvironment (Maybe [ResourceAccessPolicy])

-- | Undocumented member.
functionDefaultConfig_execution :: Lens' FunctionDefaultConfig (Maybe FunctionDefaultExecutionConfig)

-- | Undocumented member.
functionDefaultExecutionConfig_isolationMode :: Lens' FunctionDefaultExecutionConfig (Maybe FunctionIsolationMode)

-- | Undocumented member.
functionDefaultExecutionConfig_runAs :: Lens' FunctionDefaultExecutionConfig (Maybe FunctionRunAsConfig)

-- | A list of Lambda functions in this function definition version.
functionDefinitionVersion_functions :: Lens' FunctionDefinitionVersion (Maybe [Function])

-- | The default configuration that applies to all Lambda functions in this
--   function definition version. Individual Lambda functions can override
--   these settings.
functionDefinitionVersion_defaultConfig :: Lens' FunctionDefinitionVersion (Maybe FunctionDefaultConfig)

-- | Undocumented member.
functionExecutionConfig_isolationMode :: Lens' FunctionExecutionConfig (Maybe FunctionIsolationMode)

-- | Undocumented member.
functionExecutionConfig_runAs :: Lens' FunctionExecutionConfig (Maybe FunctionRunAsConfig)

-- | The group ID whose permissions are used to run a Lambda function.
functionRunAsConfig_gid :: Lens' FunctionRunAsConfig (Maybe Int)

-- | The user ID whose permissions are used to run a Lambda function.
functionRunAsConfig_uid :: Lens' FunctionRunAsConfig (Maybe Int)

-- | The amount of file space, in KB, to use if the local file system is
--   used for logging purposes.
greengrassLogger_space :: Lens' GreengrassLogger (Maybe Int)

-- | The type of log output which will be used.
greengrassLogger_type :: Lens' GreengrassLogger LoggerType

-- | The level of the logs.
greengrassLogger_level :: Lens' GreengrassLogger LoggerLevel

-- | A descriptive or arbitrary ID for the logger. This value must be
--   unique within the logger definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
greengrassLogger_id :: Lens' GreengrassLogger Text

-- | The component that will be subject to logging.
greengrassLogger_component :: Lens' GreengrassLogger LoggerComponent

-- | The ARN of the certificate authority for the group.
groupCertificateAuthorityProperties_groupCertificateAuthorityArn :: Lens' GroupCertificateAuthorityProperties (Maybe Text)

-- | The ID of the certificate authority for the group.
groupCertificateAuthorityProperties_groupCertificateAuthorityId :: Lens' GroupCertificateAuthorityProperties (Maybe Text)

-- | The time, in milliseconds since the epoch, when the group was created.
groupInformation_creationTimestamp :: Lens' GroupInformation (Maybe Text)

-- | The ARN of the latest version associated with the group.
groupInformation_latestVersionArn :: Lens' GroupInformation (Maybe Text)

-- | The ID of the latest version associated with the group.
groupInformation_latestVersion :: Lens' GroupInformation (Maybe Text)

-- | The ARN of the group.
groupInformation_arn :: Lens' GroupInformation (Maybe Text)

-- | The ID of the group.
groupInformation_id :: Lens' GroupInformation (Maybe Text)

-- | The name of the group.
groupInformation_name :: Lens' GroupInformation (Maybe Text)

-- | The time, in milliseconds since the epoch, when the group was last
--   updated.
groupInformation_lastUpdatedTimestamp :: Lens' GroupInformation (Maybe Text)

-- | The name of the Linux OS group whose privileges will be added to the
--   Lambda process. This field is optional.
groupOwnerSetting_groupOwner :: Lens' GroupOwnerSetting (Maybe Text)

-- | If true, AWS IoT Greengrass automatically adds the specified Linux OS
--   group owner of the resource to the Lambda process privileges. Thus the
--   Lambda process will have the file access permissions of the added
--   Linux group.
groupOwnerSetting_autoAddGroupOwner :: Lens' GroupOwnerSetting (Maybe Bool)

-- | The ARN of the subscription definition version for this group.
groupVersion_subscriptionDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the core definition version for this group.
groupVersion_coreDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the connector definition version for this group.
groupVersion_connectorDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the logger definition version for this group.
groupVersion_loggerDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the resource definition version for this group.
groupVersion_resourceDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the function definition version for this group.
groupVersion_functionDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The ARN of the device definition version for this group.
groupVersion_deviceDefinitionVersionArn :: Lens' GroupVersion (Maybe Text)

-- | The local absolute path of the device resource. The source path for a
--   device resource can refer only to a character device or block device
--   under ''/dev''.
localDeviceResourceData_sourcePath :: Lens' LocalDeviceResourceData (Maybe Text)

-- | Group/owner related settings for local resources.
localDeviceResourceData_groupOwnerSetting :: Lens' LocalDeviceResourceData (Maybe GroupOwnerSetting)

-- | The absolute local path of the resource inside the Lambda environment.
localVolumeResourceData_destinationPath :: Lens' LocalVolumeResourceData (Maybe Text)

-- | The local absolute path of the volume resource on the host. The source
--   path for a volume resource type cannot start with ''/sys''.
localVolumeResourceData_sourcePath :: Lens' LocalVolumeResourceData (Maybe Text)

-- | Allows you to configure additional group privileges for the Lambda
--   process. This field is optional.
localVolumeResourceData_groupOwnerSetting :: Lens' LocalVolumeResourceData (Maybe GroupOwnerSetting)

-- | A list of loggers.
loggerDefinitionVersion_loggers :: Lens' LoggerDefinitionVersion (Maybe [GreengrassLogger])

-- | A container of data for all resource types.
resource_resourceDataContainer :: Lens' Resource ResourceDataContainer

-- | The resource ID, used to refer to a resource in the Lambda function
--   configuration. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
resource_id :: Lens' Resource Text

-- | The descriptive resource name, which is displayed on the AWS IoT
--   Greengrass console. Max length 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''. This must be unique within a Greengrass group.
resource_name :: Lens' Resource Text

-- | The permissions that the Lambda function has to the resource. Can be
--   one of ''rw'' (read/write) or ''ro'' (read-only).
resourceAccessPolicy_permission :: Lens' ResourceAccessPolicy (Maybe Permission)

-- | The ID of the resource. (This ID is assigned to the resource when you
--   create the resource definiton.)
resourceAccessPolicy_resourceId :: Lens' ResourceAccessPolicy Text

-- | Attributes that define the local volume resource.
resourceDataContainer_localVolumeResourceData :: Lens' ResourceDataContainer (Maybe LocalVolumeResourceData)

-- | Attributes that define the local device resource.
resourceDataContainer_localDeviceResourceData :: Lens' ResourceDataContainer (Maybe LocalDeviceResourceData)

-- | Attributes that define an Amazon S3 machine learning resource.
resourceDataContainer_s3MachineLearningModelResourceData :: Lens' ResourceDataContainer (Maybe S3MachineLearningModelResourceData)

-- | Attributes that define an Amazon SageMaker machine learning resource.
resourceDataContainer_sageMakerMachineLearningModelResourceData :: Lens' ResourceDataContainer (Maybe SageMakerMachineLearningModelResourceData)

-- | Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager.
resourceDataContainer_secretsManagerSecretResourceData :: Lens' ResourceDataContainer (Maybe SecretsManagerSecretResourceData)

-- | A list of resources.
resourceDefinitionVersion_resources :: Lens' ResourceDefinitionVersion (Maybe [Resource])

-- | The group owner of the resource. This is the name of an existing Linux
--   OS group on the system or a GID. The group's permissions are added to
--   the Lambda process.
resourceDownloadOwnerSetting_groupOwner :: Lens' ResourceDownloadOwnerSetting Text

-- | The permissions that the group owner has to the resource. Valid values
--   are ''rw'' (read/write) or ''ro'' (read-only).
resourceDownloadOwnerSetting_groupPermission :: Lens' ResourceDownloadOwnerSetting Permission

-- | Configuration for telemetry service.
runtimeConfiguration_telemetryConfiguration :: Lens' RuntimeConfiguration (Maybe TelemetryConfiguration)

-- | Undocumented member.
s3MachineLearningModelResourceData_ownerSetting :: Lens' S3MachineLearningModelResourceData (Maybe ResourceDownloadOwnerSetting)

-- | The absolute local path of the resource inside the Lambda environment.
s3MachineLearningModelResourceData_destinationPath :: Lens' S3MachineLearningModelResourceData (Maybe Text)

-- | The URI of the source model in an S3 bucket. The model package must be
--   in tar.gz or .zip format.
s3MachineLearningModelResourceData_s3Uri :: Lens' S3MachineLearningModelResourceData (Maybe Text)

-- | Undocumented member.
sageMakerMachineLearningModelResourceData_ownerSetting :: Lens' SageMakerMachineLearningModelResourceData (Maybe ResourceDownloadOwnerSetting)

-- | The absolute local path of the resource inside the Lambda environment.
sageMakerMachineLearningModelResourceData_destinationPath :: Lens' SageMakerMachineLearningModelResourceData (Maybe Text)

-- | The ARN of the Amazon SageMaker training job that represents the
--   source model.
sageMakerMachineLearningModelResourceData_sageMakerJobArn :: Lens' SageMakerMachineLearningModelResourceData (Maybe Text)

-- | The ARN of the Secrets Manager secret to make available on the core.
--   The value of the secret's latest version (represented by the
--   ''AWSCURRENT'' staging label) is included by default.
secretsManagerSecretResourceData_arn :: Lens' SecretsManagerSecretResourceData (Maybe Text)

-- | Optional. The staging labels whose values you want to make available
--   on the core, in addition to ''AWSCURRENT''.
secretsManagerSecretResourceData_additionalStagingLabelsToDownload :: Lens' SecretsManagerSecretResourceData (Maybe [Text])

-- | Where the message is sent to. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
subscription_target :: Lens' Subscription Text

-- | A descriptive or arbitrary ID for the subscription. This value must be
--   unique within the subscription definition version. Max length is 128
--   characters with pattern ''[a-zA-Z0-9:_-]+''.
subscription_id :: Lens' Subscription Text

-- | The MQTT topic used to route the message.
subscription_subject :: Lens' Subscription Text

-- | The source of the subscription. Can be a thing ARN, a Lambda function
--   ARN, a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
subscription_source :: Lens' Subscription Text

-- | A list of subscriptions.
subscriptionDefinitionVersion_subscriptions :: Lens' SubscriptionDefinitionVersion (Maybe [Subscription])

-- | Synchronization status of the device reported configuration with the
--   desired configuration.
telemetryConfiguration_configurationSyncStatus :: Lens' TelemetryConfiguration (Maybe ConfigurationSyncStatus)

-- | Configure telemetry to be on or off.
telemetryConfiguration_telemetry :: Lens' TelemetryConfiguration Telemetry

-- | Configure telemetry to be on or off.
telemetryConfigurationUpdate_telemetry :: Lens' TelemetryConfigurationUpdate Telemetry

-- | The time, in milliseconds since the epoch, when the version was
--   created.
versionInformation_creationTimestamp :: Lens' VersionInformation (Maybe Text)

-- | The ARN of the version.
versionInformation_arn :: Lens' VersionInformation (Maybe Text)

-- | The ID of the parent definition that the version is associated with.
versionInformation_id :: Lens' VersionInformation (Maybe Text)

-- | The ID of the version.
versionInformation_version :: Lens' VersionInformation (Maybe Text)


module Network.AWS.Greengrass.Waiters


-- | Derived from API version <tt>2017-06-07</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS IoT Greengrass seamlessly extends AWS onto physical devices so
--   they can act locally on the data they generate, while still using the
--   cloud for management, analytics, and durable storage. AWS IoT
--   Greengrass ensures your devices can respond quickly to local events
--   and operate with intermittent connectivity. AWS IoT Greengrass
--   minimizes the cost of transmitting data to the cloud by allowing you
--   to author AWS Lambda functions that execute locally.
module Network.AWS.Greengrass

-- | API version <tt>2017-06-07</tt> of the Amazon Greengrass SDK
--   configuration.
defaultService :: Service

-- | General error information.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | General error information.
_InternalServerErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDeleteCoreDefinition</a> smart constructor.
data DeleteCoreDefinition
DeleteCoreDefinition' :: Text -> DeleteCoreDefinition

-- | Create a value of <a>DeleteCoreDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreDefinitionId:DeleteCoreDefinition'</a>,
--   <a>deleteCoreDefinition_coreDefinitionId</a> - The ID of the core
--   definition.
newDeleteCoreDefinition :: Text -> DeleteCoreDefinition

-- | <i>See:</i> <a>newDeleteCoreDefinitionResponse</a> smart constructor.
data DeleteCoreDefinitionResponse
DeleteCoreDefinitionResponse' :: Int -> DeleteCoreDefinitionResponse

-- | Create a value of <a>DeleteCoreDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteCoreDefinitionResponse'</a>,
--   <a>deleteCoreDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteCoreDefinitionResponse :: Int -> DeleteCoreDefinitionResponse

-- | <i>See:</i> <a>newUpdateCoreDefinition</a> smart constructor.
data UpdateCoreDefinition
UpdateCoreDefinition' :: Maybe Text -> Text -> UpdateCoreDefinition

-- | Create a value of <a>UpdateCoreDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateCoreDefinition'</a>,
--   <a>updateCoreDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:coreDefinitionId:UpdateCoreDefinition'</a>,
--   <a>updateCoreDefinition_coreDefinitionId</a> - The ID of the core
--   definition.
newUpdateCoreDefinition :: Text -> UpdateCoreDefinition

-- | <i>See:</i> <a>newUpdateCoreDefinitionResponse</a> smart constructor.
data UpdateCoreDefinitionResponse
UpdateCoreDefinitionResponse' :: Int -> UpdateCoreDefinitionResponse

-- | Create a value of <a>UpdateCoreDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateCoreDefinitionResponse'</a>,
--   <a>updateCoreDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateCoreDefinitionResponse :: Int -> UpdateCoreDefinitionResponse

-- | <i>See:</i> <a>newDeleteSubscriptionDefinition</a> smart constructor.
data DeleteSubscriptionDefinition
DeleteSubscriptionDefinition' :: Text -> DeleteSubscriptionDefinition

-- | Create a value of <a>DeleteSubscriptionDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionId:DeleteSubscriptionDefinition'</a>,
--   <a>deleteSubscriptionDefinition_subscriptionDefinitionId</a> - The ID
--   of the subscription definition.
newDeleteSubscriptionDefinition :: Text -> DeleteSubscriptionDefinition

-- | <i>See:</i> <a>newDeleteSubscriptionDefinitionResponse</a> smart
--   constructor.
data DeleteSubscriptionDefinitionResponse
DeleteSubscriptionDefinitionResponse' :: Int -> DeleteSubscriptionDefinitionResponse

-- | Create a value of <a>DeleteSubscriptionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteSubscriptionDefinitionResponse'</a>,
--   <a>deleteSubscriptionDefinitionResponse_httpStatus</a> - The
--   response's http status code.
newDeleteSubscriptionDefinitionResponse :: Int -> DeleteSubscriptionDefinitionResponse

-- | <i>See:</i> <a>newUpdateSubscriptionDefinition</a> smart constructor.
data UpdateSubscriptionDefinition
UpdateSubscriptionDefinition' :: Maybe Text -> Text -> UpdateSubscriptionDefinition

-- | Create a value of <a>UpdateSubscriptionDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateSubscriptionDefinition'</a>,
--   <a>updateSubscriptionDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:subscriptionDefinitionId:UpdateSubscriptionDefinition'</a>,
--   <a>updateSubscriptionDefinition_subscriptionDefinitionId</a> - The ID
--   of the subscription definition.
newUpdateSubscriptionDefinition :: Text -> UpdateSubscriptionDefinition

-- | <i>See:</i> <a>newUpdateSubscriptionDefinitionResponse</a> smart
--   constructor.
data UpdateSubscriptionDefinitionResponse
UpdateSubscriptionDefinitionResponse' :: Int -> UpdateSubscriptionDefinitionResponse

-- | Create a value of <a>UpdateSubscriptionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateSubscriptionDefinitionResponse'</a>,
--   <a>updateSubscriptionDefinitionResponse_httpStatus</a> - The
--   response's http status code.
newUpdateSubscriptionDefinitionResponse :: Int -> UpdateSubscriptionDefinitionResponse

-- | <i>See:</i> <a>newAssociateServiceRoleToAccount</a> smart constructor.
data AssociateServiceRoleToAccount
AssociateServiceRoleToAccount' :: Text -> AssociateServiceRoleToAccount

-- | Create a value of <a>AssociateServiceRoleToAccount</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:AssociateServiceRoleToAccount'</a>,
--   <a>associateServiceRoleToAccount_roleArn</a> - The ARN of the service
--   role you wish to associate with your account.
newAssociateServiceRoleToAccount :: Text -> AssociateServiceRoleToAccount

-- | <i>See:</i> <a>newAssociateServiceRoleToAccountResponse</a> smart
--   constructor.
data AssociateServiceRoleToAccountResponse
AssociateServiceRoleToAccountResponse' :: Maybe Text -> Int -> AssociateServiceRoleToAccountResponse

-- | Create a value of <a>AssociateServiceRoleToAccountResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associatedAt:AssociateServiceRoleToAccountResponse'</a>,
--   <a>associateServiceRoleToAccountResponse_associatedAt</a> - The time
--   when the service role was associated with the account.
--   
--   <a>$sel:httpStatus:AssociateServiceRoleToAccountResponse'</a>,
--   <a>associateServiceRoleToAccountResponse_httpStatus</a> - The
--   response's http status code.
newAssociateServiceRoleToAccountResponse :: Int -> AssociateServiceRoleToAccountResponse

-- | <i>See:</i> <a>newGetGroupCertificateConfiguration</a> smart
--   constructor.
data GetGroupCertificateConfiguration
GetGroupCertificateConfiguration' :: Text -> GetGroupCertificateConfiguration

-- | Create a value of <a>GetGroupCertificateConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:GetGroupCertificateConfiguration'</a>,
--   <a>getGroupCertificateConfiguration_groupId</a> - The ID of the
--   Greengrass group.
newGetGroupCertificateConfiguration :: Text -> GetGroupCertificateConfiguration

-- | <i>See:</i> <a>newGetGroupCertificateConfigurationResponse</a> smart
--   constructor.
data GetGroupCertificateConfigurationResponse
GetGroupCertificateConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetGroupCertificateConfigurationResponse

-- | Create a value of <a>GetGroupCertificateConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateExpiryInMilliseconds:GetGroupCertificateConfigurationResponse'</a>,
--   <a>getGroupCertificateConfigurationResponse_certificateExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate expires, in
--   milliseconds.
--   
--   <a>$sel:groupId:GetGroupCertificateConfiguration'</a>,
--   <a>getGroupCertificateConfigurationResponse_groupId</a> - The ID of
--   the group certificate configuration.
--   
--   
--   <a>$sel:certificateAuthorityExpiryInMilliseconds:GetGroupCertificateConfigurationResponse'</a>,
--   <a>getGroupCertificateConfigurationResponse_certificateAuthorityExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate authority
--   expires, in milliseconds.
--   
--   <a>$sel:httpStatus:GetGroupCertificateConfigurationResponse'</a>,
--   <a>getGroupCertificateConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newGetGroupCertificateConfigurationResponse :: Int -> GetGroupCertificateConfigurationResponse

-- | <i>See:</i> <a>newAssociateRoleToGroup</a> smart constructor.
data AssociateRoleToGroup
AssociateRoleToGroup' :: Text -> Text -> AssociateRoleToGroup

-- | Create a value of <a>AssociateRoleToGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:AssociateRoleToGroup'</a>,
--   <a>associateRoleToGroup_groupId</a> - The ID of the Greengrass group.
--   
--   <a>$sel:roleArn:AssociateRoleToGroup'</a>,
--   <a>associateRoleToGroup_roleArn</a> - The ARN of the role you wish to
--   associate with this group. The existence of the role is not validated.
newAssociateRoleToGroup :: Text -> Text -> AssociateRoleToGroup

-- | <i>See:</i> <a>newAssociateRoleToGroupResponse</a> smart constructor.
data AssociateRoleToGroupResponse
AssociateRoleToGroupResponse' :: Maybe Text -> Int -> AssociateRoleToGroupResponse

-- | Create a value of <a>AssociateRoleToGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:associatedAt:AssociateRoleToGroupResponse'</a>,
--   <a>associateRoleToGroupResponse_associatedAt</a> - The time, in
--   milliseconds since the epoch, when the role ARN was associated with
--   the group.
--   
--   <a>$sel:httpStatus:AssociateRoleToGroupResponse'</a>,
--   <a>associateRoleToGroupResponse_httpStatus</a> - The response's http
--   status code.
newAssociateRoleToGroupResponse :: Int -> AssociateRoleToGroupResponse

-- | <i>See:</i> <a>newListFunctionDefinitionVersions</a> smart
--   constructor.
data ListFunctionDefinitionVersions
ListFunctionDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListFunctionDefinitionVersions

-- | Create a value of <a>ListFunctionDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFunctionDefinitionVersions'</a>,
--   <a>listFunctionDefinitionVersions_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListFunctionDefinitionVersions'</a>,
--   <a>listFunctionDefinitionVersions_maxResults</a> - The maximum number
--   of results to be returned per request.
--   
--   <a>$sel:functionDefinitionId:ListFunctionDefinitionVersions'</a>,
--   <a>listFunctionDefinitionVersions_functionDefinitionId</a> - The ID of
--   the Lambda function definition.
newListFunctionDefinitionVersions :: Text -> ListFunctionDefinitionVersions

-- | <i>See:</i> <a>newListFunctionDefinitionVersionsResponse</a> smart
--   constructor.
data ListFunctionDefinitionVersionsResponse
ListFunctionDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListFunctionDefinitionVersionsResponse

-- | Create a value of <a>ListFunctionDefinitionVersionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFunctionDefinitionVersions'</a>,
--   <a>listFunctionDefinitionVersionsResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListFunctionDefinitionVersionsResponse'</a>,
--   <a>listFunctionDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListFunctionDefinitionVersionsResponse'</a>,
--   <a>listFunctionDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListFunctionDefinitionVersionsResponse :: Int -> ListFunctionDefinitionVersionsResponse

-- | <i>See:</i> <a>newStopBulkDeployment</a> smart constructor.
data StopBulkDeployment
StopBulkDeployment' :: Text -> StopBulkDeployment

-- | Create a value of <a>StopBulkDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:StopBulkDeployment'</a>,
--   <a>stopBulkDeployment_bulkDeploymentId</a> - The ID of the bulk
--   deployment.
newStopBulkDeployment :: Text -> StopBulkDeployment

-- | <i>See:</i> <a>newStopBulkDeploymentResponse</a> smart constructor.
data StopBulkDeploymentResponse
StopBulkDeploymentResponse' :: Int -> StopBulkDeploymentResponse

-- | Create a value of <a>StopBulkDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopBulkDeploymentResponse'</a>,
--   <a>stopBulkDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newStopBulkDeploymentResponse :: Int -> StopBulkDeploymentResponse

-- | Information needed to create a function definition version.
--   
--   <i>See:</i> <a>newCreateFunctionDefinitionVersion</a> smart
--   constructor.
data CreateFunctionDefinitionVersion
CreateFunctionDefinitionVersion' :: Maybe [Function] -> Maybe FunctionDefaultConfig -> Maybe Text -> Text -> CreateFunctionDefinitionVersion

-- | Create a value of <a>CreateFunctionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functions:CreateFunctionDefinitionVersion'</a>,
--   <a>createFunctionDefinitionVersion_functions</a> - A list of Lambda
--   functions in this function definition version.
--   
--   <a>$sel:defaultConfig:CreateFunctionDefinitionVersion'</a>,
--   <a>createFunctionDefinitionVersion_defaultConfig</a> - The default
--   configuration that applies to all Lambda functions in this function
--   definition version. Individual Lambda functions can override these
--   settings.
--   
--   <a>$sel:amznClientToken:CreateFunctionDefinitionVersion'</a>,
--   <a>createFunctionDefinitionVersion_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   <a>$sel:functionDefinitionId:CreateFunctionDefinitionVersion'</a>,
--   <a>createFunctionDefinitionVersion_functionDefinitionId</a> - The ID
--   of the Lambda function definition.
newCreateFunctionDefinitionVersion :: Text -> CreateFunctionDefinitionVersion

-- | <i>See:</i> <a>newCreateFunctionDefinitionVersionResponse</a> smart
--   constructor.
data CreateFunctionDefinitionVersionResponse
CreateFunctionDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateFunctionDefinitionVersionResponse

-- | Create a value of <a>CreateFunctionDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_id</a> - The ID of the
--   parent definition that the version is associated with.
--   
--   <a>$sel:version:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateFunctionDefinitionVersionResponse'</a>,
--   <a>createFunctionDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateFunctionDefinitionVersionResponse :: Int -> CreateFunctionDefinitionVersionResponse

-- | <i>See:</i> <a>newUpdateThingRuntimeConfiguration</a> smart
--   constructor.
data UpdateThingRuntimeConfiguration
UpdateThingRuntimeConfiguration' :: Maybe TelemetryConfigurationUpdate -> Text -> UpdateThingRuntimeConfiguration

-- | Create a value of <a>UpdateThingRuntimeConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:telemetryConfiguration:UpdateThingRuntimeConfiguration'</a>,
--   <a>updateThingRuntimeConfiguration_telemetryConfiguration</a> -
--   Configuration for telemetry service.
--   
--   <a>$sel:thingName:UpdateThingRuntimeConfiguration'</a>,
--   <a>updateThingRuntimeConfiguration_thingName</a> - The thing name.
newUpdateThingRuntimeConfiguration :: Text -> UpdateThingRuntimeConfiguration

-- | <i>See:</i> <a>newUpdateThingRuntimeConfigurationResponse</a> smart
--   constructor.
data UpdateThingRuntimeConfigurationResponse
UpdateThingRuntimeConfigurationResponse' :: Int -> UpdateThingRuntimeConfigurationResponse

-- | Create a value of <a>UpdateThingRuntimeConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateThingRuntimeConfigurationResponse'</a>,
--   <a>updateThingRuntimeConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateThingRuntimeConfigurationResponse :: Int -> UpdateThingRuntimeConfigurationResponse

-- | <i>See:</i> <a>newGetFunctionDefinition</a> smart constructor.
data GetFunctionDefinition
GetFunctionDefinition' :: Text -> GetFunctionDefinition

-- | Create a value of <a>GetFunctionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionDefinitionId:GetFunctionDefinition'</a>,
--   <a>getFunctionDefinition_functionDefinitionId</a> - The ID of the
--   Lambda function definition.
newGetFunctionDefinition :: Text -> GetFunctionDefinition

-- | <i>See:</i> <a>newGetFunctionDefinitionResponse</a> smart constructor.
data GetFunctionDefinitionResponse
GetFunctionDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetFunctionDefinitionResponse

-- | Create a value of <a>GetFunctionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:tags:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetFunctionDefinitionResponse'</a>,
--   <a>getFunctionDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetFunctionDefinitionResponse :: Int -> GetFunctionDefinitionResponse

-- | <i>See:</i> <a>newStartBulkDeployment</a> smart constructor.
data StartBulkDeployment
StartBulkDeployment' :: Maybe (HashMap Text Text) -> Maybe Text -> Text -> Text -> StartBulkDeployment

-- | Create a value of <a>StartBulkDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:StartBulkDeployment'</a>, <a>startBulkDeployment_tags</a>
--   - Tag(s) to add to the new resource.
--   
--   <a>$sel:amznClientToken:StartBulkDeployment'</a>,
--   <a>startBulkDeployment_amznClientToken</a> - A client token used to
--   correlate requests and responses.
--   
--   <a>$sel:executionRoleArn:StartBulkDeployment'</a>,
--   <a>startBulkDeployment_executionRoleArn</a> - The ARN of the execution
--   role to associate with the bulk deployment operation. This IAM role
--   must allow the ''greengrass:CreateDeployment'' action for all group
--   versions that are listed in the input file. This IAM role must have
--   access to the S3 bucket containing the input file.
--   
--   <a>$sel:inputFileUri:StartBulkDeployment'</a>,
--   <a>startBulkDeployment_inputFileUri</a> - The URI of the input file
--   contained in the S3 bucket. The execution role must have ''getObject''
--   permissions on this bucket to access the input file. The input file is
--   a JSON-serialized, line delimited file with UTF-8 encoding that
--   provides a list of group and version IDs and the deployment type. This
--   file must be less than 100 MB. Currently, AWS IoT Greengrass supports
--   only ''NewDeployment'' deployment types.
newStartBulkDeployment :: Text -> Text -> StartBulkDeployment

-- | <i>See:</i> <a>newStartBulkDeploymentResponse</a> smart constructor.
data StartBulkDeploymentResponse
StartBulkDeploymentResponse' :: Maybe Text -> Maybe Text -> Int -> StartBulkDeploymentResponse

-- | Create a value of <a>StartBulkDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:StartBulkDeploymentResponse'</a>,
--   <a>startBulkDeploymentResponse_bulkDeploymentId</a> - The ID of the
--   bulk deployment.
--   
--   <a>$sel:bulkDeploymentArn:StartBulkDeploymentResponse'</a>,
--   <a>startBulkDeploymentResponse_bulkDeploymentArn</a> - The ARN of the
--   bulk deployment.
--   
--   <a>$sel:httpStatus:StartBulkDeploymentResponse'</a>,
--   <a>startBulkDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newStartBulkDeploymentResponse :: Int -> StartBulkDeploymentResponse

-- | <i>See:</i> <a>newGetThingRuntimeConfiguration</a> smart constructor.
data GetThingRuntimeConfiguration
GetThingRuntimeConfiguration' :: Text -> GetThingRuntimeConfiguration

-- | Create a value of <a>GetThingRuntimeConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thingName:GetThingRuntimeConfiguration'</a>,
--   <a>getThingRuntimeConfiguration_thingName</a> - The thing name.
newGetThingRuntimeConfiguration :: Text -> GetThingRuntimeConfiguration

-- | <i>See:</i> <a>newGetThingRuntimeConfigurationResponse</a> smart
--   constructor.
data GetThingRuntimeConfigurationResponse
GetThingRuntimeConfigurationResponse' :: Maybe RuntimeConfiguration -> Int -> GetThingRuntimeConfigurationResponse

-- | Create a value of <a>GetThingRuntimeConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:runtimeConfiguration:GetThingRuntimeConfigurationResponse'</a>,
--   <a>getThingRuntimeConfigurationResponse_runtimeConfiguration</a> -
--   Runtime configuration for a thing.
--   
--   <a>$sel:httpStatus:GetThingRuntimeConfigurationResponse'</a>,
--   <a>getThingRuntimeConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newGetThingRuntimeConfigurationResponse :: Int -> GetThingRuntimeConfigurationResponse

-- | <i>See:</i> <a>newListResourceDefinitions</a> smart constructor.
data ListResourceDefinitions
ListResourceDefinitions' :: Maybe Text -> Maybe Text -> ListResourceDefinitions

-- | Create a value of <a>ListResourceDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceDefinitions'</a>,
--   <a>listResourceDefinitions_nextToken</a> - The token for the next set
--   of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListResourceDefinitions'</a>,
--   <a>listResourceDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListResourceDefinitions :: ListResourceDefinitions

-- | <i>See:</i> <a>newListResourceDefinitionsResponse</a> smart
--   constructor.
data ListResourceDefinitionsResponse
ListResourceDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListResourceDefinitionsResponse

-- | Create a value of <a>ListResourceDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceDefinitions'</a>,
--   <a>listResourceDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListResourceDefinitionsResponse'</a>,
--   <a>listResourceDefinitionsResponse_definitions</a> - Information about
--   a definition.
--   
--   <a>$sel:httpStatus:ListResourceDefinitionsResponse'</a>,
--   <a>listResourceDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newListResourceDefinitionsResponse :: Int -> ListResourceDefinitionsResponse

-- | <i>See:</i> <a>newListDeviceDefinitionVersions</a> smart constructor.
data ListDeviceDefinitionVersions
ListDeviceDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListDeviceDefinitionVersions

-- | Create a value of <a>ListDeviceDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceDefinitionVersions'</a>,
--   <a>listDeviceDefinitionVersions_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListDeviceDefinitionVersions'</a>,
--   <a>listDeviceDefinitionVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:deviceDefinitionId:ListDeviceDefinitionVersions'</a>,
--   <a>listDeviceDefinitionVersions_deviceDefinitionId</a> - The ID of the
--   device definition.
newListDeviceDefinitionVersions :: Text -> ListDeviceDefinitionVersions

-- | <i>See:</i> <a>newListDeviceDefinitionVersionsResponse</a> smart
--   constructor.
data ListDeviceDefinitionVersionsResponse
ListDeviceDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListDeviceDefinitionVersionsResponse

-- | Create a value of <a>ListDeviceDefinitionVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceDefinitionVersions'</a>,
--   <a>listDeviceDefinitionVersionsResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListDeviceDefinitionVersionsResponse'</a>,
--   <a>listDeviceDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListDeviceDefinitionVersionsResponse'</a>,
--   <a>listDeviceDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListDeviceDefinitionVersionsResponse :: Int -> ListDeviceDefinitionVersionsResponse

-- | <i>See:</i> <a>newListGroups</a> smart constructor.
data ListGroups
ListGroups' :: Maybe Text -> Maybe Text -> ListGroups

-- | Create a value of <a>ListGroups</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroups_nextToken</a> - The
--   token for the next set of results, or ''null'' if there are no
--   additional results.
--   
--   <a>$sel:maxResults:ListGroups'</a>, <a>listGroups_maxResults</a> - The
--   maximum number of results to be returned per request.
newListGroups :: ListGroups

-- | <i>See:</i> <a>newListGroupsResponse</a> smart constructor.
data ListGroupsResponse
ListGroupsResponse' :: Maybe [GroupInformation] -> Maybe Text -> Int -> ListGroupsResponse

-- | Create a value of <a>ListGroupsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groups:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_groups</a> - Information about a group.
--   
--   <a>$sel:nextToken:ListGroups'</a>, <a>listGroupsResponse_nextToken</a>
--   - The token for the next set of results, or ''null'' if there are no
--   additional results.
--   
--   <a>$sel:httpStatus:ListGroupsResponse'</a>,
--   <a>listGroupsResponse_httpStatus</a> - The response's http status
--   code.
newListGroupsResponse :: Int -> ListGroupsResponse

-- | <i>See:</i> <a>newDeleteResourceDefinition</a> smart constructor.
data DeleteResourceDefinition
DeleteResourceDefinition' :: Text -> DeleteResourceDefinition

-- | Create a value of <a>DeleteResourceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDefinitionId:DeleteResourceDefinition'</a>,
--   <a>deleteResourceDefinition_resourceDefinitionId</a> - The ID of the
--   resource definition.
newDeleteResourceDefinition :: Text -> DeleteResourceDefinition

-- | <i>See:</i> <a>newDeleteResourceDefinitionResponse</a> smart
--   constructor.
data DeleteResourceDefinitionResponse
DeleteResourceDefinitionResponse' :: Int -> DeleteResourceDefinitionResponse

-- | Create a value of <a>DeleteResourceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteResourceDefinitionResponse'</a>,
--   <a>deleteResourceDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteResourceDefinitionResponse :: Int -> DeleteResourceDefinitionResponse

-- | <i>See:</i> <a>newUpdateResourceDefinition</a> smart constructor.
data UpdateResourceDefinition
UpdateResourceDefinition' :: Maybe Text -> Text -> UpdateResourceDefinition

-- | Create a value of <a>UpdateResourceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateResourceDefinition'</a>,
--   <a>updateResourceDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:resourceDefinitionId:UpdateResourceDefinition'</a>,
--   <a>updateResourceDefinition_resourceDefinitionId</a> - The ID of the
--   resource definition.
newUpdateResourceDefinition :: Text -> UpdateResourceDefinition

-- | <i>See:</i> <a>newUpdateResourceDefinitionResponse</a> smart
--   constructor.
data UpdateResourceDefinitionResponse
UpdateResourceDefinitionResponse' :: Int -> UpdateResourceDefinitionResponse

-- | Create a value of <a>UpdateResourceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateResourceDefinitionResponse'</a>,
--   <a>updateResourceDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateResourceDefinitionResponse :: Int -> UpdateResourceDefinitionResponse

-- | <i>See:</i> <a>newGetGroupVersion</a> smart constructor.
data GetGroupVersion
GetGroupVersion' :: Text -> Text -> GetGroupVersion

-- | Create a value of <a>GetGroupVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupVersionId:GetGroupVersion'</a>,
--   <a>getGroupVersion_groupVersionId</a> - The ID of the group version.
--   This value maps to the ''Version'' property of the corresponding
--   ''VersionInformation'' object, which is returned by
--   ''ListGroupVersions'' requests. If the version is the last one that
--   was associated with a group, the value also maps to the
--   ''LatestVersion'' property of the corresponding ''GroupInformation''
--   object.
--   
--   <a>$sel:groupId:GetGroupVersion'</a>, <a>getGroupVersion_groupId</a> -
--   The ID of the Greengrass group.
newGetGroupVersion :: Text -> Text -> GetGroupVersion

-- | <i>See:</i> <a>newGetGroupVersionResponse</a> smart constructor.
data GetGroupVersionResponse
GetGroupVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe GroupVersion -> Int -> GetGroupVersionResponse

-- | Create a value of <a>GetGroupVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the group version was created.
--   
--   <a>$sel:arn:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_arn</a> - The ARN of the group version.
--   
--   <a>$sel:id:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_id</a> - The ID of the group that the
--   version is associated with.
--   
--   <a>$sel:version:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_version</a> - The ID of the group version.
--   
--   <a>$sel:definition:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_definition</a> - Information about the
--   group version definition.
--   
--   <a>$sel:httpStatus:GetGroupVersionResponse'</a>,
--   <a>getGroupVersionResponse_httpStatus</a> - The response's http status
--   code.
newGetGroupVersionResponse :: Int -> GetGroupVersionResponse

-- | <i>See:</i> <a>newCreateDeviceDefinitionVersion</a> smart constructor.
data CreateDeviceDefinitionVersion
CreateDeviceDefinitionVersion' :: Maybe [Device] -> Maybe Text -> Text -> CreateDeviceDefinitionVersion

-- | Create a value of <a>CreateDeviceDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devices:CreateDeviceDefinitionVersion'</a>,
--   <a>createDeviceDefinitionVersion_devices</a> - A list of devices in
--   the definition version.
--   
--   <a>$sel:amznClientToken:CreateDeviceDefinitionVersion'</a>,
--   <a>createDeviceDefinitionVersion_amznClientToken</a> - A client token
--   used to correlate requests and responses.
--   
--   <a>$sel:deviceDefinitionId:CreateDeviceDefinitionVersion'</a>,
--   <a>createDeviceDefinitionVersion_deviceDefinitionId</a> - The ID of
--   the device definition.
newCreateDeviceDefinitionVersion :: Text -> CreateDeviceDefinitionVersion

-- | <i>See:</i> <a>newCreateDeviceDefinitionVersionResponse</a> smart
--   constructor.
data CreateDeviceDefinitionVersionResponse
CreateDeviceDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateDeviceDefinitionVersionResponse

-- | Create a value of <a>CreateDeviceDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_id</a> - The ID of the parent
--   definition that the version is associated with.
--   
--   <a>$sel:version:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateDeviceDefinitionVersionResponse'</a>,
--   <a>createDeviceDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateDeviceDefinitionVersionResponse :: Int -> CreateDeviceDefinitionVersionResponse

-- | <i>See:</i> <a>newCreateResourceDefinition</a> smart constructor.
data CreateResourceDefinition
CreateResourceDefinition' :: Maybe Text -> Maybe ResourceDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateResourceDefinition

-- | Create a value of <a>CreateResourceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateResourceDefinition'</a>,
--   <a>createResourceDefinition_name</a> - The name of the resource
--   definition.
--   
--   <a>$sel:initialVersion:CreateResourceDefinition'</a>,
--   <a>createResourceDefinition_initialVersion</a> - Information about the
--   initial version of the resource definition.
--   
--   <a>$sel:tags:CreateResourceDefinition'</a>,
--   <a>createResourceDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateResourceDefinition'</a>,
--   <a>createResourceDefinition_amznClientToken</a> - A client token used
--   to correlate requests and responses.
newCreateResourceDefinition :: CreateResourceDefinition

-- | <i>See:</i> <a>newCreateResourceDefinitionResponse</a> smart
--   constructor.
data CreateResourceDefinitionResponse
CreateResourceDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateResourceDefinitionResponse

-- | Create a value of <a>CreateResourceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateResourceDefinition'</a>,
--   <a>createResourceDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:CreateResourceDefinitionResponse'</a>,
--   <a>createResourceDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newCreateResourceDefinitionResponse :: Int -> CreateResourceDefinitionResponse

-- | <i>See:</i> <a>newGetDeviceDefinition</a> smart constructor.
data GetDeviceDefinition
GetDeviceDefinition' :: Text -> GetDeviceDefinition

-- | Create a value of <a>GetDeviceDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceDefinitionId:GetDeviceDefinition'</a>,
--   <a>getDeviceDefinition_deviceDefinitionId</a> - The ID of the device
--   definition.
newGetDeviceDefinition :: Text -> GetDeviceDefinition

-- | <i>See:</i> <a>newGetDeviceDefinitionResponse</a> smart constructor.
data GetDeviceDefinitionResponse
GetDeviceDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetDeviceDefinitionResponse

-- | Create a value of <a>GetDeviceDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_name</a> - The name of the definition.
--   
--   <a>$sel:tags:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetDeviceDefinitionResponse'</a>,
--   <a>getDeviceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetDeviceDefinitionResponse :: Int -> GetDeviceDefinitionResponse

-- | <i>See:</i> <a>newCreateGroup</a> smart constructor.
data CreateGroup
CreateGroup' :: Maybe GroupVersion -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> CreateGroup

-- | Create a value of <a>CreateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:initialVersion:CreateGroup'</a>,
--   <a>createGroup_initialVersion</a> - Information about the initial
--   version of the group.
--   
--   <a>$sel:tags:CreateGroup'</a>, <a>createGroup_tags</a> - Tag(s) to add
--   to the new resource.
--   
--   <a>$sel:amznClientToken:CreateGroup'</a>,
--   <a>createGroup_amznClientToken</a> - A client token used to correlate
--   requests and responses.
--   
--   <a>$sel:name:CreateGroup'</a>, <a>createGroup_name</a> - The name of
--   the group.
newCreateGroup :: Text -> CreateGroup

-- | <i>See:</i> <a>newCreateGroupResponse</a> smart constructor.
data CreateGroupResponse
CreateGroupResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateGroupResponse

-- | Create a value of <a>CreateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateGroupResponse'</a>,
--   <a>createGroupResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateGroupResponse'</a>,
--   <a>createGroupResponse_latestVersionArn</a> - The ARN of the latest
--   version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateGroupResponse'</a>,
--   <a>createGroupResponse_latestVersion</a> - The ID of the latest
--   version associated with the definition.
--   
--   <a>$sel:arn:CreateGroupResponse'</a>, <a>createGroupResponse_arn</a> -
--   The ARN of the definition.
--   
--   <a>$sel:id:CreateGroupResponse'</a>, <a>createGroupResponse_id</a> -
--   The ID of the definition.
--   
--   <a>$sel:name:CreateGroup'</a>, <a>createGroupResponse_name</a> - The
--   name of the definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateGroupResponse'</a>,
--   <a>createGroupResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:CreateGroupResponse'</a>,
--   <a>createGroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateGroupResponse :: Int -> CreateGroupResponse

-- | <i>See:</i> <a>newUpdateGroupCertificateConfiguration</a> smart
--   constructor.
data UpdateGroupCertificateConfiguration
UpdateGroupCertificateConfiguration' :: Maybe Text -> Text -> UpdateGroupCertificateConfiguration

-- | Create a value of <a>UpdateGroupCertificateConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateExpiryInMilliseconds:UpdateGroupCertificateConfiguration'</a>,
--   <a>updateGroupCertificateConfiguration_certificateExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate expires, in
--   milliseconds.
--   
--   <a>$sel:groupId:UpdateGroupCertificateConfiguration'</a>,
--   <a>updateGroupCertificateConfiguration_groupId</a> - The ID of the
--   Greengrass group.
newUpdateGroupCertificateConfiguration :: Text -> UpdateGroupCertificateConfiguration

-- | <i>See:</i> <a>newUpdateGroupCertificateConfigurationResponse</a>
--   smart constructor.
data UpdateGroupCertificateConfigurationResponse
UpdateGroupCertificateConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateGroupCertificateConfigurationResponse

-- | Create a value of <a>UpdateGroupCertificateConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:certificateExpiryInMilliseconds:UpdateGroupCertificateConfiguration'</a>,
--   <a>updateGroupCertificateConfigurationResponse_certificateExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate expires, in
--   milliseconds.
--   
--   <a>$sel:groupId:UpdateGroupCertificateConfiguration'</a>,
--   <a>updateGroupCertificateConfigurationResponse_groupId</a> - The ID of
--   the group certificate configuration.
--   
--   
--   <a>$sel:certificateAuthorityExpiryInMilliseconds:UpdateGroupCertificateConfigurationResponse'</a>,
--   <a>updateGroupCertificateConfigurationResponse_certificateAuthorityExpiryInMilliseconds</a>
--   - The amount of time remaining before the certificate authority
--   expires, in milliseconds.
--   
--   <a>$sel:httpStatus:UpdateGroupCertificateConfigurationResponse'</a>,
--   <a>updateGroupCertificateConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateGroupCertificateConfigurationResponse :: Int -> UpdateGroupCertificateConfigurationResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: [Text] -> Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - An
--   array of tag keys to delete
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newGetResourceDefinitionVersion</a> smart constructor.
data GetResourceDefinitionVersion
GetResourceDefinitionVersion' :: Text -> Text -> GetResourceDefinitionVersion

-- | Create a value of <a>GetResourceDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDefinitionVersionId:GetResourceDefinitionVersion'</a>,
--   <a>getResourceDefinitionVersion_resourceDefinitionVersionId</a> - The
--   ID of the resource definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListResourceDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   resource definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
--   
--   <a>$sel:resourceDefinitionId:GetResourceDefinitionVersion'</a>,
--   <a>getResourceDefinitionVersion_resourceDefinitionId</a> - The ID of
--   the resource definition.
newGetResourceDefinitionVersion :: Text -> Text -> GetResourceDefinitionVersion

-- | <i>See:</i> <a>newGetResourceDefinitionVersionResponse</a> smart
--   constructor.
data GetResourceDefinitionVersionResponse
GetResourceDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ResourceDefinitionVersion -> Int -> GetResourceDefinitionVersionResponse

-- | Create a value of <a>GetResourceDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the resource definition
--   version was created.
--   
--   <a>$sel:arn:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_arn</a> - Arn of the resource
--   definition version.
--   
--   <a>$sel:id:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_id</a> - The ID of the
--   resource definition version.
--   
--   <a>$sel:version:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_version</a> - The version of
--   the resource definition version.
--   
--   <a>$sel:definition:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_definition</a> - Information
--   about the definition.
--   
--   <a>$sel:httpStatus:GetResourceDefinitionVersionResponse'</a>,
--   <a>getResourceDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newGetResourceDefinitionVersionResponse :: Int -> GetResourceDefinitionVersionResponse

-- | A map of the key-value pairs for the resource tag.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Maybe (HashMap Text Text) -> Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - Undocumented
--   member.
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newListLoggerDefinitions</a> smart constructor.
data ListLoggerDefinitions
ListLoggerDefinitions' :: Maybe Text -> Maybe Text -> ListLoggerDefinitions

-- | Create a value of <a>ListLoggerDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLoggerDefinitions'</a>,
--   <a>listLoggerDefinitions_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListLoggerDefinitions'</a>,
--   <a>listLoggerDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListLoggerDefinitions :: ListLoggerDefinitions

-- | <i>See:</i> <a>newListLoggerDefinitionsResponse</a> smart constructor.
data ListLoggerDefinitionsResponse
ListLoggerDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListLoggerDefinitionsResponse

-- | Create a value of <a>ListLoggerDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLoggerDefinitions'</a>,
--   <a>listLoggerDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListLoggerDefinitionsResponse'</a>,
--   <a>listLoggerDefinitionsResponse_definitions</a> - Information about a
--   definition.
--   
--   <a>$sel:httpStatus:ListLoggerDefinitionsResponse'</a>,
--   <a>listLoggerDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newListLoggerDefinitionsResponse :: Int -> ListLoggerDefinitionsResponse

-- | <i>See:</i> <a>newDeleteLoggerDefinition</a> smart constructor.
data DeleteLoggerDefinition
DeleteLoggerDefinition' :: Text -> DeleteLoggerDefinition

-- | Create a value of <a>DeleteLoggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggerDefinitionId:DeleteLoggerDefinition'</a>,
--   <a>deleteLoggerDefinition_loggerDefinitionId</a> - The ID of the
--   logger definition.
newDeleteLoggerDefinition :: Text -> DeleteLoggerDefinition

-- | <i>See:</i> <a>newDeleteLoggerDefinitionResponse</a> smart
--   constructor.
data DeleteLoggerDefinitionResponse
DeleteLoggerDefinitionResponse' :: Int -> DeleteLoggerDefinitionResponse

-- | Create a value of <a>DeleteLoggerDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLoggerDefinitionResponse'</a>,
--   <a>deleteLoggerDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteLoggerDefinitionResponse :: Int -> DeleteLoggerDefinitionResponse

-- | <i>See:</i> <a>newListDeployments</a> smart constructor.
data ListDeployments
ListDeployments' :: Maybe Text -> Maybe Text -> Text -> ListDeployments

-- | Create a value of <a>ListDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeployments_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListDeployments'</a>,
--   <a>listDeployments_maxResults</a> - The maximum number of results to
--   be returned per request.
--   
--   <a>$sel:groupId:ListDeployments'</a>, <a>listDeployments_groupId</a> -
--   The ID of the Greengrass group.
newListDeployments :: Text -> ListDeployments

-- | <i>See:</i> <a>newListDeploymentsResponse</a> smart constructor.
data ListDeploymentsResponse
ListDeploymentsResponse' :: Maybe Text -> Maybe [Deployment] -> Int -> ListDeploymentsResponse

-- | Create a value of <a>ListDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeploymentsResponse_nextToken</a> - The token for the next set
--   of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:deployments:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_deployments</a> - A list of deployments for
--   the requested groups.
--   
--   <a>$sel:httpStatus:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newListDeploymentsResponse :: Int -> ListDeploymentsResponse

-- | <i>See:</i> <a>newCreateSubscriptionDefinitionVersion</a> smart
--   constructor.
data CreateSubscriptionDefinitionVersion
CreateSubscriptionDefinitionVersion' :: Maybe [Subscription] -> Maybe Text -> Text -> CreateSubscriptionDefinitionVersion

-- | Create a value of <a>CreateSubscriptionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptions:CreateSubscriptionDefinitionVersion'</a>,
--   <a>createSubscriptionDefinitionVersion_subscriptions</a> - A list of
--   subscriptions.
--   
--   <a>$sel:amznClientToken:CreateSubscriptionDefinitionVersion'</a>,
--   <a>createSubscriptionDefinitionVersion_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   
--   <a>$sel:subscriptionDefinitionId:CreateSubscriptionDefinitionVersion'</a>,
--   <a>createSubscriptionDefinitionVersion_subscriptionDefinitionId</a> -
--   The ID of the subscription definition.
newCreateSubscriptionDefinitionVersion :: Text -> CreateSubscriptionDefinitionVersion

-- | <i>See:</i> <a>newCreateSubscriptionDefinitionVersionResponse</a>
--   smart constructor.
data CreateSubscriptionDefinitionVersionResponse
CreateSubscriptionDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSubscriptionDefinitionVersionResponse

-- | Create a value of <a>CreateSubscriptionDefinitionVersionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_creationTimestamp</a> -
--   The time, in milliseconds since the epoch, when the version was
--   created.
--   
--   <a>$sel:arn:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_arn</a> - The ARN of
--   the version.
--   
--   <a>$sel:id:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_id</a> - The ID of the
--   parent definition that the version is associated with.
--   
--   <a>$sel:version:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_version</a> - The ID of
--   the version.
--   
--   <a>$sel:httpStatus:CreateSubscriptionDefinitionVersionResponse'</a>,
--   <a>createSubscriptionDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateSubscriptionDefinitionVersionResponse :: Int -> CreateSubscriptionDefinitionVersionResponse

-- | <i>See:</i> <a>newCreateCoreDefinitionVersion</a> smart constructor.
data CreateCoreDefinitionVersion
CreateCoreDefinitionVersion' :: Maybe [Core] -> Maybe Text -> Text -> CreateCoreDefinitionVersion

-- | Create a value of <a>CreateCoreDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cores:CreateCoreDefinitionVersion'</a>,
--   <a>createCoreDefinitionVersion_cores</a> - A list of cores in the core
--   definition version.
--   
--   <a>$sel:amznClientToken:CreateCoreDefinitionVersion'</a>,
--   <a>createCoreDefinitionVersion_amznClientToken</a> - A client token
--   used to correlate requests and responses.
--   
--   <a>$sel:coreDefinitionId:CreateCoreDefinitionVersion'</a>,
--   <a>createCoreDefinitionVersion_coreDefinitionId</a> - The ID of the
--   core definition.
newCreateCoreDefinitionVersion :: Text -> CreateCoreDefinitionVersion

-- | <i>See:</i> <a>newCreateCoreDefinitionVersionResponse</a> smart
--   constructor.
data CreateCoreDefinitionVersionResponse
CreateCoreDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateCoreDefinitionVersionResponse

-- | Create a value of <a>CreateCoreDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_id</a> - The ID of the parent
--   definition that the version is associated with.
--   
--   <a>$sel:version:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateCoreDefinitionVersionResponse'</a>,
--   <a>createCoreDefinitionVersionResponse_httpStatus</a> - The response's
--   http status code.
newCreateCoreDefinitionVersionResponse :: Int -> CreateCoreDefinitionVersionResponse

-- | <i>See:</i> <a>newCreateConnectorDefinitionVersion</a> smart
--   constructor.
data CreateConnectorDefinitionVersion
CreateConnectorDefinitionVersion' :: Maybe [Connector] -> Maybe Text -> Text -> CreateConnectorDefinitionVersion

-- | Create a value of <a>CreateConnectorDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectors:CreateConnectorDefinitionVersion'</a>,
--   <a>createConnectorDefinitionVersion_connectors</a> - A list of
--   references to connectors in this version, with their corresponding
--   configuration settings.
--   
--   <a>$sel:amznClientToken:CreateConnectorDefinitionVersion'</a>,
--   <a>createConnectorDefinitionVersion_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   <a>$sel:connectorDefinitionId:CreateConnectorDefinitionVersion'</a>,
--   <a>createConnectorDefinitionVersion_connectorDefinitionId</a> - The ID
--   of the connector definition.
newCreateConnectorDefinitionVersion :: Text -> CreateConnectorDefinitionVersion

-- | <i>See:</i> <a>newCreateConnectorDefinitionVersionResponse</a> smart
--   constructor.
data CreateConnectorDefinitionVersionResponse
CreateConnectorDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateConnectorDefinitionVersionResponse

-- | Create a value of <a>CreateConnectorDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_creationTimestamp</a> -
--   The time, in milliseconds since the epoch, when the version was
--   created.
--   
--   <a>$sel:arn:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_id</a> - The ID of the
--   parent definition that the version is associated with.
--   
--   <a>$sel:version:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_version</a> - The ID of
--   the version.
--   
--   <a>$sel:httpStatus:CreateConnectorDefinitionVersionResponse'</a>,
--   <a>createConnectorDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateConnectorDefinitionVersionResponse :: Int -> CreateConnectorDefinitionVersionResponse

-- | <i>See:</i> <a>newListBulkDeployments</a> smart constructor.
data ListBulkDeployments
ListBulkDeployments' :: Maybe Text -> Maybe Text -> ListBulkDeployments

-- | Create a value of <a>ListBulkDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBulkDeployments'</a>,
--   <a>listBulkDeployments_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListBulkDeployments'</a>,
--   <a>listBulkDeployments_maxResults</a> - The maximum number of results
--   to be returned per request.
newListBulkDeployments :: ListBulkDeployments

-- | <i>See:</i> <a>newListBulkDeploymentsResponse</a> smart constructor.
data ListBulkDeploymentsResponse
ListBulkDeploymentsResponse' :: Maybe Text -> Maybe [BulkDeployment] -> Int -> ListBulkDeploymentsResponse

-- | Create a value of <a>ListBulkDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBulkDeployments'</a>,
--   <a>listBulkDeploymentsResponse_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:bulkDeployments:ListBulkDeploymentsResponse'</a>,
--   <a>listBulkDeploymentsResponse_bulkDeployments</a> - A list of bulk
--   deployments.
--   
--   <a>$sel:httpStatus:ListBulkDeploymentsResponse'</a>,
--   <a>listBulkDeploymentsResponse_httpStatus</a> - The response's http
--   status code.
newListBulkDeploymentsResponse :: Int -> ListBulkDeploymentsResponse

-- | <i>See:</i> <a>newUpdateLoggerDefinition</a> smart constructor.
data UpdateLoggerDefinition
UpdateLoggerDefinition' :: Maybe Text -> Text -> UpdateLoggerDefinition

-- | Create a value of <a>UpdateLoggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateLoggerDefinition'</a>,
--   <a>updateLoggerDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:loggerDefinitionId:UpdateLoggerDefinition'</a>,
--   <a>updateLoggerDefinition_loggerDefinitionId</a> - The ID of the
--   logger definition.
newUpdateLoggerDefinition :: Text -> UpdateLoggerDefinition

-- | <i>See:</i> <a>newUpdateLoggerDefinitionResponse</a> smart
--   constructor.
data UpdateLoggerDefinitionResponse
UpdateLoggerDefinitionResponse' :: Int -> UpdateLoggerDefinitionResponse

-- | Create a value of <a>UpdateLoggerDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateLoggerDefinitionResponse'</a>,
--   <a>updateLoggerDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateLoggerDefinitionResponse :: Int -> UpdateLoggerDefinitionResponse

-- | <i>See:</i> <a>newCreateSoftwareUpdateJob</a> smart constructor.
data CreateSoftwareUpdateJob
CreateSoftwareUpdateJob' :: Maybe UpdateAgentLogLevel -> Maybe Text -> Text -> UpdateTargetsArchitecture -> SoftwareToUpdate -> [Text] -> UpdateTargetsOperatingSystem -> CreateSoftwareUpdateJob

-- | Create a value of <a>CreateSoftwareUpdateJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:updateAgentLogLevel:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_updateAgentLogLevel</a> - Undocumented
--   member.
--   
--   <a>$sel:amznClientToken:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_amznClientToken</a> - A client token used
--   to correlate requests and responses.
--   
--   <a>$sel:s3UrlSignerRole:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_s3UrlSignerRole</a> - Undocumented member.
--   
--   <a>$sel:updateTargetsArchitecture:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_updateTargetsArchitecture</a> -
--   Undocumented member.
--   
--   <a>$sel:softwareToUpdate:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_softwareToUpdate</a> - Undocumented member.
--   
--   <a>$sel:updateTargets:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_updateTargets</a> - Undocumented member.
--   
--   <a>$sel:updateTargetsOperatingSystem:CreateSoftwareUpdateJob'</a>,
--   <a>createSoftwareUpdateJob_updateTargetsOperatingSystem</a> -
--   Undocumented member.
newCreateSoftwareUpdateJob :: Text -> UpdateTargetsArchitecture -> SoftwareToUpdate -> UpdateTargetsOperatingSystem -> CreateSoftwareUpdateJob

-- | <i>See:</i> <a>newCreateSoftwareUpdateJobResponse</a> smart
--   constructor.
data CreateSoftwareUpdateJobResponse
CreateSoftwareUpdateJobResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSoftwareUpdateJobResponse

-- | Create a value of <a>CreateSoftwareUpdateJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iotJobId:CreateSoftwareUpdateJobResponse'</a>,
--   <a>createSoftwareUpdateJobResponse_iotJobId</a> - The IoT Job Id
--   corresponding to this update.
--   
--   <a>$sel:iotJobArn:CreateSoftwareUpdateJobResponse'</a>,
--   <a>createSoftwareUpdateJobResponse_iotJobArn</a> - The IoT Job ARN
--   corresponding to this update.
--   
--   <a>$sel:platformSoftwareVersion:CreateSoftwareUpdateJobResponse'</a>,
--   <a>createSoftwareUpdateJobResponse_platformSoftwareVersion</a> - The
--   software version installed on the device or devices after the update.
--   
--   <a>$sel:httpStatus:CreateSoftwareUpdateJobResponse'</a>,
--   <a>createSoftwareUpdateJobResponse_httpStatus</a> - The response's
--   http status code.
newCreateSoftwareUpdateJobResponse :: Int -> CreateSoftwareUpdateJobResponse

-- | <i>See:</i> <a>newListSubscriptionDefinitionVersions</a> smart
--   constructor.
data ListSubscriptionDefinitionVersions
ListSubscriptionDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListSubscriptionDefinitionVersions

-- | Create a value of <a>ListSubscriptionDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionDefinitionVersions'</a>,
--   <a>listSubscriptionDefinitionVersions_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:maxResults:ListSubscriptionDefinitionVersions'</a>,
--   <a>listSubscriptionDefinitionVersions_maxResults</a> - The maximum
--   number of results to be returned per request.
--   
--   
--   <a>$sel:subscriptionDefinitionId:ListSubscriptionDefinitionVersions'</a>,
--   <a>listSubscriptionDefinitionVersions_subscriptionDefinitionId</a> -
--   The ID of the subscription definition.
newListSubscriptionDefinitionVersions :: Text -> ListSubscriptionDefinitionVersions

-- | <i>See:</i> <a>newListSubscriptionDefinitionVersionsResponse</a> smart
--   constructor.
data ListSubscriptionDefinitionVersionsResponse
ListSubscriptionDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListSubscriptionDefinitionVersionsResponse

-- | Create a value of <a>ListSubscriptionDefinitionVersionsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionDefinitionVersions'</a>,
--   <a>listSubscriptionDefinitionVersionsResponse_nextToken</a> - The
--   token for the next set of results, or ''null'' if there are no
--   additional results.
--   
--   <a>$sel:versions:ListSubscriptionDefinitionVersionsResponse'</a>,
--   <a>listSubscriptionDefinitionVersionsResponse_versions</a> -
--   Information about a version.
--   
--   <a>$sel:httpStatus:ListSubscriptionDefinitionVersionsResponse'</a>,
--   <a>listSubscriptionDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListSubscriptionDefinitionVersionsResponse :: Int -> ListSubscriptionDefinitionVersionsResponse

-- | <i>See:</i> <a>newGetConnectivityInfo</a> smart constructor.
data GetConnectivityInfo
GetConnectivityInfo' :: Text -> GetConnectivityInfo

-- | Create a value of <a>GetConnectivityInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thingName:GetConnectivityInfo'</a>,
--   <a>getConnectivityInfo_thingName</a> - The thing name.
newGetConnectivityInfo :: Text -> GetConnectivityInfo

-- | <i>See:</i> <a>newGetConnectivityInfoResponse</a> smart constructor.
data GetConnectivityInfoResponse
GetConnectivityInfoResponse' :: Maybe Text -> Maybe [ConnectivityInfo] -> Int -> GetConnectivityInfoResponse

-- | Create a value of <a>GetConnectivityInfoResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:GetConnectivityInfoResponse'</a>,
--   <a>getConnectivityInfoResponse_message</a> - A message about the
--   connectivity info request.
--   
--   <a>$sel:connectivityInfo:GetConnectivityInfoResponse'</a>,
--   <a>getConnectivityInfoResponse_connectivityInfo</a> - Connectivity
--   info list.
--   
--   <a>$sel:httpStatus:GetConnectivityInfoResponse'</a>,
--   <a>getConnectivityInfoResponse_httpStatus</a> - The response's http
--   status code.
newGetConnectivityInfoResponse :: Int -> GetConnectivityInfoResponse

-- | <i>See:</i> <a>newListConnectorDefinitionVersions</a> smart
--   constructor.
data ListConnectorDefinitionVersions
ListConnectorDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListConnectorDefinitionVersions

-- | Create a value of <a>ListConnectorDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnectorDefinitionVersions'</a>,
--   <a>listConnectorDefinitionVersions_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListConnectorDefinitionVersions'</a>,
--   <a>listConnectorDefinitionVersions_maxResults</a> - The maximum number
--   of results to be returned per request.
--   
--   <a>$sel:connectorDefinitionId:ListConnectorDefinitionVersions'</a>,
--   <a>listConnectorDefinitionVersions_connectorDefinitionId</a> - The ID
--   of the connector definition.
newListConnectorDefinitionVersions :: Text -> ListConnectorDefinitionVersions

-- | <i>See:</i> <a>newListConnectorDefinitionVersionsResponse</a> smart
--   constructor.
data ListConnectorDefinitionVersionsResponse
ListConnectorDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListConnectorDefinitionVersionsResponse

-- | Create a value of <a>ListConnectorDefinitionVersionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnectorDefinitionVersions'</a>,
--   <a>listConnectorDefinitionVersionsResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListConnectorDefinitionVersionsResponse'</a>,
--   <a>listConnectorDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListConnectorDefinitionVersionsResponse'</a>,
--   <a>listConnectorDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListConnectorDefinitionVersionsResponse :: Int -> ListConnectorDefinitionVersionsResponse

-- | <i>See:</i> <a>newListCoreDefinitionVersions</a> smart constructor.
data ListCoreDefinitionVersions
ListCoreDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListCoreDefinitionVersions

-- | Create a value of <a>ListCoreDefinitionVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCoreDefinitionVersions'</a>,
--   <a>listCoreDefinitionVersions_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListCoreDefinitionVersions'</a>,
--   <a>listCoreDefinitionVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:coreDefinitionId:ListCoreDefinitionVersions'</a>,
--   <a>listCoreDefinitionVersions_coreDefinitionId</a> - The ID of the
--   core definition.
newListCoreDefinitionVersions :: Text -> ListCoreDefinitionVersions

-- | <i>See:</i> <a>newListCoreDefinitionVersionsResponse</a> smart
--   constructor.
data ListCoreDefinitionVersionsResponse
ListCoreDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListCoreDefinitionVersionsResponse

-- | Create a value of <a>ListCoreDefinitionVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCoreDefinitionVersions'</a>,
--   <a>listCoreDefinitionVersionsResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListCoreDefinitionVersionsResponse'</a>,
--   <a>listCoreDefinitionVersionsResponse_versions</a> - Information about
--   a version.
--   
--   <a>$sel:httpStatus:ListCoreDefinitionVersionsResponse'</a>,
--   <a>listCoreDefinitionVersionsResponse_httpStatus</a> - The response's
--   http status code.
newListCoreDefinitionVersionsResponse :: Int -> ListCoreDefinitionVersionsResponse

-- | <i>See:</i> <a>newGetAssociatedRole</a> smart constructor.
data GetAssociatedRole
GetAssociatedRole' :: Text -> GetAssociatedRole

-- | Create a value of <a>GetAssociatedRole</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:GetAssociatedRole'</a>,
--   <a>getAssociatedRole_groupId</a> - The ID of the Greengrass group.
newGetAssociatedRole :: Text -> GetAssociatedRole

-- | <i>See:</i> <a>newGetAssociatedRoleResponse</a> smart constructor.
data GetAssociatedRoleResponse
GetAssociatedRoleResponse' :: Maybe Text -> Maybe Text -> Int -> GetAssociatedRoleResponse

-- | Create a value of <a>GetAssociatedRoleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:GetAssociatedRoleResponse'</a>,
--   <a>getAssociatedRoleResponse_roleArn</a> - The ARN of the role that is
--   associated with the group.
--   
--   <a>$sel:associatedAt:GetAssociatedRoleResponse'</a>,
--   <a>getAssociatedRoleResponse_associatedAt</a> - The time when the role
--   was associated with the group.
--   
--   <a>$sel:httpStatus:GetAssociatedRoleResponse'</a>,
--   <a>getAssociatedRoleResponse_httpStatus</a> - The response's http
--   status code.
newGetAssociatedRoleResponse :: Int -> GetAssociatedRoleResponse

-- | Information needed to create a core definition.
--   
--   <i>See:</i> <a>newCreateCoreDefinition</a> smart constructor.
data CreateCoreDefinition
CreateCoreDefinition' :: Maybe Text -> Maybe CoreDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateCoreDefinition

-- | Create a value of <a>CreateCoreDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateCoreDefinition'</a>,
--   <a>createCoreDefinition_name</a> - The name of the core definition.
--   
--   <a>$sel:initialVersion:CreateCoreDefinition'</a>,
--   <a>createCoreDefinition_initialVersion</a> - Information about the
--   initial version of the core definition.
--   
--   <a>$sel:tags:CreateCoreDefinition'</a>,
--   <a>createCoreDefinition_tags</a> - Tag(s) to add to the new resource.
--   
--   <a>$sel:amznClientToken:CreateCoreDefinition'</a>,
--   <a>createCoreDefinition_amznClientToken</a> - A client token used to
--   correlate requests and responses.
newCreateCoreDefinition :: CreateCoreDefinition

-- | <i>See:</i> <a>newCreateCoreDefinitionResponse</a> smart constructor.
data CreateCoreDefinitionResponse
CreateCoreDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateCoreDefinitionResponse

-- | Create a value of <a>CreateCoreDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateCoreDefinition'</a>,
--   <a>createCoreDefinitionResponse_name</a> - The name of the definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:CreateCoreDefinitionResponse'</a>,
--   <a>createCoreDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newCreateCoreDefinitionResponse :: Int -> CreateCoreDefinitionResponse

-- | Connectivity information.
--   
--   <i>See:</i> <a>newUpdateConnectivityInfo</a> smart constructor.
data UpdateConnectivityInfo
UpdateConnectivityInfo' :: Maybe [ConnectivityInfo] -> Text -> UpdateConnectivityInfo

-- | Create a value of <a>UpdateConnectivityInfo</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectivityInfo:UpdateConnectivityInfo'</a>,
--   <a>updateConnectivityInfo_connectivityInfo</a> - A list of
--   connectivity info.
--   
--   <a>$sel:thingName:UpdateConnectivityInfo'</a>,
--   <a>updateConnectivityInfo_thingName</a> - The thing name.
newUpdateConnectivityInfo :: Text -> UpdateConnectivityInfo

-- | <i>See:</i> <a>newUpdateConnectivityInfoResponse</a> smart
--   constructor.
data UpdateConnectivityInfoResponse
UpdateConnectivityInfoResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateConnectivityInfoResponse

-- | Create a value of <a>UpdateConnectivityInfoResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:UpdateConnectivityInfoResponse'</a>,
--   <a>updateConnectivityInfoResponse_message</a> - A message about the
--   connectivity info update request.
--   
--   <a>$sel:version:UpdateConnectivityInfoResponse'</a>,
--   <a>updateConnectivityInfoResponse_version</a> - The new version of the
--   connectivity info.
--   
--   <a>$sel:httpStatus:UpdateConnectivityInfoResponse'</a>,
--   <a>updateConnectivityInfoResponse_httpStatus</a> - The response's http
--   status code.
newUpdateConnectivityInfoResponse :: Int -> UpdateConnectivityInfoResponse

-- | <i>See:</i> <a>newCreateSubscriptionDefinition</a> smart constructor.
data CreateSubscriptionDefinition
CreateSubscriptionDefinition' :: Maybe Text -> Maybe SubscriptionDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateSubscriptionDefinition

-- | Create a value of <a>CreateSubscriptionDefinition</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinition_name</a> - The name of the
--   subscription definition.
--   
--   <a>$sel:initialVersion:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinition_initialVersion</a> - Information about
--   the initial version of the subscription definition.
--   
--   <a>$sel:tags:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinition_amznClientToken</a> - A client token
--   used to correlate requests and responses.
newCreateSubscriptionDefinition :: CreateSubscriptionDefinition

-- | <i>See:</i> <a>newCreateSubscriptionDefinitionResponse</a> smart
--   constructor.
data CreateSubscriptionDefinitionResponse
CreateSubscriptionDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSubscriptionDefinitionResponse

-- | Create a value of <a>CreateSubscriptionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was
--   created.
--   
--   <a>$sel:latestVersionArn:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_latestVersionArn</a> - The ARN
--   of the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_latestVersion</a> - The ID of
--   the latest version associated with the definition.
--   
--   <a>$sel:arn:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_id</a> - The ID of the
--   definition.
--   
--   <a>$sel:name:CreateSubscriptionDefinition'</a>,
--   <a>createSubscriptionDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   
--   <a>$sel:lastUpdatedTimestamp:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:CreateSubscriptionDefinitionResponse'</a>,
--   <a>createSubscriptionDefinitionResponse_httpStatus</a> - The
--   response's http status code.
newCreateSubscriptionDefinitionResponse :: Int -> CreateSubscriptionDefinitionResponse

-- | <i>See:</i> <a>newCreateConnectorDefinition</a> smart constructor.
data CreateConnectorDefinition
CreateConnectorDefinition' :: Maybe Text -> Maybe ConnectorDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateConnectorDefinition

-- | Create a value of <a>CreateConnectorDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinition_name</a> - The name of the connector
--   definition.
--   
--   <a>$sel:initialVersion:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinition_initialVersion</a> - Information about
--   the initial version of the connector definition.
--   
--   <a>$sel:tags:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinition_amznClientToken</a> - A client token used
--   to correlate requests and responses.
newCreateConnectorDefinition :: CreateConnectorDefinition

-- | <i>See:</i> <a>newCreateConnectorDefinitionResponse</a> smart
--   constructor.
data CreateConnectorDefinitionResponse
CreateConnectorDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateConnectorDefinitionResponse

-- | Create a value of <a>CreateConnectorDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_id</a> - The ID of the
--   definition.
--   
--   <a>$sel:name:CreateConnectorDefinition'</a>,
--   <a>createConnectorDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:CreateConnectorDefinitionResponse'</a>,
--   <a>createConnectorDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newCreateConnectorDefinitionResponse :: Int -> CreateConnectorDefinitionResponse

-- | <i>See:</i> <a>newListConnectorDefinitions</a> smart constructor.
data ListConnectorDefinitions
ListConnectorDefinitions' :: Maybe Text -> Maybe Text -> ListConnectorDefinitions

-- | Create a value of <a>ListConnectorDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnectorDefinitions'</a>,
--   <a>listConnectorDefinitions_nextToken</a> - The token for the next set
--   of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListConnectorDefinitions'</a>,
--   <a>listConnectorDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListConnectorDefinitions :: ListConnectorDefinitions

-- | <i>See:</i> <a>newListConnectorDefinitionsResponse</a> smart
--   constructor.
data ListConnectorDefinitionsResponse
ListConnectorDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListConnectorDefinitionsResponse

-- | Create a value of <a>ListConnectorDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListConnectorDefinitions'</a>,
--   <a>listConnectorDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListConnectorDefinitionsResponse'</a>,
--   <a>listConnectorDefinitionsResponse_definitions</a> - Information
--   about a definition.
--   
--   <a>$sel:httpStatus:ListConnectorDefinitionsResponse'</a>,
--   <a>listConnectorDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newListConnectorDefinitionsResponse :: Int -> ListConnectorDefinitionsResponse

-- | <i>See:</i> <a>newGetLoggerDefinition</a> smart constructor.
data GetLoggerDefinition
GetLoggerDefinition' :: Text -> GetLoggerDefinition

-- | Create a value of <a>GetLoggerDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggerDefinitionId:GetLoggerDefinition'</a>,
--   <a>getLoggerDefinition_loggerDefinitionId</a> - The ID of the logger
--   definition.
newGetLoggerDefinition :: Text -> GetLoggerDefinition

-- | <i>See:</i> <a>newGetLoggerDefinitionResponse</a> smart constructor.
data GetLoggerDefinitionResponse
GetLoggerDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetLoggerDefinitionResponse

-- | Create a value of <a>GetLoggerDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_name</a> - The name of the definition.
--   
--   <a>$sel:tags:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetLoggerDefinitionResponse'</a>,
--   <a>getLoggerDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetLoggerDefinitionResponse :: Int -> GetLoggerDefinitionResponse

-- | <i>See:</i> <a>newDeleteConnectorDefinition</a> smart constructor.
data DeleteConnectorDefinition
DeleteConnectorDefinition' :: Text -> DeleteConnectorDefinition

-- | Create a value of <a>DeleteConnectorDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectorDefinitionId:DeleteConnectorDefinition'</a>,
--   <a>deleteConnectorDefinition_connectorDefinitionId</a> - The ID of the
--   connector definition.
newDeleteConnectorDefinition :: Text -> DeleteConnectorDefinition

-- | <i>See:</i> <a>newDeleteConnectorDefinitionResponse</a> smart
--   constructor.
data DeleteConnectorDefinitionResponse
DeleteConnectorDefinitionResponse' :: Int -> DeleteConnectorDefinitionResponse

-- | Create a value of <a>DeleteConnectorDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteConnectorDefinitionResponse'</a>,
--   <a>deleteConnectorDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteConnectorDefinitionResponse :: Int -> DeleteConnectorDefinitionResponse

-- | <i>See:</i> <a>newCreateGroupCertificateAuthority</a> smart
--   constructor.
data CreateGroupCertificateAuthority
CreateGroupCertificateAuthority' :: Maybe Text -> Text -> CreateGroupCertificateAuthority

-- | Create a value of <a>CreateGroupCertificateAuthority</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amznClientToken:CreateGroupCertificateAuthority'</a>,
--   <a>createGroupCertificateAuthority_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   <a>$sel:groupId:CreateGroupCertificateAuthority'</a>,
--   <a>createGroupCertificateAuthority_groupId</a> - The ID of the
--   Greengrass group.
newCreateGroupCertificateAuthority :: Text -> CreateGroupCertificateAuthority

-- | <i>See:</i> <a>newCreateGroupCertificateAuthorityResponse</a> smart
--   constructor.
data CreateGroupCertificateAuthorityResponse
CreateGroupCertificateAuthorityResponse' :: Maybe Text -> Int -> CreateGroupCertificateAuthorityResponse

-- | Create a value of <a>CreateGroupCertificateAuthorityResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorityArn:CreateGroupCertificateAuthorityResponse'</a>,
--   <a>createGroupCertificateAuthorityResponse_groupCertificateAuthorityArn</a>
--   - The ARN of the group certificate authority.
--   
--   <a>$sel:httpStatus:CreateGroupCertificateAuthorityResponse'</a>,
--   <a>createGroupCertificateAuthorityResponse_httpStatus</a> - The
--   response's http status code.
newCreateGroupCertificateAuthorityResponse :: Int -> CreateGroupCertificateAuthorityResponse

-- | <i>See:</i> <a>newListGroupCertificateAuthorities</a> smart
--   constructor.
data ListGroupCertificateAuthorities
ListGroupCertificateAuthorities' :: Text -> ListGroupCertificateAuthorities

-- | Create a value of <a>ListGroupCertificateAuthorities</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:ListGroupCertificateAuthorities'</a>,
--   <a>listGroupCertificateAuthorities_groupId</a> - The ID of the
--   Greengrass group.
newListGroupCertificateAuthorities :: Text -> ListGroupCertificateAuthorities

-- | <i>See:</i> <a>newListGroupCertificateAuthoritiesResponse</a> smart
--   constructor.
data ListGroupCertificateAuthoritiesResponse
ListGroupCertificateAuthoritiesResponse' :: Maybe [GroupCertificateAuthorityProperties] -> Int -> ListGroupCertificateAuthoritiesResponse

-- | Create a value of <a>ListGroupCertificateAuthoritiesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorities:ListGroupCertificateAuthoritiesResponse'</a>,
--   <a>listGroupCertificateAuthoritiesResponse_groupCertificateAuthorities</a>
--   - A list of certificate authorities associated with the group.
--   
--   <a>$sel:httpStatus:ListGroupCertificateAuthoritiesResponse'</a>,
--   <a>listGroupCertificateAuthoritiesResponse_httpStatus</a> - The
--   response's http status code.
newListGroupCertificateAuthoritiesResponse :: Int -> ListGroupCertificateAuthoritiesResponse

-- | <i>See:</i> <a>newDisassociateRoleFromGroup</a> smart constructor.
data DisassociateRoleFromGroup
DisassociateRoleFromGroup' :: Text -> DisassociateRoleFromGroup

-- | Create a value of <a>DisassociateRoleFromGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:DisassociateRoleFromGroup'</a>,
--   <a>disassociateRoleFromGroup_groupId</a> - The ID of the Greengrass
--   group.
newDisassociateRoleFromGroup :: Text -> DisassociateRoleFromGroup

-- | <i>See:</i> <a>newDisassociateRoleFromGroupResponse</a> smart
--   constructor.
data DisassociateRoleFromGroupResponse
DisassociateRoleFromGroupResponse' :: Maybe Text -> Int -> DisassociateRoleFromGroupResponse

-- | Create a value of <a>DisassociateRoleFromGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disassociatedAt:DisassociateRoleFromGroupResponse'</a>,
--   <a>disassociateRoleFromGroupResponse_disassociatedAt</a> - The time,
--   in milliseconds since the epoch, when the role was disassociated from
--   the group.
--   
--   <a>$sel:httpStatus:DisassociateRoleFromGroupResponse'</a>,
--   <a>disassociateRoleFromGroupResponse_httpStatus</a> - The response's
--   http status code.
newDisassociateRoleFromGroupResponse :: Int -> DisassociateRoleFromGroupResponse

-- | <i>See:</i> <a>newListCoreDefinitions</a> smart constructor.
data ListCoreDefinitions
ListCoreDefinitions' :: Maybe Text -> Maybe Text -> ListCoreDefinitions

-- | Create a value of <a>ListCoreDefinitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCoreDefinitions'</a>,
--   <a>listCoreDefinitions_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListCoreDefinitions'</a>,
--   <a>listCoreDefinitions_maxResults</a> - The maximum number of results
--   to be returned per request.
newListCoreDefinitions :: ListCoreDefinitions

-- | <i>See:</i> <a>newListCoreDefinitionsResponse</a> smart constructor.
data ListCoreDefinitionsResponse
ListCoreDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListCoreDefinitionsResponse

-- | Create a value of <a>ListCoreDefinitionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListCoreDefinitions'</a>,
--   <a>listCoreDefinitionsResponse_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListCoreDefinitionsResponse'</a>,
--   <a>listCoreDefinitionsResponse_definitions</a> - Information about a
--   definition.
--   
--   <a>$sel:httpStatus:ListCoreDefinitionsResponse'</a>,
--   <a>listCoreDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newListCoreDefinitionsResponse :: Int -> ListCoreDefinitionsResponse

-- | <i>See:</i> <a>newUpdateConnectorDefinition</a> smart constructor.
data UpdateConnectorDefinition
UpdateConnectorDefinition' :: Maybe Text -> Text -> UpdateConnectorDefinition

-- | Create a value of <a>UpdateConnectorDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateConnectorDefinition'</a>,
--   <a>updateConnectorDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:connectorDefinitionId:UpdateConnectorDefinition'</a>,
--   <a>updateConnectorDefinition_connectorDefinitionId</a> - The ID of the
--   connector definition.
newUpdateConnectorDefinition :: Text -> UpdateConnectorDefinition

-- | <i>See:</i> <a>newUpdateConnectorDefinitionResponse</a> smart
--   constructor.
data UpdateConnectorDefinitionResponse
UpdateConnectorDefinitionResponse' :: Int -> UpdateConnectorDefinitionResponse

-- | Create a value of <a>UpdateConnectorDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateConnectorDefinitionResponse'</a>,
--   <a>updateConnectorDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateConnectorDefinitionResponse :: Int -> UpdateConnectorDefinitionResponse

-- | <i>See:</i> <a>newListSubscriptionDefinitions</a> smart constructor.
data ListSubscriptionDefinitions
ListSubscriptionDefinitions' :: Maybe Text -> Maybe Text -> ListSubscriptionDefinitions

-- | Create a value of <a>ListSubscriptionDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionDefinitions'</a>,
--   <a>listSubscriptionDefinitions_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListSubscriptionDefinitions'</a>,
--   <a>listSubscriptionDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListSubscriptionDefinitions :: ListSubscriptionDefinitions

-- | <i>See:</i> <a>newListSubscriptionDefinitionsResponse</a> smart
--   constructor.
data ListSubscriptionDefinitionsResponse
ListSubscriptionDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListSubscriptionDefinitionsResponse

-- | Create a value of <a>ListSubscriptionDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSubscriptionDefinitions'</a>,
--   <a>listSubscriptionDefinitionsResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:definitions:ListSubscriptionDefinitionsResponse'</a>,
--   <a>listSubscriptionDefinitionsResponse_definitions</a> - Information
--   about a definition.
--   
--   <a>$sel:httpStatus:ListSubscriptionDefinitionsResponse'</a>,
--   <a>listSubscriptionDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newListSubscriptionDefinitionsResponse :: Int -> ListSubscriptionDefinitionsResponse

-- | <i>See:</i> <a>newCreateLoggerDefinitionVersion</a> smart constructor.
data CreateLoggerDefinitionVersion
CreateLoggerDefinitionVersion' :: Maybe [GreengrassLogger] -> Maybe Text -> Text -> CreateLoggerDefinitionVersion

-- | Create a value of <a>CreateLoggerDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggers:CreateLoggerDefinitionVersion'</a>,
--   <a>createLoggerDefinitionVersion_loggers</a> - A list of loggers.
--   
--   <a>$sel:amznClientToken:CreateLoggerDefinitionVersion'</a>,
--   <a>createLoggerDefinitionVersion_amznClientToken</a> - A client token
--   used to correlate requests and responses.
--   
--   <a>$sel:loggerDefinitionId:CreateLoggerDefinitionVersion'</a>,
--   <a>createLoggerDefinitionVersion_loggerDefinitionId</a> - The ID of
--   the logger definition.
newCreateLoggerDefinitionVersion :: Text -> CreateLoggerDefinitionVersion

-- | <i>See:</i> <a>newCreateLoggerDefinitionVersionResponse</a> smart
--   constructor.
data CreateLoggerDefinitionVersionResponse
CreateLoggerDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateLoggerDefinitionVersionResponse

-- | Create a value of <a>CreateLoggerDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_id</a> - The ID of the parent
--   definition that the version is associated with.
--   
--   <a>$sel:version:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateLoggerDefinitionVersionResponse'</a>,
--   <a>createLoggerDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateLoggerDefinitionVersionResponse :: Int -> CreateLoggerDefinitionVersionResponse

-- | Information needed to reset deployments.
--   
--   <i>See:</i> <a>newResetDeployments</a> smart constructor.
data ResetDeployments
ResetDeployments' :: Maybe Bool -> Maybe Text -> Text -> ResetDeployments

-- | Create a value of <a>ResetDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:ResetDeployments'</a>, <a>resetDeployments_force</a> -
--   If true, performs a best-effort only core reset.
--   
--   <a>$sel:amznClientToken:ResetDeployments'</a>,
--   <a>resetDeployments_amznClientToken</a> - A client token used to
--   correlate requests and responses.
--   
--   <a>$sel:groupId:ResetDeployments'</a>, <a>resetDeployments_groupId</a>
--   - The ID of the Greengrass group.
newResetDeployments :: Text -> ResetDeployments

-- | <i>See:</i> <a>newResetDeploymentsResponse</a> smart constructor.
data ResetDeploymentsResponse
ResetDeploymentsResponse' :: Maybe Text -> Maybe Text -> Int -> ResetDeploymentsResponse

-- | Create a value of <a>ResetDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:ResetDeploymentsResponse'</a>,
--   <a>resetDeploymentsResponse_deploymentId</a> - The ID of the
--   deployment.
--   
--   <a>$sel:deploymentArn:ResetDeploymentsResponse'</a>,
--   <a>resetDeploymentsResponse_deploymentArn</a> - The ARN of the
--   deployment.
--   
--   <a>$sel:httpStatus:ResetDeploymentsResponse'</a>,
--   <a>resetDeploymentsResponse_httpStatus</a> - The response's http
--   status code.
newResetDeploymentsResponse :: Int -> ResetDeploymentsResponse

-- | <i>See:</i> <a>newDeleteDeviceDefinition</a> smart constructor.
data DeleteDeviceDefinition
DeleteDeviceDefinition' :: Text -> DeleteDeviceDefinition

-- | Create a value of <a>DeleteDeviceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deviceDefinitionId:DeleteDeviceDefinition'</a>,
--   <a>deleteDeviceDefinition_deviceDefinitionId</a> - The ID of the
--   device definition.
newDeleteDeviceDefinition :: Text -> DeleteDeviceDefinition

-- | <i>See:</i> <a>newDeleteDeviceDefinitionResponse</a> smart
--   constructor.
data DeleteDeviceDefinitionResponse
DeleteDeviceDefinitionResponse' :: Int -> DeleteDeviceDefinitionResponse

-- | Create a value of <a>DeleteDeviceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDeviceDefinitionResponse'</a>,
--   <a>deleteDeviceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDeviceDefinitionResponse :: Int -> DeleteDeviceDefinitionResponse

-- | <i>See:</i> <a>newDisassociateServiceRoleFromAccount</a> smart
--   constructor.
data DisassociateServiceRoleFromAccount
DisassociateServiceRoleFromAccount' :: DisassociateServiceRoleFromAccount

-- | Create a value of <a>DisassociateServiceRoleFromAccount</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateServiceRoleFromAccount :: DisassociateServiceRoleFromAccount

-- | <i>See:</i> <a>newDisassociateServiceRoleFromAccountResponse</a> smart
--   constructor.
data DisassociateServiceRoleFromAccountResponse
DisassociateServiceRoleFromAccountResponse' :: Maybe Text -> Int -> DisassociateServiceRoleFromAccountResponse

-- | Create a value of <a>DisassociateServiceRoleFromAccountResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:disassociatedAt:DisassociateServiceRoleFromAccountResponse'</a>,
--   <a>disassociateServiceRoleFromAccountResponse_disassociatedAt</a> -
--   The time when the service role was disassociated from the account.
--   
--   <a>$sel:httpStatus:DisassociateServiceRoleFromAccountResponse'</a>,
--   <a>disassociateServiceRoleFromAccountResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateServiceRoleFromAccountResponse :: Int -> DisassociateServiceRoleFromAccountResponse

-- | <i>See:</i> <a>newListDeviceDefinitions</a> smart constructor.
data ListDeviceDefinitions
ListDeviceDefinitions' :: Maybe Text -> Maybe Text -> ListDeviceDefinitions

-- | Create a value of <a>ListDeviceDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceDefinitions'</a>,
--   <a>listDeviceDefinitions_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListDeviceDefinitions'</a>,
--   <a>listDeviceDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListDeviceDefinitions :: ListDeviceDefinitions

-- | <i>See:</i> <a>newListDeviceDefinitionsResponse</a> smart constructor.
data ListDeviceDefinitionsResponse
ListDeviceDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListDeviceDefinitionsResponse

-- | Create a value of <a>ListDeviceDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeviceDefinitions'</a>,
--   <a>listDeviceDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListDeviceDefinitionsResponse'</a>,
--   <a>listDeviceDefinitionsResponse_definitions</a> - Information about a
--   definition.
--   
--   <a>$sel:httpStatus:ListDeviceDefinitionsResponse'</a>,
--   <a>listDeviceDefinitionsResponse_httpStatus</a> - The response's http
--   status code.
newListDeviceDefinitionsResponse :: Int -> ListDeviceDefinitionsResponse

-- | <i>See:</i> <a>newListGroupVersions</a> smart constructor.
data ListGroupVersions
ListGroupVersions' :: Maybe Text -> Maybe Text -> Text -> ListGroupVersions

-- | Create a value of <a>ListGroupVersions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroupVersions'</a>,
--   <a>listGroupVersions_nextToken</a> - The token for the next set of
--   results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListGroupVersions'</a>,
--   <a>listGroupVersions_maxResults</a> - The maximum number of results to
--   be returned per request.
--   
--   <a>$sel:groupId:ListGroupVersions'</a>,
--   <a>listGroupVersions_groupId</a> - The ID of the Greengrass group.
newListGroupVersions :: Text -> ListGroupVersions

-- | <i>See:</i> <a>newListGroupVersionsResponse</a> smart constructor.
data ListGroupVersionsResponse
ListGroupVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListGroupVersionsResponse

-- | Create a value of <a>ListGroupVersionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGroupVersions'</a>,
--   <a>listGroupVersionsResponse_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:versions:ListGroupVersionsResponse'</a>,
--   <a>listGroupVersionsResponse_versions</a> - Information about a
--   version.
--   
--   <a>$sel:httpStatus:ListGroupVersionsResponse'</a>,
--   <a>listGroupVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListGroupVersionsResponse :: Int -> ListGroupVersionsResponse

-- | <i>See:</i> <a>newUpdateDeviceDefinition</a> smart constructor.
data UpdateDeviceDefinition
UpdateDeviceDefinition' :: Maybe Text -> Text -> UpdateDeviceDefinition

-- | Create a value of <a>UpdateDeviceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateDeviceDefinition'</a>,
--   <a>updateDeviceDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:deviceDefinitionId:UpdateDeviceDefinition'</a>,
--   <a>updateDeviceDefinition_deviceDefinitionId</a> - The ID of the
--   device definition.
newUpdateDeviceDefinition :: Text -> UpdateDeviceDefinition

-- | <i>See:</i> <a>newUpdateDeviceDefinitionResponse</a> smart
--   constructor.
data UpdateDeviceDefinitionResponse
UpdateDeviceDefinitionResponse' :: Int -> UpdateDeviceDefinitionResponse

-- | Create a value of <a>UpdateDeviceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateDeviceDefinitionResponse'</a>,
--   <a>updateDeviceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeviceDefinitionResponse :: Int -> UpdateDeviceDefinitionResponse

-- | <i>See:</i> <a>newListResourceDefinitionVersions</a> smart
--   constructor.
data ListResourceDefinitionVersions
ListResourceDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListResourceDefinitionVersions

-- | Create a value of <a>ListResourceDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceDefinitionVersions'</a>,
--   <a>listResourceDefinitionVersions_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListResourceDefinitionVersions'</a>,
--   <a>listResourceDefinitionVersions_maxResults</a> - The maximum number
--   of results to be returned per request.
--   
--   <a>$sel:resourceDefinitionId:ListResourceDefinitionVersions'</a>,
--   <a>listResourceDefinitionVersions_resourceDefinitionId</a> - The ID of
--   the resource definition.
newListResourceDefinitionVersions :: Text -> ListResourceDefinitionVersions

-- | <i>See:</i> <a>newListResourceDefinitionVersionsResponse</a> smart
--   constructor.
data ListResourceDefinitionVersionsResponse
ListResourceDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListResourceDefinitionVersionsResponse

-- | Create a value of <a>ListResourceDefinitionVersionsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListResourceDefinitionVersions'</a>,
--   <a>listResourceDefinitionVersionsResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListResourceDefinitionVersionsResponse'</a>,
--   <a>listResourceDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListResourceDefinitionVersionsResponse'</a>,
--   <a>listResourceDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListResourceDefinitionVersionsResponse :: Int -> ListResourceDefinitionVersionsResponse

-- | <i>See:</i> <a>newCreateDeviceDefinition</a> smart constructor.
data CreateDeviceDefinition
CreateDeviceDefinition' :: Maybe Text -> Maybe DeviceDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateDeviceDefinition

-- | Create a value of <a>CreateDeviceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinition_name</a> - The name of the device
--   definition.
--   
--   <a>$sel:initialVersion:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinition_initialVersion</a> - Information about the
--   initial version of the device definition.
--   
--   <a>$sel:tags:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinition_amznClientToken</a> - A client token used to
--   correlate requests and responses.
newCreateDeviceDefinition :: CreateDeviceDefinition

-- | <i>See:</i> <a>newCreateDeviceDefinitionResponse</a> smart
--   constructor.
data CreateDeviceDefinitionResponse
CreateDeviceDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateDeviceDefinitionResponse

-- | Create a value of <a>CreateDeviceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateDeviceDefinition'</a>,
--   <a>createDeviceDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:CreateDeviceDefinitionResponse'</a>,
--   <a>createDeviceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeviceDefinitionResponse :: Int -> CreateDeviceDefinitionResponse

-- | <i>See:</i> <a>newGetResourceDefinition</a> smart constructor.
data GetResourceDefinition
GetResourceDefinition' :: Text -> GetResourceDefinition

-- | Create a value of <a>GetResourceDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDefinitionId:GetResourceDefinition'</a>,
--   <a>getResourceDefinition_resourceDefinitionId</a> - The ID of the
--   resource definition.
newGetResourceDefinition :: Text -> GetResourceDefinition

-- | <i>See:</i> <a>newGetResourceDefinitionResponse</a> smart constructor.
data GetResourceDefinitionResponse
GetResourceDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetResourceDefinitionResponse

-- | Create a value of <a>GetResourceDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:tags:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetResourceDefinitionResponse'</a>,
--   <a>getResourceDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetResourceDefinitionResponse :: Int -> GetResourceDefinitionResponse

-- | <i>See:</i> <a>newCreateResourceDefinitionVersion</a> smart
--   constructor.
data CreateResourceDefinitionVersion
CreateResourceDefinitionVersion' :: Maybe [Resource] -> Maybe Text -> Text -> CreateResourceDefinitionVersion

-- | Create a value of <a>CreateResourceDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:CreateResourceDefinitionVersion'</a>,
--   <a>createResourceDefinitionVersion_resources</a> - A list of
--   resources.
--   
--   <a>$sel:amznClientToken:CreateResourceDefinitionVersion'</a>,
--   <a>createResourceDefinitionVersion_amznClientToken</a> - A client
--   token used to correlate requests and responses.
--   
--   <a>$sel:resourceDefinitionId:CreateResourceDefinitionVersion'</a>,
--   <a>createResourceDefinitionVersion_resourceDefinitionId</a> - The ID
--   of the resource definition.
newCreateResourceDefinitionVersion :: Text -> CreateResourceDefinitionVersion

-- | <i>See:</i> <a>newCreateResourceDefinitionVersionResponse</a> smart
--   constructor.
data CreateResourceDefinitionVersionResponse
CreateResourceDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateResourceDefinitionVersionResponse

-- | Create a value of <a>CreateResourceDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_arn</a> - The ARN of the
--   version.
--   
--   <a>$sel:id:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_id</a> - The ID of the
--   parent definition that the version is associated with.
--   
--   <a>$sel:version:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_version</a> - The ID of the
--   version.
--   
--   <a>$sel:httpStatus:CreateResourceDefinitionVersionResponse'</a>,
--   <a>createResourceDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newCreateResourceDefinitionVersionResponse :: Int -> CreateResourceDefinitionVersionResponse

-- | <i>See:</i> <a>newCreateGroupVersion</a> smart constructor.
data CreateGroupVersion
CreateGroupVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> CreateGroupVersion

-- | Create a value of <a>CreateGroupVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_subscriptionDefinitionVersionArn</a> - The ARN
--   of the subscription definition version for this group.
--   
--   <a>$sel:coreDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_coreDefinitionVersionArn</a> - The ARN of the
--   core definition version for this group.
--   
--   <a>$sel:connectorDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_connectorDefinitionVersionArn</a> - The ARN of
--   the connector definition version for this group.
--   
--   <a>$sel:loggerDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_loggerDefinitionVersionArn</a> - The ARN of the
--   logger definition version for this group.
--   
--   <a>$sel:resourceDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_resourceDefinitionVersionArn</a> - The ARN of
--   the resource definition version for this group.
--   
--   <a>$sel:functionDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_functionDefinitionVersionArn</a> - The ARN of
--   the function definition version for this group.
--   
--   <a>$sel:amznClientToken:CreateGroupVersion'</a>,
--   <a>createGroupVersion_amznClientToken</a> - A client token used to
--   correlate requests and responses.
--   
--   <a>$sel:deviceDefinitionVersionArn:CreateGroupVersion'</a>,
--   <a>createGroupVersion_deviceDefinitionVersionArn</a> - The ARN of the
--   device definition version for this group.
--   
--   <a>$sel:groupId:CreateGroupVersion'</a>,
--   <a>createGroupVersion_groupId</a> - The ID of the Greengrass group.
newCreateGroupVersion :: Text -> CreateGroupVersion

-- | <i>See:</i> <a>newCreateGroupVersionResponse</a> smart constructor.
data CreateGroupVersionResponse
CreateGroupVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateGroupVersionResponse

-- | Create a value of <a>CreateGroupVersionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_arn</a> - The ARN of the version.
--   
--   <a>$sel:id:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_id</a> - The ID of the parent definition
--   that the version is associated with.
--   
--   <a>$sel:version:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_version</a> - The ID of the version.
--   
--   <a>$sel:httpStatus:CreateGroupVersionResponse'</a>,
--   <a>createGroupVersionResponse_httpStatus</a> - The response's http
--   status code.
newCreateGroupVersionResponse :: Int -> CreateGroupVersionResponse

-- | <i>See:</i> <a>newGetDeviceDefinitionVersion</a> smart constructor.
data GetDeviceDefinitionVersion
GetDeviceDefinitionVersion' :: Maybe Text -> Text -> Text -> GetDeviceDefinitionVersion

-- | Create a value of <a>GetDeviceDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDeviceDefinitionVersion'</a>,
--   <a>getDeviceDefinitionVersion_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:deviceDefinitionVersionId:GetDeviceDefinitionVersion'</a>,
--   <a>getDeviceDefinitionVersion_deviceDefinitionVersionId</a> - The ID
--   of the device definition version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListDeviceDefinitionVersions'' requests. If the version
--   is the last one that was associated with a device definition, the
--   value also maps to the ''LatestVersion'' property of the corresponding
--   ''DefinitionInformation'' object.
--   
--   <a>$sel:deviceDefinitionId:GetDeviceDefinitionVersion'</a>,
--   <a>getDeviceDefinitionVersion_deviceDefinitionId</a> - The ID of the
--   device definition.
newGetDeviceDefinitionVersion :: Text -> Text -> GetDeviceDefinitionVersion

-- | <i>See:</i> <a>newGetDeviceDefinitionVersionResponse</a> smart
--   constructor.
data GetDeviceDefinitionVersionResponse
GetDeviceDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe DeviceDefinitionVersion -> Int -> GetDeviceDefinitionVersionResponse

-- | Create a value of <a>GetDeviceDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the device definition
--   version was created.
--   
--   <a>$sel:nextToken:GetDeviceDefinitionVersion'</a>,
--   <a>getDeviceDefinitionVersionResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:arn:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_arn</a> - The ARN of the device
--   definition version.
--   
--   <a>$sel:id:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_id</a> - The ID of the device
--   definition version.
--   
--   <a>$sel:version:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_version</a> - The version of the
--   device definition version.
--   
--   <a>$sel:definition:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_definition</a> - Information
--   about the device definition version.
--   
--   <a>$sel:httpStatus:GetDeviceDefinitionVersionResponse'</a>,
--   <a>getDeviceDefinitionVersionResponse_httpStatus</a> - The response's
--   http status code.
newGetDeviceDefinitionVersionResponse :: Int -> GetDeviceDefinitionVersionResponse

-- | <i>See:</i> <a>newGetGroup</a> smart constructor.
data GetGroup
GetGroup' :: Text -> GetGroup

-- | Create a value of <a>GetGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:GetGroup'</a>, <a>getGroup_groupId</a> - The ID of the
--   Greengrass group.
newGetGroup :: Text -> GetGroup

-- | <i>See:</i> <a>newGetGroupResponse</a> smart constructor.
data GetGroupResponse
GetGroupResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetGroupResponse

-- | Create a value of <a>GetGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetGroupResponse'</a>,
--   <a>getGroupResponse_creationTimestamp</a> - The time, in milliseconds
--   since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetGroupResponse'</a>,
--   <a>getGroupResponse_latestVersionArn</a> - The ARN of the latest
--   version associated with the definition.
--   
--   <a>$sel:latestVersion:GetGroupResponse'</a>,
--   <a>getGroupResponse_latestVersion</a> - The ID of the latest version
--   associated with the definition.
--   
--   <a>$sel:arn:GetGroupResponse'</a>, <a>getGroupResponse_arn</a> - The
--   ARN of the definition.
--   
--   <a>$sel:id:GetGroupResponse'</a>, <a>getGroupResponse_id</a> - The ID
--   of the definition.
--   
--   <a>$sel:name:GetGroupResponse'</a>, <a>getGroupResponse_name</a> - The
--   name of the definition.
--   
--   <a>$sel:tags:GetGroupResponse'</a>, <a>getGroupResponse_tags</a> -
--   Tag(s) attached to the resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetGroupResponse'</a>,
--   <a>getGroupResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetGroupResponse'</a>,
--   <a>getGroupResponse_httpStatus</a> - The response's http status code.
newGetGroupResponse :: Int -> GetGroupResponse

-- | <i>See:</i> <a>newDeleteGroup</a> smart constructor.
data DeleteGroup
DeleteGroup' :: Text -> DeleteGroup

-- | Create a value of <a>DeleteGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:DeleteGroup'</a>, <a>deleteGroup_groupId</a> - The ID
--   of the Greengrass group.
newDeleteGroup :: Text -> DeleteGroup

-- | <i>See:</i> <a>newDeleteGroupResponse</a> smart constructor.
data DeleteGroupResponse
DeleteGroupResponse' :: Int -> DeleteGroupResponse

-- | Create a value of <a>DeleteGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteGroupResponse'</a>,
--   <a>deleteGroupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteGroupResponse :: Int -> DeleteGroupResponse

-- | <i>See:</i> <a>newListFunctionDefinitions</a> smart constructor.
data ListFunctionDefinitions
ListFunctionDefinitions' :: Maybe Text -> Maybe Text -> ListFunctionDefinitions

-- | Create a value of <a>ListFunctionDefinitions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFunctionDefinitions'</a>,
--   <a>listFunctionDefinitions_nextToken</a> - The token for the next set
--   of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListFunctionDefinitions'</a>,
--   <a>listFunctionDefinitions_maxResults</a> - The maximum number of
--   results to be returned per request.
newListFunctionDefinitions :: ListFunctionDefinitions

-- | <i>See:</i> <a>newListFunctionDefinitionsResponse</a> smart
--   constructor.
data ListFunctionDefinitionsResponse
ListFunctionDefinitionsResponse' :: Maybe Text -> Maybe [DefinitionInformation] -> Int -> ListFunctionDefinitionsResponse

-- | Create a value of <a>ListFunctionDefinitionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFunctionDefinitions'</a>,
--   <a>listFunctionDefinitionsResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:definitions:ListFunctionDefinitionsResponse'</a>,
--   <a>listFunctionDefinitionsResponse_definitions</a> - Information about
--   a definition.
--   
--   <a>$sel:httpStatus:ListFunctionDefinitionsResponse'</a>,
--   <a>listFunctionDefinitionsResponse_httpStatus</a> - The response's
--   http status code.
newListFunctionDefinitionsResponse :: Int -> ListFunctionDefinitionsResponse

-- | <i>See:</i> <a>newDeleteFunctionDefinition</a> smart constructor.
data DeleteFunctionDefinition
DeleteFunctionDefinition' :: Text -> DeleteFunctionDefinition

-- | Create a value of <a>DeleteFunctionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionDefinitionId:DeleteFunctionDefinition'</a>,
--   <a>deleteFunctionDefinition_functionDefinitionId</a> - The ID of the
--   Lambda function definition.
newDeleteFunctionDefinition :: Text -> DeleteFunctionDefinition

-- | <i>See:</i> <a>newDeleteFunctionDefinitionResponse</a> smart
--   constructor.
data DeleteFunctionDefinitionResponse
DeleteFunctionDefinitionResponse' :: Int -> DeleteFunctionDefinitionResponse

-- | Create a value of <a>DeleteFunctionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFunctionDefinitionResponse'</a>,
--   <a>deleteFunctionDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newDeleteFunctionDefinitionResponse :: Int -> DeleteFunctionDefinitionResponse

-- | <i>See:</i> <a>newUpdateFunctionDefinition</a> smart constructor.
data UpdateFunctionDefinition
UpdateFunctionDefinition' :: Maybe Text -> Text -> UpdateFunctionDefinition

-- | Create a value of <a>UpdateFunctionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateFunctionDefinition'</a>,
--   <a>updateFunctionDefinition_name</a> - The name of the definition.
--   
--   <a>$sel:functionDefinitionId:UpdateFunctionDefinition'</a>,
--   <a>updateFunctionDefinition_functionDefinitionId</a> - The ID of the
--   Lambda function definition.
newUpdateFunctionDefinition :: Text -> UpdateFunctionDefinition

-- | <i>See:</i> <a>newUpdateFunctionDefinitionResponse</a> smart
--   constructor.
data UpdateFunctionDefinitionResponse
UpdateFunctionDefinitionResponse' :: Int -> UpdateFunctionDefinitionResponse

-- | Create a value of <a>UpdateFunctionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateFunctionDefinitionResponse'</a>,
--   <a>updateFunctionDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newUpdateFunctionDefinitionResponse :: Int -> UpdateFunctionDefinitionResponse

-- | <i>See:</i> <a>newListBulkDeploymentDetailedReports</a> smart
--   constructor.
data ListBulkDeploymentDetailedReports
ListBulkDeploymentDetailedReports' :: Maybe Text -> Maybe Text -> Text -> ListBulkDeploymentDetailedReports

-- | Create a value of <a>ListBulkDeploymentDetailedReports</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBulkDeploymentDetailedReports'</a>,
--   <a>listBulkDeploymentDetailedReports_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListBulkDeploymentDetailedReports'</a>,
--   <a>listBulkDeploymentDetailedReports_maxResults</a> - The maximum
--   number of results to be returned per request.
--   
--   <a>$sel:bulkDeploymentId:ListBulkDeploymentDetailedReports'</a>,
--   <a>listBulkDeploymentDetailedReports_bulkDeploymentId</a> - The ID of
--   the bulk deployment.
newListBulkDeploymentDetailedReports :: Text -> ListBulkDeploymentDetailedReports

-- | <i>See:</i> <a>newListBulkDeploymentDetailedReportsResponse</a> smart
--   constructor.
data ListBulkDeploymentDetailedReportsResponse
ListBulkDeploymentDetailedReportsResponse' :: Maybe Text -> Maybe [BulkDeploymentResult] -> Int -> ListBulkDeploymentDetailedReportsResponse

-- | Create a value of <a>ListBulkDeploymentDetailedReportsResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBulkDeploymentDetailedReports'</a>,
--   <a>listBulkDeploymentDetailedReportsResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:deployments:ListBulkDeploymentDetailedReportsResponse'</a>,
--   <a>listBulkDeploymentDetailedReportsResponse_deployments</a> - A list
--   of the individual group deployments in the bulk deployment operation.
--   
--   <a>$sel:httpStatus:ListBulkDeploymentDetailedReportsResponse'</a>,
--   <a>listBulkDeploymentDetailedReportsResponse_httpStatus</a> - The
--   response's http status code.
newListBulkDeploymentDetailedReportsResponse :: Int -> ListBulkDeploymentDetailedReportsResponse

-- | <i>See:</i> <a>newUpdateGroup</a> smart constructor.
data UpdateGroup
UpdateGroup' :: Maybe Text -> Text -> UpdateGroup

-- | Create a value of <a>UpdateGroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateGroup'</a>, <a>updateGroup_name</a> - The name of
--   the definition.
--   
--   <a>$sel:groupId:UpdateGroup'</a>, <a>updateGroup_groupId</a> - The ID
--   of the Greengrass group.
newUpdateGroup :: Text -> UpdateGroup

-- | <i>See:</i> <a>newUpdateGroupResponse</a> smart constructor.
data UpdateGroupResponse
UpdateGroupResponse' :: Int -> UpdateGroupResponse

-- | Create a value of <a>UpdateGroupResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateGroupResponse'</a>,
--   <a>updateGroupResponse_httpStatus</a> - The response's http status
--   code.
newUpdateGroupResponse :: Int -> UpdateGroupResponse

-- | <i>See:</i> <a>newGetDeploymentStatus</a> smart constructor.
data GetDeploymentStatus
GetDeploymentStatus' :: Text -> Text -> GetDeploymentStatus

-- | Create a value of <a>GetDeploymentStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupId:GetDeploymentStatus'</a>,
--   <a>getDeploymentStatus_groupId</a> - The ID of the Greengrass group.
--   
--   <a>$sel:deploymentId:GetDeploymentStatus'</a>,
--   <a>getDeploymentStatus_deploymentId</a> - The ID of the deployment.
newGetDeploymentStatus :: Text -> Text -> GetDeploymentStatus

-- | <i>See:</i> <a>newGetDeploymentStatusResponse</a> smart constructor.
data GetDeploymentStatusResponse
GetDeploymentStatusResponse' :: Maybe DeploymentType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ErrorDetail] -> Int -> GetDeploymentStatusResponse

-- | Create a value of <a>GetDeploymentStatusResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentType:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_deploymentType</a> - The type of the
--   deployment.
--   
--   <a>$sel:updatedAt:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_updatedAt</a> - The time, in
--   milliseconds since the epoch, when the deployment status was updated.
--   
--   <a>$sel:deploymentStatus:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_deploymentStatus</a> - The status of
--   the deployment: ''InProgress'', ''Building'', ''Success'', or
--   ''Failure''.
--   
--   <a>$sel:errorMessage:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_errorMessage</a> - Error message
--   
--   <a>$sel:errorDetails:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_errorDetails</a> - Error details
--   
--   <a>$sel:httpStatus:GetDeploymentStatusResponse'</a>,
--   <a>getDeploymentStatusResponse_httpStatus</a> - The response's http
--   status code.
newGetDeploymentStatusResponse :: Int -> GetDeploymentStatusResponse

-- | <i>See:</i> <a>newGetFunctionDefinitionVersion</a> smart constructor.
data GetFunctionDefinitionVersion
GetFunctionDefinitionVersion' :: Maybe Text -> Text -> Text -> GetFunctionDefinitionVersion

-- | Create a value of <a>GetFunctionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetFunctionDefinitionVersion'</a>,
--   <a>getFunctionDefinitionVersion_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:functionDefinitionId:GetFunctionDefinitionVersion'</a>,
--   <a>getFunctionDefinitionVersion_functionDefinitionId</a> - The ID of
--   the Lambda function definition.
--   
--   <a>$sel:functionDefinitionVersionId:GetFunctionDefinitionVersion'</a>,
--   <a>getFunctionDefinitionVersion_functionDefinitionVersionId</a> - The
--   ID of the function definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListFunctionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   function definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
newGetFunctionDefinitionVersion :: Text -> Text -> GetFunctionDefinitionVersion

-- | <i>See:</i> <a>newGetFunctionDefinitionVersionResponse</a> smart
--   constructor.
data GetFunctionDefinitionVersionResponse
GetFunctionDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe FunctionDefinitionVersion -> Int -> GetFunctionDefinitionVersionResponse

-- | Create a value of <a>GetFunctionDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the function definition
--   version was created.
--   
--   <a>$sel:nextToken:GetFunctionDefinitionVersion'</a>,
--   <a>getFunctionDefinitionVersionResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:arn:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_arn</a> - The ARN of the
--   function definition version.
--   
--   <a>$sel:id:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_id</a> - The ID of the
--   function definition version.
--   
--   <a>$sel:version:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_version</a> - The version of
--   the function definition version.
--   
--   <a>$sel:definition:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_definition</a> - Information
--   on the definition.
--   
--   <a>$sel:httpStatus:GetFunctionDefinitionVersionResponse'</a>,
--   <a>getFunctionDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newGetFunctionDefinitionVersionResponse :: Int -> GetFunctionDefinitionVersionResponse

-- | <i>See:</i> <a>newGetBulkDeploymentStatus</a> smart constructor.
data GetBulkDeploymentStatus
GetBulkDeploymentStatus' :: Text -> GetBulkDeploymentStatus

-- | Create a value of <a>GetBulkDeploymentStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:GetBulkDeploymentStatus'</a>,
--   <a>getBulkDeploymentStatus_bulkDeploymentId</a> - The ID of the bulk
--   deployment.
newGetBulkDeploymentStatus :: Text -> GetBulkDeploymentStatus

-- | <i>See:</i> <a>newGetBulkDeploymentStatusResponse</a> smart
--   constructor.
data GetBulkDeploymentStatusResponse
GetBulkDeploymentStatusResponse' :: Maybe BulkDeploymentStatus -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe BulkDeploymentMetrics -> Maybe Text -> Maybe [ErrorDetail] -> Int -> GetBulkDeploymentStatusResponse

-- | Create a value of <a>GetBulkDeploymentStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentStatus:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_bulkDeploymentStatus</a> - The
--   status of the bulk deployment.
--   
--   <a>$sel:createdAt:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_createdAt</a> - The time, in ISO
--   format, when the deployment was created.
--   
--   <a>$sel:tags:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:bulkDeploymentMetrics:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_bulkDeploymentMetrics</a> -
--   Relevant metrics on input records processed during bulk deployment.
--   
--   <a>$sel:errorMessage:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_errorMessage</a> - Error message
--   
--   <a>$sel:errorDetails:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_errorDetails</a> - Error details
--   
--   <a>$sel:httpStatus:GetBulkDeploymentStatusResponse'</a>,
--   <a>getBulkDeploymentStatusResponse_httpStatus</a> - The response's
--   http status code.
newGetBulkDeploymentStatusResponse :: Int -> GetBulkDeploymentStatusResponse

-- | <i>See:</i> <a>newCreateFunctionDefinition</a> smart constructor.
data CreateFunctionDefinition
CreateFunctionDefinition' :: Maybe Text -> Maybe FunctionDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateFunctionDefinition

-- | Create a value of <a>CreateFunctionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinition_name</a> - The name of the function
--   definition.
--   
--   <a>$sel:initialVersion:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinition_initialVersion</a> - Information about the
--   initial version of the function definition.
--   
--   <a>$sel:tags:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinition_amznClientToken</a> - A client token used
--   to correlate requests and responses.
newCreateFunctionDefinition :: CreateFunctionDefinition

-- | <i>See:</i> <a>newCreateFunctionDefinitionResponse</a> smart
--   constructor.
data CreateFunctionDefinitionResponse
CreateFunctionDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateFunctionDefinitionResponse

-- | Create a value of <a>CreateFunctionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateFunctionDefinition'</a>,
--   <a>createFunctionDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:CreateFunctionDefinitionResponse'</a>,
--   <a>createFunctionDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newCreateFunctionDefinitionResponse :: Int -> CreateFunctionDefinitionResponse

-- | <i>See:</i> <a>newGetConnectorDefinition</a> smart constructor.
data GetConnectorDefinition
GetConnectorDefinition' :: Text -> GetConnectorDefinition

-- | Create a value of <a>GetConnectorDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectorDefinitionId:GetConnectorDefinition'</a>,
--   <a>getConnectorDefinition_connectorDefinitionId</a> - The ID of the
--   connector definition.
newGetConnectorDefinition :: Text -> GetConnectorDefinition

-- | <i>See:</i> <a>newGetConnectorDefinitionResponse</a> smart
--   constructor.
data GetConnectorDefinitionResponse
GetConnectorDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetConnectorDefinitionResponse

-- | Create a value of <a>GetConnectorDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:tags:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetConnectorDefinitionResponse'</a>,
--   <a>getConnectorDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetConnectorDefinitionResponse :: Int -> GetConnectorDefinitionResponse

-- | <i>See:</i> <a>newGetSubscriptionDefinition</a> smart constructor.
data GetSubscriptionDefinition
GetSubscriptionDefinition' :: Text -> GetSubscriptionDefinition

-- | Create a value of <a>GetSubscriptionDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionId:GetSubscriptionDefinition'</a>,
--   <a>getSubscriptionDefinition_subscriptionDefinitionId</a> - The ID of
--   the subscription definition.
newGetSubscriptionDefinition :: Text -> GetSubscriptionDefinition

-- | <i>See:</i> <a>newGetSubscriptionDefinitionResponse</a> smart
--   constructor.
data GetSubscriptionDefinitionResponse
GetSubscriptionDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetSubscriptionDefinitionResponse

-- | Create a value of <a>GetSubscriptionDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_arn</a> - The ARN of the
--   definition.
--   
--   <a>$sel:id:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_id</a> - The ID of the
--   definition.
--   
--   <a>$sel:name:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:tags:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_lastUpdatedTimestamp</a> - The
--   time, in milliseconds since the epoch, when the definition was last
--   updated.
--   
--   <a>$sel:httpStatus:GetSubscriptionDefinitionResponse'</a>,
--   <a>getSubscriptionDefinitionResponse_httpStatus</a> - The response's
--   http status code.
newGetSubscriptionDefinitionResponse :: Int -> GetSubscriptionDefinitionResponse

-- | <i>See:</i> <a>newGetCoreDefinition</a> smart constructor.
data GetCoreDefinition
GetCoreDefinition' :: Text -> GetCoreDefinition

-- | Create a value of <a>GetCoreDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreDefinitionId:GetCoreDefinition'</a>,
--   <a>getCoreDefinition_coreDefinitionId</a> - The ID of the core
--   definition.
newGetCoreDefinition :: Text -> GetCoreDefinition

-- | <i>See:</i> <a>newGetCoreDefinitionResponse</a> smart constructor.
data GetCoreDefinitionResponse
GetCoreDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Int -> GetCoreDefinitionResponse

-- | Create a value of <a>GetCoreDefinitionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_latestVersionArn</a> - The ARN of the
--   latest version associated with the definition.
--   
--   <a>$sel:latestVersion:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_latestVersion</a> - The ID of the latest
--   version associated with the definition.
--   
--   <a>$sel:arn:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_name</a> - The name of the definition.
--   
--   <a>$sel:tags:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_tags</a> - Tag(s) attached to the
--   resource arn.
--   
--   <a>$sel:lastUpdatedTimestamp:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:GetCoreDefinitionResponse'</a>,
--   <a>getCoreDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newGetCoreDefinitionResponse :: Int -> GetCoreDefinitionResponse

-- | <i>See:</i> <a>newGetServiceRoleForAccount</a> smart constructor.
data GetServiceRoleForAccount
GetServiceRoleForAccount' :: GetServiceRoleForAccount

-- | Create a value of <a>GetServiceRoleForAccount</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetServiceRoleForAccount :: GetServiceRoleForAccount

-- | <i>See:</i> <a>newGetServiceRoleForAccountResponse</a> smart
--   constructor.
data GetServiceRoleForAccountResponse
GetServiceRoleForAccountResponse' :: Maybe Text -> Maybe Text -> Int -> GetServiceRoleForAccountResponse

-- | Create a value of <a>GetServiceRoleForAccountResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:GetServiceRoleForAccountResponse'</a>,
--   <a>getServiceRoleForAccountResponse_roleArn</a> - The ARN of the role
--   which is associated with the account.
--   
--   <a>$sel:associatedAt:GetServiceRoleForAccountResponse'</a>,
--   <a>getServiceRoleForAccountResponse_associatedAt</a> - The time when
--   the service role was associated with the account.
--   
--   <a>$sel:httpStatus:GetServiceRoleForAccountResponse'</a>,
--   <a>getServiceRoleForAccountResponse_httpStatus</a> - The response's
--   http status code.
newGetServiceRoleForAccountResponse :: Int -> GetServiceRoleForAccountResponse

-- | <i>See:</i> <a>newCreateDeployment</a> smart constructor.
data CreateDeployment
CreateDeployment' :: Maybe Text -> Maybe Text -> Maybe Text -> Text -> DeploymentType -> CreateDeployment

-- | Create a value of <a>CreateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateDeployment'</a>,
--   <a>createDeployment_deploymentId</a> - The ID of the deployment if you
--   wish to redeploy a previous deployment.
--   
--   <a>$sel:groupVersionId:CreateDeployment'</a>,
--   <a>createDeployment_groupVersionId</a> - The ID of the group version
--   to be deployed.
--   
--   <a>$sel:amznClientToken:CreateDeployment'</a>,
--   <a>createDeployment_amznClientToken</a> - A client token used to
--   correlate requests and responses.
--   
--   <a>$sel:groupId:CreateDeployment'</a>, <a>createDeployment_groupId</a>
--   - The ID of the Greengrass group.
--   
--   <a>$sel:deploymentType:CreateDeployment'</a>,
--   <a>createDeployment_deploymentType</a> - The type of deployment. When
--   used for ''CreateDeployment'', only ''NewDeployment'' and
--   ''Redeployment'' are valid.
newCreateDeployment :: Text -> DeploymentType -> CreateDeployment

-- | <i>See:</i> <a>newCreateDeploymentResponse</a> smart constructor.
data CreateDeploymentResponse
CreateDeploymentResponse' :: Maybe Text -> Maybe Text -> Int -> CreateDeploymentResponse

-- | Create a value of <a>CreateDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateDeployment'</a>,
--   <a>createDeploymentResponse_deploymentId</a> - The ID of the
--   deployment.
--   
--   <a>$sel:deploymentArn:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentArn</a> - The ARN of the
--   deployment.
--   
--   <a>$sel:httpStatus:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentResponse :: Int -> CreateDeploymentResponse

-- | <i>See:</i> <a>newGetLoggerDefinitionVersion</a> smart constructor.
data GetLoggerDefinitionVersion
GetLoggerDefinitionVersion' :: Maybe Text -> Text -> Text -> GetLoggerDefinitionVersion

-- | Create a value of <a>GetLoggerDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetLoggerDefinitionVersion'</a>,
--   <a>getLoggerDefinitionVersion_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:loggerDefinitionVersionId:GetLoggerDefinitionVersion'</a>,
--   <a>getLoggerDefinitionVersion_loggerDefinitionVersionId</a> - The ID
--   of the logger definition version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListLoggerDefinitionVersions'' requests. If the version
--   is the last one that was associated with a logger definition, the
--   value also maps to the ''LatestVersion'' property of the corresponding
--   ''DefinitionInformation'' object.
--   
--   <a>$sel:loggerDefinitionId:GetLoggerDefinitionVersion'</a>,
--   <a>getLoggerDefinitionVersion_loggerDefinitionId</a> - The ID of the
--   logger definition.
newGetLoggerDefinitionVersion :: Text -> Text -> GetLoggerDefinitionVersion

-- | <i>See:</i> <a>newGetLoggerDefinitionVersionResponse</a> smart
--   constructor.
data GetLoggerDefinitionVersionResponse
GetLoggerDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LoggerDefinitionVersion -> Int -> GetLoggerDefinitionVersionResponse

-- | Create a value of <a>GetLoggerDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the logger definition
--   version was created.
--   
--   <a>$sel:arn:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_arn</a> - The ARN of the logger
--   definition version.
--   
--   <a>$sel:id:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_id</a> - The ID of the logger
--   definition version.
--   
--   <a>$sel:version:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_version</a> - The version of the
--   logger definition version.
--   
--   <a>$sel:definition:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_definition</a> - Information
--   about the logger definition version.
--   
--   <a>$sel:httpStatus:GetLoggerDefinitionVersionResponse'</a>,
--   <a>getLoggerDefinitionVersionResponse_httpStatus</a> - The response's
--   http status code.
newGetLoggerDefinitionVersionResponse :: Int -> GetLoggerDefinitionVersionResponse

-- | <i>See:</i> <a>newCreateLoggerDefinition</a> smart constructor.
data CreateLoggerDefinition
CreateLoggerDefinition' :: Maybe Text -> Maybe LoggerDefinitionVersion -> Maybe (HashMap Text Text) -> Maybe Text -> CreateLoggerDefinition

-- | Create a value of <a>CreateLoggerDefinition</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinition_name</a> - The name of the logger
--   definition.
--   
--   <a>$sel:initialVersion:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinition_initialVersion</a> - Information about the
--   initial version of the logger definition.
--   
--   <a>$sel:tags:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinition_tags</a> - Tag(s) to add to the new
--   resource.
--   
--   <a>$sel:amznClientToken:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinition_amznClientToken</a> - A client token used to
--   correlate requests and responses.
newCreateLoggerDefinition :: CreateLoggerDefinition

-- | <i>See:</i> <a>newCreateLoggerDefinitionResponse</a> smart
--   constructor.
data CreateLoggerDefinitionResponse
CreateLoggerDefinitionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateLoggerDefinitionResponse

-- | Create a value of <a>CreateLoggerDefinitionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_latestVersionArn</a> - The ARN of
--   the latest version associated with the definition.
--   
--   <a>$sel:latestVersion:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_latestVersion</a> - The ID of the
--   latest version associated with the definition.
--   
--   <a>$sel:arn:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_id</a> - The ID of the definition.
--   
--   <a>$sel:name:CreateLoggerDefinition'</a>,
--   <a>createLoggerDefinitionResponse_name</a> - The name of the
--   definition.
--   
--   <a>$sel:lastUpdatedTimestamp:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_lastUpdatedTimestamp</a> - The time,
--   in milliseconds since the epoch, when the definition was last updated.
--   
--   <a>$sel:httpStatus:CreateLoggerDefinitionResponse'</a>,
--   <a>createLoggerDefinitionResponse_httpStatus</a> - The response's http
--   status code.
newCreateLoggerDefinitionResponse :: Int -> CreateLoggerDefinitionResponse

-- | <i>See:</i> <a>newGetGroupCertificateAuthority</a> smart constructor.
data GetGroupCertificateAuthority
GetGroupCertificateAuthority' :: Text -> Text -> GetGroupCertificateAuthority

-- | Create a value of <a>GetGroupCertificateAuthority</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:certificateAuthorityId:GetGroupCertificateAuthority'</a>,
--   <a>getGroupCertificateAuthority_certificateAuthorityId</a> - The ID of
--   the certificate authority.
--   
--   <a>$sel:groupId:GetGroupCertificateAuthority'</a>,
--   <a>getGroupCertificateAuthority_groupId</a> - The ID of the Greengrass
--   group.
newGetGroupCertificateAuthority :: Text -> Text -> GetGroupCertificateAuthority

-- | <i>See:</i> <a>newGetGroupCertificateAuthorityResponse</a> smart
--   constructor.
data GetGroupCertificateAuthorityResponse
GetGroupCertificateAuthorityResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetGroupCertificateAuthorityResponse

-- | Create a value of <a>GetGroupCertificateAuthorityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorityArn:GetGroupCertificateAuthorityResponse'</a>,
--   <a>getGroupCertificateAuthorityResponse_groupCertificateAuthorityArn</a>
--   - The ARN of the certificate authority for the group.
--   
--   
--   <a>$sel:pemEncodedCertificate:GetGroupCertificateAuthorityResponse'</a>,
--   <a>getGroupCertificateAuthorityResponse_pemEncodedCertificate</a> -
--   The PEM encoded certificate for the group.
--   
--   
--   <a>$sel:groupCertificateAuthorityId:GetGroupCertificateAuthorityResponse'</a>,
--   <a>getGroupCertificateAuthorityResponse_groupCertificateAuthorityId</a>
--   - The ID of the certificate authority for the group.
--   
--   <a>$sel:httpStatus:GetGroupCertificateAuthorityResponse'</a>,
--   <a>getGroupCertificateAuthorityResponse_httpStatus</a> - The
--   response's http status code.
newGetGroupCertificateAuthorityResponse :: Int -> GetGroupCertificateAuthorityResponse

-- | <i>See:</i> <a>newGetConnectorDefinitionVersion</a> smart constructor.
data GetConnectorDefinitionVersion
GetConnectorDefinitionVersion' :: Maybe Text -> Text -> Text -> GetConnectorDefinitionVersion

-- | Create a value of <a>GetConnectorDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetConnectorDefinitionVersion'</a>,
--   <a>getConnectorDefinitionVersion_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:connectorDefinitionId:GetConnectorDefinitionVersion'</a>,
--   <a>getConnectorDefinitionVersion_connectorDefinitionId</a> - The ID of
--   the connector definition.
--   
--   
--   <a>$sel:connectorDefinitionVersionId:GetConnectorDefinitionVersion'</a>,
--   <a>getConnectorDefinitionVersion_connectorDefinitionVersionId</a> -
--   The ID of the connector definition version. This value maps to the
--   ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListConnectorDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   connector definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
newGetConnectorDefinitionVersion :: Text -> Text -> GetConnectorDefinitionVersion

-- | <i>See:</i> <a>newGetConnectorDefinitionVersionResponse</a> smart
--   constructor.
data GetConnectorDefinitionVersionResponse
GetConnectorDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConnectorDefinitionVersion -> Int -> GetConnectorDefinitionVersionResponse

-- | Create a value of <a>GetConnectorDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_creationTimestamp</a> - The
--   time, in milliseconds since the epoch, when the connector definition
--   version was created.
--   
--   <a>$sel:nextToken:GetConnectorDefinitionVersion'</a>,
--   <a>getConnectorDefinitionVersionResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:arn:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_arn</a> - The ARN of the
--   connector definition version.
--   
--   <a>$sel:id:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_id</a> - The ID of the
--   connector definition version.
--   
--   <a>$sel:version:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_version</a> - The version of
--   the connector definition version.
--   
--   <a>$sel:definition:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_definition</a> - Information
--   about the connector definition version.
--   
--   <a>$sel:httpStatus:GetConnectorDefinitionVersionResponse'</a>,
--   <a>getConnectorDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newGetConnectorDefinitionVersionResponse :: Int -> GetConnectorDefinitionVersionResponse

-- | <i>See:</i> <a>newListLoggerDefinitionVersions</a> smart constructor.
data ListLoggerDefinitionVersions
ListLoggerDefinitionVersions' :: Maybe Text -> Maybe Text -> Text -> ListLoggerDefinitionVersions

-- | Create a value of <a>ListLoggerDefinitionVersions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLoggerDefinitionVersions'</a>,
--   <a>listLoggerDefinitionVersions_nextToken</a> - The token for the next
--   set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:maxResults:ListLoggerDefinitionVersions'</a>,
--   <a>listLoggerDefinitionVersions_maxResults</a> - The maximum number of
--   results to be returned per request.
--   
--   <a>$sel:loggerDefinitionId:ListLoggerDefinitionVersions'</a>,
--   <a>listLoggerDefinitionVersions_loggerDefinitionId</a> - The ID of the
--   logger definition.
newListLoggerDefinitionVersions :: Text -> ListLoggerDefinitionVersions

-- | <i>See:</i> <a>newListLoggerDefinitionVersionsResponse</a> smart
--   constructor.
data ListLoggerDefinitionVersionsResponse
ListLoggerDefinitionVersionsResponse' :: Maybe Text -> Maybe [VersionInformation] -> Int -> ListLoggerDefinitionVersionsResponse

-- | Create a value of <a>ListLoggerDefinitionVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLoggerDefinitionVersions'</a>,
--   <a>listLoggerDefinitionVersionsResponse_nextToken</a> - The token for
--   the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:versions:ListLoggerDefinitionVersionsResponse'</a>,
--   <a>listLoggerDefinitionVersionsResponse_versions</a> - Information
--   about a version.
--   
--   <a>$sel:httpStatus:ListLoggerDefinitionVersionsResponse'</a>,
--   <a>listLoggerDefinitionVersionsResponse_httpStatus</a> - The
--   response's http status code.
newListLoggerDefinitionVersionsResponse :: Int -> ListLoggerDefinitionVersionsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetSubscriptionDefinitionVersion</a> smart
--   constructor.
data GetSubscriptionDefinitionVersion
GetSubscriptionDefinitionVersion' :: Maybe Text -> Text -> Text -> GetSubscriptionDefinitionVersion

-- | Create a value of <a>GetSubscriptionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetSubscriptionDefinitionVersion'</a>,
--   <a>getSubscriptionDefinitionVersion_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   
--   <a>$sel:subscriptionDefinitionId:GetSubscriptionDefinitionVersion'</a>,
--   <a>getSubscriptionDefinitionVersion_subscriptionDefinitionId</a> - The
--   ID of the subscription definition.
--   
--   
--   <a>$sel:subscriptionDefinitionVersionId:GetSubscriptionDefinitionVersion'</a>,
--   <a>getSubscriptionDefinitionVersion_subscriptionDefinitionVersionId</a>
--   - The ID of the subscription definition version. This value maps to
--   the ''Version'' property of the corresponding ''VersionInformation''
--   object, which is returned by ''ListSubscriptionDefinitionVersions''
--   requests. If the version is the last one that was associated with a
--   subscription definition, the value also maps to the ''LatestVersion''
--   property of the corresponding ''DefinitionInformation'' object.
newGetSubscriptionDefinitionVersion :: Text -> Text -> GetSubscriptionDefinitionVersion

-- | <i>See:</i> <a>newGetSubscriptionDefinitionVersionResponse</a> smart
--   constructor.
data GetSubscriptionDefinitionVersionResponse
GetSubscriptionDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe SubscriptionDefinitionVersion -> Int -> GetSubscriptionDefinitionVersionResponse

-- | Create a value of <a>GetSubscriptionDefinitionVersionResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:creationTimestamp:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_creationTimestamp</a> -
--   The time, in milliseconds since the epoch, when the subscription
--   definition version was created.
--   
--   <a>$sel:nextToken:GetSubscriptionDefinitionVersion'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_nextToken</a> - The token
--   for the next set of results, or ''null'' if there are no additional
--   results.
--   
--   <a>$sel:arn:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_arn</a> - The ARN of the
--   subscription definition version.
--   
--   <a>$sel:id:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_id</a> - The ID of the
--   subscription definition version.
--   
--   <a>$sel:version:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_version</a> - The version
--   of the subscription definition version.
--   
--   <a>$sel:definition:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_definition</a> -
--   Information about the subscription definition version.
--   
--   <a>$sel:httpStatus:GetSubscriptionDefinitionVersionResponse'</a>,
--   <a>getSubscriptionDefinitionVersionResponse_httpStatus</a> - The
--   response's http status code.
newGetSubscriptionDefinitionVersionResponse :: Int -> GetSubscriptionDefinitionVersionResponse

-- | <i>See:</i> <a>newGetCoreDefinitionVersion</a> smart constructor.
data GetCoreDefinitionVersion
GetCoreDefinitionVersion' :: Text -> Text -> GetCoreDefinitionVersion

-- | Create a value of <a>GetCoreDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:coreDefinitionId:GetCoreDefinitionVersion'</a>,
--   <a>getCoreDefinitionVersion_coreDefinitionId</a> - The ID of the core
--   definition.
--   
--   <a>$sel:coreDefinitionVersionId:GetCoreDefinitionVersion'</a>,
--   <a>getCoreDefinitionVersion_coreDefinitionVersionId</a> - The ID of
--   the core definition version. This value maps to the ''Version''
--   property of the corresponding ''VersionInformation'' object, which is
--   returned by ''ListCoreDefinitionVersions'' requests. If the version is
--   the last one that was associated with a core definition, the value
--   also maps to the ''LatestVersion'' property of the corresponding
--   ''DefinitionInformation'' object.
newGetCoreDefinitionVersion :: Text -> Text -> GetCoreDefinitionVersion

-- | <i>See:</i> <a>newGetCoreDefinitionVersionResponse</a> smart
--   constructor.
data GetCoreDefinitionVersionResponse
GetCoreDefinitionVersionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe CoreDefinitionVersion -> Int -> GetCoreDefinitionVersionResponse

-- | Create a value of <a>GetCoreDefinitionVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_creationTimestamp</a> - The time,
--   in milliseconds since the epoch, when the core definition version was
--   created.
--   
--   <a>$sel:nextToken:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_nextToken</a> - The token for the
--   next set of results, or ''null'' if there are no additional results.
--   
--   <a>$sel:arn:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_arn</a> - The ARN of the core
--   definition version.
--   
--   <a>$sel:id:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_id</a> - The ID of the core
--   definition version.
--   
--   <a>$sel:version:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_version</a> - The version of the
--   core definition version.
--   
--   <a>$sel:definition:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_definition</a> - Information about
--   the core definition version.
--   
--   <a>$sel:httpStatus:GetCoreDefinitionVersionResponse'</a>,
--   <a>getCoreDefinitionVersionResponse_httpStatus</a> - The response's
--   http status code.
newGetCoreDefinitionVersionResponse :: Int -> GetCoreDefinitionVersionResponse

-- | The current status of the bulk deployment.
newtype BulkDeploymentStatus
BulkDeploymentStatus' :: Text -> BulkDeploymentStatus
[fromBulkDeploymentStatus] :: BulkDeploymentStatus -> Text
pattern BulkDeploymentStatus_Completed :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Failed :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Initializing :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Running :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Stopped :: BulkDeploymentStatus
pattern BulkDeploymentStatus_Stopping :: BulkDeploymentStatus
newtype ConfigurationSyncStatus
ConfigurationSyncStatus' :: Text -> ConfigurationSyncStatus
[fromConfigurationSyncStatus] :: ConfigurationSyncStatus -> Text
pattern ConfigurationSyncStatus_InSync :: ConfigurationSyncStatus
pattern ConfigurationSyncStatus_OutOfSync :: ConfigurationSyncStatus

-- | The type of deployment. When used for ''CreateDeployment'', only
--   ''NewDeployment'' and ''Redeployment'' are valid.
newtype DeploymentType
DeploymentType' :: Text -> DeploymentType
[fromDeploymentType] :: DeploymentType -> Text
pattern DeploymentType_ForceResetDeployment :: DeploymentType
pattern DeploymentType_NewDeployment :: DeploymentType
pattern DeploymentType_Redeployment :: DeploymentType
pattern DeploymentType_ResetDeployment :: DeploymentType
newtype EncodingType
EncodingType' :: Text -> EncodingType
[fromEncodingType] :: EncodingType -> Text
pattern EncodingType_Binary :: EncodingType
pattern EncodingType_Json :: EncodingType

-- | Specifies whether the Lambda function runs in a Greengrass container
--   (default) or without containerization. Unless your scenario requires
--   that you run without containerization, we recommend that you run in a
--   Greengrass container. Omit this value to run the Lambda function with
--   the default containerization for the group.
newtype FunctionIsolationMode
FunctionIsolationMode' :: Text -> FunctionIsolationMode
[fromFunctionIsolationMode] :: FunctionIsolationMode -> Text
pattern FunctionIsolationMode_GreengrassContainer :: FunctionIsolationMode
pattern FunctionIsolationMode_NoContainer :: FunctionIsolationMode
newtype LoggerComponent
LoggerComponent' :: Text -> LoggerComponent
[fromLoggerComponent] :: LoggerComponent -> Text
pattern LoggerComponent_GreengrassSystem :: LoggerComponent
pattern LoggerComponent_Lambda :: LoggerComponent
newtype LoggerLevel
LoggerLevel' :: Text -> LoggerLevel
[fromLoggerLevel] :: LoggerLevel -> Text
pattern LoggerLevel_DEBUG :: LoggerLevel
pattern LoggerLevel_ERROR :: LoggerLevel
pattern LoggerLevel_FATAL :: LoggerLevel
pattern LoggerLevel_INFO :: LoggerLevel
pattern LoggerLevel_WARN :: LoggerLevel
newtype LoggerType
LoggerType' :: Text -> LoggerType
[fromLoggerType] :: LoggerType -> Text
pattern LoggerType_AWSCloudWatch :: LoggerType
pattern LoggerType_FileSystem :: LoggerType

-- | The type of permission a function has to access a resource.
newtype Permission
Permission' :: Text -> Permission
[fromPermission] :: Permission -> Text
pattern Permission_Ro :: Permission
pattern Permission_Rw :: Permission

-- | The piece of software on the Greengrass core that will be updated.
newtype SoftwareToUpdate
SoftwareToUpdate' :: Text -> SoftwareToUpdate
[fromSoftwareToUpdate] :: SoftwareToUpdate -> Text
pattern SoftwareToUpdate_Core :: SoftwareToUpdate
pattern SoftwareToUpdate_Ota_agent :: SoftwareToUpdate
newtype Telemetry
Telemetry' :: Text -> Telemetry
[fromTelemetry] :: Telemetry -> Text
pattern Telemetry_Off :: Telemetry
pattern Telemetry_On :: Telemetry

-- | The minimum level of log statements that should be logged by the OTA
--   Agent during an update.
newtype UpdateAgentLogLevel
UpdateAgentLogLevel' :: Text -> UpdateAgentLogLevel
[fromUpdateAgentLogLevel] :: UpdateAgentLogLevel -> Text
pattern UpdateAgentLogLevel_DEBUG :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_ERROR :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_FATAL :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_INFO :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_NONE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_TRACE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_VERBOSE :: UpdateAgentLogLevel
pattern UpdateAgentLogLevel_WARN :: UpdateAgentLogLevel

-- | The architecture of the cores which are the targets of an update.
newtype UpdateTargetsArchitecture
UpdateTargetsArchitecture' :: Text -> UpdateTargetsArchitecture
[fromUpdateTargetsArchitecture] :: UpdateTargetsArchitecture -> Text
pattern UpdateTargetsArchitecture_Aarch64 :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_Armv6l :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_Armv7l :: UpdateTargetsArchitecture
pattern UpdateTargetsArchitecture_X86_64 :: UpdateTargetsArchitecture

-- | The operating system of the cores which are the targets of an update.
newtype UpdateTargetsOperatingSystem
UpdateTargetsOperatingSystem' :: Text -> UpdateTargetsOperatingSystem
[fromUpdateTargetsOperatingSystem] :: UpdateTargetsOperatingSystem -> Text
pattern UpdateTargetsOperatingSystem_Amazon_linux :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Openwrt :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Raspbian :: UpdateTargetsOperatingSystem
pattern UpdateTargetsOperatingSystem_Ubuntu :: UpdateTargetsOperatingSystem

-- | Information about a bulk deployment. You cannot start a new bulk
--   deployment while another one is still running or in a non-terminal
--   state.
--   
--   <i>See:</i> <a>newBulkDeployment</a> smart constructor.
data BulkDeployment
BulkDeployment' :: Maybe Text -> Maybe Text -> Maybe Text -> BulkDeployment

-- | Create a value of <a>BulkDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bulkDeploymentId:BulkDeployment'</a>,
--   <a>bulkDeployment_bulkDeploymentId</a> - The ID of the bulk
--   deployment.
--   
--   <a>$sel:createdAt:BulkDeployment'</a>, <a>bulkDeployment_createdAt</a>
--   - The time, in ISO format, when the deployment was created.
--   
--   <a>$sel:bulkDeploymentArn:BulkDeployment'</a>,
--   <a>bulkDeployment_bulkDeploymentArn</a> - The ARN of the bulk
--   deployment.
newBulkDeployment :: BulkDeployment

-- | Relevant metrics on input records processed during bulk deployment.
--   
--   <i>See:</i> <a>newBulkDeploymentMetrics</a> smart constructor.
data BulkDeploymentMetrics
BulkDeploymentMetrics' :: Maybe Int -> Maybe Int -> Maybe Int -> BulkDeploymentMetrics

-- | Create a value of <a>BulkDeploymentMetrics</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordsProcessed:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_recordsProcessed</a> - The total number of
--   group records from the input file that have been processed so far, or
--   attempted.
--   
--   <a>$sel:retryAttempts:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_retryAttempts</a> - The total number of
--   deployment attempts that returned a retryable error. For example, a
--   retry is triggered if the attempt to deploy a group returns a
--   throttling error. ''StartBulkDeployment'' retries a group deployment
--   up to five times.
--   
--   <a>$sel:invalidInputRecords:BulkDeploymentMetrics'</a>,
--   <a>bulkDeploymentMetrics_invalidInputRecords</a> - The total number of
--   records that returned a non-retryable error. For example, this can
--   occur if a group record from the input file uses an invalid format or
--   specifies a nonexistent group version, or if the execution role
--   doesn't grant permission to deploy a group or group version.
newBulkDeploymentMetrics :: BulkDeploymentMetrics

-- | Information about an individual group deployment in a bulk deployment
--   operation.
--   
--   <i>See:</i> <a>newBulkDeploymentResult</a> smart constructor.
data BulkDeploymentResult
BulkDeploymentResult' :: Maybe Text -> Maybe DeploymentType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ErrorDetail] -> BulkDeploymentResult

-- | Create a value of <a>BulkDeploymentResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentId</a> - The ID of the group
--   deployment.
--   
--   <a>$sel:deploymentType:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentType</a> - The type of the
--   deployment.
--   
--   <a>$sel:createdAt:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_createdAt</a> - The time, in ISO format, when
--   the deployment was created.
--   
--   <a>$sel:deploymentStatus:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentStatus</a> - The current status of
--   the group deployment: ''InProgress'', ''Building'', ''Success'', or
--   ''Failure''.
--   
--   <a>$sel:deploymentArn:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_deploymentArn</a> - The ARN of the group
--   deployment.
--   
--   <a>$sel:errorMessage:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_errorMessage</a> - The error message for a
--   failed deployment
--   
--   <a>$sel:groupArn:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_groupArn</a> - The ARN of the Greengrass
--   group.
--   
--   <a>$sel:errorDetails:BulkDeploymentResult'</a>,
--   <a>bulkDeploymentResult_errorDetails</a> - Details about the error.
newBulkDeploymentResult :: BulkDeploymentResult

-- | Information about a Greengrass core's connectivity.
--   
--   <i>See:</i> <a>newConnectivityInfo</a> smart constructor.
data ConnectivityInfo
ConnectivityInfo' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> ConnectivityInfo

-- | Create a value of <a>ConnectivityInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metadata:ConnectivityInfo'</a>,
--   <a>connectivityInfo_metadata</a> - Metadata for this endpoint.
--   
--   <a>$sel:id:ConnectivityInfo'</a>, <a>connectivityInfo_id</a> - The ID
--   of the connectivity information.
--   
--   <a>$sel:portNumber:ConnectivityInfo'</a>,
--   <a>connectivityInfo_portNumber</a> - The port of the Greengrass core.
--   Usually 8883.
--   
--   <a>$sel:hostAddress:ConnectivityInfo'</a>,
--   <a>connectivityInfo_hostAddress</a> - The endpoint for the Greengrass
--   core. Can be an IP address or DNS.
newConnectivityInfo :: ConnectivityInfo

-- | Information about a connector. Connectors run on the Greengrass core
--   and contain built-in integration with local infrastructure, device
--   protocols, AWS, and other cloud services.
--   
--   <i>See:</i> <a>newConnector</a> smart constructor.
data Connector
Connector' :: Maybe (HashMap Text Text) -> Text -> Text -> Connector

-- | Create a value of <a>Connector</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:Connector'</a>, <a>connector_parameters</a> - The
--   parameters or configuration that the connector uses.
--   
--   <a>$sel:connectorArn:Connector'</a>, <a>connector_connectorArn</a> -
--   The ARN of the connector.
--   
--   <a>$sel:id:Connector'</a>, <a>connector_id</a> - A descriptive or
--   arbitrary ID for the connector. This value must be unique within the
--   connector definition version. Max length is 128 characters with
--   pattern [a-zA-Z0-9:_-]+.
newConnector :: Text -> Text -> Connector

-- | Information about the connector definition version, which is a
--   container for connectors.
--   
--   <i>See:</i> <a>newConnectorDefinitionVersion</a> smart constructor.
data ConnectorDefinitionVersion
ConnectorDefinitionVersion' :: Maybe [Connector] -> ConnectorDefinitionVersion

-- | Create a value of <a>ConnectorDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectors:ConnectorDefinitionVersion'</a>,
--   <a>connectorDefinitionVersion_connectors</a> - A list of references to
--   connectors in this version, with their corresponding configuration
--   settings.
newConnectorDefinitionVersion :: ConnectorDefinitionVersion

-- | Information about a core.
--   
--   <i>See:</i> <a>newCore</a> smart constructor.
data Core
Core' :: Maybe Bool -> Text -> Text -> Text -> Core

-- | Create a value of <a>Core</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:syncShadow:Core'</a>, <a>core_syncShadow</a> - If true, the
--   core's local shadow is automatically synced with the cloud.
--   
--   <a>$sel:thingArn:Core'</a>, <a>core_thingArn</a> - The ARN of the
--   thing which is the core.
--   
--   <a>$sel:id:Core'</a>, <a>core_id</a> - A descriptive or arbitrary ID
--   for the core. This value must be unique within the core definition
--   version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:certificateArn:Core'</a>, <a>core_certificateArn</a> - The ARN
--   of the certificate associated with the core.
newCore :: Text -> Text -> Text -> Core

-- | Information about a core definition version.
--   
--   <i>See:</i> <a>newCoreDefinitionVersion</a> smart constructor.
data CoreDefinitionVersion
CoreDefinitionVersion' :: Maybe [Core] -> CoreDefinitionVersion

-- | Create a value of <a>CoreDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cores:CoreDefinitionVersion'</a>,
--   <a>coreDefinitionVersion_cores</a> - A list of cores in the core
--   definition version.
newCoreDefinitionVersion :: CoreDefinitionVersion

-- | Information about a definition.
--   
--   <i>See:</i> <a>newDefinitionInformation</a> smart constructor.
data DefinitionInformation
DefinitionInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> DefinitionInformation

-- | Create a value of <a>DefinitionInformation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:DefinitionInformation'</a>,
--   <a>definitionInformation_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was created.
--   
--   <a>$sel:latestVersionArn:DefinitionInformation'</a>,
--   <a>definitionInformation_latestVersionArn</a> - The ARN of the latest
--   version associated with the definition.
--   
--   <a>$sel:latestVersion:DefinitionInformation'</a>,
--   <a>definitionInformation_latestVersion</a> - The ID of the latest
--   version associated with the definition.
--   
--   <a>$sel:arn:DefinitionInformation'</a>,
--   <a>definitionInformation_arn</a> - The ARN of the definition.
--   
--   <a>$sel:id:DefinitionInformation'</a>, <a>definitionInformation_id</a>
--   - The ID of the definition.
--   
--   <a>$sel:name:DefinitionInformation'</a>,
--   <a>definitionInformation_name</a> - The name of the definition.
--   
--   <a>$sel:tags:DefinitionInformation'</a>,
--   <a>definitionInformation_tags</a> - Tag(s) attached to the resource
--   arn.
--   
--   <a>$sel:lastUpdatedTimestamp:DefinitionInformation'</a>,
--   <a>definitionInformation_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the definition was last updated.
newDefinitionInformation :: DefinitionInformation

-- | Information about a deployment.
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Text -> Maybe DeploymentType -> Maybe Text -> Maybe Text -> Maybe Text -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Deployment'</a>, <a>deployment_deploymentId</a> -
--   The ID of the deployment.
--   
--   <a>$sel:deploymentType:Deployment'</a>,
--   <a>deployment_deploymentType</a> - The type of the deployment.
--   
--   <a>$sel:createdAt:Deployment'</a>, <a>deployment_createdAt</a> - The
--   time, in milliseconds since the epoch, when the deployment was
--   created.
--   
--   <a>$sel:deploymentArn:Deployment'</a>, <a>deployment_deploymentArn</a>
--   - The ARN of the deployment.
--   
--   <a>$sel:groupArn:Deployment'</a>, <a>deployment_groupArn</a> - The ARN
--   of the group for this deployment.
newDeployment :: Deployment

-- | Information about a device.
--   
--   <i>See:</i> <a>newDevice</a> smart constructor.
data Device
Device' :: Maybe Bool -> Text -> Text -> Text -> Device

-- | Create a value of <a>Device</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:syncShadow:Device'</a>, <a>device_syncShadow</a> - If true,
--   the device's local shadow will be automatically synced with the cloud.
--   
--   <a>$sel:thingArn:Device'</a>, <a>device_thingArn</a> - The thing ARN
--   of the device.
--   
--   <a>$sel:id:Device'</a>, <a>device_id</a> - A descriptive or arbitrary
--   ID for the device. This value must be unique within the device
--   definition version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:certificateArn:Device'</a>, <a>device_certificateArn</a> - The
--   ARN of the certificate associated with the device.
newDevice :: Text -> Text -> Text -> Device

-- | Information about a device definition version.
--   
--   <i>See:</i> <a>newDeviceDefinitionVersion</a> smart constructor.
data DeviceDefinitionVersion
DeviceDefinitionVersion' :: Maybe [Device] -> DeviceDefinitionVersion

-- | Create a value of <a>DeviceDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:devices:DeviceDefinitionVersion'</a>,
--   <a>deviceDefinitionVersion_devices</a> - A list of devices in the
--   definition version.
newDeviceDefinitionVersion :: DeviceDefinitionVersion

-- | Details about the error.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe Text -> Maybe Text -> ErrorDetail

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:detailedErrorMessage:ErrorDetail'</a>,
--   <a>errorDetail_detailedErrorMessage</a> - A detailed error message.
--   
--   <a>$sel:detailedErrorCode:ErrorDetail'</a>,
--   <a>errorDetail_detailedErrorCode</a> - A detailed error code.
newErrorDetail :: ErrorDetail

-- | Information about a Lambda function.
--   
--   <i>See:</i> <a>newFunction</a> smart constructor.
data Function
Function' :: Maybe FunctionConfiguration -> Maybe Text -> Text -> Function

-- | Create a value of <a>Function</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionConfiguration:Function'</a>,
--   <a>function_functionConfiguration</a> - The configuration of the
--   Lambda function.
--   
--   <a>$sel:functionArn:Function'</a>, <a>function_functionArn</a> - The
--   ARN of the Lambda function.
--   
--   <a>$sel:id:Function'</a>, <a>function_id</a> - A descriptive or
--   arbitrary ID for the function. This value must be unique within the
--   function definition version. Max length is 128 characters with pattern
--   ''[a-zA-Z0-9:_-]+''.
newFunction :: Text -> Function

-- | The configuration of the Lambda function.
--   
--   <i>See:</i> <a>newFunctionConfiguration</a> smart constructor.
data FunctionConfiguration
FunctionConfiguration' :: Maybe Int -> Maybe Text -> Maybe Int -> Maybe EncodingType -> Maybe Text -> Maybe Bool -> Maybe FunctionConfigurationEnvironment -> FunctionConfiguration

-- | Create a value of <a>FunctionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:memorySize:FunctionConfiguration'</a>,
--   <a>functionConfiguration_memorySize</a> - The memory size, in KB,
--   which the function requires. This setting is not applicable and should
--   be cleared when you run the Lambda function without containerization.
--   
--   <a>$sel:execArgs:FunctionConfiguration'</a>,
--   <a>functionConfiguration_execArgs</a> - The execution arguments.
--   
--   <a>$sel:timeout:FunctionConfiguration'</a>,
--   <a>functionConfiguration_timeout</a> - The allowed function execution
--   time, after which Lambda should terminate the function. This timeout
--   still applies to pinned Lambda functions for each request.
--   
--   <a>$sel:encodingType:FunctionConfiguration'</a>,
--   <a>functionConfiguration_encodingType</a> - The expected encoding type
--   of the input payload for the function. The default is ''json''.
--   
--   <a>$sel:executable:FunctionConfiguration'</a>,
--   <a>functionConfiguration_executable</a> - The name of the function
--   executable.
--   
--   <a>$sel:pinned:FunctionConfiguration'</a>,
--   <a>functionConfiguration_pinned</a> - True if the function is pinned.
--   Pinned means the function is long-lived and starts when the core
--   starts.
--   
--   <a>$sel:environment:FunctionConfiguration'</a>,
--   <a>functionConfiguration_environment</a> - The environment
--   configuration of the function.
newFunctionConfiguration :: FunctionConfiguration

-- | The environment configuration of the function.
--   
--   <i>See:</i> <a>newFunctionConfigurationEnvironment</a> smart
--   constructor.
data FunctionConfigurationEnvironment
FunctionConfigurationEnvironment' :: Maybe Bool -> Maybe (HashMap Text Text) -> Maybe FunctionExecutionConfig -> Maybe [ResourceAccessPolicy] -> FunctionConfigurationEnvironment

-- | Create a value of <a>FunctionConfigurationEnvironment</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accessSysfs:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_accessSysfs</a> - If true, the
--   Lambda function is allowed to access the host's /sys folder. Use this
--   when the Lambda function needs to read device information from /sys.
--   This setting applies only when you run the Lambda function in a
--   Greengrass container.
--   
--   <a>$sel:variables:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_variables</a> - Environment
--   variables for the Lambda function's configuration.
--   
--   <a>$sel:execution:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_execution</a> - Configuration
--   related to executing the Lambda function
--   
--   <a>$sel:resourceAccessPolicies:FunctionConfigurationEnvironment'</a>,
--   <a>functionConfigurationEnvironment_resourceAccessPolicies</a> - A
--   list of the resources, with their permissions, to which the Lambda
--   function will be granted access. A Lambda function can have at most 10
--   resources. ResourceAccessPolicies apply only when you run the Lambda
--   function in a Greengrass container.
newFunctionConfigurationEnvironment :: FunctionConfigurationEnvironment

-- | The default configuration that applies to all Lambda functions in the
--   group. Individual Lambda functions can override these settings.
--   
--   <i>See:</i> <a>newFunctionDefaultConfig</a> smart constructor.
data FunctionDefaultConfig
FunctionDefaultConfig' :: Maybe FunctionDefaultExecutionConfig -> FunctionDefaultConfig

-- | Create a value of <a>FunctionDefaultConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:execution:FunctionDefaultConfig'</a>,
--   <a>functionDefaultConfig_execution</a> - Undocumented member.
newFunctionDefaultConfig :: FunctionDefaultConfig

-- | Configuration information that specifies how a Lambda function runs.
--   
--   <i>See:</i> <a>newFunctionDefaultExecutionConfig</a> smart
--   constructor.
data FunctionDefaultExecutionConfig
FunctionDefaultExecutionConfig' :: Maybe FunctionIsolationMode -> Maybe FunctionRunAsConfig -> FunctionDefaultExecutionConfig

-- | Create a value of <a>FunctionDefaultExecutionConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isolationMode:FunctionDefaultExecutionConfig'</a>,
--   <a>functionDefaultExecutionConfig_isolationMode</a> - Undocumented
--   member.
--   
--   <a>$sel:runAs:FunctionDefaultExecutionConfig'</a>,
--   <a>functionDefaultExecutionConfig_runAs</a> - Undocumented member.
newFunctionDefaultExecutionConfig :: FunctionDefaultExecutionConfig

-- | Information about a function definition version.
--   
--   <i>See:</i> <a>newFunctionDefinitionVersion</a> smart constructor.
data FunctionDefinitionVersion
FunctionDefinitionVersion' :: Maybe [Function] -> Maybe FunctionDefaultConfig -> FunctionDefinitionVersion

-- | Create a value of <a>FunctionDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functions:FunctionDefinitionVersion'</a>,
--   <a>functionDefinitionVersion_functions</a> - A list of Lambda
--   functions in this function definition version.
--   
--   <a>$sel:defaultConfig:FunctionDefinitionVersion'</a>,
--   <a>functionDefinitionVersion_defaultConfig</a> - The default
--   configuration that applies to all Lambda functions in this function
--   definition version. Individual Lambda functions can override these
--   settings.
newFunctionDefinitionVersion :: FunctionDefinitionVersion

-- | Configuration information that specifies how a Lambda function runs.
--   
--   <i>See:</i> <a>newFunctionExecutionConfig</a> smart constructor.
data FunctionExecutionConfig
FunctionExecutionConfig' :: Maybe FunctionIsolationMode -> Maybe FunctionRunAsConfig -> FunctionExecutionConfig

-- | Create a value of <a>FunctionExecutionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isolationMode:FunctionExecutionConfig'</a>,
--   <a>functionExecutionConfig_isolationMode</a> - Undocumented member.
--   
--   <a>$sel:runAs:FunctionExecutionConfig'</a>,
--   <a>functionExecutionConfig_runAs</a> - Undocumented member.
newFunctionExecutionConfig :: FunctionExecutionConfig

-- | Specifies the user and group whose permissions are used when running
--   the Lambda function. You can specify one or both values to override
--   the default values. We recommend that you avoid running as root unless
--   absolutely necessary to minimize the risk of unintended changes or
--   malicious attacks. To run as root, you must set ''IsolationMode'' to
--   ''NoContainer'' and update config.json in ''greengrass-root/config''
--   to set ''allowFunctionsToRunAsRoot'' to ''yes''.
--   
--   <i>See:</i> <a>newFunctionRunAsConfig</a> smart constructor.
data FunctionRunAsConfig
FunctionRunAsConfig' :: Maybe Int -> Maybe Int -> FunctionRunAsConfig

-- | Create a value of <a>FunctionRunAsConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:gid:FunctionRunAsConfig'</a>, <a>functionRunAsConfig_gid</a> -
--   The group ID whose permissions are used to run a Lambda function.
--   
--   <a>$sel:uid:FunctionRunAsConfig'</a>, <a>functionRunAsConfig_uid</a> -
--   The user ID whose permissions are used to run a Lambda function.
newFunctionRunAsConfig :: FunctionRunAsConfig

-- | Information about a logger
--   
--   <i>See:</i> <a>newGreengrassLogger</a> smart constructor.
data GreengrassLogger
GreengrassLogger' :: Maybe Int -> LoggerType -> LoggerLevel -> Text -> LoggerComponent -> GreengrassLogger

-- | Create a value of <a>GreengrassLogger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:space:GreengrassLogger'</a>, <a>greengrassLogger_space</a> -
--   The amount of file space, in KB, to use if the local file system is
--   used for logging purposes.
--   
--   <a>$sel:type':GreengrassLogger'</a>, <a>greengrassLogger_type</a> -
--   The type of log output which will be used.
--   
--   <a>$sel:level:GreengrassLogger'</a>, <a>greengrassLogger_level</a> -
--   The level of the logs.
--   
--   <a>$sel:id:GreengrassLogger'</a>, <a>greengrassLogger_id</a> - A
--   descriptive or arbitrary ID for the logger. This value must be unique
--   within the logger definition version. Max length is 128 characters
--   with pattern ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:component:GreengrassLogger'</a>,
--   <a>greengrassLogger_component</a> - The component that will be subject
--   to logging.
newGreengrassLogger :: LoggerType -> LoggerLevel -> Text -> LoggerComponent -> GreengrassLogger

-- | Information about a certificate authority for a group.
--   
--   <i>See:</i> <a>newGroupCertificateAuthorityProperties</a> smart
--   constructor.
data GroupCertificateAuthorityProperties
GroupCertificateAuthorityProperties' :: Maybe Text -> Maybe Text -> GroupCertificateAuthorityProperties

-- | Create a value of <a>GroupCertificateAuthorityProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:groupCertificateAuthorityArn:GroupCertificateAuthorityProperties'</a>,
--   <a>groupCertificateAuthorityProperties_groupCertificateAuthorityArn</a>
--   - The ARN of the certificate authority for the group.
--   
--   
--   <a>$sel:groupCertificateAuthorityId:GroupCertificateAuthorityProperties'</a>,
--   <a>groupCertificateAuthorityProperties_groupCertificateAuthorityId</a>
--   - The ID of the certificate authority for the group.
newGroupCertificateAuthorityProperties :: GroupCertificateAuthorityProperties

-- | Information about a group.
--   
--   <i>See:</i> <a>newGroupInformation</a> smart constructor.
data GroupInformation
GroupInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GroupInformation

-- | Create a value of <a>GroupInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:GroupInformation'</a>,
--   <a>groupInformation_creationTimestamp</a> - The time, in milliseconds
--   since the epoch, when the group was created.
--   
--   <a>$sel:latestVersionArn:GroupInformation'</a>,
--   <a>groupInformation_latestVersionArn</a> - The ARN of the latest
--   version associated with the group.
--   
--   <a>$sel:latestVersion:GroupInformation'</a>,
--   <a>groupInformation_latestVersion</a> - The ID of the latest version
--   associated with the group.
--   
--   <a>$sel:arn:GroupInformation'</a>, <a>groupInformation_arn</a> - The
--   ARN of the group.
--   
--   <a>$sel:id:GroupInformation'</a>, <a>groupInformation_id</a> - The ID
--   of the group.
--   
--   <a>$sel:name:GroupInformation'</a>, <a>groupInformation_name</a> - The
--   name of the group.
--   
--   <a>$sel:lastUpdatedTimestamp:GroupInformation'</a>,
--   <a>groupInformation_lastUpdatedTimestamp</a> - The time, in
--   milliseconds since the epoch, when the group was last updated.
newGroupInformation :: GroupInformation

-- | Group owner related settings for local resources.
--   
--   <i>See:</i> <a>newGroupOwnerSetting</a> smart constructor.
data GroupOwnerSetting
GroupOwnerSetting' :: Maybe Text -> Maybe Bool -> GroupOwnerSetting

-- | Create a value of <a>GroupOwnerSetting</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupOwner:GroupOwnerSetting'</a>,
--   <a>groupOwnerSetting_groupOwner</a> - The name of the Linux OS group
--   whose privileges will be added to the Lambda process. This field is
--   optional.
--   
--   <a>$sel:autoAddGroupOwner:GroupOwnerSetting'</a>,
--   <a>groupOwnerSetting_autoAddGroupOwner</a> - If true, AWS IoT
--   Greengrass automatically adds the specified Linux OS group owner of
--   the resource to the Lambda process privileges. Thus the Lambda process
--   will have the file access permissions of the added Linux group.
newGroupOwnerSetting :: GroupOwnerSetting

-- | Information about a group version.
--   
--   <i>See:</i> <a>newGroupVersion</a> smart constructor.
data GroupVersion
GroupVersion' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GroupVersion

-- | Create a value of <a>GroupVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptionDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_subscriptionDefinitionVersionArn</a> - The ARN of the
--   subscription definition version for this group.
--   
--   <a>$sel:coreDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_coreDefinitionVersionArn</a> - The ARN of the core
--   definition version for this group.
--   
--   <a>$sel:connectorDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_connectorDefinitionVersionArn</a> - The ARN of the
--   connector definition version for this group.
--   
--   <a>$sel:loggerDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_loggerDefinitionVersionArn</a> - The ARN of the logger
--   definition version for this group.
--   
--   <a>$sel:resourceDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_resourceDefinitionVersionArn</a> - The ARN of the
--   resource definition version for this group.
--   
--   <a>$sel:functionDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_functionDefinitionVersionArn</a> - The ARN of the
--   function definition version for this group.
--   
--   <a>$sel:deviceDefinitionVersionArn:GroupVersion'</a>,
--   <a>groupVersion_deviceDefinitionVersionArn</a> - The ARN of the device
--   definition version for this group.
newGroupVersion :: GroupVersion

-- | Attributes that define a local device resource.
--   
--   <i>See:</i> <a>newLocalDeviceResourceData</a> smart constructor.
data LocalDeviceResourceData
LocalDeviceResourceData' :: Maybe Text -> Maybe GroupOwnerSetting -> LocalDeviceResourceData

-- | Create a value of <a>LocalDeviceResourceData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourcePath:LocalDeviceResourceData'</a>,
--   <a>localDeviceResourceData_sourcePath</a> - The local absolute path of
--   the device resource. The source path for a device resource can refer
--   only to a character device or block device under ''/dev''.
--   
--   <a>$sel:groupOwnerSetting:LocalDeviceResourceData'</a>,
--   <a>localDeviceResourceData_groupOwnerSetting</a> - Group/owner related
--   settings for local resources.
newLocalDeviceResourceData :: LocalDeviceResourceData

-- | Attributes that define a local volume resource.
--   
--   <i>See:</i> <a>newLocalVolumeResourceData</a> smart constructor.
data LocalVolumeResourceData
LocalVolumeResourceData' :: Maybe Text -> Maybe Text -> Maybe GroupOwnerSetting -> LocalVolumeResourceData

-- | Create a value of <a>LocalVolumeResourceData</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationPath:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_destinationPath</a> - The absolute local
--   path of the resource inside the Lambda environment.
--   
--   <a>$sel:sourcePath:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_sourcePath</a> - The local absolute path of
--   the volume resource on the host. The source path for a volume resource
--   type cannot start with ''/sys''.
--   
--   <a>$sel:groupOwnerSetting:LocalVolumeResourceData'</a>,
--   <a>localVolumeResourceData_groupOwnerSetting</a> - Allows you to
--   configure additional group privileges for the Lambda process. This
--   field is optional.
newLocalVolumeResourceData :: LocalVolumeResourceData

-- | Information about a logger definition version.
--   
--   <i>See:</i> <a>newLoggerDefinitionVersion</a> smart constructor.
data LoggerDefinitionVersion
LoggerDefinitionVersion' :: Maybe [GreengrassLogger] -> LoggerDefinitionVersion

-- | Create a value of <a>LoggerDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggers:LoggerDefinitionVersion'</a>,
--   <a>loggerDefinitionVersion_loggers</a> - A list of loggers.
newLoggerDefinitionVersion :: LoggerDefinitionVersion

-- | Information about a resource.
--   
--   <i>See:</i> <a>newResource</a> smart constructor.
data Resource
Resource' :: ResourceDataContainer -> Text -> Text -> Resource

-- | Create a value of <a>Resource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceDataContainer:Resource'</a>,
--   <a>resource_resourceDataContainer</a> - A container of data for all
--   resource types.
--   
--   <a>$sel:id:Resource'</a>, <a>resource_id</a> - The resource ID, used
--   to refer to a resource in the Lambda function configuration. Max
--   length is 128 characters with pattern ''[a-zA-Z0-9:_-]+''. This must
--   be unique within a Greengrass group.
--   
--   <a>$sel:name:Resource'</a>, <a>resource_name</a> - The descriptive
--   resource name, which is displayed on the AWS IoT Greengrass console.
--   Max length 128 characters with pattern ''[a-zA-Z0-9:_-]+''. This must
--   be unique within a Greengrass group.
newResource :: ResourceDataContainer -> Text -> Text -> Resource

-- | A policy used by the function to access a resource.
--   
--   <i>See:</i> <a>newResourceAccessPolicy</a> smart constructor.
data ResourceAccessPolicy
ResourceAccessPolicy' :: Maybe Permission -> Text -> ResourceAccessPolicy

-- | Create a value of <a>ResourceAccessPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:permission:ResourceAccessPolicy'</a>,
--   <a>resourceAccessPolicy_permission</a> - The permissions that the
--   Lambda function has to the resource. Can be one of ''rw'' (read/write)
--   or ''ro'' (read-only).
--   
--   <a>$sel:resourceId:ResourceAccessPolicy'</a>,
--   <a>resourceAccessPolicy_resourceId</a> - The ID of the resource. (This
--   ID is assigned to the resource when you create the resource
--   definiton.)
newResourceAccessPolicy :: Text -> ResourceAccessPolicy

-- | A container for resource data. The container takes only one of the
--   following supported resource data types: ''LocalDeviceResourceData'',
--   ''LocalVolumeResourceData'',
--   ''SageMakerMachineLearningModelResourceData'',
--   ''S3MachineLearningModelResourceData'',
--   ''SecretsManagerSecretResourceData''.
--   
--   <i>See:</i> <a>newResourceDataContainer</a> smart constructor.
data ResourceDataContainer
ResourceDataContainer' :: Maybe LocalVolumeResourceData -> Maybe LocalDeviceResourceData -> Maybe S3MachineLearningModelResourceData -> Maybe SageMakerMachineLearningModelResourceData -> Maybe SecretsManagerSecretResourceData -> ResourceDataContainer

-- | Create a value of <a>ResourceDataContainer</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:localVolumeResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_localVolumeResourceData</a> - Attributes that
--   define the local volume resource.
--   
--   <a>$sel:localDeviceResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_localDeviceResourceData</a> - Attributes that
--   define the local device resource.
--   
--   <a>$sel:s3MachineLearningModelResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_s3MachineLearningModelResourceData</a> -
--   Attributes that define an Amazon S3 machine learning resource.
--   
--   
--   <a>$sel:sageMakerMachineLearningModelResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_sageMakerMachineLearningModelResourceData</a>
--   - Attributes that define an Amazon SageMaker machine learning
--   resource.
--   
--   <a>$sel:secretsManagerSecretResourceData:ResourceDataContainer'</a>,
--   <a>resourceDataContainer_secretsManagerSecretResourceData</a> -
--   Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager.
newResourceDataContainer :: ResourceDataContainer

-- | Information about a resource definition version.
--   
--   <i>See:</i> <a>newResourceDefinitionVersion</a> smart constructor.
data ResourceDefinitionVersion
ResourceDefinitionVersion' :: Maybe [Resource] -> ResourceDefinitionVersion

-- | Create a value of <a>ResourceDefinitionVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:ResourceDefinitionVersion'</a>,
--   <a>resourceDefinitionVersion_resources</a> - A list of resources.
newResourceDefinitionVersion :: ResourceDefinitionVersion

-- | The owner setting for downloaded machine learning resources.
--   
--   <i>See:</i> <a>newResourceDownloadOwnerSetting</a> smart constructor.
data ResourceDownloadOwnerSetting
ResourceDownloadOwnerSetting' :: Text -> Permission -> ResourceDownloadOwnerSetting

-- | Create a value of <a>ResourceDownloadOwnerSetting</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupOwner:ResourceDownloadOwnerSetting'</a>,
--   <a>resourceDownloadOwnerSetting_groupOwner</a> - The group owner of
--   the resource. This is the name of an existing Linux OS group on the
--   system or a GID. The group's permissions are added to the Lambda
--   process.
--   
--   <a>$sel:groupPermission:ResourceDownloadOwnerSetting'</a>,
--   <a>resourceDownloadOwnerSetting_groupPermission</a> - The permissions
--   that the group owner has to the resource. Valid values are ''rw''
--   (read/write) or ''ro'' (read-only).
newResourceDownloadOwnerSetting :: Text -> Permission -> ResourceDownloadOwnerSetting

-- | Runtime configuration for a thing.
--   
--   <i>See:</i> <a>newRuntimeConfiguration</a> smart constructor.
data RuntimeConfiguration
RuntimeConfiguration' :: Maybe TelemetryConfiguration -> RuntimeConfiguration

-- | Create a value of <a>RuntimeConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:telemetryConfiguration:RuntimeConfiguration'</a>,
--   <a>runtimeConfiguration_telemetryConfiguration</a> - Configuration for
--   telemetry service.
newRuntimeConfiguration :: RuntimeConfiguration

-- | Attributes that define an Amazon S3 machine learning resource.
--   
--   <i>See:</i> <a>newS3MachineLearningModelResourceData</a> smart
--   constructor.
data S3MachineLearningModelResourceData
S3MachineLearningModelResourceData' :: Maybe ResourceDownloadOwnerSetting -> Maybe Text -> Maybe Text -> S3MachineLearningModelResourceData

-- | Create a value of <a>S3MachineLearningModelResourceData</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerSetting:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_ownerSetting</a> - Undocumented
--   member.
--   
--   <a>$sel:destinationPath:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_destinationPath</a> - The
--   absolute local path of the resource inside the Lambda environment.
--   
--   <a>$sel:s3Uri:S3MachineLearningModelResourceData'</a>,
--   <a>s3MachineLearningModelResourceData_s3Uri</a> - The URI of the
--   source model in an S3 bucket. The model package must be in tar.gz or
--   .zip format.
newS3MachineLearningModelResourceData :: S3MachineLearningModelResourceData

-- | Attributes that define an Amazon SageMaker machine learning resource.
--   
--   <i>See:</i> <a>newSageMakerMachineLearningModelResourceData</a> smart
--   constructor.
data SageMakerMachineLearningModelResourceData
SageMakerMachineLearningModelResourceData' :: Maybe ResourceDownloadOwnerSetting -> Maybe Text -> Maybe Text -> SageMakerMachineLearningModelResourceData

-- | Create a value of <a>SageMakerMachineLearningModelResourceData</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerSetting:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_ownerSetting</a> -
--   Undocumented member.
--   
--   
--   <a>$sel:destinationPath:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_destinationPath</a> - The
--   absolute local path of the resource inside the Lambda environment.
--   
--   
--   <a>$sel:sageMakerJobArn:SageMakerMachineLearningModelResourceData'</a>,
--   <a>sageMakerMachineLearningModelResourceData_sageMakerJobArn</a> - The
--   ARN of the Amazon SageMaker training job that represents the source
--   model.
newSageMakerMachineLearningModelResourceData :: SageMakerMachineLearningModelResourceData

-- | Attributes that define a secret resource, which references a secret
--   from AWS Secrets Manager. AWS IoT Greengrass stores a local, encrypted
--   copy of the secret on the Greengrass core, where it can be securely
--   accessed by connectors and Lambda functions.
--   
--   <i>See:</i> <a>newSecretsManagerSecretResourceData</a> smart
--   constructor.
data SecretsManagerSecretResourceData
SecretsManagerSecretResourceData' :: Maybe Text -> Maybe [Text] -> SecretsManagerSecretResourceData

-- | Create a value of <a>SecretsManagerSecretResourceData</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:SecretsManagerSecretResourceData'</a>,
--   <a>secretsManagerSecretResourceData_arn</a> - The ARN of the Secrets
--   Manager secret to make available on the core. The value of the
--   secret's latest version (represented by the ''AWSCURRENT'' staging
--   label) is included by default.
--   
--   
--   <a>$sel:additionalStagingLabelsToDownload:SecretsManagerSecretResourceData'</a>,
--   <a>secretsManagerSecretResourceData_additionalStagingLabelsToDownload</a>
--   - Optional. The staging labels whose values you want to make available
--   on the core, in addition to ''AWSCURRENT''.
newSecretsManagerSecretResourceData :: SecretsManagerSecretResourceData

-- | Information about a subscription.
--   
--   <i>See:</i> <a>newSubscription</a> smart constructor.
data Subscription
Subscription' :: Text -> Text -> Text -> Text -> Subscription

-- | Create a value of <a>Subscription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:target:Subscription'</a>, <a>subscription_target</a> - Where
--   the message is sent to. Can be a thing ARN, a Lambda function ARN, a
--   connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
--   
--   <a>$sel:id:Subscription'</a>, <a>subscription_id</a> - A descriptive
--   or arbitrary ID for the subscription. This value must be unique within
--   the subscription definition version. Max length is 128 characters with
--   pattern ''[a-zA-Z0-9:_-]+''.
--   
--   <a>$sel:subject:Subscription'</a>, <a>subscription_subject</a> - The
--   MQTT topic used to route the message.
--   
--   <a>$sel:source:Subscription'</a>, <a>subscription_source</a> - The
--   source of the subscription. Can be a thing ARN, a Lambda function ARN,
--   a connector ARN, 'cloud' (which represents the AWS IoT cloud), or
--   'GGShadowService'.
newSubscription :: Text -> Text -> Text -> Text -> Subscription

-- | Information about a subscription definition version.
--   
--   <i>See:</i> <a>newSubscriptionDefinitionVersion</a> smart constructor.
data SubscriptionDefinitionVersion
SubscriptionDefinitionVersion' :: Maybe [Subscription] -> SubscriptionDefinitionVersion

-- | Create a value of <a>SubscriptionDefinitionVersion</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subscriptions:SubscriptionDefinitionVersion'</a>,
--   <a>subscriptionDefinitionVersion_subscriptions</a> - A list of
--   subscriptions.
newSubscriptionDefinitionVersion :: SubscriptionDefinitionVersion

-- | Configuration settings for running telemetry.
--   
--   <i>See:</i> <a>newTelemetryConfiguration</a> smart constructor.
data TelemetryConfiguration
TelemetryConfiguration' :: Maybe ConfigurationSyncStatus -> Telemetry -> TelemetryConfiguration

-- | Create a value of <a>TelemetryConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationSyncStatus:TelemetryConfiguration'</a>,
--   <a>telemetryConfiguration_configurationSyncStatus</a> -
--   Synchronization status of the device reported configuration with the
--   desired configuration.
--   
--   <a>$sel:telemetry:TelemetryConfiguration'</a>,
--   <a>telemetryConfiguration_telemetry</a> - Configure telemetry to be on
--   or off.
newTelemetryConfiguration :: Telemetry -> TelemetryConfiguration

-- | Configuration settings for running telemetry.
--   
--   <i>See:</i> <a>newTelemetryConfigurationUpdate</a> smart constructor.
data TelemetryConfigurationUpdate
TelemetryConfigurationUpdate' :: Telemetry -> TelemetryConfigurationUpdate

-- | Create a value of <a>TelemetryConfigurationUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:telemetry:TelemetryConfigurationUpdate'</a>,
--   <a>telemetryConfigurationUpdate_telemetry</a> - Configure telemetry to
--   be on or off.
newTelemetryConfigurationUpdate :: Telemetry -> TelemetryConfigurationUpdate

-- | Information about a version.
--   
--   <i>See:</i> <a>newVersionInformation</a> smart constructor.
data VersionInformation
VersionInformation' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> VersionInformation

-- | Create a value of <a>VersionInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTimestamp:VersionInformation'</a>,
--   <a>versionInformation_creationTimestamp</a> - The time, in
--   milliseconds since the epoch, when the version was created.
--   
--   <a>$sel:arn:VersionInformation'</a>, <a>versionInformation_arn</a> -
--   The ARN of the version.
--   
--   <a>$sel:id:VersionInformation'</a>, <a>versionInformation_id</a> - The
--   ID of the parent definition that the version is associated with.
--   
--   <a>$sel:version:VersionInformation'</a>,
--   <a>versionInformation_version</a> - The ID of the version.
newVersionInformation :: VersionInformation
