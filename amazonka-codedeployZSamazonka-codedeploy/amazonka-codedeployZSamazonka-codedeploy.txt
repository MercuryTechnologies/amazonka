-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-codedeployZSamazonka-codedeploy
@version 1.6.1


module Network.AWS.CodeDeploy.Types.Alarm

-- | Information about an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Alarm

-- | The name of the alarm. Maximum length is 255 characters. Each alarm
--   name can be used only once in a list of alarms.
[$sel:name:Alarm'] :: Alarm -> Maybe Text

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Alarm'</a>, <a>alarm_name</a> - The name of the alarm.
--   Maximum length is 255 characters. Each alarm name can be used only
--   once in a list of alarms.
newAlarm :: Alarm

-- | The name of the alarm. Maximum length is 255 characters. Each alarm
--   name can be used only once in a list of alarms.
alarm_name :: Lens' Alarm (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.Alarm.Alarm
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.Alarm.Alarm
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.Alarm.Alarm
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.Alarm.Alarm
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.Alarm.Alarm
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.Alarm.Alarm
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.Alarm.Alarm
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.Alarm.Alarm


module Network.AWS.CodeDeploy.Types.AlarmConfiguration

-- | Information about alarms associated with the deployment group.
--   
--   <i>See:</i> <a>newAlarmConfiguration</a> smart constructor.
data AlarmConfiguration
AlarmConfiguration' :: Maybe Bool -> Maybe Bool -> Maybe [Alarm] -> AlarmConfiguration

-- | Indicates whether a deployment should continue if information about
--   the current state of alarms cannot be retrieved from Amazon
--   CloudWatch. The default value is false.
--   
--   <ul>
--   <li><tt>true</tt>: The deployment proceeds even if alarm status
--   information can't be retrieved from Amazon CloudWatch.</li>
--   <li><tt>false</tt>: The deployment stops if alarm status information
--   can't be retrieved from Amazon CloudWatch.</li>
--   </ul>
[$sel:ignorePollAlarmFailure:AlarmConfiguration'] :: AlarmConfiguration -> Maybe Bool

-- | Indicates whether the alarm configuration is enabled.
[$sel:enabled:AlarmConfiguration'] :: AlarmConfiguration -> Maybe Bool

-- | A list of alarms configured for the deployment group. A maximum of 10
--   alarms can be added to a deployment group.
[$sel:alarms:AlarmConfiguration'] :: AlarmConfiguration -> Maybe [Alarm]

-- | Create a value of <a>AlarmConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ignorePollAlarmFailure:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_ignorePollAlarmFailure</a> - Indicates whether a
--   deployment should continue if information about the current state of
--   alarms cannot be retrieved from Amazon CloudWatch. The default value
--   is false.
--   
--   <ul>
--   <li><tt>true</tt>: The deployment proceeds even if alarm status
--   information can't be retrieved from Amazon CloudWatch.</li>
--   <li><tt>false</tt>: The deployment stops if alarm status information
--   can't be retrieved from Amazon CloudWatch.</li>
--   </ul>
--   
--   <a>$sel:enabled:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_enabled</a> - Indicates whether the alarm
--   configuration is enabled.
--   
--   <a>$sel:alarms:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_alarms</a> - A list of alarms configured for the
--   deployment group. A maximum of 10 alarms can be added to a deployment
--   group.
newAlarmConfiguration :: AlarmConfiguration

-- | Indicates whether a deployment should continue if information about
--   the current state of alarms cannot be retrieved from Amazon
--   CloudWatch. The default value is false.
--   
--   <ul>
--   <li><tt>true</tt>: The deployment proceeds even if alarm status
--   information can't be retrieved from Amazon CloudWatch.</li>
--   <li><tt>false</tt>: The deployment stops if alarm status information
--   can't be retrieved from Amazon CloudWatch.</li>
--   </ul>
alarmConfiguration_ignorePollAlarmFailure :: Lens' AlarmConfiguration (Maybe Bool)

-- | Indicates whether the alarm configuration is enabled.
alarmConfiguration_enabled :: Lens' AlarmConfiguration (Maybe Bool)

-- | A list of alarms configured for the deployment group. A maximum of 10
--   alarms can be added to a deployment group.
alarmConfiguration_alarms :: Lens' AlarmConfiguration (Maybe [Alarm])
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.AlarmConfiguration.AlarmConfiguration
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.AlarmConfiguration.AlarmConfiguration
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.AlarmConfiguration.AlarmConfiguration
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.AlarmConfiguration.AlarmConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.AlarmConfiguration.AlarmConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.AlarmConfiguration.AlarmConfiguration
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.AlarmConfiguration.AlarmConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.AlarmConfiguration.AlarmConfiguration


module Network.AWS.CodeDeploy.Types.AppSpecContent

-- | A revision for an AWS Lambda or Amazon ECS deployment that is a
--   YAML-formatted or JSON-formatted string. For AWS Lambda and Amazon ECS
--   deployments, the revision is the same as the AppSpec file. This method
--   replaces the deprecated <tt>RawString</tt> data type.
--   
--   <i>See:</i> <a>newAppSpecContent</a> smart constructor.
data AppSpecContent
AppSpecContent' :: Maybe Text -> Maybe Text -> AppSpecContent

-- | The YAML-formatted or JSON-formatted revision string.
--   
--   For an AWS Lambda deployment, the content includes a Lambda function
--   name, the alias for its original version, and the alias for its
--   replacement version. The deployment shifts traffic from the original
--   version of the Lambda function to the replacement version.
--   
--   For an Amazon ECS deployment, the content includes the task name,
--   information about the load balancer that serves traffic to the
--   container, and more.
--   
--   For both types of deployments, the content can specify Lambda
--   functions that run at specified hooks, such as <tt>BeforeInstall</tt>,
--   during a deployment.
[$sel:content:AppSpecContent'] :: AppSpecContent -> Maybe Text

-- | The SHA256 hash value of the revision content.
[$sel:sha256:AppSpecContent'] :: AppSpecContent -> Maybe Text

-- | Create a value of <a>AppSpecContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:AppSpecContent'</a>, <a>appSpecContent_content</a> -
--   The YAML-formatted or JSON-formatted revision string.
--   
--   For an AWS Lambda deployment, the content includes a Lambda function
--   name, the alias for its original version, and the alias for its
--   replacement version. The deployment shifts traffic from the original
--   version of the Lambda function to the replacement version.
--   
--   For an Amazon ECS deployment, the content includes the task name,
--   information about the load balancer that serves traffic to the
--   container, and more.
--   
--   For both types of deployments, the content can specify Lambda
--   functions that run at specified hooks, such as <tt>BeforeInstall</tt>,
--   during a deployment.
--   
--   <a>$sel:sha256:AppSpecContent'</a>, <a>appSpecContent_sha256</a> - The
--   SHA256 hash value of the revision content.
newAppSpecContent :: AppSpecContent

-- | The YAML-formatted or JSON-formatted revision string.
--   
--   For an AWS Lambda deployment, the content includes a Lambda function
--   name, the alias for its original version, and the alias for its
--   replacement version. The deployment shifts traffic from the original
--   version of the Lambda function to the replacement version.
--   
--   For an Amazon ECS deployment, the content includes the task name,
--   information about the load balancer that serves traffic to the
--   container, and more.
--   
--   For both types of deployments, the content can specify Lambda
--   functions that run at specified hooks, such as <tt>BeforeInstall</tt>,
--   during a deployment.
appSpecContent_content :: Lens' AppSpecContent (Maybe Text)

-- | The SHA256 hash value of the revision content.
appSpecContent_sha256 :: Lens' AppSpecContent (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.AppSpecContent.AppSpecContent
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.AppSpecContent.AppSpecContent
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.AppSpecContent.AppSpecContent
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.AppSpecContent.AppSpecContent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.AppSpecContent.AppSpecContent
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.AppSpecContent.AppSpecContent
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.AppSpecContent.AppSpecContent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.AppSpecContent.AppSpecContent


module Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy
newtype ApplicationRevisionSortBy
ApplicationRevisionSortBy' :: Text -> ApplicationRevisionSortBy
[fromApplicationRevisionSortBy] :: ApplicationRevisionSortBy -> Text
pattern ApplicationRevisionSortBy_FirstUsedTime :: ApplicationRevisionSortBy
pattern ApplicationRevisionSortBy_LastUsedTime :: ApplicationRevisionSortBy
pattern ApplicationRevisionSortBy_RegisterTime :: ApplicationRevisionSortBy
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ApplicationRevisionSortBy.ApplicationRevisionSortBy


module Network.AWS.CodeDeploy.Types.AutoRollbackEvent
newtype AutoRollbackEvent
AutoRollbackEvent' :: Text -> AutoRollbackEvent
[fromAutoRollbackEvent] :: AutoRollbackEvent -> Text
pattern AutoRollbackEvent_DEPLOYMENT_FAILURE :: AutoRollbackEvent
pattern AutoRollbackEvent_DEPLOYMENT_STOP_ON_ALARM :: AutoRollbackEvent
pattern AutoRollbackEvent_DEPLOYMENT_STOP_ON_REQUEST :: AutoRollbackEvent
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.AutoRollbackEvent.AutoRollbackEvent


module Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration

-- | Information about a configuration for automatically rolling back to a
--   previous version of an application revision when a deployment is not
--   completed successfully.
--   
--   <i>See:</i> <a>newAutoRollbackConfiguration</a> smart constructor.
data AutoRollbackConfiguration
AutoRollbackConfiguration' :: Maybe Bool -> Maybe [AutoRollbackEvent] -> AutoRollbackConfiguration

-- | Indicates whether a defined automatic rollback configuration is
--   currently enabled.
[$sel:enabled:AutoRollbackConfiguration'] :: AutoRollbackConfiguration -> Maybe Bool

-- | The event type or types that trigger a rollback.
[$sel:events:AutoRollbackConfiguration'] :: AutoRollbackConfiguration -> Maybe [AutoRollbackEvent]

-- | Create a value of <a>AutoRollbackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AutoRollbackConfiguration'</a>,
--   <a>autoRollbackConfiguration_enabled</a> - Indicates whether a defined
--   automatic rollback configuration is currently enabled.
--   
--   <a>$sel:events:AutoRollbackConfiguration'</a>,
--   <a>autoRollbackConfiguration_events</a> - The event type or types that
--   trigger a rollback.
newAutoRollbackConfiguration :: AutoRollbackConfiguration

-- | Indicates whether a defined automatic rollback configuration is
--   currently enabled.
autoRollbackConfiguration_enabled :: Lens' AutoRollbackConfiguration (Maybe Bool)

-- | The event type or types that trigger a rollback.
autoRollbackConfiguration_events :: Lens' AutoRollbackConfiguration (Maybe [AutoRollbackEvent])
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration.AutoRollbackConfiguration
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration.AutoRollbackConfiguration
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration.AutoRollbackConfiguration
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration.AutoRollbackConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration.AutoRollbackConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration.AutoRollbackConfiguration
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration.AutoRollbackConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.AutoRollbackConfiguration.AutoRollbackConfiguration


module Network.AWS.CodeDeploy.Types.AutoScalingGroup

-- | Information about an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> Maybe Text -> AutoScalingGroup

-- | An Auto Scaling lifecycle event hook name.
[$sel:hook:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The Auto Scaling group name.
[$sel:name:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hook:AutoScalingGroup'</a>, <a>autoScalingGroup_hook</a> - An
--   Auto Scaling lifecycle event hook name.
--   
--   <a>$sel:name:AutoScalingGroup'</a>, <a>autoScalingGroup_name</a> - The
--   Auto Scaling group name.
newAutoScalingGroup :: AutoScalingGroup

-- | An Auto Scaling lifecycle event hook name.
autoScalingGroup_hook :: Lens' AutoScalingGroup (Maybe Text)

-- | The Auto Scaling group name.
autoScalingGroup_name :: Lens' AutoScalingGroup (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.AutoScalingGroup.AutoScalingGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.AutoScalingGroup.AutoScalingGroup
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.AutoScalingGroup.AutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.AutoScalingGroup.AutoScalingGroup


module Network.AWS.CodeDeploy.Types.BundleType
newtype BundleType
BundleType' :: Text -> BundleType
[fromBundleType] :: BundleType -> Text
pattern BundleType_JSON :: BundleType
pattern BundleType_Tar :: BundleType
pattern BundleType_Tgz :: BundleType
pattern BundleType_YAML :: BundleType
pattern BundleType_Zip :: BundleType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.BundleType.BundleType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.BundleType.BundleType


module Network.AWS.CodeDeploy.Types.ComputePlatform
newtype ComputePlatform
ComputePlatform' :: Text -> ComputePlatform
[fromComputePlatform] :: ComputePlatform -> Text
pattern ComputePlatform_ECS :: ComputePlatform
pattern ComputePlatform_Lambda :: ComputePlatform
pattern ComputePlatform_Server :: ComputePlatform
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ComputePlatform.ComputePlatform


module Network.AWS.CodeDeploy.Types.ApplicationInfo

-- | Information about an application.
--   
--   <i>See:</i> <a>newApplicationInfo</a> smart constructor.
data ApplicationInfo
ApplicationInfo' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ComputePlatform -> ApplicationInfo

-- | True if the user has authenticated with GitHub for the specified
--   application. Otherwise, false.
[$sel:linkedToGitHub:ApplicationInfo'] :: ApplicationInfo -> Maybe Bool

-- | The application ID.
[$sel:applicationId:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | The name for a connection to a GitHub account.
[$sel:gitHubAccountName:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | The time at which the application was created.
[$sel:createTime:ApplicationInfo'] :: ApplicationInfo -> Maybe POSIX

-- | The application name.
[$sel:applicationName:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | The destination platform type for deployment of the application
--   (<tt>Lambda</tt> or <tt>Server</tt>).
[$sel:computePlatform:ApplicationInfo'] :: ApplicationInfo -> Maybe ComputePlatform

-- | Create a value of <a>ApplicationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedToGitHub:ApplicationInfo'</a>,
--   <a>applicationInfo_linkedToGitHub</a> - True if the user has
--   authenticated with GitHub for the specified application. Otherwise,
--   false.
--   
--   <a>$sel:applicationId:ApplicationInfo'</a>,
--   <a>applicationInfo_applicationId</a> - The application ID.
--   
--   <a>$sel:gitHubAccountName:ApplicationInfo'</a>,
--   <a>applicationInfo_gitHubAccountName</a> - The name for a connection
--   to a GitHub account.
--   
--   <a>$sel:createTime:ApplicationInfo'</a>,
--   <a>applicationInfo_createTime</a> - The time at which the application
--   was created.
--   
--   <a>$sel:applicationName:ApplicationInfo'</a>,
--   <a>applicationInfo_applicationName</a> - The application name.
--   
--   <a>$sel:computePlatform:ApplicationInfo'</a>,
--   <a>applicationInfo_computePlatform</a> - The destination platform type
--   for deployment of the application (<tt>Lambda</tt> or
--   <tt>Server</tt>).
newApplicationInfo :: ApplicationInfo

-- | True if the user has authenticated with GitHub for the specified
--   application. Otherwise, false.
applicationInfo_linkedToGitHub :: Lens' ApplicationInfo (Maybe Bool)

-- | The application ID.
applicationInfo_applicationId :: Lens' ApplicationInfo (Maybe Text)

-- | The name for a connection to a GitHub account.
applicationInfo_gitHubAccountName :: Lens' ApplicationInfo (Maybe Text)

-- | The time at which the application was created.
applicationInfo_createTime :: Lens' ApplicationInfo (Maybe UTCTime)

-- | The application name.
applicationInfo_applicationName :: Lens' ApplicationInfo (Maybe Text)

-- | The destination platform type for deployment of the application
--   (<tt>Lambda</tt> or <tt>Server</tt>).
applicationInfo_computePlatform :: Lens' ApplicationInfo (Maybe ComputePlatform)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ApplicationInfo.ApplicationInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ApplicationInfo.ApplicationInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ApplicationInfo.ApplicationInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ApplicationInfo.ApplicationInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ApplicationInfo.ApplicationInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ApplicationInfo.ApplicationInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ApplicationInfo.ApplicationInfo


module Network.AWS.CodeDeploy.Types.DeployErrorCode
newtype DeployErrorCode
DeployErrorCode' :: Text -> DeployErrorCode
[fromDeployErrorCode] :: DeployErrorCode -> Text
pattern DeployErrorCode_AGENT_ISSUE :: DeployErrorCode
pattern DeployErrorCode_ALARM_ACTIVE :: DeployErrorCode
pattern DeployErrorCode_APPLICATION_MISSING :: DeployErrorCode
pattern DeployErrorCode_AUTOSCALING_VALIDATION_ERROR :: DeployErrorCode
pattern DeployErrorCode_AUTO_SCALING_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_AUTO_SCALING_IAM_ROLE_PERMISSIONS :: DeployErrorCode
pattern DeployErrorCode_CLOUDFORMATION_STACK_FAILURE :: DeployErrorCode
pattern DeployErrorCode_CODEDEPLOY_RESOURCE_CANNOT_BE_FOUND :: DeployErrorCode
pattern DeployErrorCode_CUSTOMER_APPLICATION_UNHEALTHY :: DeployErrorCode
pattern DeployErrorCode_DEPLOYMENT_GROUP_MISSING :: DeployErrorCode
pattern DeployErrorCode_ECS_UPDATE_ERROR :: DeployErrorCode
pattern DeployErrorCode_ELASTIC_LOAD_BALANCING_INVALID :: DeployErrorCode
pattern DeployErrorCode_ELB_INVALID_INSTANCE :: DeployErrorCode
pattern DeployErrorCode_HEALTH_CONSTRAINTS :: DeployErrorCode
pattern DeployErrorCode_HEALTH_CONSTRAINTS_INVALID :: DeployErrorCode
pattern DeployErrorCode_HOOK_EXECUTION_FAILURE :: DeployErrorCode
pattern DeployErrorCode_IAM_ROLE_MISSING :: DeployErrorCode
pattern DeployErrorCode_IAM_ROLE_PERMISSIONS :: DeployErrorCode
pattern DeployErrorCode_INTERNAL_ERROR :: DeployErrorCode
pattern DeployErrorCode_INVALID_ECS_SERVICE :: DeployErrorCode
pattern DeployErrorCode_INVALID_LAMBDA_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_INVALID_LAMBDA_FUNCTION :: DeployErrorCode
pattern DeployErrorCode_INVALID_REVISION :: DeployErrorCode
pattern DeployErrorCode_MANUAL_STOP :: DeployErrorCode
pattern DeployErrorCode_MISSING_BLUE_GREEN_DEPLOYMENT_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_MISSING_ELB_INFORMATION :: DeployErrorCode
pattern DeployErrorCode_MISSING_GITHUB_TOKEN :: DeployErrorCode
pattern DeployErrorCode_NO_EC2_SUBSCRIPTION :: DeployErrorCode
pattern DeployErrorCode_NO_INSTANCES :: DeployErrorCode
pattern DeployErrorCode_OVER_MAX_INSTANCES :: DeployErrorCode
pattern DeployErrorCode_RESOURCE_LIMIT_EXCEEDED :: DeployErrorCode
pattern DeployErrorCode_REVISION_MISSING :: DeployErrorCode
pattern DeployErrorCode_THROTTLED :: DeployErrorCode
pattern DeployErrorCode_TIMEOUT :: DeployErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeployErrorCode.DeployErrorCode


module Network.AWS.CodeDeploy.Types.DeploymentCreator
newtype DeploymentCreator
DeploymentCreator' :: Text -> DeploymentCreator
[fromDeploymentCreator] :: DeploymentCreator -> Text
pattern DeploymentCreator_Autoscaling :: DeploymentCreator
pattern DeploymentCreator_CloudFormation :: DeploymentCreator
pattern DeploymentCreator_CloudFormationRollback :: DeploymentCreator
pattern DeploymentCreator_CodeDeploy :: DeploymentCreator
pattern DeploymentCreator_CodeDeployAutoUpdate :: DeploymentCreator
pattern DeploymentCreator_CodeDeployRollback :: DeploymentCreator
pattern DeploymentCreator_User :: DeploymentCreator
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentCreator.DeploymentCreator


module Network.AWS.CodeDeploy.Types.DeploymentOption
newtype DeploymentOption
DeploymentOption' :: Text -> DeploymentOption
[fromDeploymentOption] :: DeploymentOption -> Text
pattern DeploymentOption_WITHOUT_TRAFFIC_CONTROL :: DeploymentOption
pattern DeploymentOption_WITH_TRAFFIC_CONTROL :: DeploymentOption
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentOption.DeploymentOption


module Network.AWS.CodeDeploy.Types.DeploymentOverview

-- | Information about the deployment status of the instances in the
--   deployment.
--   
--   <i>See:</i> <a>newDeploymentOverview</a> smart constructor.
data DeploymentOverview
DeploymentOverview' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> DeploymentOverview

-- | The number of instances in the deployment to which revisions have been
--   successfully deployed.
[$sel:succeeded:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in a replacement environment ready to receive
--   traffic in a blue/green deployment.
[$sel:ready:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in the deployment in a pending state.
[$sel:pending:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in the deployment in a failed state.
[$sel:failed:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in the deployment in a skipped state.
[$sel:skipped:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in which the deployment is in progress.
[$sel:inProgress:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | Create a value of <a>DeploymentOverview</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:DeploymentOverview'</a>,
--   <a>deploymentOverview_succeeded</a> - The number of instances in the
--   deployment to which revisions have been successfully deployed.
--   
--   <a>$sel:ready:DeploymentOverview'</a>, <a>deploymentOverview_ready</a>
--   - The number of instances in a replacement environment ready to
--   receive traffic in a blue/green deployment.
--   
--   <a>$sel:pending:DeploymentOverview'</a>,
--   <a>deploymentOverview_pending</a> - The number of instances in the
--   deployment in a pending state.
--   
--   <a>$sel:failed:DeploymentOverview'</a>,
--   <a>deploymentOverview_failed</a> - The number of instances in the
--   deployment in a failed state.
--   
--   <a>$sel:skipped:DeploymentOverview'</a>,
--   <a>deploymentOverview_skipped</a> - The number of instances in the
--   deployment in a skipped state.
--   
--   <a>$sel:inProgress:DeploymentOverview'</a>,
--   <a>deploymentOverview_inProgress</a> - The number of instances in
--   which the deployment is in progress.
newDeploymentOverview :: DeploymentOverview

-- | The number of instances in the deployment to which revisions have been
--   successfully deployed.
deploymentOverview_succeeded :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in a replacement environment ready to receive
--   traffic in a blue/green deployment.
deploymentOverview_ready :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a pending state.
deploymentOverview_pending :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a failed state.
deploymentOverview_failed :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a skipped state.
deploymentOverview_skipped :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in which the deployment is in progress.
deploymentOverview_inProgress :: Lens' DeploymentOverview (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentOverview.DeploymentOverview
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentOverview.DeploymentOverview
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentOverview.DeploymentOverview
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentOverview.DeploymentOverview
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentOverview.DeploymentOverview
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentOverview.DeploymentOverview
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentOverview.DeploymentOverview


module Network.AWS.CodeDeploy.Types.DeploymentReadyAction
newtype DeploymentReadyAction
DeploymentReadyAction' :: Text -> DeploymentReadyAction
[fromDeploymentReadyAction] :: DeploymentReadyAction -> Text
pattern DeploymentReadyAction_CONTINUE_DEPLOYMENT :: DeploymentReadyAction
pattern DeploymentReadyAction_STOP_DEPLOYMENT :: DeploymentReadyAction
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentReadyAction.DeploymentReadyAction


module Network.AWS.CodeDeploy.Types.DeploymentReadyOption

-- | Information about how traffic is rerouted to instances in a
--   replacement environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newDeploymentReadyOption</a> smart constructor.
data DeploymentReadyOption
DeploymentReadyOption' :: Maybe Int -> Maybe DeploymentReadyAction -> DeploymentReadyOption

-- | The number of minutes to wait before the status of a blue/green
--   deployment is changed to Stopped if rerouting is not started manually.
--   Applies only to the <tt>STOP_DEPLOYMENT</tt> option for
--   <tt>actionOnTimeout</tt>.
[$sel:waitTimeInMinutes:DeploymentReadyOption'] :: DeploymentReadyOption -> Maybe Int

-- | Information about when to reroute traffic from an original environment
--   to a replacement environment in a blue/green deployment.
--   
--   <ul>
--   <li>CONTINUE_DEPLOYMENT: Register new instances with the load balancer
--   immediately after the new application revision is installed on the
--   instances in the replacement environment.</li>
--   <li>STOP_DEPLOYMENT: Do not register new instances with a load
--   balancer unless traffic rerouting is started using ContinueDeployment.
--   If traffic rerouting is not started before the end of the specified
--   wait period, the deployment status is changed to Stopped.</li>
--   </ul>
[$sel:actionOnTimeout:DeploymentReadyOption'] :: DeploymentReadyOption -> Maybe DeploymentReadyAction

-- | Create a value of <a>DeploymentReadyOption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:waitTimeInMinutes:DeploymentReadyOption'</a>,
--   <a>deploymentReadyOption_waitTimeInMinutes</a> - The number of minutes
--   to wait before the status of a blue/green deployment is changed to
--   Stopped if rerouting is not started manually. Applies only to the
--   <tt>STOP_DEPLOYMENT</tt> option for <tt>actionOnTimeout</tt>.
--   
--   <a>$sel:actionOnTimeout:DeploymentReadyOption'</a>,
--   <a>deploymentReadyOption_actionOnTimeout</a> - Information about when
--   to reroute traffic from an original environment to a replacement
--   environment in a blue/green deployment.
--   
--   <ul>
--   <li>CONTINUE_DEPLOYMENT: Register new instances with the load balancer
--   immediately after the new application revision is installed on the
--   instances in the replacement environment.</li>
--   <li>STOP_DEPLOYMENT: Do not register new instances with a load
--   balancer unless traffic rerouting is started using ContinueDeployment.
--   If traffic rerouting is not started before the end of the specified
--   wait period, the deployment status is changed to Stopped.</li>
--   </ul>
newDeploymentReadyOption :: DeploymentReadyOption

-- | The number of minutes to wait before the status of a blue/green
--   deployment is changed to Stopped if rerouting is not started manually.
--   Applies only to the <tt>STOP_DEPLOYMENT</tt> option for
--   <tt>actionOnTimeout</tt>.
deploymentReadyOption_waitTimeInMinutes :: Lens' DeploymentReadyOption (Maybe Int)

-- | Information about when to reroute traffic from an original environment
--   to a replacement environment in a blue/green deployment.
--   
--   <ul>
--   <li>CONTINUE_DEPLOYMENT: Register new instances with the load balancer
--   immediately after the new application revision is installed on the
--   instances in the replacement environment.</li>
--   <li>STOP_DEPLOYMENT: Do not register new instances with a load
--   balancer unless traffic rerouting is started using ContinueDeployment.
--   If traffic rerouting is not started before the end of the specified
--   wait period, the deployment status is changed to Stopped.</li>
--   </ul>
deploymentReadyOption_actionOnTimeout :: Lens' DeploymentReadyOption (Maybe DeploymentReadyAction)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentReadyOption.DeploymentReadyOption
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentReadyOption.DeploymentReadyOption
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentReadyOption.DeploymentReadyOption
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentReadyOption.DeploymentReadyOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentReadyOption.DeploymentReadyOption
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentReadyOption.DeploymentReadyOption
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentReadyOption.DeploymentReadyOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentReadyOption.DeploymentReadyOption


module Network.AWS.CodeDeploy.Types.DeploymentStatus
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_Baking :: DeploymentStatus
pattern DeploymentStatus_Created :: DeploymentStatus
pattern DeploymentStatus_Failed :: DeploymentStatus
pattern DeploymentStatus_InProgress :: DeploymentStatus
pattern DeploymentStatus_Queued :: DeploymentStatus
pattern DeploymentStatus_Ready :: DeploymentStatus
pattern DeploymentStatus_Stopped :: DeploymentStatus
pattern DeploymentStatus_Succeeded :: DeploymentStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentStatus.DeploymentStatus


module Network.AWS.CodeDeploy.Types.DeploymentTargetType
newtype DeploymentTargetType
DeploymentTargetType' :: Text -> DeploymentTargetType
[fromDeploymentTargetType] :: DeploymentTargetType -> Text
pattern DeploymentTargetType_CloudFormationTarget :: DeploymentTargetType
pattern DeploymentTargetType_ECSTarget :: DeploymentTargetType
pattern DeploymentTargetType_InstanceTarget :: DeploymentTargetType
pattern DeploymentTargetType_LambdaTarget :: DeploymentTargetType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentTargetType.DeploymentTargetType


module Network.AWS.CodeDeploy.Types.DeploymentType
newtype DeploymentType
DeploymentType' :: Text -> DeploymentType
[fromDeploymentType] :: DeploymentType -> Text
pattern DeploymentType_BLUE_GREEN :: DeploymentType
pattern DeploymentType_IN_PLACE :: DeploymentType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentType.DeploymentType


module Network.AWS.CodeDeploy.Types.DeploymentStyle

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
--   
--   <i>See:</i> <a>newDeploymentStyle</a> smart constructor.
data DeploymentStyle
DeploymentStyle' :: Maybe DeploymentType -> Maybe DeploymentOption -> DeploymentStyle

-- | Indicates whether to run an in-place deployment or a blue/green
--   deployment.
[$sel:deploymentType:DeploymentStyle'] :: DeploymentStyle -> Maybe DeploymentType

-- | Indicates whether to route deployment traffic behind a load balancer.
[$sel:deploymentOption:DeploymentStyle'] :: DeploymentStyle -> Maybe DeploymentOption

-- | Create a value of <a>DeploymentStyle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentType:DeploymentStyle'</a>,
--   <a>deploymentStyle_deploymentType</a> - Indicates whether to run an
--   in-place deployment or a blue/green deployment.
--   
--   <a>$sel:deploymentOption:DeploymentStyle'</a>,
--   <a>deploymentStyle_deploymentOption</a> - Indicates whether to route
--   deployment traffic behind a load balancer.
newDeploymentStyle :: DeploymentStyle

-- | Indicates whether to run an in-place deployment or a blue/green
--   deployment.
deploymentStyle_deploymentType :: Lens' DeploymentStyle (Maybe DeploymentType)

-- | Indicates whether to route deployment traffic behind a load balancer.
deploymentStyle_deploymentOption :: Lens' DeploymentStyle (Maybe DeploymentOption)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentStyle.DeploymentStyle
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentStyle.DeploymentStyle
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentStyle.DeploymentStyle
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentStyle.DeploymentStyle
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentStyle.DeploymentStyle
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentStyle.DeploymentStyle
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentStyle.DeploymentStyle
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentStyle.DeploymentStyle


module Network.AWS.CodeDeploy.Types.DeploymentWaitType
newtype DeploymentWaitType
DeploymentWaitType' :: Text -> DeploymentWaitType
[fromDeploymentWaitType] :: DeploymentWaitType -> Text
pattern DeploymentWaitType_READY_WAIT :: DeploymentWaitType
pattern DeploymentWaitType_TERMINATION_WAIT :: DeploymentWaitType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentWaitType.DeploymentWaitType


module Network.AWS.CodeDeploy.Types.EC2TagFilterType
newtype EC2TagFilterType
EC2TagFilterType' :: Text -> EC2TagFilterType
[fromEC2TagFilterType] :: EC2TagFilterType -> Text
pattern EC2TagFilterType_KEY_AND_VALUE :: EC2TagFilterType
pattern EC2TagFilterType_KEY_ONLY :: EC2TagFilterType
pattern EC2TagFilterType_VALUE_ONLY :: EC2TagFilterType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.EC2TagFilterType.EC2TagFilterType


module Network.AWS.CodeDeploy.Types.EC2TagFilter

-- | Information about an EC2 tag filter.
--   
--   <i>See:</i> <a>newEC2TagFilter</a> smart constructor.
data EC2TagFilter
EC2TagFilter' :: Maybe Text -> Maybe Text -> Maybe EC2TagFilterType -> EC2TagFilter

-- | The tag filter key.
[$sel:key:EC2TagFilter'] :: EC2TagFilter -> Maybe Text

-- | The tag filter value.
[$sel:value:EC2TagFilter'] :: EC2TagFilter -> Maybe Text

-- | The tag filter type:
--   
--   <ul>
--   <li><tt>KEY_ONLY</tt>: Key only.</li>
--   <li><tt>VALUE_ONLY</tt>: Value only.</li>
--   <li><tt>KEY_AND_VALUE</tt>: Key and value.</li>
--   </ul>
[$sel:type':EC2TagFilter'] :: EC2TagFilter -> Maybe EC2TagFilterType

-- | Create a value of <a>EC2TagFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:EC2TagFilter'</a>, <a>eC2TagFilter_key</a> - The tag
--   filter key.
--   
--   <a>$sel:value:EC2TagFilter'</a>, <a>eC2TagFilter_value</a> - The tag
--   filter value.
--   
--   <a>$sel:type':EC2TagFilter'</a>, <a>eC2TagFilter_type</a> - The tag
--   filter type:
--   
--   <ul>
--   <li><tt>KEY_ONLY</tt>: Key only.</li>
--   <li><tt>VALUE_ONLY</tt>: Value only.</li>
--   <li><tt>KEY_AND_VALUE</tt>: Key and value.</li>
--   </ul>
newEC2TagFilter :: EC2TagFilter

-- | The tag filter key.
eC2TagFilter_key :: Lens' EC2TagFilter (Maybe Text)

-- | The tag filter value.
eC2TagFilter_value :: Lens' EC2TagFilter (Maybe Text)

-- | The tag filter type:
--   
--   <ul>
--   <li><tt>KEY_ONLY</tt>: Key only.</li>
--   <li><tt>VALUE_ONLY</tt>: Value only.</li>
--   <li><tt>KEY_AND_VALUE</tt>: Key and value.</li>
--   </ul>
eC2TagFilter_type :: Lens' EC2TagFilter (Maybe EC2TagFilterType)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.EC2TagFilter.EC2TagFilter
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.EC2TagFilter.EC2TagFilter
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.EC2TagFilter.EC2TagFilter
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.EC2TagFilter.EC2TagFilter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.EC2TagFilter.EC2TagFilter
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.EC2TagFilter.EC2TagFilter
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.EC2TagFilter.EC2TagFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.EC2TagFilter.EC2TagFilter


module Network.AWS.CodeDeploy.Types.EC2TagSet

-- | Information about groups of EC2 instance tags.
--   
--   <i>See:</i> <a>newEC2TagSet</a> smart constructor.
data EC2TagSet
EC2TagSet' :: Maybe [[EC2TagFilter]] -> EC2TagSet

-- | A list that contains other lists of EC2 instance tag groups. For an
--   instance to be included in the deployment group, it must be identified
--   by all of the tag groups in the list.
[$sel:ec2TagSetList:EC2TagSet'] :: EC2TagSet -> Maybe [[EC2TagFilter]]

-- | Create a value of <a>EC2TagSet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ec2TagSetList:EC2TagSet'</a>, <a>eC2TagSet_ec2TagSetList</a> -
--   A list that contains other lists of EC2 instance tag groups. For an
--   instance to be included in the deployment group, it must be identified
--   by all of the tag groups in the list.
newEC2TagSet :: EC2TagSet

-- | A list that contains other lists of EC2 instance tag groups. For an
--   instance to be included in the deployment group, it must be identified
--   by all of the tag groups in the list.
eC2TagSet_ec2TagSetList :: Lens' EC2TagSet (Maybe [[EC2TagFilter]])
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.EC2TagSet.EC2TagSet
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.EC2TagSet.EC2TagSet
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.EC2TagSet.EC2TagSet
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.EC2TagSet.EC2TagSet
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.EC2TagSet.EC2TagSet
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.EC2TagSet.EC2TagSet
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.EC2TagSet.EC2TagSet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.EC2TagSet.EC2TagSet


module Network.AWS.CodeDeploy.Types.ECSService

-- | Contains the service and cluster names used to identify an Amazon ECS
--   deployment's target.
--   
--   <i>See:</i> <a>newECSService</a> smart constructor.
data ECSService
ECSService' :: Maybe Text -> Maybe Text -> ECSService

-- | The name of the target Amazon ECS service.
[$sel:serviceName:ECSService'] :: ECSService -> Maybe Text

-- | The name of the cluster that the Amazon ECS service is associated
--   with.
[$sel:clusterName:ECSService'] :: ECSService -> Maybe Text

-- | Create a value of <a>ECSService</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceName:ECSService'</a>, <a>eCSService_serviceName</a> -
--   The name of the target Amazon ECS service.
--   
--   <a>$sel:clusterName:ECSService'</a>, <a>eCSService_clusterName</a> -
--   The name of the cluster that the Amazon ECS service is associated
--   with.
newECSService :: ECSService

-- | The name of the target Amazon ECS service.
eCSService_serviceName :: Lens' ECSService (Maybe Text)

-- | The name of the cluster that the Amazon ECS service is associated
--   with.
eCSService_clusterName :: Lens' ECSService (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ECSService.ECSService
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ECSService.ECSService
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ECSService.ECSService
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ECSService.ECSService
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ECSService.ECSService
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ECSService.ECSService
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ECSService.ECSService
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.ECSService.ECSService


module Network.AWS.CodeDeploy.Types.ELBInfo

-- | Information about a load balancer in Elastic Load Balancing to use in
--   a deployment. Instances are registered directly with a load balancer,
--   and traffic is routed to the load balancer.
--   
--   <i>See:</i> <a>newELBInfo</a> smart constructor.
data ELBInfo
ELBInfo' :: Maybe Text -> ELBInfo

-- | For blue/green deployments, the name of the load balancer that is used
--   to route traffic from original instances to replacement instances in a
--   blue/green deployment. For in-place deployments, the name of the load
--   balancer that instances are deregistered from so they are not serving
--   traffic during a deployment, and then re-registered with after the
--   deployment is complete.
[$sel:name:ELBInfo'] :: ELBInfo -> Maybe Text

-- | Create a value of <a>ELBInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ELBInfo'</a>, <a>eLBInfo_name</a> - For blue/green
--   deployments, the name of the load balancer that is used to route
--   traffic from original instances to replacement instances in a
--   blue/green deployment. For in-place deployments, the name of the load
--   balancer that instances are deregistered from so they are not serving
--   traffic during a deployment, and then re-registered with after the
--   deployment is complete.
newELBInfo :: ELBInfo

-- | For blue/green deployments, the name of the load balancer that is used
--   to route traffic from original instances to replacement instances in a
--   blue/green deployment. For in-place deployments, the name of the load
--   balancer that instances are deregistered from so they are not serving
--   traffic during a deployment, and then re-registered with after the
--   deployment is complete.
eLBInfo_name :: Lens' ELBInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ELBInfo.ELBInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ELBInfo.ELBInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ELBInfo.ELBInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ELBInfo.ELBInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ELBInfo.ELBInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ELBInfo.ELBInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ELBInfo.ELBInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.ELBInfo.ELBInfo


module Network.AWS.CodeDeploy.Types.ErrorInformation

-- | Information about a deployment error.
--   
--   <i>See:</i> <a>newErrorInformation</a> smart constructor.
data ErrorInformation
ErrorInformation' :: Maybe Text -> Maybe DeployErrorCode -> ErrorInformation

-- | An accompanying error message.
[$sel:message:ErrorInformation'] :: ErrorInformation -> Maybe Text

-- | For more information, see <a>Error Codes for AWS CodeDeploy</a> in the
--   <a>AWS CodeDeploy User Guide</a>.
--   
--   The error code:
--   
--   <ul>
--   <li>APPLICATION_MISSING: The application was missing. This error code
--   is most likely raised if the application is deleted after the
--   deployment is created, but before it is started.</li>
--   <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This
--   error code is most likely raised if the deployment group is deleted
--   after the deployment is created, but before it is started.</li>
--   <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to
--   be successfully deployed within the instance health constraints
--   specified.</li>
--   <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
--   deployed within the instance health constraints specified.</li>
--   <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li>
--   <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions.</li>
--   <li>INTERNAL_ERROR: There was an internal error.</li>
--   <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to
--   Amazon EC2.</li>
--   <li>NO_INSTANCES: No instances were specified, or no instances can be
--   found.</li>
--   <li>OVER_MAX_INSTANCES: The maximum number of instances was
--   exceeded.</li>
--   <li>THROTTLED: The operation was throttled because the calling account
--   exceeded the throttling limits of one or more AWS services.</li>
--   <li>TIMEOUT: The deployment has timed out.</li>
--   <li>REVISION_MISSING: The revision ID was missing. This error code is
--   most likely raised if the revision is deleted after the deployment is
--   created, but before it is started.</li>
--   </ul>
[$sel:code:ErrorInformation'] :: ErrorInformation -> Maybe DeployErrorCode

-- | Create a value of <a>ErrorInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ErrorInformation'</a>, <a>errorInformation_message</a>
--   - An accompanying error message.
--   
--   <a>$sel:code:ErrorInformation'</a>, <a>errorInformation_code</a> - For
--   more information, see <a>Error Codes for AWS CodeDeploy</a> in the
--   <a>AWS CodeDeploy User Guide</a>.
--   
--   The error code:
--   
--   <ul>
--   <li>APPLICATION_MISSING: The application was missing. This error code
--   is most likely raised if the application is deleted after the
--   deployment is created, but before it is started.</li>
--   <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This
--   error code is most likely raised if the deployment group is deleted
--   after the deployment is created, but before it is started.</li>
--   <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to
--   be successfully deployed within the instance health constraints
--   specified.</li>
--   <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
--   deployed within the instance health constraints specified.</li>
--   <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li>
--   <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions.</li>
--   <li>INTERNAL_ERROR: There was an internal error.</li>
--   <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to
--   Amazon EC2.</li>
--   <li>NO_INSTANCES: No instances were specified, or no instances can be
--   found.</li>
--   <li>OVER_MAX_INSTANCES: The maximum number of instances was
--   exceeded.</li>
--   <li>THROTTLED: The operation was throttled because the calling account
--   exceeded the throttling limits of one or more AWS services.</li>
--   <li>TIMEOUT: The deployment has timed out.</li>
--   <li>REVISION_MISSING: The revision ID was missing. This error code is
--   most likely raised if the revision is deleted after the deployment is
--   created, but before it is started.</li>
--   </ul>
newErrorInformation :: ErrorInformation

-- | An accompanying error message.
errorInformation_message :: Lens' ErrorInformation (Maybe Text)

-- | For more information, see <a>Error Codes for AWS CodeDeploy</a> in the
--   <a>AWS CodeDeploy User Guide</a>.
--   
--   The error code:
--   
--   <ul>
--   <li>APPLICATION_MISSING: The application was missing. This error code
--   is most likely raised if the application is deleted after the
--   deployment is created, but before it is started.</li>
--   <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This
--   error code is most likely raised if the deployment group is deleted
--   after the deployment is created, but before it is started.</li>
--   <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to
--   be successfully deployed within the instance health constraints
--   specified.</li>
--   <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
--   deployed within the instance health constraints specified.</li>
--   <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li>
--   <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions.</li>
--   <li>INTERNAL_ERROR: There was an internal error.</li>
--   <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to
--   Amazon EC2.</li>
--   <li>NO_INSTANCES: No instances were specified, or no instances can be
--   found.</li>
--   <li>OVER_MAX_INSTANCES: The maximum number of instances was
--   exceeded.</li>
--   <li>THROTTLED: The operation was throttled because the calling account
--   exceeded the throttling limits of one or more AWS services.</li>
--   <li>TIMEOUT: The deployment has timed out.</li>
--   <li>REVISION_MISSING: The revision ID was missing. This error code is
--   most likely raised if the revision is deleted after the deployment is
--   created, but before it is started.</li>
--   </ul>
errorInformation_code :: Lens' ErrorInformation (Maybe DeployErrorCode)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ErrorInformation.ErrorInformation
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ErrorInformation.ErrorInformation
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ErrorInformation.ErrorInformation
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ErrorInformation.ErrorInformation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ErrorInformation.ErrorInformation
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ErrorInformation.ErrorInformation
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ErrorInformation.ErrorInformation


module Network.AWS.CodeDeploy.Types.FileExistsBehavior
newtype FileExistsBehavior
FileExistsBehavior' :: Text -> FileExistsBehavior
[fromFileExistsBehavior] :: FileExistsBehavior -> Text
pattern FileExistsBehavior_DISALLOW :: FileExistsBehavior
pattern FileExistsBehavior_OVERWRITE :: FileExistsBehavior
pattern FileExistsBehavior_RETAIN :: FileExistsBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.FileExistsBehavior.FileExistsBehavior


module Network.AWS.CodeDeploy.Types.GenericRevisionInfo

-- | Information about an application revision.
--   
--   <i>See:</i> <a>newGenericRevisionInfo</a> smart constructor.
data GenericRevisionInfo
GenericRevisionInfo' :: Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> GenericRevisionInfo

-- | When the revision was registered with AWS CodeDeploy.
[$sel:registerTime:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe POSIX

-- | The deployment groups for which this is the current target revision.
[$sel:deploymentGroups:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe [Text]

-- | A comment about the revision.
[$sel:description:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe Text

-- | When the revision was first used by AWS CodeDeploy.
[$sel:firstUsedTime:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe POSIX

-- | When the revision was last used by AWS CodeDeploy.
[$sel:lastUsedTime:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe POSIX

-- | Create a value of <a>GenericRevisionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registerTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_registerTime</a> - When the revision was
--   registered with AWS CodeDeploy.
--   
--   <a>$sel:deploymentGroups:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_deploymentGroups</a> - The deployment groups
--   for which this is the current target revision.
--   
--   <a>$sel:description:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_description</a> - A comment about the revision.
--   
--   <a>$sel:firstUsedTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_firstUsedTime</a> - When the revision was first
--   used by AWS CodeDeploy.
--   
--   <a>$sel:lastUsedTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_lastUsedTime</a> - When the revision was last
--   used by AWS CodeDeploy.
newGenericRevisionInfo :: GenericRevisionInfo

-- | When the revision was registered with AWS CodeDeploy.
genericRevisionInfo_registerTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | The deployment groups for which this is the current target revision.
genericRevisionInfo_deploymentGroups :: Lens' GenericRevisionInfo (Maybe [Text])

-- | A comment about the revision.
genericRevisionInfo_description :: Lens' GenericRevisionInfo (Maybe Text)

-- | When the revision was first used by AWS CodeDeploy.
genericRevisionInfo_firstUsedTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | When the revision was last used by AWS CodeDeploy.
genericRevisionInfo_lastUsedTime :: Lens' GenericRevisionInfo (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.GenericRevisionInfo.GenericRevisionInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.GenericRevisionInfo.GenericRevisionInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.GenericRevisionInfo.GenericRevisionInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.GenericRevisionInfo.GenericRevisionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.GenericRevisionInfo.GenericRevisionInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.GenericRevisionInfo.GenericRevisionInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.GenericRevisionInfo.GenericRevisionInfo


module Network.AWS.CodeDeploy.Types.GitHubLocation

-- | Information about the location of application artifacts stored in
--   GitHub.
--   
--   <i>See:</i> <a>newGitHubLocation</a> smart constructor.
data GitHubLocation
GitHubLocation' :: Maybe Text -> Maybe Text -> GitHubLocation

-- | The SHA1 commit ID of the GitHub commit that represents the bundled
--   artifacts for the application revision.
[$sel:commitId:GitHubLocation'] :: GitHubLocation -> Maybe Text

-- | The GitHub account and repository pair that stores a reference to the
--   commit that represents the bundled artifacts for the application
--   revision.
--   
--   Specified as account/repository.
[$sel:repository:GitHubLocation'] :: GitHubLocation -> Maybe Text

-- | Create a value of <a>GitHubLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:GitHubLocation'</a>, <a>gitHubLocation_commitId</a> -
--   The SHA1 commit ID of the GitHub commit that represents the bundled
--   artifacts for the application revision.
--   
--   <a>$sel:repository:GitHubLocation'</a>,
--   <a>gitHubLocation_repository</a> - The GitHub account and repository
--   pair that stores a reference to the commit that represents the bundled
--   artifacts for the application revision.
--   
--   Specified as account/repository.
newGitHubLocation :: GitHubLocation

-- | The SHA1 commit ID of the GitHub commit that represents the bundled
--   artifacts for the application revision.
gitHubLocation_commitId :: Lens' GitHubLocation (Maybe Text)

-- | The GitHub account and repository pair that stores a reference to the
--   commit that represents the bundled artifacts for the application
--   revision.
--   
--   Specified as account/repository.
gitHubLocation_repository :: Lens' GitHubLocation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.GitHubLocation.GitHubLocation
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.GitHubLocation.GitHubLocation
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.GitHubLocation.GitHubLocation
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.GitHubLocation.GitHubLocation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.GitHubLocation.GitHubLocation
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.GitHubLocation.GitHubLocation
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.GitHubLocation.GitHubLocation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.GitHubLocation.GitHubLocation


module Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction
newtype GreenFleetProvisioningAction
GreenFleetProvisioningAction' :: Text -> GreenFleetProvisioningAction
[fromGreenFleetProvisioningAction] :: GreenFleetProvisioningAction -> Text
pattern GreenFleetProvisioningAction_COPY_AUTO_SCALING_GROUP :: GreenFleetProvisioningAction
pattern GreenFleetProvisioningAction_DISCOVER_EXISTING :: GreenFleetProvisioningAction
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.GreenFleetProvisioningAction.GreenFleetProvisioningAction


module Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newGreenFleetProvisioningOption</a> smart constructor.
data GreenFleetProvisioningOption
GreenFleetProvisioningOption' :: Maybe GreenFleetProvisioningAction -> GreenFleetProvisioningOption

-- | The method used to add instances to a replacement environment.
--   
--   <ul>
--   <li><tt>DISCOVER_EXISTING</tt>: Use instances that already exist or
--   will be created manually.</li>
--   <li><tt>COPY_AUTO_SCALING_GROUP</tt>: Use settings from a specified
--   Auto Scaling group to define and create instances in a new Auto
--   Scaling group.</li>
--   </ul>
[$sel:action:GreenFleetProvisioningOption'] :: GreenFleetProvisioningOption -> Maybe GreenFleetProvisioningAction

-- | Create a value of <a>GreenFleetProvisioningOption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:GreenFleetProvisioningOption'</a>,
--   <a>greenFleetProvisioningOption_action</a> - The method used to add
--   instances to a replacement environment.
--   
--   <ul>
--   <li><tt>DISCOVER_EXISTING</tt>: Use instances that already exist or
--   will be created manually.</li>
--   <li><tt>COPY_AUTO_SCALING_GROUP</tt>: Use settings from a specified
--   Auto Scaling group to define and create instances in a new Auto
--   Scaling group.</li>
--   </ul>
newGreenFleetProvisioningOption :: GreenFleetProvisioningOption

-- | The method used to add instances to a replacement environment.
--   
--   <ul>
--   <li><tt>DISCOVER_EXISTING</tt>: Use instances that already exist or
--   will be created manually.</li>
--   <li><tt>COPY_AUTO_SCALING_GROUP</tt>: Use settings from a specified
--   Auto Scaling group to define and create instances in a new Auto
--   Scaling group.</li>
--   </ul>
greenFleetProvisioningOption_action :: Lens' GreenFleetProvisioningOption (Maybe GreenFleetProvisioningAction)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption.GreenFleetProvisioningOption
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption.GreenFleetProvisioningOption
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption.GreenFleetProvisioningOption
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption.GreenFleetProvisioningOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption.GreenFleetProvisioningOption
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption.GreenFleetProvisioningOption
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption.GreenFleetProvisioningOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.GreenFleetProvisioningOption.GreenFleetProvisioningOption


module Network.AWS.CodeDeploy.Types.InstanceAction
newtype InstanceAction
InstanceAction' :: Text -> InstanceAction
[fromInstanceAction] :: InstanceAction -> Text
pattern InstanceAction_KEEP_ALIVE :: InstanceAction
pattern InstanceAction_TERMINATE :: InstanceAction
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.InstanceAction.InstanceAction


module Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption

-- | Information about whether instances in the original environment are
--   terminated when a blue/green deployment is successful.
--   <tt>BlueInstanceTerminationOption</tt> does not apply to Lambda
--   deployments.
--   
--   <i>See:</i> <a>newBlueInstanceTerminationOption</a> smart constructor.
data BlueInstanceTerminationOption
BlueInstanceTerminationOption' :: Maybe InstanceAction -> Maybe Int -> BlueInstanceTerminationOption

-- | The action to take on instances in the original environment after a
--   successful blue/green deployment.
--   
--   <ul>
--   <li><tt>TERMINATE</tt>: Instances are terminated after a specified
--   wait time.</li>
--   <li><tt>KEEP_ALIVE</tt>: Instances are left running after they are
--   deregistered from the load balancer and removed from the deployment
--   group.</li>
--   </ul>
[$sel:action:BlueInstanceTerminationOption'] :: BlueInstanceTerminationOption -> Maybe InstanceAction

-- | For an Amazon EC2 deployment, the number of minutes to wait after a
--   successful blue/green deployment before terminating instances from the
--   original environment.
--   
--   For an Amazon ECS deployment, the number of minutes before deleting
--   the original (blue) task set. During an Amazon ECS deployment,
--   CodeDeploy shifts traffic from the original (blue) task set to a
--   replacement (green) task set.
--   
--   The maximum setting is 2880 minutes (2 days).
[$sel:terminationWaitTimeInMinutes:BlueInstanceTerminationOption'] :: BlueInstanceTerminationOption -> Maybe Int

-- | Create a value of <a>BlueInstanceTerminationOption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:BlueInstanceTerminationOption'</a>,
--   <a>blueInstanceTerminationOption_action</a> - The action to take on
--   instances in the original environment after a successful blue/green
--   deployment.
--   
--   <ul>
--   <li><tt>TERMINATE</tt>: Instances are terminated after a specified
--   wait time.</li>
--   <li><tt>KEEP_ALIVE</tt>: Instances are left running after they are
--   deregistered from the load balancer and removed from the deployment
--   group.</li>
--   </ul>
--   
--   
--   <a>$sel:terminationWaitTimeInMinutes:BlueInstanceTerminationOption'</a>,
--   <a>blueInstanceTerminationOption_terminationWaitTimeInMinutes</a> -
--   For an Amazon EC2 deployment, the number of minutes to wait after a
--   successful blue/green deployment before terminating instances from the
--   original environment.
--   
--   For an Amazon ECS deployment, the number of minutes before deleting
--   the original (blue) task set. During an Amazon ECS deployment,
--   CodeDeploy shifts traffic from the original (blue) task set to a
--   replacement (green) task set.
--   
--   The maximum setting is 2880 minutes (2 days).
newBlueInstanceTerminationOption :: BlueInstanceTerminationOption

-- | The action to take on instances in the original environment after a
--   successful blue/green deployment.
--   
--   <ul>
--   <li><tt>TERMINATE</tt>: Instances are terminated after a specified
--   wait time.</li>
--   <li><tt>KEEP_ALIVE</tt>: Instances are left running after they are
--   deregistered from the load balancer and removed from the deployment
--   group.</li>
--   </ul>
blueInstanceTerminationOption_action :: Lens' BlueInstanceTerminationOption (Maybe InstanceAction)

-- | For an Amazon EC2 deployment, the number of minutes to wait after a
--   successful blue/green deployment before terminating instances from the
--   original environment.
--   
--   For an Amazon ECS deployment, the number of minutes before deleting
--   the original (blue) task set. During an Amazon ECS deployment,
--   CodeDeploy shifts traffic from the original (blue) task set to a
--   replacement (green) task set.
--   
--   The maximum setting is 2880 minutes (2 days).
blueInstanceTerminationOption_terminationWaitTimeInMinutes :: Lens' BlueInstanceTerminationOption (Maybe Int)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption.BlueInstanceTerminationOption
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption.BlueInstanceTerminationOption
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption.BlueInstanceTerminationOption
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption.BlueInstanceTerminationOption
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption.BlueInstanceTerminationOption
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption.BlueInstanceTerminationOption
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption.BlueInstanceTerminationOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.BlueInstanceTerminationOption.BlueInstanceTerminationOption


module Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration

-- | Information about blue/green deployment options for a deployment
--   group.
--   
--   <i>See:</i> <a>newBlueGreenDeploymentConfiguration</a> smart
--   constructor.
data BlueGreenDeploymentConfiguration
BlueGreenDeploymentConfiguration' :: Maybe GreenFleetProvisioningOption -> Maybe DeploymentReadyOption -> Maybe BlueInstanceTerminationOption -> BlueGreenDeploymentConfiguration

-- | Information about how instances are provisioned for a replacement
--   environment in a blue/green deployment.
[$sel:greenFleetProvisioningOption:BlueGreenDeploymentConfiguration'] :: BlueGreenDeploymentConfiguration -> Maybe GreenFleetProvisioningOption

-- | Information about the action to take when newly provisioned instances
--   are ready to receive traffic in a blue/green deployment.
[$sel:deploymentReadyOption:BlueGreenDeploymentConfiguration'] :: BlueGreenDeploymentConfiguration -> Maybe DeploymentReadyOption

-- | Information about whether to terminate instances in the original fleet
--   during a blue/green deployment.
[$sel:terminateBlueInstancesOnDeploymentSuccess:BlueGreenDeploymentConfiguration'] :: BlueGreenDeploymentConfiguration -> Maybe BlueInstanceTerminationOption

-- | Create a value of <a>BlueGreenDeploymentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:greenFleetProvisioningOption:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_greenFleetProvisioningOption</a> -
--   Information about how instances are provisioned for a replacement
--   environment in a blue/green deployment.
--   
--   <a>$sel:deploymentReadyOption:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_deploymentReadyOption</a> -
--   Information about the action to take when newly provisioned instances
--   are ready to receive traffic in a blue/green deployment.
--   
--   
--   <a>$sel:terminateBlueInstancesOnDeploymentSuccess:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_terminateBlueInstancesOnDeploymentSuccess</a>
--   - Information about whether to terminate instances in the original
--   fleet during a blue/green deployment.
newBlueGreenDeploymentConfiguration :: BlueGreenDeploymentConfiguration

-- | Information about how instances are provisioned for a replacement
--   environment in a blue/green deployment.
blueGreenDeploymentConfiguration_greenFleetProvisioningOption :: Lens' BlueGreenDeploymentConfiguration (Maybe GreenFleetProvisioningOption)

-- | Information about the action to take when newly provisioned instances
--   are ready to receive traffic in a blue/green deployment.
blueGreenDeploymentConfiguration_deploymentReadyOption :: Lens' BlueGreenDeploymentConfiguration (Maybe DeploymentReadyOption)

-- | Information about whether to terminate instances in the original fleet
--   during a blue/green deployment.
blueGreenDeploymentConfiguration_terminateBlueInstancesOnDeploymentSuccess :: Lens' BlueGreenDeploymentConfiguration (Maybe BlueInstanceTerminationOption)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration.BlueGreenDeploymentConfiguration
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration.BlueGreenDeploymentConfiguration
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration.BlueGreenDeploymentConfiguration
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration.BlueGreenDeploymentConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration.BlueGreenDeploymentConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration.BlueGreenDeploymentConfiguration
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration.BlueGreenDeploymentConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.BlueGreenDeploymentConfiguration.BlueGreenDeploymentConfiguration


module Network.AWS.CodeDeploy.Types.LambdaFunctionInfo

-- | Information about a Lambda function specified in a deployment.
--   
--   <i>See:</i> <a>newLambdaFunctionInfo</a> smart constructor.
data LambdaFunctionInfo
LambdaFunctionInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Double -> Maybe Text -> LambdaFunctionInfo

-- | The alias of a Lambda function. For more information, see <a>AWS
--   Lambda Function Aliases</a> in the <i>AWS Lambda Developer Guide</i>.
[$sel:functionAlias:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Text

-- | The version of a Lambda function that production traffic points to.
[$sel:currentVersion:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Text

-- | The version of a Lambda function that production traffic points to
--   after the Lambda function is deployed.
[$sel:targetVersion:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Text

-- | The percentage of production traffic that the target version of a
--   Lambda function receives.
[$sel:targetVersionWeight:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Double

-- | The name of a Lambda function.
[$sel:functionName:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Text

-- | Create a value of <a>LambdaFunctionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionAlias:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_functionAlias</a> - The alias of a Lambda
--   function. For more information, see <a>AWS Lambda Function Aliases</a>
--   in the <i>AWS Lambda Developer Guide</i>.
--   
--   <a>$sel:currentVersion:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_currentVersion</a> - The version of a Lambda
--   function that production traffic points to.
--   
--   <a>$sel:targetVersion:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_targetVersion</a> - The version of a Lambda
--   function that production traffic points to after the Lambda function
--   is deployed.
--   
--   <a>$sel:targetVersionWeight:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_targetVersionWeight</a> - The percentage of
--   production traffic that the target version of a Lambda function
--   receives.
--   
--   <a>$sel:functionName:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_functionName</a> - The name of a Lambda
--   function.
newLambdaFunctionInfo :: LambdaFunctionInfo

-- | The alias of a Lambda function. For more information, see <a>AWS
--   Lambda Function Aliases</a> in the <i>AWS Lambda Developer Guide</i>.
lambdaFunctionInfo_functionAlias :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The version of a Lambda function that production traffic points to.
lambdaFunctionInfo_currentVersion :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The version of a Lambda function that production traffic points to
--   after the Lambda function is deployed.
lambdaFunctionInfo_targetVersion :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The percentage of production traffic that the target version of a
--   Lambda function receives.
lambdaFunctionInfo_targetVersionWeight :: Lens' LambdaFunctionInfo (Maybe Double)

-- | The name of a Lambda function.
lambdaFunctionInfo_functionName :: Lens' LambdaFunctionInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.LambdaFunctionInfo.LambdaFunctionInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.LambdaFunctionInfo.LambdaFunctionInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.LambdaFunctionInfo.LambdaFunctionInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.LambdaFunctionInfo.LambdaFunctionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.LambdaFunctionInfo.LambdaFunctionInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.LambdaFunctionInfo.LambdaFunctionInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.LambdaFunctionInfo.LambdaFunctionInfo


module Network.AWS.CodeDeploy.Types.LastDeploymentInfo

-- | Information about the most recent attempted or successful deployment
--   to a deployment group.
--   
--   <i>See:</i> <a>newLastDeploymentInfo</a> smart constructor.
data LastDeploymentInfo
LastDeploymentInfo' :: Maybe Text -> Maybe DeploymentStatus -> Maybe POSIX -> Maybe POSIX -> LastDeploymentInfo

-- | The unique ID of a deployment.
[$sel:deploymentId:LastDeploymentInfo'] :: LastDeploymentInfo -> Maybe Text

-- | The status of the most recent deployment.
[$sel:status:LastDeploymentInfo'] :: LastDeploymentInfo -> Maybe DeploymentStatus

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group was complete.
[$sel:endTime:LastDeploymentInfo'] :: LastDeploymentInfo -> Maybe POSIX

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group started.
[$sel:createTime:LastDeploymentInfo'] :: LastDeploymentInfo -> Maybe POSIX

-- | Create a value of <a>LastDeploymentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_deploymentId</a> - The unique ID of a
--   deployment.
--   
--   <a>$sel:status:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_status</a> - The status of the most recent
--   deployment.
--   
--   <a>$sel:endTime:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_endTime</a> - A timestamp that indicates when
--   the most recent deployment to the deployment group was complete.
--   
--   <a>$sel:createTime:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_createTime</a> - A timestamp that indicates when
--   the most recent deployment to the deployment group started.
newLastDeploymentInfo :: LastDeploymentInfo

-- | The unique ID of a deployment.
lastDeploymentInfo_deploymentId :: Lens' LastDeploymentInfo (Maybe Text)

-- | The status of the most recent deployment.
lastDeploymentInfo_status :: Lens' LastDeploymentInfo (Maybe DeploymentStatus)

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group was complete.
lastDeploymentInfo_endTime :: Lens' LastDeploymentInfo (Maybe UTCTime)

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group started.
lastDeploymentInfo_createTime :: Lens' LastDeploymentInfo (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.LastDeploymentInfo.LastDeploymentInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.LastDeploymentInfo.LastDeploymentInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.LastDeploymentInfo.LastDeploymentInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.LastDeploymentInfo.LastDeploymentInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.LastDeploymentInfo.LastDeploymentInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.LastDeploymentInfo.LastDeploymentInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.LastDeploymentInfo.LastDeploymentInfo


module Network.AWS.CodeDeploy.Types.LifecycleErrorCode
newtype LifecycleErrorCode
LifecycleErrorCode' :: Text -> LifecycleErrorCode
[fromLifecycleErrorCode] :: LifecycleErrorCode -> Text
pattern LifecycleErrorCode_ScriptFailed :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptMissing :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptNotExecutable :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptTimedOut :: LifecycleErrorCode
pattern LifecycleErrorCode_Success :: LifecycleErrorCode
pattern LifecycleErrorCode_UnknownError :: LifecycleErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.LifecycleErrorCode.LifecycleErrorCode


module Network.AWS.CodeDeploy.Types.Diagnostics

-- | Diagnostic information about executable scripts that are part of a
--   deployment.
--   
--   <i>See:</i> <a>newDiagnostics</a> smart constructor.
data Diagnostics
Diagnostics' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe LifecycleErrorCode -> Diagnostics

-- | The last portion of the diagnostic log.
--   
--   If available, AWS CodeDeploy returns up to the last 4 KB of the
--   diagnostic log.
[$sel:logTail:Diagnostics'] :: Diagnostics -> Maybe Text

-- | The message associated with the error.
[$sel:message:Diagnostics'] :: Diagnostics -> Maybe Text

-- | The name of the script.
[$sel:scriptName:Diagnostics'] :: Diagnostics -> Maybe Text

-- | The associated error code:
--   
--   <ul>
--   <li>Success: The specified script ran.</li>
--   <li>ScriptMissing: The specified script was not found in the specified
--   location.</li>
--   <li>ScriptNotExecutable: The specified script is not a recognized
--   executable file type.</li>
--   <li>ScriptTimedOut: The specified script did not finish running in the
--   specified time period.</li>
--   <li>ScriptFailed: The specified script failed to run as expected.</li>
--   <li>UnknownError: The specified script did not run for an unknown
--   reason.</li>
--   </ul>
[$sel:errorCode:Diagnostics'] :: Diagnostics -> Maybe LifecycleErrorCode

-- | Create a value of <a>Diagnostics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logTail:Diagnostics'</a>, <a>diagnostics_logTail</a> - The
--   last portion of the diagnostic log.
--   
--   If available, AWS CodeDeploy returns up to the last 4 KB of the
--   diagnostic log.
--   
--   <a>$sel:message:Diagnostics'</a>, <a>diagnostics_message</a> - The
--   message associated with the error.
--   
--   <a>$sel:scriptName:Diagnostics'</a>, <a>diagnostics_scriptName</a> -
--   The name of the script.
--   
--   <a>$sel:errorCode:Diagnostics'</a>, <a>diagnostics_errorCode</a> - The
--   associated error code:
--   
--   <ul>
--   <li>Success: The specified script ran.</li>
--   <li>ScriptMissing: The specified script was not found in the specified
--   location.</li>
--   <li>ScriptNotExecutable: The specified script is not a recognized
--   executable file type.</li>
--   <li>ScriptTimedOut: The specified script did not finish running in the
--   specified time period.</li>
--   <li>ScriptFailed: The specified script failed to run as expected.</li>
--   <li>UnknownError: The specified script did not run for an unknown
--   reason.</li>
--   </ul>
newDiagnostics :: Diagnostics

-- | The last portion of the diagnostic log.
--   
--   If available, AWS CodeDeploy returns up to the last 4 KB of the
--   diagnostic log.
diagnostics_logTail :: Lens' Diagnostics (Maybe Text)

-- | The message associated with the error.
diagnostics_message :: Lens' Diagnostics (Maybe Text)

-- | The name of the script.
diagnostics_scriptName :: Lens' Diagnostics (Maybe Text)

-- | The associated error code:
--   
--   <ul>
--   <li>Success: The specified script ran.</li>
--   <li>ScriptMissing: The specified script was not found in the specified
--   location.</li>
--   <li>ScriptNotExecutable: The specified script is not a recognized
--   executable file type.</li>
--   <li>ScriptTimedOut: The specified script did not finish running in the
--   specified time period.</li>
--   <li>ScriptFailed: The specified script failed to run as expected.</li>
--   <li>UnknownError: The specified script did not run for an unknown
--   reason.</li>
--   </ul>
diagnostics_errorCode :: Lens' Diagnostics (Maybe LifecycleErrorCode)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.Diagnostics.Diagnostics
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.Diagnostics.Diagnostics
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.Diagnostics.Diagnostics
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.Diagnostics.Diagnostics
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.Diagnostics.Diagnostics
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.Diagnostics.Diagnostics
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.Diagnostics.Diagnostics


module Network.AWS.CodeDeploy.Types.LifecycleEventStatus
newtype LifecycleEventStatus
LifecycleEventStatus' :: Text -> LifecycleEventStatus
[fromLifecycleEventStatus] :: LifecycleEventStatus -> Text
pattern LifecycleEventStatus_Failed :: LifecycleEventStatus
pattern LifecycleEventStatus_InProgress :: LifecycleEventStatus
pattern LifecycleEventStatus_Pending :: LifecycleEventStatus
pattern LifecycleEventStatus_Skipped :: LifecycleEventStatus
pattern LifecycleEventStatus_Succeeded :: LifecycleEventStatus
pattern LifecycleEventStatus_Unknown :: LifecycleEventStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.LifecycleEventStatus.LifecycleEventStatus


module Network.AWS.CodeDeploy.Types.LifecycleEvent

-- | Information about a deployment lifecycle event.
--   
--   <i>See:</i> <a>newLifecycleEvent</a> smart constructor.
data LifecycleEvent
LifecycleEvent' :: Maybe Diagnostics -> Maybe LifecycleEventStatus -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> LifecycleEvent

-- | Diagnostic information about the deployment lifecycle event.
[$sel:diagnostics:LifecycleEvent'] :: LifecycleEvent -> Maybe Diagnostics

-- | The deployment lifecycle event status:
--   
--   <ul>
--   <li>Pending: The deployment lifecycle event is pending.</li>
--   <li>InProgress: The deployment lifecycle event is in progress.</li>
--   <li>Succeeded: The deployment lifecycle event ran successfully.</li>
--   <li>Failed: The deployment lifecycle event has failed.</li>
--   <li>Skipped: The deployment lifecycle event has been skipped.</li>
--   <li>Unknown: The deployment lifecycle event is unknown.</li>
--   </ul>
[$sel:status:LifecycleEvent'] :: LifecycleEvent -> Maybe LifecycleEventStatus

-- | A timestamp that indicates when the deployment lifecycle event
--   started.
[$sel:startTime:LifecycleEvent'] :: LifecycleEvent -> Maybe POSIX

-- | A timestamp that indicates when the deployment lifecycle event ended.
[$sel:endTime:LifecycleEvent'] :: LifecycleEvent -> Maybe POSIX

-- | The deployment lifecycle event name, such as <tt>ApplicationStop</tt>,
--   <tt>BeforeInstall</tt>, <tt>AfterInstall</tt>,
--   <tt>ApplicationStart</tt>, or <tt>ValidateService</tt>.
[$sel:lifecycleEventName:LifecycleEvent'] :: LifecycleEvent -> Maybe Text

-- | Create a value of <a>LifecycleEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:diagnostics:LifecycleEvent'</a>,
--   <a>lifecycleEvent_diagnostics</a> - Diagnostic information about the
--   deployment lifecycle event.
--   
--   <a>$sel:status:LifecycleEvent'</a>, <a>lifecycleEvent_status</a> - The
--   deployment lifecycle event status:
--   
--   <ul>
--   <li>Pending: The deployment lifecycle event is pending.</li>
--   <li>InProgress: The deployment lifecycle event is in progress.</li>
--   <li>Succeeded: The deployment lifecycle event ran successfully.</li>
--   <li>Failed: The deployment lifecycle event has failed.</li>
--   <li>Skipped: The deployment lifecycle event has been skipped.</li>
--   <li>Unknown: The deployment lifecycle event is unknown.</li>
--   </ul>
--   
--   <a>$sel:startTime:LifecycleEvent'</a>, <a>lifecycleEvent_startTime</a>
--   - A timestamp that indicates when the deployment lifecycle event
--   started.
--   
--   <a>$sel:endTime:LifecycleEvent'</a>, <a>lifecycleEvent_endTime</a> - A
--   timestamp that indicates when the deployment lifecycle event ended.
--   
--   <a>$sel:lifecycleEventName:LifecycleEvent'</a>,
--   <a>lifecycleEvent_lifecycleEventName</a> - The deployment lifecycle
--   event name, such as <tt>ApplicationStop</tt>, <tt>BeforeInstall</tt>,
--   <tt>AfterInstall</tt>, <tt>ApplicationStart</tt>, or
--   <tt>ValidateService</tt>.
newLifecycleEvent :: LifecycleEvent

-- | Diagnostic information about the deployment lifecycle event.
lifecycleEvent_diagnostics :: Lens' LifecycleEvent (Maybe Diagnostics)

-- | The deployment lifecycle event status:
--   
--   <ul>
--   <li>Pending: The deployment lifecycle event is pending.</li>
--   <li>InProgress: The deployment lifecycle event is in progress.</li>
--   <li>Succeeded: The deployment lifecycle event ran successfully.</li>
--   <li>Failed: The deployment lifecycle event has failed.</li>
--   <li>Skipped: The deployment lifecycle event has been skipped.</li>
--   <li>Unknown: The deployment lifecycle event is unknown.</li>
--   </ul>
lifecycleEvent_status :: Lens' LifecycleEvent (Maybe LifecycleEventStatus)

-- | A timestamp that indicates when the deployment lifecycle event
--   started.
lifecycleEvent_startTime :: Lens' LifecycleEvent (Maybe UTCTime)

-- | A timestamp that indicates when the deployment lifecycle event ended.
lifecycleEvent_endTime :: Lens' LifecycleEvent (Maybe UTCTime)

-- | The deployment lifecycle event name, such as <tt>ApplicationStop</tt>,
--   <tt>BeforeInstall</tt>, <tt>AfterInstall</tt>,
--   <tt>ApplicationStart</tt>, or <tt>ValidateService</tt>.
lifecycleEvent_lifecycleEventName :: Lens' LifecycleEvent (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.LifecycleEvent.LifecycleEvent
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.LifecycleEvent.LifecycleEvent
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.LifecycleEvent.LifecycleEvent
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.LifecycleEvent.LifecycleEvent
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.LifecycleEvent.LifecycleEvent
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.LifecycleEvent.LifecycleEvent
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.LifecycleEvent.LifecycleEvent


module Network.AWS.CodeDeploy.Types.ListStateFilterAction
newtype ListStateFilterAction
ListStateFilterAction' :: Text -> ListStateFilterAction
[fromListStateFilterAction] :: ListStateFilterAction -> Text
pattern ListStateFilterAction_Exclude :: ListStateFilterAction
pattern ListStateFilterAction_Ignore :: ListStateFilterAction
pattern ListStateFilterAction_Include :: ListStateFilterAction
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ListStateFilterAction.ListStateFilterAction


module Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType
newtype MinimumHealthyHostsType
MinimumHealthyHostsType' :: Text -> MinimumHealthyHostsType
[fromMinimumHealthyHostsType] :: MinimumHealthyHostsType -> Text
pattern MinimumHealthyHostsType_FLEET_PERCENT :: MinimumHealthyHostsType
pattern MinimumHealthyHostsType_HOST_COUNT :: MinimumHealthyHostsType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.MinimumHealthyHostsType.MinimumHealthyHostsType


module Network.AWS.CodeDeploy.Types.MinimumHealthyHosts

-- | Information about minimum healthy instance.
--   
--   <i>See:</i> <a>newMinimumHealthyHosts</a> smart constructor.
data MinimumHealthyHosts
MinimumHealthyHosts' :: Maybe Int -> Maybe MinimumHealthyHostsType -> MinimumHealthyHosts

-- | The minimum healthy instance value.
[$sel:value:MinimumHealthyHosts'] :: MinimumHealthyHosts -> Maybe Int

-- | The minimum healthy instance type:
--   
--   <ul>
--   <li><tt>HOST_COUNT</tt>: The minimum number of healthy instances as an
--   absolute value.</li>
--   <li><tt>FLEET_PERCENT</tt>: The minimum number of healthy instances as
--   a percentage of the total number of instances in the deployment.</li>
--   </ul>
--   
--   In an example of nine instances, if a HOST_COUNT of six is specified,
--   deploy to up to three instances at a time. The deployment is
--   successful if six or more instances are deployed to successfully.
--   Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
--   specified, deploy to up to five instances at a time. The deployment is
--   successful if four or more instances are deployed to successfully.
--   Otherwise, the deployment fails.
--   
--   In a call to the <tt>GetDeploymentConfig</tt>,
--   CodeDeployDefault.OneAtATime returns a minimum healthy instance type
--   of MOST_CONCURRENCY and a value of 1. This means a deployment to only
--   one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
--   only to HOST_COUNT or FLEET_PERCENT.) In addition, with
--   CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that
--   all instances but one are kept in a healthy state during the
--   deployment. Although this allows one instance at a time to be taken
--   offline for a new deployment, it also means that if the deployment to
--   the last instance fails, the overall deployment is still successful.
--   
--   For more information, see <a>AWS CodeDeploy Instance Health</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
[$sel:type':MinimumHealthyHosts'] :: MinimumHealthyHosts -> Maybe MinimumHealthyHostsType

-- | Create a value of <a>MinimumHealthyHosts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:MinimumHealthyHosts'</a>,
--   <a>minimumHealthyHosts_value</a> - The minimum healthy instance value.
--   
--   <a>$sel:type':MinimumHealthyHosts'</a>,
--   <a>minimumHealthyHosts_type</a> - The minimum healthy instance type:
--   
--   <ul>
--   <li><tt>HOST_COUNT</tt>: The minimum number of healthy instances as an
--   absolute value.</li>
--   <li><tt>FLEET_PERCENT</tt>: The minimum number of healthy instances as
--   a percentage of the total number of instances in the deployment.</li>
--   </ul>
--   
--   In an example of nine instances, if a HOST_COUNT of six is specified,
--   deploy to up to three instances at a time. The deployment is
--   successful if six or more instances are deployed to successfully.
--   Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
--   specified, deploy to up to five instances at a time. The deployment is
--   successful if four or more instances are deployed to successfully.
--   Otherwise, the deployment fails.
--   
--   In a call to the <tt>GetDeploymentConfig</tt>,
--   CodeDeployDefault.OneAtATime returns a minimum healthy instance type
--   of MOST_CONCURRENCY and a value of 1. This means a deployment to only
--   one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
--   only to HOST_COUNT or FLEET_PERCENT.) In addition, with
--   CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that
--   all instances but one are kept in a healthy state during the
--   deployment. Although this allows one instance at a time to be taken
--   offline for a new deployment, it also means that if the deployment to
--   the last instance fails, the overall deployment is still successful.
--   
--   For more information, see <a>AWS CodeDeploy Instance Health</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
newMinimumHealthyHosts :: MinimumHealthyHosts

-- | The minimum healthy instance value.
minimumHealthyHosts_value :: Lens' MinimumHealthyHosts (Maybe Int)

-- | The minimum healthy instance type:
--   
--   <ul>
--   <li><tt>HOST_COUNT</tt>: The minimum number of healthy instances as an
--   absolute value.</li>
--   <li><tt>FLEET_PERCENT</tt>: The minimum number of healthy instances as
--   a percentage of the total number of instances in the deployment.</li>
--   </ul>
--   
--   In an example of nine instances, if a HOST_COUNT of six is specified,
--   deploy to up to three instances at a time. The deployment is
--   successful if six or more instances are deployed to successfully.
--   Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
--   specified, deploy to up to five instances at a time. The deployment is
--   successful if four or more instances are deployed to successfully.
--   Otherwise, the deployment fails.
--   
--   In a call to the <tt>GetDeploymentConfig</tt>,
--   CodeDeployDefault.OneAtATime returns a minimum healthy instance type
--   of MOST_CONCURRENCY and a value of 1. This means a deployment to only
--   one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
--   only to HOST_COUNT or FLEET_PERCENT.) In addition, with
--   CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that
--   all instances but one are kept in a healthy state during the
--   deployment. Although this allows one instance at a time to be taken
--   offline for a new deployment, it also means that if the deployment to
--   the last instance fails, the overall deployment is still successful.
--   
--   For more information, see <a>AWS CodeDeploy Instance Health</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
minimumHealthyHosts_type :: Lens' MinimumHealthyHosts (Maybe MinimumHealthyHostsType)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.MinimumHealthyHosts.MinimumHealthyHosts
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.MinimumHealthyHosts.MinimumHealthyHosts
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.MinimumHealthyHosts.MinimumHealthyHosts
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.MinimumHealthyHosts.MinimumHealthyHosts
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.MinimumHealthyHosts.MinimumHealthyHosts
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.MinimumHealthyHosts.MinimumHealthyHosts
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.MinimumHealthyHosts.MinimumHealthyHosts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.MinimumHealthyHosts.MinimumHealthyHosts


module Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy
newtype OutdatedInstancesStrategy
OutdatedInstancesStrategy' :: Text -> OutdatedInstancesStrategy
[fromOutdatedInstancesStrategy] :: OutdatedInstancesStrategy -> Text
pattern OutdatedInstancesStrategy_IGNORE :: OutdatedInstancesStrategy
pattern OutdatedInstancesStrategy_UPDATE :: OutdatedInstancesStrategy
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.OutdatedInstancesStrategy.OutdatedInstancesStrategy


module Network.AWS.CodeDeploy.Types.RawString

-- | A revision for an AWS Lambda deployment that is a YAML-formatted or
--   JSON-formatted string. For AWS Lambda deployments, the revision is the
--   same as the AppSpec file.
--   
--   <i>See:</i> <a>newRawString</a> smart constructor.
data RawString
RawString' :: Maybe Text -> Maybe Text -> RawString

-- | The YAML-formatted or JSON-formatted revision string. It includes
--   information about which Lambda function to update and optional Lambda
--   functions that validate deployment lifecycle events.
[$sel:content:RawString'] :: RawString -> Maybe Text

-- | The SHA256 hash value of the revision content.
[$sel:sha256:RawString'] :: RawString -> Maybe Text

-- | Create a value of <a>RawString</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:RawString'</a>, <a>rawString_content</a> - The
--   YAML-formatted or JSON-formatted revision string. It includes
--   information about which Lambda function to update and optional Lambda
--   functions that validate deployment lifecycle events.
--   
--   <a>$sel:sha256:RawString'</a>, <a>rawString_sha256</a> - The SHA256
--   hash value of the revision content.
newRawString :: RawString

-- | The YAML-formatted or JSON-formatted revision string. It includes
--   information about which Lambda function to update and optional Lambda
--   functions that validate deployment lifecycle events.
rawString_content :: Lens' RawString (Maybe Text)

-- | The SHA256 hash value of the revision content.
rawString_sha256 :: Lens' RawString (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.RawString.RawString
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.RawString.RawString
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.RawString.RawString
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.RawString.RawString
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.RawString.RawString
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.RawString.RawString
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.RawString.RawString
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.RawString.RawString


module Network.AWS.CodeDeploy.Types.RegistrationStatus
newtype RegistrationStatus
RegistrationStatus' :: Text -> RegistrationStatus
[fromRegistrationStatus] :: RegistrationStatus -> Text
pattern RegistrationStatus_Deregistered :: RegistrationStatus
pattern RegistrationStatus_Registered :: RegistrationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.RegistrationStatus.RegistrationStatus


module Network.AWS.CodeDeploy.Types.RelatedDeployments

-- | Information about deployments related to the specified deployment.
--   
--   <i>See:</i> <a>newRelatedDeployments</a> smart constructor.
data RelatedDeployments
RelatedDeployments' :: Maybe Text -> Maybe [Text] -> RelatedDeployments

-- | The deployment ID of the root deployment that triggered this
--   deployment.
[$sel:autoUpdateOutdatedInstancesRootDeploymentId:RelatedDeployments'] :: RelatedDeployments -> Maybe Text

-- | The deployment IDs of 'auto-update outdated instances' deployments
--   triggered by this deployment.
[$sel:autoUpdateOutdatedInstancesDeploymentIds:RelatedDeployments'] :: RelatedDeployments -> Maybe [Text]

-- | Create a value of <a>RelatedDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoUpdateOutdatedInstancesRootDeploymentId:RelatedDeployments'</a>,
--   <a>relatedDeployments_autoUpdateOutdatedInstancesRootDeploymentId</a>
--   - The deployment ID of the root deployment that triggered this
--   deployment.
--   
--   
--   <a>$sel:autoUpdateOutdatedInstancesDeploymentIds:RelatedDeployments'</a>,
--   <a>relatedDeployments_autoUpdateOutdatedInstancesDeploymentIds</a> -
--   The deployment IDs of 'auto-update outdated instances' deployments
--   triggered by this deployment.
newRelatedDeployments :: RelatedDeployments

-- | The deployment ID of the root deployment that triggered this
--   deployment.
relatedDeployments_autoUpdateOutdatedInstancesRootDeploymentId :: Lens' RelatedDeployments (Maybe Text)

-- | The deployment IDs of 'auto-update outdated instances' deployments
--   triggered by this deployment.
relatedDeployments_autoUpdateOutdatedInstancesDeploymentIds :: Lens' RelatedDeployments (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.RelatedDeployments.RelatedDeployments
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.RelatedDeployments.RelatedDeployments
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.RelatedDeployments.RelatedDeployments
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.RelatedDeployments.RelatedDeployments
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.RelatedDeployments.RelatedDeployments
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.RelatedDeployments.RelatedDeployments
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.RelatedDeployments.RelatedDeployments


module Network.AWS.CodeDeploy.Types.RevisionLocationType
newtype RevisionLocationType
RevisionLocationType' :: Text -> RevisionLocationType
[fromRevisionLocationType] :: RevisionLocationType -> Text
pattern RevisionLocationType_AppSpecContent :: RevisionLocationType
pattern RevisionLocationType_GitHub :: RevisionLocationType
pattern RevisionLocationType_S3 :: RevisionLocationType
pattern RevisionLocationType_String :: RevisionLocationType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.RevisionLocationType.RevisionLocationType


module Network.AWS.CodeDeploy.Types.RollbackInfo

-- | Information about a deployment rollback.
--   
--   <i>See:</i> <a>newRollbackInfo</a> smart constructor.
data RollbackInfo
RollbackInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> RollbackInfo

-- | Information that describes the status of a deployment rollback (for
--   example, whether the deployment can't be rolled back, is in progress,
--   failed, or succeeded).
[$sel:rollbackMessage:RollbackInfo'] :: RollbackInfo -> Maybe Text

-- | The deployment ID of the deployment that was underway and triggered a
--   rollback deployment because it failed or was stopped.
[$sel:rollbackTriggeringDeploymentId:RollbackInfo'] :: RollbackInfo -> Maybe Text

-- | The ID of the deployment rollback.
[$sel:rollbackDeploymentId:RollbackInfo'] :: RollbackInfo -> Maybe Text

-- | Create a value of <a>RollbackInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rollbackMessage:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackMessage</a> - Information that describes the
--   status of a deployment rollback (for example, whether the deployment
--   can't be rolled back, is in progress, failed, or succeeded).
--   
--   <a>$sel:rollbackTriggeringDeploymentId:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackTriggeringDeploymentId</a> - The deployment ID
--   of the deployment that was underway and triggered a rollback
--   deployment because it failed or was stopped.
--   
--   <a>$sel:rollbackDeploymentId:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackDeploymentId</a> - The ID of the deployment
--   rollback.
newRollbackInfo :: RollbackInfo

-- | Information that describes the status of a deployment rollback (for
--   example, whether the deployment can't be rolled back, is in progress,
--   failed, or succeeded).
rollbackInfo_rollbackMessage :: Lens' RollbackInfo (Maybe Text)

-- | The deployment ID of the deployment that was underway and triggered a
--   rollback deployment because it failed or was stopped.
rollbackInfo_rollbackTriggeringDeploymentId :: Lens' RollbackInfo (Maybe Text)

-- | The ID of the deployment rollback.
rollbackInfo_rollbackDeploymentId :: Lens' RollbackInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.RollbackInfo.RollbackInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.RollbackInfo.RollbackInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.RollbackInfo.RollbackInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.RollbackInfo.RollbackInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.RollbackInfo.RollbackInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.RollbackInfo.RollbackInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.RollbackInfo.RollbackInfo


module Network.AWS.CodeDeploy.Types.S3Location

-- | Information about the location of application artifacts stored in
--   Amazon S3.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> Maybe BundleType -> Maybe Text -> Maybe Text -> S3Location

-- | The name of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
[$sel:key:S3Location'] :: S3Location -> Maybe Text

-- | The ETag of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object is skipped.
[$sel:eTag:S3Location'] :: S3Location -> Maybe Text

-- | The file type of the application revision. Must be one of the
--   following:
--   
--   <ul>
--   <li><tt>tar</tt>: A tar archive file.</li>
--   <li><tt>tgz</tt>: A compressed tar archive file.</li>
--   <li><tt>zip</tt>: A zip archive file.</li>
--   </ul>
[$sel:bundleType:S3Location'] :: S3Location -> Maybe BundleType

-- | A specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system uses the most recent
--   version by default.
[$sel:version:S3Location'] :: S3Location -> Maybe Text

-- | The name of the Amazon S3 bucket where the application revision is
--   stored.
[$sel:bucket:S3Location'] :: S3Location -> Maybe Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The name of the
--   Amazon S3 object that represents the bundled artifacts for the
--   application revision.
--   
--   <a>$sel:eTag:S3Location'</a>, <a>s3Location_eTag</a> - The ETag of the
--   Amazon S3 object that represents the bundled artifacts for the
--   application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object is skipped.
--   
--   <a>$sel:bundleType:S3Location'</a>, <a>s3Location_bundleType</a> - The
--   file type of the application revision. Must be one of the following:
--   
--   <ul>
--   <li><tt>tar</tt>: A tar archive file.</li>
--   <li><tt>tgz</tt>: A compressed tar archive file.</li>
--   <li><tt>zip</tt>: A zip archive file.</li>
--   </ul>
--   
--   <a>$sel:version:S3Location'</a>, <a>s3Location_version</a> - A
--   specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system uses the most recent
--   version by default.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The name of
--   the Amazon S3 bucket where the application revision is stored.
newS3Location :: S3Location

-- | The name of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The ETag of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object is skipped.
s3Location_eTag :: Lens' S3Location (Maybe Text)

-- | The file type of the application revision. Must be one of the
--   following:
--   
--   <ul>
--   <li><tt>tar</tt>: A tar archive file.</li>
--   <li><tt>tgz</tt>: A compressed tar archive file.</li>
--   <li><tt>zip</tt>: A zip archive file.</li>
--   </ul>
s3Location_bundleType :: Lens' S3Location (Maybe BundleType)

-- | A specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system uses the most recent
--   version by default.
s3Location_version :: Lens' S3Location (Maybe Text)

-- | The name of the Amazon S3 bucket where the application revision is
--   stored.
s3Location_bucket :: Lens' S3Location (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.S3Location.S3Location
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.S3Location.S3Location
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.S3Location.S3Location
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.S3Location.S3Location
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.S3Location.S3Location
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.S3Location.S3Location
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.S3Location.S3Location
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.S3Location.S3Location


module Network.AWS.CodeDeploy.Types.RevisionLocation

-- | Information about the location of an application revision.
--   
--   <i>See:</i> <a>newRevisionLocation</a> smart constructor.
data RevisionLocation
RevisionLocation' :: Maybe RevisionLocationType -> Maybe S3Location -> Maybe AppSpecContent -> Maybe GitHubLocation -> Maybe RawString -> RevisionLocation

-- | The type of application revision:
--   
--   <ul>
--   <li>S3: An application revision stored in Amazon S3.</li>
--   <li>GitHub: An application revision stored in GitHub (EC2/On-premises
--   deployments only).</li>
--   <li>String: A YAML-formatted or JSON-formatted string (AWS Lambda
--   deployments only).</li>
--   <li>AppSpecContent: An <tt>AppSpecContent</tt> object that contains
--   the contents of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML stored as a
--   RawString.</li>
--   </ul>
[$sel:revisionType:RevisionLocation'] :: RevisionLocation -> Maybe RevisionLocationType

-- | Information about the location of a revision stored in Amazon S3.
[$sel:s3Location:RevisionLocation'] :: RevisionLocation -> Maybe S3Location

-- | The content of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML and stored as a
--   RawString.
[$sel:appSpecContent:RevisionLocation'] :: RevisionLocation -> Maybe AppSpecContent

-- | Information about the location of application artifacts stored in
--   GitHub.
[$sel:gitHubLocation:RevisionLocation'] :: RevisionLocation -> Maybe GitHubLocation

-- | Information about the location of an AWS Lambda deployment revision
--   stored as a RawString.
[$sel:string:RevisionLocation'] :: RevisionLocation -> Maybe RawString

-- | Create a value of <a>RevisionLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionType:RevisionLocation'</a>,
--   <a>revisionLocation_revisionType</a> - The type of application
--   revision:
--   
--   <ul>
--   <li>S3: An application revision stored in Amazon S3.</li>
--   <li>GitHub: An application revision stored in GitHub (EC2/On-premises
--   deployments only).</li>
--   <li>String: A YAML-formatted or JSON-formatted string (AWS Lambda
--   deployments only).</li>
--   <li>AppSpecContent: An <tt>AppSpecContent</tt> object that contains
--   the contents of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML stored as a
--   RawString.</li>
--   </ul>
--   
--   <a>$sel:s3Location:RevisionLocation'</a>,
--   <a>revisionLocation_s3Location</a> - Information about the location of
--   a revision stored in Amazon S3.
--   
--   <a>$sel:appSpecContent:RevisionLocation'</a>,
--   <a>revisionLocation_appSpecContent</a> - The content of an AppSpec
--   file for an AWS Lambda or Amazon ECS deployment. The content is
--   formatted as JSON or YAML and stored as a RawString.
--   
--   <a>$sel:gitHubLocation:RevisionLocation'</a>,
--   <a>revisionLocation_gitHubLocation</a> - Information about the
--   location of application artifacts stored in GitHub.
--   
--   <a>$sel:string:RevisionLocation'</a>, <a>revisionLocation_string</a> -
--   Information about the location of an AWS Lambda deployment revision
--   stored as a RawString.
newRevisionLocation :: RevisionLocation

-- | The type of application revision:
--   
--   <ul>
--   <li>S3: An application revision stored in Amazon S3.</li>
--   <li>GitHub: An application revision stored in GitHub (EC2/On-premises
--   deployments only).</li>
--   <li>String: A YAML-formatted or JSON-formatted string (AWS Lambda
--   deployments only).</li>
--   <li>AppSpecContent: An <tt>AppSpecContent</tt> object that contains
--   the contents of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML stored as a
--   RawString.</li>
--   </ul>
revisionLocation_revisionType :: Lens' RevisionLocation (Maybe RevisionLocationType)

-- | Information about the location of a revision stored in Amazon S3.
revisionLocation_s3Location :: Lens' RevisionLocation (Maybe S3Location)

-- | The content of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML and stored as a
--   RawString.
revisionLocation_appSpecContent :: Lens' RevisionLocation (Maybe AppSpecContent)

-- | Information about the location of application artifacts stored in
--   GitHub.
revisionLocation_gitHubLocation :: Lens' RevisionLocation (Maybe GitHubLocation)

-- | Information about the location of an AWS Lambda deployment revision
--   stored as a RawString.
revisionLocation_string :: Lens' RevisionLocation (Maybe RawString)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.RevisionLocation.RevisionLocation
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.RevisionLocation.RevisionLocation
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.RevisionLocation.RevisionLocation
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.RevisionLocation.RevisionLocation
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.RevisionLocation.RevisionLocation
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.RevisionLocation.RevisionLocation
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.RevisionLocation.RevisionLocation
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.RevisionLocation.RevisionLocation


module Network.AWS.CodeDeploy.Types.RevisionInfo

-- | Information about an application revision.
--   
--   <i>See:</i> <a>newRevisionInfo</a> smart constructor.
data RevisionInfo
RevisionInfo' :: Maybe GenericRevisionInfo -> Maybe RevisionLocation -> RevisionInfo

-- | Information about an application revision, including usage details and
--   associated deployment groups.
[$sel:genericRevisionInfo:RevisionInfo'] :: RevisionInfo -> Maybe GenericRevisionInfo

-- | Information about the location and type of an application revision.
[$sel:revisionLocation:RevisionInfo'] :: RevisionInfo -> Maybe RevisionLocation

-- | Create a value of <a>RevisionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:genericRevisionInfo:RevisionInfo'</a>,
--   <a>revisionInfo_genericRevisionInfo</a> - Information about an
--   application revision, including usage details and associated
--   deployment groups.
--   
--   <a>$sel:revisionLocation:RevisionInfo'</a>,
--   <a>revisionInfo_revisionLocation</a> - Information about the location
--   and type of an application revision.
newRevisionInfo :: RevisionInfo

-- | Information about an application revision, including usage details and
--   associated deployment groups.
revisionInfo_genericRevisionInfo :: Lens' RevisionInfo (Maybe GenericRevisionInfo)

-- | Information about the location and type of an application revision.
revisionInfo_revisionLocation :: Lens' RevisionInfo (Maybe RevisionLocation)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.RevisionInfo.RevisionInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.RevisionInfo.RevisionInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.RevisionInfo.RevisionInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.RevisionInfo.RevisionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.RevisionInfo.RevisionInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.RevisionInfo.RevisionInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.RevisionInfo.RevisionInfo


module Network.AWS.CodeDeploy.Types.SortOrder
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Ascending :: SortOrder
pattern SortOrder_Descending :: SortOrder
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.SortOrder.SortOrder
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.SortOrder.SortOrder


module Network.AWS.CodeDeploy.Types.StopStatus
newtype StopStatus
StopStatus' :: Text -> StopStatus
[fromStopStatus] :: StopStatus -> Text
pattern StopStatus_Pending :: StopStatus
pattern StopStatus_Succeeded :: StopStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.StopStatus.StopStatus
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.StopStatus.StopStatus


module Network.AWS.CodeDeploy.Types.Tag

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Tag

-- | The tag's key.
tag_key :: Lens' Tag (Maybe Text)

-- | The tag's value.
tag_value :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.Tag.Tag


module Network.AWS.CodeDeploy.Types.InstanceInfo

-- | Information about an on-premises instance.
--   
--   <i>See:</i> <a>newInstanceInfo</a> smart constructor.
data InstanceInfo
InstanceInfo' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe POSIX -> InstanceInfo

-- | The time at which the on-premises instance was registered.
[$sel:registerTime:InstanceInfo'] :: InstanceInfo -> Maybe POSIX

-- | The IAM user ARN associated with the on-premises instance.
[$sel:iamUserArn:InstanceInfo'] :: InstanceInfo -> Maybe Text

-- | The name of the on-premises instance.
[$sel:instanceName:InstanceInfo'] :: InstanceInfo -> Maybe Text

-- | The ARN of the on-premises instance.
[$sel:instanceArn:InstanceInfo'] :: InstanceInfo -> Maybe Text

-- | The tags currently associated with the on-premises instance.
[$sel:tags:InstanceInfo'] :: InstanceInfo -> Maybe [Tag]

-- | The ARN of the IAM session associated with the on-premises instance.
[$sel:iamSessionArn:InstanceInfo'] :: InstanceInfo -> Maybe Text

-- | If the on-premises instance was deregistered, the time at which the
--   on-premises instance was deregistered.
[$sel:deregisterTime:InstanceInfo'] :: InstanceInfo -> Maybe POSIX

-- | Create a value of <a>InstanceInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registerTime:InstanceInfo'</a>,
--   <a>instanceInfo_registerTime</a> - The time at which the on-premises
--   instance was registered.
--   
--   <a>$sel:iamUserArn:InstanceInfo'</a>, <a>instanceInfo_iamUserArn</a> -
--   The IAM user ARN associated with the on-premises instance.
--   
--   <a>$sel:instanceName:InstanceInfo'</a>,
--   <a>instanceInfo_instanceName</a> - The name of the on-premises
--   instance.
--   
--   <a>$sel:instanceArn:InstanceInfo'</a>, <a>instanceInfo_instanceArn</a>
--   - The ARN of the on-premises instance.
--   
--   <a>$sel:tags:InstanceInfo'</a>, <a>instanceInfo_tags</a> - The tags
--   currently associated with the on-premises instance.
--   
--   <a>$sel:iamSessionArn:InstanceInfo'</a>,
--   <a>instanceInfo_iamSessionArn</a> - The ARN of the IAM session
--   associated with the on-premises instance.
--   
--   <a>$sel:deregisterTime:InstanceInfo'</a>,
--   <a>instanceInfo_deregisterTime</a> - If the on-premises instance was
--   deregistered, the time at which the on-premises instance was
--   deregistered.
newInstanceInfo :: InstanceInfo

-- | The time at which the on-premises instance was registered.
instanceInfo_registerTime :: Lens' InstanceInfo (Maybe UTCTime)

-- | The IAM user ARN associated with the on-premises instance.
instanceInfo_iamUserArn :: Lens' InstanceInfo (Maybe Text)

-- | The name of the on-premises instance.
instanceInfo_instanceName :: Lens' InstanceInfo (Maybe Text)

-- | The ARN of the on-premises instance.
instanceInfo_instanceArn :: Lens' InstanceInfo (Maybe Text)

-- | The tags currently associated with the on-premises instance.
instanceInfo_tags :: Lens' InstanceInfo (Maybe [Tag])

-- | The ARN of the IAM session associated with the on-premises instance.
instanceInfo_iamSessionArn :: Lens' InstanceInfo (Maybe Text)

-- | If the on-premises instance was deregistered, the time at which the
--   on-premises instance was deregistered.
instanceInfo_deregisterTime :: Lens' InstanceInfo (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.InstanceInfo.InstanceInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.InstanceInfo.InstanceInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.InstanceInfo.InstanceInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.InstanceInfo.InstanceInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.InstanceInfo.InstanceInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.InstanceInfo.InstanceInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.InstanceInfo.InstanceInfo


module Network.AWS.CodeDeploy.Types.TagFilterType
newtype TagFilterType
TagFilterType' :: Text -> TagFilterType
[fromTagFilterType] :: TagFilterType -> Text
pattern TagFilterType_KEY_AND_VALUE :: TagFilterType
pattern TagFilterType_KEY_ONLY :: TagFilterType
pattern TagFilterType_VALUE_ONLY :: TagFilterType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TagFilterType.TagFilterType


module Network.AWS.CodeDeploy.Types.TagFilter

-- | Information about an on-premises instance tag filter.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe Text -> Maybe TagFilterType -> TagFilter

-- | The on-premises instance tag filter key.
[$sel:key:TagFilter'] :: TagFilter -> Maybe Text

-- | The on-premises instance tag filter value.
[$sel:value:TagFilter'] :: TagFilter -> Maybe Text

-- | The on-premises instance tag filter type:
--   
--   <ul>
--   <li>KEY_ONLY: Key only.</li>
--   <li>VALUE_ONLY: Value only.</li>
--   <li>KEY_AND_VALUE: Key and value.</li>
--   </ul>
[$sel:type':TagFilter'] :: TagFilter -> Maybe TagFilterType

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - The on-premises
--   instance tag filter key.
--   
--   <a>$sel:value:TagFilter'</a>, <a>tagFilter_value</a> - The on-premises
--   instance tag filter value.
--   
--   <a>$sel:type':TagFilter'</a>, <a>tagFilter_type</a> - The on-premises
--   instance tag filter type:
--   
--   <ul>
--   <li>KEY_ONLY: Key only.</li>
--   <li>VALUE_ONLY: Value only.</li>
--   <li>KEY_AND_VALUE: Key and value.</li>
--   </ul>
newTagFilter :: TagFilter

-- | The on-premises instance tag filter key.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | The on-premises instance tag filter value.
tagFilter_value :: Lens' TagFilter (Maybe Text)

-- | The on-premises instance tag filter type:
--   
--   <ul>
--   <li>KEY_ONLY: Key only.</li>
--   <li>VALUE_ONLY: Value only.</li>
--   <li>KEY_AND_VALUE: Key and value.</li>
--   </ul>
tagFilter_type :: Lens' TagFilter (Maybe TagFilterType)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TagFilter.TagFilter
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TagFilter.TagFilter
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TagFilter.TagFilter
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TagFilter.TagFilter
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TagFilter.TagFilter
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TagFilter.TagFilter
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TagFilter.TagFilter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TagFilter.TagFilter


module Network.AWS.CodeDeploy.Types.OnPremisesTagSet

-- | Information about groups of on-premises instance tags.
--   
--   <i>See:</i> <a>newOnPremisesTagSet</a> smart constructor.
data OnPremisesTagSet
OnPremisesTagSet' :: Maybe [[TagFilter]] -> OnPremisesTagSet

-- | A list that contains other lists of on-premises instance tag groups.
--   For an instance to be included in the deployment group, it must be
--   identified by all of the tag groups in the list.
[$sel:onPremisesTagSetList:OnPremisesTagSet'] :: OnPremisesTagSet -> Maybe [[TagFilter]]

-- | Create a value of <a>OnPremisesTagSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSetList:OnPremisesTagSet'</a>,
--   <a>onPremisesTagSet_onPremisesTagSetList</a> - A list that contains
--   other lists of on-premises instance tag groups. For an instance to be
--   included in the deployment group, it must be identified by all of the
--   tag groups in the list.
newOnPremisesTagSet :: OnPremisesTagSet

-- | A list that contains other lists of on-premises instance tag groups.
--   For an instance to be included in the deployment group, it must be
--   identified by all of the tag groups in the list.
onPremisesTagSet_onPremisesTagSetList :: Lens' OnPremisesTagSet (Maybe [[TagFilter]])
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.OnPremisesTagSet.OnPremisesTagSet
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.OnPremisesTagSet.OnPremisesTagSet
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.OnPremisesTagSet.OnPremisesTagSet
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.OnPremisesTagSet.OnPremisesTagSet
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.OnPremisesTagSet.OnPremisesTagSet
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.OnPremisesTagSet.OnPremisesTagSet
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.OnPremisesTagSet.OnPremisesTagSet
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.OnPremisesTagSet.OnPremisesTagSet


module Network.AWS.CodeDeploy.Types.TargetFilterName
newtype TargetFilterName
TargetFilterName' :: Text -> TargetFilterName
[fromTargetFilterName] :: TargetFilterName -> Text
pattern TargetFilterName_ServerInstanceLabel :: TargetFilterName
pattern TargetFilterName_TargetStatus :: TargetFilterName
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TargetFilterName.TargetFilterName


module Network.AWS.CodeDeploy.Types.TargetGroupInfo

-- | Information about a target group in Elastic Load Balancing to use in a
--   deployment. Instances are registered as targets in a target group, and
--   traffic is routed to the target group.
--   
--   <i>See:</i> <a>newTargetGroupInfo</a> smart constructor.
data TargetGroupInfo
TargetGroupInfo' :: Maybe Text -> TargetGroupInfo

-- | For blue/green deployments, the name of the target group that
--   instances in the original environment are deregistered from, and
--   instances in the replacement environment are registered with. For
--   in-place deployments, the name of the target group that instances are
--   deregistered from, so they are not serving traffic during a
--   deployment, and then re-registered with after the deployment is
--   complete.
[$sel:name:TargetGroupInfo'] :: TargetGroupInfo -> Maybe Text

-- | Create a value of <a>TargetGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TargetGroupInfo'</a>, <a>targetGroupInfo_name</a> - For
--   blue/green deployments, the name of the target group that instances in
--   the original environment are deregistered from, and instances in the
--   replacement environment are registered with. For in-place deployments,
--   the name of the target group that instances are deregistered from, so
--   they are not serving traffic during a deployment, and then
--   re-registered with after the deployment is complete.
newTargetGroupInfo :: TargetGroupInfo

-- | For blue/green deployments, the name of the target group that
--   instances in the original environment are deregistered from, and
--   instances in the replacement environment are registered with. For
--   in-place deployments, the name of the target group that instances are
--   deregistered from, so they are not serving traffic during a
--   deployment, and then re-registered with after the deployment is
--   complete.
targetGroupInfo_name :: Lens' TargetGroupInfo (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TargetGroupInfo.TargetGroupInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TargetGroupInfo.TargetGroupInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TargetGroupInfo.TargetGroupInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TargetGroupInfo.TargetGroupInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TargetGroupInfo.TargetGroupInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TargetGroupInfo.TargetGroupInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TargetGroupInfo.TargetGroupInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TargetGroupInfo.TargetGroupInfo


module Network.AWS.CodeDeploy.Types.TargetInstances

-- | Information about the instances to be used in the replacement
--   environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newTargetInstances</a> smart constructor.
data TargetInstances
TargetInstances' :: Maybe [EC2TagFilter] -> Maybe EC2TagSet -> Maybe [Text] -> TargetInstances

-- | The tag filter key, type, and value used to identify Amazon EC2
--   instances in a replacement environment for a blue/green deployment.
--   Cannot be used in the same call as <tt>ec2TagSet</tt>.
[$sel:tagFilters:TargetInstances'] :: TargetInstances -> Maybe [EC2TagFilter]

-- | Information about the groups of EC2 instance tags that an instance
--   must be identified by in order for it to be included in the
--   replacement environment for a blue/green deployment. Cannot be used in
--   the same call as <tt>tagFilters</tt>.
[$sel:ec2TagSet:TargetInstances'] :: TargetInstances -> Maybe EC2TagSet

-- | The names of one or more Auto Scaling groups to identify a replacement
--   environment for a blue/green deployment.
[$sel:autoScalingGroups:TargetInstances'] :: TargetInstances -> Maybe [Text]

-- | Create a value of <a>TargetInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagFilters:TargetInstances'</a>,
--   <a>targetInstances_tagFilters</a> - The tag filter key, type, and
--   value used to identify Amazon EC2 instances in a replacement
--   environment for a blue/green deployment. Cannot be used in the same
--   call as <tt>ec2TagSet</tt>.
--   
--   <a>$sel:ec2TagSet:TargetInstances'</a>,
--   <a>targetInstances_ec2TagSet</a> - Information about the groups of EC2
--   instance tags that an instance must be identified by in order for it
--   to be included in the replacement environment for a blue/green
--   deployment. Cannot be used in the same call as <tt>tagFilters</tt>.
--   
--   <a>$sel:autoScalingGroups:TargetInstances'</a>,
--   <a>targetInstances_autoScalingGroups</a> - The names of one or more
--   Auto Scaling groups to identify a replacement environment for a
--   blue/green deployment.
newTargetInstances :: TargetInstances

-- | The tag filter key, type, and value used to identify Amazon EC2
--   instances in a replacement environment for a blue/green deployment.
--   Cannot be used in the same call as <tt>ec2TagSet</tt>.
targetInstances_tagFilters :: Lens' TargetInstances (Maybe [EC2TagFilter])

-- | Information about the groups of EC2 instance tags that an instance
--   must be identified by in order for it to be included in the
--   replacement environment for a blue/green deployment. Cannot be used in
--   the same call as <tt>tagFilters</tt>.
targetInstances_ec2TagSet :: Lens' TargetInstances (Maybe EC2TagSet)

-- | The names of one or more Auto Scaling groups to identify a replacement
--   environment for a blue/green deployment.
targetInstances_autoScalingGroups :: Lens' TargetInstances (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TargetInstances.TargetInstances
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TargetInstances.TargetInstances
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TargetInstances.TargetInstances
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TargetInstances.TargetInstances
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TargetInstances.TargetInstances
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TargetInstances.TargetInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TargetInstances.TargetInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TargetInstances.TargetInstances


module Network.AWS.CodeDeploy.Types.TargetLabel
newtype TargetLabel
TargetLabel' :: Text -> TargetLabel
[fromTargetLabel] :: TargetLabel -> Text
pattern TargetLabel_Blue :: TargetLabel
pattern TargetLabel_Green :: TargetLabel
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TargetLabel.TargetLabel


module Network.AWS.CodeDeploy.Types.ECSTaskSet

-- | Information about a set of Amazon ECS tasks in an AWS CodeDeploy
--   deployment. An Amazon ECS task set includes details such as the
--   desired number of tasks, how many tasks are running, and whether the
--   task set serves production traffic. An AWS CodeDeploy application that
--   uses the Amazon ECS compute platform deploys a containerized
--   application in an Amazon ECS service as a task set.
--   
--   <i>See:</i> <a>newECSTaskSet</a> smart constructor.
data ECSTaskSet
ECSTaskSet' :: Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe TargetLabel -> Maybe TargetGroupInfo -> Maybe Double -> Maybe Text -> ECSTaskSet

-- | The number of tasks in the task set that are in the <tt>RUNNING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>RUNNING</tt>
--   state is running and ready for use.
[$sel:runningCount:ECSTaskSet'] :: ECSTaskSet -> Maybe Integer

-- | The status of the task set. There are three valid task set statuses:
--   
--   <ul>
--   <li><tt>PRIMARY</tt>: Indicates the task set is serving production
--   traffic.</li>
--   <li><tt>ACTIVE</tt>: Indicates the task set is not serving production
--   traffic.</li>
--   <li><tt>DRAINING</tt>: Indicates the tasks in the task set are being
--   stopped and their corresponding targets are being deregistered from
--   their target group.</li>
--   </ul>
[$sel:status:ECSTaskSet'] :: ECSTaskSet -> Maybe Text

-- | The number of tasks in a task set. During a deployment that uses the
--   Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a
--   new task set and uses this value to determine how many tasks to
--   create. After the updated task set is created, CodeDeploy shifts
--   traffic to the new task set.
[$sel:desiredCount:ECSTaskSet'] :: ECSTaskSet -> Maybe Integer

-- | The number of tasks in the task set that are in the <tt>PENDING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>PENDING</tt>
--   state is preparing to enter the <tt>RUNNING</tt> state. A task set
--   enters the <tt>PENDING</tt> status when it launches for the first
--   time, or when it is restarted after being in the <tt>STOPPED</tt>
--   state.
[$sel:pendingCount:ECSTaskSet'] :: ECSTaskSet -> Maybe Integer

-- | A label that identifies whether the ECS task set is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
[$sel:taskSetLabel:ECSTaskSet'] :: ECSTaskSet -> Maybe TargetLabel

-- | The target group associated with the task set. The target group is
--   used by AWS CodeDeploy to manage traffic to a task set.
[$sel:targetGroup:ECSTaskSet'] :: ECSTaskSet -> Maybe TargetGroupInfo

-- | The percentage of traffic served by this task set.
[$sel:trafficWeight:ECSTaskSet'] :: ECSTaskSet -> Maybe Double

-- | A unique ID of an <tt>ECSTaskSet</tt>.
[$sel:identifer:ECSTaskSet'] :: ECSTaskSet -> Maybe Text

-- | Create a value of <a>ECSTaskSet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runningCount:ECSTaskSet'</a>, <a>eCSTaskSet_runningCount</a> -
--   The number of tasks in the task set that are in the <tt>RUNNING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>RUNNING</tt>
--   state is running and ready for use.
--   
--   <a>$sel:status:ECSTaskSet'</a>, <a>eCSTaskSet_status</a> - The status
--   of the task set. There are three valid task set statuses:
--   
--   <ul>
--   <li><tt>PRIMARY</tt>: Indicates the task set is serving production
--   traffic.</li>
--   <li><tt>ACTIVE</tt>: Indicates the task set is not serving production
--   traffic.</li>
--   <li><tt>DRAINING</tt>: Indicates the tasks in the task set are being
--   stopped and their corresponding targets are being deregistered from
--   their target group.</li>
--   </ul>
--   
--   <a>$sel:desiredCount:ECSTaskSet'</a>, <a>eCSTaskSet_desiredCount</a> -
--   The number of tasks in a task set. During a deployment that uses the
--   Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a
--   new task set and uses this value to determine how many tasks to
--   create. After the updated task set is created, CodeDeploy shifts
--   traffic to the new task set.
--   
--   <a>$sel:pendingCount:ECSTaskSet'</a>, <a>eCSTaskSet_pendingCount</a> -
--   The number of tasks in the task set that are in the <tt>PENDING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>PENDING</tt>
--   state is preparing to enter the <tt>RUNNING</tt> state. A task set
--   enters the <tt>PENDING</tt> status when it launches for the first
--   time, or when it is restarted after being in the <tt>STOPPED</tt>
--   state.
--   
--   <a>$sel:taskSetLabel:ECSTaskSet'</a>, <a>eCSTaskSet_taskSetLabel</a> -
--   A label that identifies whether the ECS task set is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
--   
--   <a>$sel:targetGroup:ECSTaskSet'</a>, <a>eCSTaskSet_targetGroup</a> -
--   The target group associated with the task set. The target group is
--   used by AWS CodeDeploy to manage traffic to a task set.
--   
--   <a>$sel:trafficWeight:ECSTaskSet'</a>, <a>eCSTaskSet_trafficWeight</a>
--   - The percentage of traffic served by this task set.
--   
--   <a>$sel:identifer:ECSTaskSet'</a>, <a>eCSTaskSet_identifer</a> - A
--   unique ID of an <tt>ECSTaskSet</tt>.
newECSTaskSet :: ECSTaskSet

-- | The number of tasks in the task set that are in the <tt>RUNNING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>RUNNING</tt>
--   state is running and ready for use.
eCSTaskSet_runningCount :: Lens' ECSTaskSet (Maybe Integer)

-- | The status of the task set. There are three valid task set statuses:
--   
--   <ul>
--   <li><tt>PRIMARY</tt>: Indicates the task set is serving production
--   traffic.</li>
--   <li><tt>ACTIVE</tt>: Indicates the task set is not serving production
--   traffic.</li>
--   <li><tt>DRAINING</tt>: Indicates the tasks in the task set are being
--   stopped and their corresponding targets are being deregistered from
--   their target group.</li>
--   </ul>
eCSTaskSet_status :: Lens' ECSTaskSet (Maybe Text)

-- | The number of tasks in a task set. During a deployment that uses the
--   Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a
--   new task set and uses this value to determine how many tasks to
--   create. After the updated task set is created, CodeDeploy shifts
--   traffic to the new task set.
eCSTaskSet_desiredCount :: Lens' ECSTaskSet (Maybe Integer)

-- | The number of tasks in the task set that are in the <tt>PENDING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>PENDING</tt>
--   state is preparing to enter the <tt>RUNNING</tt> state. A task set
--   enters the <tt>PENDING</tt> status when it launches for the first
--   time, or when it is restarted after being in the <tt>STOPPED</tt>
--   state.
eCSTaskSet_pendingCount :: Lens' ECSTaskSet (Maybe Integer)

-- | A label that identifies whether the ECS task set is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
eCSTaskSet_taskSetLabel :: Lens' ECSTaskSet (Maybe TargetLabel)

-- | The target group associated with the task set. The target group is
--   used by AWS CodeDeploy to manage traffic to a task set.
eCSTaskSet_targetGroup :: Lens' ECSTaskSet (Maybe TargetGroupInfo)

-- | The percentage of traffic served by this task set.
eCSTaskSet_trafficWeight :: Lens' ECSTaskSet (Maybe Double)

-- | A unique ID of an <tt>ECSTaskSet</tt>.
eCSTaskSet_identifer :: Lens' ECSTaskSet (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ECSTaskSet.ECSTaskSet
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ECSTaskSet.ECSTaskSet
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ECSTaskSet.ECSTaskSet
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ECSTaskSet.ECSTaskSet
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ECSTaskSet.ECSTaskSet
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ECSTaskSet.ECSTaskSet
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ECSTaskSet.ECSTaskSet


module Network.AWS.CodeDeploy.Types.TargetStatus
newtype TargetStatus
TargetStatus' :: Text -> TargetStatus
[fromTargetStatus] :: TargetStatus -> Text
pattern TargetStatus_Failed :: TargetStatus
pattern TargetStatus_InProgress :: TargetStatus
pattern TargetStatus_Pending :: TargetStatus
pattern TargetStatus_Ready :: TargetStatus
pattern TargetStatus_Skipped :: TargetStatus
pattern TargetStatus_Succeeded :: TargetStatus
pattern TargetStatus_Unknown :: TargetStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TargetStatus.TargetStatus


module Network.AWS.CodeDeploy.Types.LambdaTarget

-- | Information about the target AWS Lambda function during an AWS Lambda
--   deployment.
--   
--   <i>See:</i> <a>newLambdaTarget</a> smart constructor.
data LambdaTarget
LambdaTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe LambdaFunctionInfo -> Maybe POSIX -> LambdaTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>lambdaTarget</tt>.
[$sel:targetId:LambdaTarget'] :: LambdaTarget -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:LambdaTarget'] :: LambdaTarget -> Maybe Text

-- | The status an AWS Lambda deployment's target Lambda function.
[$sel:status:LambdaTarget'] :: LambdaTarget -> Maybe TargetStatus

-- | The Amazon Resource Name (ARN) of the target.
[$sel:targetArn:LambdaTarget'] :: LambdaTarget -> Maybe Text

-- | The lifecycle events of the deployment to this target Lambda function.
[$sel:lifecycleEvents:LambdaTarget'] :: LambdaTarget -> Maybe [LifecycleEvent]

-- | A <tt>LambdaFunctionInfo</tt> object that describes a target Lambda
--   function.
[$sel:lambdaFunctionInfo:LambdaTarget'] :: LambdaTarget -> Maybe LambdaFunctionInfo

-- | The date and time when the target Lambda function was updated by a
--   deployment.
[$sel:lastUpdatedAt:LambdaTarget'] :: LambdaTarget -> Maybe POSIX

-- | Create a value of <a>LambdaTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:LambdaTarget'</a>, <a>lambdaTarget_targetId</a> - The
--   unique ID of a deployment target that has a type of
--   <tt>lambdaTarget</tt>.
--   
--   <a>$sel:deploymentId:LambdaTarget'</a>,
--   <a>lambdaTarget_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:LambdaTarget'</a>, <a>lambdaTarget_status</a> - The
--   status an AWS Lambda deployment's target Lambda function.
--   
--   <a>$sel:targetArn:LambdaTarget'</a>, <a>lambdaTarget_targetArn</a> -
--   The Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:LambdaTarget'</a>,
--   <a>lambdaTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target Lambda function.
--   
--   <a>$sel:lambdaFunctionInfo:LambdaTarget'</a>,
--   <a>lambdaTarget_lambdaFunctionInfo</a> - A <tt>LambdaFunctionInfo</tt>
--   object that describes a target Lambda function.
--   
--   <a>$sel:lastUpdatedAt:LambdaTarget'</a>,
--   <a>lambdaTarget_lastUpdatedAt</a> - The date and time when the target
--   Lambda function was updated by a deployment.
newLambdaTarget :: LambdaTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>lambdaTarget</tt>.
lambdaTarget_targetId :: Lens' LambdaTarget (Maybe Text)

-- | The unique ID of a deployment.
lambdaTarget_deploymentId :: Lens' LambdaTarget (Maybe Text)

-- | The status an AWS Lambda deployment's target Lambda function.
lambdaTarget_status :: Lens' LambdaTarget (Maybe TargetStatus)

-- | The Amazon Resource Name (ARN) of the target.
lambdaTarget_targetArn :: Lens' LambdaTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target Lambda function.
lambdaTarget_lifecycleEvents :: Lens' LambdaTarget (Maybe [LifecycleEvent])

-- | A <tt>LambdaFunctionInfo</tt> object that describes a target Lambda
--   function.
lambdaTarget_lambdaFunctionInfo :: Lens' LambdaTarget (Maybe LambdaFunctionInfo)

-- | The date and time when the target Lambda function was updated by a
--   deployment.
lambdaTarget_lastUpdatedAt :: Lens' LambdaTarget (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.LambdaTarget.LambdaTarget
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.LambdaTarget.LambdaTarget
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.LambdaTarget.LambdaTarget
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.LambdaTarget.LambdaTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.LambdaTarget.LambdaTarget
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.LambdaTarget.LambdaTarget
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.LambdaTarget.LambdaTarget


module Network.AWS.CodeDeploy.Types.InstanceTarget

-- | A target Amazon EC2 or on-premises instance during a deployment that
--   uses the EC2/On-premises compute platform.
--   
--   <i>See:</i> <a>newInstanceTarget</a> smart constructor.
data InstanceTarget
InstanceTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe TargetLabel -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> InstanceTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>instanceTarget</tt>.
[$sel:targetId:InstanceTarget'] :: InstanceTarget -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:InstanceTarget'] :: InstanceTarget -> Maybe Text

-- | The status an EC2/On-premises deployment's target instance.
[$sel:status:InstanceTarget'] :: InstanceTarget -> Maybe TargetStatus

-- | A label that identifies whether the instance is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
[$sel:instanceLabel:InstanceTarget'] :: InstanceTarget -> Maybe TargetLabel

-- | The Amazon Resource Name (ARN) of the target.
[$sel:targetArn:InstanceTarget'] :: InstanceTarget -> Maybe Text

-- | The lifecycle events of the deployment to this target instance.
[$sel:lifecycleEvents:InstanceTarget'] :: InstanceTarget -> Maybe [LifecycleEvent]

-- | The date and time when the target instance was updated by a
--   deployment.
[$sel:lastUpdatedAt:InstanceTarget'] :: InstanceTarget -> Maybe POSIX

-- | Create a value of <a>InstanceTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:InstanceTarget'</a>, <a>instanceTarget_targetId</a> -
--   The unique ID of a deployment target that has a type of
--   <tt>instanceTarget</tt>.
--   
--   <a>$sel:deploymentId:InstanceTarget'</a>,
--   <a>instanceTarget_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:InstanceTarget'</a>, <a>instanceTarget_status</a> - The
--   status an EC2/On-premises deployment's target instance.
--   
--   <a>$sel:instanceLabel:InstanceTarget'</a>,
--   <a>instanceTarget_instanceLabel</a> - A label that identifies whether
--   the instance is an original target (<tt>BLUE</tt>) or a replacement
--   target (<tt>GREEN</tt>).
--   
--   <a>$sel:targetArn:InstanceTarget'</a>, <a>instanceTarget_targetArn</a>
--   - The Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:InstanceTarget'</a>,
--   <a>instanceTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target instance.
--   
--   <a>$sel:lastUpdatedAt:InstanceTarget'</a>,
--   <a>instanceTarget_lastUpdatedAt</a> - The date and time when the
--   target instance was updated by a deployment.
newInstanceTarget :: InstanceTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>instanceTarget</tt>.
instanceTarget_targetId :: Lens' InstanceTarget (Maybe Text)

-- | The unique ID of a deployment.
instanceTarget_deploymentId :: Lens' InstanceTarget (Maybe Text)

-- | The status an EC2/On-premises deployment's target instance.
instanceTarget_status :: Lens' InstanceTarget (Maybe TargetStatus)

-- | A label that identifies whether the instance is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
instanceTarget_instanceLabel :: Lens' InstanceTarget (Maybe TargetLabel)

-- | The Amazon Resource Name (ARN) of the target.
instanceTarget_targetArn :: Lens' InstanceTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target instance.
instanceTarget_lifecycleEvents :: Lens' InstanceTarget (Maybe [LifecycleEvent])

-- | The date and time when the target instance was updated by a
--   deployment.
instanceTarget_lastUpdatedAt :: Lens' InstanceTarget (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.InstanceTarget.InstanceTarget
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.InstanceTarget.InstanceTarget
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.InstanceTarget.InstanceTarget
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.InstanceTarget.InstanceTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.InstanceTarget.InstanceTarget
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.InstanceTarget.InstanceTarget
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.InstanceTarget.InstanceTarget


module Network.AWS.CodeDeploy.Types.ECSTarget

-- | Information about the target of an Amazon ECS deployment.
--   
--   <i>See:</i> <a>newECSTarget</a> smart constructor.
data ECSTarget
ECSTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe [ECSTaskSet] -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> ECSTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>ecsTarget</tt>.
[$sel:targetId:ECSTarget'] :: ECSTarget -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:ECSTarget'] :: ECSTarget -> Maybe Text

-- | The status an Amazon ECS deployment's target ECS application.
[$sel:status:ECSTarget'] :: ECSTarget -> Maybe TargetStatus

-- | The <tt>ECSTaskSet</tt> objects associated with the ECS target.
[$sel:taskSetsInfo:ECSTarget'] :: ECSTarget -> Maybe [ECSTaskSet]

-- | The Amazon Resource Name (ARN) of the target.
[$sel:targetArn:ECSTarget'] :: ECSTarget -> Maybe Text

-- | The lifecycle events of the deployment to this target Amazon ECS
--   application.
[$sel:lifecycleEvents:ECSTarget'] :: ECSTarget -> Maybe [LifecycleEvent]

-- | The date and time when the target Amazon ECS application was updated
--   by a deployment.
[$sel:lastUpdatedAt:ECSTarget'] :: ECSTarget -> Maybe POSIX

-- | Create a value of <a>ECSTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:ECSTarget'</a>, <a>eCSTarget_targetId</a> - The
--   unique ID of a deployment target that has a type of
--   <tt>ecsTarget</tt>.
--   
--   <a>$sel:deploymentId:ECSTarget'</a>, <a>eCSTarget_deploymentId</a> -
--   The unique ID of a deployment.
--   
--   <a>$sel:status:ECSTarget'</a>, <a>eCSTarget_status</a> - The status an
--   Amazon ECS deployment's target ECS application.
--   
--   <a>$sel:taskSetsInfo:ECSTarget'</a>, <a>eCSTarget_taskSetsInfo</a> -
--   The <tt>ECSTaskSet</tt> objects associated with the ECS target.
--   
--   <a>$sel:targetArn:ECSTarget'</a>, <a>eCSTarget_targetArn</a> - The
--   Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:ECSTarget'</a>,
--   <a>eCSTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target Amazon ECS application.
--   
--   <a>$sel:lastUpdatedAt:ECSTarget'</a>, <a>eCSTarget_lastUpdatedAt</a> -
--   The date and time when the target Amazon ECS application was updated
--   by a deployment.
newECSTarget :: ECSTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>ecsTarget</tt>.
eCSTarget_targetId :: Lens' ECSTarget (Maybe Text)

-- | The unique ID of a deployment.
eCSTarget_deploymentId :: Lens' ECSTarget (Maybe Text)

-- | The status an Amazon ECS deployment's target ECS application.
eCSTarget_status :: Lens' ECSTarget (Maybe TargetStatus)

-- | The <tt>ECSTaskSet</tt> objects associated with the ECS target.
eCSTarget_taskSetsInfo :: Lens' ECSTarget (Maybe [ECSTaskSet])

-- | The Amazon Resource Name (ARN) of the target.
eCSTarget_targetArn :: Lens' ECSTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target Amazon ECS
--   application.
eCSTarget_lifecycleEvents :: Lens' ECSTarget (Maybe [LifecycleEvent])

-- | The date and time when the target Amazon ECS application was updated
--   by a deployment.
eCSTarget_lastUpdatedAt :: Lens' ECSTarget (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.ECSTarget.ECSTarget
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.ECSTarget.ECSTarget
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.ECSTarget.ECSTarget
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.ECSTarget.ECSTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.ECSTarget.ECSTarget
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.ECSTarget.ECSTarget
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.ECSTarget.ECSTarget


module Network.AWS.CodeDeploy.Types.CloudFormationTarget

-- | Information about the target to be updated by an AWS CloudFormation
--   blue/green deployment. This target type is used for all deployments
--   initiated by a CloudFormation stack update.
--   
--   <i>See:</i> <a>newCloudFormationTarget</a> smart constructor.
data CloudFormationTarget
CloudFormationTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe Double -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> CloudFormationTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>CloudFormationTarget</tt>.
[$sel:targetId:CloudFormationTarget'] :: CloudFormationTarget -> Maybe Text

-- | The unique ID of an AWS CloudFormation blue/green deployment.
[$sel:deploymentId:CloudFormationTarget'] :: CloudFormationTarget -> Maybe Text

-- | The status of an AWS CloudFormation blue/green deployment's target
--   application.
[$sel:status:CloudFormationTarget'] :: CloudFormationTarget -> Maybe TargetStatus

-- | The percentage of production traffic that the target version of an AWS
--   CloudFormation blue/green deployment receives.
[$sel:targetVersionWeight:CloudFormationTarget'] :: CloudFormationTarget -> Maybe Double

-- | The resource type for the AWS CloudFormation blue/green deployment.
[$sel:resourceType:CloudFormationTarget'] :: CloudFormationTarget -> Maybe Text

-- | The lifecycle events of the AWS CloudFormation blue/green deployment
--   to this target application.
[$sel:lifecycleEvents:CloudFormationTarget'] :: CloudFormationTarget -> Maybe [LifecycleEvent]

-- | The date and time when the target application was updated by an AWS
--   CloudFormation blue/green deployment.
[$sel:lastUpdatedAt:CloudFormationTarget'] :: CloudFormationTarget -> Maybe POSIX

-- | Create a value of <a>CloudFormationTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_targetId</a> - The unique ID of a deployment
--   target that has a type of <tt>CloudFormationTarget</tt>.
--   
--   <a>$sel:deploymentId:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_deploymentId</a> - The unique ID of an AWS
--   CloudFormation blue/green deployment.
--   
--   <a>$sel:status:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_status</a> - The status of an AWS
--   CloudFormation blue/green deployment's target application.
--   
--   <a>$sel:targetVersionWeight:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_targetVersionWeight</a> - The percentage of
--   production traffic that the target version of an AWS CloudFormation
--   blue/green deployment receives.
--   
--   <a>$sel:resourceType:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_resourceType</a> - The resource type for the
--   AWS CloudFormation blue/green deployment.
--   
--   <a>$sel:lifecycleEvents:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_lifecycleEvents</a> - The lifecycle events of
--   the AWS CloudFormation blue/green deployment to this target
--   application.
--   
--   <a>$sel:lastUpdatedAt:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_lastUpdatedAt</a> - The date and time when the
--   target application was updated by an AWS CloudFormation blue/green
--   deployment.
newCloudFormationTarget :: CloudFormationTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>CloudFormationTarget</tt>.
cloudFormationTarget_targetId :: Lens' CloudFormationTarget (Maybe Text)

-- | The unique ID of an AWS CloudFormation blue/green deployment.
cloudFormationTarget_deploymentId :: Lens' CloudFormationTarget (Maybe Text)

-- | The status of an AWS CloudFormation blue/green deployment's target
--   application.
cloudFormationTarget_status :: Lens' CloudFormationTarget (Maybe TargetStatus)

-- | The percentage of production traffic that the target version of an AWS
--   CloudFormation blue/green deployment receives.
cloudFormationTarget_targetVersionWeight :: Lens' CloudFormationTarget (Maybe Double)

-- | The resource type for the AWS CloudFormation blue/green deployment.
cloudFormationTarget_resourceType :: Lens' CloudFormationTarget (Maybe Text)

-- | The lifecycle events of the AWS CloudFormation blue/green deployment
--   to this target application.
cloudFormationTarget_lifecycleEvents :: Lens' CloudFormationTarget (Maybe [LifecycleEvent])

-- | The date and time when the target application was updated by an AWS
--   CloudFormation blue/green deployment.
cloudFormationTarget_lastUpdatedAt :: Lens' CloudFormationTarget (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.CloudFormationTarget.CloudFormationTarget
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.CloudFormationTarget.CloudFormationTarget
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.CloudFormationTarget.CloudFormationTarget
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.CloudFormationTarget.CloudFormationTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.CloudFormationTarget.CloudFormationTarget
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.CloudFormationTarget.CloudFormationTarget
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.CloudFormationTarget.CloudFormationTarget


module Network.AWS.CodeDeploy.Types.DeploymentTarget

-- | Information about the deployment target.
--   
--   <i>See:</i> <a>newDeploymentTarget</a> smart constructor.
data DeploymentTarget
DeploymentTarget' :: Maybe ECSTarget -> Maybe LambdaTarget -> Maybe CloudFormationTarget -> Maybe InstanceTarget -> Maybe DeploymentTargetType -> DeploymentTarget

-- | Information about the target for a deployment that uses the Amazon ECS
--   compute platform.
[$sel:ecsTarget:DeploymentTarget'] :: DeploymentTarget -> Maybe ECSTarget

-- | Information about the target for a deployment that uses the AWS Lambda
--   compute platform.
[$sel:lambdaTarget:DeploymentTarget'] :: DeploymentTarget -> Maybe LambdaTarget
[$sel:cloudFormationTarget:DeploymentTarget'] :: DeploymentTarget -> Maybe CloudFormationTarget

-- | Information about the target for a deployment that uses the
--   EC2/On-premises compute platform.
[$sel:instanceTarget:DeploymentTarget'] :: DeploymentTarget -> Maybe InstanceTarget

-- | The deployment type that is specific to the deployment's compute
--   platform or deployments initiated by a CloudFormation stack update.
[$sel:deploymentTargetType:DeploymentTarget'] :: DeploymentTarget -> Maybe DeploymentTargetType

-- | Create a value of <a>DeploymentTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ecsTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_ecsTarget</a> - Information about the target for a
--   deployment that uses the Amazon ECS compute platform.
--   
--   <a>$sel:lambdaTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_lambdaTarget</a> - Information about the target
--   for a deployment that uses the AWS Lambda compute platform.
--   
--   <a>$sel:cloudFormationTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_cloudFormationTarget</a> - Undocumented member.
--   
--   <a>$sel:instanceTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_instanceTarget</a> - Information about the target
--   for a deployment that uses the EC2/On-premises compute platform.
--   
--   <a>$sel:deploymentTargetType:DeploymentTarget'</a>,
--   <a>deploymentTarget_deploymentTargetType</a> - The deployment type
--   that is specific to the deployment's compute platform or deployments
--   initiated by a CloudFormation stack update.
newDeploymentTarget :: DeploymentTarget

-- | Information about the target for a deployment that uses the Amazon ECS
--   compute platform.
deploymentTarget_ecsTarget :: Lens' DeploymentTarget (Maybe ECSTarget)

-- | Information about the target for a deployment that uses the AWS Lambda
--   compute platform.
deploymentTarget_lambdaTarget :: Lens' DeploymentTarget (Maybe LambdaTarget)

-- | Undocumented member.
deploymentTarget_cloudFormationTarget :: Lens' DeploymentTarget (Maybe CloudFormationTarget)

-- | Information about the target for a deployment that uses the
--   EC2/On-premises compute platform.
deploymentTarget_instanceTarget :: Lens' DeploymentTarget (Maybe InstanceTarget)

-- | The deployment type that is specific to the deployment's compute
--   platform or deployments initiated by a CloudFormation stack update.
deploymentTarget_deploymentTargetType :: Lens' DeploymentTarget (Maybe DeploymentTargetType)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentTarget.DeploymentTarget
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentTarget.DeploymentTarget
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentTarget.DeploymentTarget
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentTarget.DeploymentTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentTarget.DeploymentTarget
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentTarget.DeploymentTarget
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentTarget.DeploymentTarget


module Network.AWS.CodeDeploy.Types.TimeBasedCanary

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in two increments. The original
--   and target Lambda function versions or ECS task sets are specified in
--   the deployment's AppSpec file.
--   
--   <i>See:</i> <a>newTimeBasedCanary</a> smart constructor.
data TimeBasedCanary
TimeBasedCanary' :: Maybe Int -> Maybe Int -> TimeBasedCanary

-- | The number of minutes between the first and second traffic shifts of a
--   <tt>TimeBasedCanary</tt> deployment.
[$sel:canaryInterval:TimeBasedCanary'] :: TimeBasedCanary -> Maybe Int

-- | The percentage of traffic to shift in the first increment of a
--   <tt>TimeBasedCanary</tt> deployment.
[$sel:canaryPercentage:TimeBasedCanary'] :: TimeBasedCanary -> Maybe Int

-- | Create a value of <a>TimeBasedCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canaryInterval:TimeBasedCanary'</a>,
--   <a>timeBasedCanary_canaryInterval</a> - The number of minutes between
--   the first and second traffic shifts of a <tt>TimeBasedCanary</tt>
--   deployment.
--   
--   <a>$sel:canaryPercentage:TimeBasedCanary'</a>,
--   <a>timeBasedCanary_canaryPercentage</a> - The percentage of traffic to
--   shift in the first increment of a <tt>TimeBasedCanary</tt> deployment.
newTimeBasedCanary :: TimeBasedCanary

-- | The number of minutes between the first and second traffic shifts of a
--   <tt>TimeBasedCanary</tt> deployment.
timeBasedCanary_canaryInterval :: Lens' TimeBasedCanary (Maybe Int)

-- | The percentage of traffic to shift in the first increment of a
--   <tt>TimeBasedCanary</tt> deployment.
timeBasedCanary_canaryPercentage :: Lens' TimeBasedCanary (Maybe Int)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TimeBasedCanary.TimeBasedCanary
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TimeBasedCanary.TimeBasedCanary
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TimeBasedCanary.TimeBasedCanary
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TimeBasedCanary.TimeBasedCanary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TimeBasedCanary.TimeBasedCanary
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TimeBasedCanary.TimeBasedCanary
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TimeBasedCanary.TimeBasedCanary
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TimeBasedCanary.TimeBasedCanary


module Network.AWS.CodeDeploy.Types.TimeBasedLinear

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in equal increments, with an equal
--   number of minutes between each increment. The original and target
--   Lambda function versions or ECS task sets are specified in the
--   deployment's AppSpec file.
--   
--   <i>See:</i> <a>newTimeBasedLinear</a> smart constructor.
data TimeBasedLinear
TimeBasedLinear' :: Maybe Int -> Maybe Int -> TimeBasedLinear

-- | The number of minutes between each incremental traffic shift of a
--   <tt>TimeBasedLinear</tt> deployment.
[$sel:linearInterval:TimeBasedLinear'] :: TimeBasedLinear -> Maybe Int

-- | The percentage of traffic that is shifted at the start of each
--   increment of a <tt>TimeBasedLinear</tt> deployment.
[$sel:linearPercentage:TimeBasedLinear'] :: TimeBasedLinear -> Maybe Int

-- | Create a value of <a>TimeBasedLinear</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linearInterval:TimeBasedLinear'</a>,
--   <a>timeBasedLinear_linearInterval</a> - The number of minutes between
--   each incremental traffic shift of a <tt>TimeBasedLinear</tt>
--   deployment.
--   
--   <a>$sel:linearPercentage:TimeBasedLinear'</a>,
--   <a>timeBasedLinear_linearPercentage</a> - The percentage of traffic
--   that is shifted at the start of each increment of a
--   <tt>TimeBasedLinear</tt> deployment.
newTimeBasedLinear :: TimeBasedLinear

-- | The number of minutes between each incremental traffic shift of a
--   <tt>TimeBasedLinear</tt> deployment.
timeBasedLinear_linearInterval :: Lens' TimeBasedLinear (Maybe Int)

-- | The percentage of traffic that is shifted at the start of each
--   increment of a <tt>TimeBasedLinear</tt> deployment.
timeBasedLinear_linearPercentage :: Lens' TimeBasedLinear (Maybe Int)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TimeBasedLinear.TimeBasedLinear
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TimeBasedLinear.TimeBasedLinear
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TimeBasedLinear.TimeBasedLinear
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TimeBasedLinear.TimeBasedLinear
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TimeBasedLinear.TimeBasedLinear
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TimeBasedLinear.TimeBasedLinear
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TimeBasedLinear.TimeBasedLinear
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TimeBasedLinear.TimeBasedLinear


module Network.AWS.CodeDeploy.Types.TimeRange

-- | Information about a time range.
--   
--   <i>See:</i> <a>newTimeRange</a> smart constructor.
data TimeRange
TimeRange' :: Maybe POSIX -> Maybe POSIX -> TimeRange

-- | The end time of the time range.
--   
--   Specify null to leave the end time open-ended.
[$sel:end:TimeRange'] :: TimeRange -> Maybe POSIX

-- | The start time of the time range.
--   
--   Specify null to leave the start time open-ended.
[$sel:start:TimeRange'] :: TimeRange -> Maybe POSIX

-- | Create a value of <a>TimeRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:TimeRange'</a>, <a>timeRange_end</a> - The end time of the
--   time range.
--   
--   Specify null to leave the end time open-ended.
--   
--   <a>$sel:start:TimeRange'</a>, <a>timeRange_start</a> - The start time
--   of the time range.
--   
--   Specify null to leave the start time open-ended.
newTimeRange :: TimeRange

-- | The end time of the time range.
--   
--   Specify null to leave the end time open-ended.
timeRange_end :: Lens' TimeRange (Maybe UTCTime)

-- | The start time of the time range.
--   
--   Specify null to leave the start time open-ended.
timeRange_start :: Lens' TimeRange (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TimeRange.TimeRange
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TimeRange.TimeRange
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TimeRange.TimeRange
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TimeRange.TimeRange
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TimeRange.TimeRange
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TimeRange.TimeRange
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TimeRange.TimeRange


module Network.AWS.CodeDeploy.Types.TrafficRoute

-- | Information about a listener. The listener contains the path used to
--   route traffic that is received from the load balancer to a target
--   group.
--   
--   <i>See:</i> <a>newTrafficRoute</a> smart constructor.
data TrafficRoute
TrafficRoute' :: Maybe [Text] -> TrafficRoute

-- | The Amazon Resource Name (ARN) of one listener. The listener
--   identifies the route between a target group and a load balancer. This
--   is an array of strings with a maximum size of one.
[$sel:listenerArns:TrafficRoute'] :: TrafficRoute -> Maybe [Text]

-- | Create a value of <a>TrafficRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArns:TrafficRoute'</a>,
--   <a>trafficRoute_listenerArns</a> - The Amazon Resource Name (ARN) of
--   one listener. The listener identifies the route between a target group
--   and a load balancer. This is an array of strings with a maximum size
--   of one.
newTrafficRoute :: TrafficRoute

-- | The Amazon Resource Name (ARN) of one listener. The listener
--   identifies the route between a target group and a load balancer. This
--   is an array of strings with a maximum size of one.
trafficRoute_listenerArns :: Lens' TrafficRoute (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TrafficRoute.TrafficRoute
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TrafficRoute.TrafficRoute
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TrafficRoute.TrafficRoute
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TrafficRoute.TrafficRoute
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TrafficRoute.TrafficRoute
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TrafficRoute.TrafficRoute
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TrafficRoute.TrafficRoute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TrafficRoute.TrafficRoute


module Network.AWS.CodeDeploy.Types.TargetGroupPairInfo

-- | Information about two target groups and how traffic is routed during
--   an Amazon ECS deployment. An optional test traffic route can be
--   specified.
--   
--   <i>See:</i> <a>newTargetGroupPairInfo</a> smart constructor.
data TargetGroupPairInfo
TargetGroupPairInfo' :: Maybe [TargetGroupInfo] -> Maybe TrafficRoute -> Maybe TrafficRoute -> TargetGroupPairInfo

-- | One pair of target groups. One is associated with the original task
--   set. The second is associated with the task set that serves traffic
--   after the deployment is complete.
[$sel:targetGroups:TargetGroupPairInfo'] :: TargetGroupPairInfo -> Maybe [TargetGroupInfo]

-- | The path used by a load balancer to route production traffic when an
--   Amazon ECS deployment is complete.
[$sel:prodTrafficRoute:TargetGroupPairInfo'] :: TargetGroupPairInfo -> Maybe TrafficRoute

-- | An optional path used by a load balancer to route test traffic after
--   an Amazon ECS deployment. Validation can occur while test traffic is
--   served during a deployment.
[$sel:testTrafficRoute:TargetGroupPairInfo'] :: TargetGroupPairInfo -> Maybe TrafficRoute

-- | Create a value of <a>TargetGroupPairInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_targetGroups</a> - One pair of target groups.
--   One is associated with the original task set. The second is associated
--   with the task set that serves traffic after the deployment is
--   complete.
--   
--   <a>$sel:prodTrafficRoute:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_prodTrafficRoute</a> - The path used by a load
--   balancer to route production traffic when an Amazon ECS deployment is
--   complete.
--   
--   <a>$sel:testTrafficRoute:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_testTrafficRoute</a> - An optional path used by
--   a load balancer to route test traffic after an Amazon ECS deployment.
--   Validation can occur while test traffic is served during a deployment.
newTargetGroupPairInfo :: TargetGroupPairInfo

-- | One pair of target groups. One is associated with the original task
--   set. The second is associated with the task set that serves traffic
--   after the deployment is complete.
targetGroupPairInfo_targetGroups :: Lens' TargetGroupPairInfo (Maybe [TargetGroupInfo])

-- | The path used by a load balancer to route production traffic when an
--   Amazon ECS deployment is complete.
targetGroupPairInfo_prodTrafficRoute :: Lens' TargetGroupPairInfo (Maybe TrafficRoute)

-- | An optional path used by a load balancer to route test traffic after
--   an Amazon ECS deployment. Validation can occur while test traffic is
--   served during a deployment.
targetGroupPairInfo_testTrafficRoute :: Lens' TargetGroupPairInfo (Maybe TrafficRoute)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TargetGroupPairInfo.TargetGroupPairInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TargetGroupPairInfo.TargetGroupPairInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TargetGroupPairInfo.TargetGroupPairInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TargetGroupPairInfo.TargetGroupPairInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TargetGroupPairInfo.TargetGroupPairInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TargetGroupPairInfo.TargetGroupPairInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TargetGroupPairInfo.TargetGroupPairInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TargetGroupPairInfo.TargetGroupPairInfo


module Network.AWS.CodeDeploy.Types.LoadBalancerInfo

-- | Information about the Elastic Load Balancing load balancer or target
--   group used in a deployment.
--   
--   <i>See:</i> <a>newLoadBalancerInfo</a> smart constructor.
data LoadBalancerInfo
LoadBalancerInfo' :: Maybe [TargetGroupPairInfo] -> Maybe [ELBInfo] -> Maybe [TargetGroupInfo] -> LoadBalancerInfo

-- | The target group pair information. This is an array of
--   <tt>TargeGroupPairInfo</tt> objects with a maximum size of one.
[$sel:targetGroupPairInfoList:LoadBalancerInfo'] :: LoadBalancerInfo -> Maybe [TargetGroupPairInfo]

-- | An array that contains information about the load balancer to use for
--   load balancing in a deployment. In Elastic Load Balancing, load
--   balancers are used with Classic Load Balancers.
--   
--   Adding more than one load balancer to the array is not supported.
[$sel:elbInfoList:LoadBalancerInfo'] :: LoadBalancerInfo -> Maybe [ELBInfo]

-- | An array that contains information about the target group to use for
--   load balancing in a deployment. In Elastic Load Balancing, target
--   groups are used with Application Load Balancers.
--   
--   Adding more than one target group to the array is not supported.
[$sel:targetGroupInfoList:LoadBalancerInfo'] :: LoadBalancerInfo -> Maybe [TargetGroupInfo]

-- | Create a value of <a>LoadBalancerInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupPairInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_targetGroupPairInfoList</a> - The target group
--   pair information. This is an array of <tt>TargeGroupPairInfo</tt>
--   objects with a maximum size of one.
--   
--   <a>$sel:elbInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_elbInfoList</a> - An array that contains
--   information about the load balancer to use for load balancing in a
--   deployment. In Elastic Load Balancing, load balancers are used with
--   Classic Load Balancers.
--   
--   Adding more than one load balancer to the array is not supported.
--   
--   <a>$sel:targetGroupInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_targetGroupInfoList</a> - An array that contains
--   information about the target group to use for load balancing in a
--   deployment. In Elastic Load Balancing, target groups are used with
--   Application Load Balancers.
--   
--   Adding more than one target group to the array is not supported.
newLoadBalancerInfo :: LoadBalancerInfo

-- | The target group pair information. This is an array of
--   <tt>TargeGroupPairInfo</tt> objects with a maximum size of one.
loadBalancerInfo_targetGroupPairInfoList :: Lens' LoadBalancerInfo (Maybe [TargetGroupPairInfo])

-- | An array that contains information about the load balancer to use for
--   load balancing in a deployment. In Elastic Load Balancing, load
--   balancers are used with Classic Load Balancers.
--   
--   Adding more than one load balancer to the array is not supported.
loadBalancerInfo_elbInfoList :: Lens' LoadBalancerInfo (Maybe [ELBInfo])

-- | An array that contains information about the target group to use for
--   load balancing in a deployment. In Elastic Load Balancing, target
--   groups are used with Application Load Balancers.
--   
--   Adding more than one target group to the array is not supported.
loadBalancerInfo_targetGroupInfoList :: Lens' LoadBalancerInfo (Maybe [TargetGroupInfo])
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.LoadBalancerInfo.LoadBalancerInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.LoadBalancerInfo.LoadBalancerInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.LoadBalancerInfo.LoadBalancerInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.LoadBalancerInfo.LoadBalancerInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.LoadBalancerInfo.LoadBalancerInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.LoadBalancerInfo.LoadBalancerInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.LoadBalancerInfo.LoadBalancerInfo
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.LoadBalancerInfo.LoadBalancerInfo


module Network.AWS.CodeDeploy.Types.DeploymentInfo

-- | Information about a deployment.
--   
--   <i>See:</i> <a>newDeploymentInfo</a> smart constructor.
data DeploymentInfo
DeploymentInfo' :: Maybe Text -> Maybe Text -> Maybe DeploymentStatus -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe Bool -> Maybe Bool -> Maybe TargetInstances -> Maybe POSIX -> Maybe Bool -> Maybe RevisionLocation -> Maybe DeploymentCreator -> Maybe BlueGreenDeploymentConfiguration -> Maybe ErrorInformation -> Maybe LoadBalancerInfo -> Maybe POSIX -> Maybe POSIX -> Maybe DeploymentStyle -> Maybe Text -> Maybe RevisionLocation -> Maybe RollbackInfo -> Maybe Text -> Maybe [Text] -> Maybe RelatedDeployments -> Maybe Text -> Maybe FileExistsBehavior -> Maybe ComputePlatform -> Maybe Text -> Maybe DeploymentOverview -> DeploymentInfo

-- | The deployment configuration name.
[$sel:deploymentConfigName:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | The current state of the deployment as a whole.
[$sel:status:DeploymentInfo'] :: DeploymentInfo -> Maybe DeploymentStatus

-- | The deployment group name.
[$sel:deploymentGroupName:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | Information about the automatic rollback configuration associated with
--   the deployment.
[$sel:autoRollbackConfiguration:DeploymentInfo'] :: DeploymentInfo -> Maybe AutoRollbackConfiguration

-- | Indicates whether only instances that are not running the latest
--   application revision are to be deployed to.
[$sel:updateOutdatedInstancesOnly:DeploymentInfo'] :: DeploymentInfo -> Maybe Bool

-- | If true, then if an <tt>ApplicationStop</tt>,
--   <tt>BeforeBlockTraffic</tt>, or <tt>AfterBlockTraffic</tt> deployment
--   lifecycle event to an instance fails, then the deployment continues to
--   the next deployment lifecycle event. For example, if
--   <tt>ApplicationStop</tt> fails, the deployment continues with
--   DownloadBundle. If <tt>BeforeBlockTraffic</tt> fails, the deployment
--   continues with <tt>BlockTraffic</tt>. If <tt>AfterBlockTraffic</tt>
--   fails, the deployment continues with <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
[$sel:ignoreApplicationStopFailures:DeploymentInfo'] :: DeploymentInfo -> Maybe Bool

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
[$sel:targetInstances:DeploymentInfo'] :: DeploymentInfo -> Maybe TargetInstances

-- | A timestamp that indicates when the deployment was deployed to the
--   deployment group.
--   
--   In some cases, the reported value of the start time might be later
--   than the complete time. This is due to differences in the clock
--   settings of backend servers that participate in the deployment
--   process.
[$sel:startTime:DeploymentInfo'] :: DeploymentInfo -> Maybe POSIX

-- | Indicates whether the wait period set for the termination of instances
--   in the original environment has started. Status is 'false' if the
--   KEEP_ALIVE option is specified. Otherwise, 'true' as soon as the
--   termination wait period starts.
[$sel:instanceTerminationWaitTimeStarted:DeploymentInfo'] :: DeploymentInfo -> Maybe Bool

-- | Information about the application revision that was deployed to the
--   deployment group before the most recent successful deployment.
[$sel:previousRevision:DeploymentInfo'] :: DeploymentInfo -> Maybe RevisionLocation

-- | The means by which the deployment was created:
--   
--   <ul>
--   <li><tt>user</tt>: A user created the deployment.</li>
--   <li><tt>autoscaling</tt>: Amazon EC2 Auto Scaling created the
--   deployment.</li>
--   <li><tt>codeDeployRollback</tt>: A rollback process created the
--   deployment.</li>
--   <li><tt>CodeDeployAutoUpdate</tt>: An auto-update process created the
--   deployment when it detected outdated EC2 instances.</li>
--   </ul>
[$sel:creator:DeploymentInfo'] :: DeploymentInfo -> Maybe DeploymentCreator

-- | Information about blue/green deployment options for this deployment.
[$sel:blueGreenDeploymentConfiguration:DeploymentInfo'] :: DeploymentInfo -> Maybe BlueGreenDeploymentConfiguration

-- | Information about any error associated with this deployment.
[$sel:errorInformation:DeploymentInfo'] :: DeploymentInfo -> Maybe ErrorInformation

-- | Information about the load balancer used in the deployment.
[$sel:loadBalancerInfo:DeploymentInfo'] :: DeploymentInfo -> Maybe LoadBalancerInfo

-- | A timestamp that indicates when the deployment was complete.
[$sel:completeTime:DeploymentInfo'] :: DeploymentInfo -> Maybe POSIX

-- | A timestamp that indicates when the deployment was created.
[$sel:createTime:DeploymentInfo'] :: DeploymentInfo -> Maybe POSIX

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
[$sel:deploymentStyle:DeploymentInfo'] :: DeploymentInfo -> Maybe DeploymentStyle

-- | A comment about the deployment.
[$sel:description:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | Information about the location of stored application artifacts and the
--   service from which to retrieve them.
[$sel:revision:DeploymentInfo'] :: DeploymentInfo -> Maybe RevisionLocation

-- | Information about a deployment rollback.
[$sel:rollbackInfo:DeploymentInfo'] :: DeploymentInfo -> Maybe RollbackInfo

-- | The unique ID for an external resource (for example, a CloudFormation
--   stack ID) that is linked to this deployment.
[$sel:externalId:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | Messages that contain information about the status of a deployment.
[$sel:deploymentStatusMessages:DeploymentInfo'] :: DeploymentInfo -> Maybe [Text]
[$sel:relatedDeployments:DeploymentInfo'] :: DeploymentInfo -> Maybe RelatedDeployments

-- | The application name.
[$sel:applicationName:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | Information about how AWS CodeDeploy handles files that already exist
--   in a deployment target location but weren't part of the previous
--   successful deployment.
--   
--   <ul>
--   <li><tt>DISALLOW</tt>: The deployment fails. This is also the default
--   behavior if no option is specified.</li>
--   <li><tt>OVERWRITE</tt>: The version of the file from the application
--   revision currently being deployed replaces the version already on the
--   instance.</li>
--   <li><tt>RETAIN</tt>: The version of the file already on the instance
--   is kept and used as part of the new deployment.</li>
--   </ul>
[$sel:fileExistsBehavior:DeploymentInfo'] :: DeploymentInfo -> Maybe FileExistsBehavior

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
[$sel:computePlatform:DeploymentInfo'] :: DeploymentInfo -> Maybe ComputePlatform

-- | Provides information about the results of a deployment, such as
--   whether instances in the original environment in a blue/green
--   deployment were not terminated.
[$sel:additionalDeploymentStatusInfo:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | A summary of the deployment status of the instances in the deployment.
[$sel:deploymentOverview:DeploymentInfo'] :: DeploymentInfo -> Maybe DeploymentOverview

-- | Create a value of <a>DeploymentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentId:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:DeploymentInfo'</a>, <a>deploymentInfo_status</a> - The
--   current state of the deployment as a whole.
--   
--   <a>$sel:deploymentGroupName:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentGroupName</a> - The deployment group name.
--   
--   <a>$sel:autoRollbackConfiguration:DeploymentInfo'</a>,
--   <a>deploymentInfo_autoRollbackConfiguration</a> - Information about
--   the automatic rollback configuration associated with the deployment.
--   
--   <a>$sel:updateOutdatedInstancesOnly:DeploymentInfo'</a>,
--   <a>deploymentInfo_updateOutdatedInstancesOnly</a> - Indicates whether
--   only instances that are not running the latest application revision
--   are to be deployed to.
--   
--   <a>$sel:ignoreApplicationStopFailures:DeploymentInfo'</a>,
--   <a>deploymentInfo_ignoreApplicationStopFailures</a> - If true, then if
--   an <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, or
--   <tt>AfterBlockTraffic</tt> deployment lifecycle event to an instance
--   fails, then the deployment continues to the next deployment lifecycle
--   event. For example, if <tt>ApplicationStop</tt> fails, the deployment
--   continues with DownloadBundle. If <tt>BeforeBlockTraffic</tt> fails,
--   the deployment continues with <tt>BlockTraffic</tt>. If
--   <tt>AfterBlockTraffic</tt> fails, the deployment continues with
--   <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
--   
--   <a>$sel:targetInstances:DeploymentInfo'</a>,
--   <a>deploymentInfo_targetInstances</a> - Information about the
--   instances that belong to the replacement environment in a blue/green
--   deployment.
--   
--   <a>$sel:startTime:DeploymentInfo'</a>, <a>deploymentInfo_startTime</a>
--   - A timestamp that indicates when the deployment was deployed to the
--   deployment group.
--   
--   In some cases, the reported value of the start time might be later
--   than the complete time. This is due to differences in the clock
--   settings of backend servers that participate in the deployment
--   process.
--   
--   <a>$sel:instanceTerminationWaitTimeStarted:DeploymentInfo'</a>,
--   <a>deploymentInfo_instanceTerminationWaitTimeStarted</a> - Indicates
--   whether the wait period set for the termination of instances in the
--   original environment has started. Status is 'false' if the KEEP_ALIVE
--   option is specified. Otherwise, 'true' as soon as the termination wait
--   period starts.
--   
--   <a>$sel:previousRevision:DeploymentInfo'</a>,
--   <a>deploymentInfo_previousRevision</a> - Information about the
--   application revision that was deployed to the deployment group before
--   the most recent successful deployment.
--   
--   <a>$sel:creator:DeploymentInfo'</a>, <a>deploymentInfo_creator</a> -
--   The means by which the deployment was created:
--   
--   <ul>
--   <li><tt>user</tt>: A user created the deployment.</li>
--   <li><tt>autoscaling</tt>: Amazon EC2 Auto Scaling created the
--   deployment.</li>
--   <li><tt>codeDeployRollback</tt>: A rollback process created the
--   deployment.</li>
--   <li><tt>CodeDeployAutoUpdate</tt>: An auto-update process created the
--   deployment when it detected outdated EC2 instances.</li>
--   </ul>
--   
--   <a>$sel:blueGreenDeploymentConfiguration:DeploymentInfo'</a>,
--   <a>deploymentInfo_blueGreenDeploymentConfiguration</a> - Information
--   about blue/green deployment options for this deployment.
--   
--   <a>$sel:errorInformation:DeploymentInfo'</a>,
--   <a>deploymentInfo_errorInformation</a> - Information about any error
--   associated with this deployment.
--   
--   <a>$sel:loadBalancerInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_loadBalancerInfo</a> - Information about the load
--   balancer used in the deployment.
--   
--   <a>$sel:completeTime:DeploymentInfo'</a>,
--   <a>deploymentInfo_completeTime</a> - A timestamp that indicates when
--   the deployment was complete.
--   
--   <a>$sel:createTime:DeploymentInfo'</a>,
--   <a>deploymentInfo_createTime</a> - A timestamp that indicates when the
--   deployment was created.
--   
--   <a>$sel:deploymentStyle:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentStyle</a> - Information about the type of
--   deployment, either in-place or blue/green, you want to run and whether
--   to route deployment traffic behind a load balancer.
--   
--   <a>$sel:description:DeploymentInfo'</a>,
--   <a>deploymentInfo_description</a> - A comment about the deployment.
--   
--   <a>$sel:revision:DeploymentInfo'</a>, <a>deploymentInfo_revision</a> -
--   Information about the location of stored application artifacts and the
--   service from which to retrieve them.
--   
--   <a>$sel:rollbackInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_rollbackInfo</a> - Information about a deployment
--   rollback.
--   
--   <a>$sel:externalId:DeploymentInfo'</a>,
--   <a>deploymentInfo_externalId</a> - The unique ID for an external
--   resource (for example, a CloudFormation stack ID) that is linked to
--   this deployment.
--   
--   <a>$sel:deploymentStatusMessages:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentStatusMessages</a> - Messages that contain
--   information about the status of a deployment.
--   
--   <a>$sel:relatedDeployments:DeploymentInfo'</a>,
--   <a>deploymentInfo_relatedDeployments</a> - Undocumented member.
--   
--   <a>$sel:applicationName:DeploymentInfo'</a>,
--   <a>deploymentInfo_applicationName</a> - The application name.
--   
--   <a>$sel:fileExistsBehavior:DeploymentInfo'</a>,
--   <a>deploymentInfo_fileExistsBehavior</a> - Information about how AWS
--   CodeDeploy handles files that already exist in a deployment target
--   location but weren't part of the previous successful deployment.
--   
--   <ul>
--   <li><tt>DISALLOW</tt>: The deployment fails. This is also the default
--   behavior if no option is specified.</li>
--   <li><tt>OVERWRITE</tt>: The version of the file from the application
--   revision currently being deployed replaces the version already on the
--   instance.</li>
--   <li><tt>RETAIN</tt>: The version of the file already on the instance
--   is kept and used as part of the new deployment.</li>
--   </ul>
--   
--   <a>$sel:computePlatform:DeploymentInfo'</a>,
--   <a>deploymentInfo_computePlatform</a> - The destination platform type
--   for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
--   
--   <a>$sel:additionalDeploymentStatusInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_additionalDeploymentStatusInfo</a> - Provides
--   information about the results of a deployment, such as whether
--   instances in the original environment in a blue/green deployment were
--   not terminated.
--   
--   <a>$sel:deploymentOverview:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentOverview</a> - A summary of the deployment
--   status of the instances in the deployment.
newDeploymentInfo :: DeploymentInfo

-- | The deployment configuration name.
deploymentInfo_deploymentConfigName :: Lens' DeploymentInfo (Maybe Text)

-- | The unique ID of a deployment.
deploymentInfo_deploymentId :: Lens' DeploymentInfo (Maybe Text)

-- | The current state of the deployment as a whole.
deploymentInfo_status :: Lens' DeploymentInfo (Maybe DeploymentStatus)

-- | The deployment group name.
deploymentInfo_deploymentGroupName :: Lens' DeploymentInfo (Maybe Text)

-- | Information about the automatic rollback configuration associated with
--   the deployment.
deploymentInfo_autoRollbackConfiguration :: Lens' DeploymentInfo (Maybe AutoRollbackConfiguration)

-- | Indicates whether only instances that are not running the latest
--   application revision are to be deployed to.
deploymentInfo_updateOutdatedInstancesOnly :: Lens' DeploymentInfo (Maybe Bool)

-- | If true, then if an <tt>ApplicationStop</tt>,
--   <tt>BeforeBlockTraffic</tt>, or <tt>AfterBlockTraffic</tt> deployment
--   lifecycle event to an instance fails, then the deployment continues to
--   the next deployment lifecycle event. For example, if
--   <tt>ApplicationStop</tt> fails, the deployment continues with
--   DownloadBundle. If <tt>BeforeBlockTraffic</tt> fails, the deployment
--   continues with <tt>BlockTraffic</tt>. If <tt>AfterBlockTraffic</tt>
--   fails, the deployment continues with <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
deploymentInfo_ignoreApplicationStopFailures :: Lens' DeploymentInfo (Maybe Bool)

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
deploymentInfo_targetInstances :: Lens' DeploymentInfo (Maybe TargetInstances)

-- | A timestamp that indicates when the deployment was deployed to the
--   deployment group.
--   
--   In some cases, the reported value of the start time might be later
--   than the complete time. This is due to differences in the clock
--   settings of backend servers that participate in the deployment
--   process.
deploymentInfo_startTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | Indicates whether the wait period set for the termination of instances
--   in the original environment has started. Status is 'false' if the
--   KEEP_ALIVE option is specified. Otherwise, 'true' as soon as the
--   termination wait period starts.
deploymentInfo_instanceTerminationWaitTimeStarted :: Lens' DeploymentInfo (Maybe Bool)

-- | Information about the application revision that was deployed to the
--   deployment group before the most recent successful deployment.
deploymentInfo_previousRevision :: Lens' DeploymentInfo (Maybe RevisionLocation)

-- | The means by which the deployment was created:
--   
--   <ul>
--   <li><tt>user</tt>: A user created the deployment.</li>
--   <li><tt>autoscaling</tt>: Amazon EC2 Auto Scaling created the
--   deployment.</li>
--   <li><tt>codeDeployRollback</tt>: A rollback process created the
--   deployment.</li>
--   <li><tt>CodeDeployAutoUpdate</tt>: An auto-update process created the
--   deployment when it detected outdated EC2 instances.</li>
--   </ul>
deploymentInfo_creator :: Lens' DeploymentInfo (Maybe DeploymentCreator)

-- | Information about blue/green deployment options for this deployment.
deploymentInfo_blueGreenDeploymentConfiguration :: Lens' DeploymentInfo (Maybe BlueGreenDeploymentConfiguration)

-- | Information about any error associated with this deployment.
deploymentInfo_errorInformation :: Lens' DeploymentInfo (Maybe ErrorInformation)

-- | Information about the load balancer used in the deployment.
deploymentInfo_loadBalancerInfo :: Lens' DeploymentInfo (Maybe LoadBalancerInfo)

-- | A timestamp that indicates when the deployment was complete.
deploymentInfo_completeTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | A timestamp that indicates when the deployment was created.
deploymentInfo_createTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
deploymentInfo_deploymentStyle :: Lens' DeploymentInfo (Maybe DeploymentStyle)

-- | A comment about the deployment.
deploymentInfo_description :: Lens' DeploymentInfo (Maybe Text)

-- | Information about the location of stored application artifacts and the
--   service from which to retrieve them.
deploymentInfo_revision :: Lens' DeploymentInfo (Maybe RevisionLocation)

-- | Information about a deployment rollback.
deploymentInfo_rollbackInfo :: Lens' DeploymentInfo (Maybe RollbackInfo)

-- | The unique ID for an external resource (for example, a CloudFormation
--   stack ID) that is linked to this deployment.
deploymentInfo_externalId :: Lens' DeploymentInfo (Maybe Text)

-- | Messages that contain information about the status of a deployment.
deploymentInfo_deploymentStatusMessages :: Lens' DeploymentInfo (Maybe [Text])

-- | Undocumented member.
deploymentInfo_relatedDeployments :: Lens' DeploymentInfo (Maybe RelatedDeployments)

-- | The application name.
deploymentInfo_applicationName :: Lens' DeploymentInfo (Maybe Text)

-- | Information about how AWS CodeDeploy handles files that already exist
--   in a deployment target location but weren't part of the previous
--   successful deployment.
--   
--   <ul>
--   <li><tt>DISALLOW</tt>: The deployment fails. This is also the default
--   behavior if no option is specified.</li>
--   <li><tt>OVERWRITE</tt>: The version of the file from the application
--   revision currently being deployed replaces the version already on the
--   instance.</li>
--   <li><tt>RETAIN</tt>: The version of the file already on the instance
--   is kept and used as part of the new deployment.</li>
--   </ul>
deploymentInfo_fileExistsBehavior :: Lens' DeploymentInfo (Maybe FileExistsBehavior)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentInfo_computePlatform :: Lens' DeploymentInfo (Maybe ComputePlatform)

-- | Provides information about the results of a deployment, such as
--   whether instances in the original environment in a blue/green
--   deployment were not terminated.
deploymentInfo_additionalDeploymentStatusInfo :: Lens' DeploymentInfo (Maybe Text)

-- | A summary of the deployment status of the instances in the deployment.
deploymentInfo_deploymentOverview :: Lens' DeploymentInfo (Maybe DeploymentOverview)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentInfo.DeploymentInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentInfo.DeploymentInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentInfo.DeploymentInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentInfo.DeploymentInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentInfo.DeploymentInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentInfo.DeploymentInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentInfo.DeploymentInfo


module Network.AWS.CodeDeploy.Types.TrafficRoutingType
newtype TrafficRoutingType
TrafficRoutingType' :: Text -> TrafficRoutingType
[fromTrafficRoutingType] :: TrafficRoutingType -> Text
pattern TrafficRoutingType_AllAtOnce :: TrafficRoutingType
pattern TrafficRoutingType_TimeBasedCanary :: TrafficRoutingType
pattern TrafficRoutingType_TimeBasedLinear :: TrafficRoutingType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TrafficRoutingType.TrafficRoutingType


module Network.AWS.CodeDeploy.Types.TrafficRoutingConfig

-- | The configuration that specifies how traffic is shifted from one
--   version of a Lambda function to another version during an AWS Lambda
--   deployment, or from one Amazon ECS task set to another during an
--   Amazon ECS deployment.
--   
--   <i>See:</i> <a>newTrafficRoutingConfig</a> smart constructor.
data TrafficRoutingConfig
TrafficRoutingConfig' :: Maybe TimeBasedLinear -> Maybe TrafficRoutingType -> Maybe TimeBasedCanary -> TrafficRoutingConfig

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in equal increments, with an equal
--   number of minutes between each increment. The original and target
--   Lambda function versions or ECS task sets are specified in the
--   deployment's AppSpec file.
[$sel:timeBasedLinear:TrafficRoutingConfig'] :: TrafficRoutingConfig -> Maybe TimeBasedLinear

-- | The type of traffic shifting (<tt>TimeBasedCanary</tt> or
--   <tt>TimeBasedLinear</tt>) used by a deployment configuration.
[$sel:type':TrafficRoutingConfig'] :: TrafficRoutingConfig -> Maybe TrafficRoutingType

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in two increments. The original
--   and target Lambda function versions or ECS task sets are specified in
--   the deployment's AppSpec file.
[$sel:timeBasedCanary:TrafficRoutingConfig'] :: TrafficRoutingConfig -> Maybe TimeBasedCanary

-- | Create a value of <a>TrafficRoutingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeBasedLinear:TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_timeBasedLinear</a> - A configuration that
--   shifts traffic from one version of a Lambda function or ECS task set
--   to another in equal increments, with an equal number of minutes
--   between each increment. The original and target Lambda function
--   versions or ECS task sets are specified in the deployment's AppSpec
--   file.
--   
--   <a>$sel:type':TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_type</a> - The type of traffic shifting
--   (<tt>TimeBasedCanary</tt> or <tt>TimeBasedLinear</tt>) used by a
--   deployment configuration.
--   
--   <a>$sel:timeBasedCanary:TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_timeBasedCanary</a> - A configuration that
--   shifts traffic from one version of a Lambda function or ECS task set
--   to another in two increments. The original and target Lambda function
--   versions or ECS task sets are specified in the deployment's AppSpec
--   file.
newTrafficRoutingConfig :: TrafficRoutingConfig

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in equal increments, with an equal
--   number of minutes between each increment. The original and target
--   Lambda function versions or ECS task sets are specified in the
--   deployment's AppSpec file.
trafficRoutingConfig_timeBasedLinear :: Lens' TrafficRoutingConfig (Maybe TimeBasedLinear)

-- | The type of traffic shifting (<tt>TimeBasedCanary</tt> or
--   <tt>TimeBasedLinear</tt>) used by a deployment configuration.
trafficRoutingConfig_type :: Lens' TrafficRoutingConfig (Maybe TrafficRoutingType)

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in two increments. The original
--   and target Lambda function versions or ECS task sets are specified in
--   the deployment's AppSpec file.
trafficRoutingConfig_timeBasedCanary :: Lens' TrafficRoutingConfig (Maybe TimeBasedCanary)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TrafficRoutingConfig.TrafficRoutingConfig
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TrafficRoutingConfig.TrafficRoutingConfig
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TrafficRoutingConfig.TrafficRoutingConfig
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TrafficRoutingConfig.TrafficRoutingConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TrafficRoutingConfig.TrafficRoutingConfig
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TrafficRoutingConfig.TrafficRoutingConfig
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TrafficRoutingConfig.TrafficRoutingConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TrafficRoutingConfig.TrafficRoutingConfig


module Network.AWS.CodeDeploy.Types.DeploymentConfigInfo

-- | Information about a deployment configuration.
--   
--   <i>See:</i> <a>newDeploymentConfigInfo</a> smart constructor.
data DeploymentConfigInfo
DeploymentConfigInfo' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TrafficRoutingConfig -> Maybe MinimumHealthyHosts -> Maybe ComputePlatform -> DeploymentConfigInfo

-- | The deployment configuration name.
[$sel:deploymentConfigName:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe Text

-- | The deployment configuration ID.
[$sel:deploymentConfigId:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe Text

-- | The time at which the deployment configuration was created.
[$sel:createTime:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe POSIX

-- | The configuration that specifies how the deployment traffic is routed.
--   Used for deployments with a Lambda or ECS compute platform only.
[$sel:trafficRoutingConfig:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe TrafficRoutingConfig

-- | Information about the number or percentage of minimum healthy
--   instance.
[$sel:minimumHealthyHosts:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe MinimumHealthyHosts

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
[$sel:computePlatform:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe ComputePlatform

-- | Create a value of <a>DeploymentConfigInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentConfigId:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_deploymentConfigId</a> - The deployment
--   configuration ID.
--   
--   <a>$sel:createTime:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_createTime</a> - The time at which the
--   deployment configuration was created.
--   
--   <a>$sel:trafficRoutingConfig:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_trafficRoutingConfig</a> - The configuration
--   that specifies how the deployment traffic is routed. Used for
--   deployments with a Lambda or ECS compute platform only.
--   
--   <a>$sel:minimumHealthyHosts:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_minimumHealthyHosts</a> - Information about
--   the number or percentage of minimum healthy instance.
--   
--   <a>$sel:computePlatform:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_computePlatform</a> - The destination platform
--   type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
newDeploymentConfigInfo :: DeploymentConfigInfo

-- | The deployment configuration name.
deploymentConfigInfo_deploymentConfigName :: Lens' DeploymentConfigInfo (Maybe Text)

-- | The deployment configuration ID.
deploymentConfigInfo_deploymentConfigId :: Lens' DeploymentConfigInfo (Maybe Text)

-- | The time at which the deployment configuration was created.
deploymentConfigInfo_createTime :: Lens' DeploymentConfigInfo (Maybe UTCTime)

-- | The configuration that specifies how the deployment traffic is routed.
--   Used for deployments with a Lambda or ECS compute platform only.
deploymentConfigInfo_trafficRoutingConfig :: Lens' DeploymentConfigInfo (Maybe TrafficRoutingConfig)

-- | Information about the number or percentage of minimum healthy
--   instance.
deploymentConfigInfo_minimumHealthyHosts :: Lens' DeploymentConfigInfo (Maybe MinimumHealthyHosts)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentConfigInfo_computePlatform :: Lens' DeploymentConfigInfo (Maybe ComputePlatform)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentConfigInfo.DeploymentConfigInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentConfigInfo.DeploymentConfigInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentConfigInfo.DeploymentConfigInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentConfigInfo.DeploymentConfigInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentConfigInfo.DeploymentConfigInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentConfigInfo.DeploymentConfigInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentConfigInfo.DeploymentConfigInfo


module Network.AWS.CodeDeploy.Types.TriggerEventType
newtype TriggerEventType
TriggerEventType' :: Text -> TriggerEventType
[fromTriggerEventType] :: TriggerEventType -> Text
pattern TriggerEventType_DeploymentFailure :: TriggerEventType
pattern TriggerEventType_DeploymentReady :: TriggerEventType
pattern TriggerEventType_DeploymentRollback :: TriggerEventType
pattern TriggerEventType_DeploymentStart :: TriggerEventType
pattern TriggerEventType_DeploymentStop :: TriggerEventType
pattern TriggerEventType_DeploymentSuccess :: TriggerEventType
pattern TriggerEventType_InstanceFailure :: TriggerEventType
pattern TriggerEventType_InstanceReady :: TriggerEventType
pattern TriggerEventType_InstanceStart :: TriggerEventType
pattern TriggerEventType_InstanceSuccess :: TriggerEventType
instance Network.AWS.Data.XML.ToXML Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Network.AWS.Data.XML.FromXML Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Network.AWS.Data.Log.ToLog Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Network.AWS.Data.Text.ToText Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Network.AWS.Data.Text.FromText Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance GHC.Classes.Ord Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TriggerEventType.TriggerEventType


module Network.AWS.CodeDeploy.Types.TriggerConfig

-- | Information about notification triggers for the deployment group.
--   
--   <i>See:</i> <a>newTriggerConfig</a> smart constructor.
data TriggerConfig
TriggerConfig' :: Maybe Text -> Maybe [TriggerEventType] -> Maybe Text -> TriggerConfig

-- | The name of the notification trigger.
[$sel:triggerName:TriggerConfig'] :: TriggerConfig -> Maybe Text

-- | The event type or types for which notifications are triggered.
[$sel:triggerEvents:TriggerConfig'] :: TriggerConfig -> Maybe [TriggerEventType]

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service topic through which notifications about deployment or instance
--   events are sent.
[$sel:triggerTargetArn:TriggerConfig'] :: TriggerConfig -> Maybe Text

-- | Create a value of <a>TriggerConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerName:TriggerConfig'</a>,
--   <a>triggerConfig_triggerName</a> - The name of the notification
--   trigger.
--   
--   <a>$sel:triggerEvents:TriggerConfig'</a>,
--   <a>triggerConfig_triggerEvents</a> - The event type or types for which
--   notifications are triggered.
--   
--   <a>$sel:triggerTargetArn:TriggerConfig'</a>,
--   <a>triggerConfig_triggerTargetArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon Simple Notification Service topic through which
--   notifications about deployment or instance events are sent.
newTriggerConfig :: TriggerConfig

-- | The name of the notification trigger.
triggerConfig_triggerName :: Lens' TriggerConfig (Maybe Text)

-- | The event type or types for which notifications are triggered.
triggerConfig_triggerEvents :: Lens' TriggerConfig (Maybe [TriggerEventType])

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service topic through which notifications about deployment or instance
--   events are sent.
triggerConfig_triggerTargetArn :: Lens' TriggerConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.TriggerConfig.TriggerConfig
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.TriggerConfig.TriggerConfig
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.TriggerConfig.TriggerConfig
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.TriggerConfig.TriggerConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.TriggerConfig.TriggerConfig
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.TriggerConfig.TriggerConfig
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.TriggerConfig.TriggerConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.Types.TriggerConfig.TriggerConfig


module Network.AWS.CodeDeploy.Types.DeploymentGroupInfo

-- | Information about a deployment group.
--   
--   <i>See:</i> <a>newDeploymentGroupInfo</a> smart constructor.
data DeploymentGroupInfo
DeploymentGroupInfo' :: Maybe OnPremisesTagSet -> Maybe OutdatedInstancesStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe Text -> Maybe [TriggerConfig] -> Maybe [EC2TagFilter] -> Maybe RevisionLocation -> Maybe LastDeploymentInfo -> Maybe LastDeploymentInfo -> Maybe [TagFilter] -> Maybe BlueGreenDeploymentConfiguration -> Maybe LoadBalancerInfo -> Maybe EC2TagSet -> Maybe DeploymentStyle -> Maybe [AutoScalingGroup] -> Maybe [ECSService] -> Maybe AlarmConfiguration -> Maybe Text -> Maybe ComputePlatform -> DeploymentGroupInfo

-- | Information about groups of tags applied to an on-premises instance.
--   The deployment group includes only on-premises instances identified by
--   all the tag groups. Cannot be used in the same call as
--   onPremisesInstanceTagFilters.
[$sel:onPremisesTagSet:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe OnPremisesTagSet

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
[$sel:outdatedInstancesStrategy:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe OutdatedInstancesStrategy

-- | A service role Amazon Resource Name (ARN) that grants CodeDeploy
--   permission to make calls to AWS services on your behalf. For more
--   information, see <a>Create a Service Role for AWS CodeDeploy</a> in
--   the <i>AWS CodeDeploy User Guide</i>.
[$sel:serviceRoleArn:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | The deployment configuration name.
[$sel:deploymentConfigName:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | The deployment group name.
[$sel:deploymentGroupName:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | Information about the automatic rollback configuration associated with
--   the deployment group.
[$sel:autoRollbackConfiguration:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe AutoRollbackConfiguration

-- | The deployment group ID.
[$sel:deploymentGroupId:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | Information about triggers associated with the deployment group.
[$sel:triggerConfigurations:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [TriggerConfig]

-- | The Amazon EC2 tags on which to filter. The deployment group includes
--   EC2 instances with any of the specified tags.
[$sel:ec2TagFilters:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [EC2TagFilter]

-- | Information about the deployment group's target revision, including
--   type and location.
[$sel:targetRevision:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe RevisionLocation

-- | Information about the most recent attempted deployment to the
--   deployment group.
[$sel:lastAttemptedDeployment:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe LastDeploymentInfo

-- | Information about the most recent successful deployment to the
--   deployment group.
[$sel:lastSuccessfulDeployment:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe LastDeploymentInfo

-- | The on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags.
[$sel:onPremisesInstanceTagFilters:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [TagFilter]

-- | Information about blue/green deployment options for a deployment
--   group.
[$sel:blueGreenDeploymentConfiguration:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe BlueGreenDeploymentConfiguration

-- | Information about the load balancer to use in a deployment.
[$sel:loadBalancerInfo:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe LoadBalancerInfo

-- | Information about groups of tags applied to an EC2 instance. The
--   deployment group includes only EC2 instances identified by all of the
--   tag groups. Cannot be used in the same call as ec2TagFilters.
[$sel:ec2TagSet:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe EC2TagSet

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
[$sel:deploymentStyle:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe DeploymentStyle

-- | A list of associated Auto Scaling groups.
[$sel:autoScalingGroups:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [AutoScalingGroup]

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
[$sel:ecsServices:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [ECSService]

-- | A list of alarms associated with the deployment group.
[$sel:alarmConfiguration:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe AlarmConfiguration

-- | The application name.
[$sel:applicationName:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
[$sel:computePlatform:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe ComputePlatform

-- | Create a value of <a>DeploymentGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSet:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_onPremisesTagSet</a> - Information about groups
--   of tags applied to an on-premises instance. The deployment group
--   includes only on-premises instances identified by all the tag groups.
--   Cannot be used in the same call as onPremisesInstanceTagFilters.
--   
--   <a>$sel:outdatedInstancesStrategy:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_outdatedInstancesStrategy</a> - Indicates what
--   happens when new EC2 instances are launched mid-deployment and do not
--   receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
--   
--   <a>$sel:serviceRoleArn:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_serviceRoleArn</a> - A service role Amazon
--   Resource Name (ARN) that grants CodeDeploy permission to make calls to
--   AWS services on your behalf. For more information, see <a>Create a
--   Service Role for AWS CodeDeploy</a> in the <i>AWS CodeDeploy User
--   Guide</i>.
--   
--   <a>$sel:deploymentConfigName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentGroupName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentGroupName</a> - The deployment group
--   name.
--   
--   <a>$sel:autoRollbackConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_autoRollbackConfiguration</a> - Information
--   about the automatic rollback configuration associated with the
--   deployment group.
--   
--   <a>$sel:deploymentGroupId:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentGroupId</a> - The deployment group
--   ID.
--   
--   <a>$sel:triggerConfigurations:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_triggerConfigurations</a> - Information about
--   triggers associated with the deployment group.
--   
--   <a>$sel:ec2TagFilters:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ec2TagFilters</a> - The Amazon EC2 tags on
--   which to filter. The deployment group includes EC2 instances with any
--   of the specified tags.
--   
--   <a>$sel:targetRevision:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_targetRevision</a> - Information about the
--   deployment group's target revision, including type and location.
--   
--   <a>$sel:lastAttemptedDeployment:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_lastAttemptedDeployment</a> - Information about
--   the most recent attempted deployment to the deployment group.
--   
--   <a>$sel:lastSuccessfulDeployment:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_lastSuccessfulDeployment</a> - Information
--   about the most recent successful deployment to the deployment group.
--   
--   <a>$sel:onPremisesInstanceTagFilters:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_onPremisesInstanceTagFilters</a> - The
--   on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags.
--   
--   <a>$sel:blueGreenDeploymentConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_blueGreenDeploymentConfiguration</a> -
--   Information about blue/green deployment options for a deployment
--   group.
--   
--   <a>$sel:loadBalancerInfo:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_loadBalancerInfo</a> - Information about the
--   load balancer to use in a deployment.
--   
--   <a>$sel:ec2TagSet:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ec2TagSet</a> - Information about groups of
--   tags applied to an EC2 instance. The deployment group includes only
--   EC2 instances identified by all of the tag groups. Cannot be used in
--   the same call as ec2TagFilters.
--   
--   <a>$sel:deploymentStyle:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentStyle</a> - Information about the
--   type of deployment, either in-place or blue/green, you want to run and
--   whether to route deployment traffic behind a load balancer.
--   
--   <a>$sel:autoScalingGroups:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_autoScalingGroups</a> - A list of associated
--   Auto Scaling groups.
--   
--   <a>$sel:ecsServices:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ecsServices</a> - The target Amazon ECS
--   services in the deployment group. This applies only to deployment
--   groups that use the Amazon ECS compute platform. A target Amazon ECS
--   service is specified as an Amazon ECS cluster and service name pair
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   
--   <a>$sel:alarmConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_alarmConfiguration</a> - A list of alarms
--   associated with the deployment group.
--   
--   <a>$sel:applicationName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_applicationName</a> - The application name.
--   
--   <a>$sel:computePlatform:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_computePlatform</a> - The destination platform
--   type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
newDeploymentGroupInfo :: DeploymentGroupInfo

-- | Information about groups of tags applied to an on-premises instance.
--   The deployment group includes only on-premises instances identified by
--   all the tag groups. Cannot be used in the same call as
--   onPremisesInstanceTagFilters.
deploymentGroupInfo_onPremisesTagSet :: Lens' DeploymentGroupInfo (Maybe OnPremisesTagSet)

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
deploymentGroupInfo_outdatedInstancesStrategy :: Lens' DeploymentGroupInfo (Maybe OutdatedInstancesStrategy)

-- | A service role Amazon Resource Name (ARN) that grants CodeDeploy
--   permission to make calls to AWS services on your behalf. For more
--   information, see <a>Create a Service Role for AWS CodeDeploy</a> in
--   the <i>AWS CodeDeploy User Guide</i>.
deploymentGroupInfo_serviceRoleArn :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The deployment configuration name.
deploymentGroupInfo_deploymentConfigName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The deployment group name.
deploymentGroupInfo_deploymentGroupName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | Information about the automatic rollback configuration associated with
--   the deployment group.
deploymentGroupInfo_autoRollbackConfiguration :: Lens' DeploymentGroupInfo (Maybe AutoRollbackConfiguration)

-- | The deployment group ID.
deploymentGroupInfo_deploymentGroupId :: Lens' DeploymentGroupInfo (Maybe Text)

-- | Information about triggers associated with the deployment group.
deploymentGroupInfo_triggerConfigurations :: Lens' DeploymentGroupInfo (Maybe [TriggerConfig])

-- | The Amazon EC2 tags on which to filter. The deployment group includes
--   EC2 instances with any of the specified tags.
deploymentGroupInfo_ec2TagFilters :: Lens' DeploymentGroupInfo (Maybe [EC2TagFilter])

-- | Information about the deployment group's target revision, including
--   type and location.
deploymentGroupInfo_targetRevision :: Lens' DeploymentGroupInfo (Maybe RevisionLocation)

-- | Information about the most recent attempted deployment to the
--   deployment group.
deploymentGroupInfo_lastAttemptedDeployment :: Lens' DeploymentGroupInfo (Maybe LastDeploymentInfo)

-- | Information about the most recent successful deployment to the
--   deployment group.
deploymentGroupInfo_lastSuccessfulDeployment :: Lens' DeploymentGroupInfo (Maybe LastDeploymentInfo)

-- | The on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags.
deploymentGroupInfo_onPremisesInstanceTagFilters :: Lens' DeploymentGroupInfo (Maybe [TagFilter])

-- | Information about blue/green deployment options for a deployment
--   group.
deploymentGroupInfo_blueGreenDeploymentConfiguration :: Lens' DeploymentGroupInfo (Maybe BlueGreenDeploymentConfiguration)

-- | Information about the load balancer to use in a deployment.
deploymentGroupInfo_loadBalancerInfo :: Lens' DeploymentGroupInfo (Maybe LoadBalancerInfo)

-- | Information about groups of tags applied to an EC2 instance. The
--   deployment group includes only EC2 instances identified by all of the
--   tag groups. Cannot be used in the same call as ec2TagFilters.
deploymentGroupInfo_ec2TagSet :: Lens' DeploymentGroupInfo (Maybe EC2TagSet)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
deploymentGroupInfo_deploymentStyle :: Lens' DeploymentGroupInfo (Maybe DeploymentStyle)

-- | A list of associated Auto Scaling groups.
deploymentGroupInfo_autoScalingGroups :: Lens' DeploymentGroupInfo (Maybe [AutoScalingGroup])

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
deploymentGroupInfo_ecsServices :: Lens' DeploymentGroupInfo (Maybe [ECSService])

-- | A list of alarms associated with the deployment group.
deploymentGroupInfo_alarmConfiguration :: Lens' DeploymentGroupInfo (Maybe AlarmConfiguration)

-- | The application name.
deploymentGroupInfo_applicationName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentGroupInfo_computePlatform :: Lens' DeploymentGroupInfo (Maybe ComputePlatform)
instance GHC.Generics.Generic Network.AWS.CodeDeploy.Types.DeploymentGroupInfo.DeploymentGroupInfo
instance GHC.Show.Show Network.AWS.CodeDeploy.Types.DeploymentGroupInfo.DeploymentGroupInfo
instance GHC.Read.Read Network.AWS.CodeDeploy.Types.DeploymentGroupInfo.DeploymentGroupInfo
instance GHC.Classes.Eq Network.AWS.CodeDeploy.Types.DeploymentGroupInfo.DeploymentGroupInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CodeDeploy.Types.DeploymentGroupInfo.DeploymentGroupInfo
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.Types.DeploymentGroupInfo.DeploymentGroupInfo
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.Types.DeploymentGroupInfo.DeploymentGroupInfo


module Network.AWS.CodeDeploy.Types

-- | API version <tt>2014-10-06</tt> of the Amazon CodeDeploy SDK
--   configuration.
defaultService :: Service

-- | The deployment groups limit was exceeded.
_DeploymentGroupLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A deployment group with the specified name with the IAM user or AWS
--   account already exists.
_DeploymentGroupAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A bucket name is required, but was not provided.
_BucketNameFilterRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid instance type was specified for instances in a blue/green
--   deployment. Valid values include "Blue" for an original environment
--   and "Green" for a replacement environment.
_InvalidInstanceTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The IAM user ARN was specified in an invalid format.
_InvalidIamUserArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The named revision does not exist with the IAM user or AWS account.
_RevisionDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified on-premises instance name is already registered.
_InstanceNameAlreadyRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configuration does not exist with the IAM user or AWS
--   account.
_DeploymentConfigDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The trigger was specified in an invalid format.
_InvalidTriggerConfigException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag filter was specified in an invalid format.
_InvalidTagFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid fileExistsBehavior option was specified to determine how
--   AWS CodeDeploy handles files or directories that already exist in a
--   deployment target location, but weren't part of the previous
--   successful deployment. Valid values include "DISALLOW," "OVERWRITE,"
--   and "RETAIN."
_InvalidFileExistsBehaviorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided target ID does not belong to the attempted deployment.
_DeploymentTargetDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of alarms for a deployment group (10) was exceeded.
_AlarmsLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified key prefix filter was specified in an invalid format.
_InvalidKeyPrefixFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified ARN is not supported. For example, it might be an ARN
--   for a resource that is not expected.
_ArnNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A deployment to a target was attempted while another deployment was in
--   progress.
_DeploymentAlreadyStartedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The API used does not support the deployment.
_OperationNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The GitHub token is not valid.
_InvalidGitHubAccountTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The external ID was specified in an invalid format.
_InvalidExternalIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A call was submitted that is not supported for the specified
--   deployment type.
_UnsupportedActionForDeploymentTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource could not be validated.
_ResourceValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The minimum healthy instance value was specified in an invalid format.
_InvalidMinimumHealthyHostValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The format of the specified GitHub account connection name is invalid.
_InvalidGitHubAccountTokenNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon ECS service identifier is not valid.
_InvalidECSServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An instance type was specified for an in-place deployment. Instance
--   types are supported for blue/green deployments only.
_InvalidDeploymentInstanceTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | More applications were attempted to be created than are allowed.
_ApplicationLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A deployment target ID was not provided.
_DeploymentTargetIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Auto Scaling group was specified in an invalid format or does not
--   exist.
_InvalidAutoScalingGroupException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid operation was detected.
_InvalidOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum allowed number of tags was exceeded.
_TagLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified ARN is not in a valid format.
_InvalidArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An application with the specified name with the IAM user or AWS
--   account already exists.
_ApplicationAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of allowed deployments was exceeded.
_DeploymentLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input was specified in an invalid format.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An on-premises instance name was not specified.
_InstanceNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified IAM user ARN is already registered with an on-premises
--   instance.
_IamUserArnAlreadyRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target filter name is invalid.
_InvalidTargetFilterNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of allowed on-premises instances in a single call
--   was exceeded.
_InstanceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target instance configuration is invalid. Possible causes include:
--   
--   <ul>
--   <li>Configuration data for target instances was entered for an
--   in-place deployment.</li>
--   <li>The limit of 10 tags for a tag type was exceeded.</li>
--   <li>The combined length of the tag names exceeded the limit.</li>
--   <li>A specified tag is not currently applied to any instances.</li>
--   </ul>
_InvalidTargetInstancesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The revision was specified in an invalid format.
_InvalidRevisionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified tags are not valid.
_InvalidTagsToAddException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The automatic rollback configuration was specified in an invalid
--   format. For example, automatic rollback is enabled, but an invalid
--   triggering event type or no event types were listed.
_InvalidAutoRollbackConfigException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one deployment ID must be specified.
_DeploymentIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service role ARN was specified in an invalid format. Or, if an
--   Auto Scaling group was specified, the specified service role does not
--   grant the appropriate permissions to Amazon EC2 Auto Scaling.
_InvalidRoleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configuration name was not specified.
_DeploymentConfigNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The configuration for the blue/green deployment group was provided in
--   an invalid format. For information about deployment configuration
--   format, see CreateDeploymentConfig.
_InvalidBlueGreenDeploymentConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The instance ID was not specified.
_InstanceIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The sort order was specified in an invalid format.
_InvalidSortOrderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configurations limit was exceeded.
_DeploymentConfigLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A deployment configuration with the specified name with the IAM user
--   or AWS account already exists.
_DeploymentConfigAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid load balancer name, or no load balancer name, was
--   specified.
_InvalidLoadBalancerInfoException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A call was submitted that specified both OnPremisesTagFilters and
--   OnPremisesTagSet, but only one of these data types can be used in a
--   single call.
_InvalidOnPremisesTagCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An API function was called too frequently.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A target group pair associated with this deployment is not valid.
_InvalidTargetGroupPairException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The next token was specified in an invalid format.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The description is too long.
_DescriptionTooLongException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An IAM user ARN was not specified.
_IamUserArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A target is not valid.
_InvalidTargetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment group name was specified in an invalid format.
_InvalidDeploymentGroupNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The column name to sort by is either not present or was specified in
--   an invalid format.
_InvalidSortByException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The bucket name either doesn't exist or was specified in an invalid
--   format.
_InvalidBucketNameFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The configuration that specifies how traffic is routed during a
--   deployment is invalid.
_InvalidTrafficRoutingConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment group name was not specified.
_DeploymentGroupNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The format of the alarm configuration is invalid. Possible causes
--   include:
--   
--   <ul>
--   <li>The alarm list is null.</li>
--   <li>The alarm object is null.</li>
--   <li>The alarm name is empty or null or exceeds the limit of 255
--   characters.</li>
--   <li>Two alarms with the same name have been specified.</li>
--   <li>The alarm configuration is enabled, but the alarm list is
--   empty.</li>
--   </ul>
_InvalidAlarmConfigException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request included an IAM session ARN that has already been used to
--   register a different instance.
_IamSessionArnAlreadyRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The computePlatform is invalid. The computePlatform should be
--   <tt>Lambda</tt>, <tt>Server</tt>, or <tt>ECS</tt>.
_InvalidComputePlatformException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The wait type is invalid.
_InvalidDeploymentWaitTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag was specified in an invalid format.
_InvalidTagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit for lifecycle hooks was exceeded.
_LifecycleHookLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The IgnoreApplicationStopFailures value is invalid. For AWS Lambda
--   deployments, <tt>false</tt> is expected. For EC2/On-premises
--   deployments, <tt>true</tt> or <tt>false</tt> is expected.
_InvalidIgnoreApplicationStopFailuresValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified time range was specified in an invalid format.
_InvalidTimeRangeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A tag was not specified.
_TagRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The UpdateOutdatedInstancesOnly value is invalid. For AWS Lambda
--   deployments, <tt>false</tt> is expected. For EC2/On-premises
--   deployments, <tt>true</tt> or <tt>false</tt> is expected.
_InvalidUpdateOutdatedInstancesOnlyValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The result of a Lambda validation function that verifies a lifecycle
--   event is invalid. It should return <tt>Succeeded</tt> or
--   <tt>Failed</tt>.
_InvalidLifecycleEventHookExecutionStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A call was submitted that specified both Ec2TagFilters and Ec2TagSet,
--   but only one of these data types can be used in a single call.
_InvalidEC2TagCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The ARN of a resource is required, but was not found.
_ResourceArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The call is missing a required GitHub account connection name.
_GitHubAccountTokenNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | No IAM ARN was included in the request. You must use an IAM session
--   ARN or IAM user ARN in the request.
_IamArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The application does not exist with the IAM user or AWS account.
_ApplicationDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An attempt to return the status of an already completed lifecycle
--   event occurred.
_LifecycleEventAlreadyCompletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of tag groups included in the tag set list exceeded the
--   maximum allowed limit of 3.
_TagSetListLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | No GitHub account connection exists with the named specified in the
--   call.
_GitHubAccountTokenDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified on-premises instance is not registered.
_InstanceNotRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified instance status does not exist.
_InvalidInstanceStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of targets that can be associated with an Amazon
--   ECS or AWS Lambda deployment was exceeded. The target list of both
--   types of deployments must have exactly one item. This exception does
--   not apply to EC2/On-premises deployments.
_DeploymentTargetListSizeExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The minimum number of required application names was not specified.
_ApplicationNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The application name was specified in an invalid format.
_InvalidApplicationNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target ID provided was not valid.
_InvalidDeploymentTargetIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified deployment status doesn't exist or cannot be determined.
_InvalidDeploymentStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum allowed number of triggers was exceeded.
_TriggerTargetsLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployed state filter was specified in an invalid format.
_InvalidDeployedStateFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Both an IAM user ARN and an IAM session ARN were included in the
--   request. Use only one ARN type.
_MultipleIamArnsProvidedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The registration status was specified in an invalid format.
_InvalidRegistrationStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag was specified in an invalid format.
_InvalidEC2TagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The on-premises instance name was specified in an invalid format.
_InvalidInstanceNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid deployment style was specified. Valid deployment types
--   include "IN_PLACE" and "BLUE_GREEN." Valid deployment options include
--   "WITH_TRAFFIC_CONTROL" and "WITHOUT_TRAFFIC_CONTROL."
_InvalidDeploymentStyleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A lifecycle event hook is invalid. Review the <tt>hooks</tt> section
--   in your AppSpec file to ensure the lifecycle events and <tt>hooks</tt>
--   functions are valid.
_InvalidLifecycleEventHookExecutionIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configuration is still in use.
_DeploymentConfigInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The IAM session ARN was specified in an invalid format.
_InvalidIamSessionArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of names or IDs allowed for this request (100) was
--   exceeded.
_BatchLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The revision ID was not specified.
_RevisionRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon ECS service is associated with more than one deployment
--   groups. An Amazon ECS service can be associated with only one
--   deployment group.
_ECSServiceMappingLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment is already complete.
_DeploymentAlreadyCompletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment with the IAM user or AWS account does not exist.
_DeploymentDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified instance does not exist in the deployment group.
_InstanceDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified deployment has not started.
_DeploymentNotStartedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The role ID was not specified.
_RoleRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one of the deployment IDs was specified in an invalid format.
_InvalidDeploymentIdException :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidInstanceIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configuration name was specified in an invalid format.
_InvalidDeploymentConfigNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The named deployment group with the IAM user or AWS account does not
--   exist.
_DeploymentGroupDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment does not have a status of Ready and can't continue yet.
_DeploymentIsNotInReadyStateException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ApplicationRevisionSortBy
ApplicationRevisionSortBy' :: Text -> ApplicationRevisionSortBy
[fromApplicationRevisionSortBy] :: ApplicationRevisionSortBy -> Text
pattern ApplicationRevisionSortBy_FirstUsedTime :: ApplicationRevisionSortBy
pattern ApplicationRevisionSortBy_LastUsedTime :: ApplicationRevisionSortBy
pattern ApplicationRevisionSortBy_RegisterTime :: ApplicationRevisionSortBy
newtype AutoRollbackEvent
AutoRollbackEvent' :: Text -> AutoRollbackEvent
[fromAutoRollbackEvent] :: AutoRollbackEvent -> Text
pattern AutoRollbackEvent_DEPLOYMENT_FAILURE :: AutoRollbackEvent
pattern AutoRollbackEvent_DEPLOYMENT_STOP_ON_ALARM :: AutoRollbackEvent
pattern AutoRollbackEvent_DEPLOYMENT_STOP_ON_REQUEST :: AutoRollbackEvent
newtype BundleType
BundleType' :: Text -> BundleType
[fromBundleType] :: BundleType -> Text
pattern BundleType_JSON :: BundleType
pattern BundleType_Tar :: BundleType
pattern BundleType_Tgz :: BundleType
pattern BundleType_YAML :: BundleType
pattern BundleType_Zip :: BundleType
newtype ComputePlatform
ComputePlatform' :: Text -> ComputePlatform
[fromComputePlatform] :: ComputePlatform -> Text
pattern ComputePlatform_ECS :: ComputePlatform
pattern ComputePlatform_Lambda :: ComputePlatform
pattern ComputePlatform_Server :: ComputePlatform
newtype DeployErrorCode
DeployErrorCode' :: Text -> DeployErrorCode
[fromDeployErrorCode] :: DeployErrorCode -> Text
pattern DeployErrorCode_AGENT_ISSUE :: DeployErrorCode
pattern DeployErrorCode_ALARM_ACTIVE :: DeployErrorCode
pattern DeployErrorCode_APPLICATION_MISSING :: DeployErrorCode
pattern DeployErrorCode_AUTOSCALING_VALIDATION_ERROR :: DeployErrorCode
pattern DeployErrorCode_AUTO_SCALING_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_AUTO_SCALING_IAM_ROLE_PERMISSIONS :: DeployErrorCode
pattern DeployErrorCode_CLOUDFORMATION_STACK_FAILURE :: DeployErrorCode
pattern DeployErrorCode_CODEDEPLOY_RESOURCE_CANNOT_BE_FOUND :: DeployErrorCode
pattern DeployErrorCode_CUSTOMER_APPLICATION_UNHEALTHY :: DeployErrorCode
pattern DeployErrorCode_DEPLOYMENT_GROUP_MISSING :: DeployErrorCode
pattern DeployErrorCode_ECS_UPDATE_ERROR :: DeployErrorCode
pattern DeployErrorCode_ELASTIC_LOAD_BALANCING_INVALID :: DeployErrorCode
pattern DeployErrorCode_ELB_INVALID_INSTANCE :: DeployErrorCode
pattern DeployErrorCode_HEALTH_CONSTRAINTS :: DeployErrorCode
pattern DeployErrorCode_HEALTH_CONSTRAINTS_INVALID :: DeployErrorCode
pattern DeployErrorCode_HOOK_EXECUTION_FAILURE :: DeployErrorCode
pattern DeployErrorCode_IAM_ROLE_MISSING :: DeployErrorCode
pattern DeployErrorCode_IAM_ROLE_PERMISSIONS :: DeployErrorCode
pattern DeployErrorCode_INTERNAL_ERROR :: DeployErrorCode
pattern DeployErrorCode_INVALID_ECS_SERVICE :: DeployErrorCode
pattern DeployErrorCode_INVALID_LAMBDA_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_INVALID_LAMBDA_FUNCTION :: DeployErrorCode
pattern DeployErrorCode_INVALID_REVISION :: DeployErrorCode
pattern DeployErrorCode_MANUAL_STOP :: DeployErrorCode
pattern DeployErrorCode_MISSING_BLUE_GREEN_DEPLOYMENT_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_MISSING_ELB_INFORMATION :: DeployErrorCode
pattern DeployErrorCode_MISSING_GITHUB_TOKEN :: DeployErrorCode
pattern DeployErrorCode_NO_EC2_SUBSCRIPTION :: DeployErrorCode
pattern DeployErrorCode_NO_INSTANCES :: DeployErrorCode
pattern DeployErrorCode_OVER_MAX_INSTANCES :: DeployErrorCode
pattern DeployErrorCode_RESOURCE_LIMIT_EXCEEDED :: DeployErrorCode
pattern DeployErrorCode_REVISION_MISSING :: DeployErrorCode
pattern DeployErrorCode_THROTTLED :: DeployErrorCode
pattern DeployErrorCode_TIMEOUT :: DeployErrorCode
newtype DeploymentCreator
DeploymentCreator' :: Text -> DeploymentCreator
[fromDeploymentCreator] :: DeploymentCreator -> Text
pattern DeploymentCreator_Autoscaling :: DeploymentCreator
pattern DeploymentCreator_CloudFormation :: DeploymentCreator
pattern DeploymentCreator_CloudFormationRollback :: DeploymentCreator
pattern DeploymentCreator_CodeDeploy :: DeploymentCreator
pattern DeploymentCreator_CodeDeployAutoUpdate :: DeploymentCreator
pattern DeploymentCreator_CodeDeployRollback :: DeploymentCreator
pattern DeploymentCreator_User :: DeploymentCreator
newtype DeploymentOption
DeploymentOption' :: Text -> DeploymentOption
[fromDeploymentOption] :: DeploymentOption -> Text
pattern DeploymentOption_WITHOUT_TRAFFIC_CONTROL :: DeploymentOption
pattern DeploymentOption_WITH_TRAFFIC_CONTROL :: DeploymentOption
newtype DeploymentReadyAction
DeploymentReadyAction' :: Text -> DeploymentReadyAction
[fromDeploymentReadyAction] :: DeploymentReadyAction -> Text
pattern DeploymentReadyAction_CONTINUE_DEPLOYMENT :: DeploymentReadyAction
pattern DeploymentReadyAction_STOP_DEPLOYMENT :: DeploymentReadyAction
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_Baking :: DeploymentStatus
pattern DeploymentStatus_Created :: DeploymentStatus
pattern DeploymentStatus_Failed :: DeploymentStatus
pattern DeploymentStatus_InProgress :: DeploymentStatus
pattern DeploymentStatus_Queued :: DeploymentStatus
pattern DeploymentStatus_Ready :: DeploymentStatus
pattern DeploymentStatus_Stopped :: DeploymentStatus
pattern DeploymentStatus_Succeeded :: DeploymentStatus
newtype DeploymentTargetType
DeploymentTargetType' :: Text -> DeploymentTargetType
[fromDeploymentTargetType] :: DeploymentTargetType -> Text
pattern DeploymentTargetType_CloudFormationTarget :: DeploymentTargetType
pattern DeploymentTargetType_ECSTarget :: DeploymentTargetType
pattern DeploymentTargetType_InstanceTarget :: DeploymentTargetType
pattern DeploymentTargetType_LambdaTarget :: DeploymentTargetType
newtype DeploymentType
DeploymentType' :: Text -> DeploymentType
[fromDeploymentType] :: DeploymentType -> Text
pattern DeploymentType_BLUE_GREEN :: DeploymentType
pattern DeploymentType_IN_PLACE :: DeploymentType
newtype DeploymentWaitType
DeploymentWaitType' :: Text -> DeploymentWaitType
[fromDeploymentWaitType] :: DeploymentWaitType -> Text
pattern DeploymentWaitType_READY_WAIT :: DeploymentWaitType
pattern DeploymentWaitType_TERMINATION_WAIT :: DeploymentWaitType
newtype EC2TagFilterType
EC2TagFilterType' :: Text -> EC2TagFilterType
[fromEC2TagFilterType] :: EC2TagFilterType -> Text
pattern EC2TagFilterType_KEY_AND_VALUE :: EC2TagFilterType
pattern EC2TagFilterType_KEY_ONLY :: EC2TagFilterType
pattern EC2TagFilterType_VALUE_ONLY :: EC2TagFilterType
newtype FileExistsBehavior
FileExistsBehavior' :: Text -> FileExistsBehavior
[fromFileExistsBehavior] :: FileExistsBehavior -> Text
pattern FileExistsBehavior_DISALLOW :: FileExistsBehavior
pattern FileExistsBehavior_OVERWRITE :: FileExistsBehavior
pattern FileExistsBehavior_RETAIN :: FileExistsBehavior
newtype GreenFleetProvisioningAction
GreenFleetProvisioningAction' :: Text -> GreenFleetProvisioningAction
[fromGreenFleetProvisioningAction] :: GreenFleetProvisioningAction -> Text
pattern GreenFleetProvisioningAction_COPY_AUTO_SCALING_GROUP :: GreenFleetProvisioningAction
pattern GreenFleetProvisioningAction_DISCOVER_EXISTING :: GreenFleetProvisioningAction
newtype InstanceAction
InstanceAction' :: Text -> InstanceAction
[fromInstanceAction] :: InstanceAction -> Text
pattern InstanceAction_KEEP_ALIVE :: InstanceAction
pattern InstanceAction_TERMINATE :: InstanceAction
newtype LifecycleErrorCode
LifecycleErrorCode' :: Text -> LifecycleErrorCode
[fromLifecycleErrorCode] :: LifecycleErrorCode -> Text
pattern LifecycleErrorCode_ScriptFailed :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptMissing :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptNotExecutable :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptTimedOut :: LifecycleErrorCode
pattern LifecycleErrorCode_Success :: LifecycleErrorCode
pattern LifecycleErrorCode_UnknownError :: LifecycleErrorCode
newtype LifecycleEventStatus
LifecycleEventStatus' :: Text -> LifecycleEventStatus
[fromLifecycleEventStatus] :: LifecycleEventStatus -> Text
pattern LifecycleEventStatus_Failed :: LifecycleEventStatus
pattern LifecycleEventStatus_InProgress :: LifecycleEventStatus
pattern LifecycleEventStatus_Pending :: LifecycleEventStatus
pattern LifecycleEventStatus_Skipped :: LifecycleEventStatus
pattern LifecycleEventStatus_Succeeded :: LifecycleEventStatus
pattern LifecycleEventStatus_Unknown :: LifecycleEventStatus
newtype ListStateFilterAction
ListStateFilterAction' :: Text -> ListStateFilterAction
[fromListStateFilterAction] :: ListStateFilterAction -> Text
pattern ListStateFilterAction_Exclude :: ListStateFilterAction
pattern ListStateFilterAction_Ignore :: ListStateFilterAction
pattern ListStateFilterAction_Include :: ListStateFilterAction
newtype MinimumHealthyHostsType
MinimumHealthyHostsType' :: Text -> MinimumHealthyHostsType
[fromMinimumHealthyHostsType] :: MinimumHealthyHostsType -> Text
pattern MinimumHealthyHostsType_FLEET_PERCENT :: MinimumHealthyHostsType
pattern MinimumHealthyHostsType_HOST_COUNT :: MinimumHealthyHostsType
newtype OutdatedInstancesStrategy
OutdatedInstancesStrategy' :: Text -> OutdatedInstancesStrategy
[fromOutdatedInstancesStrategy] :: OutdatedInstancesStrategy -> Text
pattern OutdatedInstancesStrategy_IGNORE :: OutdatedInstancesStrategy
pattern OutdatedInstancesStrategy_UPDATE :: OutdatedInstancesStrategy
newtype RegistrationStatus
RegistrationStatus' :: Text -> RegistrationStatus
[fromRegistrationStatus] :: RegistrationStatus -> Text
pattern RegistrationStatus_Deregistered :: RegistrationStatus
pattern RegistrationStatus_Registered :: RegistrationStatus
newtype RevisionLocationType
RevisionLocationType' :: Text -> RevisionLocationType
[fromRevisionLocationType] :: RevisionLocationType -> Text
pattern RevisionLocationType_AppSpecContent :: RevisionLocationType
pattern RevisionLocationType_GitHub :: RevisionLocationType
pattern RevisionLocationType_S3 :: RevisionLocationType
pattern RevisionLocationType_String :: RevisionLocationType
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Ascending :: SortOrder
pattern SortOrder_Descending :: SortOrder
newtype StopStatus
StopStatus' :: Text -> StopStatus
[fromStopStatus] :: StopStatus -> Text
pattern StopStatus_Pending :: StopStatus
pattern StopStatus_Succeeded :: StopStatus
newtype TagFilterType
TagFilterType' :: Text -> TagFilterType
[fromTagFilterType] :: TagFilterType -> Text
pattern TagFilterType_KEY_AND_VALUE :: TagFilterType
pattern TagFilterType_KEY_ONLY :: TagFilterType
pattern TagFilterType_VALUE_ONLY :: TagFilterType
newtype TargetFilterName
TargetFilterName' :: Text -> TargetFilterName
[fromTargetFilterName] :: TargetFilterName -> Text
pattern TargetFilterName_ServerInstanceLabel :: TargetFilterName
pattern TargetFilterName_TargetStatus :: TargetFilterName
newtype TargetLabel
TargetLabel' :: Text -> TargetLabel
[fromTargetLabel] :: TargetLabel -> Text
pattern TargetLabel_Blue :: TargetLabel
pattern TargetLabel_Green :: TargetLabel
newtype TargetStatus
TargetStatus' :: Text -> TargetStatus
[fromTargetStatus] :: TargetStatus -> Text
pattern TargetStatus_Failed :: TargetStatus
pattern TargetStatus_InProgress :: TargetStatus
pattern TargetStatus_Pending :: TargetStatus
pattern TargetStatus_Ready :: TargetStatus
pattern TargetStatus_Skipped :: TargetStatus
pattern TargetStatus_Succeeded :: TargetStatus
pattern TargetStatus_Unknown :: TargetStatus
newtype TrafficRoutingType
TrafficRoutingType' :: Text -> TrafficRoutingType
[fromTrafficRoutingType] :: TrafficRoutingType -> Text
pattern TrafficRoutingType_AllAtOnce :: TrafficRoutingType
pattern TrafficRoutingType_TimeBasedCanary :: TrafficRoutingType
pattern TrafficRoutingType_TimeBasedLinear :: TrafficRoutingType
newtype TriggerEventType
TriggerEventType' :: Text -> TriggerEventType
[fromTriggerEventType] :: TriggerEventType -> Text
pattern TriggerEventType_DeploymentFailure :: TriggerEventType
pattern TriggerEventType_DeploymentReady :: TriggerEventType
pattern TriggerEventType_DeploymentRollback :: TriggerEventType
pattern TriggerEventType_DeploymentStart :: TriggerEventType
pattern TriggerEventType_DeploymentStop :: TriggerEventType
pattern TriggerEventType_DeploymentSuccess :: TriggerEventType
pattern TriggerEventType_InstanceFailure :: TriggerEventType
pattern TriggerEventType_InstanceReady :: TriggerEventType
pattern TriggerEventType_InstanceStart :: TriggerEventType
pattern TriggerEventType_InstanceSuccess :: TriggerEventType

-- | Information about an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Alarm

-- | The name of the alarm. Maximum length is 255 characters. Each alarm
--   name can be used only once in a list of alarms.
[$sel:name:Alarm'] :: Alarm -> Maybe Text

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Alarm'</a>, <a>alarm_name</a> - The name of the alarm.
--   Maximum length is 255 characters. Each alarm name can be used only
--   once in a list of alarms.
newAlarm :: Alarm

-- | The name of the alarm. Maximum length is 255 characters. Each alarm
--   name can be used only once in a list of alarms.
alarm_name :: Lens' Alarm (Maybe Text)

-- | Information about alarms associated with the deployment group.
--   
--   <i>See:</i> <a>newAlarmConfiguration</a> smart constructor.
data AlarmConfiguration
AlarmConfiguration' :: Maybe Bool -> Maybe Bool -> Maybe [Alarm] -> AlarmConfiguration

-- | Indicates whether a deployment should continue if information about
--   the current state of alarms cannot be retrieved from Amazon
--   CloudWatch. The default value is false.
--   
--   <ul>
--   <li><tt>true</tt>: The deployment proceeds even if alarm status
--   information can't be retrieved from Amazon CloudWatch.</li>
--   <li><tt>false</tt>: The deployment stops if alarm status information
--   can't be retrieved from Amazon CloudWatch.</li>
--   </ul>
[$sel:ignorePollAlarmFailure:AlarmConfiguration'] :: AlarmConfiguration -> Maybe Bool

-- | Indicates whether the alarm configuration is enabled.
[$sel:enabled:AlarmConfiguration'] :: AlarmConfiguration -> Maybe Bool

-- | A list of alarms configured for the deployment group. A maximum of 10
--   alarms can be added to a deployment group.
[$sel:alarms:AlarmConfiguration'] :: AlarmConfiguration -> Maybe [Alarm]

-- | Create a value of <a>AlarmConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ignorePollAlarmFailure:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_ignorePollAlarmFailure</a> - Indicates whether a
--   deployment should continue if information about the current state of
--   alarms cannot be retrieved from Amazon CloudWatch. The default value
--   is false.
--   
--   <ul>
--   <li><tt>true</tt>: The deployment proceeds even if alarm status
--   information can't be retrieved from Amazon CloudWatch.</li>
--   <li><tt>false</tt>: The deployment stops if alarm status information
--   can't be retrieved from Amazon CloudWatch.</li>
--   </ul>
--   
--   <a>$sel:enabled:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_enabled</a> - Indicates whether the alarm
--   configuration is enabled.
--   
--   <a>$sel:alarms:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_alarms</a> - A list of alarms configured for the
--   deployment group. A maximum of 10 alarms can be added to a deployment
--   group.
newAlarmConfiguration :: AlarmConfiguration

-- | Indicates whether a deployment should continue if information about
--   the current state of alarms cannot be retrieved from Amazon
--   CloudWatch. The default value is false.
--   
--   <ul>
--   <li><tt>true</tt>: The deployment proceeds even if alarm status
--   information can't be retrieved from Amazon CloudWatch.</li>
--   <li><tt>false</tt>: The deployment stops if alarm status information
--   can't be retrieved from Amazon CloudWatch.</li>
--   </ul>
alarmConfiguration_ignorePollAlarmFailure :: Lens' AlarmConfiguration (Maybe Bool)

-- | Indicates whether the alarm configuration is enabled.
alarmConfiguration_enabled :: Lens' AlarmConfiguration (Maybe Bool)

-- | A list of alarms configured for the deployment group. A maximum of 10
--   alarms can be added to a deployment group.
alarmConfiguration_alarms :: Lens' AlarmConfiguration (Maybe [Alarm])

-- | A revision for an AWS Lambda or Amazon ECS deployment that is a
--   YAML-formatted or JSON-formatted string. For AWS Lambda and Amazon ECS
--   deployments, the revision is the same as the AppSpec file. This method
--   replaces the deprecated <tt>RawString</tt> data type.
--   
--   <i>See:</i> <a>newAppSpecContent</a> smart constructor.
data AppSpecContent
AppSpecContent' :: Maybe Text -> Maybe Text -> AppSpecContent

-- | The YAML-formatted or JSON-formatted revision string.
--   
--   For an AWS Lambda deployment, the content includes a Lambda function
--   name, the alias for its original version, and the alias for its
--   replacement version. The deployment shifts traffic from the original
--   version of the Lambda function to the replacement version.
--   
--   For an Amazon ECS deployment, the content includes the task name,
--   information about the load balancer that serves traffic to the
--   container, and more.
--   
--   For both types of deployments, the content can specify Lambda
--   functions that run at specified hooks, such as <tt>BeforeInstall</tt>,
--   during a deployment.
[$sel:content:AppSpecContent'] :: AppSpecContent -> Maybe Text

-- | The SHA256 hash value of the revision content.
[$sel:sha256:AppSpecContent'] :: AppSpecContent -> Maybe Text

-- | Create a value of <a>AppSpecContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:AppSpecContent'</a>, <a>appSpecContent_content</a> -
--   The YAML-formatted or JSON-formatted revision string.
--   
--   For an AWS Lambda deployment, the content includes a Lambda function
--   name, the alias for its original version, and the alias for its
--   replacement version. The deployment shifts traffic from the original
--   version of the Lambda function to the replacement version.
--   
--   For an Amazon ECS deployment, the content includes the task name,
--   information about the load balancer that serves traffic to the
--   container, and more.
--   
--   For both types of deployments, the content can specify Lambda
--   functions that run at specified hooks, such as <tt>BeforeInstall</tt>,
--   during a deployment.
--   
--   <a>$sel:sha256:AppSpecContent'</a>, <a>appSpecContent_sha256</a> - The
--   SHA256 hash value of the revision content.
newAppSpecContent :: AppSpecContent

-- | The YAML-formatted or JSON-formatted revision string.
--   
--   For an AWS Lambda deployment, the content includes a Lambda function
--   name, the alias for its original version, and the alias for its
--   replacement version. The deployment shifts traffic from the original
--   version of the Lambda function to the replacement version.
--   
--   For an Amazon ECS deployment, the content includes the task name,
--   information about the load balancer that serves traffic to the
--   container, and more.
--   
--   For both types of deployments, the content can specify Lambda
--   functions that run at specified hooks, such as <tt>BeforeInstall</tt>,
--   during a deployment.
appSpecContent_content :: Lens' AppSpecContent (Maybe Text)

-- | The SHA256 hash value of the revision content.
appSpecContent_sha256 :: Lens' AppSpecContent (Maybe Text)

-- | Information about an application.
--   
--   <i>See:</i> <a>newApplicationInfo</a> smart constructor.
data ApplicationInfo
ApplicationInfo' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ComputePlatform -> ApplicationInfo

-- | True if the user has authenticated with GitHub for the specified
--   application. Otherwise, false.
[$sel:linkedToGitHub:ApplicationInfo'] :: ApplicationInfo -> Maybe Bool

-- | The application ID.
[$sel:applicationId:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | The name for a connection to a GitHub account.
[$sel:gitHubAccountName:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | The time at which the application was created.
[$sel:createTime:ApplicationInfo'] :: ApplicationInfo -> Maybe POSIX

-- | The application name.
[$sel:applicationName:ApplicationInfo'] :: ApplicationInfo -> Maybe Text

-- | The destination platform type for deployment of the application
--   (<tt>Lambda</tt> or <tt>Server</tt>).
[$sel:computePlatform:ApplicationInfo'] :: ApplicationInfo -> Maybe ComputePlatform

-- | Create a value of <a>ApplicationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedToGitHub:ApplicationInfo'</a>,
--   <a>applicationInfo_linkedToGitHub</a> - True if the user has
--   authenticated with GitHub for the specified application. Otherwise,
--   false.
--   
--   <a>$sel:applicationId:ApplicationInfo'</a>,
--   <a>applicationInfo_applicationId</a> - The application ID.
--   
--   <a>$sel:gitHubAccountName:ApplicationInfo'</a>,
--   <a>applicationInfo_gitHubAccountName</a> - The name for a connection
--   to a GitHub account.
--   
--   <a>$sel:createTime:ApplicationInfo'</a>,
--   <a>applicationInfo_createTime</a> - The time at which the application
--   was created.
--   
--   <a>$sel:applicationName:ApplicationInfo'</a>,
--   <a>applicationInfo_applicationName</a> - The application name.
--   
--   <a>$sel:computePlatform:ApplicationInfo'</a>,
--   <a>applicationInfo_computePlatform</a> - The destination platform type
--   for deployment of the application (<tt>Lambda</tt> or
--   <tt>Server</tt>).
newApplicationInfo :: ApplicationInfo

-- | True if the user has authenticated with GitHub for the specified
--   application. Otherwise, false.
applicationInfo_linkedToGitHub :: Lens' ApplicationInfo (Maybe Bool)

-- | The application ID.
applicationInfo_applicationId :: Lens' ApplicationInfo (Maybe Text)

-- | The name for a connection to a GitHub account.
applicationInfo_gitHubAccountName :: Lens' ApplicationInfo (Maybe Text)

-- | The time at which the application was created.
applicationInfo_createTime :: Lens' ApplicationInfo (Maybe UTCTime)

-- | The application name.
applicationInfo_applicationName :: Lens' ApplicationInfo (Maybe Text)

-- | The destination platform type for deployment of the application
--   (<tt>Lambda</tt> or <tt>Server</tt>).
applicationInfo_computePlatform :: Lens' ApplicationInfo (Maybe ComputePlatform)

-- | Information about a configuration for automatically rolling back to a
--   previous version of an application revision when a deployment is not
--   completed successfully.
--   
--   <i>See:</i> <a>newAutoRollbackConfiguration</a> smart constructor.
data AutoRollbackConfiguration
AutoRollbackConfiguration' :: Maybe Bool -> Maybe [AutoRollbackEvent] -> AutoRollbackConfiguration

-- | Indicates whether a defined automatic rollback configuration is
--   currently enabled.
[$sel:enabled:AutoRollbackConfiguration'] :: AutoRollbackConfiguration -> Maybe Bool

-- | The event type or types that trigger a rollback.
[$sel:events:AutoRollbackConfiguration'] :: AutoRollbackConfiguration -> Maybe [AutoRollbackEvent]

-- | Create a value of <a>AutoRollbackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AutoRollbackConfiguration'</a>,
--   <a>autoRollbackConfiguration_enabled</a> - Indicates whether a defined
--   automatic rollback configuration is currently enabled.
--   
--   <a>$sel:events:AutoRollbackConfiguration'</a>,
--   <a>autoRollbackConfiguration_events</a> - The event type or types that
--   trigger a rollback.
newAutoRollbackConfiguration :: AutoRollbackConfiguration

-- | Indicates whether a defined automatic rollback configuration is
--   currently enabled.
autoRollbackConfiguration_enabled :: Lens' AutoRollbackConfiguration (Maybe Bool)

-- | The event type or types that trigger a rollback.
autoRollbackConfiguration_events :: Lens' AutoRollbackConfiguration (Maybe [AutoRollbackEvent])

-- | Information about an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> Maybe Text -> AutoScalingGroup

-- | An Auto Scaling lifecycle event hook name.
[$sel:hook:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | The Auto Scaling group name.
[$sel:name:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hook:AutoScalingGroup'</a>, <a>autoScalingGroup_hook</a> - An
--   Auto Scaling lifecycle event hook name.
--   
--   <a>$sel:name:AutoScalingGroup'</a>, <a>autoScalingGroup_name</a> - The
--   Auto Scaling group name.
newAutoScalingGroup :: AutoScalingGroup

-- | An Auto Scaling lifecycle event hook name.
autoScalingGroup_hook :: Lens' AutoScalingGroup (Maybe Text)

-- | The Auto Scaling group name.
autoScalingGroup_name :: Lens' AutoScalingGroup (Maybe Text)

-- | Information about blue/green deployment options for a deployment
--   group.
--   
--   <i>See:</i> <a>newBlueGreenDeploymentConfiguration</a> smart
--   constructor.
data BlueGreenDeploymentConfiguration
BlueGreenDeploymentConfiguration' :: Maybe GreenFleetProvisioningOption -> Maybe DeploymentReadyOption -> Maybe BlueInstanceTerminationOption -> BlueGreenDeploymentConfiguration

-- | Information about how instances are provisioned for a replacement
--   environment in a blue/green deployment.
[$sel:greenFleetProvisioningOption:BlueGreenDeploymentConfiguration'] :: BlueGreenDeploymentConfiguration -> Maybe GreenFleetProvisioningOption

-- | Information about the action to take when newly provisioned instances
--   are ready to receive traffic in a blue/green deployment.
[$sel:deploymentReadyOption:BlueGreenDeploymentConfiguration'] :: BlueGreenDeploymentConfiguration -> Maybe DeploymentReadyOption

-- | Information about whether to terminate instances in the original fleet
--   during a blue/green deployment.
[$sel:terminateBlueInstancesOnDeploymentSuccess:BlueGreenDeploymentConfiguration'] :: BlueGreenDeploymentConfiguration -> Maybe BlueInstanceTerminationOption

-- | Create a value of <a>BlueGreenDeploymentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:greenFleetProvisioningOption:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_greenFleetProvisioningOption</a> -
--   Information about how instances are provisioned for a replacement
--   environment in a blue/green deployment.
--   
--   <a>$sel:deploymentReadyOption:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_deploymentReadyOption</a> -
--   Information about the action to take when newly provisioned instances
--   are ready to receive traffic in a blue/green deployment.
--   
--   
--   <a>$sel:terminateBlueInstancesOnDeploymentSuccess:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_terminateBlueInstancesOnDeploymentSuccess</a>
--   - Information about whether to terminate instances in the original
--   fleet during a blue/green deployment.
newBlueGreenDeploymentConfiguration :: BlueGreenDeploymentConfiguration

-- | Information about how instances are provisioned for a replacement
--   environment in a blue/green deployment.
blueGreenDeploymentConfiguration_greenFleetProvisioningOption :: Lens' BlueGreenDeploymentConfiguration (Maybe GreenFleetProvisioningOption)

-- | Information about the action to take when newly provisioned instances
--   are ready to receive traffic in a blue/green deployment.
blueGreenDeploymentConfiguration_deploymentReadyOption :: Lens' BlueGreenDeploymentConfiguration (Maybe DeploymentReadyOption)

-- | Information about whether to terminate instances in the original fleet
--   during a blue/green deployment.
blueGreenDeploymentConfiguration_terminateBlueInstancesOnDeploymentSuccess :: Lens' BlueGreenDeploymentConfiguration (Maybe BlueInstanceTerminationOption)

-- | Information about whether instances in the original environment are
--   terminated when a blue/green deployment is successful.
--   <tt>BlueInstanceTerminationOption</tt> does not apply to Lambda
--   deployments.
--   
--   <i>See:</i> <a>newBlueInstanceTerminationOption</a> smart constructor.
data BlueInstanceTerminationOption
BlueInstanceTerminationOption' :: Maybe InstanceAction -> Maybe Int -> BlueInstanceTerminationOption

-- | The action to take on instances in the original environment after a
--   successful blue/green deployment.
--   
--   <ul>
--   <li><tt>TERMINATE</tt>: Instances are terminated after a specified
--   wait time.</li>
--   <li><tt>KEEP_ALIVE</tt>: Instances are left running after they are
--   deregistered from the load balancer and removed from the deployment
--   group.</li>
--   </ul>
[$sel:action:BlueInstanceTerminationOption'] :: BlueInstanceTerminationOption -> Maybe InstanceAction

-- | For an Amazon EC2 deployment, the number of minutes to wait after a
--   successful blue/green deployment before terminating instances from the
--   original environment.
--   
--   For an Amazon ECS deployment, the number of minutes before deleting
--   the original (blue) task set. During an Amazon ECS deployment,
--   CodeDeploy shifts traffic from the original (blue) task set to a
--   replacement (green) task set.
--   
--   The maximum setting is 2880 minutes (2 days).
[$sel:terminationWaitTimeInMinutes:BlueInstanceTerminationOption'] :: BlueInstanceTerminationOption -> Maybe Int

-- | Create a value of <a>BlueInstanceTerminationOption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:BlueInstanceTerminationOption'</a>,
--   <a>blueInstanceTerminationOption_action</a> - The action to take on
--   instances in the original environment after a successful blue/green
--   deployment.
--   
--   <ul>
--   <li><tt>TERMINATE</tt>: Instances are terminated after a specified
--   wait time.</li>
--   <li><tt>KEEP_ALIVE</tt>: Instances are left running after they are
--   deregistered from the load balancer and removed from the deployment
--   group.</li>
--   </ul>
--   
--   
--   <a>$sel:terminationWaitTimeInMinutes:BlueInstanceTerminationOption'</a>,
--   <a>blueInstanceTerminationOption_terminationWaitTimeInMinutes</a> -
--   For an Amazon EC2 deployment, the number of minutes to wait after a
--   successful blue/green deployment before terminating instances from the
--   original environment.
--   
--   For an Amazon ECS deployment, the number of minutes before deleting
--   the original (blue) task set. During an Amazon ECS deployment,
--   CodeDeploy shifts traffic from the original (blue) task set to a
--   replacement (green) task set.
--   
--   The maximum setting is 2880 minutes (2 days).
newBlueInstanceTerminationOption :: BlueInstanceTerminationOption

-- | The action to take on instances in the original environment after a
--   successful blue/green deployment.
--   
--   <ul>
--   <li><tt>TERMINATE</tt>: Instances are terminated after a specified
--   wait time.</li>
--   <li><tt>KEEP_ALIVE</tt>: Instances are left running after they are
--   deregistered from the load balancer and removed from the deployment
--   group.</li>
--   </ul>
blueInstanceTerminationOption_action :: Lens' BlueInstanceTerminationOption (Maybe InstanceAction)

-- | For an Amazon EC2 deployment, the number of minutes to wait after a
--   successful blue/green deployment before terminating instances from the
--   original environment.
--   
--   For an Amazon ECS deployment, the number of minutes before deleting
--   the original (blue) task set. During an Amazon ECS deployment,
--   CodeDeploy shifts traffic from the original (blue) task set to a
--   replacement (green) task set.
--   
--   The maximum setting is 2880 minutes (2 days).
blueInstanceTerminationOption_terminationWaitTimeInMinutes :: Lens' BlueInstanceTerminationOption (Maybe Int)

-- | Information about the target to be updated by an AWS CloudFormation
--   blue/green deployment. This target type is used for all deployments
--   initiated by a CloudFormation stack update.
--   
--   <i>See:</i> <a>newCloudFormationTarget</a> smart constructor.
data CloudFormationTarget
CloudFormationTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe Double -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> CloudFormationTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>CloudFormationTarget</tt>.
[$sel:targetId:CloudFormationTarget'] :: CloudFormationTarget -> Maybe Text

-- | The unique ID of an AWS CloudFormation blue/green deployment.
[$sel:deploymentId:CloudFormationTarget'] :: CloudFormationTarget -> Maybe Text

-- | The status of an AWS CloudFormation blue/green deployment's target
--   application.
[$sel:status:CloudFormationTarget'] :: CloudFormationTarget -> Maybe TargetStatus

-- | The percentage of production traffic that the target version of an AWS
--   CloudFormation blue/green deployment receives.
[$sel:targetVersionWeight:CloudFormationTarget'] :: CloudFormationTarget -> Maybe Double

-- | The resource type for the AWS CloudFormation blue/green deployment.
[$sel:resourceType:CloudFormationTarget'] :: CloudFormationTarget -> Maybe Text

-- | The lifecycle events of the AWS CloudFormation blue/green deployment
--   to this target application.
[$sel:lifecycleEvents:CloudFormationTarget'] :: CloudFormationTarget -> Maybe [LifecycleEvent]

-- | The date and time when the target application was updated by an AWS
--   CloudFormation blue/green deployment.
[$sel:lastUpdatedAt:CloudFormationTarget'] :: CloudFormationTarget -> Maybe POSIX

-- | Create a value of <a>CloudFormationTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_targetId</a> - The unique ID of a deployment
--   target that has a type of <tt>CloudFormationTarget</tt>.
--   
--   <a>$sel:deploymentId:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_deploymentId</a> - The unique ID of an AWS
--   CloudFormation blue/green deployment.
--   
--   <a>$sel:status:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_status</a> - The status of an AWS
--   CloudFormation blue/green deployment's target application.
--   
--   <a>$sel:targetVersionWeight:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_targetVersionWeight</a> - The percentage of
--   production traffic that the target version of an AWS CloudFormation
--   blue/green deployment receives.
--   
--   <a>$sel:resourceType:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_resourceType</a> - The resource type for the
--   AWS CloudFormation blue/green deployment.
--   
--   <a>$sel:lifecycleEvents:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_lifecycleEvents</a> - The lifecycle events of
--   the AWS CloudFormation blue/green deployment to this target
--   application.
--   
--   <a>$sel:lastUpdatedAt:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_lastUpdatedAt</a> - The date and time when the
--   target application was updated by an AWS CloudFormation blue/green
--   deployment.
newCloudFormationTarget :: CloudFormationTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>CloudFormationTarget</tt>.
cloudFormationTarget_targetId :: Lens' CloudFormationTarget (Maybe Text)

-- | The unique ID of an AWS CloudFormation blue/green deployment.
cloudFormationTarget_deploymentId :: Lens' CloudFormationTarget (Maybe Text)

-- | The status of an AWS CloudFormation blue/green deployment's target
--   application.
cloudFormationTarget_status :: Lens' CloudFormationTarget (Maybe TargetStatus)

-- | The percentage of production traffic that the target version of an AWS
--   CloudFormation blue/green deployment receives.
cloudFormationTarget_targetVersionWeight :: Lens' CloudFormationTarget (Maybe Double)

-- | The resource type for the AWS CloudFormation blue/green deployment.
cloudFormationTarget_resourceType :: Lens' CloudFormationTarget (Maybe Text)

-- | The lifecycle events of the AWS CloudFormation blue/green deployment
--   to this target application.
cloudFormationTarget_lifecycleEvents :: Lens' CloudFormationTarget (Maybe [LifecycleEvent])

-- | The date and time when the target application was updated by an AWS
--   CloudFormation blue/green deployment.
cloudFormationTarget_lastUpdatedAt :: Lens' CloudFormationTarget (Maybe UTCTime)

-- | Information about a deployment configuration.
--   
--   <i>See:</i> <a>newDeploymentConfigInfo</a> smart constructor.
data DeploymentConfigInfo
DeploymentConfigInfo' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TrafficRoutingConfig -> Maybe MinimumHealthyHosts -> Maybe ComputePlatform -> DeploymentConfigInfo

-- | The deployment configuration name.
[$sel:deploymentConfigName:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe Text

-- | The deployment configuration ID.
[$sel:deploymentConfigId:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe Text

-- | The time at which the deployment configuration was created.
[$sel:createTime:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe POSIX

-- | The configuration that specifies how the deployment traffic is routed.
--   Used for deployments with a Lambda or ECS compute platform only.
[$sel:trafficRoutingConfig:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe TrafficRoutingConfig

-- | Information about the number or percentage of minimum healthy
--   instance.
[$sel:minimumHealthyHosts:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe MinimumHealthyHosts

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
[$sel:computePlatform:DeploymentConfigInfo'] :: DeploymentConfigInfo -> Maybe ComputePlatform

-- | Create a value of <a>DeploymentConfigInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentConfigId:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_deploymentConfigId</a> - The deployment
--   configuration ID.
--   
--   <a>$sel:createTime:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_createTime</a> - The time at which the
--   deployment configuration was created.
--   
--   <a>$sel:trafficRoutingConfig:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_trafficRoutingConfig</a> - The configuration
--   that specifies how the deployment traffic is routed. Used for
--   deployments with a Lambda or ECS compute platform only.
--   
--   <a>$sel:minimumHealthyHosts:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_minimumHealthyHosts</a> - Information about
--   the number or percentage of minimum healthy instance.
--   
--   <a>$sel:computePlatform:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_computePlatform</a> - The destination platform
--   type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
newDeploymentConfigInfo :: DeploymentConfigInfo

-- | The deployment configuration name.
deploymentConfigInfo_deploymentConfigName :: Lens' DeploymentConfigInfo (Maybe Text)

-- | The deployment configuration ID.
deploymentConfigInfo_deploymentConfigId :: Lens' DeploymentConfigInfo (Maybe Text)

-- | The time at which the deployment configuration was created.
deploymentConfigInfo_createTime :: Lens' DeploymentConfigInfo (Maybe UTCTime)

-- | The configuration that specifies how the deployment traffic is routed.
--   Used for deployments with a Lambda or ECS compute platform only.
deploymentConfigInfo_trafficRoutingConfig :: Lens' DeploymentConfigInfo (Maybe TrafficRoutingConfig)

-- | Information about the number or percentage of minimum healthy
--   instance.
deploymentConfigInfo_minimumHealthyHosts :: Lens' DeploymentConfigInfo (Maybe MinimumHealthyHosts)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentConfigInfo_computePlatform :: Lens' DeploymentConfigInfo (Maybe ComputePlatform)

-- | Information about a deployment group.
--   
--   <i>See:</i> <a>newDeploymentGroupInfo</a> smart constructor.
data DeploymentGroupInfo
DeploymentGroupInfo' :: Maybe OnPremisesTagSet -> Maybe OutdatedInstancesStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe Text -> Maybe [TriggerConfig] -> Maybe [EC2TagFilter] -> Maybe RevisionLocation -> Maybe LastDeploymentInfo -> Maybe LastDeploymentInfo -> Maybe [TagFilter] -> Maybe BlueGreenDeploymentConfiguration -> Maybe LoadBalancerInfo -> Maybe EC2TagSet -> Maybe DeploymentStyle -> Maybe [AutoScalingGroup] -> Maybe [ECSService] -> Maybe AlarmConfiguration -> Maybe Text -> Maybe ComputePlatform -> DeploymentGroupInfo

-- | Information about groups of tags applied to an on-premises instance.
--   The deployment group includes only on-premises instances identified by
--   all the tag groups. Cannot be used in the same call as
--   onPremisesInstanceTagFilters.
[$sel:onPremisesTagSet:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe OnPremisesTagSet

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
[$sel:outdatedInstancesStrategy:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe OutdatedInstancesStrategy

-- | A service role Amazon Resource Name (ARN) that grants CodeDeploy
--   permission to make calls to AWS services on your behalf. For more
--   information, see <a>Create a Service Role for AWS CodeDeploy</a> in
--   the <i>AWS CodeDeploy User Guide</i>.
[$sel:serviceRoleArn:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | The deployment configuration name.
[$sel:deploymentConfigName:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | The deployment group name.
[$sel:deploymentGroupName:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | Information about the automatic rollback configuration associated with
--   the deployment group.
[$sel:autoRollbackConfiguration:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe AutoRollbackConfiguration

-- | The deployment group ID.
[$sel:deploymentGroupId:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | Information about triggers associated with the deployment group.
[$sel:triggerConfigurations:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [TriggerConfig]

-- | The Amazon EC2 tags on which to filter. The deployment group includes
--   EC2 instances with any of the specified tags.
[$sel:ec2TagFilters:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [EC2TagFilter]

-- | Information about the deployment group's target revision, including
--   type and location.
[$sel:targetRevision:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe RevisionLocation

-- | Information about the most recent attempted deployment to the
--   deployment group.
[$sel:lastAttemptedDeployment:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe LastDeploymentInfo

-- | Information about the most recent successful deployment to the
--   deployment group.
[$sel:lastSuccessfulDeployment:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe LastDeploymentInfo

-- | The on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags.
[$sel:onPremisesInstanceTagFilters:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [TagFilter]

-- | Information about blue/green deployment options for a deployment
--   group.
[$sel:blueGreenDeploymentConfiguration:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe BlueGreenDeploymentConfiguration

-- | Information about the load balancer to use in a deployment.
[$sel:loadBalancerInfo:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe LoadBalancerInfo

-- | Information about groups of tags applied to an EC2 instance. The
--   deployment group includes only EC2 instances identified by all of the
--   tag groups. Cannot be used in the same call as ec2TagFilters.
[$sel:ec2TagSet:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe EC2TagSet

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
[$sel:deploymentStyle:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe DeploymentStyle

-- | A list of associated Auto Scaling groups.
[$sel:autoScalingGroups:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [AutoScalingGroup]

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
[$sel:ecsServices:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe [ECSService]

-- | A list of alarms associated with the deployment group.
[$sel:alarmConfiguration:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe AlarmConfiguration

-- | The application name.
[$sel:applicationName:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe Text

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
[$sel:computePlatform:DeploymentGroupInfo'] :: DeploymentGroupInfo -> Maybe ComputePlatform

-- | Create a value of <a>DeploymentGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSet:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_onPremisesTagSet</a> - Information about groups
--   of tags applied to an on-premises instance. The deployment group
--   includes only on-premises instances identified by all the tag groups.
--   Cannot be used in the same call as onPremisesInstanceTagFilters.
--   
--   <a>$sel:outdatedInstancesStrategy:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_outdatedInstancesStrategy</a> - Indicates what
--   happens when new EC2 instances are launched mid-deployment and do not
--   receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
--   
--   <a>$sel:serviceRoleArn:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_serviceRoleArn</a> - A service role Amazon
--   Resource Name (ARN) that grants CodeDeploy permission to make calls to
--   AWS services on your behalf. For more information, see <a>Create a
--   Service Role for AWS CodeDeploy</a> in the <i>AWS CodeDeploy User
--   Guide</i>.
--   
--   <a>$sel:deploymentConfigName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentGroupName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentGroupName</a> - The deployment group
--   name.
--   
--   <a>$sel:autoRollbackConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_autoRollbackConfiguration</a> - Information
--   about the automatic rollback configuration associated with the
--   deployment group.
--   
--   <a>$sel:deploymentGroupId:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentGroupId</a> - The deployment group
--   ID.
--   
--   <a>$sel:triggerConfigurations:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_triggerConfigurations</a> - Information about
--   triggers associated with the deployment group.
--   
--   <a>$sel:ec2TagFilters:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ec2TagFilters</a> - The Amazon EC2 tags on
--   which to filter. The deployment group includes EC2 instances with any
--   of the specified tags.
--   
--   <a>$sel:targetRevision:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_targetRevision</a> - Information about the
--   deployment group's target revision, including type and location.
--   
--   <a>$sel:lastAttemptedDeployment:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_lastAttemptedDeployment</a> - Information about
--   the most recent attempted deployment to the deployment group.
--   
--   <a>$sel:lastSuccessfulDeployment:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_lastSuccessfulDeployment</a> - Information
--   about the most recent successful deployment to the deployment group.
--   
--   <a>$sel:onPremisesInstanceTagFilters:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_onPremisesInstanceTagFilters</a> - The
--   on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags.
--   
--   <a>$sel:blueGreenDeploymentConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_blueGreenDeploymentConfiguration</a> -
--   Information about blue/green deployment options for a deployment
--   group.
--   
--   <a>$sel:loadBalancerInfo:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_loadBalancerInfo</a> - Information about the
--   load balancer to use in a deployment.
--   
--   <a>$sel:ec2TagSet:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ec2TagSet</a> - Information about groups of
--   tags applied to an EC2 instance. The deployment group includes only
--   EC2 instances identified by all of the tag groups. Cannot be used in
--   the same call as ec2TagFilters.
--   
--   <a>$sel:deploymentStyle:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentStyle</a> - Information about the
--   type of deployment, either in-place or blue/green, you want to run and
--   whether to route deployment traffic behind a load balancer.
--   
--   <a>$sel:autoScalingGroups:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_autoScalingGroups</a> - A list of associated
--   Auto Scaling groups.
--   
--   <a>$sel:ecsServices:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ecsServices</a> - The target Amazon ECS
--   services in the deployment group. This applies only to deployment
--   groups that use the Amazon ECS compute platform. A target Amazon ECS
--   service is specified as an Amazon ECS cluster and service name pair
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   
--   <a>$sel:alarmConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_alarmConfiguration</a> - A list of alarms
--   associated with the deployment group.
--   
--   <a>$sel:applicationName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_applicationName</a> - The application name.
--   
--   <a>$sel:computePlatform:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_computePlatform</a> - The destination platform
--   type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
newDeploymentGroupInfo :: DeploymentGroupInfo

-- | Information about groups of tags applied to an on-premises instance.
--   The deployment group includes only on-premises instances identified by
--   all the tag groups. Cannot be used in the same call as
--   onPremisesInstanceTagFilters.
deploymentGroupInfo_onPremisesTagSet :: Lens' DeploymentGroupInfo (Maybe OnPremisesTagSet)

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
deploymentGroupInfo_outdatedInstancesStrategy :: Lens' DeploymentGroupInfo (Maybe OutdatedInstancesStrategy)

-- | A service role Amazon Resource Name (ARN) that grants CodeDeploy
--   permission to make calls to AWS services on your behalf. For more
--   information, see <a>Create a Service Role for AWS CodeDeploy</a> in
--   the <i>AWS CodeDeploy User Guide</i>.
deploymentGroupInfo_serviceRoleArn :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The deployment configuration name.
deploymentGroupInfo_deploymentConfigName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The deployment group name.
deploymentGroupInfo_deploymentGroupName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | Information about the automatic rollback configuration associated with
--   the deployment group.
deploymentGroupInfo_autoRollbackConfiguration :: Lens' DeploymentGroupInfo (Maybe AutoRollbackConfiguration)

-- | The deployment group ID.
deploymentGroupInfo_deploymentGroupId :: Lens' DeploymentGroupInfo (Maybe Text)

-- | Information about triggers associated with the deployment group.
deploymentGroupInfo_triggerConfigurations :: Lens' DeploymentGroupInfo (Maybe [TriggerConfig])

-- | The Amazon EC2 tags on which to filter. The deployment group includes
--   EC2 instances with any of the specified tags.
deploymentGroupInfo_ec2TagFilters :: Lens' DeploymentGroupInfo (Maybe [EC2TagFilter])

-- | Information about the deployment group's target revision, including
--   type and location.
deploymentGroupInfo_targetRevision :: Lens' DeploymentGroupInfo (Maybe RevisionLocation)

-- | Information about the most recent attempted deployment to the
--   deployment group.
deploymentGroupInfo_lastAttemptedDeployment :: Lens' DeploymentGroupInfo (Maybe LastDeploymentInfo)

-- | Information about the most recent successful deployment to the
--   deployment group.
deploymentGroupInfo_lastSuccessfulDeployment :: Lens' DeploymentGroupInfo (Maybe LastDeploymentInfo)

-- | The on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags.
deploymentGroupInfo_onPremisesInstanceTagFilters :: Lens' DeploymentGroupInfo (Maybe [TagFilter])

-- | Information about blue/green deployment options for a deployment
--   group.
deploymentGroupInfo_blueGreenDeploymentConfiguration :: Lens' DeploymentGroupInfo (Maybe BlueGreenDeploymentConfiguration)

-- | Information about the load balancer to use in a deployment.
deploymentGroupInfo_loadBalancerInfo :: Lens' DeploymentGroupInfo (Maybe LoadBalancerInfo)

-- | Information about groups of tags applied to an EC2 instance. The
--   deployment group includes only EC2 instances identified by all of the
--   tag groups. Cannot be used in the same call as ec2TagFilters.
deploymentGroupInfo_ec2TagSet :: Lens' DeploymentGroupInfo (Maybe EC2TagSet)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
deploymentGroupInfo_deploymentStyle :: Lens' DeploymentGroupInfo (Maybe DeploymentStyle)

-- | A list of associated Auto Scaling groups.
deploymentGroupInfo_autoScalingGroups :: Lens' DeploymentGroupInfo (Maybe [AutoScalingGroup])

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
deploymentGroupInfo_ecsServices :: Lens' DeploymentGroupInfo (Maybe [ECSService])

-- | A list of alarms associated with the deployment group.
deploymentGroupInfo_alarmConfiguration :: Lens' DeploymentGroupInfo (Maybe AlarmConfiguration)

-- | The application name.
deploymentGroupInfo_applicationName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentGroupInfo_computePlatform :: Lens' DeploymentGroupInfo (Maybe ComputePlatform)

-- | Information about a deployment.
--   
--   <i>See:</i> <a>newDeploymentInfo</a> smart constructor.
data DeploymentInfo
DeploymentInfo' :: Maybe Text -> Maybe Text -> Maybe DeploymentStatus -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe Bool -> Maybe Bool -> Maybe TargetInstances -> Maybe POSIX -> Maybe Bool -> Maybe RevisionLocation -> Maybe DeploymentCreator -> Maybe BlueGreenDeploymentConfiguration -> Maybe ErrorInformation -> Maybe LoadBalancerInfo -> Maybe POSIX -> Maybe POSIX -> Maybe DeploymentStyle -> Maybe Text -> Maybe RevisionLocation -> Maybe RollbackInfo -> Maybe Text -> Maybe [Text] -> Maybe RelatedDeployments -> Maybe Text -> Maybe FileExistsBehavior -> Maybe ComputePlatform -> Maybe Text -> Maybe DeploymentOverview -> DeploymentInfo

-- | The deployment configuration name.
[$sel:deploymentConfigName:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | The current state of the deployment as a whole.
[$sel:status:DeploymentInfo'] :: DeploymentInfo -> Maybe DeploymentStatus

-- | The deployment group name.
[$sel:deploymentGroupName:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | Information about the automatic rollback configuration associated with
--   the deployment.
[$sel:autoRollbackConfiguration:DeploymentInfo'] :: DeploymentInfo -> Maybe AutoRollbackConfiguration

-- | Indicates whether only instances that are not running the latest
--   application revision are to be deployed to.
[$sel:updateOutdatedInstancesOnly:DeploymentInfo'] :: DeploymentInfo -> Maybe Bool

-- | If true, then if an <tt>ApplicationStop</tt>,
--   <tt>BeforeBlockTraffic</tt>, or <tt>AfterBlockTraffic</tt> deployment
--   lifecycle event to an instance fails, then the deployment continues to
--   the next deployment lifecycle event. For example, if
--   <tt>ApplicationStop</tt> fails, the deployment continues with
--   DownloadBundle. If <tt>BeforeBlockTraffic</tt> fails, the deployment
--   continues with <tt>BlockTraffic</tt>. If <tt>AfterBlockTraffic</tt>
--   fails, the deployment continues with <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
[$sel:ignoreApplicationStopFailures:DeploymentInfo'] :: DeploymentInfo -> Maybe Bool

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
[$sel:targetInstances:DeploymentInfo'] :: DeploymentInfo -> Maybe TargetInstances

-- | A timestamp that indicates when the deployment was deployed to the
--   deployment group.
--   
--   In some cases, the reported value of the start time might be later
--   than the complete time. This is due to differences in the clock
--   settings of backend servers that participate in the deployment
--   process.
[$sel:startTime:DeploymentInfo'] :: DeploymentInfo -> Maybe POSIX

-- | Indicates whether the wait period set for the termination of instances
--   in the original environment has started. Status is 'false' if the
--   KEEP_ALIVE option is specified. Otherwise, 'true' as soon as the
--   termination wait period starts.
[$sel:instanceTerminationWaitTimeStarted:DeploymentInfo'] :: DeploymentInfo -> Maybe Bool

-- | Information about the application revision that was deployed to the
--   deployment group before the most recent successful deployment.
[$sel:previousRevision:DeploymentInfo'] :: DeploymentInfo -> Maybe RevisionLocation

-- | The means by which the deployment was created:
--   
--   <ul>
--   <li><tt>user</tt>: A user created the deployment.</li>
--   <li><tt>autoscaling</tt>: Amazon EC2 Auto Scaling created the
--   deployment.</li>
--   <li><tt>codeDeployRollback</tt>: A rollback process created the
--   deployment.</li>
--   <li><tt>CodeDeployAutoUpdate</tt>: An auto-update process created the
--   deployment when it detected outdated EC2 instances.</li>
--   </ul>
[$sel:creator:DeploymentInfo'] :: DeploymentInfo -> Maybe DeploymentCreator

-- | Information about blue/green deployment options for this deployment.
[$sel:blueGreenDeploymentConfiguration:DeploymentInfo'] :: DeploymentInfo -> Maybe BlueGreenDeploymentConfiguration

-- | Information about any error associated with this deployment.
[$sel:errorInformation:DeploymentInfo'] :: DeploymentInfo -> Maybe ErrorInformation

-- | Information about the load balancer used in the deployment.
[$sel:loadBalancerInfo:DeploymentInfo'] :: DeploymentInfo -> Maybe LoadBalancerInfo

-- | A timestamp that indicates when the deployment was complete.
[$sel:completeTime:DeploymentInfo'] :: DeploymentInfo -> Maybe POSIX

-- | A timestamp that indicates when the deployment was created.
[$sel:createTime:DeploymentInfo'] :: DeploymentInfo -> Maybe POSIX

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
[$sel:deploymentStyle:DeploymentInfo'] :: DeploymentInfo -> Maybe DeploymentStyle

-- | A comment about the deployment.
[$sel:description:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | Information about the location of stored application artifacts and the
--   service from which to retrieve them.
[$sel:revision:DeploymentInfo'] :: DeploymentInfo -> Maybe RevisionLocation

-- | Information about a deployment rollback.
[$sel:rollbackInfo:DeploymentInfo'] :: DeploymentInfo -> Maybe RollbackInfo

-- | The unique ID for an external resource (for example, a CloudFormation
--   stack ID) that is linked to this deployment.
[$sel:externalId:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | Messages that contain information about the status of a deployment.
[$sel:deploymentStatusMessages:DeploymentInfo'] :: DeploymentInfo -> Maybe [Text]
[$sel:relatedDeployments:DeploymentInfo'] :: DeploymentInfo -> Maybe RelatedDeployments

-- | The application name.
[$sel:applicationName:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | Information about how AWS CodeDeploy handles files that already exist
--   in a deployment target location but weren't part of the previous
--   successful deployment.
--   
--   <ul>
--   <li><tt>DISALLOW</tt>: The deployment fails. This is also the default
--   behavior if no option is specified.</li>
--   <li><tt>OVERWRITE</tt>: The version of the file from the application
--   revision currently being deployed replaces the version already on the
--   instance.</li>
--   <li><tt>RETAIN</tt>: The version of the file already on the instance
--   is kept and used as part of the new deployment.</li>
--   </ul>
[$sel:fileExistsBehavior:DeploymentInfo'] :: DeploymentInfo -> Maybe FileExistsBehavior

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
[$sel:computePlatform:DeploymentInfo'] :: DeploymentInfo -> Maybe ComputePlatform

-- | Provides information about the results of a deployment, such as
--   whether instances in the original environment in a blue/green
--   deployment were not terminated.
[$sel:additionalDeploymentStatusInfo:DeploymentInfo'] :: DeploymentInfo -> Maybe Text

-- | A summary of the deployment status of the instances in the deployment.
[$sel:deploymentOverview:DeploymentInfo'] :: DeploymentInfo -> Maybe DeploymentOverview

-- | Create a value of <a>DeploymentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentId:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:DeploymentInfo'</a>, <a>deploymentInfo_status</a> - The
--   current state of the deployment as a whole.
--   
--   <a>$sel:deploymentGroupName:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentGroupName</a> - The deployment group name.
--   
--   <a>$sel:autoRollbackConfiguration:DeploymentInfo'</a>,
--   <a>deploymentInfo_autoRollbackConfiguration</a> - Information about
--   the automatic rollback configuration associated with the deployment.
--   
--   <a>$sel:updateOutdatedInstancesOnly:DeploymentInfo'</a>,
--   <a>deploymentInfo_updateOutdatedInstancesOnly</a> - Indicates whether
--   only instances that are not running the latest application revision
--   are to be deployed to.
--   
--   <a>$sel:ignoreApplicationStopFailures:DeploymentInfo'</a>,
--   <a>deploymentInfo_ignoreApplicationStopFailures</a> - If true, then if
--   an <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, or
--   <tt>AfterBlockTraffic</tt> deployment lifecycle event to an instance
--   fails, then the deployment continues to the next deployment lifecycle
--   event. For example, if <tt>ApplicationStop</tt> fails, the deployment
--   continues with DownloadBundle. If <tt>BeforeBlockTraffic</tt> fails,
--   the deployment continues with <tt>BlockTraffic</tt>. If
--   <tt>AfterBlockTraffic</tt> fails, the deployment continues with
--   <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
--   
--   <a>$sel:targetInstances:DeploymentInfo'</a>,
--   <a>deploymentInfo_targetInstances</a> - Information about the
--   instances that belong to the replacement environment in a blue/green
--   deployment.
--   
--   <a>$sel:startTime:DeploymentInfo'</a>, <a>deploymentInfo_startTime</a>
--   - A timestamp that indicates when the deployment was deployed to the
--   deployment group.
--   
--   In some cases, the reported value of the start time might be later
--   than the complete time. This is due to differences in the clock
--   settings of backend servers that participate in the deployment
--   process.
--   
--   <a>$sel:instanceTerminationWaitTimeStarted:DeploymentInfo'</a>,
--   <a>deploymentInfo_instanceTerminationWaitTimeStarted</a> - Indicates
--   whether the wait period set for the termination of instances in the
--   original environment has started. Status is 'false' if the KEEP_ALIVE
--   option is specified. Otherwise, 'true' as soon as the termination wait
--   period starts.
--   
--   <a>$sel:previousRevision:DeploymentInfo'</a>,
--   <a>deploymentInfo_previousRevision</a> - Information about the
--   application revision that was deployed to the deployment group before
--   the most recent successful deployment.
--   
--   <a>$sel:creator:DeploymentInfo'</a>, <a>deploymentInfo_creator</a> -
--   The means by which the deployment was created:
--   
--   <ul>
--   <li><tt>user</tt>: A user created the deployment.</li>
--   <li><tt>autoscaling</tt>: Amazon EC2 Auto Scaling created the
--   deployment.</li>
--   <li><tt>codeDeployRollback</tt>: A rollback process created the
--   deployment.</li>
--   <li><tt>CodeDeployAutoUpdate</tt>: An auto-update process created the
--   deployment when it detected outdated EC2 instances.</li>
--   </ul>
--   
--   <a>$sel:blueGreenDeploymentConfiguration:DeploymentInfo'</a>,
--   <a>deploymentInfo_blueGreenDeploymentConfiguration</a> - Information
--   about blue/green deployment options for this deployment.
--   
--   <a>$sel:errorInformation:DeploymentInfo'</a>,
--   <a>deploymentInfo_errorInformation</a> - Information about any error
--   associated with this deployment.
--   
--   <a>$sel:loadBalancerInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_loadBalancerInfo</a> - Information about the load
--   balancer used in the deployment.
--   
--   <a>$sel:completeTime:DeploymentInfo'</a>,
--   <a>deploymentInfo_completeTime</a> - A timestamp that indicates when
--   the deployment was complete.
--   
--   <a>$sel:createTime:DeploymentInfo'</a>,
--   <a>deploymentInfo_createTime</a> - A timestamp that indicates when the
--   deployment was created.
--   
--   <a>$sel:deploymentStyle:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentStyle</a> - Information about the type of
--   deployment, either in-place or blue/green, you want to run and whether
--   to route deployment traffic behind a load balancer.
--   
--   <a>$sel:description:DeploymentInfo'</a>,
--   <a>deploymentInfo_description</a> - A comment about the deployment.
--   
--   <a>$sel:revision:DeploymentInfo'</a>, <a>deploymentInfo_revision</a> -
--   Information about the location of stored application artifacts and the
--   service from which to retrieve them.
--   
--   <a>$sel:rollbackInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_rollbackInfo</a> - Information about a deployment
--   rollback.
--   
--   <a>$sel:externalId:DeploymentInfo'</a>,
--   <a>deploymentInfo_externalId</a> - The unique ID for an external
--   resource (for example, a CloudFormation stack ID) that is linked to
--   this deployment.
--   
--   <a>$sel:deploymentStatusMessages:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentStatusMessages</a> - Messages that contain
--   information about the status of a deployment.
--   
--   <a>$sel:relatedDeployments:DeploymentInfo'</a>,
--   <a>deploymentInfo_relatedDeployments</a> - Undocumented member.
--   
--   <a>$sel:applicationName:DeploymentInfo'</a>,
--   <a>deploymentInfo_applicationName</a> - The application name.
--   
--   <a>$sel:fileExistsBehavior:DeploymentInfo'</a>,
--   <a>deploymentInfo_fileExistsBehavior</a> - Information about how AWS
--   CodeDeploy handles files that already exist in a deployment target
--   location but weren't part of the previous successful deployment.
--   
--   <ul>
--   <li><tt>DISALLOW</tt>: The deployment fails. This is also the default
--   behavior if no option is specified.</li>
--   <li><tt>OVERWRITE</tt>: The version of the file from the application
--   revision currently being deployed replaces the version already on the
--   instance.</li>
--   <li><tt>RETAIN</tt>: The version of the file already on the instance
--   is kept and used as part of the new deployment.</li>
--   </ul>
--   
--   <a>$sel:computePlatform:DeploymentInfo'</a>,
--   <a>deploymentInfo_computePlatform</a> - The destination platform type
--   for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
--   
--   <a>$sel:additionalDeploymentStatusInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_additionalDeploymentStatusInfo</a> - Provides
--   information about the results of a deployment, such as whether
--   instances in the original environment in a blue/green deployment were
--   not terminated.
--   
--   <a>$sel:deploymentOverview:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentOverview</a> - A summary of the deployment
--   status of the instances in the deployment.
newDeploymentInfo :: DeploymentInfo

-- | The deployment configuration name.
deploymentInfo_deploymentConfigName :: Lens' DeploymentInfo (Maybe Text)

-- | The unique ID of a deployment.
deploymentInfo_deploymentId :: Lens' DeploymentInfo (Maybe Text)

-- | The current state of the deployment as a whole.
deploymentInfo_status :: Lens' DeploymentInfo (Maybe DeploymentStatus)

-- | The deployment group name.
deploymentInfo_deploymentGroupName :: Lens' DeploymentInfo (Maybe Text)

-- | Information about the automatic rollback configuration associated with
--   the deployment.
deploymentInfo_autoRollbackConfiguration :: Lens' DeploymentInfo (Maybe AutoRollbackConfiguration)

-- | Indicates whether only instances that are not running the latest
--   application revision are to be deployed to.
deploymentInfo_updateOutdatedInstancesOnly :: Lens' DeploymentInfo (Maybe Bool)

-- | If true, then if an <tt>ApplicationStop</tt>,
--   <tt>BeforeBlockTraffic</tt>, or <tt>AfterBlockTraffic</tt> deployment
--   lifecycle event to an instance fails, then the deployment continues to
--   the next deployment lifecycle event. For example, if
--   <tt>ApplicationStop</tt> fails, the deployment continues with
--   DownloadBundle. If <tt>BeforeBlockTraffic</tt> fails, the deployment
--   continues with <tt>BlockTraffic</tt>. If <tt>AfterBlockTraffic</tt>
--   fails, the deployment continues with <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
deploymentInfo_ignoreApplicationStopFailures :: Lens' DeploymentInfo (Maybe Bool)

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
deploymentInfo_targetInstances :: Lens' DeploymentInfo (Maybe TargetInstances)

-- | A timestamp that indicates when the deployment was deployed to the
--   deployment group.
--   
--   In some cases, the reported value of the start time might be later
--   than the complete time. This is due to differences in the clock
--   settings of backend servers that participate in the deployment
--   process.
deploymentInfo_startTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | Indicates whether the wait period set for the termination of instances
--   in the original environment has started. Status is 'false' if the
--   KEEP_ALIVE option is specified. Otherwise, 'true' as soon as the
--   termination wait period starts.
deploymentInfo_instanceTerminationWaitTimeStarted :: Lens' DeploymentInfo (Maybe Bool)

-- | Information about the application revision that was deployed to the
--   deployment group before the most recent successful deployment.
deploymentInfo_previousRevision :: Lens' DeploymentInfo (Maybe RevisionLocation)

-- | The means by which the deployment was created:
--   
--   <ul>
--   <li><tt>user</tt>: A user created the deployment.</li>
--   <li><tt>autoscaling</tt>: Amazon EC2 Auto Scaling created the
--   deployment.</li>
--   <li><tt>codeDeployRollback</tt>: A rollback process created the
--   deployment.</li>
--   <li><tt>CodeDeployAutoUpdate</tt>: An auto-update process created the
--   deployment when it detected outdated EC2 instances.</li>
--   </ul>
deploymentInfo_creator :: Lens' DeploymentInfo (Maybe DeploymentCreator)

-- | Information about blue/green deployment options for this deployment.
deploymentInfo_blueGreenDeploymentConfiguration :: Lens' DeploymentInfo (Maybe BlueGreenDeploymentConfiguration)

-- | Information about any error associated with this deployment.
deploymentInfo_errorInformation :: Lens' DeploymentInfo (Maybe ErrorInformation)

-- | Information about the load balancer used in the deployment.
deploymentInfo_loadBalancerInfo :: Lens' DeploymentInfo (Maybe LoadBalancerInfo)

-- | A timestamp that indicates when the deployment was complete.
deploymentInfo_completeTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | A timestamp that indicates when the deployment was created.
deploymentInfo_createTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
deploymentInfo_deploymentStyle :: Lens' DeploymentInfo (Maybe DeploymentStyle)

-- | A comment about the deployment.
deploymentInfo_description :: Lens' DeploymentInfo (Maybe Text)

-- | Information about the location of stored application artifacts and the
--   service from which to retrieve them.
deploymentInfo_revision :: Lens' DeploymentInfo (Maybe RevisionLocation)

-- | Information about a deployment rollback.
deploymentInfo_rollbackInfo :: Lens' DeploymentInfo (Maybe RollbackInfo)

-- | The unique ID for an external resource (for example, a CloudFormation
--   stack ID) that is linked to this deployment.
deploymentInfo_externalId :: Lens' DeploymentInfo (Maybe Text)

-- | Messages that contain information about the status of a deployment.
deploymentInfo_deploymentStatusMessages :: Lens' DeploymentInfo (Maybe [Text])

-- | Undocumented member.
deploymentInfo_relatedDeployments :: Lens' DeploymentInfo (Maybe RelatedDeployments)

-- | The application name.
deploymentInfo_applicationName :: Lens' DeploymentInfo (Maybe Text)

-- | Information about how AWS CodeDeploy handles files that already exist
--   in a deployment target location but weren't part of the previous
--   successful deployment.
--   
--   <ul>
--   <li><tt>DISALLOW</tt>: The deployment fails. This is also the default
--   behavior if no option is specified.</li>
--   <li><tt>OVERWRITE</tt>: The version of the file from the application
--   revision currently being deployed replaces the version already on the
--   instance.</li>
--   <li><tt>RETAIN</tt>: The version of the file already on the instance
--   is kept and used as part of the new deployment.</li>
--   </ul>
deploymentInfo_fileExistsBehavior :: Lens' DeploymentInfo (Maybe FileExistsBehavior)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentInfo_computePlatform :: Lens' DeploymentInfo (Maybe ComputePlatform)

-- | Provides information about the results of a deployment, such as
--   whether instances in the original environment in a blue/green
--   deployment were not terminated.
deploymentInfo_additionalDeploymentStatusInfo :: Lens' DeploymentInfo (Maybe Text)

-- | A summary of the deployment status of the instances in the deployment.
deploymentInfo_deploymentOverview :: Lens' DeploymentInfo (Maybe DeploymentOverview)

-- | Information about the deployment status of the instances in the
--   deployment.
--   
--   <i>See:</i> <a>newDeploymentOverview</a> smart constructor.
data DeploymentOverview
DeploymentOverview' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> DeploymentOverview

-- | The number of instances in the deployment to which revisions have been
--   successfully deployed.
[$sel:succeeded:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in a replacement environment ready to receive
--   traffic in a blue/green deployment.
[$sel:ready:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in the deployment in a pending state.
[$sel:pending:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in the deployment in a failed state.
[$sel:failed:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in the deployment in a skipped state.
[$sel:skipped:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | The number of instances in which the deployment is in progress.
[$sel:inProgress:DeploymentOverview'] :: DeploymentOverview -> Maybe Integer

-- | Create a value of <a>DeploymentOverview</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:DeploymentOverview'</a>,
--   <a>deploymentOverview_succeeded</a> - The number of instances in the
--   deployment to which revisions have been successfully deployed.
--   
--   <a>$sel:ready:DeploymentOverview'</a>, <a>deploymentOverview_ready</a>
--   - The number of instances in a replacement environment ready to
--   receive traffic in a blue/green deployment.
--   
--   <a>$sel:pending:DeploymentOverview'</a>,
--   <a>deploymentOverview_pending</a> - The number of instances in the
--   deployment in a pending state.
--   
--   <a>$sel:failed:DeploymentOverview'</a>,
--   <a>deploymentOverview_failed</a> - The number of instances in the
--   deployment in a failed state.
--   
--   <a>$sel:skipped:DeploymentOverview'</a>,
--   <a>deploymentOverview_skipped</a> - The number of instances in the
--   deployment in a skipped state.
--   
--   <a>$sel:inProgress:DeploymentOverview'</a>,
--   <a>deploymentOverview_inProgress</a> - The number of instances in
--   which the deployment is in progress.
newDeploymentOverview :: DeploymentOverview

-- | The number of instances in the deployment to which revisions have been
--   successfully deployed.
deploymentOverview_succeeded :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in a replacement environment ready to receive
--   traffic in a blue/green deployment.
deploymentOverview_ready :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a pending state.
deploymentOverview_pending :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a failed state.
deploymentOverview_failed :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a skipped state.
deploymentOverview_skipped :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in which the deployment is in progress.
deploymentOverview_inProgress :: Lens' DeploymentOverview (Maybe Integer)

-- | Information about how traffic is rerouted to instances in a
--   replacement environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newDeploymentReadyOption</a> smart constructor.
data DeploymentReadyOption
DeploymentReadyOption' :: Maybe Int -> Maybe DeploymentReadyAction -> DeploymentReadyOption

-- | The number of minutes to wait before the status of a blue/green
--   deployment is changed to Stopped if rerouting is not started manually.
--   Applies only to the <tt>STOP_DEPLOYMENT</tt> option for
--   <tt>actionOnTimeout</tt>.
[$sel:waitTimeInMinutes:DeploymentReadyOption'] :: DeploymentReadyOption -> Maybe Int

-- | Information about when to reroute traffic from an original environment
--   to a replacement environment in a blue/green deployment.
--   
--   <ul>
--   <li>CONTINUE_DEPLOYMENT: Register new instances with the load balancer
--   immediately after the new application revision is installed on the
--   instances in the replacement environment.</li>
--   <li>STOP_DEPLOYMENT: Do not register new instances with a load
--   balancer unless traffic rerouting is started using ContinueDeployment.
--   If traffic rerouting is not started before the end of the specified
--   wait period, the deployment status is changed to Stopped.</li>
--   </ul>
[$sel:actionOnTimeout:DeploymentReadyOption'] :: DeploymentReadyOption -> Maybe DeploymentReadyAction

-- | Create a value of <a>DeploymentReadyOption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:waitTimeInMinutes:DeploymentReadyOption'</a>,
--   <a>deploymentReadyOption_waitTimeInMinutes</a> - The number of minutes
--   to wait before the status of a blue/green deployment is changed to
--   Stopped if rerouting is not started manually. Applies only to the
--   <tt>STOP_DEPLOYMENT</tt> option for <tt>actionOnTimeout</tt>.
--   
--   <a>$sel:actionOnTimeout:DeploymentReadyOption'</a>,
--   <a>deploymentReadyOption_actionOnTimeout</a> - Information about when
--   to reroute traffic from an original environment to a replacement
--   environment in a blue/green deployment.
--   
--   <ul>
--   <li>CONTINUE_DEPLOYMENT: Register new instances with the load balancer
--   immediately after the new application revision is installed on the
--   instances in the replacement environment.</li>
--   <li>STOP_DEPLOYMENT: Do not register new instances with a load
--   balancer unless traffic rerouting is started using ContinueDeployment.
--   If traffic rerouting is not started before the end of the specified
--   wait period, the deployment status is changed to Stopped.</li>
--   </ul>
newDeploymentReadyOption :: DeploymentReadyOption

-- | The number of minutes to wait before the status of a blue/green
--   deployment is changed to Stopped if rerouting is not started manually.
--   Applies only to the <tt>STOP_DEPLOYMENT</tt> option for
--   <tt>actionOnTimeout</tt>.
deploymentReadyOption_waitTimeInMinutes :: Lens' DeploymentReadyOption (Maybe Int)

-- | Information about when to reroute traffic from an original environment
--   to a replacement environment in a blue/green deployment.
--   
--   <ul>
--   <li>CONTINUE_DEPLOYMENT: Register new instances with the load balancer
--   immediately after the new application revision is installed on the
--   instances in the replacement environment.</li>
--   <li>STOP_DEPLOYMENT: Do not register new instances with a load
--   balancer unless traffic rerouting is started using ContinueDeployment.
--   If traffic rerouting is not started before the end of the specified
--   wait period, the deployment status is changed to Stopped.</li>
--   </ul>
deploymentReadyOption_actionOnTimeout :: Lens' DeploymentReadyOption (Maybe DeploymentReadyAction)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
--   
--   <i>See:</i> <a>newDeploymentStyle</a> smart constructor.
data DeploymentStyle
DeploymentStyle' :: Maybe DeploymentType -> Maybe DeploymentOption -> DeploymentStyle

-- | Indicates whether to run an in-place deployment or a blue/green
--   deployment.
[$sel:deploymentType:DeploymentStyle'] :: DeploymentStyle -> Maybe DeploymentType

-- | Indicates whether to route deployment traffic behind a load balancer.
[$sel:deploymentOption:DeploymentStyle'] :: DeploymentStyle -> Maybe DeploymentOption

-- | Create a value of <a>DeploymentStyle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentType:DeploymentStyle'</a>,
--   <a>deploymentStyle_deploymentType</a> - Indicates whether to run an
--   in-place deployment or a blue/green deployment.
--   
--   <a>$sel:deploymentOption:DeploymentStyle'</a>,
--   <a>deploymentStyle_deploymentOption</a> - Indicates whether to route
--   deployment traffic behind a load balancer.
newDeploymentStyle :: DeploymentStyle

-- | Indicates whether to run an in-place deployment or a blue/green
--   deployment.
deploymentStyle_deploymentType :: Lens' DeploymentStyle (Maybe DeploymentType)

-- | Indicates whether to route deployment traffic behind a load balancer.
deploymentStyle_deploymentOption :: Lens' DeploymentStyle (Maybe DeploymentOption)

-- | Information about the deployment target.
--   
--   <i>See:</i> <a>newDeploymentTarget</a> smart constructor.
data DeploymentTarget
DeploymentTarget' :: Maybe ECSTarget -> Maybe LambdaTarget -> Maybe CloudFormationTarget -> Maybe InstanceTarget -> Maybe DeploymentTargetType -> DeploymentTarget

-- | Information about the target for a deployment that uses the Amazon ECS
--   compute platform.
[$sel:ecsTarget:DeploymentTarget'] :: DeploymentTarget -> Maybe ECSTarget

-- | Information about the target for a deployment that uses the AWS Lambda
--   compute platform.
[$sel:lambdaTarget:DeploymentTarget'] :: DeploymentTarget -> Maybe LambdaTarget
[$sel:cloudFormationTarget:DeploymentTarget'] :: DeploymentTarget -> Maybe CloudFormationTarget

-- | Information about the target for a deployment that uses the
--   EC2/On-premises compute platform.
[$sel:instanceTarget:DeploymentTarget'] :: DeploymentTarget -> Maybe InstanceTarget

-- | The deployment type that is specific to the deployment's compute
--   platform or deployments initiated by a CloudFormation stack update.
[$sel:deploymentTargetType:DeploymentTarget'] :: DeploymentTarget -> Maybe DeploymentTargetType

-- | Create a value of <a>DeploymentTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ecsTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_ecsTarget</a> - Information about the target for a
--   deployment that uses the Amazon ECS compute platform.
--   
--   <a>$sel:lambdaTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_lambdaTarget</a> - Information about the target
--   for a deployment that uses the AWS Lambda compute platform.
--   
--   <a>$sel:cloudFormationTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_cloudFormationTarget</a> - Undocumented member.
--   
--   <a>$sel:instanceTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_instanceTarget</a> - Information about the target
--   for a deployment that uses the EC2/On-premises compute platform.
--   
--   <a>$sel:deploymentTargetType:DeploymentTarget'</a>,
--   <a>deploymentTarget_deploymentTargetType</a> - The deployment type
--   that is specific to the deployment's compute platform or deployments
--   initiated by a CloudFormation stack update.
newDeploymentTarget :: DeploymentTarget

-- | Information about the target for a deployment that uses the Amazon ECS
--   compute platform.
deploymentTarget_ecsTarget :: Lens' DeploymentTarget (Maybe ECSTarget)

-- | Information about the target for a deployment that uses the AWS Lambda
--   compute platform.
deploymentTarget_lambdaTarget :: Lens' DeploymentTarget (Maybe LambdaTarget)

-- | Undocumented member.
deploymentTarget_cloudFormationTarget :: Lens' DeploymentTarget (Maybe CloudFormationTarget)

-- | Information about the target for a deployment that uses the
--   EC2/On-premises compute platform.
deploymentTarget_instanceTarget :: Lens' DeploymentTarget (Maybe InstanceTarget)

-- | The deployment type that is specific to the deployment's compute
--   platform or deployments initiated by a CloudFormation stack update.
deploymentTarget_deploymentTargetType :: Lens' DeploymentTarget (Maybe DeploymentTargetType)

-- | Diagnostic information about executable scripts that are part of a
--   deployment.
--   
--   <i>See:</i> <a>newDiagnostics</a> smart constructor.
data Diagnostics
Diagnostics' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe LifecycleErrorCode -> Diagnostics

-- | The last portion of the diagnostic log.
--   
--   If available, AWS CodeDeploy returns up to the last 4 KB of the
--   diagnostic log.
[$sel:logTail:Diagnostics'] :: Diagnostics -> Maybe Text

-- | The message associated with the error.
[$sel:message:Diagnostics'] :: Diagnostics -> Maybe Text

-- | The name of the script.
[$sel:scriptName:Diagnostics'] :: Diagnostics -> Maybe Text

-- | The associated error code:
--   
--   <ul>
--   <li>Success: The specified script ran.</li>
--   <li>ScriptMissing: The specified script was not found in the specified
--   location.</li>
--   <li>ScriptNotExecutable: The specified script is not a recognized
--   executable file type.</li>
--   <li>ScriptTimedOut: The specified script did not finish running in the
--   specified time period.</li>
--   <li>ScriptFailed: The specified script failed to run as expected.</li>
--   <li>UnknownError: The specified script did not run for an unknown
--   reason.</li>
--   </ul>
[$sel:errorCode:Diagnostics'] :: Diagnostics -> Maybe LifecycleErrorCode

-- | Create a value of <a>Diagnostics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logTail:Diagnostics'</a>, <a>diagnostics_logTail</a> - The
--   last portion of the diagnostic log.
--   
--   If available, AWS CodeDeploy returns up to the last 4 KB of the
--   diagnostic log.
--   
--   <a>$sel:message:Diagnostics'</a>, <a>diagnostics_message</a> - The
--   message associated with the error.
--   
--   <a>$sel:scriptName:Diagnostics'</a>, <a>diagnostics_scriptName</a> -
--   The name of the script.
--   
--   <a>$sel:errorCode:Diagnostics'</a>, <a>diagnostics_errorCode</a> - The
--   associated error code:
--   
--   <ul>
--   <li>Success: The specified script ran.</li>
--   <li>ScriptMissing: The specified script was not found in the specified
--   location.</li>
--   <li>ScriptNotExecutable: The specified script is not a recognized
--   executable file type.</li>
--   <li>ScriptTimedOut: The specified script did not finish running in the
--   specified time period.</li>
--   <li>ScriptFailed: The specified script failed to run as expected.</li>
--   <li>UnknownError: The specified script did not run for an unknown
--   reason.</li>
--   </ul>
newDiagnostics :: Diagnostics

-- | The last portion of the diagnostic log.
--   
--   If available, AWS CodeDeploy returns up to the last 4 KB of the
--   diagnostic log.
diagnostics_logTail :: Lens' Diagnostics (Maybe Text)

-- | The message associated with the error.
diagnostics_message :: Lens' Diagnostics (Maybe Text)

-- | The name of the script.
diagnostics_scriptName :: Lens' Diagnostics (Maybe Text)

-- | The associated error code:
--   
--   <ul>
--   <li>Success: The specified script ran.</li>
--   <li>ScriptMissing: The specified script was not found in the specified
--   location.</li>
--   <li>ScriptNotExecutable: The specified script is not a recognized
--   executable file type.</li>
--   <li>ScriptTimedOut: The specified script did not finish running in the
--   specified time period.</li>
--   <li>ScriptFailed: The specified script failed to run as expected.</li>
--   <li>UnknownError: The specified script did not run for an unknown
--   reason.</li>
--   </ul>
diagnostics_errorCode :: Lens' Diagnostics (Maybe LifecycleErrorCode)

-- | Information about an EC2 tag filter.
--   
--   <i>See:</i> <a>newEC2TagFilter</a> smart constructor.
data EC2TagFilter
EC2TagFilter' :: Maybe Text -> Maybe Text -> Maybe EC2TagFilterType -> EC2TagFilter

-- | The tag filter key.
[$sel:key:EC2TagFilter'] :: EC2TagFilter -> Maybe Text

-- | The tag filter value.
[$sel:value:EC2TagFilter'] :: EC2TagFilter -> Maybe Text

-- | The tag filter type:
--   
--   <ul>
--   <li><tt>KEY_ONLY</tt>: Key only.</li>
--   <li><tt>VALUE_ONLY</tt>: Value only.</li>
--   <li><tt>KEY_AND_VALUE</tt>: Key and value.</li>
--   </ul>
[$sel:type':EC2TagFilter'] :: EC2TagFilter -> Maybe EC2TagFilterType

-- | Create a value of <a>EC2TagFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:EC2TagFilter'</a>, <a>eC2TagFilter_key</a> - The tag
--   filter key.
--   
--   <a>$sel:value:EC2TagFilter'</a>, <a>eC2TagFilter_value</a> - The tag
--   filter value.
--   
--   <a>$sel:type':EC2TagFilter'</a>, <a>eC2TagFilter_type</a> - The tag
--   filter type:
--   
--   <ul>
--   <li><tt>KEY_ONLY</tt>: Key only.</li>
--   <li><tt>VALUE_ONLY</tt>: Value only.</li>
--   <li><tt>KEY_AND_VALUE</tt>: Key and value.</li>
--   </ul>
newEC2TagFilter :: EC2TagFilter

-- | The tag filter key.
eC2TagFilter_key :: Lens' EC2TagFilter (Maybe Text)

-- | The tag filter value.
eC2TagFilter_value :: Lens' EC2TagFilter (Maybe Text)

-- | The tag filter type:
--   
--   <ul>
--   <li><tt>KEY_ONLY</tt>: Key only.</li>
--   <li><tt>VALUE_ONLY</tt>: Value only.</li>
--   <li><tt>KEY_AND_VALUE</tt>: Key and value.</li>
--   </ul>
eC2TagFilter_type :: Lens' EC2TagFilter (Maybe EC2TagFilterType)

-- | Information about groups of EC2 instance tags.
--   
--   <i>See:</i> <a>newEC2TagSet</a> smart constructor.
data EC2TagSet
EC2TagSet' :: Maybe [[EC2TagFilter]] -> EC2TagSet

-- | A list that contains other lists of EC2 instance tag groups. For an
--   instance to be included in the deployment group, it must be identified
--   by all of the tag groups in the list.
[$sel:ec2TagSetList:EC2TagSet'] :: EC2TagSet -> Maybe [[EC2TagFilter]]

-- | Create a value of <a>EC2TagSet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ec2TagSetList:EC2TagSet'</a>, <a>eC2TagSet_ec2TagSetList</a> -
--   A list that contains other lists of EC2 instance tag groups. For an
--   instance to be included in the deployment group, it must be identified
--   by all of the tag groups in the list.
newEC2TagSet :: EC2TagSet

-- | A list that contains other lists of EC2 instance tag groups. For an
--   instance to be included in the deployment group, it must be identified
--   by all of the tag groups in the list.
eC2TagSet_ec2TagSetList :: Lens' EC2TagSet (Maybe [[EC2TagFilter]])

-- | Contains the service and cluster names used to identify an Amazon ECS
--   deployment's target.
--   
--   <i>See:</i> <a>newECSService</a> smart constructor.
data ECSService
ECSService' :: Maybe Text -> Maybe Text -> ECSService

-- | The name of the target Amazon ECS service.
[$sel:serviceName:ECSService'] :: ECSService -> Maybe Text

-- | The name of the cluster that the Amazon ECS service is associated
--   with.
[$sel:clusterName:ECSService'] :: ECSService -> Maybe Text

-- | Create a value of <a>ECSService</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceName:ECSService'</a>, <a>eCSService_serviceName</a> -
--   The name of the target Amazon ECS service.
--   
--   <a>$sel:clusterName:ECSService'</a>, <a>eCSService_clusterName</a> -
--   The name of the cluster that the Amazon ECS service is associated
--   with.
newECSService :: ECSService

-- | The name of the target Amazon ECS service.
eCSService_serviceName :: Lens' ECSService (Maybe Text)

-- | The name of the cluster that the Amazon ECS service is associated
--   with.
eCSService_clusterName :: Lens' ECSService (Maybe Text)

-- | Information about the target of an Amazon ECS deployment.
--   
--   <i>See:</i> <a>newECSTarget</a> smart constructor.
data ECSTarget
ECSTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe [ECSTaskSet] -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> ECSTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>ecsTarget</tt>.
[$sel:targetId:ECSTarget'] :: ECSTarget -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:ECSTarget'] :: ECSTarget -> Maybe Text

-- | The status an Amazon ECS deployment's target ECS application.
[$sel:status:ECSTarget'] :: ECSTarget -> Maybe TargetStatus

-- | The <tt>ECSTaskSet</tt> objects associated with the ECS target.
[$sel:taskSetsInfo:ECSTarget'] :: ECSTarget -> Maybe [ECSTaskSet]

-- | The Amazon Resource Name (ARN) of the target.
[$sel:targetArn:ECSTarget'] :: ECSTarget -> Maybe Text

-- | The lifecycle events of the deployment to this target Amazon ECS
--   application.
[$sel:lifecycleEvents:ECSTarget'] :: ECSTarget -> Maybe [LifecycleEvent]

-- | The date and time when the target Amazon ECS application was updated
--   by a deployment.
[$sel:lastUpdatedAt:ECSTarget'] :: ECSTarget -> Maybe POSIX

-- | Create a value of <a>ECSTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:ECSTarget'</a>, <a>eCSTarget_targetId</a> - The
--   unique ID of a deployment target that has a type of
--   <tt>ecsTarget</tt>.
--   
--   <a>$sel:deploymentId:ECSTarget'</a>, <a>eCSTarget_deploymentId</a> -
--   The unique ID of a deployment.
--   
--   <a>$sel:status:ECSTarget'</a>, <a>eCSTarget_status</a> - The status an
--   Amazon ECS deployment's target ECS application.
--   
--   <a>$sel:taskSetsInfo:ECSTarget'</a>, <a>eCSTarget_taskSetsInfo</a> -
--   The <tt>ECSTaskSet</tt> objects associated with the ECS target.
--   
--   <a>$sel:targetArn:ECSTarget'</a>, <a>eCSTarget_targetArn</a> - The
--   Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:ECSTarget'</a>,
--   <a>eCSTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target Amazon ECS application.
--   
--   <a>$sel:lastUpdatedAt:ECSTarget'</a>, <a>eCSTarget_lastUpdatedAt</a> -
--   The date and time when the target Amazon ECS application was updated
--   by a deployment.
newECSTarget :: ECSTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>ecsTarget</tt>.
eCSTarget_targetId :: Lens' ECSTarget (Maybe Text)

-- | The unique ID of a deployment.
eCSTarget_deploymentId :: Lens' ECSTarget (Maybe Text)

-- | The status an Amazon ECS deployment's target ECS application.
eCSTarget_status :: Lens' ECSTarget (Maybe TargetStatus)

-- | The <tt>ECSTaskSet</tt> objects associated with the ECS target.
eCSTarget_taskSetsInfo :: Lens' ECSTarget (Maybe [ECSTaskSet])

-- | The Amazon Resource Name (ARN) of the target.
eCSTarget_targetArn :: Lens' ECSTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target Amazon ECS
--   application.
eCSTarget_lifecycleEvents :: Lens' ECSTarget (Maybe [LifecycleEvent])

-- | The date and time when the target Amazon ECS application was updated
--   by a deployment.
eCSTarget_lastUpdatedAt :: Lens' ECSTarget (Maybe UTCTime)

-- | Information about a set of Amazon ECS tasks in an AWS CodeDeploy
--   deployment. An Amazon ECS task set includes details such as the
--   desired number of tasks, how many tasks are running, and whether the
--   task set serves production traffic. An AWS CodeDeploy application that
--   uses the Amazon ECS compute platform deploys a containerized
--   application in an Amazon ECS service as a task set.
--   
--   <i>See:</i> <a>newECSTaskSet</a> smart constructor.
data ECSTaskSet
ECSTaskSet' :: Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe TargetLabel -> Maybe TargetGroupInfo -> Maybe Double -> Maybe Text -> ECSTaskSet

-- | The number of tasks in the task set that are in the <tt>RUNNING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>RUNNING</tt>
--   state is running and ready for use.
[$sel:runningCount:ECSTaskSet'] :: ECSTaskSet -> Maybe Integer

-- | The status of the task set. There are three valid task set statuses:
--   
--   <ul>
--   <li><tt>PRIMARY</tt>: Indicates the task set is serving production
--   traffic.</li>
--   <li><tt>ACTIVE</tt>: Indicates the task set is not serving production
--   traffic.</li>
--   <li><tt>DRAINING</tt>: Indicates the tasks in the task set are being
--   stopped and their corresponding targets are being deregistered from
--   their target group.</li>
--   </ul>
[$sel:status:ECSTaskSet'] :: ECSTaskSet -> Maybe Text

-- | The number of tasks in a task set. During a deployment that uses the
--   Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a
--   new task set and uses this value to determine how many tasks to
--   create. After the updated task set is created, CodeDeploy shifts
--   traffic to the new task set.
[$sel:desiredCount:ECSTaskSet'] :: ECSTaskSet -> Maybe Integer

-- | The number of tasks in the task set that are in the <tt>PENDING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>PENDING</tt>
--   state is preparing to enter the <tt>RUNNING</tt> state. A task set
--   enters the <tt>PENDING</tt> status when it launches for the first
--   time, or when it is restarted after being in the <tt>STOPPED</tt>
--   state.
[$sel:pendingCount:ECSTaskSet'] :: ECSTaskSet -> Maybe Integer

-- | A label that identifies whether the ECS task set is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
[$sel:taskSetLabel:ECSTaskSet'] :: ECSTaskSet -> Maybe TargetLabel

-- | The target group associated with the task set. The target group is
--   used by AWS CodeDeploy to manage traffic to a task set.
[$sel:targetGroup:ECSTaskSet'] :: ECSTaskSet -> Maybe TargetGroupInfo

-- | The percentage of traffic served by this task set.
[$sel:trafficWeight:ECSTaskSet'] :: ECSTaskSet -> Maybe Double

-- | A unique ID of an <tt>ECSTaskSet</tt>.
[$sel:identifer:ECSTaskSet'] :: ECSTaskSet -> Maybe Text

-- | Create a value of <a>ECSTaskSet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runningCount:ECSTaskSet'</a>, <a>eCSTaskSet_runningCount</a> -
--   The number of tasks in the task set that are in the <tt>RUNNING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>RUNNING</tt>
--   state is running and ready for use.
--   
--   <a>$sel:status:ECSTaskSet'</a>, <a>eCSTaskSet_status</a> - The status
--   of the task set. There are three valid task set statuses:
--   
--   <ul>
--   <li><tt>PRIMARY</tt>: Indicates the task set is serving production
--   traffic.</li>
--   <li><tt>ACTIVE</tt>: Indicates the task set is not serving production
--   traffic.</li>
--   <li><tt>DRAINING</tt>: Indicates the tasks in the task set are being
--   stopped and their corresponding targets are being deregistered from
--   their target group.</li>
--   </ul>
--   
--   <a>$sel:desiredCount:ECSTaskSet'</a>, <a>eCSTaskSet_desiredCount</a> -
--   The number of tasks in a task set. During a deployment that uses the
--   Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a
--   new task set and uses this value to determine how many tasks to
--   create. After the updated task set is created, CodeDeploy shifts
--   traffic to the new task set.
--   
--   <a>$sel:pendingCount:ECSTaskSet'</a>, <a>eCSTaskSet_pendingCount</a> -
--   The number of tasks in the task set that are in the <tt>PENDING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>PENDING</tt>
--   state is preparing to enter the <tt>RUNNING</tt> state. A task set
--   enters the <tt>PENDING</tt> status when it launches for the first
--   time, or when it is restarted after being in the <tt>STOPPED</tt>
--   state.
--   
--   <a>$sel:taskSetLabel:ECSTaskSet'</a>, <a>eCSTaskSet_taskSetLabel</a> -
--   A label that identifies whether the ECS task set is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
--   
--   <a>$sel:targetGroup:ECSTaskSet'</a>, <a>eCSTaskSet_targetGroup</a> -
--   The target group associated with the task set. The target group is
--   used by AWS CodeDeploy to manage traffic to a task set.
--   
--   <a>$sel:trafficWeight:ECSTaskSet'</a>, <a>eCSTaskSet_trafficWeight</a>
--   - The percentage of traffic served by this task set.
--   
--   <a>$sel:identifer:ECSTaskSet'</a>, <a>eCSTaskSet_identifer</a> - A
--   unique ID of an <tt>ECSTaskSet</tt>.
newECSTaskSet :: ECSTaskSet

-- | The number of tasks in the task set that are in the <tt>RUNNING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>RUNNING</tt>
--   state is running and ready for use.
eCSTaskSet_runningCount :: Lens' ECSTaskSet (Maybe Integer)

-- | The status of the task set. There are three valid task set statuses:
--   
--   <ul>
--   <li><tt>PRIMARY</tt>: Indicates the task set is serving production
--   traffic.</li>
--   <li><tt>ACTIVE</tt>: Indicates the task set is not serving production
--   traffic.</li>
--   <li><tt>DRAINING</tt>: Indicates the tasks in the task set are being
--   stopped and their corresponding targets are being deregistered from
--   their target group.</li>
--   </ul>
eCSTaskSet_status :: Lens' ECSTaskSet (Maybe Text)

-- | The number of tasks in a task set. During a deployment that uses the
--   Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a
--   new task set and uses this value to determine how many tasks to
--   create. After the updated task set is created, CodeDeploy shifts
--   traffic to the new task set.
eCSTaskSet_desiredCount :: Lens' ECSTaskSet (Maybe Integer)

-- | The number of tasks in the task set that are in the <tt>PENDING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>PENDING</tt>
--   state is preparing to enter the <tt>RUNNING</tt> state. A task set
--   enters the <tt>PENDING</tt> status when it launches for the first
--   time, or when it is restarted after being in the <tt>STOPPED</tt>
--   state.
eCSTaskSet_pendingCount :: Lens' ECSTaskSet (Maybe Integer)

-- | A label that identifies whether the ECS task set is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
eCSTaskSet_taskSetLabel :: Lens' ECSTaskSet (Maybe TargetLabel)

-- | The target group associated with the task set. The target group is
--   used by AWS CodeDeploy to manage traffic to a task set.
eCSTaskSet_targetGroup :: Lens' ECSTaskSet (Maybe TargetGroupInfo)

-- | The percentage of traffic served by this task set.
eCSTaskSet_trafficWeight :: Lens' ECSTaskSet (Maybe Double)

-- | A unique ID of an <tt>ECSTaskSet</tt>.
eCSTaskSet_identifer :: Lens' ECSTaskSet (Maybe Text)

-- | Information about a load balancer in Elastic Load Balancing to use in
--   a deployment. Instances are registered directly with a load balancer,
--   and traffic is routed to the load balancer.
--   
--   <i>See:</i> <a>newELBInfo</a> smart constructor.
data ELBInfo
ELBInfo' :: Maybe Text -> ELBInfo

-- | For blue/green deployments, the name of the load balancer that is used
--   to route traffic from original instances to replacement instances in a
--   blue/green deployment. For in-place deployments, the name of the load
--   balancer that instances are deregistered from so they are not serving
--   traffic during a deployment, and then re-registered with after the
--   deployment is complete.
[$sel:name:ELBInfo'] :: ELBInfo -> Maybe Text

-- | Create a value of <a>ELBInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ELBInfo'</a>, <a>eLBInfo_name</a> - For blue/green
--   deployments, the name of the load balancer that is used to route
--   traffic from original instances to replacement instances in a
--   blue/green deployment. For in-place deployments, the name of the load
--   balancer that instances are deregistered from so they are not serving
--   traffic during a deployment, and then re-registered with after the
--   deployment is complete.
newELBInfo :: ELBInfo

-- | For blue/green deployments, the name of the load balancer that is used
--   to route traffic from original instances to replacement instances in a
--   blue/green deployment. For in-place deployments, the name of the load
--   balancer that instances are deregistered from so they are not serving
--   traffic during a deployment, and then re-registered with after the
--   deployment is complete.
eLBInfo_name :: Lens' ELBInfo (Maybe Text)

-- | Information about a deployment error.
--   
--   <i>See:</i> <a>newErrorInformation</a> smart constructor.
data ErrorInformation
ErrorInformation' :: Maybe Text -> Maybe DeployErrorCode -> ErrorInformation

-- | An accompanying error message.
[$sel:message:ErrorInformation'] :: ErrorInformation -> Maybe Text

-- | For more information, see <a>Error Codes for AWS CodeDeploy</a> in the
--   <a>AWS CodeDeploy User Guide</a>.
--   
--   The error code:
--   
--   <ul>
--   <li>APPLICATION_MISSING: The application was missing. This error code
--   is most likely raised if the application is deleted after the
--   deployment is created, but before it is started.</li>
--   <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This
--   error code is most likely raised if the deployment group is deleted
--   after the deployment is created, but before it is started.</li>
--   <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to
--   be successfully deployed within the instance health constraints
--   specified.</li>
--   <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
--   deployed within the instance health constraints specified.</li>
--   <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li>
--   <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions.</li>
--   <li>INTERNAL_ERROR: There was an internal error.</li>
--   <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to
--   Amazon EC2.</li>
--   <li>NO_INSTANCES: No instances were specified, or no instances can be
--   found.</li>
--   <li>OVER_MAX_INSTANCES: The maximum number of instances was
--   exceeded.</li>
--   <li>THROTTLED: The operation was throttled because the calling account
--   exceeded the throttling limits of one or more AWS services.</li>
--   <li>TIMEOUT: The deployment has timed out.</li>
--   <li>REVISION_MISSING: The revision ID was missing. This error code is
--   most likely raised if the revision is deleted after the deployment is
--   created, but before it is started.</li>
--   </ul>
[$sel:code:ErrorInformation'] :: ErrorInformation -> Maybe DeployErrorCode

-- | Create a value of <a>ErrorInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ErrorInformation'</a>, <a>errorInformation_message</a>
--   - An accompanying error message.
--   
--   <a>$sel:code:ErrorInformation'</a>, <a>errorInformation_code</a> - For
--   more information, see <a>Error Codes for AWS CodeDeploy</a> in the
--   <a>AWS CodeDeploy User Guide</a>.
--   
--   The error code:
--   
--   <ul>
--   <li>APPLICATION_MISSING: The application was missing. This error code
--   is most likely raised if the application is deleted after the
--   deployment is created, but before it is started.</li>
--   <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This
--   error code is most likely raised if the deployment group is deleted
--   after the deployment is created, but before it is started.</li>
--   <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to
--   be successfully deployed within the instance health constraints
--   specified.</li>
--   <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
--   deployed within the instance health constraints specified.</li>
--   <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li>
--   <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions.</li>
--   <li>INTERNAL_ERROR: There was an internal error.</li>
--   <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to
--   Amazon EC2.</li>
--   <li>NO_INSTANCES: No instances were specified, or no instances can be
--   found.</li>
--   <li>OVER_MAX_INSTANCES: The maximum number of instances was
--   exceeded.</li>
--   <li>THROTTLED: The operation was throttled because the calling account
--   exceeded the throttling limits of one or more AWS services.</li>
--   <li>TIMEOUT: The deployment has timed out.</li>
--   <li>REVISION_MISSING: The revision ID was missing. This error code is
--   most likely raised if the revision is deleted after the deployment is
--   created, but before it is started.</li>
--   </ul>
newErrorInformation :: ErrorInformation

-- | An accompanying error message.
errorInformation_message :: Lens' ErrorInformation (Maybe Text)

-- | For more information, see <a>Error Codes for AWS CodeDeploy</a> in the
--   <a>AWS CodeDeploy User Guide</a>.
--   
--   The error code:
--   
--   <ul>
--   <li>APPLICATION_MISSING: The application was missing. This error code
--   is most likely raised if the application is deleted after the
--   deployment is created, but before it is started.</li>
--   <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This
--   error code is most likely raised if the deployment group is deleted
--   after the deployment is created, but before it is started.</li>
--   <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to
--   be successfully deployed within the instance health constraints
--   specified.</li>
--   <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
--   deployed within the instance health constraints specified.</li>
--   <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li>
--   <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions.</li>
--   <li>INTERNAL_ERROR: There was an internal error.</li>
--   <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to
--   Amazon EC2.</li>
--   <li>NO_INSTANCES: No instances were specified, or no instances can be
--   found.</li>
--   <li>OVER_MAX_INSTANCES: The maximum number of instances was
--   exceeded.</li>
--   <li>THROTTLED: The operation was throttled because the calling account
--   exceeded the throttling limits of one or more AWS services.</li>
--   <li>TIMEOUT: The deployment has timed out.</li>
--   <li>REVISION_MISSING: The revision ID was missing. This error code is
--   most likely raised if the revision is deleted after the deployment is
--   created, but before it is started.</li>
--   </ul>
errorInformation_code :: Lens' ErrorInformation (Maybe DeployErrorCode)

-- | Information about an application revision.
--   
--   <i>See:</i> <a>newGenericRevisionInfo</a> smart constructor.
data GenericRevisionInfo
GenericRevisionInfo' :: Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> GenericRevisionInfo

-- | When the revision was registered with AWS CodeDeploy.
[$sel:registerTime:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe POSIX

-- | The deployment groups for which this is the current target revision.
[$sel:deploymentGroups:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe [Text]

-- | A comment about the revision.
[$sel:description:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe Text

-- | When the revision was first used by AWS CodeDeploy.
[$sel:firstUsedTime:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe POSIX

-- | When the revision was last used by AWS CodeDeploy.
[$sel:lastUsedTime:GenericRevisionInfo'] :: GenericRevisionInfo -> Maybe POSIX

-- | Create a value of <a>GenericRevisionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registerTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_registerTime</a> - When the revision was
--   registered with AWS CodeDeploy.
--   
--   <a>$sel:deploymentGroups:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_deploymentGroups</a> - The deployment groups
--   for which this is the current target revision.
--   
--   <a>$sel:description:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_description</a> - A comment about the revision.
--   
--   <a>$sel:firstUsedTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_firstUsedTime</a> - When the revision was first
--   used by AWS CodeDeploy.
--   
--   <a>$sel:lastUsedTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_lastUsedTime</a> - When the revision was last
--   used by AWS CodeDeploy.
newGenericRevisionInfo :: GenericRevisionInfo

-- | When the revision was registered with AWS CodeDeploy.
genericRevisionInfo_registerTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | The deployment groups for which this is the current target revision.
genericRevisionInfo_deploymentGroups :: Lens' GenericRevisionInfo (Maybe [Text])

-- | A comment about the revision.
genericRevisionInfo_description :: Lens' GenericRevisionInfo (Maybe Text)

-- | When the revision was first used by AWS CodeDeploy.
genericRevisionInfo_firstUsedTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | When the revision was last used by AWS CodeDeploy.
genericRevisionInfo_lastUsedTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | Information about the location of application artifacts stored in
--   GitHub.
--   
--   <i>See:</i> <a>newGitHubLocation</a> smart constructor.
data GitHubLocation
GitHubLocation' :: Maybe Text -> Maybe Text -> GitHubLocation

-- | The SHA1 commit ID of the GitHub commit that represents the bundled
--   artifacts for the application revision.
[$sel:commitId:GitHubLocation'] :: GitHubLocation -> Maybe Text

-- | The GitHub account and repository pair that stores a reference to the
--   commit that represents the bundled artifacts for the application
--   revision.
--   
--   Specified as account/repository.
[$sel:repository:GitHubLocation'] :: GitHubLocation -> Maybe Text

-- | Create a value of <a>GitHubLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:GitHubLocation'</a>, <a>gitHubLocation_commitId</a> -
--   The SHA1 commit ID of the GitHub commit that represents the bundled
--   artifacts for the application revision.
--   
--   <a>$sel:repository:GitHubLocation'</a>,
--   <a>gitHubLocation_repository</a> - The GitHub account and repository
--   pair that stores a reference to the commit that represents the bundled
--   artifacts for the application revision.
--   
--   Specified as account/repository.
newGitHubLocation :: GitHubLocation

-- | The SHA1 commit ID of the GitHub commit that represents the bundled
--   artifacts for the application revision.
gitHubLocation_commitId :: Lens' GitHubLocation (Maybe Text)

-- | The GitHub account and repository pair that stores a reference to the
--   commit that represents the bundled artifacts for the application
--   revision.
--   
--   Specified as account/repository.
gitHubLocation_repository :: Lens' GitHubLocation (Maybe Text)

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newGreenFleetProvisioningOption</a> smart constructor.
data GreenFleetProvisioningOption
GreenFleetProvisioningOption' :: Maybe GreenFleetProvisioningAction -> GreenFleetProvisioningOption

-- | The method used to add instances to a replacement environment.
--   
--   <ul>
--   <li><tt>DISCOVER_EXISTING</tt>: Use instances that already exist or
--   will be created manually.</li>
--   <li><tt>COPY_AUTO_SCALING_GROUP</tt>: Use settings from a specified
--   Auto Scaling group to define and create instances in a new Auto
--   Scaling group.</li>
--   </ul>
[$sel:action:GreenFleetProvisioningOption'] :: GreenFleetProvisioningOption -> Maybe GreenFleetProvisioningAction

-- | Create a value of <a>GreenFleetProvisioningOption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:GreenFleetProvisioningOption'</a>,
--   <a>greenFleetProvisioningOption_action</a> - The method used to add
--   instances to a replacement environment.
--   
--   <ul>
--   <li><tt>DISCOVER_EXISTING</tt>: Use instances that already exist or
--   will be created manually.</li>
--   <li><tt>COPY_AUTO_SCALING_GROUP</tt>: Use settings from a specified
--   Auto Scaling group to define and create instances in a new Auto
--   Scaling group.</li>
--   </ul>
newGreenFleetProvisioningOption :: GreenFleetProvisioningOption

-- | The method used to add instances to a replacement environment.
--   
--   <ul>
--   <li><tt>DISCOVER_EXISTING</tt>: Use instances that already exist or
--   will be created manually.</li>
--   <li><tt>COPY_AUTO_SCALING_GROUP</tt>: Use settings from a specified
--   Auto Scaling group to define and create instances in a new Auto
--   Scaling group.</li>
--   </ul>
greenFleetProvisioningOption_action :: Lens' GreenFleetProvisioningOption (Maybe GreenFleetProvisioningAction)

-- | Information about an on-premises instance.
--   
--   <i>See:</i> <a>newInstanceInfo</a> smart constructor.
data InstanceInfo
InstanceInfo' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe POSIX -> InstanceInfo

-- | The time at which the on-premises instance was registered.
[$sel:registerTime:InstanceInfo'] :: InstanceInfo -> Maybe POSIX

-- | The IAM user ARN associated with the on-premises instance.
[$sel:iamUserArn:InstanceInfo'] :: InstanceInfo -> Maybe Text

-- | The name of the on-premises instance.
[$sel:instanceName:InstanceInfo'] :: InstanceInfo -> Maybe Text

-- | The ARN of the on-premises instance.
[$sel:instanceArn:InstanceInfo'] :: InstanceInfo -> Maybe Text

-- | The tags currently associated with the on-premises instance.
[$sel:tags:InstanceInfo'] :: InstanceInfo -> Maybe [Tag]

-- | The ARN of the IAM session associated with the on-premises instance.
[$sel:iamSessionArn:InstanceInfo'] :: InstanceInfo -> Maybe Text

-- | If the on-premises instance was deregistered, the time at which the
--   on-premises instance was deregistered.
[$sel:deregisterTime:InstanceInfo'] :: InstanceInfo -> Maybe POSIX

-- | Create a value of <a>InstanceInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registerTime:InstanceInfo'</a>,
--   <a>instanceInfo_registerTime</a> - The time at which the on-premises
--   instance was registered.
--   
--   <a>$sel:iamUserArn:InstanceInfo'</a>, <a>instanceInfo_iamUserArn</a> -
--   The IAM user ARN associated with the on-premises instance.
--   
--   <a>$sel:instanceName:InstanceInfo'</a>,
--   <a>instanceInfo_instanceName</a> - The name of the on-premises
--   instance.
--   
--   <a>$sel:instanceArn:InstanceInfo'</a>, <a>instanceInfo_instanceArn</a>
--   - The ARN of the on-premises instance.
--   
--   <a>$sel:tags:InstanceInfo'</a>, <a>instanceInfo_tags</a> - The tags
--   currently associated with the on-premises instance.
--   
--   <a>$sel:iamSessionArn:InstanceInfo'</a>,
--   <a>instanceInfo_iamSessionArn</a> - The ARN of the IAM session
--   associated with the on-premises instance.
--   
--   <a>$sel:deregisterTime:InstanceInfo'</a>,
--   <a>instanceInfo_deregisterTime</a> - If the on-premises instance was
--   deregistered, the time at which the on-premises instance was
--   deregistered.
newInstanceInfo :: InstanceInfo

-- | The time at which the on-premises instance was registered.
instanceInfo_registerTime :: Lens' InstanceInfo (Maybe UTCTime)

-- | The IAM user ARN associated with the on-premises instance.
instanceInfo_iamUserArn :: Lens' InstanceInfo (Maybe Text)

-- | The name of the on-premises instance.
instanceInfo_instanceName :: Lens' InstanceInfo (Maybe Text)

-- | The ARN of the on-premises instance.
instanceInfo_instanceArn :: Lens' InstanceInfo (Maybe Text)

-- | The tags currently associated with the on-premises instance.
instanceInfo_tags :: Lens' InstanceInfo (Maybe [Tag])

-- | The ARN of the IAM session associated with the on-premises instance.
instanceInfo_iamSessionArn :: Lens' InstanceInfo (Maybe Text)

-- | If the on-premises instance was deregistered, the time at which the
--   on-premises instance was deregistered.
instanceInfo_deregisterTime :: Lens' InstanceInfo (Maybe UTCTime)

-- | A target Amazon EC2 or on-premises instance during a deployment that
--   uses the EC2/On-premises compute platform.
--   
--   <i>See:</i> <a>newInstanceTarget</a> smart constructor.
data InstanceTarget
InstanceTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe TargetLabel -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> InstanceTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>instanceTarget</tt>.
[$sel:targetId:InstanceTarget'] :: InstanceTarget -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:InstanceTarget'] :: InstanceTarget -> Maybe Text

-- | The status an EC2/On-premises deployment's target instance.
[$sel:status:InstanceTarget'] :: InstanceTarget -> Maybe TargetStatus

-- | A label that identifies whether the instance is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
[$sel:instanceLabel:InstanceTarget'] :: InstanceTarget -> Maybe TargetLabel

-- | The Amazon Resource Name (ARN) of the target.
[$sel:targetArn:InstanceTarget'] :: InstanceTarget -> Maybe Text

-- | The lifecycle events of the deployment to this target instance.
[$sel:lifecycleEvents:InstanceTarget'] :: InstanceTarget -> Maybe [LifecycleEvent]

-- | The date and time when the target instance was updated by a
--   deployment.
[$sel:lastUpdatedAt:InstanceTarget'] :: InstanceTarget -> Maybe POSIX

-- | Create a value of <a>InstanceTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:InstanceTarget'</a>, <a>instanceTarget_targetId</a> -
--   The unique ID of a deployment target that has a type of
--   <tt>instanceTarget</tt>.
--   
--   <a>$sel:deploymentId:InstanceTarget'</a>,
--   <a>instanceTarget_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:InstanceTarget'</a>, <a>instanceTarget_status</a> - The
--   status an EC2/On-premises deployment's target instance.
--   
--   <a>$sel:instanceLabel:InstanceTarget'</a>,
--   <a>instanceTarget_instanceLabel</a> - A label that identifies whether
--   the instance is an original target (<tt>BLUE</tt>) or a replacement
--   target (<tt>GREEN</tt>).
--   
--   <a>$sel:targetArn:InstanceTarget'</a>, <a>instanceTarget_targetArn</a>
--   - The Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:InstanceTarget'</a>,
--   <a>instanceTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target instance.
--   
--   <a>$sel:lastUpdatedAt:InstanceTarget'</a>,
--   <a>instanceTarget_lastUpdatedAt</a> - The date and time when the
--   target instance was updated by a deployment.
newInstanceTarget :: InstanceTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>instanceTarget</tt>.
instanceTarget_targetId :: Lens' InstanceTarget (Maybe Text)

-- | The unique ID of a deployment.
instanceTarget_deploymentId :: Lens' InstanceTarget (Maybe Text)

-- | The status an EC2/On-premises deployment's target instance.
instanceTarget_status :: Lens' InstanceTarget (Maybe TargetStatus)

-- | A label that identifies whether the instance is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
instanceTarget_instanceLabel :: Lens' InstanceTarget (Maybe TargetLabel)

-- | The Amazon Resource Name (ARN) of the target.
instanceTarget_targetArn :: Lens' InstanceTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target instance.
instanceTarget_lifecycleEvents :: Lens' InstanceTarget (Maybe [LifecycleEvent])

-- | The date and time when the target instance was updated by a
--   deployment.
instanceTarget_lastUpdatedAt :: Lens' InstanceTarget (Maybe UTCTime)

-- | Information about a Lambda function specified in a deployment.
--   
--   <i>See:</i> <a>newLambdaFunctionInfo</a> smart constructor.
data LambdaFunctionInfo
LambdaFunctionInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Double -> Maybe Text -> LambdaFunctionInfo

-- | The alias of a Lambda function. For more information, see <a>AWS
--   Lambda Function Aliases</a> in the <i>AWS Lambda Developer Guide</i>.
[$sel:functionAlias:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Text

-- | The version of a Lambda function that production traffic points to.
[$sel:currentVersion:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Text

-- | The version of a Lambda function that production traffic points to
--   after the Lambda function is deployed.
[$sel:targetVersion:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Text

-- | The percentage of production traffic that the target version of a
--   Lambda function receives.
[$sel:targetVersionWeight:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Double

-- | The name of a Lambda function.
[$sel:functionName:LambdaFunctionInfo'] :: LambdaFunctionInfo -> Maybe Text

-- | Create a value of <a>LambdaFunctionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionAlias:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_functionAlias</a> - The alias of a Lambda
--   function. For more information, see <a>AWS Lambda Function Aliases</a>
--   in the <i>AWS Lambda Developer Guide</i>.
--   
--   <a>$sel:currentVersion:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_currentVersion</a> - The version of a Lambda
--   function that production traffic points to.
--   
--   <a>$sel:targetVersion:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_targetVersion</a> - The version of a Lambda
--   function that production traffic points to after the Lambda function
--   is deployed.
--   
--   <a>$sel:targetVersionWeight:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_targetVersionWeight</a> - The percentage of
--   production traffic that the target version of a Lambda function
--   receives.
--   
--   <a>$sel:functionName:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_functionName</a> - The name of a Lambda
--   function.
newLambdaFunctionInfo :: LambdaFunctionInfo

-- | The alias of a Lambda function. For more information, see <a>AWS
--   Lambda Function Aliases</a> in the <i>AWS Lambda Developer Guide</i>.
lambdaFunctionInfo_functionAlias :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The version of a Lambda function that production traffic points to.
lambdaFunctionInfo_currentVersion :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The version of a Lambda function that production traffic points to
--   after the Lambda function is deployed.
lambdaFunctionInfo_targetVersion :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The percentage of production traffic that the target version of a
--   Lambda function receives.
lambdaFunctionInfo_targetVersionWeight :: Lens' LambdaFunctionInfo (Maybe Double)

-- | The name of a Lambda function.
lambdaFunctionInfo_functionName :: Lens' LambdaFunctionInfo (Maybe Text)

-- | Information about the target AWS Lambda function during an AWS Lambda
--   deployment.
--   
--   <i>See:</i> <a>newLambdaTarget</a> smart constructor.
data LambdaTarget
LambdaTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe LambdaFunctionInfo -> Maybe POSIX -> LambdaTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>lambdaTarget</tt>.
[$sel:targetId:LambdaTarget'] :: LambdaTarget -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:LambdaTarget'] :: LambdaTarget -> Maybe Text

-- | The status an AWS Lambda deployment's target Lambda function.
[$sel:status:LambdaTarget'] :: LambdaTarget -> Maybe TargetStatus

-- | The Amazon Resource Name (ARN) of the target.
[$sel:targetArn:LambdaTarget'] :: LambdaTarget -> Maybe Text

-- | The lifecycle events of the deployment to this target Lambda function.
[$sel:lifecycleEvents:LambdaTarget'] :: LambdaTarget -> Maybe [LifecycleEvent]

-- | A <tt>LambdaFunctionInfo</tt> object that describes a target Lambda
--   function.
[$sel:lambdaFunctionInfo:LambdaTarget'] :: LambdaTarget -> Maybe LambdaFunctionInfo

-- | The date and time when the target Lambda function was updated by a
--   deployment.
[$sel:lastUpdatedAt:LambdaTarget'] :: LambdaTarget -> Maybe POSIX

-- | Create a value of <a>LambdaTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:LambdaTarget'</a>, <a>lambdaTarget_targetId</a> - The
--   unique ID of a deployment target that has a type of
--   <tt>lambdaTarget</tt>.
--   
--   <a>$sel:deploymentId:LambdaTarget'</a>,
--   <a>lambdaTarget_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:LambdaTarget'</a>, <a>lambdaTarget_status</a> - The
--   status an AWS Lambda deployment's target Lambda function.
--   
--   <a>$sel:targetArn:LambdaTarget'</a>, <a>lambdaTarget_targetArn</a> -
--   The Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:LambdaTarget'</a>,
--   <a>lambdaTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target Lambda function.
--   
--   <a>$sel:lambdaFunctionInfo:LambdaTarget'</a>,
--   <a>lambdaTarget_lambdaFunctionInfo</a> - A <tt>LambdaFunctionInfo</tt>
--   object that describes a target Lambda function.
--   
--   <a>$sel:lastUpdatedAt:LambdaTarget'</a>,
--   <a>lambdaTarget_lastUpdatedAt</a> - The date and time when the target
--   Lambda function was updated by a deployment.
newLambdaTarget :: LambdaTarget

-- | The unique ID of a deployment target that has a type of
--   <tt>lambdaTarget</tt>.
lambdaTarget_targetId :: Lens' LambdaTarget (Maybe Text)

-- | The unique ID of a deployment.
lambdaTarget_deploymentId :: Lens' LambdaTarget (Maybe Text)

-- | The status an AWS Lambda deployment's target Lambda function.
lambdaTarget_status :: Lens' LambdaTarget (Maybe TargetStatus)

-- | The Amazon Resource Name (ARN) of the target.
lambdaTarget_targetArn :: Lens' LambdaTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target Lambda function.
lambdaTarget_lifecycleEvents :: Lens' LambdaTarget (Maybe [LifecycleEvent])

-- | A <tt>LambdaFunctionInfo</tt> object that describes a target Lambda
--   function.
lambdaTarget_lambdaFunctionInfo :: Lens' LambdaTarget (Maybe LambdaFunctionInfo)

-- | The date and time when the target Lambda function was updated by a
--   deployment.
lambdaTarget_lastUpdatedAt :: Lens' LambdaTarget (Maybe UTCTime)

-- | Information about the most recent attempted or successful deployment
--   to a deployment group.
--   
--   <i>See:</i> <a>newLastDeploymentInfo</a> smart constructor.
data LastDeploymentInfo
LastDeploymentInfo' :: Maybe Text -> Maybe DeploymentStatus -> Maybe POSIX -> Maybe POSIX -> LastDeploymentInfo

-- | The unique ID of a deployment.
[$sel:deploymentId:LastDeploymentInfo'] :: LastDeploymentInfo -> Maybe Text

-- | The status of the most recent deployment.
[$sel:status:LastDeploymentInfo'] :: LastDeploymentInfo -> Maybe DeploymentStatus

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group was complete.
[$sel:endTime:LastDeploymentInfo'] :: LastDeploymentInfo -> Maybe POSIX

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group started.
[$sel:createTime:LastDeploymentInfo'] :: LastDeploymentInfo -> Maybe POSIX

-- | Create a value of <a>LastDeploymentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_deploymentId</a> - The unique ID of a
--   deployment.
--   
--   <a>$sel:status:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_status</a> - The status of the most recent
--   deployment.
--   
--   <a>$sel:endTime:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_endTime</a> - A timestamp that indicates when
--   the most recent deployment to the deployment group was complete.
--   
--   <a>$sel:createTime:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_createTime</a> - A timestamp that indicates when
--   the most recent deployment to the deployment group started.
newLastDeploymentInfo :: LastDeploymentInfo

-- | The unique ID of a deployment.
lastDeploymentInfo_deploymentId :: Lens' LastDeploymentInfo (Maybe Text)

-- | The status of the most recent deployment.
lastDeploymentInfo_status :: Lens' LastDeploymentInfo (Maybe DeploymentStatus)

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group was complete.
lastDeploymentInfo_endTime :: Lens' LastDeploymentInfo (Maybe UTCTime)

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group started.
lastDeploymentInfo_createTime :: Lens' LastDeploymentInfo (Maybe UTCTime)

-- | Information about a deployment lifecycle event.
--   
--   <i>See:</i> <a>newLifecycleEvent</a> smart constructor.
data LifecycleEvent
LifecycleEvent' :: Maybe Diagnostics -> Maybe LifecycleEventStatus -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> LifecycleEvent

-- | Diagnostic information about the deployment lifecycle event.
[$sel:diagnostics:LifecycleEvent'] :: LifecycleEvent -> Maybe Diagnostics

-- | The deployment lifecycle event status:
--   
--   <ul>
--   <li>Pending: The deployment lifecycle event is pending.</li>
--   <li>InProgress: The deployment lifecycle event is in progress.</li>
--   <li>Succeeded: The deployment lifecycle event ran successfully.</li>
--   <li>Failed: The deployment lifecycle event has failed.</li>
--   <li>Skipped: The deployment lifecycle event has been skipped.</li>
--   <li>Unknown: The deployment lifecycle event is unknown.</li>
--   </ul>
[$sel:status:LifecycleEvent'] :: LifecycleEvent -> Maybe LifecycleEventStatus

-- | A timestamp that indicates when the deployment lifecycle event
--   started.
[$sel:startTime:LifecycleEvent'] :: LifecycleEvent -> Maybe POSIX

-- | A timestamp that indicates when the deployment lifecycle event ended.
[$sel:endTime:LifecycleEvent'] :: LifecycleEvent -> Maybe POSIX

-- | The deployment lifecycle event name, such as <tt>ApplicationStop</tt>,
--   <tt>BeforeInstall</tt>, <tt>AfterInstall</tt>,
--   <tt>ApplicationStart</tt>, or <tt>ValidateService</tt>.
[$sel:lifecycleEventName:LifecycleEvent'] :: LifecycleEvent -> Maybe Text

-- | Create a value of <a>LifecycleEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:diagnostics:LifecycleEvent'</a>,
--   <a>lifecycleEvent_diagnostics</a> - Diagnostic information about the
--   deployment lifecycle event.
--   
--   <a>$sel:status:LifecycleEvent'</a>, <a>lifecycleEvent_status</a> - The
--   deployment lifecycle event status:
--   
--   <ul>
--   <li>Pending: The deployment lifecycle event is pending.</li>
--   <li>InProgress: The deployment lifecycle event is in progress.</li>
--   <li>Succeeded: The deployment lifecycle event ran successfully.</li>
--   <li>Failed: The deployment lifecycle event has failed.</li>
--   <li>Skipped: The deployment lifecycle event has been skipped.</li>
--   <li>Unknown: The deployment lifecycle event is unknown.</li>
--   </ul>
--   
--   <a>$sel:startTime:LifecycleEvent'</a>, <a>lifecycleEvent_startTime</a>
--   - A timestamp that indicates when the deployment lifecycle event
--   started.
--   
--   <a>$sel:endTime:LifecycleEvent'</a>, <a>lifecycleEvent_endTime</a> - A
--   timestamp that indicates when the deployment lifecycle event ended.
--   
--   <a>$sel:lifecycleEventName:LifecycleEvent'</a>,
--   <a>lifecycleEvent_lifecycleEventName</a> - The deployment lifecycle
--   event name, such as <tt>ApplicationStop</tt>, <tt>BeforeInstall</tt>,
--   <tt>AfterInstall</tt>, <tt>ApplicationStart</tt>, or
--   <tt>ValidateService</tt>.
newLifecycleEvent :: LifecycleEvent

-- | Diagnostic information about the deployment lifecycle event.
lifecycleEvent_diagnostics :: Lens' LifecycleEvent (Maybe Diagnostics)

-- | The deployment lifecycle event status:
--   
--   <ul>
--   <li>Pending: The deployment lifecycle event is pending.</li>
--   <li>InProgress: The deployment lifecycle event is in progress.</li>
--   <li>Succeeded: The deployment lifecycle event ran successfully.</li>
--   <li>Failed: The deployment lifecycle event has failed.</li>
--   <li>Skipped: The deployment lifecycle event has been skipped.</li>
--   <li>Unknown: The deployment lifecycle event is unknown.</li>
--   </ul>
lifecycleEvent_status :: Lens' LifecycleEvent (Maybe LifecycleEventStatus)

-- | A timestamp that indicates when the deployment lifecycle event
--   started.
lifecycleEvent_startTime :: Lens' LifecycleEvent (Maybe UTCTime)

-- | A timestamp that indicates when the deployment lifecycle event ended.
lifecycleEvent_endTime :: Lens' LifecycleEvent (Maybe UTCTime)

-- | The deployment lifecycle event name, such as <tt>ApplicationStop</tt>,
--   <tt>BeforeInstall</tt>, <tt>AfterInstall</tt>,
--   <tt>ApplicationStart</tt>, or <tt>ValidateService</tt>.
lifecycleEvent_lifecycleEventName :: Lens' LifecycleEvent (Maybe Text)

-- | Information about the Elastic Load Balancing load balancer or target
--   group used in a deployment.
--   
--   <i>See:</i> <a>newLoadBalancerInfo</a> smart constructor.
data LoadBalancerInfo
LoadBalancerInfo' :: Maybe [TargetGroupPairInfo] -> Maybe [ELBInfo] -> Maybe [TargetGroupInfo] -> LoadBalancerInfo

-- | The target group pair information. This is an array of
--   <tt>TargeGroupPairInfo</tt> objects with a maximum size of one.
[$sel:targetGroupPairInfoList:LoadBalancerInfo'] :: LoadBalancerInfo -> Maybe [TargetGroupPairInfo]

-- | An array that contains information about the load balancer to use for
--   load balancing in a deployment. In Elastic Load Balancing, load
--   balancers are used with Classic Load Balancers.
--   
--   Adding more than one load balancer to the array is not supported.
[$sel:elbInfoList:LoadBalancerInfo'] :: LoadBalancerInfo -> Maybe [ELBInfo]

-- | An array that contains information about the target group to use for
--   load balancing in a deployment. In Elastic Load Balancing, target
--   groups are used with Application Load Balancers.
--   
--   Adding more than one target group to the array is not supported.
[$sel:targetGroupInfoList:LoadBalancerInfo'] :: LoadBalancerInfo -> Maybe [TargetGroupInfo]

-- | Create a value of <a>LoadBalancerInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupPairInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_targetGroupPairInfoList</a> - The target group
--   pair information. This is an array of <tt>TargeGroupPairInfo</tt>
--   objects with a maximum size of one.
--   
--   <a>$sel:elbInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_elbInfoList</a> - An array that contains
--   information about the load balancer to use for load balancing in a
--   deployment. In Elastic Load Balancing, load balancers are used with
--   Classic Load Balancers.
--   
--   Adding more than one load balancer to the array is not supported.
--   
--   <a>$sel:targetGroupInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_targetGroupInfoList</a> - An array that contains
--   information about the target group to use for load balancing in a
--   deployment. In Elastic Load Balancing, target groups are used with
--   Application Load Balancers.
--   
--   Adding more than one target group to the array is not supported.
newLoadBalancerInfo :: LoadBalancerInfo

-- | The target group pair information. This is an array of
--   <tt>TargeGroupPairInfo</tt> objects with a maximum size of one.
loadBalancerInfo_targetGroupPairInfoList :: Lens' LoadBalancerInfo (Maybe [TargetGroupPairInfo])

-- | An array that contains information about the load balancer to use for
--   load balancing in a deployment. In Elastic Load Balancing, load
--   balancers are used with Classic Load Balancers.
--   
--   Adding more than one load balancer to the array is not supported.
loadBalancerInfo_elbInfoList :: Lens' LoadBalancerInfo (Maybe [ELBInfo])

-- | An array that contains information about the target group to use for
--   load balancing in a deployment. In Elastic Load Balancing, target
--   groups are used with Application Load Balancers.
--   
--   Adding more than one target group to the array is not supported.
loadBalancerInfo_targetGroupInfoList :: Lens' LoadBalancerInfo (Maybe [TargetGroupInfo])

-- | Information about minimum healthy instance.
--   
--   <i>See:</i> <a>newMinimumHealthyHosts</a> smart constructor.
data MinimumHealthyHosts
MinimumHealthyHosts' :: Maybe Int -> Maybe MinimumHealthyHostsType -> MinimumHealthyHosts

-- | The minimum healthy instance value.
[$sel:value:MinimumHealthyHosts'] :: MinimumHealthyHosts -> Maybe Int

-- | The minimum healthy instance type:
--   
--   <ul>
--   <li><tt>HOST_COUNT</tt>: The minimum number of healthy instances as an
--   absolute value.</li>
--   <li><tt>FLEET_PERCENT</tt>: The minimum number of healthy instances as
--   a percentage of the total number of instances in the deployment.</li>
--   </ul>
--   
--   In an example of nine instances, if a HOST_COUNT of six is specified,
--   deploy to up to three instances at a time. The deployment is
--   successful if six or more instances are deployed to successfully.
--   Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
--   specified, deploy to up to five instances at a time. The deployment is
--   successful if four or more instances are deployed to successfully.
--   Otherwise, the deployment fails.
--   
--   In a call to the <tt>GetDeploymentConfig</tt>,
--   CodeDeployDefault.OneAtATime returns a minimum healthy instance type
--   of MOST_CONCURRENCY and a value of 1. This means a deployment to only
--   one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
--   only to HOST_COUNT or FLEET_PERCENT.) In addition, with
--   CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that
--   all instances but one are kept in a healthy state during the
--   deployment. Although this allows one instance at a time to be taken
--   offline for a new deployment, it also means that if the deployment to
--   the last instance fails, the overall deployment is still successful.
--   
--   For more information, see <a>AWS CodeDeploy Instance Health</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
[$sel:type':MinimumHealthyHosts'] :: MinimumHealthyHosts -> Maybe MinimumHealthyHostsType

-- | Create a value of <a>MinimumHealthyHosts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:MinimumHealthyHosts'</a>,
--   <a>minimumHealthyHosts_value</a> - The minimum healthy instance value.
--   
--   <a>$sel:type':MinimumHealthyHosts'</a>,
--   <a>minimumHealthyHosts_type</a> - The minimum healthy instance type:
--   
--   <ul>
--   <li><tt>HOST_COUNT</tt>: The minimum number of healthy instances as an
--   absolute value.</li>
--   <li><tt>FLEET_PERCENT</tt>: The minimum number of healthy instances as
--   a percentage of the total number of instances in the deployment.</li>
--   </ul>
--   
--   In an example of nine instances, if a HOST_COUNT of six is specified,
--   deploy to up to three instances at a time. The deployment is
--   successful if six or more instances are deployed to successfully.
--   Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
--   specified, deploy to up to five instances at a time. The deployment is
--   successful if four or more instances are deployed to successfully.
--   Otherwise, the deployment fails.
--   
--   In a call to the <tt>GetDeploymentConfig</tt>,
--   CodeDeployDefault.OneAtATime returns a minimum healthy instance type
--   of MOST_CONCURRENCY and a value of 1. This means a deployment to only
--   one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
--   only to HOST_COUNT or FLEET_PERCENT.) In addition, with
--   CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that
--   all instances but one are kept in a healthy state during the
--   deployment. Although this allows one instance at a time to be taken
--   offline for a new deployment, it also means that if the deployment to
--   the last instance fails, the overall deployment is still successful.
--   
--   For more information, see <a>AWS CodeDeploy Instance Health</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
newMinimumHealthyHosts :: MinimumHealthyHosts

-- | The minimum healthy instance value.
minimumHealthyHosts_value :: Lens' MinimumHealthyHosts (Maybe Int)

-- | The minimum healthy instance type:
--   
--   <ul>
--   <li><tt>HOST_COUNT</tt>: The minimum number of healthy instances as an
--   absolute value.</li>
--   <li><tt>FLEET_PERCENT</tt>: The minimum number of healthy instances as
--   a percentage of the total number of instances in the deployment.</li>
--   </ul>
--   
--   In an example of nine instances, if a HOST_COUNT of six is specified,
--   deploy to up to three instances at a time. The deployment is
--   successful if six or more instances are deployed to successfully.
--   Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
--   specified, deploy to up to five instances at a time. The deployment is
--   successful if four or more instances are deployed to successfully.
--   Otherwise, the deployment fails.
--   
--   In a call to the <tt>GetDeploymentConfig</tt>,
--   CodeDeployDefault.OneAtATime returns a minimum healthy instance type
--   of MOST_CONCURRENCY and a value of 1. This means a deployment to only
--   one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
--   only to HOST_COUNT or FLEET_PERCENT.) In addition, with
--   CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that
--   all instances but one are kept in a healthy state during the
--   deployment. Although this allows one instance at a time to be taken
--   offline for a new deployment, it also means that if the deployment to
--   the last instance fails, the overall deployment is still successful.
--   
--   For more information, see <a>AWS CodeDeploy Instance Health</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
minimumHealthyHosts_type :: Lens' MinimumHealthyHosts (Maybe MinimumHealthyHostsType)

-- | Information about groups of on-premises instance tags.
--   
--   <i>See:</i> <a>newOnPremisesTagSet</a> smart constructor.
data OnPremisesTagSet
OnPremisesTagSet' :: Maybe [[TagFilter]] -> OnPremisesTagSet

-- | A list that contains other lists of on-premises instance tag groups.
--   For an instance to be included in the deployment group, it must be
--   identified by all of the tag groups in the list.
[$sel:onPremisesTagSetList:OnPremisesTagSet'] :: OnPremisesTagSet -> Maybe [[TagFilter]]

-- | Create a value of <a>OnPremisesTagSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSetList:OnPremisesTagSet'</a>,
--   <a>onPremisesTagSet_onPremisesTagSetList</a> - A list that contains
--   other lists of on-premises instance tag groups. For an instance to be
--   included in the deployment group, it must be identified by all of the
--   tag groups in the list.
newOnPremisesTagSet :: OnPremisesTagSet

-- | A list that contains other lists of on-premises instance tag groups.
--   For an instance to be included in the deployment group, it must be
--   identified by all of the tag groups in the list.
onPremisesTagSet_onPremisesTagSetList :: Lens' OnPremisesTagSet (Maybe [[TagFilter]])

-- | A revision for an AWS Lambda deployment that is a YAML-formatted or
--   JSON-formatted string. For AWS Lambda deployments, the revision is the
--   same as the AppSpec file.
--   
--   <i>See:</i> <a>newRawString</a> smart constructor.
data RawString
RawString' :: Maybe Text -> Maybe Text -> RawString

-- | The YAML-formatted or JSON-formatted revision string. It includes
--   information about which Lambda function to update and optional Lambda
--   functions that validate deployment lifecycle events.
[$sel:content:RawString'] :: RawString -> Maybe Text

-- | The SHA256 hash value of the revision content.
[$sel:sha256:RawString'] :: RawString -> Maybe Text

-- | Create a value of <a>RawString</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:RawString'</a>, <a>rawString_content</a> - The
--   YAML-formatted or JSON-formatted revision string. It includes
--   information about which Lambda function to update and optional Lambda
--   functions that validate deployment lifecycle events.
--   
--   <a>$sel:sha256:RawString'</a>, <a>rawString_sha256</a> - The SHA256
--   hash value of the revision content.
newRawString :: RawString

-- | The YAML-formatted or JSON-formatted revision string. It includes
--   information about which Lambda function to update and optional Lambda
--   functions that validate deployment lifecycle events.
rawString_content :: Lens' RawString (Maybe Text)

-- | The SHA256 hash value of the revision content.
rawString_sha256 :: Lens' RawString (Maybe Text)

-- | Information about deployments related to the specified deployment.
--   
--   <i>See:</i> <a>newRelatedDeployments</a> smart constructor.
data RelatedDeployments
RelatedDeployments' :: Maybe Text -> Maybe [Text] -> RelatedDeployments

-- | The deployment ID of the root deployment that triggered this
--   deployment.
[$sel:autoUpdateOutdatedInstancesRootDeploymentId:RelatedDeployments'] :: RelatedDeployments -> Maybe Text

-- | The deployment IDs of 'auto-update outdated instances' deployments
--   triggered by this deployment.
[$sel:autoUpdateOutdatedInstancesDeploymentIds:RelatedDeployments'] :: RelatedDeployments -> Maybe [Text]

-- | Create a value of <a>RelatedDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoUpdateOutdatedInstancesRootDeploymentId:RelatedDeployments'</a>,
--   <a>relatedDeployments_autoUpdateOutdatedInstancesRootDeploymentId</a>
--   - The deployment ID of the root deployment that triggered this
--   deployment.
--   
--   
--   <a>$sel:autoUpdateOutdatedInstancesDeploymentIds:RelatedDeployments'</a>,
--   <a>relatedDeployments_autoUpdateOutdatedInstancesDeploymentIds</a> -
--   The deployment IDs of 'auto-update outdated instances' deployments
--   triggered by this deployment.
newRelatedDeployments :: RelatedDeployments

-- | The deployment ID of the root deployment that triggered this
--   deployment.
relatedDeployments_autoUpdateOutdatedInstancesRootDeploymentId :: Lens' RelatedDeployments (Maybe Text)

-- | The deployment IDs of 'auto-update outdated instances' deployments
--   triggered by this deployment.
relatedDeployments_autoUpdateOutdatedInstancesDeploymentIds :: Lens' RelatedDeployments (Maybe [Text])

-- | Information about an application revision.
--   
--   <i>See:</i> <a>newRevisionInfo</a> smart constructor.
data RevisionInfo
RevisionInfo' :: Maybe GenericRevisionInfo -> Maybe RevisionLocation -> RevisionInfo

-- | Information about an application revision, including usage details and
--   associated deployment groups.
[$sel:genericRevisionInfo:RevisionInfo'] :: RevisionInfo -> Maybe GenericRevisionInfo

-- | Information about the location and type of an application revision.
[$sel:revisionLocation:RevisionInfo'] :: RevisionInfo -> Maybe RevisionLocation

-- | Create a value of <a>RevisionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:genericRevisionInfo:RevisionInfo'</a>,
--   <a>revisionInfo_genericRevisionInfo</a> - Information about an
--   application revision, including usage details and associated
--   deployment groups.
--   
--   <a>$sel:revisionLocation:RevisionInfo'</a>,
--   <a>revisionInfo_revisionLocation</a> - Information about the location
--   and type of an application revision.
newRevisionInfo :: RevisionInfo

-- | Information about an application revision, including usage details and
--   associated deployment groups.
revisionInfo_genericRevisionInfo :: Lens' RevisionInfo (Maybe GenericRevisionInfo)

-- | Information about the location and type of an application revision.
revisionInfo_revisionLocation :: Lens' RevisionInfo (Maybe RevisionLocation)

-- | Information about the location of an application revision.
--   
--   <i>See:</i> <a>newRevisionLocation</a> smart constructor.
data RevisionLocation
RevisionLocation' :: Maybe RevisionLocationType -> Maybe S3Location -> Maybe AppSpecContent -> Maybe GitHubLocation -> Maybe RawString -> RevisionLocation

-- | The type of application revision:
--   
--   <ul>
--   <li>S3: An application revision stored in Amazon S3.</li>
--   <li>GitHub: An application revision stored in GitHub (EC2/On-premises
--   deployments only).</li>
--   <li>String: A YAML-formatted or JSON-formatted string (AWS Lambda
--   deployments only).</li>
--   <li>AppSpecContent: An <tt>AppSpecContent</tt> object that contains
--   the contents of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML stored as a
--   RawString.</li>
--   </ul>
[$sel:revisionType:RevisionLocation'] :: RevisionLocation -> Maybe RevisionLocationType

-- | Information about the location of a revision stored in Amazon S3.
[$sel:s3Location:RevisionLocation'] :: RevisionLocation -> Maybe S3Location

-- | The content of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML and stored as a
--   RawString.
[$sel:appSpecContent:RevisionLocation'] :: RevisionLocation -> Maybe AppSpecContent

-- | Information about the location of application artifacts stored in
--   GitHub.
[$sel:gitHubLocation:RevisionLocation'] :: RevisionLocation -> Maybe GitHubLocation

-- | Information about the location of an AWS Lambda deployment revision
--   stored as a RawString.
[$sel:string:RevisionLocation'] :: RevisionLocation -> Maybe RawString

-- | Create a value of <a>RevisionLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionType:RevisionLocation'</a>,
--   <a>revisionLocation_revisionType</a> - The type of application
--   revision:
--   
--   <ul>
--   <li>S3: An application revision stored in Amazon S3.</li>
--   <li>GitHub: An application revision stored in GitHub (EC2/On-premises
--   deployments only).</li>
--   <li>String: A YAML-formatted or JSON-formatted string (AWS Lambda
--   deployments only).</li>
--   <li>AppSpecContent: An <tt>AppSpecContent</tt> object that contains
--   the contents of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML stored as a
--   RawString.</li>
--   </ul>
--   
--   <a>$sel:s3Location:RevisionLocation'</a>,
--   <a>revisionLocation_s3Location</a> - Information about the location of
--   a revision stored in Amazon S3.
--   
--   <a>$sel:appSpecContent:RevisionLocation'</a>,
--   <a>revisionLocation_appSpecContent</a> - The content of an AppSpec
--   file for an AWS Lambda or Amazon ECS deployment. The content is
--   formatted as JSON or YAML and stored as a RawString.
--   
--   <a>$sel:gitHubLocation:RevisionLocation'</a>,
--   <a>revisionLocation_gitHubLocation</a> - Information about the
--   location of application artifacts stored in GitHub.
--   
--   <a>$sel:string:RevisionLocation'</a>, <a>revisionLocation_string</a> -
--   Information about the location of an AWS Lambda deployment revision
--   stored as a RawString.
newRevisionLocation :: RevisionLocation

-- | The type of application revision:
--   
--   <ul>
--   <li>S3: An application revision stored in Amazon S3.</li>
--   <li>GitHub: An application revision stored in GitHub (EC2/On-premises
--   deployments only).</li>
--   <li>String: A YAML-formatted or JSON-formatted string (AWS Lambda
--   deployments only).</li>
--   <li>AppSpecContent: An <tt>AppSpecContent</tt> object that contains
--   the contents of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML stored as a
--   RawString.</li>
--   </ul>
revisionLocation_revisionType :: Lens' RevisionLocation (Maybe RevisionLocationType)

-- | Information about the location of a revision stored in Amazon S3.
revisionLocation_s3Location :: Lens' RevisionLocation (Maybe S3Location)

-- | The content of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML and stored as a
--   RawString.
revisionLocation_appSpecContent :: Lens' RevisionLocation (Maybe AppSpecContent)

-- | Information about the location of application artifacts stored in
--   GitHub.
revisionLocation_gitHubLocation :: Lens' RevisionLocation (Maybe GitHubLocation)

-- | Information about the location of an AWS Lambda deployment revision
--   stored as a RawString.
revisionLocation_string :: Lens' RevisionLocation (Maybe RawString)

-- | Information about a deployment rollback.
--   
--   <i>See:</i> <a>newRollbackInfo</a> smart constructor.
data RollbackInfo
RollbackInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> RollbackInfo

-- | Information that describes the status of a deployment rollback (for
--   example, whether the deployment can't be rolled back, is in progress,
--   failed, or succeeded).
[$sel:rollbackMessage:RollbackInfo'] :: RollbackInfo -> Maybe Text

-- | The deployment ID of the deployment that was underway and triggered a
--   rollback deployment because it failed or was stopped.
[$sel:rollbackTriggeringDeploymentId:RollbackInfo'] :: RollbackInfo -> Maybe Text

-- | The ID of the deployment rollback.
[$sel:rollbackDeploymentId:RollbackInfo'] :: RollbackInfo -> Maybe Text

-- | Create a value of <a>RollbackInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rollbackMessage:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackMessage</a> - Information that describes the
--   status of a deployment rollback (for example, whether the deployment
--   can't be rolled back, is in progress, failed, or succeeded).
--   
--   <a>$sel:rollbackTriggeringDeploymentId:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackTriggeringDeploymentId</a> - The deployment ID
--   of the deployment that was underway and triggered a rollback
--   deployment because it failed or was stopped.
--   
--   <a>$sel:rollbackDeploymentId:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackDeploymentId</a> - The ID of the deployment
--   rollback.
newRollbackInfo :: RollbackInfo

-- | Information that describes the status of a deployment rollback (for
--   example, whether the deployment can't be rolled back, is in progress,
--   failed, or succeeded).
rollbackInfo_rollbackMessage :: Lens' RollbackInfo (Maybe Text)

-- | The deployment ID of the deployment that was underway and triggered a
--   rollback deployment because it failed or was stopped.
rollbackInfo_rollbackTriggeringDeploymentId :: Lens' RollbackInfo (Maybe Text)

-- | The ID of the deployment rollback.
rollbackInfo_rollbackDeploymentId :: Lens' RollbackInfo (Maybe Text)

-- | Information about the location of application artifacts stored in
--   Amazon S3.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> Maybe BundleType -> Maybe Text -> Maybe Text -> S3Location

-- | The name of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
[$sel:key:S3Location'] :: S3Location -> Maybe Text

-- | The ETag of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object is skipped.
[$sel:eTag:S3Location'] :: S3Location -> Maybe Text

-- | The file type of the application revision. Must be one of the
--   following:
--   
--   <ul>
--   <li><tt>tar</tt>: A tar archive file.</li>
--   <li><tt>tgz</tt>: A compressed tar archive file.</li>
--   <li><tt>zip</tt>: A zip archive file.</li>
--   </ul>
[$sel:bundleType:S3Location'] :: S3Location -> Maybe BundleType

-- | A specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system uses the most recent
--   version by default.
[$sel:version:S3Location'] :: S3Location -> Maybe Text

-- | The name of the Amazon S3 bucket where the application revision is
--   stored.
[$sel:bucket:S3Location'] :: S3Location -> Maybe Text

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The name of the
--   Amazon S3 object that represents the bundled artifacts for the
--   application revision.
--   
--   <a>$sel:eTag:S3Location'</a>, <a>s3Location_eTag</a> - The ETag of the
--   Amazon S3 object that represents the bundled artifacts for the
--   application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object is skipped.
--   
--   <a>$sel:bundleType:S3Location'</a>, <a>s3Location_bundleType</a> - The
--   file type of the application revision. Must be one of the following:
--   
--   <ul>
--   <li><tt>tar</tt>: A tar archive file.</li>
--   <li><tt>tgz</tt>: A compressed tar archive file.</li>
--   <li><tt>zip</tt>: A zip archive file.</li>
--   </ul>
--   
--   <a>$sel:version:S3Location'</a>, <a>s3Location_version</a> - A
--   specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system uses the most recent
--   version by default.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The name of
--   the Amazon S3 bucket where the application revision is stored.
newS3Location :: S3Location

-- | The name of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The ETag of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object is skipped.
s3Location_eTag :: Lens' S3Location (Maybe Text)

-- | The file type of the application revision. Must be one of the
--   following:
--   
--   <ul>
--   <li><tt>tar</tt>: A tar archive file.</li>
--   <li><tt>tgz</tt>: A compressed tar archive file.</li>
--   <li><tt>zip</tt>: A zip archive file.</li>
--   </ul>
s3Location_bundleType :: Lens' S3Location (Maybe BundleType)

-- | A specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system uses the most recent
--   version by default.
s3Location_version :: Lens' S3Location (Maybe Text)

-- | The name of the Amazon S3 bucket where the application revision is
--   stored.
s3Location_bucket :: Lens' S3Location (Maybe Text)

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Tag

-- | The tag's key.
tag_key :: Lens' Tag (Maybe Text)

-- | The tag's value.
tag_value :: Lens' Tag (Maybe Text)

-- | Information about an on-premises instance tag filter.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe Text -> Maybe TagFilterType -> TagFilter

-- | The on-premises instance tag filter key.
[$sel:key:TagFilter'] :: TagFilter -> Maybe Text

-- | The on-premises instance tag filter value.
[$sel:value:TagFilter'] :: TagFilter -> Maybe Text

-- | The on-premises instance tag filter type:
--   
--   <ul>
--   <li>KEY_ONLY: Key only.</li>
--   <li>VALUE_ONLY: Value only.</li>
--   <li>KEY_AND_VALUE: Key and value.</li>
--   </ul>
[$sel:type':TagFilter'] :: TagFilter -> Maybe TagFilterType

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - The on-premises
--   instance tag filter key.
--   
--   <a>$sel:value:TagFilter'</a>, <a>tagFilter_value</a> - The on-premises
--   instance tag filter value.
--   
--   <a>$sel:type':TagFilter'</a>, <a>tagFilter_type</a> - The on-premises
--   instance tag filter type:
--   
--   <ul>
--   <li>KEY_ONLY: Key only.</li>
--   <li>VALUE_ONLY: Value only.</li>
--   <li>KEY_AND_VALUE: Key and value.</li>
--   </ul>
newTagFilter :: TagFilter

-- | The on-premises instance tag filter key.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | The on-premises instance tag filter value.
tagFilter_value :: Lens' TagFilter (Maybe Text)

-- | The on-premises instance tag filter type:
--   
--   <ul>
--   <li>KEY_ONLY: Key only.</li>
--   <li>VALUE_ONLY: Value only.</li>
--   <li>KEY_AND_VALUE: Key and value.</li>
--   </ul>
tagFilter_type :: Lens' TagFilter (Maybe TagFilterType)

-- | Information about a target group in Elastic Load Balancing to use in a
--   deployment. Instances are registered as targets in a target group, and
--   traffic is routed to the target group.
--   
--   <i>See:</i> <a>newTargetGroupInfo</a> smart constructor.
data TargetGroupInfo
TargetGroupInfo' :: Maybe Text -> TargetGroupInfo

-- | For blue/green deployments, the name of the target group that
--   instances in the original environment are deregistered from, and
--   instances in the replacement environment are registered with. For
--   in-place deployments, the name of the target group that instances are
--   deregistered from, so they are not serving traffic during a
--   deployment, and then re-registered with after the deployment is
--   complete.
[$sel:name:TargetGroupInfo'] :: TargetGroupInfo -> Maybe Text

-- | Create a value of <a>TargetGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TargetGroupInfo'</a>, <a>targetGroupInfo_name</a> - For
--   blue/green deployments, the name of the target group that instances in
--   the original environment are deregistered from, and instances in the
--   replacement environment are registered with. For in-place deployments,
--   the name of the target group that instances are deregistered from, so
--   they are not serving traffic during a deployment, and then
--   re-registered with after the deployment is complete.
newTargetGroupInfo :: TargetGroupInfo

-- | For blue/green deployments, the name of the target group that
--   instances in the original environment are deregistered from, and
--   instances in the replacement environment are registered with. For
--   in-place deployments, the name of the target group that instances are
--   deregistered from, so they are not serving traffic during a
--   deployment, and then re-registered with after the deployment is
--   complete.
targetGroupInfo_name :: Lens' TargetGroupInfo (Maybe Text)

-- | Information about two target groups and how traffic is routed during
--   an Amazon ECS deployment. An optional test traffic route can be
--   specified.
--   
--   <i>See:</i> <a>newTargetGroupPairInfo</a> smart constructor.
data TargetGroupPairInfo
TargetGroupPairInfo' :: Maybe [TargetGroupInfo] -> Maybe TrafficRoute -> Maybe TrafficRoute -> TargetGroupPairInfo

-- | One pair of target groups. One is associated with the original task
--   set. The second is associated with the task set that serves traffic
--   after the deployment is complete.
[$sel:targetGroups:TargetGroupPairInfo'] :: TargetGroupPairInfo -> Maybe [TargetGroupInfo]

-- | The path used by a load balancer to route production traffic when an
--   Amazon ECS deployment is complete.
[$sel:prodTrafficRoute:TargetGroupPairInfo'] :: TargetGroupPairInfo -> Maybe TrafficRoute

-- | An optional path used by a load balancer to route test traffic after
--   an Amazon ECS deployment. Validation can occur while test traffic is
--   served during a deployment.
[$sel:testTrafficRoute:TargetGroupPairInfo'] :: TargetGroupPairInfo -> Maybe TrafficRoute

-- | Create a value of <a>TargetGroupPairInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_targetGroups</a> - One pair of target groups.
--   One is associated with the original task set. The second is associated
--   with the task set that serves traffic after the deployment is
--   complete.
--   
--   <a>$sel:prodTrafficRoute:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_prodTrafficRoute</a> - The path used by a load
--   balancer to route production traffic when an Amazon ECS deployment is
--   complete.
--   
--   <a>$sel:testTrafficRoute:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_testTrafficRoute</a> - An optional path used by
--   a load balancer to route test traffic after an Amazon ECS deployment.
--   Validation can occur while test traffic is served during a deployment.
newTargetGroupPairInfo :: TargetGroupPairInfo

-- | One pair of target groups. One is associated with the original task
--   set. The second is associated with the task set that serves traffic
--   after the deployment is complete.
targetGroupPairInfo_targetGroups :: Lens' TargetGroupPairInfo (Maybe [TargetGroupInfo])

-- | The path used by a load balancer to route production traffic when an
--   Amazon ECS deployment is complete.
targetGroupPairInfo_prodTrafficRoute :: Lens' TargetGroupPairInfo (Maybe TrafficRoute)

-- | An optional path used by a load balancer to route test traffic after
--   an Amazon ECS deployment. Validation can occur while test traffic is
--   served during a deployment.
targetGroupPairInfo_testTrafficRoute :: Lens' TargetGroupPairInfo (Maybe TrafficRoute)

-- | Information about the instances to be used in the replacement
--   environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newTargetInstances</a> smart constructor.
data TargetInstances
TargetInstances' :: Maybe [EC2TagFilter] -> Maybe EC2TagSet -> Maybe [Text] -> TargetInstances

-- | The tag filter key, type, and value used to identify Amazon EC2
--   instances in a replacement environment for a blue/green deployment.
--   Cannot be used in the same call as <tt>ec2TagSet</tt>.
[$sel:tagFilters:TargetInstances'] :: TargetInstances -> Maybe [EC2TagFilter]

-- | Information about the groups of EC2 instance tags that an instance
--   must be identified by in order for it to be included in the
--   replacement environment for a blue/green deployment. Cannot be used in
--   the same call as <tt>tagFilters</tt>.
[$sel:ec2TagSet:TargetInstances'] :: TargetInstances -> Maybe EC2TagSet

-- | The names of one or more Auto Scaling groups to identify a replacement
--   environment for a blue/green deployment.
[$sel:autoScalingGroups:TargetInstances'] :: TargetInstances -> Maybe [Text]

-- | Create a value of <a>TargetInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagFilters:TargetInstances'</a>,
--   <a>targetInstances_tagFilters</a> - The tag filter key, type, and
--   value used to identify Amazon EC2 instances in a replacement
--   environment for a blue/green deployment. Cannot be used in the same
--   call as <tt>ec2TagSet</tt>.
--   
--   <a>$sel:ec2TagSet:TargetInstances'</a>,
--   <a>targetInstances_ec2TagSet</a> - Information about the groups of EC2
--   instance tags that an instance must be identified by in order for it
--   to be included in the replacement environment for a blue/green
--   deployment. Cannot be used in the same call as <tt>tagFilters</tt>.
--   
--   <a>$sel:autoScalingGroups:TargetInstances'</a>,
--   <a>targetInstances_autoScalingGroups</a> - The names of one or more
--   Auto Scaling groups to identify a replacement environment for a
--   blue/green deployment.
newTargetInstances :: TargetInstances

-- | The tag filter key, type, and value used to identify Amazon EC2
--   instances in a replacement environment for a blue/green deployment.
--   Cannot be used in the same call as <tt>ec2TagSet</tt>.
targetInstances_tagFilters :: Lens' TargetInstances (Maybe [EC2TagFilter])

-- | Information about the groups of EC2 instance tags that an instance
--   must be identified by in order for it to be included in the
--   replacement environment for a blue/green deployment. Cannot be used in
--   the same call as <tt>tagFilters</tt>.
targetInstances_ec2TagSet :: Lens' TargetInstances (Maybe EC2TagSet)

-- | The names of one or more Auto Scaling groups to identify a replacement
--   environment for a blue/green deployment.
targetInstances_autoScalingGroups :: Lens' TargetInstances (Maybe [Text])

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in two increments. The original
--   and target Lambda function versions or ECS task sets are specified in
--   the deployment's AppSpec file.
--   
--   <i>See:</i> <a>newTimeBasedCanary</a> smart constructor.
data TimeBasedCanary
TimeBasedCanary' :: Maybe Int -> Maybe Int -> TimeBasedCanary

-- | The number of minutes between the first and second traffic shifts of a
--   <tt>TimeBasedCanary</tt> deployment.
[$sel:canaryInterval:TimeBasedCanary'] :: TimeBasedCanary -> Maybe Int

-- | The percentage of traffic to shift in the first increment of a
--   <tt>TimeBasedCanary</tt> deployment.
[$sel:canaryPercentage:TimeBasedCanary'] :: TimeBasedCanary -> Maybe Int

-- | Create a value of <a>TimeBasedCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canaryInterval:TimeBasedCanary'</a>,
--   <a>timeBasedCanary_canaryInterval</a> - The number of minutes between
--   the first and second traffic shifts of a <tt>TimeBasedCanary</tt>
--   deployment.
--   
--   <a>$sel:canaryPercentage:TimeBasedCanary'</a>,
--   <a>timeBasedCanary_canaryPercentage</a> - The percentage of traffic to
--   shift in the first increment of a <tt>TimeBasedCanary</tt> deployment.
newTimeBasedCanary :: TimeBasedCanary

-- | The number of minutes between the first and second traffic shifts of a
--   <tt>TimeBasedCanary</tt> deployment.
timeBasedCanary_canaryInterval :: Lens' TimeBasedCanary (Maybe Int)

-- | The percentage of traffic to shift in the first increment of a
--   <tt>TimeBasedCanary</tt> deployment.
timeBasedCanary_canaryPercentage :: Lens' TimeBasedCanary (Maybe Int)

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in equal increments, with an equal
--   number of minutes between each increment. The original and target
--   Lambda function versions or ECS task sets are specified in the
--   deployment's AppSpec file.
--   
--   <i>See:</i> <a>newTimeBasedLinear</a> smart constructor.
data TimeBasedLinear
TimeBasedLinear' :: Maybe Int -> Maybe Int -> TimeBasedLinear

-- | The number of minutes between each incremental traffic shift of a
--   <tt>TimeBasedLinear</tt> deployment.
[$sel:linearInterval:TimeBasedLinear'] :: TimeBasedLinear -> Maybe Int

-- | The percentage of traffic that is shifted at the start of each
--   increment of a <tt>TimeBasedLinear</tt> deployment.
[$sel:linearPercentage:TimeBasedLinear'] :: TimeBasedLinear -> Maybe Int

-- | Create a value of <a>TimeBasedLinear</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linearInterval:TimeBasedLinear'</a>,
--   <a>timeBasedLinear_linearInterval</a> - The number of minutes between
--   each incremental traffic shift of a <tt>TimeBasedLinear</tt>
--   deployment.
--   
--   <a>$sel:linearPercentage:TimeBasedLinear'</a>,
--   <a>timeBasedLinear_linearPercentage</a> - The percentage of traffic
--   that is shifted at the start of each increment of a
--   <tt>TimeBasedLinear</tt> deployment.
newTimeBasedLinear :: TimeBasedLinear

-- | The number of minutes between each incremental traffic shift of a
--   <tt>TimeBasedLinear</tt> deployment.
timeBasedLinear_linearInterval :: Lens' TimeBasedLinear (Maybe Int)

-- | The percentage of traffic that is shifted at the start of each
--   increment of a <tt>TimeBasedLinear</tt> deployment.
timeBasedLinear_linearPercentage :: Lens' TimeBasedLinear (Maybe Int)

-- | Information about a time range.
--   
--   <i>See:</i> <a>newTimeRange</a> smart constructor.
data TimeRange
TimeRange' :: Maybe POSIX -> Maybe POSIX -> TimeRange

-- | The end time of the time range.
--   
--   Specify null to leave the end time open-ended.
[$sel:end:TimeRange'] :: TimeRange -> Maybe POSIX

-- | The start time of the time range.
--   
--   Specify null to leave the start time open-ended.
[$sel:start:TimeRange'] :: TimeRange -> Maybe POSIX

-- | Create a value of <a>TimeRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:TimeRange'</a>, <a>timeRange_end</a> - The end time of the
--   time range.
--   
--   Specify null to leave the end time open-ended.
--   
--   <a>$sel:start:TimeRange'</a>, <a>timeRange_start</a> - The start time
--   of the time range.
--   
--   Specify null to leave the start time open-ended.
newTimeRange :: TimeRange

-- | The end time of the time range.
--   
--   Specify null to leave the end time open-ended.
timeRange_end :: Lens' TimeRange (Maybe UTCTime)

-- | The start time of the time range.
--   
--   Specify null to leave the start time open-ended.
timeRange_start :: Lens' TimeRange (Maybe UTCTime)

-- | Information about a listener. The listener contains the path used to
--   route traffic that is received from the load balancer to a target
--   group.
--   
--   <i>See:</i> <a>newTrafficRoute</a> smart constructor.
data TrafficRoute
TrafficRoute' :: Maybe [Text] -> TrafficRoute

-- | The Amazon Resource Name (ARN) of one listener. The listener
--   identifies the route between a target group and a load balancer. This
--   is an array of strings with a maximum size of one.
[$sel:listenerArns:TrafficRoute'] :: TrafficRoute -> Maybe [Text]

-- | Create a value of <a>TrafficRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArns:TrafficRoute'</a>,
--   <a>trafficRoute_listenerArns</a> - The Amazon Resource Name (ARN) of
--   one listener. The listener identifies the route between a target group
--   and a load balancer. This is an array of strings with a maximum size
--   of one.
newTrafficRoute :: TrafficRoute

-- | The Amazon Resource Name (ARN) of one listener. The listener
--   identifies the route between a target group and a load balancer. This
--   is an array of strings with a maximum size of one.
trafficRoute_listenerArns :: Lens' TrafficRoute (Maybe [Text])

-- | The configuration that specifies how traffic is shifted from one
--   version of a Lambda function to another version during an AWS Lambda
--   deployment, or from one Amazon ECS task set to another during an
--   Amazon ECS deployment.
--   
--   <i>See:</i> <a>newTrafficRoutingConfig</a> smart constructor.
data TrafficRoutingConfig
TrafficRoutingConfig' :: Maybe TimeBasedLinear -> Maybe TrafficRoutingType -> Maybe TimeBasedCanary -> TrafficRoutingConfig

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in equal increments, with an equal
--   number of minutes between each increment. The original and target
--   Lambda function versions or ECS task sets are specified in the
--   deployment's AppSpec file.
[$sel:timeBasedLinear:TrafficRoutingConfig'] :: TrafficRoutingConfig -> Maybe TimeBasedLinear

-- | The type of traffic shifting (<tt>TimeBasedCanary</tt> or
--   <tt>TimeBasedLinear</tt>) used by a deployment configuration.
[$sel:type':TrafficRoutingConfig'] :: TrafficRoutingConfig -> Maybe TrafficRoutingType

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in two increments. The original
--   and target Lambda function versions or ECS task sets are specified in
--   the deployment's AppSpec file.
[$sel:timeBasedCanary:TrafficRoutingConfig'] :: TrafficRoutingConfig -> Maybe TimeBasedCanary

-- | Create a value of <a>TrafficRoutingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeBasedLinear:TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_timeBasedLinear</a> - A configuration that
--   shifts traffic from one version of a Lambda function or ECS task set
--   to another in equal increments, with an equal number of minutes
--   between each increment. The original and target Lambda function
--   versions or ECS task sets are specified in the deployment's AppSpec
--   file.
--   
--   <a>$sel:type':TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_type</a> - The type of traffic shifting
--   (<tt>TimeBasedCanary</tt> or <tt>TimeBasedLinear</tt>) used by a
--   deployment configuration.
--   
--   <a>$sel:timeBasedCanary:TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_timeBasedCanary</a> - A configuration that
--   shifts traffic from one version of a Lambda function or ECS task set
--   to another in two increments. The original and target Lambda function
--   versions or ECS task sets are specified in the deployment's AppSpec
--   file.
newTrafficRoutingConfig :: TrafficRoutingConfig

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in equal increments, with an equal
--   number of minutes between each increment. The original and target
--   Lambda function versions or ECS task sets are specified in the
--   deployment's AppSpec file.
trafficRoutingConfig_timeBasedLinear :: Lens' TrafficRoutingConfig (Maybe TimeBasedLinear)

-- | The type of traffic shifting (<tt>TimeBasedCanary</tt> or
--   <tt>TimeBasedLinear</tt>) used by a deployment configuration.
trafficRoutingConfig_type :: Lens' TrafficRoutingConfig (Maybe TrafficRoutingType)

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in two increments. The original
--   and target Lambda function versions or ECS task sets are specified in
--   the deployment's AppSpec file.
trafficRoutingConfig_timeBasedCanary :: Lens' TrafficRoutingConfig (Maybe TimeBasedCanary)

-- | Information about notification triggers for the deployment group.
--   
--   <i>See:</i> <a>newTriggerConfig</a> smart constructor.
data TriggerConfig
TriggerConfig' :: Maybe Text -> Maybe [TriggerEventType] -> Maybe Text -> TriggerConfig

-- | The name of the notification trigger.
[$sel:triggerName:TriggerConfig'] :: TriggerConfig -> Maybe Text

-- | The event type or types for which notifications are triggered.
[$sel:triggerEvents:TriggerConfig'] :: TriggerConfig -> Maybe [TriggerEventType]

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service topic through which notifications about deployment or instance
--   events are sent.
[$sel:triggerTargetArn:TriggerConfig'] :: TriggerConfig -> Maybe Text

-- | Create a value of <a>TriggerConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerName:TriggerConfig'</a>,
--   <a>triggerConfig_triggerName</a> - The name of the notification
--   trigger.
--   
--   <a>$sel:triggerEvents:TriggerConfig'</a>,
--   <a>triggerConfig_triggerEvents</a> - The event type or types for which
--   notifications are triggered.
--   
--   <a>$sel:triggerTargetArn:TriggerConfig'</a>,
--   <a>triggerConfig_triggerTargetArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon Simple Notification Service topic through which
--   notifications about deployment or instance events are sent.
newTriggerConfig :: TriggerConfig

-- | The name of the notification trigger.
triggerConfig_triggerName :: Lens' TriggerConfig (Maybe Text)

-- | The event type or types for which notifications are triggered.
triggerConfig_triggerEvents :: Lens' TriggerConfig (Maybe [TriggerEventType])

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service topic through which notifications about deployment or instance
--   events are sent.
triggerConfig_triggerTargetArn :: Lens' TriggerConfig (Maybe Text)


-- | Associates the list of tags in the input <tt>Tags</tt> parameter with
--   the resource identified by the <tt>ResourceArn</tt> input parameter.
module Network.AWS.CodeDeploy.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The ARN of a resource, such as a CodeDeploy application or deployment
--   group.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | A list of tags that <tt>TagResource</tt> associates with a resource.
--   The resource is identified by the <tt>ResourceArn</tt> input
--   parameter.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of a resource, such as a CodeDeploy application or deployment
--   group.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of
--   tags that <tt>TagResource</tt> associates with a resource. The
--   resource is identified by the <tt>ResourceArn</tt> input parameter.
newTagResource :: Text -> TagResource

-- | The ARN of a resource, such as a CodeDeploy application or deployment
--   group.
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tags that <tt>TagResource</tt> associates with a resource.
--   The resource is identified by the <tt>ResourceArn</tt> input
--   parameter.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.TagResource.TagResource
instance GHC.Show.Show Network.AWS.CodeDeploy.TagResource.TagResource
instance GHC.Read.Read Network.AWS.CodeDeploy.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.CodeDeploy.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.CodeDeploy.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.TagResource.TagResource


-- | Attempts to stop an ongoing deployment.
module Network.AWS.CodeDeploy.StopDeployment

-- | Represents the input of a <tt>StopDeployment</tt> operation.
--   
--   <i>See:</i> <a>newStopDeployment</a> smart constructor.
data StopDeployment
StopDeployment' :: Maybe Bool -> Text -> StopDeployment

-- | Indicates, when a deployment is stopped, whether instances that have
--   been updated should be rolled back to the previous version of the
--   application revision.
[$sel:autoRollbackEnabled:StopDeployment'] :: StopDeployment -> Maybe Bool

-- | The unique ID of a deployment.
[$sel:deploymentId:StopDeployment'] :: StopDeployment -> Text

-- | Create a value of <a>StopDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoRollbackEnabled:StopDeployment'</a>,
--   <a>stopDeployment_autoRollbackEnabled</a> - Indicates, when a
--   deployment is stopped, whether instances that have been updated should
--   be rolled back to the previous version of the application revision.
--   
--   <a>$sel:deploymentId:StopDeployment'</a>,
--   <a>stopDeployment_deploymentId</a> - The unique ID of a deployment.
newStopDeployment :: Text -> StopDeployment

-- | Indicates, when a deployment is stopped, whether instances that have
--   been updated should be rolled back to the previous version of the
--   application revision.
stopDeployment_autoRollbackEnabled :: Lens' StopDeployment (Maybe Bool)

-- | The unique ID of a deployment.
stopDeployment_deploymentId :: Lens' StopDeployment Text

-- | Represents the output of a <tt>StopDeployment</tt> operation.
--   
--   <i>See:</i> <a>newStopDeploymentResponse</a> smart constructor.
data StopDeploymentResponse
StopDeploymentResponse' :: Maybe Text -> Maybe StopStatus -> Int -> StopDeploymentResponse

-- | An accompanying status message.
[$sel:statusMessage:StopDeploymentResponse'] :: StopDeploymentResponse -> Maybe Text

-- | The status of the stop deployment operation:
--   
--   <ul>
--   <li>Pending: The stop operation is pending.</li>
--   <li>Succeeded: The stop operation was successful.</li>
--   </ul>
[$sel:status:StopDeploymentResponse'] :: StopDeploymentResponse -> Maybe StopStatus

-- | The response's http status code.
[$sel:httpStatus:StopDeploymentResponse'] :: StopDeploymentResponse -> Int

-- | Create a value of <a>StopDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:StopDeploymentResponse'</a>,
--   <a>stopDeploymentResponse_statusMessage</a> - An accompanying status
--   message.
--   
--   <a>$sel:status:StopDeploymentResponse'</a>,
--   <a>stopDeploymentResponse_status</a> - The status of the stop
--   deployment operation:
--   
--   <ul>
--   <li>Pending: The stop operation is pending.</li>
--   <li>Succeeded: The stop operation was successful.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:StopDeploymentResponse'</a>,
--   <a>stopDeploymentResponse_httpStatus</a> - The response's http status
--   code.
newStopDeploymentResponse :: Int -> StopDeploymentResponse

-- | An accompanying status message.
stopDeploymentResponse_statusMessage :: Lens' StopDeploymentResponse (Maybe Text)

-- | The status of the stop deployment operation:
--   
--   <ul>
--   <li>Pending: The stop operation is pending.</li>
--   <li>Succeeded: The stop operation was successful.</li>
--   </ul>
stopDeploymentResponse_status :: Lens' StopDeploymentResponse (Maybe StopStatus)

-- | The response's http status code.
stopDeploymentResponse_httpStatus :: Lens' StopDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance GHC.Show.Show Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance GHC.Read.Read Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance GHC.Classes.Eq Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance GHC.Generics.Generic Network.AWS.CodeDeploy.StopDeployment.StopDeploymentResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.StopDeployment.StopDeploymentResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.StopDeployment.StopDeploymentResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.StopDeployment.StopDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.StopDeployment.StopDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.StopDeployment.StopDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.StopDeployment.StopDeployment


-- | Removes one or more tags from one or more on-premises instances.
module Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances

-- | Represents the input of a <tt>RemoveTagsFromOnPremisesInstances</tt>
--   operation.
--   
--   <i>See:</i> <a>newRemoveTagsFromOnPremisesInstances</a> smart
--   constructor.
data RemoveTagsFromOnPremisesInstances
RemoveTagsFromOnPremisesInstances' :: [Tag] -> [Text] -> RemoveTagsFromOnPremisesInstances

-- | The tag key-value pairs to remove from the on-premises instances.
[$sel:tags:RemoveTagsFromOnPremisesInstances'] :: RemoveTagsFromOnPremisesInstances -> [Tag]

-- | The names of the on-premises instances from which to remove tags.
[$sel:instanceNames:RemoveTagsFromOnPremisesInstances'] :: RemoveTagsFromOnPremisesInstances -> [Text]

-- | Create a value of <a>RemoveTagsFromOnPremisesInstances</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:RemoveTagsFromOnPremisesInstances'</a>,
--   <a>removeTagsFromOnPremisesInstances_tags</a> - The tag key-value
--   pairs to remove from the on-premises instances.
--   
--   <a>$sel:instanceNames:RemoveTagsFromOnPremisesInstances'</a>,
--   <a>removeTagsFromOnPremisesInstances_instanceNames</a> - The names of
--   the on-premises instances from which to remove tags.
newRemoveTagsFromOnPremisesInstances :: RemoveTagsFromOnPremisesInstances

-- | The tag key-value pairs to remove from the on-premises instances.
removeTagsFromOnPremisesInstances_tags :: Lens' RemoveTagsFromOnPremisesInstances [Tag]

-- | The names of the on-premises instances from which to remove tags.
removeTagsFromOnPremisesInstances_instanceNames :: Lens' RemoveTagsFromOnPremisesInstances [Text]

-- | <i>See:</i> <a>newRemoveTagsFromOnPremisesInstancesResponse</a> smart
--   constructor.
data RemoveTagsFromOnPremisesInstancesResponse
RemoveTagsFromOnPremisesInstancesResponse' :: RemoveTagsFromOnPremisesInstancesResponse

-- | Create a value of <a>RemoveTagsFromOnPremisesInstancesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemoveTagsFromOnPremisesInstancesResponse :: RemoveTagsFromOnPremisesInstancesResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance GHC.Show.Show Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance GHC.Read.Read Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance GHC.Classes.Eq Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance GHC.Generics.Generic Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstancesResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstancesResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstancesResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstancesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.RemoveTagsFromOnPremisesInstances.RemoveTagsFromOnPremisesInstances


-- | Registers an on-premises instance.
--   
--   Only one IAM ARN (an IAM session ARN or IAM user ARN) is supported in
--   the request. You cannot use both.
module Network.AWS.CodeDeploy.RegisterOnPremisesInstance

-- | Represents the input of the register on-premises instance operation.
--   
--   <i>See:</i> <a>newRegisterOnPremisesInstance</a> smart constructor.
data RegisterOnPremisesInstance
RegisterOnPremisesInstance' :: Maybe Text -> Maybe Text -> Text -> RegisterOnPremisesInstance

-- | The ARN of the IAM user to associate with the on-premises instance.
[$sel:iamUserArn:RegisterOnPremisesInstance'] :: RegisterOnPremisesInstance -> Maybe Text

-- | The ARN of the IAM session to associate with the on-premises instance.
[$sel:iamSessionArn:RegisterOnPremisesInstance'] :: RegisterOnPremisesInstance -> Maybe Text

-- | The name of the on-premises instance to register.
[$sel:instanceName:RegisterOnPremisesInstance'] :: RegisterOnPremisesInstance -> Text

-- | Create a value of <a>RegisterOnPremisesInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iamUserArn:RegisterOnPremisesInstance'</a>,
--   <a>registerOnPremisesInstance_iamUserArn</a> - The ARN of the IAM user
--   to associate with the on-premises instance.
--   
--   <a>$sel:iamSessionArn:RegisterOnPremisesInstance'</a>,
--   <a>registerOnPremisesInstance_iamSessionArn</a> - The ARN of the IAM
--   session to associate with the on-premises instance.
--   
--   <a>$sel:instanceName:RegisterOnPremisesInstance'</a>,
--   <a>registerOnPremisesInstance_instanceName</a> - The name of the
--   on-premises instance to register.
newRegisterOnPremisesInstance :: Text -> RegisterOnPremisesInstance

-- | The ARN of the IAM user to associate with the on-premises instance.
registerOnPremisesInstance_iamUserArn :: Lens' RegisterOnPremisesInstance (Maybe Text)

-- | The ARN of the IAM session to associate with the on-premises instance.
registerOnPremisesInstance_iamSessionArn :: Lens' RegisterOnPremisesInstance (Maybe Text)

-- | The name of the on-premises instance to register.
registerOnPremisesInstance_instanceName :: Lens' RegisterOnPremisesInstance Text

-- | <i>See:</i> <a>newRegisterOnPremisesInstanceResponse</a> smart
--   constructor.
data RegisterOnPremisesInstanceResponse
RegisterOnPremisesInstanceResponse' :: RegisterOnPremisesInstanceResponse

-- | Create a value of <a>RegisterOnPremisesInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRegisterOnPremisesInstanceResponse :: RegisterOnPremisesInstanceResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance GHC.Show.Show Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance GHC.Read.Read Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance GHC.Classes.Eq Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance GHC.Generics.Generic Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstanceResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstanceResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstanceResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.RegisterOnPremisesInstance.RegisterOnPremisesInstance


-- | Registers with AWS CodeDeploy a revision for the specified
--   application.
module Network.AWS.CodeDeploy.RegisterApplicationRevision

-- | Represents the input of a RegisterApplicationRevision operation.
--   
--   <i>See:</i> <a>newRegisterApplicationRevision</a> smart constructor.
data RegisterApplicationRevision
RegisterApplicationRevision' :: Maybe Text -> Text -> RevisionLocation -> RegisterApplicationRevision

-- | A comment about the revision.
[$sel:description:RegisterApplicationRevision'] :: RegisterApplicationRevision -> Maybe Text

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:RegisterApplicationRevision'] :: RegisterApplicationRevision -> Text

-- | Information about the application revision to register, including type
--   and location.
[$sel:revision:RegisterApplicationRevision'] :: RegisterApplicationRevision -> RevisionLocation

-- | Create a value of <a>RegisterApplicationRevision</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:RegisterApplicationRevision'</a>,
--   <a>registerApplicationRevision_description</a> - A comment about the
--   revision.
--   
--   <a>$sel:applicationName:RegisterApplicationRevision'</a>,
--   <a>registerApplicationRevision_applicationName</a> - The name of an
--   AWS CodeDeploy application associated with the IAM user or AWS
--   account.
--   
--   <a>$sel:revision:RegisterApplicationRevision'</a>,
--   <a>registerApplicationRevision_revision</a> - Information about the
--   application revision to register, including type and location.
newRegisterApplicationRevision :: Text -> RevisionLocation -> RegisterApplicationRevision

-- | A comment about the revision.
registerApplicationRevision_description :: Lens' RegisterApplicationRevision (Maybe Text)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
registerApplicationRevision_applicationName :: Lens' RegisterApplicationRevision Text

-- | Information about the application revision to register, including type
--   and location.
registerApplicationRevision_revision :: Lens' RegisterApplicationRevision RevisionLocation

-- | <i>See:</i> <a>newRegisterApplicationRevisionResponse</a> smart
--   constructor.
data RegisterApplicationRevisionResponse
RegisterApplicationRevisionResponse' :: RegisterApplicationRevisionResponse

-- | Create a value of <a>RegisterApplicationRevisionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRegisterApplicationRevisionResponse :: RegisterApplicationRevisionResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance GHC.Show.Show Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance GHC.Read.Read Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance GHC.Classes.Eq Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance GHC.Generics.Generic Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevisionResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevisionResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevisionResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevisionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevisionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.RegisterApplicationRevision.RegisterApplicationRevision


-- | Sets the result of a Lambda validation function. The function
--   validates lifecycle hooks during a deployment that uses the AWS Lambda
--   or Amazon ECS compute platform. For AWS Lambda deployments, the
--   available lifecycle hooks are <tt>BeforeAllowTraffic</tt> and
--   <tt>AfterAllowTraffic</tt>. For Amazon ECS deployments, the available
--   lifecycle hooks are <tt>BeforeInstall</tt>, <tt>AfterInstall</tt>,
--   <tt>AfterAllowTestTraffic</tt>, <tt>BeforeAllowTraffic</tt>, and
--   <tt>AfterAllowTraffic</tt>. Lambda validation functions return
--   <tt>Succeeded</tt> or <tt>Failed</tt>. For more information, see
--   <a>AppSpec 'hooks' Section for an AWS Lambda Deployment</a> and
--   <a>AppSpec 'hooks' Section for an Amazon ECS Deployment</a>.
module Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus

-- | <i>See:</i> <a>newPutLifecycleEventHookExecutionStatus</a> smart
--   constructor.
data PutLifecycleEventHookExecutionStatus
PutLifecycleEventHookExecutionStatus' :: Maybe Text -> Maybe LifecycleEventStatus -> Maybe Text -> PutLifecycleEventHookExecutionStatus

-- | The unique ID of a deployment. Pass this ID to a Lambda function that
--   validates a deployment lifecycle event.
[$sel:deploymentId:PutLifecycleEventHookExecutionStatus'] :: PutLifecycleEventHookExecutionStatus -> Maybe Text

-- | The result of a Lambda function that validates a deployment lifecycle
--   event. <tt>Succeeded</tt> and <tt>Failed</tt> are the only valid
--   values for <tt>status</tt>.
[$sel:status:PutLifecycleEventHookExecutionStatus'] :: PutLifecycleEventHookExecutionStatus -> Maybe LifecycleEventStatus

-- | The execution ID of a deployment's lifecycle hook. A deployment
--   lifecycle hook is specified in the <tt>hooks</tt> section of the
--   AppSpec file.
[$sel:lifecycleEventHookExecutionId:PutLifecycleEventHookExecutionStatus'] :: PutLifecycleEventHookExecutionStatus -> Maybe Text

-- | Create a value of <a>PutLifecycleEventHookExecutionStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:PutLifecycleEventHookExecutionStatus'</a>,
--   <a>putLifecycleEventHookExecutionStatus_deploymentId</a> - The unique
--   ID of a deployment. Pass this ID to a Lambda function that validates a
--   deployment lifecycle event.
--   
--   <a>$sel:status:PutLifecycleEventHookExecutionStatus'</a>,
--   <a>putLifecycleEventHookExecutionStatus_status</a> - The result of a
--   Lambda function that validates a deployment lifecycle event.
--   <tt>Succeeded</tt> and <tt>Failed</tt> are the only valid values for
--   <tt>status</tt>.
--   
--   
--   <a>$sel:lifecycleEventHookExecutionId:PutLifecycleEventHookExecutionStatus'</a>,
--   <a>putLifecycleEventHookExecutionStatus_lifecycleEventHookExecutionId</a>
--   - The execution ID of a deployment's lifecycle hook. A deployment
--   lifecycle hook is specified in the <tt>hooks</tt> section of the
--   AppSpec file.
newPutLifecycleEventHookExecutionStatus :: PutLifecycleEventHookExecutionStatus

-- | The unique ID of a deployment. Pass this ID to a Lambda function that
--   validates a deployment lifecycle event.
putLifecycleEventHookExecutionStatus_deploymentId :: Lens' PutLifecycleEventHookExecutionStatus (Maybe Text)

-- | The result of a Lambda function that validates a deployment lifecycle
--   event. <tt>Succeeded</tt> and <tt>Failed</tt> are the only valid
--   values for <tt>status</tt>.
putLifecycleEventHookExecutionStatus_status :: Lens' PutLifecycleEventHookExecutionStatus (Maybe LifecycleEventStatus)

-- | The execution ID of a deployment's lifecycle hook. A deployment
--   lifecycle hook is specified in the <tt>hooks</tt> section of the
--   AppSpec file.
putLifecycleEventHookExecutionStatus_lifecycleEventHookExecutionId :: Lens' PutLifecycleEventHookExecutionStatus (Maybe Text)

-- | <i>See:</i> <a>newPutLifecycleEventHookExecutionStatusResponse</a>
--   smart constructor.
data PutLifecycleEventHookExecutionStatusResponse
PutLifecycleEventHookExecutionStatusResponse' :: Maybe Text -> Int -> PutLifecycleEventHookExecutionStatusResponse

-- | The execution ID of the lifecycle event hook. A hook is specified in
--   the <tt>hooks</tt> section of the deployment's AppSpec file.
[$sel:lifecycleEventHookExecutionId:PutLifecycleEventHookExecutionStatusResponse'] :: PutLifecycleEventHookExecutionStatusResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutLifecycleEventHookExecutionStatusResponse'] :: PutLifecycleEventHookExecutionStatusResponse -> Int

-- | Create a value of <a>PutLifecycleEventHookExecutionStatusResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:lifecycleEventHookExecutionId:PutLifecycleEventHookExecutionStatus'</a>,
--   <a>putLifecycleEventHookExecutionStatusResponse_lifecycleEventHookExecutionId</a>
--   - The execution ID of the lifecycle event hook. A hook is specified in
--   the <tt>hooks</tt> section of the deployment's AppSpec file.
--   
--   <a>$sel:httpStatus:PutLifecycleEventHookExecutionStatusResponse'</a>,
--   <a>putLifecycleEventHookExecutionStatusResponse_httpStatus</a> - The
--   response's http status code.
newPutLifecycleEventHookExecutionStatusResponse :: Int -> PutLifecycleEventHookExecutionStatusResponse

-- | The execution ID of the lifecycle event hook. A hook is specified in
--   the <tt>hooks</tt> section of the deployment's AppSpec file.
putLifecycleEventHookExecutionStatusResponse_lifecycleEventHookExecutionId :: Lens' PutLifecycleEventHookExecutionStatusResponse (Maybe Text)

-- | The response's http status code.
putLifecycleEventHookExecutionStatusResponse_httpStatus :: Lens' PutLifecycleEventHookExecutionStatusResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance GHC.Show.Show Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance GHC.Read.Read Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance GHC.Classes.Eq Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance GHC.Generics.Generic Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatusResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatusResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatusResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.PutLifecycleEventHookExecutionStatus.PutLifecycleEventHookExecutionStatus


-- | Returns a list of tags for the resource identified by a specified
--   Amazon Resource Name (ARN). Tags are used to organize and categorize
--   your CodeDeploy resources.
module Network.AWS.CodeDeploy.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Text -> ListTagsForResource

-- | An identifier returned from the previous <tt>ListTagsForResource</tt>
--   call. It can be used to return the next set of applications in the
--   list.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The ARN of a CodeDeploy resource. <tt>ListTagsForResource</tt> returns
--   all the tags associated with the resource that is identified by the
--   <tt>ResourceArn</tt>.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - An identifier returned from the
--   previous <tt>ListTagsForResource</tt> call. It can be used to return
--   the next set of applications in the list.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of a CodeDeploy
--   resource. <tt>ListTagsForResource</tt> returns all the tags associated
--   with the resource that is identified by the <tt>ResourceArn</tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | An identifier returned from the previous <tt>ListTagsForResource</tt>
--   call. It can be used to return the next set of applications in the
--   list.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The ARN of a CodeDeploy resource. <tt>ListTagsForResource</tt> returns
--   all the tags associated with the resource that is identified by the
--   <tt>ResourceArn</tt>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list application revisions
--   call to return the next set of application revisions in the list.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | A list of tags returned by <tt>ListTagsForResource</tt>. The tags are
--   associated with the resource identified by the input
--   <tt>ResourceArn</tt> parameter.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list application revisions call to return the
--   next set of application revisions in the list.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tags returned by
--   <tt>ListTagsForResource</tt>. The tags are associated with the
--   resource identified by the input <tt>ResourceArn</tt> parameter.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list application revisions
--   call to return the next set of application revisions in the list.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A list of tags returned by <tt>ListTagsForResource</tt>. The tags are
--   associated with the resource identified by the input
--   <tt>ResourceArn</tt> parameter.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListTagsForResource.ListTagsForResource


-- | Gets a list of names for one or more on-premises instances.
--   
--   Unless otherwise specified, both registered and deregistered
--   on-premises instance names are listed. To list only registered or
--   deregistered on-premises instance names, use the registration status
--   parameter.
--   
--   This operation returns paginated results.
module Network.AWS.CodeDeploy.ListOnPremisesInstances

-- | Represents the input of a <tt>ListOnPremisesInstances</tt> operation.
--   
--   <i>See:</i> <a>newListOnPremisesInstances</a> smart constructor.
data ListOnPremisesInstances
ListOnPremisesInstances' :: Maybe Text -> Maybe [TagFilter] -> Maybe RegistrationStatus -> ListOnPremisesInstances

-- | An identifier returned from the previous list on-premises instances
--   call. It can be used to return the next set of on-premises instances
--   in the list.
[$sel:nextToken:ListOnPremisesInstances'] :: ListOnPremisesInstances -> Maybe Text

-- | The on-premises instance tags that are used to restrict the
--   on-premises instance names returned.
[$sel:tagFilters:ListOnPremisesInstances'] :: ListOnPremisesInstances -> Maybe [TagFilter]

-- | The registration status of the on-premises instances:
--   
--   <ul>
--   <li><tt>Deregistered</tt>: Include deregistered on-premises instances
--   in the resulting list.</li>
--   <li><tt>Registered</tt>: Include registered on-premises instances in
--   the resulting list.</li>
--   </ul>
[$sel:registrationStatus:ListOnPremisesInstances'] :: ListOnPremisesInstances -> Maybe RegistrationStatus

-- | Create a value of <a>ListOnPremisesInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOnPremisesInstances'</a>,
--   <a>listOnPremisesInstances_nextToken</a> - An identifier returned from
--   the previous list on-premises instances call. It can be used to return
--   the next set of on-premises instances in the list.
--   
--   <a>$sel:tagFilters:ListOnPremisesInstances'</a>,
--   <a>listOnPremisesInstances_tagFilters</a> - The on-premises instance
--   tags that are used to restrict the on-premises instance names
--   returned.
--   
--   <a>$sel:registrationStatus:ListOnPremisesInstances'</a>,
--   <a>listOnPremisesInstances_registrationStatus</a> - The registration
--   status of the on-premises instances:
--   
--   <ul>
--   <li><tt>Deregistered</tt>: Include deregistered on-premises instances
--   in the resulting list.</li>
--   <li><tt>Registered</tt>: Include registered on-premises instances in
--   the resulting list.</li>
--   </ul>
newListOnPremisesInstances :: ListOnPremisesInstances

-- | An identifier returned from the previous list on-premises instances
--   call. It can be used to return the next set of on-premises instances
--   in the list.
listOnPremisesInstances_nextToken :: Lens' ListOnPremisesInstances (Maybe Text)

-- | The on-premises instance tags that are used to restrict the
--   on-premises instance names returned.
listOnPremisesInstances_tagFilters :: Lens' ListOnPremisesInstances (Maybe [TagFilter])

-- | The registration status of the on-premises instances:
--   
--   <ul>
--   <li><tt>Deregistered</tt>: Include deregistered on-premises instances
--   in the resulting list.</li>
--   <li><tt>Registered</tt>: Include registered on-premises instances in
--   the resulting list.</li>
--   </ul>
listOnPremisesInstances_registrationStatus :: Lens' ListOnPremisesInstances (Maybe RegistrationStatus)

-- | Represents the output of the list on-premises instances operation.
--   
--   <i>See:</i> <a>newListOnPremisesInstancesResponse</a> smart
--   constructor.
data ListOnPremisesInstancesResponse
ListOnPremisesInstancesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListOnPremisesInstancesResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list on-premises instances
--   call to return the next set of on-premises instances in the list.
[$sel:nextToken:ListOnPremisesInstancesResponse'] :: ListOnPremisesInstancesResponse -> Maybe Text

-- | The list of matching on-premises instance names.
[$sel:instanceNames:ListOnPremisesInstancesResponse'] :: ListOnPremisesInstancesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListOnPremisesInstancesResponse'] :: ListOnPremisesInstancesResponse -> Int

-- | Create a value of <a>ListOnPremisesInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOnPremisesInstances'</a>,
--   <a>listOnPremisesInstancesResponse_nextToken</a> - If a large amount
--   of information is returned, an identifier is also returned. It can be
--   used in a subsequent list on-premises instances call to return the
--   next set of on-premises instances in the list.
--   
--   <a>$sel:instanceNames:ListOnPremisesInstancesResponse'</a>,
--   <a>listOnPremisesInstancesResponse_instanceNames</a> - The list of
--   matching on-premises instance names.
--   
--   <a>$sel:httpStatus:ListOnPremisesInstancesResponse'</a>,
--   <a>listOnPremisesInstancesResponse_httpStatus</a> - The response's
--   http status code.
newListOnPremisesInstancesResponse :: Int -> ListOnPremisesInstancesResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list on-premises instances
--   call to return the next set of on-premises instances in the list.
listOnPremisesInstancesResponse_nextToken :: Lens' ListOnPremisesInstancesResponse (Maybe Text)

-- | The list of matching on-premises instance names.
listOnPremisesInstancesResponse_instanceNames :: Lens' ListOnPremisesInstancesResponse (Maybe [Text])

-- | The response's http status code.
listOnPremisesInstancesResponse_httpStatus :: Lens' ListOnPremisesInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance GHC.Show.Show Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance GHC.Read.Read Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstancesResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstancesResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstancesResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstancesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListOnPremisesInstances.ListOnPremisesInstances


-- | Lists the names of stored connections to GitHub accounts.
--   
--   This operation returns paginated results.
module Network.AWS.CodeDeploy.ListGitHubAccountTokenNames

-- | Represents the input of a <tt>ListGitHubAccountTokenNames</tt>
--   operation.
--   
--   <i>See:</i> <a>newListGitHubAccountTokenNames</a> smart constructor.
data ListGitHubAccountTokenNames
ListGitHubAccountTokenNames' :: Maybe Text -> ListGitHubAccountTokenNames

-- | An identifier returned from the previous
--   <tt>ListGitHubAccountTokenNames</tt> call. It can be used to return
--   the next set of names in the list.
[$sel:nextToken:ListGitHubAccountTokenNames'] :: ListGitHubAccountTokenNames -> Maybe Text

-- | Create a value of <a>ListGitHubAccountTokenNames</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGitHubAccountTokenNames'</a>,
--   <a>listGitHubAccountTokenNames_nextToken</a> - An identifier returned
--   from the previous <tt>ListGitHubAccountTokenNames</tt> call. It can be
--   used to return the next set of names in the list.
newListGitHubAccountTokenNames :: ListGitHubAccountTokenNames

-- | An identifier returned from the previous
--   <tt>ListGitHubAccountTokenNames</tt> call. It can be used to return
--   the next set of names in the list.
listGitHubAccountTokenNames_nextToken :: Lens' ListGitHubAccountTokenNames (Maybe Text)

-- | Represents the output of a <tt>ListGitHubAccountTokenNames</tt>
--   operation.
--   
--   <i>See:</i> <a>newListGitHubAccountTokenNamesResponse</a> smart
--   constructor.
data ListGitHubAccountTokenNamesResponse
ListGitHubAccountTokenNamesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListGitHubAccountTokenNamesResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent
--   <tt>ListGitHubAccountTokenNames</tt> call to return the next set of
--   names in the list.
[$sel:nextToken:ListGitHubAccountTokenNamesResponse'] :: ListGitHubAccountTokenNamesResponse -> Maybe Text

-- | A list of names of connections to GitHub accounts.
[$sel:tokenNameList:ListGitHubAccountTokenNamesResponse'] :: ListGitHubAccountTokenNamesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListGitHubAccountTokenNamesResponse'] :: ListGitHubAccountTokenNamesResponse -> Int

-- | Create a value of <a>ListGitHubAccountTokenNamesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGitHubAccountTokenNames'</a>,
--   <a>listGitHubAccountTokenNamesResponse_nextToken</a> - If a large
--   amount of information is returned, an identifier is also returned. It
--   can be used in a subsequent <tt>ListGitHubAccountTokenNames</tt> call
--   to return the next set of names in the list.
--   
--   <a>$sel:tokenNameList:ListGitHubAccountTokenNamesResponse'</a>,
--   <a>listGitHubAccountTokenNamesResponse_tokenNameList</a> - A list of
--   names of connections to GitHub accounts.
--   
--   <a>$sel:httpStatus:ListGitHubAccountTokenNamesResponse'</a>,
--   <a>listGitHubAccountTokenNamesResponse_httpStatus</a> - The response's
--   http status code.
newListGitHubAccountTokenNamesResponse :: Int -> ListGitHubAccountTokenNamesResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent
--   <tt>ListGitHubAccountTokenNames</tt> call to return the next set of
--   names in the list.
listGitHubAccountTokenNamesResponse_nextToken :: Lens' ListGitHubAccountTokenNamesResponse (Maybe Text)

-- | A list of names of connections to GitHub accounts.
listGitHubAccountTokenNamesResponse_tokenNameList :: Lens' ListGitHubAccountTokenNamesResponse (Maybe [Text])

-- | The response's http status code.
listGitHubAccountTokenNamesResponse_httpStatus :: Lens' ListGitHubAccountTokenNamesResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance GHC.Show.Show Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance GHC.Read.Read Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNamesResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNamesResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNamesResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNamesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNamesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListGitHubAccountTokenNames.ListGitHubAccountTokenNames


-- | Lists the deployments in a deployment group for an application
--   registered with the IAM user or AWS account.
--   
--   This operation returns paginated results.
module Network.AWS.CodeDeploy.ListDeployments

-- | Represents the input of a <tt>ListDeployments</tt> operation.
--   
--   <i>See:</i> <a>newListDeployments</a> smart constructor.
data ListDeployments
ListDeployments' :: Maybe Text -> Maybe Text -> Maybe TimeRange -> Maybe [DeploymentStatus] -> Maybe Text -> Maybe Text -> ListDeployments

-- | An identifier returned from the previous list deployments call. It can
--   be used to return the next set of deployments in the list.
[$sel:nextToken:ListDeployments'] :: ListDeployments -> Maybe Text

-- | The name of a deployment group for the specified application.
--   
--   If <tt>deploymentGroupName</tt> is specified, then
--   <tt>applicationName</tt> must be specified. If it is not specified,
--   then <tt>applicationName</tt> must not be specified.
[$sel:deploymentGroupName:ListDeployments'] :: ListDeployments -> Maybe Text

-- | A time range (start and end) for returning a subset of the list of
--   deployments.
[$sel:createTimeRange:ListDeployments'] :: ListDeployments -> Maybe TimeRange

-- | A subset of deployments to list by status:
--   
--   <ul>
--   <li><tt>Created</tt>: Include created deployments in the resulting
--   list.</li>
--   <li><tt>Queued</tt>: Include queued deployments in the resulting
--   list.</li>
--   <li><tt>In Progress</tt>: Include in-progress deployments in the
--   resulting list.</li>
--   <li><tt>Succeeded</tt>: Include successful deployments in the
--   resulting list.</li>
--   <li><tt>Failed</tt>: Include failed deployments in the resulting
--   list.</li>
--   <li><tt>Stopped</tt>: Include stopped deployments in the resulting
--   list.</li>
--   </ul>
[$sel:includeOnlyStatuses:ListDeployments'] :: ListDeployments -> Maybe [DeploymentStatus]

-- | The unique ID of an external resource for returning deployments linked
--   to the external resource.
[$sel:externalId:ListDeployments'] :: ListDeployments -> Maybe Text

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
--   
--   If <tt>applicationName</tt> is specified, then
--   <tt>deploymentGroupName</tt> must be specified. If it is not
--   specified, then <tt>deploymentGroupName</tt> must not be specified.
[$sel:applicationName:ListDeployments'] :: ListDeployments -> Maybe Text

-- | Create a value of <a>ListDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeployments_nextToken</a> - An identifier returned from the
--   previous list deployments call. It can be used to return the next set
--   of deployments in the list.
--   
--   <a>$sel:deploymentGroupName:ListDeployments'</a>,
--   <a>listDeployments_deploymentGroupName</a> - The name of a deployment
--   group for the specified application.
--   
--   If <tt>deploymentGroupName</tt> is specified, then
--   <tt>applicationName</tt> must be specified. If it is not specified,
--   then <tt>applicationName</tt> must not be specified.
--   
--   <a>$sel:createTimeRange:ListDeployments'</a>,
--   <a>listDeployments_createTimeRange</a> - A time range (start and end)
--   for returning a subset of the list of deployments.
--   
--   <a>$sel:includeOnlyStatuses:ListDeployments'</a>,
--   <a>listDeployments_includeOnlyStatuses</a> - A subset of deployments
--   to list by status:
--   
--   <ul>
--   <li><tt>Created</tt>: Include created deployments in the resulting
--   list.</li>
--   <li><tt>Queued</tt>: Include queued deployments in the resulting
--   list.</li>
--   <li><tt>In Progress</tt>: Include in-progress deployments in the
--   resulting list.</li>
--   <li><tt>Succeeded</tt>: Include successful deployments in the
--   resulting list.</li>
--   <li><tt>Failed</tt>: Include failed deployments in the resulting
--   list.</li>
--   <li><tt>Stopped</tt>: Include stopped deployments in the resulting
--   list.</li>
--   </ul>
--   
--   <a>$sel:externalId:ListDeployments'</a>,
--   <a>listDeployments_externalId</a> - The unique ID of an external
--   resource for returning deployments linked to the external resource.
--   
--   <a>$sel:applicationName:ListDeployments'</a>,
--   <a>listDeployments_applicationName</a> - The name of an AWS CodeDeploy
--   application associated with the IAM user or AWS account.
--   
--   If <tt>applicationName</tt> is specified, then
--   <tt>deploymentGroupName</tt> must be specified. If it is not
--   specified, then <tt>deploymentGroupName</tt> must not be specified.
newListDeployments :: ListDeployments

-- | An identifier returned from the previous list deployments call. It can
--   be used to return the next set of deployments in the list.
listDeployments_nextToken :: Lens' ListDeployments (Maybe Text)

-- | The name of a deployment group for the specified application.
--   
--   If <tt>deploymentGroupName</tt> is specified, then
--   <tt>applicationName</tt> must be specified. If it is not specified,
--   then <tt>applicationName</tt> must not be specified.
listDeployments_deploymentGroupName :: Lens' ListDeployments (Maybe Text)

-- | A time range (start and end) for returning a subset of the list of
--   deployments.
listDeployments_createTimeRange :: Lens' ListDeployments (Maybe TimeRange)

-- | A subset of deployments to list by status:
--   
--   <ul>
--   <li><tt>Created</tt>: Include created deployments in the resulting
--   list.</li>
--   <li><tt>Queued</tt>: Include queued deployments in the resulting
--   list.</li>
--   <li><tt>In Progress</tt>: Include in-progress deployments in the
--   resulting list.</li>
--   <li><tt>Succeeded</tt>: Include successful deployments in the
--   resulting list.</li>
--   <li><tt>Failed</tt>: Include failed deployments in the resulting
--   list.</li>
--   <li><tt>Stopped</tt>: Include stopped deployments in the resulting
--   list.</li>
--   </ul>
listDeployments_includeOnlyStatuses :: Lens' ListDeployments (Maybe [DeploymentStatus])

-- | The unique ID of an external resource for returning deployments linked
--   to the external resource.
listDeployments_externalId :: Lens' ListDeployments (Maybe Text)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
--   
--   If <tt>applicationName</tt> is specified, then
--   <tt>deploymentGroupName</tt> must be specified. If it is not
--   specified, then <tt>deploymentGroupName</tt> must not be specified.
listDeployments_applicationName :: Lens' ListDeployments (Maybe Text)

-- | Represents the output of a <tt>ListDeployments</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentsResponse</a> smart constructor.
data ListDeploymentsResponse
ListDeploymentsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListDeploymentsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployments call to
--   return the next set of deployments in the list.
[$sel:nextToken:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Maybe Text

-- | A list of deployment IDs.
[$sel:deployments:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListDeploymentsResponse'] :: ListDeploymentsResponse -> Int

-- | Create a value of <a>ListDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeploymentsResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list deployments call to return the next set of
--   deployments in the list.
--   
--   <a>$sel:deployments:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_deployments</a> - A list of deployment IDs.
--   
--   <a>$sel:httpStatus:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newListDeploymentsResponse :: Int -> ListDeploymentsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployments call to
--   return the next set of deployments in the list.
listDeploymentsResponse_nextToken :: Lens' ListDeploymentsResponse (Maybe Text)

-- | A list of deployment IDs.
listDeploymentsResponse_deployments :: Lens' ListDeploymentsResponse (Maybe [Text])

-- | The response's http status code.
listDeploymentsResponse_httpStatus :: Lens' ListDeploymentsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance GHC.Show.Show Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance GHC.Read.Read Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListDeployments.ListDeploymentsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListDeployments.ListDeploymentsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListDeployments.ListDeploymentsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListDeployments.ListDeploymentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListDeployments.ListDeploymentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListDeployments.ListDeployments
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListDeployments.ListDeployments


-- | Returns an array of target IDs that are associated a deployment.
--   
--   This operation returns paginated results.
module Network.AWS.CodeDeploy.ListDeploymentTargets

-- | <i>See:</i> <a>newListDeploymentTargets</a> smart constructor.
data ListDeploymentTargets
ListDeploymentTargets' :: Maybe Text -> Maybe Text -> Maybe (HashMap TargetFilterName [Text]) -> ListDeploymentTargets

-- | The unique ID of a deployment.
[$sel:deploymentId:ListDeploymentTargets'] :: ListDeploymentTargets -> Maybe Text

-- | A token identifier returned from the previous
--   <tt>ListDeploymentTargets</tt> call. It can be used to return the next
--   set of deployment targets in the list.
[$sel:nextToken:ListDeploymentTargets'] :: ListDeploymentTargets -> Maybe Text

-- | A key used to filter the returned targets. The two valid values are:
--   
--   <ul>
--   <li><tt>TargetStatus</tt> - A <tt>TargetStatus</tt> filter string can
--   be <tt>Failed</tt>, <tt>InProgress</tt>, <tt>Pending</tt>,
--   <tt>Ready</tt>, <tt>Skipped</tt>, <tt>Succeeded</tt>, or
--   <tt>Unknown</tt>.</li>
--   <li><tt>ServerInstanceLabel</tt> - A <tt>ServerInstanceLabel</tt>
--   filter string can be <tt>Blue</tt> or <tt>Green</tt>.</li>
--   </ul>
[$sel:targetFilters:ListDeploymentTargets'] :: ListDeploymentTargets -> Maybe (HashMap TargetFilterName [Text])

-- | Create a value of <a>ListDeploymentTargets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:ListDeploymentTargets'</a>,
--   <a>listDeploymentTargets_deploymentId</a> - The unique ID of a
--   deployment.
--   
--   <a>$sel:nextToken:ListDeploymentTargets'</a>,
--   <a>listDeploymentTargets_nextToken</a> - A token identifier returned
--   from the previous <tt>ListDeploymentTargets</tt> call. It can be used
--   to return the next set of deployment targets in the list.
--   
--   <a>$sel:targetFilters:ListDeploymentTargets'</a>,
--   <a>listDeploymentTargets_targetFilters</a> - A key used to filter the
--   returned targets. The two valid values are:
--   
--   <ul>
--   <li><tt>TargetStatus</tt> - A <tt>TargetStatus</tt> filter string can
--   be <tt>Failed</tt>, <tt>InProgress</tt>, <tt>Pending</tt>,
--   <tt>Ready</tt>, <tt>Skipped</tt>, <tt>Succeeded</tt>, or
--   <tt>Unknown</tt>.</li>
--   <li><tt>ServerInstanceLabel</tt> - A <tt>ServerInstanceLabel</tt>
--   filter string can be <tt>Blue</tt> or <tt>Green</tt>.</li>
--   </ul>
newListDeploymentTargets :: ListDeploymentTargets

-- | The unique ID of a deployment.
listDeploymentTargets_deploymentId :: Lens' ListDeploymentTargets (Maybe Text)

-- | A token identifier returned from the previous
--   <tt>ListDeploymentTargets</tt> call. It can be used to return the next
--   set of deployment targets in the list.
listDeploymentTargets_nextToken :: Lens' ListDeploymentTargets (Maybe Text)

-- | A key used to filter the returned targets. The two valid values are:
--   
--   <ul>
--   <li><tt>TargetStatus</tt> - A <tt>TargetStatus</tt> filter string can
--   be <tt>Failed</tt>, <tt>InProgress</tt>, <tt>Pending</tt>,
--   <tt>Ready</tt>, <tt>Skipped</tt>, <tt>Succeeded</tt>, or
--   <tt>Unknown</tt>.</li>
--   <li><tt>ServerInstanceLabel</tt> - A <tt>ServerInstanceLabel</tt>
--   filter string can be <tt>Blue</tt> or <tt>Green</tt>.</li>
--   </ul>
listDeploymentTargets_targetFilters :: Lens' ListDeploymentTargets (Maybe (HashMap TargetFilterName [Text]))

-- | <i>See:</i> <a>newListDeploymentTargetsResponse</a> smart constructor.
data ListDeploymentTargetsResponse
ListDeploymentTargetsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListDeploymentTargetsResponse

-- | The unique IDs of deployment targets.
[$sel:targetIds:ListDeploymentTargetsResponse'] :: ListDeploymentTargetsResponse -> Maybe [Text]

-- | If a large amount of information is returned, a token identifier is
--   also returned. It can be used in a subsequent
--   <tt>ListDeploymentTargets</tt> call to return the next set of
--   deployment targets in the list.
[$sel:nextToken:ListDeploymentTargetsResponse'] :: ListDeploymentTargetsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDeploymentTargetsResponse'] :: ListDeploymentTargetsResponse -> Int

-- | Create a value of <a>ListDeploymentTargetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetIds:ListDeploymentTargetsResponse'</a>,
--   <a>listDeploymentTargetsResponse_targetIds</a> - The unique IDs of
--   deployment targets.
--   
--   <a>$sel:nextToken:ListDeploymentTargets'</a>,
--   <a>listDeploymentTargetsResponse_nextToken</a> - If a large amount of
--   information is returned, a token identifier is also returned. It can
--   be used in a subsequent <tt>ListDeploymentTargets</tt> call to return
--   the next set of deployment targets in the list.
--   
--   <a>$sel:httpStatus:ListDeploymentTargetsResponse'</a>,
--   <a>listDeploymentTargetsResponse_httpStatus</a> - The response's http
--   status code.
newListDeploymentTargetsResponse :: Int -> ListDeploymentTargetsResponse

-- | The unique IDs of deployment targets.
listDeploymentTargetsResponse_targetIds :: Lens' ListDeploymentTargetsResponse (Maybe [Text])

-- | If a large amount of information is returned, a token identifier is
--   also returned. It can be used in a subsequent
--   <tt>ListDeploymentTargets</tt> call to return the next set of
--   deployment targets in the list.
listDeploymentTargetsResponse_nextToken :: Lens' ListDeploymentTargetsResponse (Maybe Text)

-- | The response's http status code.
listDeploymentTargetsResponse_httpStatus :: Lens' ListDeploymentTargetsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance GHC.Show.Show Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance GHC.Read.Read Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargetsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargetsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargetsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargetsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListDeploymentTargets.ListDeploymentTargets


-- | Lists the deployment groups for an application registered with the IAM
--   user or AWS account.
--   
--   This operation returns paginated results.
module Network.AWS.CodeDeploy.ListDeploymentGroups

-- | Represents the input of a <tt>ListDeploymentGroups</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentGroups</a> smart constructor.
data ListDeploymentGroups
ListDeploymentGroups' :: Maybe Text -> Text -> ListDeploymentGroups

-- | An identifier returned from the previous list deployment groups call.
--   It can be used to return the next set of deployment groups in the
--   list.
[$sel:nextToken:ListDeploymentGroups'] :: ListDeploymentGroups -> Maybe Text

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:ListDeploymentGroups'] :: ListDeploymentGroups -> Text

-- | Create a value of <a>ListDeploymentGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentGroups'</a>,
--   <a>listDeploymentGroups_nextToken</a> - An identifier returned from
--   the previous list deployment groups call. It can be used to return the
--   next set of deployment groups in the list.
--   
--   <a>$sel:applicationName:ListDeploymentGroups'</a>,
--   <a>listDeploymentGroups_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
newListDeploymentGroups :: Text -> ListDeploymentGroups

-- | An identifier returned from the previous list deployment groups call.
--   It can be used to return the next set of deployment groups in the
--   list.
listDeploymentGroups_nextToken :: Lens' ListDeploymentGroups (Maybe Text)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
listDeploymentGroups_applicationName :: Lens' ListDeploymentGroups Text

-- | Represents the output of a <tt>ListDeploymentGroups</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentGroupsResponse</a> smart constructor.
data ListDeploymentGroupsResponse
ListDeploymentGroupsResponse' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Int -> ListDeploymentGroupsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployment groups call
--   to return the next set of deployment groups in the list.
[$sel:nextToken:ListDeploymentGroupsResponse'] :: ListDeploymentGroupsResponse -> Maybe Text

-- | A list of deployment group names.
[$sel:deploymentGroups:ListDeploymentGroupsResponse'] :: ListDeploymentGroupsResponse -> Maybe [Text]

-- | The application name.
[$sel:applicationName:ListDeploymentGroupsResponse'] :: ListDeploymentGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDeploymentGroupsResponse'] :: ListDeploymentGroupsResponse -> Int

-- | Create a value of <a>ListDeploymentGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentGroups'</a>,
--   <a>listDeploymentGroupsResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list deployment groups call to return the next
--   set of deployment groups in the list.
--   
--   <a>$sel:deploymentGroups:ListDeploymentGroupsResponse'</a>,
--   <a>listDeploymentGroupsResponse_deploymentGroups</a> - A list of
--   deployment group names.
--   
--   <a>$sel:applicationName:ListDeploymentGroups'</a>,
--   <a>listDeploymentGroupsResponse_applicationName</a> - The application
--   name.
--   
--   <a>$sel:httpStatus:ListDeploymentGroupsResponse'</a>,
--   <a>listDeploymentGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListDeploymentGroupsResponse :: Int -> ListDeploymentGroupsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployment groups call
--   to return the next set of deployment groups in the list.
listDeploymentGroupsResponse_nextToken :: Lens' ListDeploymentGroupsResponse (Maybe Text)

-- | A list of deployment group names.
listDeploymentGroupsResponse_deploymentGroups :: Lens' ListDeploymentGroupsResponse (Maybe [Text])

-- | The application name.
listDeploymentGroupsResponse_applicationName :: Lens' ListDeploymentGroupsResponse (Maybe Text)

-- | The response's http status code.
listDeploymentGroupsResponse_httpStatus :: Lens' ListDeploymentGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance GHC.Show.Show Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance GHC.Read.Read Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroupsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroupsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroupsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListDeploymentGroups.ListDeploymentGroups


-- | Lists the deployment configurations with the IAM user or AWS account.
--   
--   This operation returns paginated results.
module Network.AWS.CodeDeploy.ListDeploymentConfigs

-- | Represents the input of a <tt>ListDeploymentConfigs</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentConfigs</a> smart constructor.
data ListDeploymentConfigs
ListDeploymentConfigs' :: Maybe Text -> ListDeploymentConfigs

-- | An identifier returned from the previous
--   <tt>ListDeploymentConfigs</tt> call. It can be used to return the next
--   set of deployment configurations in the list.
[$sel:nextToken:ListDeploymentConfigs'] :: ListDeploymentConfigs -> Maybe Text

-- | Create a value of <a>ListDeploymentConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentConfigs'</a>,
--   <a>listDeploymentConfigs_nextToken</a> - An identifier returned from
--   the previous <tt>ListDeploymentConfigs</tt> call. It can be used to
--   return the next set of deployment configurations in the list.
newListDeploymentConfigs :: ListDeploymentConfigs

-- | An identifier returned from the previous
--   <tt>ListDeploymentConfigs</tt> call. It can be used to return the next
--   set of deployment configurations in the list.
listDeploymentConfigs_nextToken :: Lens' ListDeploymentConfigs (Maybe Text)

-- | Represents the output of a <tt>ListDeploymentConfigs</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentConfigsResponse</a> smart constructor.
data ListDeploymentConfigsResponse
ListDeploymentConfigsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListDeploymentConfigsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployment
--   configurations call to return the next set of deployment
--   configurations in the list.
[$sel:nextToken:ListDeploymentConfigsResponse'] :: ListDeploymentConfigsResponse -> Maybe Text

-- | A list of deployment configurations, including built-in configurations
--   such as <tt>CodeDeployDefault.OneAtATime</tt>.
[$sel:deploymentConfigsList:ListDeploymentConfigsResponse'] :: ListDeploymentConfigsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListDeploymentConfigsResponse'] :: ListDeploymentConfigsResponse -> Int

-- | Create a value of <a>ListDeploymentConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentConfigs'</a>,
--   <a>listDeploymentConfigsResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list deployment configurations call to return the
--   next set of deployment configurations in the list.
--   
--   <a>$sel:deploymentConfigsList:ListDeploymentConfigsResponse'</a>,
--   <a>listDeploymentConfigsResponse_deploymentConfigsList</a> - A list of
--   deployment configurations, including built-in configurations such as
--   <tt>CodeDeployDefault.OneAtATime</tt>.
--   
--   <a>$sel:httpStatus:ListDeploymentConfigsResponse'</a>,
--   <a>listDeploymentConfigsResponse_httpStatus</a> - The response's http
--   status code.
newListDeploymentConfigsResponse :: Int -> ListDeploymentConfigsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployment
--   configurations call to return the next set of deployment
--   configurations in the list.
listDeploymentConfigsResponse_nextToken :: Lens' ListDeploymentConfigsResponse (Maybe Text)

-- | A list of deployment configurations, including built-in configurations
--   such as <tt>CodeDeployDefault.OneAtATime</tt>.
listDeploymentConfigsResponse_deploymentConfigsList :: Lens' ListDeploymentConfigsResponse (Maybe [Text])

-- | The response's http status code.
listDeploymentConfigsResponse_httpStatus :: Lens' ListDeploymentConfigsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance GHC.Show.Show Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance GHC.Read.Read Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListDeploymentConfigs.ListDeploymentConfigs


-- | Lists the applications registered with the IAM user or AWS account.
--   
--   This operation returns paginated results.
module Network.AWS.CodeDeploy.ListApplications

-- | Represents the input of a <tt>ListApplications</tt> operation.
--   
--   <i>See:</i> <a>newListApplications</a> smart constructor.
data ListApplications
ListApplications' :: Maybe Text -> ListApplications

-- | An identifier returned from the previous list applications call. It
--   can be used to return the next set of applications in the list.
[$sel:nextToken:ListApplications'] :: ListApplications -> Maybe Text

-- | Create a value of <a>ListApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplications_nextToken</a> - An identifier returned from the
--   previous list applications call. It can be used to return the next set
--   of applications in the list.
newListApplications :: ListApplications

-- | An identifier returned from the previous list applications call. It
--   can be used to return the next set of applications in the list.
listApplications_nextToken :: Lens' ListApplications (Maybe Text)

-- | Represents the output of a ListApplications operation.
--   
--   <i>See:</i> <a>newListApplicationsResponse</a> smart constructor.
data ListApplicationsResponse
ListApplicationsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListApplicationsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list applications call to
--   return the next set of applications in the list.
[$sel:nextToken:ListApplicationsResponse'] :: ListApplicationsResponse -> Maybe Text

-- | A list of application names.
[$sel:applications:ListApplicationsResponse'] :: ListApplicationsResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListApplicationsResponse'] :: ListApplicationsResponse -> Int

-- | Create a value of <a>ListApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplicationsResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list applications call to return the next set of
--   applications in the list.
--   
--   <a>$sel:applications:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_applications</a> - A list of application
--   names.
--   
--   <a>$sel:httpStatus:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newListApplicationsResponse :: Int -> ListApplicationsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list applications call to
--   return the next set of applications in the list.
listApplicationsResponse_nextToken :: Lens' ListApplicationsResponse (Maybe Text)

-- | A list of application names.
listApplicationsResponse_applications :: Lens' ListApplicationsResponse (Maybe [Text])

-- | The response's http status code.
listApplicationsResponse_httpStatus :: Lens' ListApplicationsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListApplications.ListApplications
instance GHC.Show.Show Network.AWS.CodeDeploy.ListApplications.ListApplications
instance GHC.Read.Read Network.AWS.CodeDeploy.ListApplications.ListApplications
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListApplications.ListApplications
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListApplications.ListApplicationsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListApplications.ListApplicationsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListApplications.ListApplicationsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListApplications.ListApplicationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListApplications.ListApplications
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListApplications.ListApplicationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeDeploy.ListApplications.ListApplications
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListApplications.ListApplications
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListApplications.ListApplications
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListApplications.ListApplications
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListApplications.ListApplications
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListApplications.ListApplications
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListApplications.ListApplications


-- | Lists information about revisions for an application.
--   
--   This operation returns paginated results.
module Network.AWS.CodeDeploy.ListApplicationRevisions

-- | Represents the input of a <tt>ListApplicationRevisions</tt> operation.
--   
--   <i>See:</i> <a>newListApplicationRevisions</a> smart constructor.
data ListApplicationRevisions
ListApplicationRevisions' :: Maybe Text -> Maybe SortOrder -> Maybe Text -> Maybe ListStateFilterAction -> Maybe Text -> Maybe ApplicationRevisionSortBy -> Text -> ListApplicationRevisions

-- | An identifier returned from the previous
--   <tt>ListApplicationRevisions</tt> call. It can be used to return the
--   next set of applications in the list.
[$sel:nextToken:ListApplicationRevisions'] :: ListApplicationRevisions -> Maybe Text

-- | The order in which to sort the list results:
--   
--   <ul>
--   <li><tt>ascending</tt>: ascending order.</li>
--   <li><tt>descending</tt>: descending order.</li>
--   </ul>
--   
--   If not specified, the results are sorted in ascending order.
--   
--   If set to null, the results are sorted in an arbitrary order.
[$sel:sortOrder:ListApplicationRevisions'] :: ListApplicationRevisions -> Maybe SortOrder

-- | An Amazon S3 bucket name to limit the search for revisions.
--   
--   If set to null, all of the user's buckets are searched.
[$sel:s3Bucket:ListApplicationRevisions'] :: ListApplicationRevisions -> Maybe Text

-- | Whether to list revisions based on whether the revision is the target
--   revision of a deployment group:
--   
--   <ul>
--   <li><tt>include</tt>: List revisions that are target revisions of a
--   deployment group.</li>
--   <li><tt>exclude</tt>: Do not list revisions that are target revisions
--   of a deployment group.</li>
--   <li><tt>ignore</tt>: List all revisions.</li>
--   </ul>
[$sel:deployed:ListApplicationRevisions'] :: ListApplicationRevisions -> Maybe ListStateFilterAction

-- | A key prefix for the set of Amazon S3 objects to limit the search for
--   revisions.
[$sel:s3KeyPrefix:ListApplicationRevisions'] :: ListApplicationRevisions -> Maybe Text

-- | The column name to use to sort the list results:
--   
--   <ul>
--   <li><tt>registerTime</tt>: Sort by the time the revisions were
--   registered with AWS CodeDeploy.</li>
--   <li><tt>firstUsedTime</tt>: Sort by the time the revisions were first
--   used in a deployment.</li>
--   <li><tt>lastUsedTime</tt>: Sort by the time the revisions were last
--   used in a deployment.</li>
--   </ul>
--   
--   If not specified or set to null, the results are returned in an
--   arbitrary order.
[$sel:sortBy:ListApplicationRevisions'] :: ListApplicationRevisions -> Maybe ApplicationRevisionSortBy

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:ListApplicationRevisions'] :: ListApplicationRevisions -> Text

-- | Create a value of <a>ListApplicationRevisions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_nextToken</a> - An identifier returned
--   from the previous <tt>ListApplicationRevisions</tt> call. It can be
--   used to return the next set of applications in the list.
--   
--   <a>$sel:sortOrder:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_sortOrder</a> - The order in which to sort
--   the list results:
--   
--   <ul>
--   <li><tt>ascending</tt>: ascending order.</li>
--   <li><tt>descending</tt>: descending order.</li>
--   </ul>
--   
--   If not specified, the results are sorted in ascending order.
--   
--   If set to null, the results are sorted in an arbitrary order.
--   
--   <a>$sel:s3Bucket:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_s3Bucket</a> - An Amazon S3 bucket name to
--   limit the search for revisions.
--   
--   If set to null, all of the user's buckets are searched.
--   
--   <a>$sel:deployed:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_deployed</a> - Whether to list revisions
--   based on whether the revision is the target revision of a deployment
--   group:
--   
--   <ul>
--   <li><tt>include</tt>: List revisions that are target revisions of a
--   deployment group.</li>
--   <li><tt>exclude</tt>: Do not list revisions that are target revisions
--   of a deployment group.</li>
--   <li><tt>ignore</tt>: List all revisions.</li>
--   </ul>
--   
--   <a>$sel:s3KeyPrefix:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_s3KeyPrefix</a> - A key prefix for the set
--   of Amazon S3 objects to limit the search for revisions.
--   
--   <a>$sel:sortBy:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_sortBy</a> - The column name to use to
--   sort the list results:
--   
--   <ul>
--   <li><tt>registerTime</tt>: Sort by the time the revisions were
--   registered with AWS CodeDeploy.</li>
--   <li><tt>firstUsedTime</tt>: Sort by the time the revisions were first
--   used in a deployment.</li>
--   <li><tt>lastUsedTime</tt>: Sort by the time the revisions were last
--   used in a deployment.</li>
--   </ul>
--   
--   If not specified or set to null, the results are returned in an
--   arbitrary order.
--   
--   <a>$sel:applicationName:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
newListApplicationRevisions :: Text -> ListApplicationRevisions

-- | An identifier returned from the previous
--   <tt>ListApplicationRevisions</tt> call. It can be used to return the
--   next set of applications in the list.
listApplicationRevisions_nextToken :: Lens' ListApplicationRevisions (Maybe Text)

-- | The order in which to sort the list results:
--   
--   <ul>
--   <li><tt>ascending</tt>: ascending order.</li>
--   <li><tt>descending</tt>: descending order.</li>
--   </ul>
--   
--   If not specified, the results are sorted in ascending order.
--   
--   If set to null, the results are sorted in an arbitrary order.
listApplicationRevisions_sortOrder :: Lens' ListApplicationRevisions (Maybe SortOrder)

-- | An Amazon S3 bucket name to limit the search for revisions.
--   
--   If set to null, all of the user's buckets are searched.
listApplicationRevisions_s3Bucket :: Lens' ListApplicationRevisions (Maybe Text)

-- | Whether to list revisions based on whether the revision is the target
--   revision of a deployment group:
--   
--   <ul>
--   <li><tt>include</tt>: List revisions that are target revisions of a
--   deployment group.</li>
--   <li><tt>exclude</tt>: Do not list revisions that are target revisions
--   of a deployment group.</li>
--   <li><tt>ignore</tt>: List all revisions.</li>
--   </ul>
listApplicationRevisions_deployed :: Lens' ListApplicationRevisions (Maybe ListStateFilterAction)

-- | A key prefix for the set of Amazon S3 objects to limit the search for
--   revisions.
listApplicationRevisions_s3KeyPrefix :: Lens' ListApplicationRevisions (Maybe Text)

-- | The column name to use to sort the list results:
--   
--   <ul>
--   <li><tt>registerTime</tt>: Sort by the time the revisions were
--   registered with AWS CodeDeploy.</li>
--   <li><tt>firstUsedTime</tt>: Sort by the time the revisions were first
--   used in a deployment.</li>
--   <li><tt>lastUsedTime</tt>: Sort by the time the revisions were last
--   used in a deployment.</li>
--   </ul>
--   
--   If not specified or set to null, the results are returned in an
--   arbitrary order.
listApplicationRevisions_sortBy :: Lens' ListApplicationRevisions (Maybe ApplicationRevisionSortBy)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
listApplicationRevisions_applicationName :: Lens' ListApplicationRevisions Text

-- | Represents the output of a <tt>ListApplicationRevisions</tt>
--   operation.
--   
--   <i>See:</i> <a>newListApplicationRevisionsResponse</a> smart
--   constructor.
data ListApplicationRevisionsResponse
ListApplicationRevisionsResponse' :: Maybe Text -> Maybe [RevisionLocation] -> Int -> ListApplicationRevisionsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list application revisions
--   call to return the next set of application revisions in the list.
[$sel:nextToken:ListApplicationRevisionsResponse'] :: ListApplicationRevisionsResponse -> Maybe Text

-- | A list of locations that contain the matching revisions.
[$sel:revisions:ListApplicationRevisionsResponse'] :: ListApplicationRevisionsResponse -> Maybe [RevisionLocation]

-- | The response's http status code.
[$sel:httpStatus:ListApplicationRevisionsResponse'] :: ListApplicationRevisionsResponse -> Int

-- | Create a value of <a>ListApplicationRevisionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisionsResponse_nextToken</a> - If a large amount
--   of information is returned, an identifier is also returned. It can be
--   used in a subsequent list application revisions call to return the
--   next set of application revisions in the list.
--   
--   <a>$sel:revisions:ListApplicationRevisionsResponse'</a>,
--   <a>listApplicationRevisionsResponse_revisions</a> - A list of
--   locations that contain the matching revisions.
--   
--   <a>$sel:httpStatus:ListApplicationRevisionsResponse'</a>,
--   <a>listApplicationRevisionsResponse_httpStatus</a> - The response's
--   http status code.
newListApplicationRevisionsResponse :: Int -> ListApplicationRevisionsResponse

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list application revisions
--   call to return the next set of application revisions in the list.
listApplicationRevisionsResponse_nextToken :: Lens' ListApplicationRevisionsResponse (Maybe Text)

-- | A list of locations that contain the matching revisions.
listApplicationRevisionsResponse_revisions :: Lens' ListApplicationRevisionsResponse (Maybe [RevisionLocation])

-- | The response's http status code.
listApplicationRevisionsResponse_httpStatus :: Lens' ListApplicationRevisionsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance GHC.Show.Show Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance GHC.Read.Read Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisionsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisionsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisionsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ListApplicationRevisions.ListApplicationRevisions


-- | Gets information about an on-premises instance.
module Network.AWS.CodeDeploy.GetOnPremisesInstance

-- | Represents the input of a <tt>GetOnPremisesInstance</tt> operation.
--   
--   <i>See:</i> <a>newGetOnPremisesInstance</a> smart constructor.
data GetOnPremisesInstance
GetOnPremisesInstance' :: Text -> GetOnPremisesInstance

-- | The name of the on-premises instance about which to get information.
[$sel:instanceName:GetOnPremisesInstance'] :: GetOnPremisesInstance -> Text

-- | Create a value of <a>GetOnPremisesInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceName:GetOnPremisesInstance'</a>,
--   <a>getOnPremisesInstance_instanceName</a> - The name of the
--   on-premises instance about which to get information.
newGetOnPremisesInstance :: Text -> GetOnPremisesInstance

-- | The name of the on-premises instance about which to get information.
getOnPremisesInstance_instanceName :: Lens' GetOnPremisesInstance Text

-- | Represents the output of a <tt>GetOnPremisesInstance</tt> operation.
--   
--   <i>See:</i> <a>newGetOnPremisesInstanceResponse</a> smart constructor.
data GetOnPremisesInstanceResponse
GetOnPremisesInstanceResponse' :: Maybe InstanceInfo -> Int -> GetOnPremisesInstanceResponse

-- | Information about the on-premises instance.
[$sel:instanceInfo:GetOnPremisesInstanceResponse'] :: GetOnPremisesInstanceResponse -> Maybe InstanceInfo

-- | The response's http status code.
[$sel:httpStatus:GetOnPremisesInstanceResponse'] :: GetOnPremisesInstanceResponse -> Int

-- | Create a value of <a>GetOnPremisesInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceInfo:GetOnPremisesInstanceResponse'</a>,
--   <a>getOnPremisesInstanceResponse_instanceInfo</a> - Information about
--   the on-premises instance.
--   
--   <a>$sel:httpStatus:GetOnPremisesInstanceResponse'</a>,
--   <a>getOnPremisesInstanceResponse_httpStatus</a> - The response's http
--   status code.
newGetOnPremisesInstanceResponse :: Int -> GetOnPremisesInstanceResponse

-- | Information about the on-premises instance.
getOnPremisesInstanceResponse_instanceInfo :: Lens' GetOnPremisesInstanceResponse (Maybe InstanceInfo)

-- | The response's http status code.
getOnPremisesInstanceResponse_httpStatus :: Lens' GetOnPremisesInstanceResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance GHC.Show.Show Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance GHC.Read.Read Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstanceResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstanceResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstanceResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.GetOnPremisesInstance.GetOnPremisesInstance


-- | Returns information about a deployment target.
module Network.AWS.CodeDeploy.GetDeploymentTarget

-- | <i>See:</i> <a>newGetDeploymentTarget</a> smart constructor.
data GetDeploymentTarget
GetDeploymentTarget' :: Maybe Text -> Maybe Text -> GetDeploymentTarget

-- | The unique ID of a deployment target.
[$sel:targetId:GetDeploymentTarget'] :: GetDeploymentTarget -> Maybe Text

-- | The unique ID of a deployment.
[$sel:deploymentId:GetDeploymentTarget'] :: GetDeploymentTarget -> Maybe Text

-- | Create a value of <a>GetDeploymentTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:GetDeploymentTarget'</a>,
--   <a>getDeploymentTarget_targetId</a> - The unique ID of a deployment
--   target.
--   
--   <a>$sel:deploymentId:GetDeploymentTarget'</a>,
--   <a>getDeploymentTarget_deploymentId</a> - The unique ID of a
--   deployment.
newGetDeploymentTarget :: GetDeploymentTarget

-- | The unique ID of a deployment target.
getDeploymentTarget_targetId :: Lens' GetDeploymentTarget (Maybe Text)

-- | The unique ID of a deployment.
getDeploymentTarget_deploymentId :: Lens' GetDeploymentTarget (Maybe Text)

-- | <i>See:</i> <a>newGetDeploymentTargetResponse</a> smart constructor.
data GetDeploymentTargetResponse
GetDeploymentTargetResponse' :: Maybe DeploymentTarget -> Int -> GetDeploymentTargetResponse

-- | A deployment target that contains information about a deployment such
--   as its status, lifecycle events, and when it was last updated. It also
--   contains metadata about the deployment target. The deployment target
--   metadata depends on the deployment target's type
--   (<tt>instanceTarget</tt>, <tt>lambdaTarget</tt>, or
--   <tt>ecsTarget</tt>).
[$sel:deploymentTarget:GetDeploymentTargetResponse'] :: GetDeploymentTargetResponse -> Maybe DeploymentTarget

-- | The response's http status code.
[$sel:httpStatus:GetDeploymentTargetResponse'] :: GetDeploymentTargetResponse -> Int

-- | Create a value of <a>GetDeploymentTargetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentTarget:GetDeploymentTargetResponse'</a>,
--   <a>getDeploymentTargetResponse_deploymentTarget</a> - A deployment
--   target that contains information about a deployment such as its
--   status, lifecycle events, and when it was last updated. It also
--   contains metadata about the deployment target. The deployment target
--   metadata depends on the deployment target's type
--   (<tt>instanceTarget</tt>, <tt>lambdaTarget</tt>, or
--   <tt>ecsTarget</tt>).
--   
--   <a>$sel:httpStatus:GetDeploymentTargetResponse'</a>,
--   <a>getDeploymentTargetResponse_httpStatus</a> - The response's http
--   status code.
newGetDeploymentTargetResponse :: Int -> GetDeploymentTargetResponse

-- | A deployment target that contains information about a deployment such
--   as its status, lifecycle events, and when it was last updated. It also
--   contains metadata about the deployment target. The deployment target
--   metadata depends on the deployment target's type
--   (<tt>instanceTarget</tt>, <tt>lambdaTarget</tt>, or
--   <tt>ecsTarget</tt>).
getDeploymentTargetResponse_deploymentTarget :: Lens' GetDeploymentTargetResponse (Maybe DeploymentTarget)

-- | The response's http status code.
getDeploymentTargetResponse_httpStatus :: Lens' GetDeploymentTargetResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance GHC.Show.Show Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance GHC.Read.Read Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTargetResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTargetResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTargetResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTargetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTargetResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.GetDeploymentTarget.GetDeploymentTarget


-- | Gets information about a deployment group.
module Network.AWS.CodeDeploy.GetDeploymentGroup

-- | Represents the input of a <tt>GetDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentGroup</a> smart constructor.
data GetDeploymentGroup
GetDeploymentGroup' :: Text -> Text -> GetDeploymentGroup

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:GetDeploymentGroup'] :: GetDeploymentGroup -> Text

-- | The name of a deployment group for the specified application.
[$sel:deploymentGroupName:GetDeploymentGroup'] :: GetDeploymentGroup -> Text

-- | Create a value of <a>GetDeploymentGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:GetDeploymentGroup'</a>,
--   <a>getDeploymentGroup_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
--   
--   <a>$sel:deploymentGroupName:GetDeploymentGroup'</a>,
--   <a>getDeploymentGroup_deploymentGroupName</a> - The name of a
--   deployment group for the specified application.
newGetDeploymentGroup :: Text -> Text -> GetDeploymentGroup

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
getDeploymentGroup_applicationName :: Lens' GetDeploymentGroup Text

-- | The name of a deployment group for the specified application.
getDeploymentGroup_deploymentGroupName :: Lens' GetDeploymentGroup Text

-- | Represents the output of a <tt>GetDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentGroupResponse</a> smart constructor.
data GetDeploymentGroupResponse
GetDeploymentGroupResponse' :: Maybe DeploymentGroupInfo -> Int -> GetDeploymentGroupResponse

-- | Information about the deployment group.
[$sel:deploymentGroupInfo:GetDeploymentGroupResponse'] :: GetDeploymentGroupResponse -> Maybe DeploymentGroupInfo

-- | The response's http status code.
[$sel:httpStatus:GetDeploymentGroupResponse'] :: GetDeploymentGroupResponse -> Int

-- | Create a value of <a>GetDeploymentGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentGroupInfo:GetDeploymentGroupResponse'</a>,
--   <a>getDeploymentGroupResponse_deploymentGroupInfo</a> - Information
--   about the deployment group.
--   
--   <a>$sel:httpStatus:GetDeploymentGroupResponse'</a>,
--   <a>getDeploymentGroupResponse_httpStatus</a> - The response's http
--   status code.
newGetDeploymentGroupResponse :: Int -> GetDeploymentGroupResponse

-- | Information about the deployment group.
getDeploymentGroupResponse_deploymentGroupInfo :: Lens' GetDeploymentGroupResponse (Maybe DeploymentGroupInfo)

-- | The response's http status code.
getDeploymentGroupResponse_httpStatus :: Lens' GetDeploymentGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance GHC.Show.Show Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance GHC.Read.Read Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroupResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroupResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroupResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.GetDeploymentGroup.GetDeploymentGroup


-- | Gets information about a deployment configuration.
module Network.AWS.CodeDeploy.GetDeploymentConfig

-- | Represents the input of a <tt>GetDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentConfig</a> smart constructor.
data GetDeploymentConfig
GetDeploymentConfig' :: Text -> GetDeploymentConfig

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
[$sel:deploymentConfigName:GetDeploymentConfig'] :: GetDeploymentConfig -> Text

-- | Create a value of <a>GetDeploymentConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:GetDeploymentConfig'</a>,
--   <a>getDeploymentConfig_deploymentConfigName</a> - The name of a
--   deployment configuration associated with the IAM user or AWS account.
newGetDeploymentConfig :: Text -> GetDeploymentConfig

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
getDeploymentConfig_deploymentConfigName :: Lens' GetDeploymentConfig Text

-- | Represents the output of a <tt>GetDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentConfigResponse</a> smart constructor.
data GetDeploymentConfigResponse
GetDeploymentConfigResponse' :: Maybe DeploymentConfigInfo -> Int -> GetDeploymentConfigResponse

-- | Information about the deployment configuration.
[$sel:deploymentConfigInfo:GetDeploymentConfigResponse'] :: GetDeploymentConfigResponse -> Maybe DeploymentConfigInfo

-- | The response's http status code.
[$sel:httpStatus:GetDeploymentConfigResponse'] :: GetDeploymentConfigResponse -> Int

-- | Create a value of <a>GetDeploymentConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigInfo:GetDeploymentConfigResponse'</a>,
--   <a>getDeploymentConfigResponse_deploymentConfigInfo</a> - Information
--   about the deployment configuration.
--   
--   <a>$sel:httpStatus:GetDeploymentConfigResponse'</a>,
--   <a>getDeploymentConfigResponse_httpStatus</a> - The response's http
--   status code.
newGetDeploymentConfigResponse :: Int -> GetDeploymentConfigResponse

-- | Information about the deployment configuration.
getDeploymentConfigResponse_deploymentConfigInfo :: Lens' GetDeploymentConfigResponse (Maybe DeploymentConfigInfo)

-- | The response's http status code.
getDeploymentConfigResponse_httpStatus :: Lens' GetDeploymentConfigResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance GHC.Show.Show Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance GHC.Read.Read Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfigResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfigResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfigResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.GetDeploymentConfig.GetDeploymentConfig


-- | Gets information about a deployment.
--   
--   The <tt>content</tt> property of the <tt>appSpecContent</tt> object in
--   the returned revision is always null. Use
--   <tt>GetApplicationRevision</tt> and the <tt>sha256</tt> property of
--   the returned <tt>appSpecContent</tt> object to get the content of the
--   deployment’s AppSpec file.
module Network.AWS.CodeDeploy.GetDeployment

-- | Represents the input of a <tt>GetDeployment</tt> operation.
--   
--   <i>See:</i> <a>newGetDeployment</a> smart constructor.
data GetDeployment
GetDeployment' :: Text -> GetDeployment

-- | The unique ID of a deployment associated with the IAM user or AWS
--   account.
[$sel:deploymentId:GetDeployment'] :: GetDeployment -> Text

-- | Create a value of <a>GetDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:GetDeployment'</a>,
--   <a>getDeployment_deploymentId</a> - The unique ID of a deployment
--   associated with the IAM user or AWS account.
newGetDeployment :: Text -> GetDeployment

-- | The unique ID of a deployment associated with the IAM user or AWS
--   account.
getDeployment_deploymentId :: Lens' GetDeployment Text

-- | Represents the output of a <tt>GetDeployment</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentResponse</a> smart constructor.
data GetDeploymentResponse
GetDeploymentResponse' :: Maybe DeploymentInfo -> Int -> GetDeploymentResponse

-- | Information about the deployment.
[$sel:deploymentInfo:GetDeploymentResponse'] :: GetDeploymentResponse -> Maybe DeploymentInfo

-- | The response's http status code.
[$sel:httpStatus:GetDeploymentResponse'] :: GetDeploymentResponse -> Int

-- | Create a value of <a>GetDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentInfo:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_deploymentInfo</a> - Information about the
--   deployment.
--   
--   <a>$sel:httpStatus:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_httpStatus</a> - The response's http status
--   code.
newGetDeploymentResponse :: Int -> GetDeploymentResponse

-- | Information about the deployment.
getDeploymentResponse_deploymentInfo :: Lens' GetDeploymentResponse (Maybe DeploymentInfo)

-- | The response's http status code.
getDeploymentResponse_httpStatus :: Lens' GetDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance GHC.Show.Show Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance GHC.Read.Read Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetDeployment.GetDeploymentResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.GetDeployment.GetDeploymentResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.GetDeployment.GetDeploymentResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetDeployment.GetDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetDeployment.GetDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.GetDeployment.GetDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.GetDeployment.GetDeployment


-- | Gets information about an application revision.
module Network.AWS.CodeDeploy.GetApplicationRevision

-- | Represents the input of a <tt>GetApplicationRevision</tt> operation.
--   
--   <i>See:</i> <a>newGetApplicationRevision</a> smart constructor.
data GetApplicationRevision
GetApplicationRevision' :: Text -> RevisionLocation -> GetApplicationRevision

-- | The name of the application that corresponds to the revision.
[$sel:applicationName:GetApplicationRevision'] :: GetApplicationRevision -> Text

-- | Information about the application revision to get, including type and
--   location.
[$sel:revision:GetApplicationRevision'] :: GetApplicationRevision -> RevisionLocation

-- | Create a value of <a>GetApplicationRevision</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:GetApplicationRevision'</a>,
--   <a>getApplicationRevision_applicationName</a> - The name of the
--   application that corresponds to the revision.
--   
--   <a>$sel:revision:GetApplicationRevision'</a>,
--   <a>getApplicationRevision_revision</a> - Information about the
--   application revision to get, including type and location.
newGetApplicationRevision :: Text -> RevisionLocation -> GetApplicationRevision

-- | The name of the application that corresponds to the revision.
getApplicationRevision_applicationName :: Lens' GetApplicationRevision Text

-- | Information about the application revision to get, including type and
--   location.
getApplicationRevision_revision :: Lens' GetApplicationRevision RevisionLocation

-- | Represents the output of a <tt>GetApplicationRevision</tt> operation.
--   
--   <i>See:</i> <a>newGetApplicationRevisionResponse</a> smart
--   constructor.
data GetApplicationRevisionResponse
GetApplicationRevisionResponse' :: Maybe GenericRevisionInfo -> Maybe RevisionLocation -> Maybe Text -> Int -> GetApplicationRevisionResponse

-- | General information about the revision.
[$sel:revisionInfo:GetApplicationRevisionResponse'] :: GetApplicationRevisionResponse -> Maybe GenericRevisionInfo

-- | Additional information about the revision, including type and
--   location.
[$sel:revision:GetApplicationRevisionResponse'] :: GetApplicationRevisionResponse -> Maybe RevisionLocation

-- | The name of the application that corresponds to the revision.
[$sel:applicationName:GetApplicationRevisionResponse'] :: GetApplicationRevisionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetApplicationRevisionResponse'] :: GetApplicationRevisionResponse -> Int

-- | Create a value of <a>GetApplicationRevisionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionInfo:GetApplicationRevisionResponse'</a>,
--   <a>getApplicationRevisionResponse_revisionInfo</a> - General
--   information about the revision.
--   
--   <a>$sel:revision:GetApplicationRevision'</a>,
--   <a>getApplicationRevisionResponse_revision</a> - Additional
--   information about the revision, including type and location.
--   
--   <a>$sel:applicationName:GetApplicationRevision'</a>,
--   <a>getApplicationRevisionResponse_applicationName</a> - The name of
--   the application that corresponds to the revision.
--   
--   <a>$sel:httpStatus:GetApplicationRevisionResponse'</a>,
--   <a>getApplicationRevisionResponse_httpStatus</a> - The response's http
--   status code.
newGetApplicationRevisionResponse :: Int -> GetApplicationRevisionResponse

-- | General information about the revision.
getApplicationRevisionResponse_revisionInfo :: Lens' GetApplicationRevisionResponse (Maybe GenericRevisionInfo)

-- | Additional information about the revision, including type and
--   location.
getApplicationRevisionResponse_revision :: Lens' GetApplicationRevisionResponse (Maybe RevisionLocation)

-- | The name of the application that corresponds to the revision.
getApplicationRevisionResponse_applicationName :: Lens' GetApplicationRevisionResponse (Maybe Text)

-- | The response's http status code.
getApplicationRevisionResponse_httpStatus :: Lens' GetApplicationRevisionResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance GHC.Show.Show Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance GHC.Read.Read Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevisionResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevisionResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevisionResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevisionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevisionResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.GetApplicationRevision.GetApplicationRevision


-- | Gets information about an application.
module Network.AWS.CodeDeploy.GetApplication

-- | Represents the input of a <tt>GetApplication</tt> operation.
--   
--   <i>See:</i> <a>newGetApplication</a> smart constructor.
data GetApplication
GetApplication' :: Text -> GetApplication

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:GetApplication'] :: GetApplication -> Text

-- | Create a value of <a>GetApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:GetApplication'</a>,
--   <a>getApplication_applicationName</a> - The name of an AWS CodeDeploy
--   application associated with the IAM user or AWS account.
newGetApplication :: Text -> GetApplication

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
getApplication_applicationName :: Lens' GetApplication Text

-- | Represents the output of a <tt>GetApplication</tt> operation.
--   
--   <i>See:</i> <a>newGetApplicationResponse</a> smart constructor.
data GetApplicationResponse
GetApplicationResponse' :: Maybe ApplicationInfo -> Int -> GetApplicationResponse

-- | Information about the application.
[$sel:application:GetApplicationResponse'] :: GetApplicationResponse -> Maybe ApplicationInfo

-- | The response's http status code.
[$sel:httpStatus:GetApplicationResponse'] :: GetApplicationResponse -> Int

-- | Create a value of <a>GetApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:application:GetApplicationResponse'</a>,
--   <a>getApplicationResponse_application</a> - Information about the
--   application.
--   
--   <a>$sel:httpStatus:GetApplicationResponse'</a>,
--   <a>getApplicationResponse_httpStatus</a> - The response's http status
--   code.
newGetApplicationResponse :: Int -> GetApplicationResponse

-- | Information about the application.
getApplicationResponse_application :: Lens' GetApplicationResponse (Maybe ApplicationInfo)

-- | The response's http status code.
getApplicationResponse_httpStatus :: Lens' GetApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetApplication.GetApplication
instance GHC.Show.Show Network.AWS.CodeDeploy.GetApplication.GetApplication
instance GHC.Read.Read Network.AWS.CodeDeploy.GetApplication.GetApplication
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetApplication.GetApplication
instance GHC.Generics.Generic Network.AWS.CodeDeploy.GetApplication.GetApplicationResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.GetApplication.GetApplicationResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.GetApplication.GetApplicationResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.GetApplication.GetApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.GetApplication.GetApplication
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetApplication.GetApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.GetApplication.GetApplication
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.GetApplication.GetApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.GetApplication.GetApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.GetApplication.GetApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.GetApplication.GetApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.GetApplication.GetApplication


-- | Deregisters an on-premises instance.
module Network.AWS.CodeDeploy.DeregisterOnPremisesInstance

-- | Represents the input of a <tt>DeregisterOnPremisesInstance</tt>
--   operation.
--   
--   <i>See:</i> <a>newDeregisterOnPremisesInstance</a> smart constructor.
data DeregisterOnPremisesInstance
DeregisterOnPremisesInstance' :: Text -> DeregisterOnPremisesInstance

-- | The name of the on-premises instance to deregister.
[$sel:instanceName:DeregisterOnPremisesInstance'] :: DeregisterOnPremisesInstance -> Text

-- | Create a value of <a>DeregisterOnPremisesInstance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceName:DeregisterOnPremisesInstance'</a>,
--   <a>deregisterOnPremisesInstance_instanceName</a> - The name of the
--   on-premises instance to deregister.
newDeregisterOnPremisesInstance :: Text -> DeregisterOnPremisesInstance

-- | The name of the on-premises instance to deregister.
deregisterOnPremisesInstance_instanceName :: Lens' DeregisterOnPremisesInstance Text

-- | <i>See:</i> <a>newDeregisterOnPremisesInstanceResponse</a> smart
--   constructor.
data DeregisterOnPremisesInstanceResponse
DeregisterOnPremisesInstanceResponse' :: DeregisterOnPremisesInstanceResponse

-- | Create a value of <a>DeregisterOnPremisesInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeregisterOnPremisesInstanceResponse :: DeregisterOnPremisesInstanceResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance GHC.Show.Show Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance GHC.Read.Read Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstanceResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstanceResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstanceResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.DeregisterOnPremisesInstance.DeregisterOnPremisesInstance


-- | Deletes resources linked to an external ID.
module Network.AWS.CodeDeploy.DeleteResourcesByExternalId

-- | <i>See:</i> <a>newDeleteResourcesByExternalId</a> smart constructor.
data DeleteResourcesByExternalId
DeleteResourcesByExternalId' :: Maybe Text -> DeleteResourcesByExternalId

-- | The unique ID of an external resource (for example, a CloudFormation
--   stack ID) that is linked to one or more CodeDeploy resources.
[$sel:externalId:DeleteResourcesByExternalId'] :: DeleteResourcesByExternalId -> Maybe Text

-- | Create a value of <a>DeleteResourcesByExternalId</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalId:DeleteResourcesByExternalId'</a>,
--   <a>deleteResourcesByExternalId_externalId</a> - The unique ID of an
--   external resource (for example, a CloudFormation stack ID) that is
--   linked to one or more CodeDeploy resources.
newDeleteResourcesByExternalId :: DeleteResourcesByExternalId

-- | The unique ID of an external resource (for example, a CloudFormation
--   stack ID) that is linked to one or more CodeDeploy resources.
deleteResourcesByExternalId_externalId :: Lens' DeleteResourcesByExternalId (Maybe Text)

-- | <i>See:</i> <a>newDeleteResourcesByExternalIdResponse</a> smart
--   constructor.
data DeleteResourcesByExternalIdResponse
DeleteResourcesByExternalIdResponse' :: Int -> DeleteResourcesByExternalIdResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteResourcesByExternalIdResponse'] :: DeleteResourcesByExternalIdResponse -> Int

-- | Create a value of <a>DeleteResourcesByExternalIdResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteResourcesByExternalIdResponse'</a>,
--   <a>deleteResourcesByExternalIdResponse_httpStatus</a> - The response's
--   http status code.
newDeleteResourcesByExternalIdResponse :: Int -> DeleteResourcesByExternalIdResponse

-- | The response's http status code.
deleteResourcesByExternalIdResponse_httpStatus :: Lens' DeleteResourcesByExternalIdResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalIdResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalIdResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalIdResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalIdResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalIdResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.DeleteResourcesByExternalId.DeleteResourcesByExternalId


-- | Deletes a GitHub account connection.
module Network.AWS.CodeDeploy.DeleteGitHubAccountToken

-- | Represents the input of a <tt>DeleteGitHubAccount</tt> operation.
--   
--   <i>See:</i> <a>newDeleteGitHubAccountToken</a> smart constructor.
data DeleteGitHubAccountToken
DeleteGitHubAccountToken' :: Maybe Text -> DeleteGitHubAccountToken

-- | The name of the GitHub account connection to delete.
[$sel:tokenName:DeleteGitHubAccountToken'] :: DeleteGitHubAccountToken -> Maybe Text

-- | Create a value of <a>DeleteGitHubAccountToken</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenName:DeleteGitHubAccountToken'</a>,
--   <a>deleteGitHubAccountToken_tokenName</a> - The name of the GitHub
--   account connection to delete.
newDeleteGitHubAccountToken :: DeleteGitHubAccountToken

-- | The name of the GitHub account connection to delete.
deleteGitHubAccountToken_tokenName :: Lens' DeleteGitHubAccountToken (Maybe Text)

-- | Represents the output of a <tt>DeleteGitHubAccountToken</tt>
--   operation.
--   
--   <i>See:</i> <a>newDeleteGitHubAccountTokenResponse</a> smart
--   constructor.
data DeleteGitHubAccountTokenResponse
DeleteGitHubAccountTokenResponse' :: Maybe Text -> Int -> DeleteGitHubAccountTokenResponse

-- | The name of the GitHub account connection that was deleted.
[$sel:tokenName:DeleteGitHubAccountTokenResponse'] :: DeleteGitHubAccountTokenResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteGitHubAccountTokenResponse'] :: DeleteGitHubAccountTokenResponse -> Int

-- | Create a value of <a>DeleteGitHubAccountTokenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenName:DeleteGitHubAccountToken'</a>,
--   <a>deleteGitHubAccountTokenResponse_tokenName</a> - The name of the
--   GitHub account connection that was deleted.
--   
--   <a>$sel:httpStatus:DeleteGitHubAccountTokenResponse'</a>,
--   <a>deleteGitHubAccountTokenResponse_httpStatus</a> - The response's
--   http status code.
newDeleteGitHubAccountTokenResponse :: Int -> DeleteGitHubAccountTokenResponse

-- | The name of the GitHub account connection that was deleted.
deleteGitHubAccountTokenResponse_tokenName :: Lens' DeleteGitHubAccountTokenResponse (Maybe Text)

-- | The response's http status code.
deleteGitHubAccountTokenResponse_httpStatus :: Lens' DeleteGitHubAccountTokenResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountTokenResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountTokenResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountTokenResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountTokenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountTokenResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.DeleteGitHubAccountToken.DeleteGitHubAccountToken


-- | Deletes a deployment group.
module Network.AWS.CodeDeploy.DeleteDeploymentGroup

-- | Represents the input of a <tt>DeleteDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteDeploymentGroup</a> smart constructor.
data DeleteDeploymentGroup
DeleteDeploymentGroup' :: Text -> Text -> DeleteDeploymentGroup

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:DeleteDeploymentGroup'] :: DeleteDeploymentGroup -> Text

-- | The name of a deployment group for the specified application.
[$sel:deploymentGroupName:DeleteDeploymentGroup'] :: DeleteDeploymentGroup -> Text

-- | Create a value of <a>DeleteDeploymentGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteDeploymentGroup'</a>,
--   <a>deleteDeploymentGroup_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
--   
--   <a>$sel:deploymentGroupName:DeleteDeploymentGroup'</a>,
--   <a>deleteDeploymentGroup_deploymentGroupName</a> - The name of a
--   deployment group for the specified application.
newDeleteDeploymentGroup :: Text -> Text -> DeleteDeploymentGroup

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
deleteDeploymentGroup_applicationName :: Lens' DeleteDeploymentGroup Text

-- | The name of a deployment group for the specified application.
deleteDeploymentGroup_deploymentGroupName :: Lens' DeleteDeploymentGroup Text

-- | Represents the output of a <tt>DeleteDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteDeploymentGroupResponse</a> smart constructor.
data DeleteDeploymentGroupResponse
DeleteDeploymentGroupResponse' :: Maybe [AutoScalingGroup] -> Int -> DeleteDeploymentGroupResponse

-- | If the output contains no data, and the corresponding deployment group
--   contained at least one Auto Scaling group, AWS CodeDeploy successfully
--   removed all corresponding Auto Scaling lifecycle event hooks from the
--   Amazon EC2 instances in the Auto Scaling group. If the output contains
--   data, AWS CodeDeploy could not remove some Auto Scaling lifecycle
--   event hooks from the Amazon EC2 instances in the Auto Scaling group.
[$sel:hooksNotCleanedUp:DeleteDeploymentGroupResponse'] :: DeleteDeploymentGroupResponse -> Maybe [AutoScalingGroup]

-- | The response's http status code.
[$sel:httpStatus:DeleteDeploymentGroupResponse'] :: DeleteDeploymentGroupResponse -> Int

-- | Create a value of <a>DeleteDeploymentGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hooksNotCleanedUp:DeleteDeploymentGroupResponse'</a>,
--   <a>deleteDeploymentGroupResponse_hooksNotCleanedUp</a> - If the output
--   contains no data, and the corresponding deployment group contained at
--   least one Auto Scaling group, AWS CodeDeploy successfully removed all
--   corresponding Auto Scaling lifecycle event hooks from the Amazon EC2
--   instances in the Auto Scaling group. If the output contains data, AWS
--   CodeDeploy could not remove some Auto Scaling lifecycle event hooks
--   from the Amazon EC2 instances in the Auto Scaling group.
--   
--   <a>$sel:httpStatus:DeleteDeploymentGroupResponse'</a>,
--   <a>deleteDeploymentGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDeploymentGroupResponse :: Int -> DeleteDeploymentGroupResponse

-- | If the output contains no data, and the corresponding deployment group
--   contained at least one Auto Scaling group, AWS CodeDeploy successfully
--   removed all corresponding Auto Scaling lifecycle event hooks from the
--   Amazon EC2 instances in the Auto Scaling group. If the output contains
--   data, AWS CodeDeploy could not remove some Auto Scaling lifecycle
--   event hooks from the Amazon EC2 instances in the Auto Scaling group.
deleteDeploymentGroupResponse_hooksNotCleanedUp :: Lens' DeleteDeploymentGroupResponse (Maybe [AutoScalingGroup])

-- | The response's http status code.
deleteDeploymentGroupResponse_httpStatus :: Lens' DeleteDeploymentGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroupResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroupResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroupResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.DeleteDeploymentGroup.DeleteDeploymentGroup


-- | Deletes a deployment configuration.
--   
--   A deployment configuration cannot be deleted if it is currently in
--   use. Predefined configurations cannot be deleted.
module Network.AWS.CodeDeploy.DeleteDeploymentConfig

-- | Represents the input of a <tt>DeleteDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newDeleteDeploymentConfig</a> smart constructor.
data DeleteDeploymentConfig
DeleteDeploymentConfig' :: Text -> DeleteDeploymentConfig

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
[$sel:deploymentConfigName:DeleteDeploymentConfig'] :: DeleteDeploymentConfig -> Text

-- | Create a value of <a>DeleteDeploymentConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:DeleteDeploymentConfig'</a>,
--   <a>deleteDeploymentConfig_deploymentConfigName</a> - The name of a
--   deployment configuration associated with the IAM user or AWS account.
newDeleteDeploymentConfig :: Text -> DeleteDeploymentConfig

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
deleteDeploymentConfig_deploymentConfigName :: Lens' DeleteDeploymentConfig Text

-- | <i>See:</i> <a>newDeleteDeploymentConfigResponse</a> smart
--   constructor.
data DeleteDeploymentConfigResponse
DeleteDeploymentConfigResponse' :: DeleteDeploymentConfigResponse

-- | Create a value of <a>DeleteDeploymentConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeploymentConfigResponse :: DeleteDeploymentConfigResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfigResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfigResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfigResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.DeleteDeploymentConfig.DeleteDeploymentConfig


-- | Deletes an application.
module Network.AWS.CodeDeploy.DeleteApplication

-- | Represents the input of a <tt>DeleteApplication</tt> operation.
--   
--   <i>See:</i> <a>newDeleteApplication</a> smart constructor.
data DeleteApplication
DeleteApplication' :: Text -> DeleteApplication

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:DeleteApplication'] :: DeleteApplication -> Text

-- | Create a value of <a>DeleteApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplication'</a>,
--   <a>deleteApplication_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
newDeleteApplication :: Text -> DeleteApplication

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
deleteApplication_applicationName :: Lens' DeleteApplication Text

-- | <i>See:</i> <a>newDeleteApplicationResponse</a> smart constructor.
data DeleteApplicationResponse
DeleteApplicationResponse' :: DeleteApplicationResponse

-- | Create a value of <a>DeleteApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApplicationResponse :: DeleteApplicationResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance GHC.Generics.Generic Network.AWS.CodeDeploy.DeleteApplication.DeleteApplicationResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.DeleteApplication.DeleteApplicationResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.DeleteApplication.DeleteApplicationResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.DeleteApplication.DeleteApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteApplication.DeleteApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.DeleteApplication.DeleteApplication


-- | Creates a deployment group to which application revisions are
--   deployed.
module Network.AWS.CodeDeploy.CreateDeploymentGroup

-- | Represents the input of a <tt>CreateDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentGroup</a> smart constructor.
data CreateDeploymentGroup
CreateDeploymentGroup' :: Maybe OnPremisesTagSet -> Maybe OutdatedInstancesStrategy -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe [TriggerConfig] -> Maybe [EC2TagFilter] -> Maybe [TagFilter] -> Maybe BlueGreenDeploymentConfiguration -> Maybe LoadBalancerInfo -> Maybe EC2TagSet -> Maybe [Tag] -> Maybe DeploymentStyle -> Maybe [Text] -> Maybe [ECSService] -> Maybe AlarmConfiguration -> Text -> Text -> Text -> CreateDeploymentGroup

-- | Information about groups of tags applied to on-premises instances. The
--   deployment group includes only on-premises instances identified by all
--   of the tag groups. Cannot be used in the same call as
--   <tt>onPremisesInstanceTagFilters</tt>.
[$sel:onPremisesTagSet:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe OnPremisesTagSet

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
[$sel:outdatedInstancesStrategy:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe OutdatedInstancesStrategy

-- | If specified, the deployment configuration name can be either one of
--   the predefined configurations provided with AWS CodeDeploy or a custom
--   deployment configuration that you create by calling the create
--   deployment configuration operation.
--   
--   <tt>CodeDeployDefault.OneAtATime</tt> is the default deployment
--   configuration. It is used if a configuration isn't specified for the
--   deployment or deployment group.
--   
--   For more information about the predefined deployment configurations in
--   AWS CodeDeploy, see <a>Working with Deployment Configurations in
--   CodeDeploy</a> in the <i>AWS CodeDeploy User Guide</i>.
[$sel:deploymentConfigName:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe Text

-- | Configuration information for an automatic rollback that is added when
--   a deployment group is created.
[$sel:autoRollbackConfiguration:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe AutoRollbackConfiguration

-- | Information about triggers to create when the deployment group is
--   created. For examples, see <a>Create a Trigger for an AWS CodeDeploy
--   Event</a> in the <i>AWS CodeDeploy User Guide</i>.
[$sel:triggerConfigurations:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe [TriggerConfig]

-- | The Amazon EC2 tags on which to filter. The deployment group includes
--   EC2 instances with any of the specified tags. Cannot be used in the
--   same call as ec2TagSet.
[$sel:ec2TagFilters:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe [EC2TagFilter]

-- | The on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags. Cannot
--   be used in the same call as <tt>OnPremisesTagSet</tt>.
[$sel:onPremisesInstanceTagFilters:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe [TagFilter]

-- | Information about blue/green deployment options for a deployment
--   group.
[$sel:blueGreenDeploymentConfiguration:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe BlueGreenDeploymentConfiguration

-- | Information about the load balancer used in a deployment.
[$sel:loadBalancerInfo:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe LoadBalancerInfo

-- | Information about groups of tags applied to EC2 instances. The
--   deployment group includes only EC2 instances identified by all the tag
--   groups. Cannot be used in the same call as <tt>ec2TagFilters</tt>.
[$sel:ec2TagSet:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe EC2TagSet

-- | The metadata that you apply to CodeDeploy deployment groups to help
--   you organize and categorize them. Each tag consists of a key and an
--   optional value, both of which you define.
[$sel:tags:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe [Tag]

-- | Information about the type of deployment, in-place or blue/green, that
--   you want to run and whether to route deployment traffic behind a load
--   balancer.
[$sel:deploymentStyle:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe DeploymentStyle

-- | A list of associated Amazon EC2 Auto Scaling groups.
[$sel:autoScalingGroups:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe [Text]

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
[$sel:ecsServices:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe [ECSService]

-- | Information to add about Amazon CloudWatch alarms when the deployment
--   group is created.
[$sel:alarmConfiguration:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Maybe AlarmConfiguration

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Text

-- | The name of a new deployment group for the specified application.
[$sel:deploymentGroupName:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Text

-- | A service role Amazon Resource Name (ARN) that allows AWS CodeDeploy
--   to act on the user's behalf when interacting with AWS services.
[$sel:serviceRoleArn:CreateDeploymentGroup'] :: CreateDeploymentGroup -> Text

-- | Create a value of <a>CreateDeploymentGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSet:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_onPremisesTagSet</a> - Information about
--   groups of tags applied to on-premises instances. The deployment group
--   includes only on-premises instances identified by all of the tag
--   groups. Cannot be used in the same call as
--   <tt>onPremisesInstanceTagFilters</tt>.
--   
--   <a>$sel:outdatedInstancesStrategy:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_outdatedInstancesStrategy</a> - Indicates
--   what happens when new EC2 instances are launched mid-deployment and do
--   not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
--   
--   <a>$sel:deploymentConfigName:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_deploymentConfigName</a> - If specified, the
--   deployment configuration name can be either one of the predefined
--   configurations provided with AWS CodeDeploy or a custom deployment
--   configuration that you create by calling the create deployment
--   configuration operation.
--   
--   <tt>CodeDeployDefault.OneAtATime</tt> is the default deployment
--   configuration. It is used if a configuration isn't specified for the
--   deployment or deployment group.
--   
--   For more information about the predefined deployment configurations in
--   AWS CodeDeploy, see <a>Working with Deployment Configurations in
--   CodeDeploy</a> in the <i>AWS CodeDeploy User Guide</i>.
--   
--   <a>$sel:autoRollbackConfiguration:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_autoRollbackConfiguration</a> - Configuration
--   information for an automatic rollback that is added when a deployment
--   group is created.
--   
--   <a>$sel:triggerConfigurations:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_triggerConfigurations</a> - Information about
--   triggers to create when the deployment group is created. For examples,
--   see <a>Create a Trigger for an AWS CodeDeploy Event</a> in the <i>AWS
--   CodeDeploy User Guide</i>.
--   
--   <a>$sel:ec2TagFilters:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_ec2TagFilters</a> - The Amazon EC2 tags on
--   which to filter. The deployment group includes EC2 instances with any
--   of the specified tags. Cannot be used in the same call as ec2TagSet.
--   
--   <a>$sel:onPremisesInstanceTagFilters:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_onPremisesInstanceTagFilters</a> - The
--   on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags. Cannot
--   be used in the same call as <tt>OnPremisesTagSet</tt>.
--   
--   <a>$sel:blueGreenDeploymentConfiguration:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_blueGreenDeploymentConfiguration</a> -
--   Information about blue/green deployment options for a deployment
--   group.
--   
--   <a>$sel:loadBalancerInfo:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_loadBalancerInfo</a> - Information about the
--   load balancer used in a deployment.
--   
--   <a>$sel:ec2TagSet:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_ec2TagSet</a> - Information about groups of
--   tags applied to EC2 instances. The deployment group includes only EC2
--   instances identified by all the tag groups. Cannot be used in the same
--   call as <tt>ec2TagFilters</tt>.
--   
--   <a>$sel:tags:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_tags</a> - The metadata that you apply to
--   CodeDeploy deployment groups to help you organize and categorize them.
--   Each tag consists of a key and an optional value, both of which you
--   define.
--   
--   <a>$sel:deploymentStyle:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_deploymentStyle</a> - Information about the
--   type of deployment, in-place or blue/green, that you want to run and
--   whether to route deployment traffic behind a load balancer.
--   
--   <a>$sel:autoScalingGroups:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_autoScalingGroups</a> - A list of associated
--   Amazon EC2 Auto Scaling groups.
--   
--   <a>$sel:ecsServices:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_ecsServices</a> - The target Amazon ECS
--   services in the deployment group. This applies only to deployment
--   groups that use the Amazon ECS compute platform. A target Amazon ECS
--   service is specified as an Amazon ECS cluster and service name pair
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   
--   <a>$sel:alarmConfiguration:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_alarmConfiguration</a> - Information to add
--   about Amazon CloudWatch alarms when the deployment group is created.
--   
--   <a>$sel:applicationName:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
--   
--   <a>$sel:deploymentGroupName:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_deploymentGroupName</a> - The name of a new
--   deployment group for the specified application.
--   
--   <a>$sel:serviceRoleArn:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_serviceRoleArn</a> - A service role Amazon
--   Resource Name (ARN) that allows AWS CodeDeploy to act on the user's
--   behalf when interacting with AWS services.
newCreateDeploymentGroup :: Text -> Text -> Text -> CreateDeploymentGroup

-- | Information about groups of tags applied to on-premises instances. The
--   deployment group includes only on-premises instances identified by all
--   of the tag groups. Cannot be used in the same call as
--   <tt>onPremisesInstanceTagFilters</tt>.
createDeploymentGroup_onPremisesTagSet :: Lens' CreateDeploymentGroup (Maybe OnPremisesTagSet)

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
createDeploymentGroup_outdatedInstancesStrategy :: Lens' CreateDeploymentGroup (Maybe OutdatedInstancesStrategy)

-- | If specified, the deployment configuration name can be either one of
--   the predefined configurations provided with AWS CodeDeploy or a custom
--   deployment configuration that you create by calling the create
--   deployment configuration operation.
--   
--   <tt>CodeDeployDefault.OneAtATime</tt> is the default deployment
--   configuration. It is used if a configuration isn't specified for the
--   deployment or deployment group.
--   
--   For more information about the predefined deployment configurations in
--   AWS CodeDeploy, see <a>Working with Deployment Configurations in
--   CodeDeploy</a> in the <i>AWS CodeDeploy User Guide</i>.
createDeploymentGroup_deploymentConfigName :: Lens' CreateDeploymentGroup (Maybe Text)

-- | Configuration information for an automatic rollback that is added when
--   a deployment group is created.
createDeploymentGroup_autoRollbackConfiguration :: Lens' CreateDeploymentGroup (Maybe AutoRollbackConfiguration)

-- | Information about triggers to create when the deployment group is
--   created. For examples, see <a>Create a Trigger for an AWS CodeDeploy
--   Event</a> in the <i>AWS CodeDeploy User Guide</i>.
createDeploymentGroup_triggerConfigurations :: Lens' CreateDeploymentGroup (Maybe [TriggerConfig])

-- | The Amazon EC2 tags on which to filter. The deployment group includes
--   EC2 instances with any of the specified tags. Cannot be used in the
--   same call as ec2TagSet.
createDeploymentGroup_ec2TagFilters :: Lens' CreateDeploymentGroup (Maybe [EC2TagFilter])

-- | The on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags. Cannot
--   be used in the same call as <tt>OnPremisesTagSet</tt>.
createDeploymentGroup_onPremisesInstanceTagFilters :: Lens' CreateDeploymentGroup (Maybe [TagFilter])

-- | Information about blue/green deployment options for a deployment
--   group.
createDeploymentGroup_blueGreenDeploymentConfiguration :: Lens' CreateDeploymentGroup (Maybe BlueGreenDeploymentConfiguration)

-- | Information about the load balancer used in a deployment.
createDeploymentGroup_loadBalancerInfo :: Lens' CreateDeploymentGroup (Maybe LoadBalancerInfo)

-- | Information about groups of tags applied to EC2 instances. The
--   deployment group includes only EC2 instances identified by all the tag
--   groups. Cannot be used in the same call as <tt>ec2TagFilters</tt>.
createDeploymentGroup_ec2TagSet :: Lens' CreateDeploymentGroup (Maybe EC2TagSet)

-- | The metadata that you apply to CodeDeploy deployment groups to help
--   you organize and categorize them. Each tag consists of a key and an
--   optional value, both of which you define.
createDeploymentGroup_tags :: Lens' CreateDeploymentGroup (Maybe [Tag])

-- | Information about the type of deployment, in-place or blue/green, that
--   you want to run and whether to route deployment traffic behind a load
--   balancer.
createDeploymentGroup_deploymentStyle :: Lens' CreateDeploymentGroup (Maybe DeploymentStyle)

-- | A list of associated Amazon EC2 Auto Scaling groups.
createDeploymentGroup_autoScalingGroups :: Lens' CreateDeploymentGroup (Maybe [Text])

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
createDeploymentGroup_ecsServices :: Lens' CreateDeploymentGroup (Maybe [ECSService])

-- | Information to add about Amazon CloudWatch alarms when the deployment
--   group is created.
createDeploymentGroup_alarmConfiguration :: Lens' CreateDeploymentGroup (Maybe AlarmConfiguration)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
createDeploymentGroup_applicationName :: Lens' CreateDeploymentGroup Text

-- | The name of a new deployment group for the specified application.
createDeploymentGroup_deploymentGroupName :: Lens' CreateDeploymentGroup Text

-- | A service role Amazon Resource Name (ARN) that allows AWS CodeDeploy
--   to act on the user's behalf when interacting with AWS services.
createDeploymentGroup_serviceRoleArn :: Lens' CreateDeploymentGroup Text

-- | Represents the output of a <tt>CreateDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentGroupResponse</a> smart constructor.
data CreateDeploymentGroupResponse
CreateDeploymentGroupResponse' :: Maybe Text -> Int -> CreateDeploymentGroupResponse

-- | A unique deployment group ID.
[$sel:deploymentGroupId:CreateDeploymentGroupResponse'] :: CreateDeploymentGroupResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDeploymentGroupResponse'] :: CreateDeploymentGroupResponse -> Int

-- | Create a value of <a>CreateDeploymentGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentGroupId:CreateDeploymentGroupResponse'</a>,
--   <a>createDeploymentGroupResponse_deploymentGroupId</a> - A unique
--   deployment group ID.
--   
--   <a>$sel:httpStatus:CreateDeploymentGroupResponse'</a>,
--   <a>createDeploymentGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentGroupResponse :: Int -> CreateDeploymentGroupResponse

-- | A unique deployment group ID.
createDeploymentGroupResponse_deploymentGroupId :: Lens' CreateDeploymentGroupResponse (Maybe Text)

-- | The response's http status code.
createDeploymentGroupResponse_httpStatus :: Lens' CreateDeploymentGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance GHC.Show.Show Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance GHC.Read.Read Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance GHC.Classes.Eq Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance GHC.Generics.Generic Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroupResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroupResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroupResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.CreateDeploymentGroup.CreateDeploymentGroup


-- | Creates a deployment configuration.
module Network.AWS.CodeDeploy.CreateDeploymentConfig

-- | Represents the input of a <tt>CreateDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentConfig</a> smart constructor.
data CreateDeploymentConfig
CreateDeploymentConfig' :: Maybe TrafficRoutingConfig -> Maybe MinimumHealthyHosts -> Maybe ComputePlatform -> Text -> CreateDeploymentConfig

-- | The configuration that specifies how the deployment traffic is routed.
[$sel:trafficRoutingConfig:CreateDeploymentConfig'] :: CreateDeploymentConfig -> Maybe TrafficRoutingConfig

-- | The minimum number of healthy instances that should be available at
--   any time during the deployment. There are two parameters expected in
--   the input: type and value.
--   
--   The type parameter takes either of the following values:
--   
--   <ul>
--   <li>HOST_COUNT: The value parameter represents the minimum number of
--   healthy instances as an absolute value.</li>
--   <li>FLEET_PERCENT: The value parameter represents the minimum number
--   of healthy instances as a percentage of the total number of instances
--   in the deployment. If you specify FLEET_PERCENT, at the start of the
--   deployment, AWS CodeDeploy converts the percentage to the equivalent
--   number of instances and rounds up fractional instances.</li>
--   </ul>
--   
--   The value parameter takes an integer.
--   
--   For example, to set a minimum of 95% healthy instance, specify a type
--   of FLEET_PERCENT and a value of 95.
[$sel:minimumHealthyHosts:CreateDeploymentConfig'] :: CreateDeploymentConfig -> Maybe MinimumHealthyHosts

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
[$sel:computePlatform:CreateDeploymentConfig'] :: CreateDeploymentConfig -> Maybe ComputePlatform

-- | The name of the deployment configuration to create.
[$sel:deploymentConfigName:CreateDeploymentConfig'] :: CreateDeploymentConfig -> Text

-- | Create a value of <a>CreateDeploymentConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trafficRoutingConfig:CreateDeploymentConfig'</a>,
--   <a>createDeploymentConfig_trafficRoutingConfig</a> - The configuration
--   that specifies how the deployment traffic is routed.
--   
--   <a>$sel:minimumHealthyHosts:CreateDeploymentConfig'</a>,
--   <a>createDeploymentConfig_minimumHealthyHosts</a> - The minimum number
--   of healthy instances that should be available at any time during the
--   deployment. There are two parameters expected in the input: type and
--   value.
--   
--   The type parameter takes either of the following values:
--   
--   <ul>
--   <li>HOST_COUNT: The value parameter represents the minimum number of
--   healthy instances as an absolute value.</li>
--   <li>FLEET_PERCENT: The value parameter represents the minimum number
--   of healthy instances as a percentage of the total number of instances
--   in the deployment. If you specify FLEET_PERCENT, at the start of the
--   deployment, AWS CodeDeploy converts the percentage to the equivalent
--   number of instances and rounds up fractional instances.</li>
--   </ul>
--   
--   The value parameter takes an integer.
--   
--   For example, to set a minimum of 95% healthy instance, specify a type
--   of FLEET_PERCENT and a value of 95.
--   
--   <a>$sel:computePlatform:CreateDeploymentConfig'</a>,
--   <a>createDeploymentConfig_computePlatform</a> - The destination
--   platform type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
--   
--   <a>$sel:deploymentConfigName:CreateDeploymentConfig'</a>,
--   <a>createDeploymentConfig_deploymentConfigName</a> - The name of the
--   deployment configuration to create.
newCreateDeploymentConfig :: Text -> CreateDeploymentConfig

-- | The configuration that specifies how the deployment traffic is routed.
createDeploymentConfig_trafficRoutingConfig :: Lens' CreateDeploymentConfig (Maybe TrafficRoutingConfig)

-- | The minimum number of healthy instances that should be available at
--   any time during the deployment. There are two parameters expected in
--   the input: type and value.
--   
--   The type parameter takes either of the following values:
--   
--   <ul>
--   <li>HOST_COUNT: The value parameter represents the minimum number of
--   healthy instances as an absolute value.</li>
--   <li>FLEET_PERCENT: The value parameter represents the minimum number
--   of healthy instances as a percentage of the total number of instances
--   in the deployment. If you specify FLEET_PERCENT, at the start of the
--   deployment, AWS CodeDeploy converts the percentage to the equivalent
--   number of instances and rounds up fractional instances.</li>
--   </ul>
--   
--   The value parameter takes an integer.
--   
--   For example, to set a minimum of 95% healthy instance, specify a type
--   of FLEET_PERCENT and a value of 95.
createDeploymentConfig_minimumHealthyHosts :: Lens' CreateDeploymentConfig (Maybe MinimumHealthyHosts)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
createDeploymentConfig_computePlatform :: Lens' CreateDeploymentConfig (Maybe ComputePlatform)

-- | The name of the deployment configuration to create.
createDeploymentConfig_deploymentConfigName :: Lens' CreateDeploymentConfig Text

-- | Represents the output of a <tt>CreateDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentConfigResponse</a> smart
--   constructor.
data CreateDeploymentConfigResponse
CreateDeploymentConfigResponse' :: Maybe Text -> Int -> CreateDeploymentConfigResponse

-- | A unique deployment configuration ID.
[$sel:deploymentConfigId:CreateDeploymentConfigResponse'] :: CreateDeploymentConfigResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDeploymentConfigResponse'] :: CreateDeploymentConfigResponse -> Int

-- | Create a value of <a>CreateDeploymentConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigId:CreateDeploymentConfigResponse'</a>,
--   <a>createDeploymentConfigResponse_deploymentConfigId</a> - A unique
--   deployment configuration ID.
--   
--   <a>$sel:httpStatus:CreateDeploymentConfigResponse'</a>,
--   <a>createDeploymentConfigResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentConfigResponse :: Int -> CreateDeploymentConfigResponse

-- | A unique deployment configuration ID.
createDeploymentConfigResponse_deploymentConfigId :: Lens' CreateDeploymentConfigResponse (Maybe Text)

-- | The response's http status code.
createDeploymentConfigResponse_httpStatus :: Lens' CreateDeploymentConfigResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance GHC.Show.Show Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance GHC.Read.Read Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance GHC.Classes.Eq Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance GHC.Generics.Generic Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfigResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfigResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfigResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.CreateDeploymentConfig.CreateDeploymentConfig


-- | Deploys an application revision through the specified deployment
--   group.
module Network.AWS.CodeDeploy.CreateDeployment

-- | Represents the input of a <tt>CreateDeployment</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeployment</a> smart constructor.
data CreateDeployment
CreateDeployment' :: Maybe Text -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe Bool -> Maybe Bool -> Maybe TargetInstances -> Maybe Text -> Maybe RevisionLocation -> Maybe FileExistsBehavior -> Text -> CreateDeployment

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
--   
--   If not specified, the value configured in the deployment group is used
--   as the default. If the deployment group does not have a deployment
--   configuration associated with it,
--   <tt>CodeDeployDefault</tt>.<tt>OneAtATime</tt> is used by default.
[$sel:deploymentConfigName:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | The name of the deployment group.
[$sel:deploymentGroupName:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | Configuration information for an automatic rollback that is added when
--   a deployment is created.
[$sel:autoRollbackConfiguration:CreateDeployment'] :: CreateDeployment -> Maybe AutoRollbackConfiguration

-- | Indicates whether to deploy to all instances or only to instances that
--   are not running the latest application revision.
[$sel:updateOutdatedInstancesOnly:CreateDeployment'] :: CreateDeployment -> Maybe Bool

-- | If true, then if an <tt>ApplicationStop</tt>,
--   <tt>BeforeBlockTraffic</tt>, or <tt>AfterBlockTraffic</tt> deployment
--   lifecycle event to an instance fails, then the deployment continues to
--   the next deployment lifecycle event. For example, if
--   <tt>ApplicationStop</tt> fails, the deployment continues with
--   <tt>DownloadBundle</tt>. If <tt>BeforeBlockTraffic</tt> fails, the
--   deployment continues with <tt>BlockTraffic</tt>. If
--   <tt>AfterBlockTraffic</tt> fails, the deployment continues with
--   <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
[$sel:ignoreApplicationStopFailures:CreateDeployment'] :: CreateDeployment -> Maybe Bool

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
[$sel:targetInstances:CreateDeployment'] :: CreateDeployment -> Maybe TargetInstances

-- | A comment about the deployment.
[$sel:description:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | The type and location of the revision to deploy.
[$sel:revision:CreateDeployment'] :: CreateDeployment -> Maybe RevisionLocation

-- | Information about how AWS CodeDeploy handles files that already exist
--   in a deployment target location but weren't part of the previous
--   successful deployment.
--   
--   The <tt>fileExistsBehavior</tt> parameter takes any of the following
--   values:
--   
--   <ul>
--   <li>DISALLOW: The deployment fails. This is also the default behavior
--   if no option is specified.</li>
--   <li>OVERWRITE: The version of the file from the application revision
--   currently being deployed replaces the version already on the
--   instance.</li>
--   <li>RETAIN: The version of the file already on the instance is kept
--   and used as part of the new deployment.</li>
--   </ul>
[$sel:fileExistsBehavior:CreateDeployment'] :: CreateDeployment -> Maybe FileExistsBehavior

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
[$sel:applicationName:CreateDeployment'] :: CreateDeployment -> Text

-- | Create a value of <a>CreateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:CreateDeployment'</a>,
--   <a>createDeployment_deploymentConfigName</a> - The name of a
--   deployment configuration associated with the IAM user or AWS account.
--   
--   If not specified, the value configured in the deployment group is used
--   as the default. If the deployment group does not have a deployment
--   configuration associated with it,
--   <tt>CodeDeployDefault</tt>.<tt>OneAtATime</tt> is used by default.
--   
--   <a>$sel:deploymentGroupName:CreateDeployment'</a>,
--   <a>createDeployment_deploymentGroupName</a> - The name of the
--   deployment group.
--   
--   <a>$sel:autoRollbackConfiguration:CreateDeployment'</a>,
--   <a>createDeployment_autoRollbackConfiguration</a> - Configuration
--   information for an automatic rollback that is added when a deployment
--   is created.
--   
--   <a>$sel:updateOutdatedInstancesOnly:CreateDeployment'</a>,
--   <a>createDeployment_updateOutdatedInstancesOnly</a> - Indicates
--   whether to deploy to all instances or only to instances that are not
--   running the latest application revision.
--   
--   <a>$sel:ignoreApplicationStopFailures:CreateDeployment'</a>,
--   <a>createDeployment_ignoreApplicationStopFailures</a> - If true, then
--   if an <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, or
--   <tt>AfterBlockTraffic</tt> deployment lifecycle event to an instance
--   fails, then the deployment continues to the next deployment lifecycle
--   event. For example, if <tt>ApplicationStop</tt> fails, the deployment
--   continues with <tt>DownloadBundle</tt>. If <tt>BeforeBlockTraffic</tt>
--   fails, the deployment continues with <tt>BlockTraffic</tt>. If
--   <tt>AfterBlockTraffic</tt> fails, the deployment continues with
--   <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
--   
--   <a>$sel:targetInstances:CreateDeployment'</a>,
--   <a>createDeployment_targetInstances</a> - Information about the
--   instances that belong to the replacement environment in a blue/green
--   deployment.
--   
--   <a>$sel:description:CreateDeployment'</a>,
--   <a>createDeployment_description</a> - A comment about the deployment.
--   
--   <a>$sel:revision:CreateDeployment'</a>,
--   <a>createDeployment_revision</a> - The type and location of the
--   revision to deploy.
--   
--   <a>$sel:fileExistsBehavior:CreateDeployment'</a>,
--   <a>createDeployment_fileExistsBehavior</a> - Information about how AWS
--   CodeDeploy handles files that already exist in a deployment target
--   location but weren't part of the previous successful deployment.
--   
--   The <tt>fileExistsBehavior</tt> parameter takes any of the following
--   values:
--   
--   <ul>
--   <li>DISALLOW: The deployment fails. This is also the default behavior
--   if no option is specified.</li>
--   <li>OVERWRITE: The version of the file from the application revision
--   currently being deployed replaces the version already on the
--   instance.</li>
--   <li>RETAIN: The version of the file already on the instance is kept
--   and used as part of the new deployment.</li>
--   </ul>
--   
--   <a>$sel:applicationName:CreateDeployment'</a>,
--   <a>createDeployment_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
newCreateDeployment :: Text -> CreateDeployment

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
--   
--   If not specified, the value configured in the deployment group is used
--   as the default. If the deployment group does not have a deployment
--   configuration associated with it,
--   <tt>CodeDeployDefault</tt>.<tt>OneAtATime</tt> is used by default.
createDeployment_deploymentConfigName :: Lens' CreateDeployment (Maybe Text)

-- | The name of the deployment group.
createDeployment_deploymentGroupName :: Lens' CreateDeployment (Maybe Text)

-- | Configuration information for an automatic rollback that is added when
--   a deployment is created.
createDeployment_autoRollbackConfiguration :: Lens' CreateDeployment (Maybe AutoRollbackConfiguration)

-- | Indicates whether to deploy to all instances or only to instances that
--   are not running the latest application revision.
createDeployment_updateOutdatedInstancesOnly :: Lens' CreateDeployment (Maybe Bool)

-- | If true, then if an <tt>ApplicationStop</tt>,
--   <tt>BeforeBlockTraffic</tt>, or <tt>AfterBlockTraffic</tt> deployment
--   lifecycle event to an instance fails, then the deployment continues to
--   the next deployment lifecycle event. For example, if
--   <tt>ApplicationStop</tt> fails, the deployment continues with
--   <tt>DownloadBundle</tt>. If <tt>BeforeBlockTraffic</tt> fails, the
--   deployment continues with <tt>BlockTraffic</tt>. If
--   <tt>AfterBlockTraffic</tt> fails, the deployment continues with
--   <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
createDeployment_ignoreApplicationStopFailures :: Lens' CreateDeployment (Maybe Bool)

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
createDeployment_targetInstances :: Lens' CreateDeployment (Maybe TargetInstances)

-- | A comment about the deployment.
createDeployment_description :: Lens' CreateDeployment (Maybe Text)

-- | The type and location of the revision to deploy.
createDeployment_revision :: Lens' CreateDeployment (Maybe RevisionLocation)

-- | Information about how AWS CodeDeploy handles files that already exist
--   in a deployment target location but weren't part of the previous
--   successful deployment.
--   
--   The <tt>fileExistsBehavior</tt> parameter takes any of the following
--   values:
--   
--   <ul>
--   <li>DISALLOW: The deployment fails. This is also the default behavior
--   if no option is specified.</li>
--   <li>OVERWRITE: The version of the file from the application revision
--   currently being deployed replaces the version already on the
--   instance.</li>
--   <li>RETAIN: The version of the file already on the instance is kept
--   and used as part of the new deployment.</li>
--   </ul>
createDeployment_fileExistsBehavior :: Lens' CreateDeployment (Maybe FileExistsBehavior)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
createDeployment_applicationName :: Lens' CreateDeployment Text

-- | Represents the output of a <tt>CreateDeployment</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentResponse</a> smart constructor.
data CreateDeploymentResponse
CreateDeploymentResponse' :: Maybe Text -> Int -> CreateDeploymentResponse

-- | The unique ID of a deployment.
[$sel:deploymentId:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Int

-- | Create a value of <a>CreateDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentId</a> - The unique ID of a
--   deployment.
--   
--   <a>$sel:httpStatus:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentResponse :: Int -> CreateDeploymentResponse

-- | The unique ID of a deployment.
createDeploymentResponse_deploymentId :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The response's http status code.
createDeploymentResponse_httpStatus :: Lens' CreateDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance GHC.Show.Show Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance GHC.Read.Read Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance GHC.Classes.Eq Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance GHC.Generics.Generic Network.AWS.CodeDeploy.CreateDeployment.CreateDeploymentResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.CreateDeployment.CreateDeploymentResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.CreateDeployment.CreateDeploymentResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.CreateDeployment.CreateDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.CreateDeployment.CreateDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.CreateDeployment.CreateDeployment


-- | Creates an application.
module Network.AWS.CodeDeploy.CreateApplication

-- | Represents the input of a <tt>CreateApplication</tt> operation.
--   
--   <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe [Tag] -> Maybe ComputePlatform -> Text -> CreateApplication

-- | The metadata that you apply to CodeDeploy applications to help you
--   organize and categorize them. Each tag consists of a key and an
--   optional value, both of which you define.
[$sel:tags:CreateApplication'] :: CreateApplication -> Maybe [Tag]

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
[$sel:computePlatform:CreateApplication'] :: CreateApplication -> Maybe ComputePlatform

-- | The name of the application. This name must be unique with the
--   applicable IAM user or AWS account.
[$sel:applicationName:CreateApplication'] :: CreateApplication -> Text

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateApplication'</a>, <a>createApplication_tags</a> -
--   The metadata that you apply to CodeDeploy applications to help you
--   organize and categorize them. Each tag consists of a key and an
--   optional value, both of which you define.
--   
--   <a>$sel:computePlatform:CreateApplication'</a>,
--   <a>createApplication_computePlatform</a> - The destination platform
--   type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
--   
--   <a>$sel:applicationName:CreateApplication'</a>,
--   <a>createApplication_applicationName</a> - The name of the
--   application. This name must be unique with the applicable IAM user or
--   AWS account.
newCreateApplication :: Text -> CreateApplication

-- | The metadata that you apply to CodeDeploy applications to help you
--   organize and categorize them. Each tag consists of a key and an
--   optional value, both of which you define.
createApplication_tags :: Lens' CreateApplication (Maybe [Tag])

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
createApplication_computePlatform :: Lens' CreateApplication (Maybe ComputePlatform)

-- | The name of the application. This name must be unique with the
--   applicable IAM user or AWS account.
createApplication_applicationName :: Lens' CreateApplication Text

-- | Represents the output of a <tt>CreateApplication</tt> operation.
--   
--   <i>See:</i> <a>newCreateApplicationResponse</a> smart constructor.
data CreateApplicationResponse
CreateApplicationResponse' :: Maybe Text -> Int -> CreateApplicationResponse

-- | A unique application ID.
[$sel:applicationId:CreateApplicationResponse'] :: CreateApplicationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateApplicationResponse'] :: CreateApplicationResponse -> Int

-- | Create a value of <a>CreateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_applicationId</a> - A unique application
--   ID.
--   
--   <a>$sel:httpStatus:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_httpStatus</a> - The response's http
--   status code.
newCreateApplicationResponse :: Int -> CreateApplicationResponse

-- | A unique application ID.
createApplicationResponse_applicationId :: Lens' CreateApplicationResponse (Maybe Text)

-- | The response's http status code.
createApplicationResponse_httpStatus :: Lens' CreateApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance GHC.Show.Show Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance GHC.Read.Read Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance GHC.Classes.Eq Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance GHC.Generics.Generic Network.AWS.CodeDeploy.CreateApplication.CreateApplicationResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.CreateApplication.CreateApplicationResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.CreateApplication.CreateApplicationResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.CreateApplication.CreateApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.CreateApplication.CreateApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.CreateApplication.CreateApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.CreateApplication.CreateApplication


-- | For a blue/green deployment, starts the process of rerouting traffic
--   from instances in the original environment to instances in the
--   replacement environment without waiting for a specified wait time to
--   elapse. (Traffic rerouting, which is achieved by registering instances
--   in the replacement environment with the load balancer, can start as
--   soon as all instances have a status of Ready.)
module Network.AWS.CodeDeploy.ContinueDeployment

-- | <i>See:</i> <a>newContinueDeployment</a> smart constructor.
data ContinueDeployment
ContinueDeployment' :: Maybe Text -> Maybe DeploymentWaitType -> ContinueDeployment

-- | The unique ID of a blue/green deployment for which you want to start
--   rerouting traffic to the replacement environment.
[$sel:deploymentId:ContinueDeployment'] :: ContinueDeployment -> Maybe Text

-- | The status of the deployment's waiting period. <tt>READY_WAIT</tt>
--   indicates that the deployment is ready to start shifting traffic.
--   <tt>TERMINATION_WAIT</tt> indicates that the traffic is shifted, but
--   the original target is not terminated.
[$sel:deploymentWaitType:ContinueDeployment'] :: ContinueDeployment -> Maybe DeploymentWaitType

-- | Create a value of <a>ContinueDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:ContinueDeployment'</a>,
--   <a>continueDeployment_deploymentId</a> - The unique ID of a blue/green
--   deployment for which you want to start rerouting traffic to the
--   replacement environment.
--   
--   <a>$sel:deploymentWaitType:ContinueDeployment'</a>,
--   <a>continueDeployment_deploymentWaitType</a> - The status of the
--   deployment's waiting period. <tt>READY_WAIT</tt> indicates that the
--   deployment is ready to start shifting traffic.
--   <tt>TERMINATION_WAIT</tt> indicates that the traffic is shifted, but
--   the original target is not terminated.
newContinueDeployment :: ContinueDeployment

-- | The unique ID of a blue/green deployment for which you want to start
--   rerouting traffic to the replacement environment.
continueDeployment_deploymentId :: Lens' ContinueDeployment (Maybe Text)

-- | The status of the deployment's waiting period. <tt>READY_WAIT</tt>
--   indicates that the deployment is ready to start shifting traffic.
--   <tt>TERMINATION_WAIT</tt> indicates that the traffic is shifted, but
--   the original target is not terminated.
continueDeployment_deploymentWaitType :: Lens' ContinueDeployment (Maybe DeploymentWaitType)

-- | <i>See:</i> <a>newContinueDeploymentResponse</a> smart constructor.
data ContinueDeploymentResponse
ContinueDeploymentResponse' :: ContinueDeploymentResponse

-- | Create a value of <a>ContinueDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newContinueDeploymentResponse :: ContinueDeploymentResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance GHC.Show.Show Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance GHC.Read.Read Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance GHC.Generics.Generic Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeploymentResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeploymentResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeploymentResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.ContinueDeployment.ContinueDeployment


-- | Gets information about one or more on-premises instances. The maximum
--   number of on-premises instances that can be returned is 25.
module Network.AWS.CodeDeploy.BatchGetOnPremisesInstances

-- | Represents the input of a <tt>BatchGetOnPremisesInstances</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetOnPremisesInstances</a> smart constructor.
data BatchGetOnPremisesInstances
BatchGetOnPremisesInstances' :: [Text] -> BatchGetOnPremisesInstances

-- | The names of the on-premises instances about which to get information.
--   The maximum number of instance names you can specify is 25.
[$sel:instanceNames:BatchGetOnPremisesInstances'] :: BatchGetOnPremisesInstances -> [Text]

-- | Create a value of <a>BatchGetOnPremisesInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceNames:BatchGetOnPremisesInstances'</a>,
--   <a>batchGetOnPremisesInstances_instanceNames</a> - The names of the
--   on-premises instances about which to get information. The maximum
--   number of instance names you can specify is 25.
newBatchGetOnPremisesInstances :: BatchGetOnPremisesInstances

-- | The names of the on-premises instances about which to get information.
--   The maximum number of instance names you can specify is 25.
batchGetOnPremisesInstances_instanceNames :: Lens' BatchGetOnPremisesInstances [Text]

-- | Represents the output of a <tt>BatchGetOnPremisesInstances</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetOnPremisesInstancesResponse</a> smart
--   constructor.
data BatchGetOnPremisesInstancesResponse
BatchGetOnPremisesInstancesResponse' :: Maybe [InstanceInfo] -> Int -> BatchGetOnPremisesInstancesResponse

-- | Information about the on-premises instances.
[$sel:instanceInfos:BatchGetOnPremisesInstancesResponse'] :: BatchGetOnPremisesInstancesResponse -> Maybe [InstanceInfo]

-- | The response's http status code.
[$sel:httpStatus:BatchGetOnPremisesInstancesResponse'] :: BatchGetOnPremisesInstancesResponse -> Int

-- | Create a value of <a>BatchGetOnPremisesInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceInfos:BatchGetOnPremisesInstancesResponse'</a>,
--   <a>batchGetOnPremisesInstancesResponse_instanceInfos</a> - Information
--   about the on-premises instances.
--   
--   <a>$sel:httpStatus:BatchGetOnPremisesInstancesResponse'</a>,
--   <a>batchGetOnPremisesInstancesResponse_httpStatus</a> - The response's
--   http status code.
newBatchGetOnPremisesInstancesResponse :: Int -> BatchGetOnPremisesInstancesResponse

-- | Information about the on-premises instances.
batchGetOnPremisesInstancesResponse_instanceInfos :: Lens' BatchGetOnPremisesInstancesResponse (Maybe [InstanceInfo])

-- | The response's http status code.
batchGetOnPremisesInstancesResponse_httpStatus :: Lens' BatchGetOnPremisesInstancesResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstancesResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstancesResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstancesResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstancesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.BatchGetOnPremisesInstances.BatchGetOnPremisesInstances


-- | Gets information about one or more deployments. The maximum number of
--   deployments that can be returned is 25.
module Network.AWS.CodeDeploy.BatchGetDeployments

-- | Represents the input of a <tt>BatchGetDeployments</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetDeployments</a> smart constructor.
data BatchGetDeployments
BatchGetDeployments' :: [Text] -> BatchGetDeployments

-- | A list of deployment IDs, separated by spaces. The maximum number of
--   deployment IDs you can specify is 25.
[$sel:deploymentIds:BatchGetDeployments'] :: BatchGetDeployments -> [Text]

-- | Create a value of <a>BatchGetDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentIds:BatchGetDeployments'</a>,
--   <a>batchGetDeployments_deploymentIds</a> - A list of deployment IDs,
--   separated by spaces. The maximum number of deployment IDs you can
--   specify is 25.
newBatchGetDeployments :: BatchGetDeployments

-- | A list of deployment IDs, separated by spaces. The maximum number of
--   deployment IDs you can specify is 25.
batchGetDeployments_deploymentIds :: Lens' BatchGetDeployments [Text]

-- | Represents the output of a <tt>BatchGetDeployments</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetDeploymentsResponse</a> smart constructor.
data BatchGetDeploymentsResponse
BatchGetDeploymentsResponse' :: Maybe [DeploymentInfo] -> Int -> BatchGetDeploymentsResponse

-- | Information about the deployments.
[$sel:deploymentsInfo:BatchGetDeploymentsResponse'] :: BatchGetDeploymentsResponse -> Maybe [DeploymentInfo]

-- | The response's http status code.
[$sel:httpStatus:BatchGetDeploymentsResponse'] :: BatchGetDeploymentsResponse -> Int

-- | Create a value of <a>BatchGetDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentsInfo:BatchGetDeploymentsResponse'</a>,
--   <a>batchGetDeploymentsResponse_deploymentsInfo</a> - Information about
--   the deployments.
--   
--   <a>$sel:httpStatus:BatchGetDeploymentsResponse'</a>,
--   <a>batchGetDeploymentsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetDeploymentsResponse :: Int -> BatchGetDeploymentsResponse

-- | Information about the deployments.
batchGetDeploymentsResponse_deploymentsInfo :: Lens' BatchGetDeploymentsResponse (Maybe [DeploymentInfo])

-- | The response's http status code.
batchGetDeploymentsResponse_httpStatus :: Lens' BatchGetDeploymentsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeploymentsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeploymentsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeploymentsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeploymentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeploymentsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.BatchGetDeployments.BatchGetDeployments


-- | Returns an array of one or more targets associated with a deployment.
--   This method works with all compute types and should be used instead of
--   the deprecated <tt>BatchGetDeploymentInstances</tt>. The maximum
--   number of targets that can be returned is 25.
--   
--   The type of targets returned depends on the deployment's compute
--   platform or deployment method:
--   
--   <ul>
--   <li><b>EC2/On-premises</b>: Information about EC2 instance
--   targets.</li>
--   <li><b>AWS Lambda</b>: Information about Lambda functions
--   targets.</li>
--   <li><b>Amazon ECS</b>: Information about Amazon ECS service
--   targets.</li>
--   <li><b>CloudFormation</b>: Information about targets of blue/green
--   deployments initiated by a CloudFormation stack update.</li>
--   </ul>
module Network.AWS.CodeDeploy.BatchGetDeploymentTargets

-- | <i>See:</i> <a>newBatchGetDeploymentTargets</a> smart constructor.
data BatchGetDeploymentTargets
BatchGetDeploymentTargets' :: Maybe [Text] -> Maybe Text -> BatchGetDeploymentTargets

-- | The unique IDs of the deployment targets. The compute platform of the
--   deployment determines the type of the targets and their formats. The
--   maximum number of deployment target IDs you can specify is 25.
--   
--   <ul>
--   <li>For deployments that use the EC2/On-premises compute platform, the
--   target IDs are EC2 or on-premises instances IDs, and their target type
--   is <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the AWS Lambda compute platform, the
--   target IDs are the names of Lambda functions, and their target type is
--   <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the Amazon ECS compute platform, the
--   target IDs are pairs of Amazon ECS clusters and services specified
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   Their target type is <tt>ecsTarget</tt>.</li>
--   <li>For deployments that are deployed with AWS CloudFormation, the
--   target IDs are CloudFormation stack IDs. Their target type is
--   <tt>cloudFormationTarget</tt>.</li>
--   </ul>
[$sel:targetIds:BatchGetDeploymentTargets'] :: BatchGetDeploymentTargets -> Maybe [Text]

-- | The unique ID of a deployment.
[$sel:deploymentId:BatchGetDeploymentTargets'] :: BatchGetDeploymentTargets -> Maybe Text

-- | Create a value of <a>BatchGetDeploymentTargets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetIds:BatchGetDeploymentTargets'</a>,
--   <a>batchGetDeploymentTargets_targetIds</a> - The unique IDs of the
--   deployment targets. The compute platform of the deployment determines
--   the type of the targets and their formats. The maximum number of
--   deployment target IDs you can specify is 25.
--   
--   <ul>
--   <li>For deployments that use the EC2/On-premises compute platform, the
--   target IDs are EC2 or on-premises instances IDs, and their target type
--   is <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the AWS Lambda compute platform, the
--   target IDs are the names of Lambda functions, and their target type is
--   <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the Amazon ECS compute platform, the
--   target IDs are pairs of Amazon ECS clusters and services specified
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   Their target type is <tt>ecsTarget</tt>.</li>
--   <li>For deployments that are deployed with AWS CloudFormation, the
--   target IDs are CloudFormation stack IDs. Their target type is
--   <tt>cloudFormationTarget</tt>.</li>
--   </ul>
--   
--   <a>$sel:deploymentId:BatchGetDeploymentTargets'</a>,
--   <a>batchGetDeploymentTargets_deploymentId</a> - The unique ID of a
--   deployment.
newBatchGetDeploymentTargets :: BatchGetDeploymentTargets

-- | The unique IDs of the deployment targets. The compute platform of the
--   deployment determines the type of the targets and their formats. The
--   maximum number of deployment target IDs you can specify is 25.
--   
--   <ul>
--   <li>For deployments that use the EC2/On-premises compute platform, the
--   target IDs are EC2 or on-premises instances IDs, and their target type
--   is <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the AWS Lambda compute platform, the
--   target IDs are the names of Lambda functions, and their target type is
--   <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the Amazon ECS compute platform, the
--   target IDs are pairs of Amazon ECS clusters and services specified
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   Their target type is <tt>ecsTarget</tt>.</li>
--   <li>For deployments that are deployed with AWS CloudFormation, the
--   target IDs are CloudFormation stack IDs. Their target type is
--   <tt>cloudFormationTarget</tt>.</li>
--   </ul>
batchGetDeploymentTargets_targetIds :: Lens' BatchGetDeploymentTargets (Maybe [Text])

-- | The unique ID of a deployment.
batchGetDeploymentTargets_deploymentId :: Lens' BatchGetDeploymentTargets (Maybe Text)

-- | <i>See:</i> <a>newBatchGetDeploymentTargetsResponse</a> smart
--   constructor.
data BatchGetDeploymentTargetsResponse
BatchGetDeploymentTargetsResponse' :: Maybe [DeploymentTarget] -> Int -> BatchGetDeploymentTargetsResponse

-- | A list of target objects for a deployment. Each target object contains
--   details about the target, such as its status and lifecycle events. The
--   type of the target objects depends on the deployment' compute
--   platform.
--   
--   <ul>
--   <li><b>EC2/On-premises</b>: Each target object is an EC2 or
--   on-premises instance.</li>
--   <li><b>AWS Lambda</b>: The target object is a specific version of an
--   AWS Lambda function.</li>
--   <li><b>Amazon ECS</b>: The target object is an Amazon ECS
--   service.</li>
--   <li><b>CloudFormation</b>: The target object is an AWS CloudFormation
--   blue/green deployment.</li>
--   </ul>
[$sel:deploymentTargets:BatchGetDeploymentTargetsResponse'] :: BatchGetDeploymentTargetsResponse -> Maybe [DeploymentTarget]

-- | The response's http status code.
[$sel:httpStatus:BatchGetDeploymentTargetsResponse'] :: BatchGetDeploymentTargetsResponse -> Int

-- | Create a value of <a>BatchGetDeploymentTargetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentTargets:BatchGetDeploymentTargetsResponse'</a>,
--   <a>batchGetDeploymentTargetsResponse_deploymentTargets</a> - A list of
--   target objects for a deployment. Each target object contains details
--   about the target, such as its status and lifecycle events. The type of
--   the target objects depends on the deployment' compute platform.
--   
--   <ul>
--   <li><b>EC2/On-premises</b>: Each target object is an EC2 or
--   on-premises instance.</li>
--   <li><b>AWS Lambda</b>: The target object is a specific version of an
--   AWS Lambda function.</li>
--   <li><b>Amazon ECS</b>: The target object is an Amazon ECS
--   service.</li>
--   <li><b>CloudFormation</b>: The target object is an AWS CloudFormation
--   blue/green deployment.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:BatchGetDeploymentTargetsResponse'</a>,
--   <a>batchGetDeploymentTargetsResponse_httpStatus</a> - The response's
--   http status code.
newBatchGetDeploymentTargetsResponse :: Int -> BatchGetDeploymentTargetsResponse

-- | A list of target objects for a deployment. Each target object contains
--   details about the target, such as its status and lifecycle events. The
--   type of the target objects depends on the deployment' compute
--   platform.
--   
--   <ul>
--   <li><b>EC2/On-premises</b>: Each target object is an EC2 or
--   on-premises instance.</li>
--   <li><b>AWS Lambda</b>: The target object is a specific version of an
--   AWS Lambda function.</li>
--   <li><b>Amazon ECS</b>: The target object is an Amazon ECS
--   service.</li>
--   <li><b>CloudFormation</b>: The target object is an AWS CloudFormation
--   blue/green deployment.</li>
--   </ul>
batchGetDeploymentTargetsResponse_deploymentTargets :: Lens' BatchGetDeploymentTargetsResponse (Maybe [DeploymentTarget])

-- | The response's http status code.
batchGetDeploymentTargetsResponse_httpStatus :: Lens' BatchGetDeploymentTargetsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargetsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargetsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargetsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargetsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.BatchGetDeploymentTargets.BatchGetDeploymentTargets


-- | Gets information about one or more deployment groups.
module Network.AWS.CodeDeploy.BatchGetDeploymentGroups

-- | Represents the input of a <tt>BatchGetDeploymentGroups</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetDeploymentGroups</a> smart constructor.
data BatchGetDeploymentGroups
BatchGetDeploymentGroups' :: Text -> [Text] -> BatchGetDeploymentGroups

-- | The name of an AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
[$sel:applicationName:BatchGetDeploymentGroups'] :: BatchGetDeploymentGroups -> Text

-- | The names of the deployment groups.
[$sel:deploymentGroupNames:BatchGetDeploymentGroups'] :: BatchGetDeploymentGroups -> [Text]

-- | Create a value of <a>BatchGetDeploymentGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:BatchGetDeploymentGroups'</a>,
--   <a>batchGetDeploymentGroups_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the applicable IAM user or AWS
--   account.
--   
--   <a>$sel:deploymentGroupNames:BatchGetDeploymentGroups'</a>,
--   <a>batchGetDeploymentGroups_deploymentGroupNames</a> - The names of
--   the deployment groups.
newBatchGetDeploymentGroups :: Text -> BatchGetDeploymentGroups

-- | The name of an AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
batchGetDeploymentGroups_applicationName :: Lens' BatchGetDeploymentGroups Text

-- | The names of the deployment groups.
batchGetDeploymentGroups_deploymentGroupNames :: Lens' BatchGetDeploymentGroups [Text]

-- | Represents the output of a <tt>BatchGetDeploymentGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetDeploymentGroupsResponse</a> smart
--   constructor.
data BatchGetDeploymentGroupsResponse
BatchGetDeploymentGroupsResponse' :: Maybe [DeploymentGroupInfo] -> Maybe Text -> Int -> BatchGetDeploymentGroupsResponse

-- | Information about the deployment groups.
[$sel:deploymentGroupsInfo:BatchGetDeploymentGroupsResponse'] :: BatchGetDeploymentGroupsResponse -> Maybe [DeploymentGroupInfo]

-- | Information about errors that might have occurred during the API call.
[$sel:errorMessage:BatchGetDeploymentGroupsResponse'] :: BatchGetDeploymentGroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:BatchGetDeploymentGroupsResponse'] :: BatchGetDeploymentGroupsResponse -> Int

-- | Create a value of <a>BatchGetDeploymentGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentGroupsInfo:BatchGetDeploymentGroupsResponse'</a>,
--   <a>batchGetDeploymentGroupsResponse_deploymentGroupsInfo</a> -
--   Information about the deployment groups.
--   
--   <a>$sel:errorMessage:BatchGetDeploymentGroupsResponse'</a>,
--   <a>batchGetDeploymentGroupsResponse_errorMessage</a> - Information
--   about errors that might have occurred during the API call.
--   
--   <a>$sel:httpStatus:BatchGetDeploymentGroupsResponse'</a>,
--   <a>batchGetDeploymentGroupsResponse_httpStatus</a> - The response's
--   http status code.
newBatchGetDeploymentGroupsResponse :: Int -> BatchGetDeploymentGroupsResponse

-- | Information about the deployment groups.
batchGetDeploymentGroupsResponse_deploymentGroupsInfo :: Lens' BatchGetDeploymentGroupsResponse (Maybe [DeploymentGroupInfo])

-- | Information about errors that might have occurred during the API call.
batchGetDeploymentGroupsResponse_errorMessage :: Lens' BatchGetDeploymentGroupsResponse (Maybe Text)

-- | The response's http status code.
batchGetDeploymentGroupsResponse_httpStatus :: Lens' BatchGetDeploymentGroupsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroupsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroupsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroupsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroupsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.BatchGetDeploymentGroups.BatchGetDeploymentGroups


-- | Gets information about one or more applications. The maximum number of
--   applications that can be returned is 100.
module Network.AWS.CodeDeploy.BatchGetApplications

-- | Represents the input of a <tt>BatchGetApplications</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetApplications</a> smart constructor.
data BatchGetApplications
BatchGetApplications' :: [Text] -> BatchGetApplications

-- | A list of application names separated by spaces. The maximum number of
--   application names you can specify is 100.
[$sel:applicationNames:BatchGetApplications'] :: BatchGetApplications -> [Text]

-- | Create a value of <a>BatchGetApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationNames:BatchGetApplications'</a>,
--   <a>batchGetApplications_applicationNames</a> - A list of application
--   names separated by spaces. The maximum number of application names you
--   can specify is 100.
newBatchGetApplications :: BatchGetApplications

-- | A list of application names separated by spaces. The maximum number of
--   application names you can specify is 100.
batchGetApplications_applicationNames :: Lens' BatchGetApplications [Text]

-- | Represents the output of a <tt>BatchGetApplications</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetApplicationsResponse</a> smart constructor.
data BatchGetApplicationsResponse
BatchGetApplicationsResponse' :: Maybe [ApplicationInfo] -> Int -> BatchGetApplicationsResponse

-- | Information about the applications.
[$sel:applicationsInfo:BatchGetApplicationsResponse'] :: BatchGetApplicationsResponse -> Maybe [ApplicationInfo]

-- | The response's http status code.
[$sel:httpStatus:BatchGetApplicationsResponse'] :: BatchGetApplicationsResponse -> Int

-- | Create a value of <a>BatchGetApplicationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationsInfo:BatchGetApplicationsResponse'</a>,
--   <a>batchGetApplicationsResponse_applicationsInfo</a> - Information
--   about the applications.
--   
--   <a>$sel:httpStatus:BatchGetApplicationsResponse'</a>,
--   <a>batchGetApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetApplicationsResponse :: Int -> BatchGetApplicationsResponse

-- | Information about the applications.
batchGetApplicationsResponse_applicationsInfo :: Lens' BatchGetApplicationsResponse (Maybe [ApplicationInfo])

-- | The response's http status code.
batchGetApplicationsResponse_httpStatus :: Lens' BatchGetApplicationsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplicationsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplicationsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplicationsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplicationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplicationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.BatchGetApplications.BatchGetApplications


-- | Gets information about one or more application revisions. The maximum
--   number of application revisions that can be returned is 25.
module Network.AWS.CodeDeploy.BatchGetApplicationRevisions

-- | Represents the input of a <tt>BatchGetApplicationRevisions</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetApplicationRevisions</a> smart constructor.
data BatchGetApplicationRevisions
BatchGetApplicationRevisions' :: Text -> [RevisionLocation] -> BatchGetApplicationRevisions

-- | The name of an AWS CodeDeploy application about which to get revision
--   information.
[$sel:applicationName:BatchGetApplicationRevisions'] :: BatchGetApplicationRevisions -> Text

-- | An array of <tt>RevisionLocation</tt> objects that specify information
--   to get about the application revisions, including type and location.
--   The maximum number of <tt>RevisionLocation</tt> objects you can
--   specify is 25.
[$sel:revisions:BatchGetApplicationRevisions'] :: BatchGetApplicationRevisions -> [RevisionLocation]

-- | Create a value of <a>BatchGetApplicationRevisions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:BatchGetApplicationRevisions'</a>,
--   <a>batchGetApplicationRevisions_applicationName</a> - The name of an
--   AWS CodeDeploy application about which to get revision information.
--   
--   <a>$sel:revisions:BatchGetApplicationRevisions'</a>,
--   <a>batchGetApplicationRevisions_revisions</a> - An array of
--   <tt>RevisionLocation</tt> objects that specify information to get
--   about the application revisions, including type and location. The
--   maximum number of <tt>RevisionLocation</tt> objects you can specify is
--   25.
newBatchGetApplicationRevisions :: Text -> BatchGetApplicationRevisions

-- | The name of an AWS CodeDeploy application about which to get revision
--   information.
batchGetApplicationRevisions_applicationName :: Lens' BatchGetApplicationRevisions Text

-- | An array of <tt>RevisionLocation</tt> objects that specify information
--   to get about the application revisions, including type and location.
--   The maximum number of <tt>RevisionLocation</tt> objects you can
--   specify is 25.
batchGetApplicationRevisions_revisions :: Lens' BatchGetApplicationRevisions [RevisionLocation]

-- | Represents the output of a <tt>BatchGetApplicationRevisions</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetApplicationRevisionsResponse</a> smart
--   constructor.
data BatchGetApplicationRevisionsResponse
BatchGetApplicationRevisionsResponse' :: Maybe [RevisionInfo] -> Maybe Text -> Maybe Text -> Int -> BatchGetApplicationRevisionsResponse

-- | Additional information about the revisions, including the type and
--   location.
[$sel:revisions:BatchGetApplicationRevisionsResponse'] :: BatchGetApplicationRevisionsResponse -> Maybe [RevisionInfo]

-- | Information about errors that might have occurred during the API call.
[$sel:errorMessage:BatchGetApplicationRevisionsResponse'] :: BatchGetApplicationRevisionsResponse -> Maybe Text

-- | The name of the application that corresponds to the revisions.
[$sel:applicationName:BatchGetApplicationRevisionsResponse'] :: BatchGetApplicationRevisionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:BatchGetApplicationRevisionsResponse'] :: BatchGetApplicationRevisionsResponse -> Int

-- | Create a value of <a>BatchGetApplicationRevisionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisions:BatchGetApplicationRevisions'</a>,
--   <a>batchGetApplicationRevisionsResponse_revisions</a> - Additional
--   information about the revisions, including the type and location.
--   
--   <a>$sel:errorMessage:BatchGetApplicationRevisionsResponse'</a>,
--   <a>batchGetApplicationRevisionsResponse_errorMessage</a> - Information
--   about errors that might have occurred during the API call.
--   
--   <a>$sel:applicationName:BatchGetApplicationRevisions'</a>,
--   <a>batchGetApplicationRevisionsResponse_applicationName</a> - The name
--   of the application that corresponds to the revisions.
--   
--   <a>$sel:httpStatus:BatchGetApplicationRevisionsResponse'</a>,
--   <a>batchGetApplicationRevisionsResponse_httpStatus</a> - The
--   response's http status code.
newBatchGetApplicationRevisionsResponse :: Int -> BatchGetApplicationRevisionsResponse

-- | Additional information about the revisions, including the type and
--   location.
batchGetApplicationRevisionsResponse_revisions :: Lens' BatchGetApplicationRevisionsResponse (Maybe [RevisionInfo])

-- | Information about errors that might have occurred during the API call.
batchGetApplicationRevisionsResponse_errorMessage :: Lens' BatchGetApplicationRevisionsResponse (Maybe Text)

-- | The name of the application that corresponds to the revisions.
batchGetApplicationRevisionsResponse_applicationName :: Lens' BatchGetApplicationRevisionsResponse (Maybe Text)

-- | The response's http status code.
batchGetApplicationRevisionsResponse_httpStatus :: Lens' BatchGetApplicationRevisionsResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance GHC.Generics.Generic Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisionsResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisionsResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisionsResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.BatchGetApplicationRevisions.BatchGetApplicationRevisions


-- | Adds tags to on-premises instances.
module Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances

-- | Represents the input of, and adds tags to, an on-premises instance
--   operation.
--   
--   <i>See:</i> <a>newAddTagsToOnPremisesInstances</a> smart constructor.
data AddTagsToOnPremisesInstances
AddTagsToOnPremisesInstances' :: [Tag] -> [Text] -> AddTagsToOnPremisesInstances

-- | The tag key-value pairs to add to the on-premises instances.
--   
--   Keys and values are both required. Keys cannot be null or empty
--   strings. Value-only tags are not allowed.
[$sel:tags:AddTagsToOnPremisesInstances'] :: AddTagsToOnPremisesInstances -> [Tag]

-- | The names of the on-premises instances to which to add tags.
[$sel:instanceNames:AddTagsToOnPremisesInstances'] :: AddTagsToOnPremisesInstances -> [Text]

-- | Create a value of <a>AddTagsToOnPremisesInstances</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:AddTagsToOnPremisesInstances'</a>,
--   <a>addTagsToOnPremisesInstances_tags</a> - The tag key-value pairs to
--   add to the on-premises instances.
--   
--   Keys and values are both required. Keys cannot be null or empty
--   strings. Value-only tags are not allowed.
--   
--   <a>$sel:instanceNames:AddTagsToOnPremisesInstances'</a>,
--   <a>addTagsToOnPremisesInstances_instanceNames</a> - The names of the
--   on-premises instances to which to add tags.
newAddTagsToOnPremisesInstances :: AddTagsToOnPremisesInstances

-- | The tag key-value pairs to add to the on-premises instances.
--   
--   Keys and values are both required. Keys cannot be null or empty
--   strings. Value-only tags are not allowed.
addTagsToOnPremisesInstances_tags :: Lens' AddTagsToOnPremisesInstances [Tag]

-- | The names of the on-premises instances to which to add tags.
addTagsToOnPremisesInstances_instanceNames :: Lens' AddTagsToOnPremisesInstances [Text]

-- | <i>See:</i> <a>newAddTagsToOnPremisesInstancesResponse</a> smart
--   constructor.
data AddTagsToOnPremisesInstancesResponse
AddTagsToOnPremisesInstancesResponse' :: AddTagsToOnPremisesInstancesResponse

-- | Create a value of <a>AddTagsToOnPremisesInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAddTagsToOnPremisesInstancesResponse :: AddTagsToOnPremisesInstancesResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance GHC.Show.Show Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance GHC.Read.Read Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance GHC.Classes.Eq Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance GHC.Generics.Generic Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstancesResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstancesResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstancesResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstancesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.AddTagsToOnPremisesInstances.AddTagsToOnPremisesInstances


-- | Disassociates a resource from a list of tags. The resource is
--   identified by the <tt>ResourceArn</tt> input parameter. The tags are
--   identified by the list of keys in the <tt>TagKeys</tt> input
--   parameter.
module Network.AWS.CodeDeploy.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) that specifies from which resource to
--   disassociate the tags with the keys in the <tt>TagKeys</tt> input
--   parameter.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | A list of keys of <tt>Tag</tt> objects. The <tt>Tag</tt> objects
--   identified by the keys are disassociated from the resource specified
--   by the <tt>ResourceArn</tt> input parameter.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) that
--   specifies from which resource to disassociate the tags with the keys
--   in the <tt>TagKeys</tt> input parameter.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of keys of <tt>Tag</tt> objects. The <tt>Tag</tt> objects
--   identified by the keys are disassociated from the resource specified
--   by the <tt>ResourceArn</tt> input parameter.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) that specifies from which resource to
--   disassociate the tags with the keys in the <tt>TagKeys</tt> input
--   parameter.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of keys of <tt>Tag</tt> objects. The <tt>Tag</tt> objects
--   identified by the keys are disassociated from the resource specified
--   by the <tt>ResourceArn</tt> input parameter.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.CodeDeploy.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.CodeDeploy.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.CodeDeploy.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.CodeDeploy.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.UntagResource.UntagResource


-- | Changes the name of an application.
module Network.AWS.CodeDeploy.UpdateApplication

-- | Represents the input of an <tt>UpdateApplication</tt> operation.
--   
--   <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Maybe Text -> Maybe Text -> UpdateApplication

-- | The new name to give the application.
[$sel:newApplicationName':UpdateApplication'] :: UpdateApplication -> Maybe Text

-- | The current name of the application you want to change.
[$sel:applicationName:UpdateApplication'] :: UpdateApplication -> Maybe Text

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newApplicationName':UpdateApplication'</a>,
--   <a>updateApplication_newApplicationName</a> - The new name to give the
--   application.
--   
--   <a>$sel:applicationName:UpdateApplication'</a>,
--   <a>updateApplication_applicationName</a> - The current name of the
--   application you want to change.
newUpdateApplication :: UpdateApplication

-- | The new name to give the application.
updateApplication_newApplicationName :: Lens' UpdateApplication (Maybe Text)

-- | The current name of the application you want to change.
updateApplication_applicationName :: Lens' UpdateApplication (Maybe Text)

-- | <i>See:</i> <a>newUpdateApplicationResponse</a> smart constructor.
data UpdateApplicationResponse
UpdateApplicationResponse' :: UpdateApplicationResponse

-- | Create a value of <a>UpdateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateApplicationResponse :: UpdateApplicationResponse
instance GHC.Generics.Generic Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance GHC.Show.Show Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance GHC.Read.Read Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance GHC.Classes.Eq Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance GHC.Generics.Generic Network.AWS.CodeDeploy.UpdateApplication.UpdateApplicationResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.UpdateApplication.UpdateApplicationResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.UpdateApplication.UpdateApplicationResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.UpdateApplication.UpdateApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.UpdateApplication.UpdateApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.UpdateApplication.UpdateApplication


-- | Changes information about a deployment group.
module Network.AWS.CodeDeploy.UpdateDeploymentGroup

-- | Represents the input of an <tt>UpdateDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newUpdateDeploymentGroup</a> smart constructor.
data UpdateDeploymentGroup
UpdateDeploymentGroup' :: Maybe OnPremisesTagSet -> Maybe OutdatedInstancesStrategy -> Maybe Text -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe [TriggerConfig] -> Maybe [EC2TagFilter] -> Maybe [TagFilter] -> Maybe BlueGreenDeploymentConfiguration -> Maybe LoadBalancerInfo -> Maybe EC2TagSet -> Maybe DeploymentStyle -> Maybe [Text] -> Maybe [ECSService] -> Maybe AlarmConfiguration -> Maybe Text -> Text -> Text -> UpdateDeploymentGroup

-- | Information about an on-premises instance tag set. The deployment
--   group includes only on-premises instances identified by all the tag
--   groups.
[$sel:onPremisesTagSet:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe OnPremisesTagSet

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
[$sel:outdatedInstancesStrategy:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe OutdatedInstancesStrategy

-- | A replacement ARN for the service role, if you want to change it.
[$sel:serviceRoleArn:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe Text

-- | The replacement deployment configuration name to use, if you want to
--   change it.
[$sel:deploymentConfigName:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe Text

-- | Information for an automatic rollback configuration that is added or
--   changed when a deployment group is updated.
[$sel:autoRollbackConfiguration:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe AutoRollbackConfiguration

-- | Information about triggers to change when the deployment group is
--   updated. For examples, see <a>Edit a Trigger in a CodeDeploy
--   Deployment Group</a> in the <i>AWS CodeDeploy User Guide</i>.
[$sel:triggerConfigurations:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe [TriggerConfig]

-- | The replacement set of Amazon EC2 tags on which to filter, if you want
--   to change them. To keep the existing tags, enter their names. To
--   remove tags, do not enter any tag names.
[$sel:ec2TagFilters:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe [EC2TagFilter]

-- | The replacement set of on-premises instance tags on which to filter,
--   if you want to change them. To keep the existing tags, enter their
--   names. To remove tags, do not enter any tag names.
[$sel:onPremisesInstanceTagFilters:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe [TagFilter]

-- | Information about blue/green deployment options for a deployment
--   group.
[$sel:blueGreenDeploymentConfiguration:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe BlueGreenDeploymentConfiguration

-- | Information about the load balancer used in a deployment.
[$sel:loadBalancerInfo:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe LoadBalancerInfo

-- | Information about groups of tags applied to on-premises instances. The
--   deployment group includes only EC2 instances identified by all the tag
--   groups.
[$sel:ec2TagSet:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe EC2TagSet

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
[$sel:deploymentStyle:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe DeploymentStyle

-- | The replacement list of Auto Scaling groups to be included in the
--   deployment group, if you want to change them. To keep the Auto Scaling
--   groups, enter their names. To remove Auto Scaling groups, do not enter
--   any Auto Scaling group names.
[$sel:autoScalingGroups:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe [Text]

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
[$sel:ecsServices:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe [ECSService]

-- | Information to add or change about Amazon CloudWatch alarms when the
--   deployment group is updated.
[$sel:alarmConfiguration:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe AlarmConfiguration

-- | The new name of the deployment group, if you want to change it.
[$sel:newDeploymentGroupName':UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Maybe Text

-- | The application name that corresponds to the deployment group to
--   update.
[$sel:applicationName:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Text

-- | The current name of the deployment group.
[$sel:currentDeploymentGroupName:UpdateDeploymentGroup'] :: UpdateDeploymentGroup -> Text

-- | Create a value of <a>UpdateDeploymentGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSet:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_onPremisesTagSet</a> - Information about an
--   on-premises instance tag set. The deployment group includes only
--   on-premises instances identified by all the tag groups.
--   
--   <a>$sel:outdatedInstancesStrategy:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_outdatedInstancesStrategy</a> - Indicates
--   what happens when new EC2 instances are launched mid-deployment and do
--   not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
--   
--   <a>$sel:serviceRoleArn:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_serviceRoleArn</a> - A replacement ARN for
--   the service role, if you want to change it.
--   
--   <a>$sel:deploymentConfigName:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_deploymentConfigName</a> - The replacement
--   deployment configuration name to use, if you want to change it.
--   
--   <a>$sel:autoRollbackConfiguration:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_autoRollbackConfiguration</a> - Information
--   for an automatic rollback configuration that is added or changed when
--   a deployment group is updated.
--   
--   <a>$sel:triggerConfigurations:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_triggerConfigurations</a> - Information about
--   triggers to change when the deployment group is updated. For examples,
--   see <a>Edit a Trigger in a CodeDeploy Deployment Group</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
--   
--   <a>$sel:ec2TagFilters:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_ec2TagFilters</a> - The replacement set of
--   Amazon EC2 tags on which to filter, if you want to change them. To
--   keep the existing tags, enter their names. To remove tags, do not
--   enter any tag names.
--   
--   <a>$sel:onPremisesInstanceTagFilters:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_onPremisesInstanceTagFilters</a> - The
--   replacement set of on-premises instance tags on which to filter, if
--   you want to change them. To keep the existing tags, enter their names.
--   To remove tags, do not enter any tag names.
--   
--   <a>$sel:blueGreenDeploymentConfiguration:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_blueGreenDeploymentConfiguration</a> -
--   Information about blue/green deployment options for a deployment
--   group.
--   
--   <a>$sel:loadBalancerInfo:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_loadBalancerInfo</a> - Information about the
--   load balancer used in a deployment.
--   
--   <a>$sel:ec2TagSet:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_ec2TagSet</a> - Information about groups of
--   tags applied to on-premises instances. The deployment group includes
--   only EC2 instances identified by all the tag groups.
--   
--   <a>$sel:deploymentStyle:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_deploymentStyle</a> - Information about the
--   type of deployment, either in-place or blue/green, you want to run and
--   whether to route deployment traffic behind a load balancer.
--   
--   <a>$sel:autoScalingGroups:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_autoScalingGroups</a> - The replacement list
--   of Auto Scaling groups to be included in the deployment group, if you
--   want to change them. To keep the Auto Scaling groups, enter their
--   names. To remove Auto Scaling groups, do not enter any Auto Scaling
--   group names.
--   
--   <a>$sel:ecsServices:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_ecsServices</a> - The target Amazon ECS
--   services in the deployment group. This applies only to deployment
--   groups that use the Amazon ECS compute platform. A target Amazon ECS
--   service is specified as an Amazon ECS cluster and service name pair
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   
--   <a>$sel:alarmConfiguration:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_alarmConfiguration</a> - Information to add
--   or change about Amazon CloudWatch alarms when the deployment group is
--   updated.
--   
--   <a>$sel:newDeploymentGroupName':UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_newDeploymentGroupName</a> - The new name of
--   the deployment group, if you want to change it.
--   
--   <a>$sel:applicationName:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_applicationName</a> - The application name
--   that corresponds to the deployment group to update.
--   
--   <a>$sel:currentDeploymentGroupName:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_currentDeploymentGroupName</a> - The current
--   name of the deployment group.
newUpdateDeploymentGroup :: Text -> Text -> UpdateDeploymentGroup

-- | Information about an on-premises instance tag set. The deployment
--   group includes only on-premises instances identified by all the tag
--   groups.
updateDeploymentGroup_onPremisesTagSet :: Lens' UpdateDeploymentGroup (Maybe OnPremisesTagSet)

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
updateDeploymentGroup_outdatedInstancesStrategy :: Lens' UpdateDeploymentGroup (Maybe OutdatedInstancesStrategy)

-- | A replacement ARN for the service role, if you want to change it.
updateDeploymentGroup_serviceRoleArn :: Lens' UpdateDeploymentGroup (Maybe Text)

-- | The replacement deployment configuration name to use, if you want to
--   change it.
updateDeploymentGroup_deploymentConfigName :: Lens' UpdateDeploymentGroup (Maybe Text)

-- | Information for an automatic rollback configuration that is added or
--   changed when a deployment group is updated.
updateDeploymentGroup_autoRollbackConfiguration :: Lens' UpdateDeploymentGroup (Maybe AutoRollbackConfiguration)

-- | Information about triggers to change when the deployment group is
--   updated. For examples, see <a>Edit a Trigger in a CodeDeploy
--   Deployment Group</a> in the <i>AWS CodeDeploy User Guide</i>.
updateDeploymentGroup_triggerConfigurations :: Lens' UpdateDeploymentGroup (Maybe [TriggerConfig])

-- | The replacement set of Amazon EC2 tags on which to filter, if you want
--   to change them. To keep the existing tags, enter their names. To
--   remove tags, do not enter any tag names.
updateDeploymentGroup_ec2TagFilters :: Lens' UpdateDeploymentGroup (Maybe [EC2TagFilter])

-- | The replacement set of on-premises instance tags on which to filter,
--   if you want to change them. To keep the existing tags, enter their
--   names. To remove tags, do not enter any tag names.
updateDeploymentGroup_onPremisesInstanceTagFilters :: Lens' UpdateDeploymentGroup (Maybe [TagFilter])

-- | Information about blue/green deployment options for a deployment
--   group.
updateDeploymentGroup_blueGreenDeploymentConfiguration :: Lens' UpdateDeploymentGroup (Maybe BlueGreenDeploymentConfiguration)

-- | Information about the load balancer used in a deployment.
updateDeploymentGroup_loadBalancerInfo :: Lens' UpdateDeploymentGroup (Maybe LoadBalancerInfo)

-- | Information about groups of tags applied to on-premises instances. The
--   deployment group includes only EC2 instances identified by all the tag
--   groups.
updateDeploymentGroup_ec2TagSet :: Lens' UpdateDeploymentGroup (Maybe EC2TagSet)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
updateDeploymentGroup_deploymentStyle :: Lens' UpdateDeploymentGroup (Maybe DeploymentStyle)

-- | The replacement list of Auto Scaling groups to be included in the
--   deployment group, if you want to change them. To keep the Auto Scaling
--   groups, enter their names. To remove Auto Scaling groups, do not enter
--   any Auto Scaling group names.
updateDeploymentGroup_autoScalingGroups :: Lens' UpdateDeploymentGroup (Maybe [Text])

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
updateDeploymentGroup_ecsServices :: Lens' UpdateDeploymentGroup (Maybe [ECSService])

-- | Information to add or change about Amazon CloudWatch alarms when the
--   deployment group is updated.
updateDeploymentGroup_alarmConfiguration :: Lens' UpdateDeploymentGroup (Maybe AlarmConfiguration)

-- | The new name of the deployment group, if you want to change it.
updateDeploymentGroup_newDeploymentGroupName :: Lens' UpdateDeploymentGroup (Maybe Text)

-- | The application name that corresponds to the deployment group to
--   update.
updateDeploymentGroup_applicationName :: Lens' UpdateDeploymentGroup Text

-- | The current name of the deployment group.
updateDeploymentGroup_currentDeploymentGroupName :: Lens' UpdateDeploymentGroup Text

-- | Represents the output of an <tt>UpdateDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newUpdateDeploymentGroupResponse</a> smart constructor.
data UpdateDeploymentGroupResponse
UpdateDeploymentGroupResponse' :: Maybe [AutoScalingGroup] -> Int -> UpdateDeploymentGroupResponse

-- | If the output contains no data, and the corresponding deployment group
--   contained at least one Auto Scaling group, AWS CodeDeploy successfully
--   removed all corresponding Auto Scaling lifecycle event hooks from the
--   AWS account. If the output contains data, AWS CodeDeploy could not
--   remove some Auto Scaling lifecycle event hooks from the AWS account.
[$sel:hooksNotCleanedUp:UpdateDeploymentGroupResponse'] :: UpdateDeploymentGroupResponse -> Maybe [AutoScalingGroup]

-- | The response's http status code.
[$sel:httpStatus:UpdateDeploymentGroupResponse'] :: UpdateDeploymentGroupResponse -> Int

-- | Create a value of <a>UpdateDeploymentGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hooksNotCleanedUp:UpdateDeploymentGroupResponse'</a>,
--   <a>updateDeploymentGroupResponse_hooksNotCleanedUp</a> - If the output
--   contains no data, and the corresponding deployment group contained at
--   least one Auto Scaling group, AWS CodeDeploy successfully removed all
--   corresponding Auto Scaling lifecycle event hooks from the AWS account.
--   If the output contains data, AWS CodeDeploy could not remove some Auto
--   Scaling lifecycle event hooks from the AWS account.
--   
--   <a>$sel:httpStatus:UpdateDeploymentGroupResponse'</a>,
--   <a>updateDeploymentGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeploymentGroupResponse :: Int -> UpdateDeploymentGroupResponse

-- | If the output contains no data, and the corresponding deployment group
--   contained at least one Auto Scaling group, AWS CodeDeploy successfully
--   removed all corresponding Auto Scaling lifecycle event hooks from the
--   AWS account. If the output contains data, AWS CodeDeploy could not
--   remove some Auto Scaling lifecycle event hooks from the AWS account.
updateDeploymentGroupResponse_hooksNotCleanedUp :: Lens' UpdateDeploymentGroupResponse (Maybe [AutoScalingGroup])

-- | The response's http status code.
updateDeploymentGroupResponse_httpStatus :: Lens' UpdateDeploymentGroupResponse Int
instance GHC.Generics.Generic Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance GHC.Show.Show Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance GHC.Read.Read Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance GHC.Classes.Eq Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance GHC.Generics.Generic Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroupResponse
instance GHC.Show.Show Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroupResponse
instance GHC.Read.Read Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroupResponse
instance GHC.Classes.Eq Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance Control.DeepSeq.NFData Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance Network.AWS.Data.Path.ToPath Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.CodeDeploy.UpdateDeploymentGroup.UpdateDeploymentGroup


module Network.AWS.CodeDeploy.Lens

-- | The configuration that specifies how the deployment traffic is routed.
createDeploymentConfig_trafficRoutingConfig :: Lens' CreateDeploymentConfig (Maybe TrafficRoutingConfig)

-- | The minimum number of healthy instances that should be available at
--   any time during the deployment. There are two parameters expected in
--   the input: type and value.
--   
--   The type parameter takes either of the following values:
--   
--   <ul>
--   <li>HOST_COUNT: The value parameter represents the minimum number of
--   healthy instances as an absolute value.</li>
--   <li>FLEET_PERCENT: The value parameter represents the minimum number
--   of healthy instances as a percentage of the total number of instances
--   in the deployment. If you specify FLEET_PERCENT, at the start of the
--   deployment, AWS CodeDeploy converts the percentage to the equivalent
--   number of instances and rounds up fractional instances.</li>
--   </ul>
--   
--   The value parameter takes an integer.
--   
--   For example, to set a minimum of 95% healthy instance, specify a type
--   of FLEET_PERCENT and a value of 95.
createDeploymentConfig_minimumHealthyHosts :: Lens' CreateDeploymentConfig (Maybe MinimumHealthyHosts)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
createDeploymentConfig_computePlatform :: Lens' CreateDeploymentConfig (Maybe ComputePlatform)

-- | The name of the deployment configuration to create.
createDeploymentConfig_deploymentConfigName :: Lens' CreateDeploymentConfig Text

-- | A unique deployment configuration ID.
createDeploymentConfigResponse_deploymentConfigId :: Lens' CreateDeploymentConfigResponse (Maybe Text)

-- | The response's http status code.
createDeploymentConfigResponse_httpStatus :: Lens' CreateDeploymentConfigResponse Int

-- | The name of the application that corresponds to the revision.
getApplicationRevision_applicationName :: Lens' GetApplicationRevision Text

-- | Information about the application revision to get, including type and
--   location.
getApplicationRevision_revision :: Lens' GetApplicationRevision RevisionLocation

-- | General information about the revision.
getApplicationRevisionResponse_revisionInfo :: Lens' GetApplicationRevisionResponse (Maybe GenericRevisionInfo)

-- | Additional information about the revision, including type and
--   location.
getApplicationRevisionResponse_revision :: Lens' GetApplicationRevisionResponse (Maybe RevisionLocation)

-- | The name of the application that corresponds to the revision.
getApplicationRevisionResponse_applicationName :: Lens' GetApplicationRevisionResponse (Maybe Text)

-- | The response's http status code.
getApplicationRevisionResponse_httpStatus :: Lens' GetApplicationRevisionResponse Int

-- | The name of an AWS CodeDeploy application associated with the
--   applicable IAM user or AWS account.
batchGetDeploymentGroups_applicationName :: Lens' BatchGetDeploymentGroups Text

-- | The names of the deployment groups.
batchGetDeploymentGroups_deploymentGroupNames :: Lens' BatchGetDeploymentGroups [Text]

-- | Information about the deployment groups.
batchGetDeploymentGroupsResponse_deploymentGroupsInfo :: Lens' BatchGetDeploymentGroupsResponse (Maybe [DeploymentGroupInfo])

-- | Information about errors that might have occurred during the API call.
batchGetDeploymentGroupsResponse_errorMessage :: Lens' BatchGetDeploymentGroupsResponse (Maybe Text)

-- | The response's http status code.
batchGetDeploymentGroupsResponse_httpStatus :: Lens' BatchGetDeploymentGroupsResponse Int

-- | The names of the on-premises instances about which to get information.
--   The maximum number of instance names you can specify is 25.
batchGetOnPremisesInstances_instanceNames :: Lens' BatchGetOnPremisesInstances [Text]

-- | Information about the on-premises instances.
batchGetOnPremisesInstancesResponse_instanceInfos :: Lens' BatchGetOnPremisesInstancesResponse (Maybe [InstanceInfo])

-- | The response's http status code.
batchGetOnPremisesInstancesResponse_httpStatus :: Lens' BatchGetOnPremisesInstancesResponse Int

-- | Indicates, when a deployment is stopped, whether instances that have
--   been updated should be rolled back to the previous version of the
--   application revision.
stopDeployment_autoRollbackEnabled :: Lens' StopDeployment (Maybe Bool)

-- | The unique ID of a deployment.
stopDeployment_deploymentId :: Lens' StopDeployment Text

-- | An accompanying status message.
stopDeploymentResponse_statusMessage :: Lens' StopDeploymentResponse (Maybe Text)

-- | The status of the stop deployment operation:
--   
--   <ul>
--   <li>Pending: The stop operation is pending.</li>
--   <li>Succeeded: The stop operation was successful.</li>
--   </ul>
stopDeploymentResponse_status :: Lens' StopDeploymentResponse (Maybe StopStatus)

-- | The response's http status code.
stopDeploymentResponse_httpStatus :: Lens' StopDeploymentResponse Int

-- | The unique ID of a deployment.
listDeploymentTargets_deploymentId :: Lens' ListDeploymentTargets (Maybe Text)

-- | A token identifier returned from the previous
--   <tt>ListDeploymentTargets</tt> call. It can be used to return the next
--   set of deployment targets in the list.
listDeploymentTargets_nextToken :: Lens' ListDeploymentTargets (Maybe Text)

-- | A key used to filter the returned targets. The two valid values are:
--   
--   <ul>
--   <li><tt>TargetStatus</tt> - A <tt>TargetStatus</tt> filter string can
--   be <tt>Failed</tt>, <tt>InProgress</tt>, <tt>Pending</tt>,
--   <tt>Ready</tt>, <tt>Skipped</tt>, <tt>Succeeded</tt>, or
--   <tt>Unknown</tt>.</li>
--   <li><tt>ServerInstanceLabel</tt> - A <tt>ServerInstanceLabel</tt>
--   filter string can be <tt>Blue</tt> or <tt>Green</tt>.</li>
--   </ul>
listDeploymentTargets_targetFilters :: Lens' ListDeploymentTargets (Maybe (HashMap TargetFilterName [Text]))

-- | The unique IDs of deployment targets.
listDeploymentTargetsResponse_targetIds :: Lens' ListDeploymentTargetsResponse (Maybe [Text])

-- | If a large amount of information is returned, a token identifier is
--   also returned. It can be used in a subsequent
--   <tt>ListDeploymentTargets</tt> call to return the next set of
--   deployment targets in the list.
listDeploymentTargetsResponse_nextToken :: Lens' ListDeploymentTargetsResponse (Maybe Text)

-- | The response's http status code.
listDeploymentTargetsResponse_httpStatus :: Lens' ListDeploymentTargetsResponse Int

-- | The unique ID of a deployment target.
getDeploymentTarget_targetId :: Lens' GetDeploymentTarget (Maybe Text)

-- | The unique ID of a deployment.
getDeploymentTarget_deploymentId :: Lens' GetDeploymentTarget (Maybe Text)

-- | A deployment target that contains information about a deployment such
--   as its status, lifecycle events, and when it was last updated. It also
--   contains metadata about the deployment target. The deployment target
--   metadata depends on the deployment target's type
--   (<tt>instanceTarget</tt>, <tt>lambdaTarget</tt>, or
--   <tt>ecsTarget</tt>).
getDeploymentTargetResponse_deploymentTarget :: Lens' GetDeploymentTargetResponse (Maybe DeploymentTarget)

-- | The response's http status code.
getDeploymentTargetResponse_httpStatus :: Lens' GetDeploymentTargetResponse Int

-- | The tag key-value pairs to add to the on-premises instances.
--   
--   Keys and values are both required. Keys cannot be null or empty
--   strings. Value-only tags are not allowed.
addTagsToOnPremisesInstances_tags :: Lens' AddTagsToOnPremisesInstances [Tag]

-- | The names of the on-premises instances to which to add tags.
addTagsToOnPremisesInstances_instanceNames :: Lens' AddTagsToOnPremisesInstances [Text]

-- | The metadata that you apply to CodeDeploy applications to help you
--   organize and categorize them. Each tag consists of a key and an
--   optional value, both of which you define.
createApplication_tags :: Lens' CreateApplication (Maybe [Tag])

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
createApplication_computePlatform :: Lens' CreateApplication (Maybe ComputePlatform)

-- | The name of the application. This name must be unique with the
--   applicable IAM user or AWS account.
createApplication_applicationName :: Lens' CreateApplication Text

-- | A unique application ID.
createApplicationResponse_applicationId :: Lens' CreateApplicationResponse (Maybe Text)

-- | The response's http status code.
createApplicationResponse_httpStatus :: Lens' CreateApplicationResponse Int

-- | The unique ID of an external resource (for example, a CloudFormation
--   stack ID) that is linked to one or more CodeDeploy resources.
deleteResourcesByExternalId_externalId :: Lens' DeleteResourcesByExternalId (Maybe Text)

-- | The response's http status code.
deleteResourcesByExternalIdResponse_httpStatus :: Lens' DeleteResourcesByExternalIdResponse Int

-- | A list of application names separated by spaces. The maximum number of
--   application names you can specify is 100.
batchGetApplications_applicationNames :: Lens' BatchGetApplications [Text]

-- | Information about the applications.
batchGetApplicationsResponse_applicationsInfo :: Lens' BatchGetApplicationsResponse (Maybe [ApplicationInfo])

-- | The response's http status code.
batchGetApplicationsResponse_httpStatus :: Lens' BatchGetApplicationsResponse Int

-- | The Amazon Resource Name (ARN) that specifies from which resource to
--   disassociate the tags with the keys in the <tt>TagKeys</tt> input
--   parameter.
untagResource_resourceArn :: Lens' UntagResource Text

-- | A list of keys of <tt>Tag</tt> objects. The <tt>Tag</tt> objects
--   identified by the keys are disassociated from the resource specified
--   by the <tt>ResourceArn</tt> input parameter.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The unique ID of a blue/green deployment for which you want to start
--   rerouting traffic to the replacement environment.
continueDeployment_deploymentId :: Lens' ContinueDeployment (Maybe Text)

-- | The status of the deployment's waiting period. <tt>READY_WAIT</tt>
--   indicates that the deployment is ready to start shifting traffic.
--   <tt>TERMINATION_WAIT</tt> indicates that the traffic is shifted, but
--   the original target is not terminated.
continueDeployment_deploymentWaitType :: Lens' ContinueDeployment (Maybe DeploymentWaitType)

-- | The ARN of a resource, such as a CodeDeploy application or deployment
--   group.
tagResource_resourceArn :: Lens' TagResource Text

-- | A list of tags that <tt>TagResource</tt> associates with a resource.
--   The resource is identified by the <tt>ResourceArn</tt> input
--   parameter.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The name of an AWS CodeDeploy application about which to get revision
--   information.
batchGetApplicationRevisions_applicationName :: Lens' BatchGetApplicationRevisions Text

-- | An array of <tt>RevisionLocation</tt> objects that specify information
--   to get about the application revisions, including type and location.
--   The maximum number of <tt>RevisionLocation</tt> objects you can
--   specify is 25.
batchGetApplicationRevisions_revisions :: Lens' BatchGetApplicationRevisions [RevisionLocation]

-- | Additional information about the revisions, including the type and
--   location.
batchGetApplicationRevisionsResponse_revisions :: Lens' BatchGetApplicationRevisionsResponse (Maybe [RevisionInfo])

-- | Information about errors that might have occurred during the API call.
batchGetApplicationRevisionsResponse_errorMessage :: Lens' BatchGetApplicationRevisionsResponse (Maybe Text)

-- | The name of the application that corresponds to the revisions.
batchGetApplicationRevisionsResponse_applicationName :: Lens' BatchGetApplicationRevisionsResponse (Maybe Text)

-- | The response's http status code.
batchGetApplicationRevisionsResponse_httpStatus :: Lens' BatchGetApplicationRevisionsResponse Int

-- | An identifier returned from the previous list deployments call. It can
--   be used to return the next set of deployments in the list.
listDeployments_nextToken :: Lens' ListDeployments (Maybe Text)

-- | The name of a deployment group for the specified application.
--   
--   If <tt>deploymentGroupName</tt> is specified, then
--   <tt>applicationName</tt> must be specified. If it is not specified,
--   then <tt>applicationName</tt> must not be specified.
listDeployments_deploymentGroupName :: Lens' ListDeployments (Maybe Text)

-- | A time range (start and end) for returning a subset of the list of
--   deployments.
listDeployments_createTimeRange :: Lens' ListDeployments (Maybe TimeRange)

-- | A subset of deployments to list by status:
--   
--   <ul>
--   <li><tt>Created</tt>: Include created deployments in the resulting
--   list.</li>
--   <li><tt>Queued</tt>: Include queued deployments in the resulting
--   list.</li>
--   <li><tt>In Progress</tt>: Include in-progress deployments in the
--   resulting list.</li>
--   <li><tt>Succeeded</tt>: Include successful deployments in the
--   resulting list.</li>
--   <li><tt>Failed</tt>: Include failed deployments in the resulting
--   list.</li>
--   <li><tt>Stopped</tt>: Include stopped deployments in the resulting
--   list.</li>
--   </ul>
listDeployments_includeOnlyStatuses :: Lens' ListDeployments (Maybe [DeploymentStatus])

-- | The unique ID of an external resource for returning deployments linked
--   to the external resource.
listDeployments_externalId :: Lens' ListDeployments (Maybe Text)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
--   
--   If <tt>applicationName</tt> is specified, then
--   <tt>deploymentGroupName</tt> must be specified. If it is not
--   specified, then <tt>deploymentGroupName</tt> must not be specified.
listDeployments_applicationName :: Lens' ListDeployments (Maybe Text)

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployments call to
--   return the next set of deployments in the list.
listDeploymentsResponse_nextToken :: Lens' ListDeploymentsResponse (Maybe Text)

-- | A list of deployment IDs.
listDeploymentsResponse_deployments :: Lens' ListDeploymentsResponse (Maybe [Text])

-- | The response's http status code.
listDeploymentsResponse_httpStatus :: Lens' ListDeploymentsResponse Int

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
getDeploymentConfig_deploymentConfigName :: Lens' GetDeploymentConfig Text

-- | Information about the deployment configuration.
getDeploymentConfigResponse_deploymentConfigInfo :: Lens' GetDeploymentConfigResponse (Maybe DeploymentConfigInfo)

-- | The response's http status code.
getDeploymentConfigResponse_httpStatus :: Lens' GetDeploymentConfigResponse Int

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
deleteDeploymentConfig_deploymentConfigName :: Lens' DeleteDeploymentConfig Text

-- | Information about groups of tags applied to on-premises instances. The
--   deployment group includes only on-premises instances identified by all
--   of the tag groups. Cannot be used in the same call as
--   <tt>onPremisesInstanceTagFilters</tt>.
createDeploymentGroup_onPremisesTagSet :: Lens' CreateDeploymentGroup (Maybe OnPremisesTagSet)

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
createDeploymentGroup_outdatedInstancesStrategy :: Lens' CreateDeploymentGroup (Maybe OutdatedInstancesStrategy)

-- | If specified, the deployment configuration name can be either one of
--   the predefined configurations provided with AWS CodeDeploy or a custom
--   deployment configuration that you create by calling the create
--   deployment configuration operation.
--   
--   <tt>CodeDeployDefault.OneAtATime</tt> is the default deployment
--   configuration. It is used if a configuration isn't specified for the
--   deployment or deployment group.
--   
--   For more information about the predefined deployment configurations in
--   AWS CodeDeploy, see <a>Working with Deployment Configurations in
--   CodeDeploy</a> in the <i>AWS CodeDeploy User Guide</i>.
createDeploymentGroup_deploymentConfigName :: Lens' CreateDeploymentGroup (Maybe Text)

-- | Configuration information for an automatic rollback that is added when
--   a deployment group is created.
createDeploymentGroup_autoRollbackConfiguration :: Lens' CreateDeploymentGroup (Maybe AutoRollbackConfiguration)

-- | Information about triggers to create when the deployment group is
--   created. For examples, see <a>Create a Trigger for an AWS CodeDeploy
--   Event</a> in the <i>AWS CodeDeploy User Guide</i>.
createDeploymentGroup_triggerConfigurations :: Lens' CreateDeploymentGroup (Maybe [TriggerConfig])

-- | The Amazon EC2 tags on which to filter. The deployment group includes
--   EC2 instances with any of the specified tags. Cannot be used in the
--   same call as ec2TagSet.
createDeploymentGroup_ec2TagFilters :: Lens' CreateDeploymentGroup (Maybe [EC2TagFilter])

-- | The on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags. Cannot
--   be used in the same call as <tt>OnPremisesTagSet</tt>.
createDeploymentGroup_onPremisesInstanceTagFilters :: Lens' CreateDeploymentGroup (Maybe [TagFilter])

-- | Information about blue/green deployment options for a deployment
--   group.
createDeploymentGroup_blueGreenDeploymentConfiguration :: Lens' CreateDeploymentGroup (Maybe BlueGreenDeploymentConfiguration)

-- | Information about the load balancer used in a deployment.
createDeploymentGroup_loadBalancerInfo :: Lens' CreateDeploymentGroup (Maybe LoadBalancerInfo)

-- | Information about groups of tags applied to EC2 instances. The
--   deployment group includes only EC2 instances identified by all the tag
--   groups. Cannot be used in the same call as <tt>ec2TagFilters</tt>.
createDeploymentGroup_ec2TagSet :: Lens' CreateDeploymentGroup (Maybe EC2TagSet)

-- | The metadata that you apply to CodeDeploy deployment groups to help
--   you organize and categorize them. Each tag consists of a key and an
--   optional value, both of which you define.
createDeploymentGroup_tags :: Lens' CreateDeploymentGroup (Maybe [Tag])

-- | Information about the type of deployment, in-place or blue/green, that
--   you want to run and whether to route deployment traffic behind a load
--   balancer.
createDeploymentGroup_deploymentStyle :: Lens' CreateDeploymentGroup (Maybe DeploymentStyle)

-- | A list of associated Amazon EC2 Auto Scaling groups.
createDeploymentGroup_autoScalingGroups :: Lens' CreateDeploymentGroup (Maybe [Text])

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
createDeploymentGroup_ecsServices :: Lens' CreateDeploymentGroup (Maybe [ECSService])

-- | Information to add about Amazon CloudWatch alarms when the deployment
--   group is created.
createDeploymentGroup_alarmConfiguration :: Lens' CreateDeploymentGroup (Maybe AlarmConfiguration)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
createDeploymentGroup_applicationName :: Lens' CreateDeploymentGroup Text

-- | The name of a new deployment group for the specified application.
createDeploymentGroup_deploymentGroupName :: Lens' CreateDeploymentGroup Text

-- | A service role Amazon Resource Name (ARN) that allows AWS CodeDeploy
--   to act on the user's behalf when interacting with AWS services.
createDeploymentGroup_serviceRoleArn :: Lens' CreateDeploymentGroup Text

-- | A unique deployment group ID.
createDeploymentGroupResponse_deploymentGroupId :: Lens' CreateDeploymentGroupResponse (Maybe Text)

-- | The response's http status code.
createDeploymentGroupResponse_httpStatus :: Lens' CreateDeploymentGroupResponse Int

-- | An identifier returned from the previous
--   <tt>ListDeploymentConfigs</tt> call. It can be used to return the next
--   set of deployment configurations in the list.
listDeploymentConfigs_nextToken :: Lens' ListDeploymentConfigs (Maybe Text)

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployment
--   configurations call to return the next set of deployment
--   configurations in the list.
listDeploymentConfigsResponse_nextToken :: Lens' ListDeploymentConfigsResponse (Maybe Text)

-- | A list of deployment configurations, including built-in configurations
--   such as <tt>CodeDeployDefault.OneAtATime</tt>.
listDeploymentConfigsResponse_deploymentConfigsList :: Lens' ListDeploymentConfigsResponse (Maybe [Text])

-- | The response's http status code.
listDeploymentConfigsResponse_httpStatus :: Lens' ListDeploymentConfigsResponse Int

-- | Information about an on-premises instance tag set. The deployment
--   group includes only on-premises instances identified by all the tag
--   groups.
updateDeploymentGroup_onPremisesTagSet :: Lens' UpdateDeploymentGroup (Maybe OnPremisesTagSet)

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
updateDeploymentGroup_outdatedInstancesStrategy :: Lens' UpdateDeploymentGroup (Maybe OutdatedInstancesStrategy)

-- | A replacement ARN for the service role, if you want to change it.
updateDeploymentGroup_serviceRoleArn :: Lens' UpdateDeploymentGroup (Maybe Text)

-- | The replacement deployment configuration name to use, if you want to
--   change it.
updateDeploymentGroup_deploymentConfigName :: Lens' UpdateDeploymentGroup (Maybe Text)

-- | Information for an automatic rollback configuration that is added or
--   changed when a deployment group is updated.
updateDeploymentGroup_autoRollbackConfiguration :: Lens' UpdateDeploymentGroup (Maybe AutoRollbackConfiguration)

-- | Information about triggers to change when the deployment group is
--   updated. For examples, see <a>Edit a Trigger in a CodeDeploy
--   Deployment Group</a> in the <i>AWS CodeDeploy User Guide</i>.
updateDeploymentGroup_triggerConfigurations :: Lens' UpdateDeploymentGroup (Maybe [TriggerConfig])

-- | The replacement set of Amazon EC2 tags on which to filter, if you want
--   to change them. To keep the existing tags, enter their names. To
--   remove tags, do not enter any tag names.
updateDeploymentGroup_ec2TagFilters :: Lens' UpdateDeploymentGroup (Maybe [EC2TagFilter])

-- | The replacement set of on-premises instance tags on which to filter,
--   if you want to change them. To keep the existing tags, enter their
--   names. To remove tags, do not enter any tag names.
updateDeploymentGroup_onPremisesInstanceTagFilters :: Lens' UpdateDeploymentGroup (Maybe [TagFilter])

-- | Information about blue/green deployment options for a deployment
--   group.
updateDeploymentGroup_blueGreenDeploymentConfiguration :: Lens' UpdateDeploymentGroup (Maybe BlueGreenDeploymentConfiguration)

-- | Information about the load balancer used in a deployment.
updateDeploymentGroup_loadBalancerInfo :: Lens' UpdateDeploymentGroup (Maybe LoadBalancerInfo)

-- | Information about groups of tags applied to on-premises instances. The
--   deployment group includes only EC2 instances identified by all the tag
--   groups.
updateDeploymentGroup_ec2TagSet :: Lens' UpdateDeploymentGroup (Maybe EC2TagSet)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
updateDeploymentGroup_deploymentStyle :: Lens' UpdateDeploymentGroup (Maybe DeploymentStyle)

-- | The replacement list of Auto Scaling groups to be included in the
--   deployment group, if you want to change them. To keep the Auto Scaling
--   groups, enter their names. To remove Auto Scaling groups, do not enter
--   any Auto Scaling group names.
updateDeploymentGroup_autoScalingGroups :: Lens' UpdateDeploymentGroup (Maybe [Text])

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
updateDeploymentGroup_ecsServices :: Lens' UpdateDeploymentGroup (Maybe [ECSService])

-- | Information to add or change about Amazon CloudWatch alarms when the
--   deployment group is updated.
updateDeploymentGroup_alarmConfiguration :: Lens' UpdateDeploymentGroup (Maybe AlarmConfiguration)

-- | The new name of the deployment group, if you want to change it.
updateDeploymentGroup_newDeploymentGroupName :: Lens' UpdateDeploymentGroup (Maybe Text)

-- | The application name that corresponds to the deployment group to
--   update.
updateDeploymentGroup_applicationName :: Lens' UpdateDeploymentGroup Text

-- | The current name of the deployment group.
updateDeploymentGroup_currentDeploymentGroupName :: Lens' UpdateDeploymentGroup Text

-- | If the output contains no data, and the corresponding deployment group
--   contained at least one Auto Scaling group, AWS CodeDeploy successfully
--   removed all corresponding Auto Scaling lifecycle event hooks from the
--   AWS account. If the output contains data, AWS CodeDeploy could not
--   remove some Auto Scaling lifecycle event hooks from the AWS account.
updateDeploymentGroupResponse_hooksNotCleanedUp :: Lens' UpdateDeploymentGroupResponse (Maybe [AutoScalingGroup])

-- | The response's http status code.
updateDeploymentGroupResponse_httpStatus :: Lens' UpdateDeploymentGroupResponse Int

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
deleteDeploymentGroup_applicationName :: Lens' DeleteDeploymentGroup Text

-- | The name of a deployment group for the specified application.
deleteDeploymentGroup_deploymentGroupName :: Lens' DeleteDeploymentGroup Text

-- | If the output contains no data, and the corresponding deployment group
--   contained at least one Auto Scaling group, AWS CodeDeploy successfully
--   removed all corresponding Auto Scaling lifecycle event hooks from the
--   Amazon EC2 instances in the Auto Scaling group. If the output contains
--   data, AWS CodeDeploy could not remove some Auto Scaling lifecycle
--   event hooks from the Amazon EC2 instances in the Auto Scaling group.
deleteDeploymentGroupResponse_hooksNotCleanedUp :: Lens' DeleteDeploymentGroupResponse (Maybe [AutoScalingGroup])

-- | The response's http status code.
deleteDeploymentGroupResponse_httpStatus :: Lens' DeleteDeploymentGroupResponse Int

-- | An identifier returned from the previous list deployment groups call.
--   It can be used to return the next set of deployment groups in the
--   list.
listDeploymentGroups_nextToken :: Lens' ListDeploymentGroups (Maybe Text)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
listDeploymentGroups_applicationName :: Lens' ListDeploymentGroups Text

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list deployment groups call
--   to return the next set of deployment groups in the list.
listDeploymentGroupsResponse_nextToken :: Lens' ListDeploymentGroupsResponse (Maybe Text)

-- | A list of deployment group names.
listDeploymentGroupsResponse_deploymentGroups :: Lens' ListDeploymentGroupsResponse (Maybe [Text])

-- | The application name.
listDeploymentGroupsResponse_applicationName :: Lens' ListDeploymentGroupsResponse (Maybe Text)

-- | The response's http status code.
listDeploymentGroupsResponse_httpStatus :: Lens' ListDeploymentGroupsResponse Int

-- | The ARN of the IAM user to associate with the on-premises instance.
registerOnPremisesInstance_iamUserArn :: Lens' RegisterOnPremisesInstance (Maybe Text)

-- | The ARN of the IAM session to associate with the on-premises instance.
registerOnPremisesInstance_iamSessionArn :: Lens' RegisterOnPremisesInstance (Maybe Text)

-- | The name of the on-premises instance to register.
registerOnPremisesInstance_instanceName :: Lens' RegisterOnPremisesInstance Text

-- | An identifier returned from the previous list on-premises instances
--   call. It can be used to return the next set of on-premises instances
--   in the list.
listOnPremisesInstances_nextToken :: Lens' ListOnPremisesInstances (Maybe Text)

-- | The on-premises instance tags that are used to restrict the
--   on-premises instance names returned.
listOnPremisesInstances_tagFilters :: Lens' ListOnPremisesInstances (Maybe [TagFilter])

-- | The registration status of the on-premises instances:
--   
--   <ul>
--   <li><tt>Deregistered</tt>: Include deregistered on-premises instances
--   in the resulting list.</li>
--   <li><tt>Registered</tt>: Include registered on-premises instances in
--   the resulting list.</li>
--   </ul>
listOnPremisesInstances_registrationStatus :: Lens' ListOnPremisesInstances (Maybe RegistrationStatus)

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list on-premises instances
--   call to return the next set of on-premises instances in the list.
listOnPremisesInstancesResponse_nextToken :: Lens' ListOnPremisesInstancesResponse (Maybe Text)

-- | The list of matching on-premises instance names.
listOnPremisesInstancesResponse_instanceNames :: Lens' ListOnPremisesInstancesResponse (Maybe [Text])

-- | The response's http status code.
listOnPremisesInstancesResponse_httpStatus :: Lens' ListOnPremisesInstancesResponse Int

-- | The unique ID of a deployment associated with the IAM user or AWS
--   account.
getDeployment_deploymentId :: Lens' GetDeployment Text

-- | Information about the deployment.
getDeploymentResponse_deploymentInfo :: Lens' GetDeploymentResponse (Maybe DeploymentInfo)

-- | The response's http status code.
getDeploymentResponse_httpStatus :: Lens' GetDeploymentResponse Int

-- | The tag key-value pairs to remove from the on-premises instances.
removeTagsFromOnPremisesInstances_tags :: Lens' RemoveTagsFromOnPremisesInstances [Tag]

-- | The names of the on-premises instances from which to remove tags.
removeTagsFromOnPremisesInstances_instanceNames :: Lens' RemoveTagsFromOnPremisesInstances [Text]

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
getApplication_applicationName :: Lens' GetApplication Text

-- | Information about the application.
getApplicationResponse_application :: Lens' GetApplicationResponse (Maybe ApplicationInfo)

-- | The response's http status code.
getApplicationResponse_httpStatus :: Lens' GetApplicationResponse Int

-- | An identifier returned from the previous
--   <tt>ListGitHubAccountTokenNames</tt> call. It can be used to return
--   the next set of names in the list.
listGitHubAccountTokenNames_nextToken :: Lens' ListGitHubAccountTokenNames (Maybe Text)

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent
--   <tt>ListGitHubAccountTokenNames</tt> call to return the next set of
--   names in the list.
listGitHubAccountTokenNamesResponse_nextToken :: Lens' ListGitHubAccountTokenNamesResponse (Maybe Text)

-- | A list of names of connections to GitHub accounts.
listGitHubAccountTokenNamesResponse_tokenNameList :: Lens' ListGitHubAccountTokenNamesResponse (Maybe [Text])

-- | The response's http status code.
listGitHubAccountTokenNamesResponse_httpStatus :: Lens' ListGitHubAccountTokenNamesResponse Int

-- | The unique IDs of the deployment targets. The compute platform of the
--   deployment determines the type of the targets and their formats. The
--   maximum number of deployment target IDs you can specify is 25.
--   
--   <ul>
--   <li>For deployments that use the EC2/On-premises compute platform, the
--   target IDs are EC2 or on-premises instances IDs, and their target type
--   is <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the AWS Lambda compute platform, the
--   target IDs are the names of Lambda functions, and their target type is
--   <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the Amazon ECS compute platform, the
--   target IDs are pairs of Amazon ECS clusters and services specified
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   Their target type is <tt>ecsTarget</tt>.</li>
--   <li>For deployments that are deployed with AWS CloudFormation, the
--   target IDs are CloudFormation stack IDs. Their target type is
--   <tt>cloudFormationTarget</tt>.</li>
--   </ul>
batchGetDeploymentTargets_targetIds :: Lens' BatchGetDeploymentTargets (Maybe [Text])

-- | The unique ID of a deployment.
batchGetDeploymentTargets_deploymentId :: Lens' BatchGetDeploymentTargets (Maybe Text)

-- | A list of target objects for a deployment. Each target object contains
--   details about the target, such as its status and lifecycle events. The
--   type of the target objects depends on the deployment' compute
--   platform.
--   
--   <ul>
--   <li><b>EC2/On-premises</b>: Each target object is an EC2 or
--   on-premises instance.</li>
--   <li><b>AWS Lambda</b>: The target object is a specific version of an
--   AWS Lambda function.</li>
--   <li><b>Amazon ECS</b>: The target object is an Amazon ECS
--   service.</li>
--   <li><b>CloudFormation</b>: The target object is an AWS CloudFormation
--   blue/green deployment.</li>
--   </ul>
batchGetDeploymentTargetsResponse_deploymentTargets :: Lens' BatchGetDeploymentTargetsResponse (Maybe [DeploymentTarget])

-- | The response's http status code.
batchGetDeploymentTargetsResponse_httpStatus :: Lens' BatchGetDeploymentTargetsResponse Int

-- | The name of the GitHub account connection to delete.
deleteGitHubAccountToken_tokenName :: Lens' DeleteGitHubAccountToken (Maybe Text)

-- | The name of the GitHub account connection that was deleted.
deleteGitHubAccountTokenResponse_tokenName :: Lens' DeleteGitHubAccountTokenResponse (Maybe Text)

-- | The response's http status code.
deleteGitHubAccountTokenResponse_httpStatus :: Lens' DeleteGitHubAccountTokenResponse Int

-- | The unique ID of a deployment. Pass this ID to a Lambda function that
--   validates a deployment lifecycle event.
putLifecycleEventHookExecutionStatus_deploymentId :: Lens' PutLifecycleEventHookExecutionStatus (Maybe Text)

-- | The result of a Lambda function that validates a deployment lifecycle
--   event. <tt>Succeeded</tt> and <tt>Failed</tt> are the only valid
--   values for <tt>status</tt>.
putLifecycleEventHookExecutionStatus_status :: Lens' PutLifecycleEventHookExecutionStatus (Maybe LifecycleEventStatus)

-- | The execution ID of a deployment's lifecycle hook. A deployment
--   lifecycle hook is specified in the <tt>hooks</tt> section of the
--   AppSpec file.
putLifecycleEventHookExecutionStatus_lifecycleEventHookExecutionId :: Lens' PutLifecycleEventHookExecutionStatus (Maybe Text)

-- | The execution ID of the lifecycle event hook. A hook is specified in
--   the <tt>hooks</tt> section of the deployment's AppSpec file.
putLifecycleEventHookExecutionStatusResponse_lifecycleEventHookExecutionId :: Lens' PutLifecycleEventHookExecutionStatusResponse (Maybe Text)

-- | The response's http status code.
putLifecycleEventHookExecutionStatusResponse_httpStatus :: Lens' PutLifecycleEventHookExecutionStatusResponse Int

-- | The name of the on-premises instance to deregister.
deregisterOnPremisesInstance_instanceName :: Lens' DeregisterOnPremisesInstance Text

-- | An identifier returned from the previous list applications call. It
--   can be used to return the next set of applications in the list.
listApplications_nextToken :: Lens' ListApplications (Maybe Text)

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list applications call to
--   return the next set of applications in the list.
listApplicationsResponse_nextToken :: Lens' ListApplicationsResponse (Maybe Text)

-- | A list of application names.
listApplicationsResponse_applications :: Lens' ListApplicationsResponse (Maybe [Text])

-- | The response's http status code.
listApplicationsResponse_httpStatus :: Lens' ListApplicationsResponse Int

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
deleteApplication_applicationName :: Lens' DeleteApplication Text

-- | The new name to give the application.
updateApplication_newApplicationName :: Lens' UpdateApplication (Maybe Text)

-- | The current name of the application you want to change.
updateApplication_applicationName :: Lens' UpdateApplication (Maybe Text)

-- | A list of deployment IDs, separated by spaces. The maximum number of
--   deployment IDs you can specify is 25.
batchGetDeployments_deploymentIds :: Lens' BatchGetDeployments [Text]

-- | Information about the deployments.
batchGetDeploymentsResponse_deploymentsInfo :: Lens' BatchGetDeploymentsResponse (Maybe [DeploymentInfo])

-- | The response's http status code.
batchGetDeploymentsResponse_httpStatus :: Lens' BatchGetDeploymentsResponse Int

-- | A comment about the revision.
registerApplicationRevision_description :: Lens' RegisterApplicationRevision (Maybe Text)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
registerApplicationRevision_applicationName :: Lens' RegisterApplicationRevision Text

-- | Information about the application revision to register, including type
--   and location.
registerApplicationRevision_revision :: Lens' RegisterApplicationRevision RevisionLocation

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
getDeploymentGroup_applicationName :: Lens' GetDeploymentGroup Text

-- | The name of a deployment group for the specified application.
getDeploymentGroup_deploymentGroupName :: Lens' GetDeploymentGroup Text

-- | Information about the deployment group.
getDeploymentGroupResponse_deploymentGroupInfo :: Lens' GetDeploymentGroupResponse (Maybe DeploymentGroupInfo)

-- | The response's http status code.
getDeploymentGroupResponse_httpStatus :: Lens' GetDeploymentGroupResponse Int

-- | The name of the on-premises instance about which to get information.
getOnPremisesInstance_instanceName :: Lens' GetOnPremisesInstance Text

-- | Information about the on-premises instance.
getOnPremisesInstanceResponse_instanceInfo :: Lens' GetOnPremisesInstanceResponse (Maybe InstanceInfo)

-- | The response's http status code.
getOnPremisesInstanceResponse_httpStatus :: Lens' GetOnPremisesInstanceResponse Int

-- | An identifier returned from the previous
--   <tt>ListApplicationRevisions</tt> call. It can be used to return the
--   next set of applications in the list.
listApplicationRevisions_nextToken :: Lens' ListApplicationRevisions (Maybe Text)

-- | The order in which to sort the list results:
--   
--   <ul>
--   <li><tt>ascending</tt>: ascending order.</li>
--   <li><tt>descending</tt>: descending order.</li>
--   </ul>
--   
--   If not specified, the results are sorted in ascending order.
--   
--   If set to null, the results are sorted in an arbitrary order.
listApplicationRevisions_sortOrder :: Lens' ListApplicationRevisions (Maybe SortOrder)

-- | An Amazon S3 bucket name to limit the search for revisions.
--   
--   If set to null, all of the user's buckets are searched.
listApplicationRevisions_s3Bucket :: Lens' ListApplicationRevisions (Maybe Text)

-- | Whether to list revisions based on whether the revision is the target
--   revision of a deployment group:
--   
--   <ul>
--   <li><tt>include</tt>: List revisions that are target revisions of a
--   deployment group.</li>
--   <li><tt>exclude</tt>: Do not list revisions that are target revisions
--   of a deployment group.</li>
--   <li><tt>ignore</tt>: List all revisions.</li>
--   </ul>
listApplicationRevisions_deployed :: Lens' ListApplicationRevisions (Maybe ListStateFilterAction)

-- | A key prefix for the set of Amazon S3 objects to limit the search for
--   revisions.
listApplicationRevisions_s3KeyPrefix :: Lens' ListApplicationRevisions (Maybe Text)

-- | The column name to use to sort the list results:
--   
--   <ul>
--   <li><tt>registerTime</tt>: Sort by the time the revisions were
--   registered with AWS CodeDeploy.</li>
--   <li><tt>firstUsedTime</tt>: Sort by the time the revisions were first
--   used in a deployment.</li>
--   <li><tt>lastUsedTime</tt>: Sort by the time the revisions were last
--   used in a deployment.</li>
--   </ul>
--   
--   If not specified or set to null, the results are returned in an
--   arbitrary order.
listApplicationRevisions_sortBy :: Lens' ListApplicationRevisions (Maybe ApplicationRevisionSortBy)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
listApplicationRevisions_applicationName :: Lens' ListApplicationRevisions Text

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list application revisions
--   call to return the next set of application revisions in the list.
listApplicationRevisionsResponse_nextToken :: Lens' ListApplicationRevisionsResponse (Maybe Text)

-- | A list of locations that contain the matching revisions.
listApplicationRevisionsResponse_revisions :: Lens' ListApplicationRevisionsResponse (Maybe [RevisionLocation])

-- | The response's http status code.
listApplicationRevisionsResponse_httpStatus :: Lens' ListApplicationRevisionsResponse Int

-- | The name of a deployment configuration associated with the IAM user or
--   AWS account.
--   
--   If not specified, the value configured in the deployment group is used
--   as the default. If the deployment group does not have a deployment
--   configuration associated with it,
--   <tt>CodeDeployDefault</tt>.<tt>OneAtATime</tt> is used by default.
createDeployment_deploymentConfigName :: Lens' CreateDeployment (Maybe Text)

-- | The name of the deployment group.
createDeployment_deploymentGroupName :: Lens' CreateDeployment (Maybe Text)

-- | Configuration information for an automatic rollback that is added when
--   a deployment is created.
createDeployment_autoRollbackConfiguration :: Lens' CreateDeployment (Maybe AutoRollbackConfiguration)

-- | Indicates whether to deploy to all instances or only to instances that
--   are not running the latest application revision.
createDeployment_updateOutdatedInstancesOnly :: Lens' CreateDeployment (Maybe Bool)

-- | If true, then if an <tt>ApplicationStop</tt>,
--   <tt>BeforeBlockTraffic</tt>, or <tt>AfterBlockTraffic</tt> deployment
--   lifecycle event to an instance fails, then the deployment continues to
--   the next deployment lifecycle event. For example, if
--   <tt>ApplicationStop</tt> fails, the deployment continues with
--   <tt>DownloadBundle</tt>. If <tt>BeforeBlockTraffic</tt> fails, the
--   deployment continues with <tt>BlockTraffic</tt>. If
--   <tt>AfterBlockTraffic</tt> fails, the deployment continues with
--   <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
createDeployment_ignoreApplicationStopFailures :: Lens' CreateDeployment (Maybe Bool)

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
createDeployment_targetInstances :: Lens' CreateDeployment (Maybe TargetInstances)

-- | A comment about the deployment.
createDeployment_description :: Lens' CreateDeployment (Maybe Text)

-- | The type and location of the revision to deploy.
createDeployment_revision :: Lens' CreateDeployment (Maybe RevisionLocation)

-- | Information about how AWS CodeDeploy handles files that already exist
--   in a deployment target location but weren't part of the previous
--   successful deployment.
--   
--   The <tt>fileExistsBehavior</tt> parameter takes any of the following
--   values:
--   
--   <ul>
--   <li>DISALLOW: The deployment fails. This is also the default behavior
--   if no option is specified.</li>
--   <li>OVERWRITE: The version of the file from the application revision
--   currently being deployed replaces the version already on the
--   instance.</li>
--   <li>RETAIN: The version of the file already on the instance is kept
--   and used as part of the new deployment.</li>
--   </ul>
createDeployment_fileExistsBehavior :: Lens' CreateDeployment (Maybe FileExistsBehavior)

-- | The name of an AWS CodeDeploy application associated with the IAM user
--   or AWS account.
createDeployment_applicationName :: Lens' CreateDeployment Text

-- | The unique ID of a deployment.
createDeploymentResponse_deploymentId :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The response's http status code.
createDeploymentResponse_httpStatus :: Lens' CreateDeploymentResponse Int

-- | An identifier returned from the previous <tt>ListTagsForResource</tt>
--   call. It can be used to return the next set of applications in the
--   list.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The ARN of a CodeDeploy resource. <tt>ListTagsForResource</tt> returns
--   all the tags associated with the resource that is identified by the
--   <tt>ResourceArn</tt>.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | If a large amount of information is returned, an identifier is also
--   returned. It can be used in a subsequent list application revisions
--   call to return the next set of application revisions in the list.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A list of tags returned by <tt>ListTagsForResource</tt>. The tags are
--   associated with the resource identified by the input
--   <tt>ResourceArn</tt> parameter.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The name of the alarm. Maximum length is 255 characters. Each alarm
--   name can be used only once in a list of alarms.
alarm_name :: Lens' Alarm (Maybe Text)

-- | Indicates whether a deployment should continue if information about
--   the current state of alarms cannot be retrieved from Amazon
--   CloudWatch. The default value is false.
--   
--   <ul>
--   <li><tt>true</tt>: The deployment proceeds even if alarm status
--   information can't be retrieved from Amazon CloudWatch.</li>
--   <li><tt>false</tt>: The deployment stops if alarm status information
--   can't be retrieved from Amazon CloudWatch.</li>
--   </ul>
alarmConfiguration_ignorePollAlarmFailure :: Lens' AlarmConfiguration (Maybe Bool)

-- | Indicates whether the alarm configuration is enabled.
alarmConfiguration_enabled :: Lens' AlarmConfiguration (Maybe Bool)

-- | A list of alarms configured for the deployment group. A maximum of 10
--   alarms can be added to a deployment group.
alarmConfiguration_alarms :: Lens' AlarmConfiguration (Maybe [Alarm])

-- | The YAML-formatted or JSON-formatted revision string.
--   
--   For an AWS Lambda deployment, the content includes a Lambda function
--   name, the alias for its original version, and the alias for its
--   replacement version. The deployment shifts traffic from the original
--   version of the Lambda function to the replacement version.
--   
--   For an Amazon ECS deployment, the content includes the task name,
--   information about the load balancer that serves traffic to the
--   container, and more.
--   
--   For both types of deployments, the content can specify Lambda
--   functions that run at specified hooks, such as <tt>BeforeInstall</tt>,
--   during a deployment.
appSpecContent_content :: Lens' AppSpecContent (Maybe Text)

-- | The SHA256 hash value of the revision content.
appSpecContent_sha256 :: Lens' AppSpecContent (Maybe Text)

-- | True if the user has authenticated with GitHub for the specified
--   application. Otherwise, false.
applicationInfo_linkedToGitHub :: Lens' ApplicationInfo (Maybe Bool)

-- | The application ID.
applicationInfo_applicationId :: Lens' ApplicationInfo (Maybe Text)

-- | The name for a connection to a GitHub account.
applicationInfo_gitHubAccountName :: Lens' ApplicationInfo (Maybe Text)

-- | The time at which the application was created.
applicationInfo_createTime :: Lens' ApplicationInfo (Maybe UTCTime)

-- | The application name.
applicationInfo_applicationName :: Lens' ApplicationInfo (Maybe Text)

-- | The destination platform type for deployment of the application
--   (<tt>Lambda</tt> or <tt>Server</tt>).
applicationInfo_computePlatform :: Lens' ApplicationInfo (Maybe ComputePlatform)

-- | Indicates whether a defined automatic rollback configuration is
--   currently enabled.
autoRollbackConfiguration_enabled :: Lens' AutoRollbackConfiguration (Maybe Bool)

-- | The event type or types that trigger a rollback.
autoRollbackConfiguration_events :: Lens' AutoRollbackConfiguration (Maybe [AutoRollbackEvent])

-- | An Auto Scaling lifecycle event hook name.
autoScalingGroup_hook :: Lens' AutoScalingGroup (Maybe Text)

-- | The Auto Scaling group name.
autoScalingGroup_name :: Lens' AutoScalingGroup (Maybe Text)

-- | Information about how instances are provisioned for a replacement
--   environment in a blue/green deployment.
blueGreenDeploymentConfiguration_greenFleetProvisioningOption :: Lens' BlueGreenDeploymentConfiguration (Maybe GreenFleetProvisioningOption)

-- | Information about the action to take when newly provisioned instances
--   are ready to receive traffic in a blue/green deployment.
blueGreenDeploymentConfiguration_deploymentReadyOption :: Lens' BlueGreenDeploymentConfiguration (Maybe DeploymentReadyOption)

-- | Information about whether to terminate instances in the original fleet
--   during a blue/green deployment.
blueGreenDeploymentConfiguration_terminateBlueInstancesOnDeploymentSuccess :: Lens' BlueGreenDeploymentConfiguration (Maybe BlueInstanceTerminationOption)

-- | The action to take on instances in the original environment after a
--   successful blue/green deployment.
--   
--   <ul>
--   <li><tt>TERMINATE</tt>: Instances are terminated after a specified
--   wait time.</li>
--   <li><tt>KEEP_ALIVE</tt>: Instances are left running after they are
--   deregistered from the load balancer and removed from the deployment
--   group.</li>
--   </ul>
blueInstanceTerminationOption_action :: Lens' BlueInstanceTerminationOption (Maybe InstanceAction)

-- | For an Amazon EC2 deployment, the number of minutes to wait after a
--   successful blue/green deployment before terminating instances from the
--   original environment.
--   
--   For an Amazon ECS deployment, the number of minutes before deleting
--   the original (blue) task set. During an Amazon ECS deployment,
--   CodeDeploy shifts traffic from the original (blue) task set to a
--   replacement (green) task set.
--   
--   The maximum setting is 2880 minutes (2 days).
blueInstanceTerminationOption_terminationWaitTimeInMinutes :: Lens' BlueInstanceTerminationOption (Maybe Int)

-- | The unique ID of a deployment target that has a type of
--   <tt>CloudFormationTarget</tt>.
cloudFormationTarget_targetId :: Lens' CloudFormationTarget (Maybe Text)

-- | The unique ID of an AWS CloudFormation blue/green deployment.
cloudFormationTarget_deploymentId :: Lens' CloudFormationTarget (Maybe Text)

-- | The status of an AWS CloudFormation blue/green deployment's target
--   application.
cloudFormationTarget_status :: Lens' CloudFormationTarget (Maybe TargetStatus)

-- | The percentage of production traffic that the target version of an AWS
--   CloudFormation blue/green deployment receives.
cloudFormationTarget_targetVersionWeight :: Lens' CloudFormationTarget (Maybe Double)

-- | The resource type for the AWS CloudFormation blue/green deployment.
cloudFormationTarget_resourceType :: Lens' CloudFormationTarget (Maybe Text)

-- | The lifecycle events of the AWS CloudFormation blue/green deployment
--   to this target application.
cloudFormationTarget_lifecycleEvents :: Lens' CloudFormationTarget (Maybe [LifecycleEvent])

-- | The date and time when the target application was updated by an AWS
--   CloudFormation blue/green deployment.
cloudFormationTarget_lastUpdatedAt :: Lens' CloudFormationTarget (Maybe UTCTime)

-- | The deployment configuration name.
deploymentConfigInfo_deploymentConfigName :: Lens' DeploymentConfigInfo (Maybe Text)

-- | The deployment configuration ID.
deploymentConfigInfo_deploymentConfigId :: Lens' DeploymentConfigInfo (Maybe Text)

-- | The time at which the deployment configuration was created.
deploymentConfigInfo_createTime :: Lens' DeploymentConfigInfo (Maybe UTCTime)

-- | The configuration that specifies how the deployment traffic is routed.
--   Used for deployments with a Lambda or ECS compute platform only.
deploymentConfigInfo_trafficRoutingConfig :: Lens' DeploymentConfigInfo (Maybe TrafficRoutingConfig)

-- | Information about the number or percentage of minimum healthy
--   instance.
deploymentConfigInfo_minimumHealthyHosts :: Lens' DeploymentConfigInfo (Maybe MinimumHealthyHosts)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentConfigInfo_computePlatform :: Lens' DeploymentConfigInfo (Maybe ComputePlatform)

-- | Information about groups of tags applied to an on-premises instance.
--   The deployment group includes only on-premises instances identified by
--   all the tag groups. Cannot be used in the same call as
--   onPremisesInstanceTagFilters.
deploymentGroupInfo_onPremisesTagSet :: Lens' DeploymentGroupInfo (Maybe OnPremisesTagSet)

-- | Indicates what happens when new EC2 instances are launched
--   mid-deployment and do not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
deploymentGroupInfo_outdatedInstancesStrategy :: Lens' DeploymentGroupInfo (Maybe OutdatedInstancesStrategy)

-- | A service role Amazon Resource Name (ARN) that grants CodeDeploy
--   permission to make calls to AWS services on your behalf. For more
--   information, see <a>Create a Service Role for AWS CodeDeploy</a> in
--   the <i>AWS CodeDeploy User Guide</i>.
deploymentGroupInfo_serviceRoleArn :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The deployment configuration name.
deploymentGroupInfo_deploymentConfigName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The deployment group name.
deploymentGroupInfo_deploymentGroupName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | Information about the automatic rollback configuration associated with
--   the deployment group.
deploymentGroupInfo_autoRollbackConfiguration :: Lens' DeploymentGroupInfo (Maybe AutoRollbackConfiguration)

-- | The deployment group ID.
deploymentGroupInfo_deploymentGroupId :: Lens' DeploymentGroupInfo (Maybe Text)

-- | Information about triggers associated with the deployment group.
deploymentGroupInfo_triggerConfigurations :: Lens' DeploymentGroupInfo (Maybe [TriggerConfig])

-- | The Amazon EC2 tags on which to filter. The deployment group includes
--   EC2 instances with any of the specified tags.
deploymentGroupInfo_ec2TagFilters :: Lens' DeploymentGroupInfo (Maybe [EC2TagFilter])

-- | Information about the deployment group's target revision, including
--   type and location.
deploymentGroupInfo_targetRevision :: Lens' DeploymentGroupInfo (Maybe RevisionLocation)

-- | Information about the most recent attempted deployment to the
--   deployment group.
deploymentGroupInfo_lastAttemptedDeployment :: Lens' DeploymentGroupInfo (Maybe LastDeploymentInfo)

-- | Information about the most recent successful deployment to the
--   deployment group.
deploymentGroupInfo_lastSuccessfulDeployment :: Lens' DeploymentGroupInfo (Maybe LastDeploymentInfo)

-- | The on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags.
deploymentGroupInfo_onPremisesInstanceTagFilters :: Lens' DeploymentGroupInfo (Maybe [TagFilter])

-- | Information about blue/green deployment options for a deployment
--   group.
deploymentGroupInfo_blueGreenDeploymentConfiguration :: Lens' DeploymentGroupInfo (Maybe BlueGreenDeploymentConfiguration)

-- | Information about the load balancer to use in a deployment.
deploymentGroupInfo_loadBalancerInfo :: Lens' DeploymentGroupInfo (Maybe LoadBalancerInfo)

-- | Information about groups of tags applied to an EC2 instance. The
--   deployment group includes only EC2 instances identified by all of the
--   tag groups. Cannot be used in the same call as ec2TagFilters.
deploymentGroupInfo_ec2TagSet :: Lens' DeploymentGroupInfo (Maybe EC2TagSet)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
deploymentGroupInfo_deploymentStyle :: Lens' DeploymentGroupInfo (Maybe DeploymentStyle)

-- | A list of associated Auto Scaling groups.
deploymentGroupInfo_autoScalingGroups :: Lens' DeploymentGroupInfo (Maybe [AutoScalingGroup])

-- | The target Amazon ECS services in the deployment group. This applies
--   only to deployment groups that use the Amazon ECS compute platform. A
--   target Amazon ECS service is specified as an Amazon ECS cluster and
--   service name pair using the format
--   <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
deploymentGroupInfo_ecsServices :: Lens' DeploymentGroupInfo (Maybe [ECSService])

-- | A list of alarms associated with the deployment group.
deploymentGroupInfo_alarmConfiguration :: Lens' DeploymentGroupInfo (Maybe AlarmConfiguration)

-- | The application name.
deploymentGroupInfo_applicationName :: Lens' DeploymentGroupInfo (Maybe Text)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentGroupInfo_computePlatform :: Lens' DeploymentGroupInfo (Maybe ComputePlatform)

-- | The deployment configuration name.
deploymentInfo_deploymentConfigName :: Lens' DeploymentInfo (Maybe Text)

-- | The unique ID of a deployment.
deploymentInfo_deploymentId :: Lens' DeploymentInfo (Maybe Text)

-- | The current state of the deployment as a whole.
deploymentInfo_status :: Lens' DeploymentInfo (Maybe DeploymentStatus)

-- | The deployment group name.
deploymentInfo_deploymentGroupName :: Lens' DeploymentInfo (Maybe Text)

-- | Information about the automatic rollback configuration associated with
--   the deployment.
deploymentInfo_autoRollbackConfiguration :: Lens' DeploymentInfo (Maybe AutoRollbackConfiguration)

-- | Indicates whether only instances that are not running the latest
--   application revision are to be deployed to.
deploymentInfo_updateOutdatedInstancesOnly :: Lens' DeploymentInfo (Maybe Bool)

-- | If true, then if an <tt>ApplicationStop</tt>,
--   <tt>BeforeBlockTraffic</tt>, or <tt>AfterBlockTraffic</tt> deployment
--   lifecycle event to an instance fails, then the deployment continues to
--   the next deployment lifecycle event. For example, if
--   <tt>ApplicationStop</tt> fails, the deployment continues with
--   DownloadBundle. If <tt>BeforeBlockTraffic</tt> fails, the deployment
--   continues with <tt>BlockTraffic</tt>. If <tt>AfterBlockTraffic</tt>
--   fails, the deployment continues with <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
deploymentInfo_ignoreApplicationStopFailures :: Lens' DeploymentInfo (Maybe Bool)

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
deploymentInfo_targetInstances :: Lens' DeploymentInfo (Maybe TargetInstances)

-- | A timestamp that indicates when the deployment was deployed to the
--   deployment group.
--   
--   In some cases, the reported value of the start time might be later
--   than the complete time. This is due to differences in the clock
--   settings of backend servers that participate in the deployment
--   process.
deploymentInfo_startTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | Indicates whether the wait period set for the termination of instances
--   in the original environment has started. Status is 'false' if the
--   KEEP_ALIVE option is specified. Otherwise, 'true' as soon as the
--   termination wait period starts.
deploymentInfo_instanceTerminationWaitTimeStarted :: Lens' DeploymentInfo (Maybe Bool)

-- | Information about the application revision that was deployed to the
--   deployment group before the most recent successful deployment.
deploymentInfo_previousRevision :: Lens' DeploymentInfo (Maybe RevisionLocation)

-- | The means by which the deployment was created:
--   
--   <ul>
--   <li><tt>user</tt>: A user created the deployment.</li>
--   <li><tt>autoscaling</tt>: Amazon EC2 Auto Scaling created the
--   deployment.</li>
--   <li><tt>codeDeployRollback</tt>: A rollback process created the
--   deployment.</li>
--   <li><tt>CodeDeployAutoUpdate</tt>: An auto-update process created the
--   deployment when it detected outdated EC2 instances.</li>
--   </ul>
deploymentInfo_creator :: Lens' DeploymentInfo (Maybe DeploymentCreator)

-- | Information about blue/green deployment options for this deployment.
deploymentInfo_blueGreenDeploymentConfiguration :: Lens' DeploymentInfo (Maybe BlueGreenDeploymentConfiguration)

-- | Information about any error associated with this deployment.
deploymentInfo_errorInformation :: Lens' DeploymentInfo (Maybe ErrorInformation)

-- | Information about the load balancer used in the deployment.
deploymentInfo_loadBalancerInfo :: Lens' DeploymentInfo (Maybe LoadBalancerInfo)

-- | A timestamp that indicates when the deployment was complete.
deploymentInfo_completeTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | A timestamp that indicates when the deployment was created.
deploymentInfo_createTime :: Lens' DeploymentInfo (Maybe UTCTime)

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
deploymentInfo_deploymentStyle :: Lens' DeploymentInfo (Maybe DeploymentStyle)

-- | A comment about the deployment.
deploymentInfo_description :: Lens' DeploymentInfo (Maybe Text)

-- | Information about the location of stored application artifacts and the
--   service from which to retrieve them.
deploymentInfo_revision :: Lens' DeploymentInfo (Maybe RevisionLocation)

-- | Information about a deployment rollback.
deploymentInfo_rollbackInfo :: Lens' DeploymentInfo (Maybe RollbackInfo)

-- | The unique ID for an external resource (for example, a CloudFormation
--   stack ID) that is linked to this deployment.
deploymentInfo_externalId :: Lens' DeploymentInfo (Maybe Text)

-- | Messages that contain information about the status of a deployment.
deploymentInfo_deploymentStatusMessages :: Lens' DeploymentInfo (Maybe [Text])

-- | Undocumented member.
deploymentInfo_relatedDeployments :: Lens' DeploymentInfo (Maybe RelatedDeployments)

-- | The application name.
deploymentInfo_applicationName :: Lens' DeploymentInfo (Maybe Text)

-- | Information about how AWS CodeDeploy handles files that already exist
--   in a deployment target location but weren't part of the previous
--   successful deployment.
--   
--   <ul>
--   <li><tt>DISALLOW</tt>: The deployment fails. This is also the default
--   behavior if no option is specified.</li>
--   <li><tt>OVERWRITE</tt>: The version of the file from the application
--   revision currently being deployed replaces the version already on the
--   instance.</li>
--   <li><tt>RETAIN</tt>: The version of the file already on the instance
--   is kept and used as part of the new deployment.</li>
--   </ul>
deploymentInfo_fileExistsBehavior :: Lens' DeploymentInfo (Maybe FileExistsBehavior)

-- | The destination platform type for the deployment (<tt>Lambda</tt>,
--   <tt>Server</tt>, or <tt>ECS</tt>).
deploymentInfo_computePlatform :: Lens' DeploymentInfo (Maybe ComputePlatform)

-- | Provides information about the results of a deployment, such as
--   whether instances in the original environment in a blue/green
--   deployment were not terminated.
deploymentInfo_additionalDeploymentStatusInfo :: Lens' DeploymentInfo (Maybe Text)

-- | A summary of the deployment status of the instances in the deployment.
deploymentInfo_deploymentOverview :: Lens' DeploymentInfo (Maybe DeploymentOverview)

-- | The number of instances in the deployment to which revisions have been
--   successfully deployed.
deploymentOverview_succeeded :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in a replacement environment ready to receive
--   traffic in a blue/green deployment.
deploymentOverview_ready :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a pending state.
deploymentOverview_pending :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a failed state.
deploymentOverview_failed :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in the deployment in a skipped state.
deploymentOverview_skipped :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of instances in which the deployment is in progress.
deploymentOverview_inProgress :: Lens' DeploymentOverview (Maybe Integer)

-- | The number of minutes to wait before the status of a blue/green
--   deployment is changed to Stopped if rerouting is not started manually.
--   Applies only to the <tt>STOP_DEPLOYMENT</tt> option for
--   <tt>actionOnTimeout</tt>.
deploymentReadyOption_waitTimeInMinutes :: Lens' DeploymentReadyOption (Maybe Int)

-- | Information about when to reroute traffic from an original environment
--   to a replacement environment in a blue/green deployment.
--   
--   <ul>
--   <li>CONTINUE_DEPLOYMENT: Register new instances with the load balancer
--   immediately after the new application revision is installed on the
--   instances in the replacement environment.</li>
--   <li>STOP_DEPLOYMENT: Do not register new instances with a load
--   balancer unless traffic rerouting is started using ContinueDeployment.
--   If traffic rerouting is not started before the end of the specified
--   wait period, the deployment status is changed to Stopped.</li>
--   </ul>
deploymentReadyOption_actionOnTimeout :: Lens' DeploymentReadyOption (Maybe DeploymentReadyAction)

-- | Indicates whether to run an in-place deployment or a blue/green
--   deployment.
deploymentStyle_deploymentType :: Lens' DeploymentStyle (Maybe DeploymentType)

-- | Indicates whether to route deployment traffic behind a load balancer.
deploymentStyle_deploymentOption :: Lens' DeploymentStyle (Maybe DeploymentOption)

-- | Information about the target for a deployment that uses the Amazon ECS
--   compute platform.
deploymentTarget_ecsTarget :: Lens' DeploymentTarget (Maybe ECSTarget)

-- | Information about the target for a deployment that uses the AWS Lambda
--   compute platform.
deploymentTarget_lambdaTarget :: Lens' DeploymentTarget (Maybe LambdaTarget)

-- | Undocumented member.
deploymentTarget_cloudFormationTarget :: Lens' DeploymentTarget (Maybe CloudFormationTarget)

-- | Information about the target for a deployment that uses the
--   EC2/On-premises compute platform.
deploymentTarget_instanceTarget :: Lens' DeploymentTarget (Maybe InstanceTarget)

-- | The deployment type that is specific to the deployment's compute
--   platform or deployments initiated by a CloudFormation stack update.
deploymentTarget_deploymentTargetType :: Lens' DeploymentTarget (Maybe DeploymentTargetType)

-- | The last portion of the diagnostic log.
--   
--   If available, AWS CodeDeploy returns up to the last 4 KB of the
--   diagnostic log.
diagnostics_logTail :: Lens' Diagnostics (Maybe Text)

-- | The message associated with the error.
diagnostics_message :: Lens' Diagnostics (Maybe Text)

-- | The name of the script.
diagnostics_scriptName :: Lens' Diagnostics (Maybe Text)

-- | The associated error code:
--   
--   <ul>
--   <li>Success: The specified script ran.</li>
--   <li>ScriptMissing: The specified script was not found in the specified
--   location.</li>
--   <li>ScriptNotExecutable: The specified script is not a recognized
--   executable file type.</li>
--   <li>ScriptTimedOut: The specified script did not finish running in the
--   specified time period.</li>
--   <li>ScriptFailed: The specified script failed to run as expected.</li>
--   <li>UnknownError: The specified script did not run for an unknown
--   reason.</li>
--   </ul>
diagnostics_errorCode :: Lens' Diagnostics (Maybe LifecycleErrorCode)

-- | The tag filter key.
eC2TagFilter_key :: Lens' EC2TagFilter (Maybe Text)

-- | The tag filter value.
eC2TagFilter_value :: Lens' EC2TagFilter (Maybe Text)

-- | The tag filter type:
--   
--   <ul>
--   <li><tt>KEY_ONLY</tt>: Key only.</li>
--   <li><tt>VALUE_ONLY</tt>: Value only.</li>
--   <li><tt>KEY_AND_VALUE</tt>: Key and value.</li>
--   </ul>
eC2TagFilter_type :: Lens' EC2TagFilter (Maybe EC2TagFilterType)

-- | A list that contains other lists of EC2 instance tag groups. For an
--   instance to be included in the deployment group, it must be identified
--   by all of the tag groups in the list.
eC2TagSet_ec2TagSetList :: Lens' EC2TagSet (Maybe [[EC2TagFilter]])

-- | The name of the target Amazon ECS service.
eCSService_serviceName :: Lens' ECSService (Maybe Text)

-- | The name of the cluster that the Amazon ECS service is associated
--   with.
eCSService_clusterName :: Lens' ECSService (Maybe Text)

-- | The unique ID of a deployment target that has a type of
--   <tt>ecsTarget</tt>.
eCSTarget_targetId :: Lens' ECSTarget (Maybe Text)

-- | The unique ID of a deployment.
eCSTarget_deploymentId :: Lens' ECSTarget (Maybe Text)

-- | The status an Amazon ECS deployment's target ECS application.
eCSTarget_status :: Lens' ECSTarget (Maybe TargetStatus)

-- | The <tt>ECSTaskSet</tt> objects associated with the ECS target.
eCSTarget_taskSetsInfo :: Lens' ECSTarget (Maybe [ECSTaskSet])

-- | The Amazon Resource Name (ARN) of the target.
eCSTarget_targetArn :: Lens' ECSTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target Amazon ECS
--   application.
eCSTarget_lifecycleEvents :: Lens' ECSTarget (Maybe [LifecycleEvent])

-- | The date and time when the target Amazon ECS application was updated
--   by a deployment.
eCSTarget_lastUpdatedAt :: Lens' ECSTarget (Maybe UTCTime)

-- | The number of tasks in the task set that are in the <tt>RUNNING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>RUNNING</tt>
--   state is running and ready for use.
eCSTaskSet_runningCount :: Lens' ECSTaskSet (Maybe Integer)

-- | The status of the task set. There are three valid task set statuses:
--   
--   <ul>
--   <li><tt>PRIMARY</tt>: Indicates the task set is serving production
--   traffic.</li>
--   <li><tt>ACTIVE</tt>: Indicates the task set is not serving production
--   traffic.</li>
--   <li><tt>DRAINING</tt>: Indicates the tasks in the task set are being
--   stopped and their corresponding targets are being deregistered from
--   their target group.</li>
--   </ul>
eCSTaskSet_status :: Lens' ECSTaskSet (Maybe Text)

-- | The number of tasks in a task set. During a deployment that uses the
--   Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a
--   new task set and uses this value to determine how many tasks to
--   create. After the updated task set is created, CodeDeploy shifts
--   traffic to the new task set.
eCSTaskSet_desiredCount :: Lens' ECSTaskSet (Maybe Integer)

-- | The number of tasks in the task set that are in the <tt>PENDING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>PENDING</tt>
--   state is preparing to enter the <tt>RUNNING</tt> state. A task set
--   enters the <tt>PENDING</tt> status when it launches for the first
--   time, or when it is restarted after being in the <tt>STOPPED</tt>
--   state.
eCSTaskSet_pendingCount :: Lens' ECSTaskSet (Maybe Integer)

-- | A label that identifies whether the ECS task set is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
eCSTaskSet_taskSetLabel :: Lens' ECSTaskSet (Maybe TargetLabel)

-- | The target group associated with the task set. The target group is
--   used by AWS CodeDeploy to manage traffic to a task set.
eCSTaskSet_targetGroup :: Lens' ECSTaskSet (Maybe TargetGroupInfo)

-- | The percentage of traffic served by this task set.
eCSTaskSet_trafficWeight :: Lens' ECSTaskSet (Maybe Double)

-- | A unique ID of an <tt>ECSTaskSet</tt>.
eCSTaskSet_identifer :: Lens' ECSTaskSet (Maybe Text)

-- | For blue/green deployments, the name of the load balancer that is used
--   to route traffic from original instances to replacement instances in a
--   blue/green deployment. For in-place deployments, the name of the load
--   balancer that instances are deregistered from so they are not serving
--   traffic during a deployment, and then re-registered with after the
--   deployment is complete.
eLBInfo_name :: Lens' ELBInfo (Maybe Text)

-- | An accompanying error message.
errorInformation_message :: Lens' ErrorInformation (Maybe Text)

-- | For more information, see <a>Error Codes for AWS CodeDeploy</a> in the
--   <a>AWS CodeDeploy User Guide</a>.
--   
--   The error code:
--   
--   <ul>
--   <li>APPLICATION_MISSING: The application was missing. This error code
--   is most likely raised if the application is deleted after the
--   deployment is created, but before it is started.</li>
--   <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This
--   error code is most likely raised if the deployment group is deleted
--   after the deployment is created, but before it is started.</li>
--   <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to
--   be successfully deployed within the instance health constraints
--   specified.</li>
--   <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
--   deployed within the instance health constraints specified.</li>
--   <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li>
--   <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions.</li>
--   <li>INTERNAL_ERROR: There was an internal error.</li>
--   <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to
--   Amazon EC2.</li>
--   <li>NO_INSTANCES: No instances were specified, or no instances can be
--   found.</li>
--   <li>OVER_MAX_INSTANCES: The maximum number of instances was
--   exceeded.</li>
--   <li>THROTTLED: The operation was throttled because the calling account
--   exceeded the throttling limits of one or more AWS services.</li>
--   <li>TIMEOUT: The deployment has timed out.</li>
--   <li>REVISION_MISSING: The revision ID was missing. This error code is
--   most likely raised if the revision is deleted after the deployment is
--   created, but before it is started.</li>
--   </ul>
errorInformation_code :: Lens' ErrorInformation (Maybe DeployErrorCode)

-- | When the revision was registered with AWS CodeDeploy.
genericRevisionInfo_registerTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | The deployment groups for which this is the current target revision.
genericRevisionInfo_deploymentGroups :: Lens' GenericRevisionInfo (Maybe [Text])

-- | A comment about the revision.
genericRevisionInfo_description :: Lens' GenericRevisionInfo (Maybe Text)

-- | When the revision was first used by AWS CodeDeploy.
genericRevisionInfo_firstUsedTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | When the revision was last used by AWS CodeDeploy.
genericRevisionInfo_lastUsedTime :: Lens' GenericRevisionInfo (Maybe UTCTime)

-- | The SHA1 commit ID of the GitHub commit that represents the bundled
--   artifacts for the application revision.
gitHubLocation_commitId :: Lens' GitHubLocation (Maybe Text)

-- | The GitHub account and repository pair that stores a reference to the
--   commit that represents the bundled artifacts for the application
--   revision.
--   
--   Specified as account/repository.
gitHubLocation_repository :: Lens' GitHubLocation (Maybe Text)

-- | The method used to add instances to a replacement environment.
--   
--   <ul>
--   <li><tt>DISCOVER_EXISTING</tt>: Use instances that already exist or
--   will be created manually.</li>
--   <li><tt>COPY_AUTO_SCALING_GROUP</tt>: Use settings from a specified
--   Auto Scaling group to define and create instances in a new Auto
--   Scaling group.</li>
--   </ul>
greenFleetProvisioningOption_action :: Lens' GreenFleetProvisioningOption (Maybe GreenFleetProvisioningAction)

-- | The time at which the on-premises instance was registered.
instanceInfo_registerTime :: Lens' InstanceInfo (Maybe UTCTime)

-- | The IAM user ARN associated with the on-premises instance.
instanceInfo_iamUserArn :: Lens' InstanceInfo (Maybe Text)

-- | The name of the on-premises instance.
instanceInfo_instanceName :: Lens' InstanceInfo (Maybe Text)

-- | The ARN of the on-premises instance.
instanceInfo_instanceArn :: Lens' InstanceInfo (Maybe Text)

-- | The tags currently associated with the on-premises instance.
instanceInfo_tags :: Lens' InstanceInfo (Maybe [Tag])

-- | The ARN of the IAM session associated with the on-premises instance.
instanceInfo_iamSessionArn :: Lens' InstanceInfo (Maybe Text)

-- | If the on-premises instance was deregistered, the time at which the
--   on-premises instance was deregistered.
instanceInfo_deregisterTime :: Lens' InstanceInfo (Maybe UTCTime)

-- | The unique ID of a deployment target that has a type of
--   <tt>instanceTarget</tt>.
instanceTarget_targetId :: Lens' InstanceTarget (Maybe Text)

-- | The unique ID of a deployment.
instanceTarget_deploymentId :: Lens' InstanceTarget (Maybe Text)

-- | The status an EC2/On-premises deployment's target instance.
instanceTarget_status :: Lens' InstanceTarget (Maybe TargetStatus)

-- | A label that identifies whether the instance is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
instanceTarget_instanceLabel :: Lens' InstanceTarget (Maybe TargetLabel)

-- | The Amazon Resource Name (ARN) of the target.
instanceTarget_targetArn :: Lens' InstanceTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target instance.
instanceTarget_lifecycleEvents :: Lens' InstanceTarget (Maybe [LifecycleEvent])

-- | The date and time when the target instance was updated by a
--   deployment.
instanceTarget_lastUpdatedAt :: Lens' InstanceTarget (Maybe UTCTime)

-- | The alias of a Lambda function. For more information, see <a>AWS
--   Lambda Function Aliases</a> in the <i>AWS Lambda Developer Guide</i>.
lambdaFunctionInfo_functionAlias :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The version of a Lambda function that production traffic points to.
lambdaFunctionInfo_currentVersion :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The version of a Lambda function that production traffic points to
--   after the Lambda function is deployed.
lambdaFunctionInfo_targetVersion :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The percentage of production traffic that the target version of a
--   Lambda function receives.
lambdaFunctionInfo_targetVersionWeight :: Lens' LambdaFunctionInfo (Maybe Double)

-- | The name of a Lambda function.
lambdaFunctionInfo_functionName :: Lens' LambdaFunctionInfo (Maybe Text)

-- | The unique ID of a deployment target that has a type of
--   <tt>lambdaTarget</tt>.
lambdaTarget_targetId :: Lens' LambdaTarget (Maybe Text)

-- | The unique ID of a deployment.
lambdaTarget_deploymentId :: Lens' LambdaTarget (Maybe Text)

-- | The status an AWS Lambda deployment's target Lambda function.
lambdaTarget_status :: Lens' LambdaTarget (Maybe TargetStatus)

-- | The Amazon Resource Name (ARN) of the target.
lambdaTarget_targetArn :: Lens' LambdaTarget (Maybe Text)

-- | The lifecycle events of the deployment to this target Lambda function.
lambdaTarget_lifecycleEvents :: Lens' LambdaTarget (Maybe [LifecycleEvent])

-- | A <tt>LambdaFunctionInfo</tt> object that describes a target Lambda
--   function.
lambdaTarget_lambdaFunctionInfo :: Lens' LambdaTarget (Maybe LambdaFunctionInfo)

-- | The date and time when the target Lambda function was updated by a
--   deployment.
lambdaTarget_lastUpdatedAt :: Lens' LambdaTarget (Maybe UTCTime)

-- | The unique ID of a deployment.
lastDeploymentInfo_deploymentId :: Lens' LastDeploymentInfo (Maybe Text)

-- | The status of the most recent deployment.
lastDeploymentInfo_status :: Lens' LastDeploymentInfo (Maybe DeploymentStatus)

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group was complete.
lastDeploymentInfo_endTime :: Lens' LastDeploymentInfo (Maybe UTCTime)

-- | A timestamp that indicates when the most recent deployment to the
--   deployment group started.
lastDeploymentInfo_createTime :: Lens' LastDeploymentInfo (Maybe UTCTime)

-- | Diagnostic information about the deployment lifecycle event.
lifecycleEvent_diagnostics :: Lens' LifecycleEvent (Maybe Diagnostics)

-- | The deployment lifecycle event status:
--   
--   <ul>
--   <li>Pending: The deployment lifecycle event is pending.</li>
--   <li>InProgress: The deployment lifecycle event is in progress.</li>
--   <li>Succeeded: The deployment lifecycle event ran successfully.</li>
--   <li>Failed: The deployment lifecycle event has failed.</li>
--   <li>Skipped: The deployment lifecycle event has been skipped.</li>
--   <li>Unknown: The deployment lifecycle event is unknown.</li>
--   </ul>
lifecycleEvent_status :: Lens' LifecycleEvent (Maybe LifecycleEventStatus)

-- | A timestamp that indicates when the deployment lifecycle event
--   started.
lifecycleEvent_startTime :: Lens' LifecycleEvent (Maybe UTCTime)

-- | A timestamp that indicates when the deployment lifecycle event ended.
lifecycleEvent_endTime :: Lens' LifecycleEvent (Maybe UTCTime)

-- | The deployment lifecycle event name, such as <tt>ApplicationStop</tt>,
--   <tt>BeforeInstall</tt>, <tt>AfterInstall</tt>,
--   <tt>ApplicationStart</tt>, or <tt>ValidateService</tt>.
lifecycleEvent_lifecycleEventName :: Lens' LifecycleEvent (Maybe Text)

-- | The target group pair information. This is an array of
--   <tt>TargeGroupPairInfo</tt> objects with a maximum size of one.
loadBalancerInfo_targetGroupPairInfoList :: Lens' LoadBalancerInfo (Maybe [TargetGroupPairInfo])

-- | An array that contains information about the load balancer to use for
--   load balancing in a deployment. In Elastic Load Balancing, load
--   balancers are used with Classic Load Balancers.
--   
--   Adding more than one load balancer to the array is not supported.
loadBalancerInfo_elbInfoList :: Lens' LoadBalancerInfo (Maybe [ELBInfo])

-- | An array that contains information about the target group to use for
--   load balancing in a deployment. In Elastic Load Balancing, target
--   groups are used with Application Load Balancers.
--   
--   Adding more than one target group to the array is not supported.
loadBalancerInfo_targetGroupInfoList :: Lens' LoadBalancerInfo (Maybe [TargetGroupInfo])

-- | The minimum healthy instance value.
minimumHealthyHosts_value :: Lens' MinimumHealthyHosts (Maybe Int)

-- | The minimum healthy instance type:
--   
--   <ul>
--   <li><tt>HOST_COUNT</tt>: The minimum number of healthy instances as an
--   absolute value.</li>
--   <li><tt>FLEET_PERCENT</tt>: The minimum number of healthy instances as
--   a percentage of the total number of instances in the deployment.</li>
--   </ul>
--   
--   In an example of nine instances, if a HOST_COUNT of six is specified,
--   deploy to up to three instances at a time. The deployment is
--   successful if six or more instances are deployed to successfully.
--   Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
--   specified, deploy to up to five instances at a time. The deployment is
--   successful if four or more instances are deployed to successfully.
--   Otherwise, the deployment fails.
--   
--   In a call to the <tt>GetDeploymentConfig</tt>,
--   CodeDeployDefault.OneAtATime returns a minimum healthy instance type
--   of MOST_CONCURRENCY and a value of 1. This means a deployment to only
--   one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
--   only to HOST_COUNT or FLEET_PERCENT.) In addition, with
--   CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that
--   all instances but one are kept in a healthy state during the
--   deployment. Although this allows one instance at a time to be taken
--   offline for a new deployment, it also means that if the deployment to
--   the last instance fails, the overall deployment is still successful.
--   
--   For more information, see <a>AWS CodeDeploy Instance Health</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
minimumHealthyHosts_type :: Lens' MinimumHealthyHosts (Maybe MinimumHealthyHostsType)

-- | A list that contains other lists of on-premises instance tag groups.
--   For an instance to be included in the deployment group, it must be
--   identified by all of the tag groups in the list.
onPremisesTagSet_onPremisesTagSetList :: Lens' OnPremisesTagSet (Maybe [[TagFilter]])

-- | The YAML-formatted or JSON-formatted revision string. It includes
--   information about which Lambda function to update and optional Lambda
--   functions that validate deployment lifecycle events.
rawString_content :: Lens' RawString (Maybe Text)

-- | The SHA256 hash value of the revision content.
rawString_sha256 :: Lens' RawString (Maybe Text)

-- | The deployment ID of the root deployment that triggered this
--   deployment.
relatedDeployments_autoUpdateOutdatedInstancesRootDeploymentId :: Lens' RelatedDeployments (Maybe Text)

-- | The deployment IDs of 'auto-update outdated instances' deployments
--   triggered by this deployment.
relatedDeployments_autoUpdateOutdatedInstancesDeploymentIds :: Lens' RelatedDeployments (Maybe [Text])

-- | Information about an application revision, including usage details and
--   associated deployment groups.
revisionInfo_genericRevisionInfo :: Lens' RevisionInfo (Maybe GenericRevisionInfo)

-- | Information about the location and type of an application revision.
revisionInfo_revisionLocation :: Lens' RevisionInfo (Maybe RevisionLocation)

-- | The type of application revision:
--   
--   <ul>
--   <li>S3: An application revision stored in Amazon S3.</li>
--   <li>GitHub: An application revision stored in GitHub (EC2/On-premises
--   deployments only).</li>
--   <li>String: A YAML-formatted or JSON-formatted string (AWS Lambda
--   deployments only).</li>
--   <li>AppSpecContent: An <tt>AppSpecContent</tt> object that contains
--   the contents of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML stored as a
--   RawString.</li>
--   </ul>
revisionLocation_revisionType :: Lens' RevisionLocation (Maybe RevisionLocationType)

-- | Information about the location of a revision stored in Amazon S3.
revisionLocation_s3Location :: Lens' RevisionLocation (Maybe S3Location)

-- | The content of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML and stored as a
--   RawString.
revisionLocation_appSpecContent :: Lens' RevisionLocation (Maybe AppSpecContent)

-- | Information about the location of application artifacts stored in
--   GitHub.
revisionLocation_gitHubLocation :: Lens' RevisionLocation (Maybe GitHubLocation)

-- | Information about the location of an AWS Lambda deployment revision
--   stored as a RawString.
revisionLocation_string :: Lens' RevisionLocation (Maybe RawString)

-- | Information that describes the status of a deployment rollback (for
--   example, whether the deployment can't be rolled back, is in progress,
--   failed, or succeeded).
rollbackInfo_rollbackMessage :: Lens' RollbackInfo (Maybe Text)

-- | The deployment ID of the deployment that was underway and triggered a
--   rollback deployment because it failed or was stopped.
rollbackInfo_rollbackTriggeringDeploymentId :: Lens' RollbackInfo (Maybe Text)

-- | The ID of the deployment rollback.
rollbackInfo_rollbackDeploymentId :: Lens' RollbackInfo (Maybe Text)

-- | The name of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
s3Location_key :: Lens' S3Location (Maybe Text)

-- | The ETag of the Amazon S3 object that represents the bundled artifacts
--   for the application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object is skipped.
s3Location_eTag :: Lens' S3Location (Maybe Text)

-- | The file type of the application revision. Must be one of the
--   following:
--   
--   <ul>
--   <li><tt>tar</tt>: A tar archive file.</li>
--   <li><tt>tgz</tt>: A compressed tar archive file.</li>
--   <li><tt>zip</tt>: A zip archive file.</li>
--   </ul>
s3Location_bundleType :: Lens' S3Location (Maybe BundleType)

-- | A specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system uses the most recent
--   version by default.
s3Location_version :: Lens' S3Location (Maybe Text)

-- | The name of the Amazon S3 bucket where the application revision is
--   stored.
s3Location_bucket :: Lens' S3Location (Maybe Text)

-- | The tag's key.
tag_key :: Lens' Tag (Maybe Text)

-- | The tag's value.
tag_value :: Lens' Tag (Maybe Text)

-- | The on-premises instance tag filter key.
tagFilter_key :: Lens' TagFilter (Maybe Text)

-- | The on-premises instance tag filter value.
tagFilter_value :: Lens' TagFilter (Maybe Text)

-- | The on-premises instance tag filter type:
--   
--   <ul>
--   <li>KEY_ONLY: Key only.</li>
--   <li>VALUE_ONLY: Value only.</li>
--   <li>KEY_AND_VALUE: Key and value.</li>
--   </ul>
tagFilter_type :: Lens' TagFilter (Maybe TagFilterType)

-- | For blue/green deployments, the name of the target group that
--   instances in the original environment are deregistered from, and
--   instances in the replacement environment are registered with. For
--   in-place deployments, the name of the target group that instances are
--   deregistered from, so they are not serving traffic during a
--   deployment, and then re-registered with after the deployment is
--   complete.
targetGroupInfo_name :: Lens' TargetGroupInfo (Maybe Text)

-- | One pair of target groups. One is associated with the original task
--   set. The second is associated with the task set that serves traffic
--   after the deployment is complete.
targetGroupPairInfo_targetGroups :: Lens' TargetGroupPairInfo (Maybe [TargetGroupInfo])

-- | The path used by a load balancer to route production traffic when an
--   Amazon ECS deployment is complete.
targetGroupPairInfo_prodTrafficRoute :: Lens' TargetGroupPairInfo (Maybe TrafficRoute)

-- | An optional path used by a load balancer to route test traffic after
--   an Amazon ECS deployment. Validation can occur while test traffic is
--   served during a deployment.
targetGroupPairInfo_testTrafficRoute :: Lens' TargetGroupPairInfo (Maybe TrafficRoute)

-- | The tag filter key, type, and value used to identify Amazon EC2
--   instances in a replacement environment for a blue/green deployment.
--   Cannot be used in the same call as <tt>ec2TagSet</tt>.
targetInstances_tagFilters :: Lens' TargetInstances (Maybe [EC2TagFilter])

-- | Information about the groups of EC2 instance tags that an instance
--   must be identified by in order for it to be included in the
--   replacement environment for a blue/green deployment. Cannot be used in
--   the same call as <tt>tagFilters</tt>.
targetInstances_ec2TagSet :: Lens' TargetInstances (Maybe EC2TagSet)

-- | The names of one or more Auto Scaling groups to identify a replacement
--   environment for a blue/green deployment.
targetInstances_autoScalingGroups :: Lens' TargetInstances (Maybe [Text])

-- | The number of minutes between the first and second traffic shifts of a
--   <tt>TimeBasedCanary</tt> deployment.
timeBasedCanary_canaryInterval :: Lens' TimeBasedCanary (Maybe Int)

-- | The percentage of traffic to shift in the first increment of a
--   <tt>TimeBasedCanary</tt> deployment.
timeBasedCanary_canaryPercentage :: Lens' TimeBasedCanary (Maybe Int)

-- | The number of minutes between each incremental traffic shift of a
--   <tt>TimeBasedLinear</tt> deployment.
timeBasedLinear_linearInterval :: Lens' TimeBasedLinear (Maybe Int)

-- | The percentage of traffic that is shifted at the start of each
--   increment of a <tt>TimeBasedLinear</tt> deployment.
timeBasedLinear_linearPercentage :: Lens' TimeBasedLinear (Maybe Int)

-- | The end time of the time range.
--   
--   Specify null to leave the end time open-ended.
timeRange_end :: Lens' TimeRange (Maybe UTCTime)

-- | The start time of the time range.
--   
--   Specify null to leave the start time open-ended.
timeRange_start :: Lens' TimeRange (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of one listener. The listener
--   identifies the route between a target group and a load balancer. This
--   is an array of strings with a maximum size of one.
trafficRoute_listenerArns :: Lens' TrafficRoute (Maybe [Text])

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in equal increments, with an equal
--   number of minutes between each increment. The original and target
--   Lambda function versions or ECS task sets are specified in the
--   deployment's AppSpec file.
trafficRoutingConfig_timeBasedLinear :: Lens' TrafficRoutingConfig (Maybe TimeBasedLinear)

-- | The type of traffic shifting (<tt>TimeBasedCanary</tt> or
--   <tt>TimeBasedLinear</tt>) used by a deployment configuration.
trafficRoutingConfig_type :: Lens' TrafficRoutingConfig (Maybe TrafficRoutingType)

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in two increments. The original
--   and target Lambda function versions or ECS task sets are specified in
--   the deployment's AppSpec file.
trafficRoutingConfig_timeBasedCanary :: Lens' TrafficRoutingConfig (Maybe TimeBasedCanary)

-- | The name of the notification trigger.
triggerConfig_triggerName :: Lens' TriggerConfig (Maybe Text)

-- | The event type or types for which notifications are triggered.
triggerConfig_triggerEvents :: Lens' TriggerConfig (Maybe [TriggerEventType])

-- | The Amazon Resource Name (ARN) of the Amazon Simple Notification
--   Service topic through which notifications about deployment or instance
--   events are sent.
triggerConfig_triggerTargetArn :: Lens' TriggerConfig (Maybe Text)


module Network.AWS.CodeDeploy.Waiters

-- | Polls <a>GetDeployment</a> every 15 seconds until a successful state
--   is reached. An error is returned after 120 failed checks.
newDeploymentSuccessful :: Wait GetDeployment


-- | Derived from API version <tt>2014-10-06</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS CodeDeploy
--   
--   AWS CodeDeploy is a deployment service that automates application
--   deployments to Amazon EC2 instances, on-premises instances running in
--   your own facility, serverless AWS Lambda functions, or applications in
--   an Amazon ECS service.
--   
--   You can deploy a nearly unlimited variety of application content, such
--   as an updated Lambda function, updated applications in an Amazon ECS
--   service, code, web and configuration files, executables, packages,
--   scripts, multimedia files, and so on. AWS CodeDeploy can deploy
--   application content stored in Amazon S3 buckets, GitHub repositories,
--   or Bitbucket repositories. You do not need to make changes to your
--   existing code before you can use AWS CodeDeploy.
--   
--   AWS CodeDeploy makes it easier for you to rapidly release new
--   features, helps you avoid downtime during application deployment, and
--   handles the complexity of updating your applications, without many of
--   the risks associated with error-prone manual deployments.
--   
--   <b>AWS CodeDeploy Components</b>
--   
--   Use the information in this guide to help you work with the following
--   AWS CodeDeploy components:
--   
--   <ul>
--   <li><b>Application</b>: A name that uniquely identifies the
--   application you want to deploy. AWS CodeDeploy uses this name, which
--   functions as a container, to ensure the correct combination of
--   revision, deployment configuration, and deployment group are
--   referenced during a deployment.</li>
--   <li><b>Deployment group</b>: A set of individual instances, CodeDeploy
--   Lambda deployment configuration settings, or an Amazon ECS service and
--   network details. A Lambda deployment group specifies how to route
--   traffic to a new version of a Lambda function. An Amazon ECS
--   deployment group specifies the service created in Amazon ECS to
--   deploy, a load balancer, and a listener to reroute production traffic
--   to an updated containerized application. An EC2/On-premises deployment
--   group contains individually tagged instances, Amazon EC2 instances in
--   Amazon EC2 Auto Scaling groups, or both. All deployment groups can
--   specify optional trigger, alarm, and rollback settings.</li>
--   <li><b>Deployment configuration</b>: A set of deployment rules and
--   deployment success and failure conditions used by AWS CodeDeploy
--   during a deployment.</li>
--   <li><b>Deployment</b>: The process and the components used when
--   updating a Lambda function, a containerized application in an Amazon
--   ECS service, or of installing content on one or more instances.</li>
--   <li><b>Application revisions</b>: For an AWS Lambda deployment, this
--   is an AppSpec file that specifies the Lambda function to be updated
--   and one or more functions to validate deployment lifecycle events. For
--   an Amazon ECS deployment, this is an AppSpec file that specifies the
--   Amazon ECS task definition, container, and port where production
--   traffic is rerouted. For an EC2/On-premises deployment, this is an
--   archive file that contains source content—source code, webpages,
--   executable files, and deployment scripts—along with an AppSpec file.
--   Revisions are stored in Amazon S3 buckets or GitHub repositories. For
--   Amazon S3, a revision is uniquely identified by its Amazon S3 object
--   key and its ETag, version, or both. For GitHub, a revision is uniquely
--   identified by its commit ID.</li>
--   </ul>
--   
--   This guide also contains information to help you get details about the
--   instances in your deployments, to make on-premises instances available
--   for AWS CodeDeploy deployments, to get details about a Lambda function
--   deployment, and to get details about Amazon ECS service deployments.
--   
--   <b>AWS CodeDeploy Information Resources</b>
--   
--   <ul>
--   <li><a>AWS CodeDeploy User Guide</a></li>
--   <li><a>AWS CodeDeploy API Reference Guide</a></li>
--   <li><a>AWS CLI Reference for AWS CodeDeploy</a></li>
--   <li><a>AWS CodeDeploy Developer Forum</a></li>
--   </ul>
module Network.AWS.CodeDeploy

-- | API version <tt>2014-10-06</tt> of the Amazon CodeDeploy SDK
--   configuration.
defaultService :: Service

-- | The deployment groups limit was exceeded.
_DeploymentGroupLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A deployment group with the specified name with the IAM user or AWS
--   account already exists.
_DeploymentGroupAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A bucket name is required, but was not provided.
_BucketNameFilterRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid instance type was specified for instances in a blue/green
--   deployment. Valid values include "Blue" for an original environment
--   and "Green" for a replacement environment.
_InvalidInstanceTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The IAM user ARN was specified in an invalid format.
_InvalidIamUserArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The named revision does not exist with the IAM user or AWS account.
_RevisionDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified on-premises instance name is already registered.
_InstanceNameAlreadyRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configuration does not exist with the IAM user or AWS
--   account.
_DeploymentConfigDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The trigger was specified in an invalid format.
_InvalidTriggerConfigException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag filter was specified in an invalid format.
_InvalidTagFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid fileExistsBehavior option was specified to determine how
--   AWS CodeDeploy handles files or directories that already exist in a
--   deployment target location, but weren't part of the previous
--   successful deployment. Valid values include "DISALLOW," "OVERWRITE,"
--   and "RETAIN."
_InvalidFileExistsBehaviorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided target ID does not belong to the attempted deployment.
_DeploymentTargetDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of alarms for a deployment group (10) was exceeded.
_AlarmsLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified key prefix filter was specified in an invalid format.
_InvalidKeyPrefixFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified ARN is not supported. For example, it might be an ARN
--   for a resource that is not expected.
_ArnNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A deployment to a target was attempted while another deployment was in
--   progress.
_DeploymentAlreadyStartedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The API used does not support the deployment.
_OperationNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The GitHub token is not valid.
_InvalidGitHubAccountTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The external ID was specified in an invalid format.
_InvalidExternalIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A call was submitted that is not supported for the specified
--   deployment type.
_UnsupportedActionForDeploymentTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource could not be validated.
_ResourceValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The minimum healthy instance value was specified in an invalid format.
_InvalidMinimumHealthyHostValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The format of the specified GitHub account connection name is invalid.
_InvalidGitHubAccountTokenNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon ECS service identifier is not valid.
_InvalidECSServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An instance type was specified for an in-place deployment. Instance
--   types are supported for blue/green deployments only.
_InvalidDeploymentInstanceTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | More applications were attempted to be created than are allowed.
_ApplicationLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A deployment target ID was not provided.
_DeploymentTargetIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Auto Scaling group was specified in an invalid format or does not
--   exist.
_InvalidAutoScalingGroupException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid operation was detected.
_InvalidOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum allowed number of tags was exceeded.
_TagLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified ARN is not in a valid format.
_InvalidArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An application with the specified name with the IAM user or AWS
--   account already exists.
_ApplicationAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of allowed deployments was exceeded.
_DeploymentLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input was specified in an invalid format.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An on-premises instance name was not specified.
_InstanceNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified IAM user ARN is already registered with an on-premises
--   instance.
_IamUserArnAlreadyRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target filter name is invalid.
_InvalidTargetFilterNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of allowed on-premises instances in a single call
--   was exceeded.
_InstanceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target instance configuration is invalid. Possible causes include:
--   
--   <ul>
--   <li>Configuration data for target instances was entered for an
--   in-place deployment.</li>
--   <li>The limit of 10 tags for a tag type was exceeded.</li>
--   <li>The combined length of the tag names exceeded the limit.</li>
--   <li>A specified tag is not currently applied to any instances.</li>
--   </ul>
_InvalidTargetInstancesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The revision was specified in an invalid format.
_InvalidRevisionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified tags are not valid.
_InvalidTagsToAddException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The automatic rollback configuration was specified in an invalid
--   format. For example, automatic rollback is enabled, but an invalid
--   triggering event type or no event types were listed.
_InvalidAutoRollbackConfigException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one deployment ID must be specified.
_DeploymentIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service role ARN was specified in an invalid format. Or, if an
--   Auto Scaling group was specified, the specified service role does not
--   grant the appropriate permissions to Amazon EC2 Auto Scaling.
_InvalidRoleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configuration name was not specified.
_DeploymentConfigNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The configuration for the blue/green deployment group was provided in
--   an invalid format. For information about deployment configuration
--   format, see CreateDeploymentConfig.
_InvalidBlueGreenDeploymentConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The instance ID was not specified.
_InstanceIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The sort order was specified in an invalid format.
_InvalidSortOrderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configurations limit was exceeded.
_DeploymentConfigLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A deployment configuration with the specified name with the IAM user
--   or AWS account already exists.
_DeploymentConfigAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid load balancer name, or no load balancer name, was
--   specified.
_InvalidLoadBalancerInfoException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A call was submitted that specified both OnPremisesTagFilters and
--   OnPremisesTagSet, but only one of these data types can be used in a
--   single call.
_InvalidOnPremisesTagCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An API function was called too frequently.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A target group pair associated with this deployment is not valid.
_InvalidTargetGroupPairException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The next token was specified in an invalid format.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The description is too long.
_DescriptionTooLongException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An IAM user ARN was not specified.
_IamUserArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A target is not valid.
_InvalidTargetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment group name was specified in an invalid format.
_InvalidDeploymentGroupNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The column name to sort by is either not present or was specified in
--   an invalid format.
_InvalidSortByException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The bucket name either doesn't exist or was specified in an invalid
--   format.
_InvalidBucketNameFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The configuration that specifies how traffic is routed during a
--   deployment is invalid.
_InvalidTrafficRoutingConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment group name was not specified.
_DeploymentGroupNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The format of the alarm configuration is invalid. Possible causes
--   include:
--   
--   <ul>
--   <li>The alarm list is null.</li>
--   <li>The alarm object is null.</li>
--   <li>The alarm name is empty or null or exceeds the limit of 255
--   characters.</li>
--   <li>Two alarms with the same name have been specified.</li>
--   <li>The alarm configuration is enabled, but the alarm list is
--   empty.</li>
--   </ul>
_InvalidAlarmConfigException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request included an IAM session ARN that has already been used to
--   register a different instance.
_IamSessionArnAlreadyRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The computePlatform is invalid. The computePlatform should be
--   <tt>Lambda</tt>, <tt>Server</tt>, or <tt>ECS</tt>.
_InvalidComputePlatformException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The wait type is invalid.
_InvalidDeploymentWaitTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag was specified in an invalid format.
_InvalidTagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit for lifecycle hooks was exceeded.
_LifecycleHookLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The IgnoreApplicationStopFailures value is invalid. For AWS Lambda
--   deployments, <tt>false</tt> is expected. For EC2/On-premises
--   deployments, <tt>true</tt> or <tt>false</tt> is expected.
_InvalidIgnoreApplicationStopFailuresValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified time range was specified in an invalid format.
_InvalidTimeRangeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A tag was not specified.
_TagRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The UpdateOutdatedInstancesOnly value is invalid. For AWS Lambda
--   deployments, <tt>false</tt> is expected. For EC2/On-premises
--   deployments, <tt>true</tt> or <tt>false</tt> is expected.
_InvalidUpdateOutdatedInstancesOnlyValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The result of a Lambda validation function that verifies a lifecycle
--   event is invalid. It should return <tt>Succeeded</tt> or
--   <tt>Failed</tt>.
_InvalidLifecycleEventHookExecutionStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A call was submitted that specified both Ec2TagFilters and Ec2TagSet,
--   but only one of these data types can be used in a single call.
_InvalidEC2TagCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The ARN of a resource is required, but was not found.
_ResourceArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The call is missing a required GitHub account connection name.
_GitHubAccountTokenNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | No IAM ARN was included in the request. You must use an IAM session
--   ARN or IAM user ARN in the request.
_IamArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The application does not exist with the IAM user or AWS account.
_ApplicationDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An attempt to return the status of an already completed lifecycle
--   event occurred.
_LifecycleEventAlreadyCompletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of tag groups included in the tag set list exceeded the
--   maximum allowed limit of 3.
_TagSetListLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | No GitHub account connection exists with the named specified in the
--   call.
_GitHubAccountTokenDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified on-premises instance is not registered.
_InstanceNotRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified instance status does not exist.
_InvalidInstanceStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of targets that can be associated with an Amazon
--   ECS or AWS Lambda deployment was exceeded. The target list of both
--   types of deployments must have exactly one item. This exception does
--   not apply to EC2/On-premises deployments.
_DeploymentTargetListSizeExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The minimum number of required application names was not specified.
_ApplicationNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The application name was specified in an invalid format.
_InvalidApplicationNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target ID provided was not valid.
_InvalidDeploymentTargetIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified deployment status doesn't exist or cannot be determined.
_InvalidDeploymentStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum allowed number of triggers was exceeded.
_TriggerTargetsLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployed state filter was specified in an invalid format.
_InvalidDeployedStateFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Both an IAM user ARN and an IAM session ARN were included in the
--   request. Use only one ARN type.
_MultipleIamArnsProvidedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The registration status was specified in an invalid format.
_InvalidRegistrationStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag was specified in an invalid format.
_InvalidEC2TagException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The on-premises instance name was specified in an invalid format.
_InvalidInstanceNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An invalid deployment style was specified. Valid deployment types
--   include "IN_PLACE" and "BLUE_GREEN." Valid deployment options include
--   "WITH_TRAFFIC_CONTROL" and "WITHOUT_TRAFFIC_CONTROL."
_InvalidDeploymentStyleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A lifecycle event hook is invalid. Review the <tt>hooks</tt> section
--   in your AppSpec file to ensure the lifecycle events and <tt>hooks</tt>
--   functions are valid.
_InvalidLifecycleEventHookExecutionIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configuration is still in use.
_DeploymentConfigInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The IAM session ARN was specified in an invalid format.
_InvalidIamSessionArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of names or IDs allowed for this request (100) was
--   exceeded.
_BatchLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The revision ID was not specified.
_RevisionRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon ECS service is associated with more than one deployment
--   groups. An Amazon ECS service can be associated with only one
--   deployment group.
_ECSServiceMappingLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment is already complete.
_DeploymentAlreadyCompletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment with the IAM user or AWS account does not exist.
_DeploymentDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified instance does not exist in the deployment group.
_InstanceDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified deployment has not started.
_DeploymentNotStartedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The role ID was not specified.
_RoleRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one of the deployment IDs was specified in an invalid format.
_InvalidDeploymentIdException :: AsError a => Getting (First ServiceError) a ServiceError

_InvalidInstanceIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment configuration name was specified in an invalid format.
_InvalidDeploymentConfigNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The named deployment group with the IAM user or AWS account does not
--   exist.
_DeploymentGroupDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The deployment does not have a status of Ready and can't continue yet.
_DeploymentIsNotInReadyStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>GetDeployment</a> every 15 seconds until a successful state
--   is reached. An error is returned after 120 failed checks.
newDeploymentSuccessful :: Wait GetDeployment

-- | Represents the input of a <tt>CreateDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentConfig</a> smart constructor.
data CreateDeploymentConfig
CreateDeploymentConfig' :: Maybe TrafficRoutingConfig -> Maybe MinimumHealthyHosts -> Maybe ComputePlatform -> Text -> CreateDeploymentConfig

-- | Create a value of <a>CreateDeploymentConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trafficRoutingConfig:CreateDeploymentConfig'</a>,
--   <a>createDeploymentConfig_trafficRoutingConfig</a> - The configuration
--   that specifies how the deployment traffic is routed.
--   
--   <a>$sel:minimumHealthyHosts:CreateDeploymentConfig'</a>,
--   <a>createDeploymentConfig_minimumHealthyHosts</a> - The minimum number
--   of healthy instances that should be available at any time during the
--   deployment. There are two parameters expected in the input: type and
--   value.
--   
--   The type parameter takes either of the following values:
--   
--   <ul>
--   <li>HOST_COUNT: The value parameter represents the minimum number of
--   healthy instances as an absolute value.</li>
--   <li>FLEET_PERCENT: The value parameter represents the minimum number
--   of healthy instances as a percentage of the total number of instances
--   in the deployment. If you specify FLEET_PERCENT, at the start of the
--   deployment, AWS CodeDeploy converts the percentage to the equivalent
--   number of instances and rounds up fractional instances.</li>
--   </ul>
--   
--   The value parameter takes an integer.
--   
--   For example, to set a minimum of 95% healthy instance, specify a type
--   of FLEET_PERCENT and a value of 95.
--   
--   <a>$sel:computePlatform:CreateDeploymentConfig'</a>,
--   <a>createDeploymentConfig_computePlatform</a> - The destination
--   platform type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
--   
--   <a>$sel:deploymentConfigName:CreateDeploymentConfig'</a>,
--   <a>createDeploymentConfig_deploymentConfigName</a> - The name of the
--   deployment configuration to create.
newCreateDeploymentConfig :: Text -> CreateDeploymentConfig

-- | Represents the output of a <tt>CreateDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentConfigResponse</a> smart
--   constructor.
data CreateDeploymentConfigResponse
CreateDeploymentConfigResponse' :: Maybe Text -> Int -> CreateDeploymentConfigResponse

-- | Create a value of <a>CreateDeploymentConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigId:CreateDeploymentConfigResponse'</a>,
--   <a>createDeploymentConfigResponse_deploymentConfigId</a> - A unique
--   deployment configuration ID.
--   
--   <a>$sel:httpStatus:CreateDeploymentConfigResponse'</a>,
--   <a>createDeploymentConfigResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentConfigResponse :: Int -> CreateDeploymentConfigResponse

-- | Represents the input of a <tt>GetApplicationRevision</tt> operation.
--   
--   <i>See:</i> <a>newGetApplicationRevision</a> smart constructor.
data GetApplicationRevision
GetApplicationRevision' :: Text -> RevisionLocation -> GetApplicationRevision

-- | Create a value of <a>GetApplicationRevision</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:GetApplicationRevision'</a>,
--   <a>getApplicationRevision_applicationName</a> - The name of the
--   application that corresponds to the revision.
--   
--   <a>$sel:revision:GetApplicationRevision'</a>,
--   <a>getApplicationRevision_revision</a> - Information about the
--   application revision to get, including type and location.
newGetApplicationRevision :: Text -> RevisionLocation -> GetApplicationRevision

-- | Represents the output of a <tt>GetApplicationRevision</tt> operation.
--   
--   <i>See:</i> <a>newGetApplicationRevisionResponse</a> smart
--   constructor.
data GetApplicationRevisionResponse
GetApplicationRevisionResponse' :: Maybe GenericRevisionInfo -> Maybe RevisionLocation -> Maybe Text -> Int -> GetApplicationRevisionResponse

-- | Create a value of <a>GetApplicationRevisionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionInfo:GetApplicationRevisionResponse'</a>,
--   <a>getApplicationRevisionResponse_revisionInfo</a> - General
--   information about the revision.
--   
--   <a>$sel:revision:GetApplicationRevision'</a>,
--   <a>getApplicationRevisionResponse_revision</a> - Additional
--   information about the revision, including type and location.
--   
--   <a>$sel:applicationName:GetApplicationRevision'</a>,
--   <a>getApplicationRevisionResponse_applicationName</a> - The name of
--   the application that corresponds to the revision.
--   
--   <a>$sel:httpStatus:GetApplicationRevisionResponse'</a>,
--   <a>getApplicationRevisionResponse_httpStatus</a> - The response's http
--   status code.
newGetApplicationRevisionResponse :: Int -> GetApplicationRevisionResponse

-- | Represents the input of a <tt>BatchGetDeploymentGroups</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetDeploymentGroups</a> smart constructor.
data BatchGetDeploymentGroups
BatchGetDeploymentGroups' :: Text -> [Text] -> BatchGetDeploymentGroups

-- | Create a value of <a>BatchGetDeploymentGroups</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:BatchGetDeploymentGroups'</a>,
--   <a>batchGetDeploymentGroups_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the applicable IAM user or AWS
--   account.
--   
--   <a>$sel:deploymentGroupNames:BatchGetDeploymentGroups'</a>,
--   <a>batchGetDeploymentGroups_deploymentGroupNames</a> - The names of
--   the deployment groups.
newBatchGetDeploymentGroups :: Text -> BatchGetDeploymentGroups

-- | Represents the output of a <tt>BatchGetDeploymentGroups</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetDeploymentGroupsResponse</a> smart
--   constructor.
data BatchGetDeploymentGroupsResponse
BatchGetDeploymentGroupsResponse' :: Maybe [DeploymentGroupInfo] -> Maybe Text -> Int -> BatchGetDeploymentGroupsResponse

-- | Create a value of <a>BatchGetDeploymentGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentGroupsInfo:BatchGetDeploymentGroupsResponse'</a>,
--   <a>batchGetDeploymentGroupsResponse_deploymentGroupsInfo</a> -
--   Information about the deployment groups.
--   
--   <a>$sel:errorMessage:BatchGetDeploymentGroupsResponse'</a>,
--   <a>batchGetDeploymentGroupsResponse_errorMessage</a> - Information
--   about errors that might have occurred during the API call.
--   
--   <a>$sel:httpStatus:BatchGetDeploymentGroupsResponse'</a>,
--   <a>batchGetDeploymentGroupsResponse_httpStatus</a> - The response's
--   http status code.
newBatchGetDeploymentGroupsResponse :: Int -> BatchGetDeploymentGroupsResponse

-- | Represents the input of a <tt>BatchGetOnPremisesInstances</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetOnPremisesInstances</a> smart constructor.
data BatchGetOnPremisesInstances
BatchGetOnPremisesInstances' :: [Text] -> BatchGetOnPremisesInstances

-- | Create a value of <a>BatchGetOnPremisesInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceNames:BatchGetOnPremisesInstances'</a>,
--   <a>batchGetOnPremisesInstances_instanceNames</a> - The names of the
--   on-premises instances about which to get information. The maximum
--   number of instance names you can specify is 25.
newBatchGetOnPremisesInstances :: BatchGetOnPremisesInstances

-- | Represents the output of a <tt>BatchGetOnPremisesInstances</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetOnPremisesInstancesResponse</a> smart
--   constructor.
data BatchGetOnPremisesInstancesResponse
BatchGetOnPremisesInstancesResponse' :: Maybe [InstanceInfo] -> Int -> BatchGetOnPremisesInstancesResponse

-- | Create a value of <a>BatchGetOnPremisesInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceInfos:BatchGetOnPremisesInstancesResponse'</a>,
--   <a>batchGetOnPremisesInstancesResponse_instanceInfos</a> - Information
--   about the on-premises instances.
--   
--   <a>$sel:httpStatus:BatchGetOnPremisesInstancesResponse'</a>,
--   <a>batchGetOnPremisesInstancesResponse_httpStatus</a> - The response's
--   http status code.
newBatchGetOnPremisesInstancesResponse :: Int -> BatchGetOnPremisesInstancesResponse

-- | Represents the input of a <tt>StopDeployment</tt> operation.
--   
--   <i>See:</i> <a>newStopDeployment</a> smart constructor.
data StopDeployment
StopDeployment' :: Maybe Bool -> Text -> StopDeployment

-- | Create a value of <a>StopDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoRollbackEnabled:StopDeployment'</a>,
--   <a>stopDeployment_autoRollbackEnabled</a> - Indicates, when a
--   deployment is stopped, whether instances that have been updated should
--   be rolled back to the previous version of the application revision.
--   
--   <a>$sel:deploymentId:StopDeployment'</a>,
--   <a>stopDeployment_deploymentId</a> - The unique ID of a deployment.
newStopDeployment :: Text -> StopDeployment

-- | Represents the output of a <tt>StopDeployment</tt> operation.
--   
--   <i>See:</i> <a>newStopDeploymentResponse</a> smart constructor.
data StopDeploymentResponse
StopDeploymentResponse' :: Maybe Text -> Maybe StopStatus -> Int -> StopDeploymentResponse

-- | Create a value of <a>StopDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:StopDeploymentResponse'</a>,
--   <a>stopDeploymentResponse_statusMessage</a> - An accompanying status
--   message.
--   
--   <a>$sel:status:StopDeploymentResponse'</a>,
--   <a>stopDeploymentResponse_status</a> - The status of the stop
--   deployment operation:
--   
--   <ul>
--   <li>Pending: The stop operation is pending.</li>
--   <li>Succeeded: The stop operation was successful.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:StopDeploymentResponse'</a>,
--   <a>stopDeploymentResponse_httpStatus</a> - The response's http status
--   code.
newStopDeploymentResponse :: Int -> StopDeploymentResponse

-- | <i>See:</i> <a>newListDeploymentTargets</a> smart constructor.
data ListDeploymentTargets
ListDeploymentTargets' :: Maybe Text -> Maybe Text -> Maybe (HashMap TargetFilterName [Text]) -> ListDeploymentTargets

-- | Create a value of <a>ListDeploymentTargets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:ListDeploymentTargets'</a>,
--   <a>listDeploymentTargets_deploymentId</a> - The unique ID of a
--   deployment.
--   
--   <a>$sel:nextToken:ListDeploymentTargets'</a>,
--   <a>listDeploymentTargets_nextToken</a> - A token identifier returned
--   from the previous <tt>ListDeploymentTargets</tt> call. It can be used
--   to return the next set of deployment targets in the list.
--   
--   <a>$sel:targetFilters:ListDeploymentTargets'</a>,
--   <a>listDeploymentTargets_targetFilters</a> - A key used to filter the
--   returned targets. The two valid values are:
--   
--   <ul>
--   <li><tt>TargetStatus</tt> - A <tt>TargetStatus</tt> filter string can
--   be <tt>Failed</tt>, <tt>InProgress</tt>, <tt>Pending</tt>,
--   <tt>Ready</tt>, <tt>Skipped</tt>, <tt>Succeeded</tt>, or
--   <tt>Unknown</tt>.</li>
--   <li><tt>ServerInstanceLabel</tt> - A <tt>ServerInstanceLabel</tt>
--   filter string can be <tt>Blue</tt> or <tt>Green</tt>.</li>
--   </ul>
newListDeploymentTargets :: ListDeploymentTargets

-- | <i>See:</i> <a>newListDeploymentTargetsResponse</a> smart constructor.
data ListDeploymentTargetsResponse
ListDeploymentTargetsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListDeploymentTargetsResponse

-- | Create a value of <a>ListDeploymentTargetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetIds:ListDeploymentTargetsResponse'</a>,
--   <a>listDeploymentTargetsResponse_targetIds</a> - The unique IDs of
--   deployment targets.
--   
--   <a>$sel:nextToken:ListDeploymentTargets'</a>,
--   <a>listDeploymentTargetsResponse_nextToken</a> - If a large amount of
--   information is returned, a token identifier is also returned. It can
--   be used in a subsequent <tt>ListDeploymentTargets</tt> call to return
--   the next set of deployment targets in the list.
--   
--   <a>$sel:httpStatus:ListDeploymentTargetsResponse'</a>,
--   <a>listDeploymentTargetsResponse_httpStatus</a> - The response's http
--   status code.
newListDeploymentTargetsResponse :: Int -> ListDeploymentTargetsResponse

-- | <i>See:</i> <a>newGetDeploymentTarget</a> smart constructor.
data GetDeploymentTarget
GetDeploymentTarget' :: Maybe Text -> Maybe Text -> GetDeploymentTarget

-- | Create a value of <a>GetDeploymentTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:GetDeploymentTarget'</a>,
--   <a>getDeploymentTarget_targetId</a> - The unique ID of a deployment
--   target.
--   
--   <a>$sel:deploymentId:GetDeploymentTarget'</a>,
--   <a>getDeploymentTarget_deploymentId</a> - The unique ID of a
--   deployment.
newGetDeploymentTarget :: GetDeploymentTarget

-- | <i>See:</i> <a>newGetDeploymentTargetResponse</a> smart constructor.
data GetDeploymentTargetResponse
GetDeploymentTargetResponse' :: Maybe DeploymentTarget -> Int -> GetDeploymentTargetResponse

-- | Create a value of <a>GetDeploymentTargetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentTarget:GetDeploymentTargetResponse'</a>,
--   <a>getDeploymentTargetResponse_deploymentTarget</a> - A deployment
--   target that contains information about a deployment such as its
--   status, lifecycle events, and when it was last updated. It also
--   contains metadata about the deployment target. The deployment target
--   metadata depends on the deployment target's type
--   (<tt>instanceTarget</tt>, <tt>lambdaTarget</tt>, or
--   <tt>ecsTarget</tt>).
--   
--   <a>$sel:httpStatus:GetDeploymentTargetResponse'</a>,
--   <a>getDeploymentTargetResponse_httpStatus</a> - The response's http
--   status code.
newGetDeploymentTargetResponse :: Int -> GetDeploymentTargetResponse

-- | Represents the input of, and adds tags to, an on-premises instance
--   operation.
--   
--   <i>See:</i> <a>newAddTagsToOnPremisesInstances</a> smart constructor.
data AddTagsToOnPremisesInstances
AddTagsToOnPremisesInstances' :: [Tag] -> [Text] -> AddTagsToOnPremisesInstances

-- | Create a value of <a>AddTagsToOnPremisesInstances</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:AddTagsToOnPremisesInstances'</a>,
--   <a>addTagsToOnPremisesInstances_tags</a> - The tag key-value pairs to
--   add to the on-premises instances.
--   
--   Keys and values are both required. Keys cannot be null or empty
--   strings. Value-only tags are not allowed.
--   
--   <a>$sel:instanceNames:AddTagsToOnPremisesInstances'</a>,
--   <a>addTagsToOnPremisesInstances_instanceNames</a> - The names of the
--   on-premises instances to which to add tags.
newAddTagsToOnPremisesInstances :: AddTagsToOnPremisesInstances

-- | <i>See:</i> <a>newAddTagsToOnPremisesInstancesResponse</a> smart
--   constructor.
data AddTagsToOnPremisesInstancesResponse
AddTagsToOnPremisesInstancesResponse' :: AddTagsToOnPremisesInstancesResponse

-- | Create a value of <a>AddTagsToOnPremisesInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAddTagsToOnPremisesInstancesResponse :: AddTagsToOnPremisesInstancesResponse

-- | Represents the input of a <tt>CreateApplication</tt> operation.
--   
--   <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe [Tag] -> Maybe ComputePlatform -> Text -> CreateApplication

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateApplication'</a>, <a>createApplication_tags</a> -
--   The metadata that you apply to CodeDeploy applications to help you
--   organize and categorize them. Each tag consists of a key and an
--   optional value, both of which you define.
--   
--   <a>$sel:computePlatform:CreateApplication'</a>,
--   <a>createApplication_computePlatform</a> - The destination platform
--   type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
--   
--   <a>$sel:applicationName:CreateApplication'</a>,
--   <a>createApplication_applicationName</a> - The name of the
--   application. This name must be unique with the applicable IAM user or
--   AWS account.
newCreateApplication :: Text -> CreateApplication

-- | Represents the output of a <tt>CreateApplication</tt> operation.
--   
--   <i>See:</i> <a>newCreateApplicationResponse</a> smart constructor.
data CreateApplicationResponse
CreateApplicationResponse' :: Maybe Text -> Int -> CreateApplicationResponse

-- | Create a value of <a>CreateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationId:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_applicationId</a> - A unique application
--   ID.
--   
--   <a>$sel:httpStatus:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_httpStatus</a> - The response's http
--   status code.
newCreateApplicationResponse :: Int -> CreateApplicationResponse

-- | <i>See:</i> <a>newDeleteResourcesByExternalId</a> smart constructor.
data DeleteResourcesByExternalId
DeleteResourcesByExternalId' :: Maybe Text -> DeleteResourcesByExternalId

-- | Create a value of <a>DeleteResourcesByExternalId</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:externalId:DeleteResourcesByExternalId'</a>,
--   <a>deleteResourcesByExternalId_externalId</a> - The unique ID of an
--   external resource (for example, a CloudFormation stack ID) that is
--   linked to one or more CodeDeploy resources.
newDeleteResourcesByExternalId :: DeleteResourcesByExternalId

-- | <i>See:</i> <a>newDeleteResourcesByExternalIdResponse</a> smart
--   constructor.
data DeleteResourcesByExternalIdResponse
DeleteResourcesByExternalIdResponse' :: Int -> DeleteResourcesByExternalIdResponse

-- | Create a value of <a>DeleteResourcesByExternalIdResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteResourcesByExternalIdResponse'</a>,
--   <a>deleteResourcesByExternalIdResponse_httpStatus</a> - The response's
--   http status code.
newDeleteResourcesByExternalIdResponse :: Int -> DeleteResourcesByExternalIdResponse

-- | Represents the input of a <tt>BatchGetApplications</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetApplications</a> smart constructor.
data BatchGetApplications
BatchGetApplications' :: [Text] -> BatchGetApplications

-- | Create a value of <a>BatchGetApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationNames:BatchGetApplications'</a>,
--   <a>batchGetApplications_applicationNames</a> - A list of application
--   names separated by spaces. The maximum number of application names you
--   can specify is 100.
newBatchGetApplications :: BatchGetApplications

-- | Represents the output of a <tt>BatchGetApplications</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetApplicationsResponse</a> smart constructor.
data BatchGetApplicationsResponse
BatchGetApplicationsResponse' :: Maybe [ApplicationInfo] -> Int -> BatchGetApplicationsResponse

-- | Create a value of <a>BatchGetApplicationsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationsInfo:BatchGetApplicationsResponse'</a>,
--   <a>batchGetApplicationsResponse_applicationsInfo</a> - Information
--   about the applications.
--   
--   <a>$sel:httpStatus:BatchGetApplicationsResponse'</a>,
--   <a>batchGetApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetApplicationsResponse :: Int -> BatchGetApplicationsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) that
--   specifies from which resource to disassociate the tags with the keys
--   in the <tt>TagKeys</tt> input parameter.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of keys of <tt>Tag</tt> objects. The <tt>Tag</tt> objects
--   identified by the keys are disassociated from the resource specified
--   by the <tt>ResourceArn</tt> input parameter.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newContinueDeployment</a> smart constructor.
data ContinueDeployment
ContinueDeployment' :: Maybe Text -> Maybe DeploymentWaitType -> ContinueDeployment

-- | Create a value of <a>ContinueDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:ContinueDeployment'</a>,
--   <a>continueDeployment_deploymentId</a> - The unique ID of a blue/green
--   deployment for which you want to start rerouting traffic to the
--   replacement environment.
--   
--   <a>$sel:deploymentWaitType:ContinueDeployment'</a>,
--   <a>continueDeployment_deploymentWaitType</a> - The status of the
--   deployment's waiting period. <tt>READY_WAIT</tt> indicates that the
--   deployment is ready to start shifting traffic.
--   <tt>TERMINATION_WAIT</tt> indicates that the traffic is shifted, but
--   the original target is not terminated.
newContinueDeployment :: ContinueDeployment

-- | <i>See:</i> <a>newContinueDeploymentResponse</a> smart constructor.
data ContinueDeploymentResponse
ContinueDeploymentResponse' :: ContinueDeploymentResponse

-- | Create a value of <a>ContinueDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newContinueDeploymentResponse :: ContinueDeploymentResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of a resource, such as a CodeDeploy application or deployment
--   group.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - A list of
--   tags that <tt>TagResource</tt> associates with a resource. The
--   resource is identified by the <tt>ResourceArn</tt> input parameter.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | Represents the input of a <tt>BatchGetApplicationRevisions</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetApplicationRevisions</a> smart constructor.
data BatchGetApplicationRevisions
BatchGetApplicationRevisions' :: Text -> [RevisionLocation] -> BatchGetApplicationRevisions

-- | Create a value of <a>BatchGetApplicationRevisions</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:BatchGetApplicationRevisions'</a>,
--   <a>batchGetApplicationRevisions_applicationName</a> - The name of an
--   AWS CodeDeploy application about which to get revision information.
--   
--   <a>$sel:revisions:BatchGetApplicationRevisions'</a>,
--   <a>batchGetApplicationRevisions_revisions</a> - An array of
--   <tt>RevisionLocation</tt> objects that specify information to get
--   about the application revisions, including type and location. The
--   maximum number of <tt>RevisionLocation</tt> objects you can specify is
--   25.
newBatchGetApplicationRevisions :: Text -> BatchGetApplicationRevisions

-- | Represents the output of a <tt>BatchGetApplicationRevisions</tt>
--   operation.
--   
--   <i>See:</i> <a>newBatchGetApplicationRevisionsResponse</a> smart
--   constructor.
data BatchGetApplicationRevisionsResponse
BatchGetApplicationRevisionsResponse' :: Maybe [RevisionInfo] -> Maybe Text -> Maybe Text -> Int -> BatchGetApplicationRevisionsResponse

-- | Create a value of <a>BatchGetApplicationRevisionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisions:BatchGetApplicationRevisions'</a>,
--   <a>batchGetApplicationRevisionsResponse_revisions</a> - Additional
--   information about the revisions, including the type and location.
--   
--   <a>$sel:errorMessage:BatchGetApplicationRevisionsResponse'</a>,
--   <a>batchGetApplicationRevisionsResponse_errorMessage</a> - Information
--   about errors that might have occurred during the API call.
--   
--   <a>$sel:applicationName:BatchGetApplicationRevisions'</a>,
--   <a>batchGetApplicationRevisionsResponse_applicationName</a> - The name
--   of the application that corresponds to the revisions.
--   
--   <a>$sel:httpStatus:BatchGetApplicationRevisionsResponse'</a>,
--   <a>batchGetApplicationRevisionsResponse_httpStatus</a> - The
--   response's http status code.
newBatchGetApplicationRevisionsResponse :: Int -> BatchGetApplicationRevisionsResponse

-- | Represents the input of a <tt>ListDeployments</tt> operation.
--   
--   <i>See:</i> <a>newListDeployments</a> smart constructor.
data ListDeployments
ListDeployments' :: Maybe Text -> Maybe Text -> Maybe TimeRange -> Maybe [DeploymentStatus] -> Maybe Text -> Maybe Text -> ListDeployments

-- | Create a value of <a>ListDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeployments_nextToken</a> - An identifier returned from the
--   previous list deployments call. It can be used to return the next set
--   of deployments in the list.
--   
--   <a>$sel:deploymentGroupName:ListDeployments'</a>,
--   <a>listDeployments_deploymentGroupName</a> - The name of a deployment
--   group for the specified application.
--   
--   If <tt>deploymentGroupName</tt> is specified, then
--   <tt>applicationName</tt> must be specified. If it is not specified,
--   then <tt>applicationName</tt> must not be specified.
--   
--   <a>$sel:createTimeRange:ListDeployments'</a>,
--   <a>listDeployments_createTimeRange</a> - A time range (start and end)
--   for returning a subset of the list of deployments.
--   
--   <a>$sel:includeOnlyStatuses:ListDeployments'</a>,
--   <a>listDeployments_includeOnlyStatuses</a> - A subset of deployments
--   to list by status:
--   
--   <ul>
--   <li><tt>Created</tt>: Include created deployments in the resulting
--   list.</li>
--   <li><tt>Queued</tt>: Include queued deployments in the resulting
--   list.</li>
--   <li><tt>In Progress</tt>: Include in-progress deployments in the
--   resulting list.</li>
--   <li><tt>Succeeded</tt>: Include successful deployments in the
--   resulting list.</li>
--   <li><tt>Failed</tt>: Include failed deployments in the resulting
--   list.</li>
--   <li><tt>Stopped</tt>: Include stopped deployments in the resulting
--   list.</li>
--   </ul>
--   
--   <a>$sel:externalId:ListDeployments'</a>,
--   <a>listDeployments_externalId</a> - The unique ID of an external
--   resource for returning deployments linked to the external resource.
--   
--   <a>$sel:applicationName:ListDeployments'</a>,
--   <a>listDeployments_applicationName</a> - The name of an AWS CodeDeploy
--   application associated with the IAM user or AWS account.
--   
--   If <tt>applicationName</tt> is specified, then
--   <tt>deploymentGroupName</tt> must be specified. If it is not
--   specified, then <tt>deploymentGroupName</tt> must not be specified.
newListDeployments :: ListDeployments

-- | Represents the output of a <tt>ListDeployments</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentsResponse</a> smart constructor.
data ListDeploymentsResponse
ListDeploymentsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListDeploymentsResponse

-- | Create a value of <a>ListDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeployments'</a>,
--   <a>listDeploymentsResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list deployments call to return the next set of
--   deployments in the list.
--   
--   <a>$sel:deployments:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_deployments</a> - A list of deployment IDs.
--   
--   <a>$sel:httpStatus:ListDeploymentsResponse'</a>,
--   <a>listDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newListDeploymentsResponse :: Int -> ListDeploymentsResponse

-- | Represents the input of a <tt>GetDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentConfig</a> smart constructor.
data GetDeploymentConfig
GetDeploymentConfig' :: Text -> GetDeploymentConfig

-- | Create a value of <a>GetDeploymentConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:GetDeploymentConfig'</a>,
--   <a>getDeploymentConfig_deploymentConfigName</a> - The name of a
--   deployment configuration associated with the IAM user or AWS account.
newGetDeploymentConfig :: Text -> GetDeploymentConfig

-- | Represents the output of a <tt>GetDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentConfigResponse</a> smart constructor.
data GetDeploymentConfigResponse
GetDeploymentConfigResponse' :: Maybe DeploymentConfigInfo -> Int -> GetDeploymentConfigResponse

-- | Create a value of <a>GetDeploymentConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigInfo:GetDeploymentConfigResponse'</a>,
--   <a>getDeploymentConfigResponse_deploymentConfigInfo</a> - Information
--   about the deployment configuration.
--   
--   <a>$sel:httpStatus:GetDeploymentConfigResponse'</a>,
--   <a>getDeploymentConfigResponse_httpStatus</a> - The response's http
--   status code.
newGetDeploymentConfigResponse :: Int -> GetDeploymentConfigResponse

-- | Represents the input of a <tt>DeleteDeploymentConfig</tt> operation.
--   
--   <i>See:</i> <a>newDeleteDeploymentConfig</a> smart constructor.
data DeleteDeploymentConfig
DeleteDeploymentConfig' :: Text -> DeleteDeploymentConfig

-- | Create a value of <a>DeleteDeploymentConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:DeleteDeploymentConfig'</a>,
--   <a>deleteDeploymentConfig_deploymentConfigName</a> - The name of a
--   deployment configuration associated with the IAM user or AWS account.
newDeleteDeploymentConfig :: Text -> DeleteDeploymentConfig

-- | <i>See:</i> <a>newDeleteDeploymentConfigResponse</a> smart
--   constructor.
data DeleteDeploymentConfigResponse
DeleteDeploymentConfigResponse' :: DeleteDeploymentConfigResponse

-- | Create a value of <a>DeleteDeploymentConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeploymentConfigResponse :: DeleteDeploymentConfigResponse

-- | Represents the input of a <tt>CreateDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentGroup</a> smart constructor.
data CreateDeploymentGroup
CreateDeploymentGroup' :: Maybe OnPremisesTagSet -> Maybe OutdatedInstancesStrategy -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe [TriggerConfig] -> Maybe [EC2TagFilter] -> Maybe [TagFilter] -> Maybe BlueGreenDeploymentConfiguration -> Maybe LoadBalancerInfo -> Maybe EC2TagSet -> Maybe [Tag] -> Maybe DeploymentStyle -> Maybe [Text] -> Maybe [ECSService] -> Maybe AlarmConfiguration -> Text -> Text -> Text -> CreateDeploymentGroup

-- | Create a value of <a>CreateDeploymentGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSet:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_onPremisesTagSet</a> - Information about
--   groups of tags applied to on-premises instances. The deployment group
--   includes only on-premises instances identified by all of the tag
--   groups. Cannot be used in the same call as
--   <tt>onPremisesInstanceTagFilters</tt>.
--   
--   <a>$sel:outdatedInstancesStrategy:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_outdatedInstancesStrategy</a> - Indicates
--   what happens when new EC2 instances are launched mid-deployment and do
--   not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
--   
--   <a>$sel:deploymentConfigName:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_deploymentConfigName</a> - If specified, the
--   deployment configuration name can be either one of the predefined
--   configurations provided with AWS CodeDeploy or a custom deployment
--   configuration that you create by calling the create deployment
--   configuration operation.
--   
--   <tt>CodeDeployDefault.OneAtATime</tt> is the default deployment
--   configuration. It is used if a configuration isn't specified for the
--   deployment or deployment group.
--   
--   For more information about the predefined deployment configurations in
--   AWS CodeDeploy, see <a>Working with Deployment Configurations in
--   CodeDeploy</a> in the <i>AWS CodeDeploy User Guide</i>.
--   
--   <a>$sel:autoRollbackConfiguration:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_autoRollbackConfiguration</a> - Configuration
--   information for an automatic rollback that is added when a deployment
--   group is created.
--   
--   <a>$sel:triggerConfigurations:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_triggerConfigurations</a> - Information about
--   triggers to create when the deployment group is created. For examples,
--   see <a>Create a Trigger for an AWS CodeDeploy Event</a> in the <i>AWS
--   CodeDeploy User Guide</i>.
--   
--   <a>$sel:ec2TagFilters:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_ec2TagFilters</a> - The Amazon EC2 tags on
--   which to filter. The deployment group includes EC2 instances with any
--   of the specified tags. Cannot be used in the same call as ec2TagSet.
--   
--   <a>$sel:onPremisesInstanceTagFilters:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_onPremisesInstanceTagFilters</a> - The
--   on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags. Cannot
--   be used in the same call as <tt>OnPremisesTagSet</tt>.
--   
--   <a>$sel:blueGreenDeploymentConfiguration:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_blueGreenDeploymentConfiguration</a> -
--   Information about blue/green deployment options for a deployment
--   group.
--   
--   <a>$sel:loadBalancerInfo:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_loadBalancerInfo</a> - Information about the
--   load balancer used in a deployment.
--   
--   <a>$sel:ec2TagSet:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_ec2TagSet</a> - Information about groups of
--   tags applied to EC2 instances. The deployment group includes only EC2
--   instances identified by all the tag groups. Cannot be used in the same
--   call as <tt>ec2TagFilters</tt>.
--   
--   <a>$sel:tags:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_tags</a> - The metadata that you apply to
--   CodeDeploy deployment groups to help you organize and categorize them.
--   Each tag consists of a key and an optional value, both of which you
--   define.
--   
--   <a>$sel:deploymentStyle:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_deploymentStyle</a> - Information about the
--   type of deployment, in-place or blue/green, that you want to run and
--   whether to route deployment traffic behind a load balancer.
--   
--   <a>$sel:autoScalingGroups:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_autoScalingGroups</a> - A list of associated
--   Amazon EC2 Auto Scaling groups.
--   
--   <a>$sel:ecsServices:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_ecsServices</a> - The target Amazon ECS
--   services in the deployment group. This applies only to deployment
--   groups that use the Amazon ECS compute platform. A target Amazon ECS
--   service is specified as an Amazon ECS cluster and service name pair
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   
--   <a>$sel:alarmConfiguration:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_alarmConfiguration</a> - Information to add
--   about Amazon CloudWatch alarms when the deployment group is created.
--   
--   <a>$sel:applicationName:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
--   
--   <a>$sel:deploymentGroupName:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_deploymentGroupName</a> - The name of a new
--   deployment group for the specified application.
--   
--   <a>$sel:serviceRoleArn:CreateDeploymentGroup'</a>,
--   <a>createDeploymentGroup_serviceRoleArn</a> - A service role Amazon
--   Resource Name (ARN) that allows AWS CodeDeploy to act on the user's
--   behalf when interacting with AWS services.
newCreateDeploymentGroup :: Text -> Text -> Text -> CreateDeploymentGroup

-- | Represents the output of a <tt>CreateDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentGroupResponse</a> smart constructor.
data CreateDeploymentGroupResponse
CreateDeploymentGroupResponse' :: Maybe Text -> Int -> CreateDeploymentGroupResponse

-- | Create a value of <a>CreateDeploymentGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentGroupId:CreateDeploymentGroupResponse'</a>,
--   <a>createDeploymentGroupResponse_deploymentGroupId</a> - A unique
--   deployment group ID.
--   
--   <a>$sel:httpStatus:CreateDeploymentGroupResponse'</a>,
--   <a>createDeploymentGroupResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentGroupResponse :: Int -> CreateDeploymentGroupResponse

-- | Represents the input of a <tt>ListDeploymentConfigs</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentConfigs</a> smart constructor.
data ListDeploymentConfigs
ListDeploymentConfigs' :: Maybe Text -> ListDeploymentConfigs

-- | Create a value of <a>ListDeploymentConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentConfigs'</a>,
--   <a>listDeploymentConfigs_nextToken</a> - An identifier returned from
--   the previous <tt>ListDeploymentConfigs</tt> call. It can be used to
--   return the next set of deployment configurations in the list.
newListDeploymentConfigs :: ListDeploymentConfigs

-- | Represents the output of a <tt>ListDeploymentConfigs</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentConfigsResponse</a> smart constructor.
data ListDeploymentConfigsResponse
ListDeploymentConfigsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListDeploymentConfigsResponse

-- | Create a value of <a>ListDeploymentConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentConfigs'</a>,
--   <a>listDeploymentConfigsResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list deployment configurations call to return the
--   next set of deployment configurations in the list.
--   
--   <a>$sel:deploymentConfigsList:ListDeploymentConfigsResponse'</a>,
--   <a>listDeploymentConfigsResponse_deploymentConfigsList</a> - A list of
--   deployment configurations, including built-in configurations such as
--   <tt>CodeDeployDefault.OneAtATime</tt>.
--   
--   <a>$sel:httpStatus:ListDeploymentConfigsResponse'</a>,
--   <a>listDeploymentConfigsResponse_httpStatus</a> - The response's http
--   status code.
newListDeploymentConfigsResponse :: Int -> ListDeploymentConfigsResponse

-- | Represents the input of an <tt>UpdateDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newUpdateDeploymentGroup</a> smart constructor.
data UpdateDeploymentGroup
UpdateDeploymentGroup' :: Maybe OnPremisesTagSet -> Maybe OutdatedInstancesStrategy -> Maybe Text -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe [TriggerConfig] -> Maybe [EC2TagFilter] -> Maybe [TagFilter] -> Maybe BlueGreenDeploymentConfiguration -> Maybe LoadBalancerInfo -> Maybe EC2TagSet -> Maybe DeploymentStyle -> Maybe [Text] -> Maybe [ECSService] -> Maybe AlarmConfiguration -> Maybe Text -> Text -> Text -> UpdateDeploymentGroup

-- | Create a value of <a>UpdateDeploymentGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSet:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_onPremisesTagSet</a> - Information about an
--   on-premises instance tag set. The deployment group includes only
--   on-premises instances identified by all the tag groups.
--   
--   <a>$sel:outdatedInstancesStrategy:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_outdatedInstancesStrategy</a> - Indicates
--   what happens when new EC2 instances are launched mid-deployment and do
--   not receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
--   
--   <a>$sel:serviceRoleArn:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_serviceRoleArn</a> - A replacement ARN for
--   the service role, if you want to change it.
--   
--   <a>$sel:deploymentConfigName:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_deploymentConfigName</a> - The replacement
--   deployment configuration name to use, if you want to change it.
--   
--   <a>$sel:autoRollbackConfiguration:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_autoRollbackConfiguration</a> - Information
--   for an automatic rollback configuration that is added or changed when
--   a deployment group is updated.
--   
--   <a>$sel:triggerConfigurations:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_triggerConfigurations</a> - Information about
--   triggers to change when the deployment group is updated. For examples,
--   see <a>Edit a Trigger in a CodeDeploy Deployment Group</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
--   
--   <a>$sel:ec2TagFilters:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_ec2TagFilters</a> - The replacement set of
--   Amazon EC2 tags on which to filter, if you want to change them. To
--   keep the existing tags, enter their names. To remove tags, do not
--   enter any tag names.
--   
--   <a>$sel:onPremisesInstanceTagFilters:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_onPremisesInstanceTagFilters</a> - The
--   replacement set of on-premises instance tags on which to filter, if
--   you want to change them. To keep the existing tags, enter their names.
--   To remove tags, do not enter any tag names.
--   
--   <a>$sel:blueGreenDeploymentConfiguration:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_blueGreenDeploymentConfiguration</a> -
--   Information about blue/green deployment options for a deployment
--   group.
--   
--   <a>$sel:loadBalancerInfo:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_loadBalancerInfo</a> - Information about the
--   load balancer used in a deployment.
--   
--   <a>$sel:ec2TagSet:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_ec2TagSet</a> - Information about groups of
--   tags applied to on-premises instances. The deployment group includes
--   only EC2 instances identified by all the tag groups.
--   
--   <a>$sel:deploymentStyle:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_deploymentStyle</a> - Information about the
--   type of deployment, either in-place or blue/green, you want to run and
--   whether to route deployment traffic behind a load balancer.
--   
--   <a>$sel:autoScalingGroups:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_autoScalingGroups</a> - The replacement list
--   of Auto Scaling groups to be included in the deployment group, if you
--   want to change them. To keep the Auto Scaling groups, enter their
--   names. To remove Auto Scaling groups, do not enter any Auto Scaling
--   group names.
--   
--   <a>$sel:ecsServices:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_ecsServices</a> - The target Amazon ECS
--   services in the deployment group. This applies only to deployment
--   groups that use the Amazon ECS compute platform. A target Amazon ECS
--   service is specified as an Amazon ECS cluster and service name pair
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   
--   <a>$sel:alarmConfiguration:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_alarmConfiguration</a> - Information to add
--   or change about Amazon CloudWatch alarms when the deployment group is
--   updated.
--   
--   <a>$sel:newDeploymentGroupName':UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_newDeploymentGroupName</a> - The new name of
--   the deployment group, if you want to change it.
--   
--   <a>$sel:applicationName:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_applicationName</a> - The application name
--   that corresponds to the deployment group to update.
--   
--   <a>$sel:currentDeploymentGroupName:UpdateDeploymentGroup'</a>,
--   <a>updateDeploymentGroup_currentDeploymentGroupName</a> - The current
--   name of the deployment group.
newUpdateDeploymentGroup :: Text -> Text -> UpdateDeploymentGroup

-- | Represents the output of an <tt>UpdateDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newUpdateDeploymentGroupResponse</a> smart constructor.
data UpdateDeploymentGroupResponse
UpdateDeploymentGroupResponse' :: Maybe [AutoScalingGroup] -> Int -> UpdateDeploymentGroupResponse

-- | Create a value of <a>UpdateDeploymentGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hooksNotCleanedUp:UpdateDeploymentGroupResponse'</a>,
--   <a>updateDeploymentGroupResponse_hooksNotCleanedUp</a> - If the output
--   contains no data, and the corresponding deployment group contained at
--   least one Auto Scaling group, AWS CodeDeploy successfully removed all
--   corresponding Auto Scaling lifecycle event hooks from the AWS account.
--   If the output contains data, AWS CodeDeploy could not remove some Auto
--   Scaling lifecycle event hooks from the AWS account.
--   
--   <a>$sel:httpStatus:UpdateDeploymentGroupResponse'</a>,
--   <a>updateDeploymentGroupResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeploymentGroupResponse :: Int -> UpdateDeploymentGroupResponse

-- | Represents the input of a <tt>DeleteDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteDeploymentGroup</a> smart constructor.
data DeleteDeploymentGroup
DeleteDeploymentGroup' :: Text -> Text -> DeleteDeploymentGroup

-- | Create a value of <a>DeleteDeploymentGroup</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteDeploymentGroup'</a>,
--   <a>deleteDeploymentGroup_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
--   
--   <a>$sel:deploymentGroupName:DeleteDeploymentGroup'</a>,
--   <a>deleteDeploymentGroup_deploymentGroupName</a> - The name of a
--   deployment group for the specified application.
newDeleteDeploymentGroup :: Text -> Text -> DeleteDeploymentGroup

-- | Represents the output of a <tt>DeleteDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newDeleteDeploymentGroupResponse</a> smart constructor.
data DeleteDeploymentGroupResponse
DeleteDeploymentGroupResponse' :: Maybe [AutoScalingGroup] -> Int -> DeleteDeploymentGroupResponse

-- | Create a value of <a>DeleteDeploymentGroupResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hooksNotCleanedUp:DeleteDeploymentGroupResponse'</a>,
--   <a>deleteDeploymentGroupResponse_hooksNotCleanedUp</a> - If the output
--   contains no data, and the corresponding deployment group contained at
--   least one Auto Scaling group, AWS CodeDeploy successfully removed all
--   corresponding Auto Scaling lifecycle event hooks from the Amazon EC2
--   instances in the Auto Scaling group. If the output contains data, AWS
--   CodeDeploy could not remove some Auto Scaling lifecycle event hooks
--   from the Amazon EC2 instances in the Auto Scaling group.
--   
--   <a>$sel:httpStatus:DeleteDeploymentGroupResponse'</a>,
--   <a>deleteDeploymentGroupResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDeploymentGroupResponse :: Int -> DeleteDeploymentGroupResponse

-- | Represents the input of a <tt>ListDeploymentGroups</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentGroups</a> smart constructor.
data ListDeploymentGroups
ListDeploymentGroups' :: Maybe Text -> Text -> ListDeploymentGroups

-- | Create a value of <a>ListDeploymentGroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentGroups'</a>,
--   <a>listDeploymentGroups_nextToken</a> - An identifier returned from
--   the previous list deployment groups call. It can be used to return the
--   next set of deployment groups in the list.
--   
--   <a>$sel:applicationName:ListDeploymentGroups'</a>,
--   <a>listDeploymentGroups_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
newListDeploymentGroups :: Text -> ListDeploymentGroups

-- | Represents the output of a <tt>ListDeploymentGroups</tt> operation.
--   
--   <i>See:</i> <a>newListDeploymentGroupsResponse</a> smart constructor.
data ListDeploymentGroupsResponse
ListDeploymentGroupsResponse' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Int -> ListDeploymentGroupsResponse

-- | Create a value of <a>ListDeploymentGroupsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDeploymentGroups'</a>,
--   <a>listDeploymentGroupsResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list deployment groups call to return the next
--   set of deployment groups in the list.
--   
--   <a>$sel:deploymentGroups:ListDeploymentGroupsResponse'</a>,
--   <a>listDeploymentGroupsResponse_deploymentGroups</a> - A list of
--   deployment group names.
--   
--   <a>$sel:applicationName:ListDeploymentGroups'</a>,
--   <a>listDeploymentGroupsResponse_applicationName</a> - The application
--   name.
--   
--   <a>$sel:httpStatus:ListDeploymentGroupsResponse'</a>,
--   <a>listDeploymentGroupsResponse_httpStatus</a> - The response's http
--   status code.
newListDeploymentGroupsResponse :: Int -> ListDeploymentGroupsResponse

-- | Represents the input of the register on-premises instance operation.
--   
--   <i>See:</i> <a>newRegisterOnPremisesInstance</a> smart constructor.
data RegisterOnPremisesInstance
RegisterOnPremisesInstance' :: Maybe Text -> Maybe Text -> Text -> RegisterOnPremisesInstance

-- | Create a value of <a>RegisterOnPremisesInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iamUserArn:RegisterOnPremisesInstance'</a>,
--   <a>registerOnPremisesInstance_iamUserArn</a> - The ARN of the IAM user
--   to associate with the on-premises instance.
--   
--   <a>$sel:iamSessionArn:RegisterOnPremisesInstance'</a>,
--   <a>registerOnPremisesInstance_iamSessionArn</a> - The ARN of the IAM
--   session to associate with the on-premises instance.
--   
--   <a>$sel:instanceName:RegisterOnPremisesInstance'</a>,
--   <a>registerOnPremisesInstance_instanceName</a> - The name of the
--   on-premises instance to register.
newRegisterOnPremisesInstance :: Text -> RegisterOnPremisesInstance

-- | <i>See:</i> <a>newRegisterOnPremisesInstanceResponse</a> smart
--   constructor.
data RegisterOnPremisesInstanceResponse
RegisterOnPremisesInstanceResponse' :: RegisterOnPremisesInstanceResponse

-- | Create a value of <a>RegisterOnPremisesInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRegisterOnPremisesInstanceResponse :: RegisterOnPremisesInstanceResponse

-- | Represents the input of a <tt>ListOnPremisesInstances</tt> operation.
--   
--   <i>See:</i> <a>newListOnPremisesInstances</a> smart constructor.
data ListOnPremisesInstances
ListOnPremisesInstances' :: Maybe Text -> Maybe [TagFilter] -> Maybe RegistrationStatus -> ListOnPremisesInstances

-- | Create a value of <a>ListOnPremisesInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOnPremisesInstances'</a>,
--   <a>listOnPremisesInstances_nextToken</a> - An identifier returned from
--   the previous list on-premises instances call. It can be used to return
--   the next set of on-premises instances in the list.
--   
--   <a>$sel:tagFilters:ListOnPremisesInstances'</a>,
--   <a>listOnPremisesInstances_tagFilters</a> - The on-premises instance
--   tags that are used to restrict the on-premises instance names
--   returned.
--   
--   <a>$sel:registrationStatus:ListOnPremisesInstances'</a>,
--   <a>listOnPremisesInstances_registrationStatus</a> - The registration
--   status of the on-premises instances:
--   
--   <ul>
--   <li><tt>Deregistered</tt>: Include deregistered on-premises instances
--   in the resulting list.</li>
--   <li><tt>Registered</tt>: Include registered on-premises instances in
--   the resulting list.</li>
--   </ul>
newListOnPremisesInstances :: ListOnPremisesInstances

-- | Represents the output of the list on-premises instances operation.
--   
--   <i>See:</i> <a>newListOnPremisesInstancesResponse</a> smart
--   constructor.
data ListOnPremisesInstancesResponse
ListOnPremisesInstancesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListOnPremisesInstancesResponse

-- | Create a value of <a>ListOnPremisesInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListOnPremisesInstances'</a>,
--   <a>listOnPremisesInstancesResponse_nextToken</a> - If a large amount
--   of information is returned, an identifier is also returned. It can be
--   used in a subsequent list on-premises instances call to return the
--   next set of on-premises instances in the list.
--   
--   <a>$sel:instanceNames:ListOnPremisesInstancesResponse'</a>,
--   <a>listOnPremisesInstancesResponse_instanceNames</a> - The list of
--   matching on-premises instance names.
--   
--   <a>$sel:httpStatus:ListOnPremisesInstancesResponse'</a>,
--   <a>listOnPremisesInstancesResponse_httpStatus</a> - The response's
--   http status code.
newListOnPremisesInstancesResponse :: Int -> ListOnPremisesInstancesResponse

-- | Represents the input of a <tt>GetDeployment</tt> operation.
--   
--   <i>See:</i> <a>newGetDeployment</a> smart constructor.
data GetDeployment
GetDeployment' :: Text -> GetDeployment

-- | Create a value of <a>GetDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:GetDeployment'</a>,
--   <a>getDeployment_deploymentId</a> - The unique ID of a deployment
--   associated with the IAM user or AWS account.
newGetDeployment :: Text -> GetDeployment

-- | Represents the output of a <tt>GetDeployment</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentResponse</a> smart constructor.
data GetDeploymentResponse
GetDeploymentResponse' :: Maybe DeploymentInfo -> Int -> GetDeploymentResponse

-- | Create a value of <a>GetDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentInfo:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_deploymentInfo</a> - Information about the
--   deployment.
--   
--   <a>$sel:httpStatus:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_httpStatus</a> - The response's http status
--   code.
newGetDeploymentResponse :: Int -> GetDeploymentResponse

-- | Represents the input of a <tt>RemoveTagsFromOnPremisesInstances</tt>
--   operation.
--   
--   <i>See:</i> <a>newRemoveTagsFromOnPremisesInstances</a> smart
--   constructor.
data RemoveTagsFromOnPremisesInstances
RemoveTagsFromOnPremisesInstances' :: [Tag] -> [Text] -> RemoveTagsFromOnPremisesInstances

-- | Create a value of <a>RemoveTagsFromOnPremisesInstances</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:RemoveTagsFromOnPremisesInstances'</a>,
--   <a>removeTagsFromOnPremisesInstances_tags</a> - The tag key-value
--   pairs to remove from the on-premises instances.
--   
--   <a>$sel:instanceNames:RemoveTagsFromOnPremisesInstances'</a>,
--   <a>removeTagsFromOnPremisesInstances_instanceNames</a> - The names of
--   the on-premises instances from which to remove tags.
newRemoveTagsFromOnPremisesInstances :: RemoveTagsFromOnPremisesInstances

-- | <i>See:</i> <a>newRemoveTagsFromOnPremisesInstancesResponse</a> smart
--   constructor.
data RemoveTagsFromOnPremisesInstancesResponse
RemoveTagsFromOnPremisesInstancesResponse' :: RemoveTagsFromOnPremisesInstancesResponse

-- | Create a value of <a>RemoveTagsFromOnPremisesInstancesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRemoveTagsFromOnPremisesInstancesResponse :: RemoveTagsFromOnPremisesInstancesResponse

-- | Represents the input of a <tt>GetApplication</tt> operation.
--   
--   <i>See:</i> <a>newGetApplication</a> smart constructor.
data GetApplication
GetApplication' :: Text -> GetApplication

-- | Create a value of <a>GetApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:GetApplication'</a>,
--   <a>getApplication_applicationName</a> - The name of an AWS CodeDeploy
--   application associated with the IAM user or AWS account.
newGetApplication :: Text -> GetApplication

-- | Represents the output of a <tt>GetApplication</tt> operation.
--   
--   <i>See:</i> <a>newGetApplicationResponse</a> smart constructor.
data GetApplicationResponse
GetApplicationResponse' :: Maybe ApplicationInfo -> Int -> GetApplicationResponse

-- | Create a value of <a>GetApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:application:GetApplicationResponse'</a>,
--   <a>getApplicationResponse_application</a> - Information about the
--   application.
--   
--   <a>$sel:httpStatus:GetApplicationResponse'</a>,
--   <a>getApplicationResponse_httpStatus</a> - The response's http status
--   code.
newGetApplicationResponse :: Int -> GetApplicationResponse

-- | Represents the input of a <tt>ListGitHubAccountTokenNames</tt>
--   operation.
--   
--   <i>See:</i> <a>newListGitHubAccountTokenNames</a> smart constructor.
data ListGitHubAccountTokenNames
ListGitHubAccountTokenNames' :: Maybe Text -> ListGitHubAccountTokenNames

-- | Create a value of <a>ListGitHubAccountTokenNames</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGitHubAccountTokenNames'</a>,
--   <a>listGitHubAccountTokenNames_nextToken</a> - An identifier returned
--   from the previous <tt>ListGitHubAccountTokenNames</tt> call. It can be
--   used to return the next set of names in the list.
newListGitHubAccountTokenNames :: ListGitHubAccountTokenNames

-- | Represents the output of a <tt>ListGitHubAccountTokenNames</tt>
--   operation.
--   
--   <i>See:</i> <a>newListGitHubAccountTokenNamesResponse</a> smart
--   constructor.
data ListGitHubAccountTokenNamesResponse
ListGitHubAccountTokenNamesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListGitHubAccountTokenNamesResponse

-- | Create a value of <a>ListGitHubAccountTokenNamesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListGitHubAccountTokenNames'</a>,
--   <a>listGitHubAccountTokenNamesResponse_nextToken</a> - If a large
--   amount of information is returned, an identifier is also returned. It
--   can be used in a subsequent <tt>ListGitHubAccountTokenNames</tt> call
--   to return the next set of names in the list.
--   
--   <a>$sel:tokenNameList:ListGitHubAccountTokenNamesResponse'</a>,
--   <a>listGitHubAccountTokenNamesResponse_tokenNameList</a> - A list of
--   names of connections to GitHub accounts.
--   
--   <a>$sel:httpStatus:ListGitHubAccountTokenNamesResponse'</a>,
--   <a>listGitHubAccountTokenNamesResponse_httpStatus</a> - The response's
--   http status code.
newListGitHubAccountTokenNamesResponse :: Int -> ListGitHubAccountTokenNamesResponse

-- | <i>See:</i> <a>newBatchGetDeploymentTargets</a> smart constructor.
data BatchGetDeploymentTargets
BatchGetDeploymentTargets' :: Maybe [Text] -> Maybe Text -> BatchGetDeploymentTargets

-- | Create a value of <a>BatchGetDeploymentTargets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetIds:BatchGetDeploymentTargets'</a>,
--   <a>batchGetDeploymentTargets_targetIds</a> - The unique IDs of the
--   deployment targets. The compute platform of the deployment determines
--   the type of the targets and their formats. The maximum number of
--   deployment target IDs you can specify is 25.
--   
--   <ul>
--   <li>For deployments that use the EC2/On-premises compute platform, the
--   target IDs are EC2 or on-premises instances IDs, and their target type
--   is <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the AWS Lambda compute platform, the
--   target IDs are the names of Lambda functions, and their target type is
--   <tt>instanceTarget</tt>.</li>
--   <li>For deployments that use the Amazon ECS compute platform, the
--   target IDs are pairs of Amazon ECS clusters and services specified
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   Their target type is <tt>ecsTarget</tt>.</li>
--   <li>For deployments that are deployed with AWS CloudFormation, the
--   target IDs are CloudFormation stack IDs. Their target type is
--   <tt>cloudFormationTarget</tt>.</li>
--   </ul>
--   
--   <a>$sel:deploymentId:BatchGetDeploymentTargets'</a>,
--   <a>batchGetDeploymentTargets_deploymentId</a> - The unique ID of a
--   deployment.
newBatchGetDeploymentTargets :: BatchGetDeploymentTargets

-- | <i>See:</i> <a>newBatchGetDeploymentTargetsResponse</a> smart
--   constructor.
data BatchGetDeploymentTargetsResponse
BatchGetDeploymentTargetsResponse' :: Maybe [DeploymentTarget] -> Int -> BatchGetDeploymentTargetsResponse

-- | Create a value of <a>BatchGetDeploymentTargetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentTargets:BatchGetDeploymentTargetsResponse'</a>,
--   <a>batchGetDeploymentTargetsResponse_deploymentTargets</a> - A list of
--   target objects for a deployment. Each target object contains details
--   about the target, such as its status and lifecycle events. The type of
--   the target objects depends on the deployment' compute platform.
--   
--   <ul>
--   <li><b>EC2/On-premises</b>: Each target object is an EC2 or
--   on-premises instance.</li>
--   <li><b>AWS Lambda</b>: The target object is a specific version of an
--   AWS Lambda function.</li>
--   <li><b>Amazon ECS</b>: The target object is an Amazon ECS
--   service.</li>
--   <li><b>CloudFormation</b>: The target object is an AWS CloudFormation
--   blue/green deployment.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:BatchGetDeploymentTargetsResponse'</a>,
--   <a>batchGetDeploymentTargetsResponse_httpStatus</a> - The response's
--   http status code.
newBatchGetDeploymentTargetsResponse :: Int -> BatchGetDeploymentTargetsResponse

-- | Represents the input of a <tt>DeleteGitHubAccount</tt> operation.
--   
--   <i>See:</i> <a>newDeleteGitHubAccountToken</a> smart constructor.
data DeleteGitHubAccountToken
DeleteGitHubAccountToken' :: Maybe Text -> DeleteGitHubAccountToken

-- | Create a value of <a>DeleteGitHubAccountToken</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenName:DeleteGitHubAccountToken'</a>,
--   <a>deleteGitHubAccountToken_tokenName</a> - The name of the GitHub
--   account connection to delete.
newDeleteGitHubAccountToken :: DeleteGitHubAccountToken

-- | Represents the output of a <tt>DeleteGitHubAccountToken</tt>
--   operation.
--   
--   <i>See:</i> <a>newDeleteGitHubAccountTokenResponse</a> smart
--   constructor.
data DeleteGitHubAccountTokenResponse
DeleteGitHubAccountTokenResponse' :: Maybe Text -> Int -> DeleteGitHubAccountTokenResponse

-- | Create a value of <a>DeleteGitHubAccountTokenResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenName:DeleteGitHubAccountToken'</a>,
--   <a>deleteGitHubAccountTokenResponse_tokenName</a> - The name of the
--   GitHub account connection that was deleted.
--   
--   <a>$sel:httpStatus:DeleteGitHubAccountTokenResponse'</a>,
--   <a>deleteGitHubAccountTokenResponse_httpStatus</a> - The response's
--   http status code.
newDeleteGitHubAccountTokenResponse :: Int -> DeleteGitHubAccountTokenResponse

-- | <i>See:</i> <a>newPutLifecycleEventHookExecutionStatus</a> smart
--   constructor.
data PutLifecycleEventHookExecutionStatus
PutLifecycleEventHookExecutionStatus' :: Maybe Text -> Maybe LifecycleEventStatus -> Maybe Text -> PutLifecycleEventHookExecutionStatus

-- | Create a value of <a>PutLifecycleEventHookExecutionStatus</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:PutLifecycleEventHookExecutionStatus'</a>,
--   <a>putLifecycleEventHookExecutionStatus_deploymentId</a> - The unique
--   ID of a deployment. Pass this ID to a Lambda function that validates a
--   deployment lifecycle event.
--   
--   <a>$sel:status:PutLifecycleEventHookExecutionStatus'</a>,
--   <a>putLifecycleEventHookExecutionStatus_status</a> - The result of a
--   Lambda function that validates a deployment lifecycle event.
--   <tt>Succeeded</tt> and <tt>Failed</tt> are the only valid values for
--   <tt>status</tt>.
--   
--   
--   <a>$sel:lifecycleEventHookExecutionId:PutLifecycleEventHookExecutionStatus'</a>,
--   <a>putLifecycleEventHookExecutionStatus_lifecycleEventHookExecutionId</a>
--   - The execution ID of a deployment's lifecycle hook. A deployment
--   lifecycle hook is specified in the <tt>hooks</tt> section of the
--   AppSpec file.
newPutLifecycleEventHookExecutionStatus :: PutLifecycleEventHookExecutionStatus

-- | <i>See:</i> <a>newPutLifecycleEventHookExecutionStatusResponse</a>
--   smart constructor.
data PutLifecycleEventHookExecutionStatusResponse
PutLifecycleEventHookExecutionStatusResponse' :: Maybe Text -> Int -> PutLifecycleEventHookExecutionStatusResponse

-- | Create a value of <a>PutLifecycleEventHookExecutionStatusResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:lifecycleEventHookExecutionId:PutLifecycleEventHookExecutionStatus'</a>,
--   <a>putLifecycleEventHookExecutionStatusResponse_lifecycleEventHookExecutionId</a>
--   - The execution ID of the lifecycle event hook. A hook is specified in
--   the <tt>hooks</tt> section of the deployment's AppSpec file.
--   
--   <a>$sel:httpStatus:PutLifecycleEventHookExecutionStatusResponse'</a>,
--   <a>putLifecycleEventHookExecutionStatusResponse_httpStatus</a> - The
--   response's http status code.
newPutLifecycleEventHookExecutionStatusResponse :: Int -> PutLifecycleEventHookExecutionStatusResponse

-- | Represents the input of a <tt>DeregisterOnPremisesInstance</tt>
--   operation.
--   
--   <i>See:</i> <a>newDeregisterOnPremisesInstance</a> smart constructor.
data DeregisterOnPremisesInstance
DeregisterOnPremisesInstance' :: Text -> DeregisterOnPremisesInstance

-- | Create a value of <a>DeregisterOnPremisesInstance</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceName:DeregisterOnPremisesInstance'</a>,
--   <a>deregisterOnPremisesInstance_instanceName</a> - The name of the
--   on-premises instance to deregister.
newDeregisterOnPremisesInstance :: Text -> DeregisterOnPremisesInstance

-- | <i>See:</i> <a>newDeregisterOnPremisesInstanceResponse</a> smart
--   constructor.
data DeregisterOnPremisesInstanceResponse
DeregisterOnPremisesInstanceResponse' :: DeregisterOnPremisesInstanceResponse

-- | Create a value of <a>DeregisterOnPremisesInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeregisterOnPremisesInstanceResponse :: DeregisterOnPremisesInstanceResponse

-- | Represents the input of a <tt>ListApplications</tt> operation.
--   
--   <i>See:</i> <a>newListApplications</a> smart constructor.
data ListApplications
ListApplications' :: Maybe Text -> ListApplications

-- | Create a value of <a>ListApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplications_nextToken</a> - An identifier returned from the
--   previous list applications call. It can be used to return the next set
--   of applications in the list.
newListApplications :: ListApplications

-- | Represents the output of a ListApplications operation.
--   
--   <i>See:</i> <a>newListApplicationsResponse</a> smart constructor.
data ListApplicationsResponse
ListApplicationsResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListApplicationsResponse

-- | Create a value of <a>ListApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplications'</a>,
--   <a>listApplicationsResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list applications call to return the next set of
--   applications in the list.
--   
--   <a>$sel:applications:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_applications</a> - A list of application
--   names.
--   
--   <a>$sel:httpStatus:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_httpStatus</a> - The response's http
--   status code.
newListApplicationsResponse :: Int -> ListApplicationsResponse

-- | Represents the input of a <tt>DeleteApplication</tt> operation.
--   
--   <i>See:</i> <a>newDeleteApplication</a> smart constructor.
data DeleteApplication
DeleteApplication' :: Text -> DeleteApplication

-- | Create a value of <a>DeleteApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplication'</a>,
--   <a>deleteApplication_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
newDeleteApplication :: Text -> DeleteApplication

-- | <i>See:</i> <a>newDeleteApplicationResponse</a> smart constructor.
data DeleteApplicationResponse
DeleteApplicationResponse' :: DeleteApplicationResponse

-- | Create a value of <a>DeleteApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApplicationResponse :: DeleteApplicationResponse

-- | Represents the input of an <tt>UpdateApplication</tt> operation.
--   
--   <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Maybe Text -> Maybe Text -> UpdateApplication

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:newApplicationName':UpdateApplication'</a>,
--   <a>updateApplication_newApplicationName</a> - The new name to give the
--   application.
--   
--   <a>$sel:applicationName:UpdateApplication'</a>,
--   <a>updateApplication_applicationName</a> - The current name of the
--   application you want to change.
newUpdateApplication :: UpdateApplication

-- | <i>See:</i> <a>newUpdateApplicationResponse</a> smart constructor.
data UpdateApplicationResponse
UpdateApplicationResponse' :: UpdateApplicationResponse

-- | Create a value of <a>UpdateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateApplicationResponse :: UpdateApplicationResponse

-- | Represents the input of a <tt>BatchGetDeployments</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetDeployments</a> smart constructor.
data BatchGetDeployments
BatchGetDeployments' :: [Text] -> BatchGetDeployments

-- | Create a value of <a>BatchGetDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentIds:BatchGetDeployments'</a>,
--   <a>batchGetDeployments_deploymentIds</a> - A list of deployment IDs,
--   separated by spaces. The maximum number of deployment IDs you can
--   specify is 25.
newBatchGetDeployments :: BatchGetDeployments

-- | Represents the output of a <tt>BatchGetDeployments</tt> operation.
--   
--   <i>See:</i> <a>newBatchGetDeploymentsResponse</a> smart constructor.
data BatchGetDeploymentsResponse
BatchGetDeploymentsResponse' :: Maybe [DeploymentInfo] -> Int -> BatchGetDeploymentsResponse

-- | Create a value of <a>BatchGetDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentsInfo:BatchGetDeploymentsResponse'</a>,
--   <a>batchGetDeploymentsResponse_deploymentsInfo</a> - Information about
--   the deployments.
--   
--   <a>$sel:httpStatus:BatchGetDeploymentsResponse'</a>,
--   <a>batchGetDeploymentsResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetDeploymentsResponse :: Int -> BatchGetDeploymentsResponse

-- | Represents the input of a RegisterApplicationRevision operation.
--   
--   <i>See:</i> <a>newRegisterApplicationRevision</a> smart constructor.
data RegisterApplicationRevision
RegisterApplicationRevision' :: Maybe Text -> Text -> RevisionLocation -> RegisterApplicationRevision

-- | Create a value of <a>RegisterApplicationRevision</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:RegisterApplicationRevision'</a>,
--   <a>registerApplicationRevision_description</a> - A comment about the
--   revision.
--   
--   <a>$sel:applicationName:RegisterApplicationRevision'</a>,
--   <a>registerApplicationRevision_applicationName</a> - The name of an
--   AWS CodeDeploy application associated with the IAM user or AWS
--   account.
--   
--   <a>$sel:revision:RegisterApplicationRevision'</a>,
--   <a>registerApplicationRevision_revision</a> - Information about the
--   application revision to register, including type and location.
newRegisterApplicationRevision :: Text -> RevisionLocation -> RegisterApplicationRevision

-- | <i>See:</i> <a>newRegisterApplicationRevisionResponse</a> smart
--   constructor.
data RegisterApplicationRevisionResponse
RegisterApplicationRevisionResponse' :: RegisterApplicationRevisionResponse

-- | Create a value of <a>RegisterApplicationRevisionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newRegisterApplicationRevisionResponse :: RegisterApplicationRevisionResponse

-- | Represents the input of a <tt>GetDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentGroup</a> smart constructor.
data GetDeploymentGroup
GetDeploymentGroup' :: Text -> Text -> GetDeploymentGroup

-- | Create a value of <a>GetDeploymentGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:GetDeploymentGroup'</a>,
--   <a>getDeploymentGroup_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
--   
--   <a>$sel:deploymentGroupName:GetDeploymentGroup'</a>,
--   <a>getDeploymentGroup_deploymentGroupName</a> - The name of a
--   deployment group for the specified application.
newGetDeploymentGroup :: Text -> Text -> GetDeploymentGroup

-- | Represents the output of a <tt>GetDeploymentGroup</tt> operation.
--   
--   <i>See:</i> <a>newGetDeploymentGroupResponse</a> smart constructor.
data GetDeploymentGroupResponse
GetDeploymentGroupResponse' :: Maybe DeploymentGroupInfo -> Int -> GetDeploymentGroupResponse

-- | Create a value of <a>GetDeploymentGroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentGroupInfo:GetDeploymentGroupResponse'</a>,
--   <a>getDeploymentGroupResponse_deploymentGroupInfo</a> - Information
--   about the deployment group.
--   
--   <a>$sel:httpStatus:GetDeploymentGroupResponse'</a>,
--   <a>getDeploymentGroupResponse_httpStatus</a> - The response's http
--   status code.
newGetDeploymentGroupResponse :: Int -> GetDeploymentGroupResponse

-- | Represents the input of a <tt>GetOnPremisesInstance</tt> operation.
--   
--   <i>See:</i> <a>newGetOnPremisesInstance</a> smart constructor.
data GetOnPremisesInstance
GetOnPremisesInstance' :: Text -> GetOnPremisesInstance

-- | Create a value of <a>GetOnPremisesInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceName:GetOnPremisesInstance'</a>,
--   <a>getOnPremisesInstance_instanceName</a> - The name of the
--   on-premises instance about which to get information.
newGetOnPremisesInstance :: Text -> GetOnPremisesInstance

-- | Represents the output of a <tt>GetOnPremisesInstance</tt> operation.
--   
--   <i>See:</i> <a>newGetOnPremisesInstanceResponse</a> smart constructor.
data GetOnPremisesInstanceResponse
GetOnPremisesInstanceResponse' :: Maybe InstanceInfo -> Int -> GetOnPremisesInstanceResponse

-- | Create a value of <a>GetOnPremisesInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceInfo:GetOnPremisesInstanceResponse'</a>,
--   <a>getOnPremisesInstanceResponse_instanceInfo</a> - Information about
--   the on-premises instance.
--   
--   <a>$sel:httpStatus:GetOnPremisesInstanceResponse'</a>,
--   <a>getOnPremisesInstanceResponse_httpStatus</a> - The response's http
--   status code.
newGetOnPremisesInstanceResponse :: Int -> GetOnPremisesInstanceResponse

-- | Represents the input of a <tt>ListApplicationRevisions</tt> operation.
--   
--   <i>See:</i> <a>newListApplicationRevisions</a> smart constructor.
data ListApplicationRevisions
ListApplicationRevisions' :: Maybe Text -> Maybe SortOrder -> Maybe Text -> Maybe ListStateFilterAction -> Maybe Text -> Maybe ApplicationRevisionSortBy -> Text -> ListApplicationRevisions

-- | Create a value of <a>ListApplicationRevisions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_nextToken</a> - An identifier returned
--   from the previous <tt>ListApplicationRevisions</tt> call. It can be
--   used to return the next set of applications in the list.
--   
--   <a>$sel:sortOrder:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_sortOrder</a> - The order in which to sort
--   the list results:
--   
--   <ul>
--   <li><tt>ascending</tt>: ascending order.</li>
--   <li><tt>descending</tt>: descending order.</li>
--   </ul>
--   
--   If not specified, the results are sorted in ascending order.
--   
--   If set to null, the results are sorted in an arbitrary order.
--   
--   <a>$sel:s3Bucket:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_s3Bucket</a> - An Amazon S3 bucket name to
--   limit the search for revisions.
--   
--   If set to null, all of the user's buckets are searched.
--   
--   <a>$sel:deployed:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_deployed</a> - Whether to list revisions
--   based on whether the revision is the target revision of a deployment
--   group:
--   
--   <ul>
--   <li><tt>include</tt>: List revisions that are target revisions of a
--   deployment group.</li>
--   <li><tt>exclude</tt>: Do not list revisions that are target revisions
--   of a deployment group.</li>
--   <li><tt>ignore</tt>: List all revisions.</li>
--   </ul>
--   
--   <a>$sel:s3KeyPrefix:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_s3KeyPrefix</a> - A key prefix for the set
--   of Amazon S3 objects to limit the search for revisions.
--   
--   <a>$sel:sortBy:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_sortBy</a> - The column name to use to
--   sort the list results:
--   
--   <ul>
--   <li><tt>registerTime</tt>: Sort by the time the revisions were
--   registered with AWS CodeDeploy.</li>
--   <li><tt>firstUsedTime</tt>: Sort by the time the revisions were first
--   used in a deployment.</li>
--   <li><tt>lastUsedTime</tt>: Sort by the time the revisions were last
--   used in a deployment.</li>
--   </ul>
--   
--   If not specified or set to null, the results are returned in an
--   arbitrary order.
--   
--   <a>$sel:applicationName:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisions_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
newListApplicationRevisions :: Text -> ListApplicationRevisions

-- | Represents the output of a <tt>ListApplicationRevisions</tt>
--   operation.
--   
--   <i>See:</i> <a>newListApplicationRevisionsResponse</a> smart
--   constructor.
data ListApplicationRevisionsResponse
ListApplicationRevisionsResponse' :: Maybe Text -> Maybe [RevisionLocation] -> Int -> ListApplicationRevisionsResponse

-- | Create a value of <a>ListApplicationRevisionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApplicationRevisions'</a>,
--   <a>listApplicationRevisionsResponse_nextToken</a> - If a large amount
--   of information is returned, an identifier is also returned. It can be
--   used in a subsequent list application revisions call to return the
--   next set of application revisions in the list.
--   
--   <a>$sel:revisions:ListApplicationRevisionsResponse'</a>,
--   <a>listApplicationRevisionsResponse_revisions</a> - A list of
--   locations that contain the matching revisions.
--   
--   <a>$sel:httpStatus:ListApplicationRevisionsResponse'</a>,
--   <a>listApplicationRevisionsResponse_httpStatus</a> - The response's
--   http status code.
newListApplicationRevisionsResponse :: Int -> ListApplicationRevisionsResponse

-- | Represents the input of a <tt>CreateDeployment</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeployment</a> smart constructor.
data CreateDeployment
CreateDeployment' :: Maybe Text -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe Bool -> Maybe Bool -> Maybe TargetInstances -> Maybe Text -> Maybe RevisionLocation -> Maybe FileExistsBehavior -> Text -> CreateDeployment

-- | Create a value of <a>CreateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:CreateDeployment'</a>,
--   <a>createDeployment_deploymentConfigName</a> - The name of a
--   deployment configuration associated with the IAM user or AWS account.
--   
--   If not specified, the value configured in the deployment group is used
--   as the default. If the deployment group does not have a deployment
--   configuration associated with it,
--   <tt>CodeDeployDefault</tt>.<tt>OneAtATime</tt> is used by default.
--   
--   <a>$sel:deploymentGroupName:CreateDeployment'</a>,
--   <a>createDeployment_deploymentGroupName</a> - The name of the
--   deployment group.
--   
--   <a>$sel:autoRollbackConfiguration:CreateDeployment'</a>,
--   <a>createDeployment_autoRollbackConfiguration</a> - Configuration
--   information for an automatic rollback that is added when a deployment
--   is created.
--   
--   <a>$sel:updateOutdatedInstancesOnly:CreateDeployment'</a>,
--   <a>createDeployment_updateOutdatedInstancesOnly</a> - Indicates
--   whether to deploy to all instances or only to instances that are not
--   running the latest application revision.
--   
--   <a>$sel:ignoreApplicationStopFailures:CreateDeployment'</a>,
--   <a>createDeployment_ignoreApplicationStopFailures</a> - If true, then
--   if an <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, or
--   <tt>AfterBlockTraffic</tt> deployment lifecycle event to an instance
--   fails, then the deployment continues to the next deployment lifecycle
--   event. For example, if <tt>ApplicationStop</tt> fails, the deployment
--   continues with <tt>DownloadBundle</tt>. If <tt>BeforeBlockTraffic</tt>
--   fails, the deployment continues with <tt>BlockTraffic</tt>. If
--   <tt>AfterBlockTraffic</tt> fails, the deployment continues with
--   <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
--   
--   <a>$sel:targetInstances:CreateDeployment'</a>,
--   <a>createDeployment_targetInstances</a> - Information about the
--   instances that belong to the replacement environment in a blue/green
--   deployment.
--   
--   <a>$sel:description:CreateDeployment'</a>,
--   <a>createDeployment_description</a> - A comment about the deployment.
--   
--   <a>$sel:revision:CreateDeployment'</a>,
--   <a>createDeployment_revision</a> - The type and location of the
--   revision to deploy.
--   
--   <a>$sel:fileExistsBehavior:CreateDeployment'</a>,
--   <a>createDeployment_fileExistsBehavior</a> - Information about how AWS
--   CodeDeploy handles files that already exist in a deployment target
--   location but weren't part of the previous successful deployment.
--   
--   The <tt>fileExistsBehavior</tt> parameter takes any of the following
--   values:
--   
--   <ul>
--   <li>DISALLOW: The deployment fails. This is also the default behavior
--   if no option is specified.</li>
--   <li>OVERWRITE: The version of the file from the application revision
--   currently being deployed replaces the version already on the
--   instance.</li>
--   <li>RETAIN: The version of the file already on the instance is kept
--   and used as part of the new deployment.</li>
--   </ul>
--   
--   <a>$sel:applicationName:CreateDeployment'</a>,
--   <a>createDeployment_applicationName</a> - The name of an AWS
--   CodeDeploy application associated with the IAM user or AWS account.
newCreateDeployment :: Text -> CreateDeployment

-- | Represents the output of a <tt>CreateDeployment</tt> operation.
--   
--   <i>See:</i> <a>newCreateDeploymentResponse</a> smart constructor.
data CreateDeploymentResponse
CreateDeploymentResponse' :: Maybe Text -> Int -> CreateDeploymentResponse

-- | Create a value of <a>CreateDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentId</a> - The unique ID of a
--   deployment.
--   
--   <a>$sel:httpStatus:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentResponse :: Int -> CreateDeploymentResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - An identifier returned from the
--   previous <tt>ListTagsForResource</tt> call. It can be used to return
--   the next set of applications in the list.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of a CodeDeploy
--   resource. <tt>ListTagsForResource</tt> returns all the tags associated
--   with the resource that is identified by the <tt>ResourceArn</tt>.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - If a large amount of
--   information is returned, an identifier is also returned. It can be
--   used in a subsequent list application revisions call to return the
--   next set of application revisions in the list.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tags returned by
--   <tt>ListTagsForResource</tt>. The tags are associated with the
--   resource identified by the input <tt>ResourceArn</tt> parameter.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse
newtype ApplicationRevisionSortBy
ApplicationRevisionSortBy' :: Text -> ApplicationRevisionSortBy
[fromApplicationRevisionSortBy] :: ApplicationRevisionSortBy -> Text
pattern ApplicationRevisionSortBy_FirstUsedTime :: ApplicationRevisionSortBy
pattern ApplicationRevisionSortBy_LastUsedTime :: ApplicationRevisionSortBy
pattern ApplicationRevisionSortBy_RegisterTime :: ApplicationRevisionSortBy
newtype AutoRollbackEvent
AutoRollbackEvent' :: Text -> AutoRollbackEvent
[fromAutoRollbackEvent] :: AutoRollbackEvent -> Text
pattern AutoRollbackEvent_DEPLOYMENT_FAILURE :: AutoRollbackEvent
pattern AutoRollbackEvent_DEPLOYMENT_STOP_ON_ALARM :: AutoRollbackEvent
pattern AutoRollbackEvent_DEPLOYMENT_STOP_ON_REQUEST :: AutoRollbackEvent
newtype BundleType
BundleType' :: Text -> BundleType
[fromBundleType] :: BundleType -> Text
pattern BundleType_JSON :: BundleType
pattern BundleType_Tar :: BundleType
pattern BundleType_Tgz :: BundleType
pattern BundleType_YAML :: BundleType
pattern BundleType_Zip :: BundleType
newtype ComputePlatform
ComputePlatform' :: Text -> ComputePlatform
[fromComputePlatform] :: ComputePlatform -> Text
pattern ComputePlatform_ECS :: ComputePlatform
pattern ComputePlatform_Lambda :: ComputePlatform
pattern ComputePlatform_Server :: ComputePlatform
newtype DeployErrorCode
DeployErrorCode' :: Text -> DeployErrorCode
[fromDeployErrorCode] :: DeployErrorCode -> Text
pattern DeployErrorCode_AGENT_ISSUE :: DeployErrorCode
pattern DeployErrorCode_ALARM_ACTIVE :: DeployErrorCode
pattern DeployErrorCode_APPLICATION_MISSING :: DeployErrorCode
pattern DeployErrorCode_AUTOSCALING_VALIDATION_ERROR :: DeployErrorCode
pattern DeployErrorCode_AUTO_SCALING_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_AUTO_SCALING_IAM_ROLE_PERMISSIONS :: DeployErrorCode
pattern DeployErrorCode_CLOUDFORMATION_STACK_FAILURE :: DeployErrorCode
pattern DeployErrorCode_CODEDEPLOY_RESOURCE_CANNOT_BE_FOUND :: DeployErrorCode
pattern DeployErrorCode_CUSTOMER_APPLICATION_UNHEALTHY :: DeployErrorCode
pattern DeployErrorCode_DEPLOYMENT_GROUP_MISSING :: DeployErrorCode
pattern DeployErrorCode_ECS_UPDATE_ERROR :: DeployErrorCode
pattern DeployErrorCode_ELASTIC_LOAD_BALANCING_INVALID :: DeployErrorCode
pattern DeployErrorCode_ELB_INVALID_INSTANCE :: DeployErrorCode
pattern DeployErrorCode_HEALTH_CONSTRAINTS :: DeployErrorCode
pattern DeployErrorCode_HEALTH_CONSTRAINTS_INVALID :: DeployErrorCode
pattern DeployErrorCode_HOOK_EXECUTION_FAILURE :: DeployErrorCode
pattern DeployErrorCode_IAM_ROLE_MISSING :: DeployErrorCode
pattern DeployErrorCode_IAM_ROLE_PERMISSIONS :: DeployErrorCode
pattern DeployErrorCode_INTERNAL_ERROR :: DeployErrorCode
pattern DeployErrorCode_INVALID_ECS_SERVICE :: DeployErrorCode
pattern DeployErrorCode_INVALID_LAMBDA_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_INVALID_LAMBDA_FUNCTION :: DeployErrorCode
pattern DeployErrorCode_INVALID_REVISION :: DeployErrorCode
pattern DeployErrorCode_MANUAL_STOP :: DeployErrorCode
pattern DeployErrorCode_MISSING_BLUE_GREEN_DEPLOYMENT_CONFIGURATION :: DeployErrorCode
pattern DeployErrorCode_MISSING_ELB_INFORMATION :: DeployErrorCode
pattern DeployErrorCode_MISSING_GITHUB_TOKEN :: DeployErrorCode
pattern DeployErrorCode_NO_EC2_SUBSCRIPTION :: DeployErrorCode
pattern DeployErrorCode_NO_INSTANCES :: DeployErrorCode
pattern DeployErrorCode_OVER_MAX_INSTANCES :: DeployErrorCode
pattern DeployErrorCode_RESOURCE_LIMIT_EXCEEDED :: DeployErrorCode
pattern DeployErrorCode_REVISION_MISSING :: DeployErrorCode
pattern DeployErrorCode_THROTTLED :: DeployErrorCode
pattern DeployErrorCode_TIMEOUT :: DeployErrorCode
newtype DeploymentCreator
DeploymentCreator' :: Text -> DeploymentCreator
[fromDeploymentCreator] :: DeploymentCreator -> Text
pattern DeploymentCreator_Autoscaling :: DeploymentCreator
pattern DeploymentCreator_CloudFormation :: DeploymentCreator
pattern DeploymentCreator_CloudFormationRollback :: DeploymentCreator
pattern DeploymentCreator_CodeDeploy :: DeploymentCreator
pattern DeploymentCreator_CodeDeployAutoUpdate :: DeploymentCreator
pattern DeploymentCreator_CodeDeployRollback :: DeploymentCreator
pattern DeploymentCreator_User :: DeploymentCreator
newtype DeploymentOption
DeploymentOption' :: Text -> DeploymentOption
[fromDeploymentOption] :: DeploymentOption -> Text
pattern DeploymentOption_WITHOUT_TRAFFIC_CONTROL :: DeploymentOption
pattern DeploymentOption_WITH_TRAFFIC_CONTROL :: DeploymentOption
newtype DeploymentReadyAction
DeploymentReadyAction' :: Text -> DeploymentReadyAction
[fromDeploymentReadyAction] :: DeploymentReadyAction -> Text
pattern DeploymentReadyAction_CONTINUE_DEPLOYMENT :: DeploymentReadyAction
pattern DeploymentReadyAction_STOP_DEPLOYMENT :: DeploymentReadyAction
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_Baking :: DeploymentStatus
pattern DeploymentStatus_Created :: DeploymentStatus
pattern DeploymentStatus_Failed :: DeploymentStatus
pattern DeploymentStatus_InProgress :: DeploymentStatus
pattern DeploymentStatus_Queued :: DeploymentStatus
pattern DeploymentStatus_Ready :: DeploymentStatus
pattern DeploymentStatus_Stopped :: DeploymentStatus
pattern DeploymentStatus_Succeeded :: DeploymentStatus
newtype DeploymentTargetType
DeploymentTargetType' :: Text -> DeploymentTargetType
[fromDeploymentTargetType] :: DeploymentTargetType -> Text
pattern DeploymentTargetType_CloudFormationTarget :: DeploymentTargetType
pattern DeploymentTargetType_ECSTarget :: DeploymentTargetType
pattern DeploymentTargetType_InstanceTarget :: DeploymentTargetType
pattern DeploymentTargetType_LambdaTarget :: DeploymentTargetType
newtype DeploymentType
DeploymentType' :: Text -> DeploymentType
[fromDeploymentType] :: DeploymentType -> Text
pattern DeploymentType_BLUE_GREEN :: DeploymentType
pattern DeploymentType_IN_PLACE :: DeploymentType
newtype DeploymentWaitType
DeploymentWaitType' :: Text -> DeploymentWaitType
[fromDeploymentWaitType] :: DeploymentWaitType -> Text
pattern DeploymentWaitType_READY_WAIT :: DeploymentWaitType
pattern DeploymentWaitType_TERMINATION_WAIT :: DeploymentWaitType
newtype EC2TagFilterType
EC2TagFilterType' :: Text -> EC2TagFilterType
[fromEC2TagFilterType] :: EC2TagFilterType -> Text
pattern EC2TagFilterType_KEY_AND_VALUE :: EC2TagFilterType
pattern EC2TagFilterType_KEY_ONLY :: EC2TagFilterType
pattern EC2TagFilterType_VALUE_ONLY :: EC2TagFilterType
newtype FileExistsBehavior
FileExistsBehavior' :: Text -> FileExistsBehavior
[fromFileExistsBehavior] :: FileExistsBehavior -> Text
pattern FileExistsBehavior_DISALLOW :: FileExistsBehavior
pattern FileExistsBehavior_OVERWRITE :: FileExistsBehavior
pattern FileExistsBehavior_RETAIN :: FileExistsBehavior
newtype GreenFleetProvisioningAction
GreenFleetProvisioningAction' :: Text -> GreenFleetProvisioningAction
[fromGreenFleetProvisioningAction] :: GreenFleetProvisioningAction -> Text
pattern GreenFleetProvisioningAction_COPY_AUTO_SCALING_GROUP :: GreenFleetProvisioningAction
pattern GreenFleetProvisioningAction_DISCOVER_EXISTING :: GreenFleetProvisioningAction
newtype InstanceAction
InstanceAction' :: Text -> InstanceAction
[fromInstanceAction] :: InstanceAction -> Text
pattern InstanceAction_KEEP_ALIVE :: InstanceAction
pattern InstanceAction_TERMINATE :: InstanceAction
newtype LifecycleErrorCode
LifecycleErrorCode' :: Text -> LifecycleErrorCode
[fromLifecycleErrorCode] :: LifecycleErrorCode -> Text
pattern LifecycleErrorCode_ScriptFailed :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptMissing :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptNotExecutable :: LifecycleErrorCode
pattern LifecycleErrorCode_ScriptTimedOut :: LifecycleErrorCode
pattern LifecycleErrorCode_Success :: LifecycleErrorCode
pattern LifecycleErrorCode_UnknownError :: LifecycleErrorCode
newtype LifecycleEventStatus
LifecycleEventStatus' :: Text -> LifecycleEventStatus
[fromLifecycleEventStatus] :: LifecycleEventStatus -> Text
pattern LifecycleEventStatus_Failed :: LifecycleEventStatus
pattern LifecycleEventStatus_InProgress :: LifecycleEventStatus
pattern LifecycleEventStatus_Pending :: LifecycleEventStatus
pattern LifecycleEventStatus_Skipped :: LifecycleEventStatus
pattern LifecycleEventStatus_Succeeded :: LifecycleEventStatus
pattern LifecycleEventStatus_Unknown :: LifecycleEventStatus
newtype ListStateFilterAction
ListStateFilterAction' :: Text -> ListStateFilterAction
[fromListStateFilterAction] :: ListStateFilterAction -> Text
pattern ListStateFilterAction_Exclude :: ListStateFilterAction
pattern ListStateFilterAction_Ignore :: ListStateFilterAction
pattern ListStateFilterAction_Include :: ListStateFilterAction
newtype MinimumHealthyHostsType
MinimumHealthyHostsType' :: Text -> MinimumHealthyHostsType
[fromMinimumHealthyHostsType] :: MinimumHealthyHostsType -> Text
pattern MinimumHealthyHostsType_FLEET_PERCENT :: MinimumHealthyHostsType
pattern MinimumHealthyHostsType_HOST_COUNT :: MinimumHealthyHostsType
newtype OutdatedInstancesStrategy
OutdatedInstancesStrategy' :: Text -> OutdatedInstancesStrategy
[fromOutdatedInstancesStrategy] :: OutdatedInstancesStrategy -> Text
pattern OutdatedInstancesStrategy_IGNORE :: OutdatedInstancesStrategy
pattern OutdatedInstancesStrategy_UPDATE :: OutdatedInstancesStrategy
newtype RegistrationStatus
RegistrationStatus' :: Text -> RegistrationStatus
[fromRegistrationStatus] :: RegistrationStatus -> Text
pattern RegistrationStatus_Deregistered :: RegistrationStatus
pattern RegistrationStatus_Registered :: RegistrationStatus
newtype RevisionLocationType
RevisionLocationType' :: Text -> RevisionLocationType
[fromRevisionLocationType] :: RevisionLocationType -> Text
pattern RevisionLocationType_AppSpecContent :: RevisionLocationType
pattern RevisionLocationType_GitHub :: RevisionLocationType
pattern RevisionLocationType_S3 :: RevisionLocationType
pattern RevisionLocationType_String :: RevisionLocationType
newtype SortOrder
SortOrder' :: Text -> SortOrder
[fromSortOrder] :: SortOrder -> Text
pattern SortOrder_Ascending :: SortOrder
pattern SortOrder_Descending :: SortOrder
newtype StopStatus
StopStatus' :: Text -> StopStatus
[fromStopStatus] :: StopStatus -> Text
pattern StopStatus_Pending :: StopStatus
pattern StopStatus_Succeeded :: StopStatus
newtype TagFilterType
TagFilterType' :: Text -> TagFilterType
[fromTagFilterType] :: TagFilterType -> Text
pattern TagFilterType_KEY_AND_VALUE :: TagFilterType
pattern TagFilterType_KEY_ONLY :: TagFilterType
pattern TagFilterType_VALUE_ONLY :: TagFilterType
newtype TargetFilterName
TargetFilterName' :: Text -> TargetFilterName
[fromTargetFilterName] :: TargetFilterName -> Text
pattern TargetFilterName_ServerInstanceLabel :: TargetFilterName
pattern TargetFilterName_TargetStatus :: TargetFilterName
newtype TargetLabel
TargetLabel' :: Text -> TargetLabel
[fromTargetLabel] :: TargetLabel -> Text
pattern TargetLabel_Blue :: TargetLabel
pattern TargetLabel_Green :: TargetLabel
newtype TargetStatus
TargetStatus' :: Text -> TargetStatus
[fromTargetStatus] :: TargetStatus -> Text
pattern TargetStatus_Failed :: TargetStatus
pattern TargetStatus_InProgress :: TargetStatus
pattern TargetStatus_Pending :: TargetStatus
pattern TargetStatus_Ready :: TargetStatus
pattern TargetStatus_Skipped :: TargetStatus
pattern TargetStatus_Succeeded :: TargetStatus
pattern TargetStatus_Unknown :: TargetStatus
newtype TrafficRoutingType
TrafficRoutingType' :: Text -> TrafficRoutingType
[fromTrafficRoutingType] :: TrafficRoutingType -> Text
pattern TrafficRoutingType_AllAtOnce :: TrafficRoutingType
pattern TrafficRoutingType_TimeBasedCanary :: TrafficRoutingType
pattern TrafficRoutingType_TimeBasedLinear :: TrafficRoutingType
newtype TriggerEventType
TriggerEventType' :: Text -> TriggerEventType
[fromTriggerEventType] :: TriggerEventType -> Text
pattern TriggerEventType_DeploymentFailure :: TriggerEventType
pattern TriggerEventType_DeploymentReady :: TriggerEventType
pattern TriggerEventType_DeploymentRollback :: TriggerEventType
pattern TriggerEventType_DeploymentStart :: TriggerEventType
pattern TriggerEventType_DeploymentStop :: TriggerEventType
pattern TriggerEventType_DeploymentSuccess :: TriggerEventType
pattern TriggerEventType_InstanceFailure :: TriggerEventType
pattern TriggerEventType_InstanceReady :: TriggerEventType
pattern TriggerEventType_InstanceStart :: TriggerEventType
pattern TriggerEventType_InstanceSuccess :: TriggerEventType

-- | Information about an alarm.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Maybe Text -> Alarm

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Alarm'</a>, <a>alarm_name</a> - The name of the alarm.
--   Maximum length is 255 characters. Each alarm name can be used only
--   once in a list of alarms.
newAlarm :: Alarm

-- | Information about alarms associated with the deployment group.
--   
--   <i>See:</i> <a>newAlarmConfiguration</a> smart constructor.
data AlarmConfiguration
AlarmConfiguration' :: Maybe Bool -> Maybe Bool -> Maybe [Alarm] -> AlarmConfiguration

-- | Create a value of <a>AlarmConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ignorePollAlarmFailure:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_ignorePollAlarmFailure</a> - Indicates whether a
--   deployment should continue if information about the current state of
--   alarms cannot be retrieved from Amazon CloudWatch. The default value
--   is false.
--   
--   <ul>
--   <li><tt>true</tt>: The deployment proceeds even if alarm status
--   information can't be retrieved from Amazon CloudWatch.</li>
--   <li><tt>false</tt>: The deployment stops if alarm status information
--   can't be retrieved from Amazon CloudWatch.</li>
--   </ul>
--   
--   <a>$sel:enabled:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_enabled</a> - Indicates whether the alarm
--   configuration is enabled.
--   
--   <a>$sel:alarms:AlarmConfiguration'</a>,
--   <a>alarmConfiguration_alarms</a> - A list of alarms configured for the
--   deployment group. A maximum of 10 alarms can be added to a deployment
--   group.
newAlarmConfiguration :: AlarmConfiguration

-- | A revision for an AWS Lambda or Amazon ECS deployment that is a
--   YAML-formatted or JSON-formatted string. For AWS Lambda and Amazon ECS
--   deployments, the revision is the same as the AppSpec file. This method
--   replaces the deprecated <tt>RawString</tt> data type.
--   
--   <i>See:</i> <a>newAppSpecContent</a> smart constructor.
data AppSpecContent
AppSpecContent' :: Maybe Text -> Maybe Text -> AppSpecContent

-- | Create a value of <a>AppSpecContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:AppSpecContent'</a>, <a>appSpecContent_content</a> -
--   The YAML-formatted or JSON-formatted revision string.
--   
--   For an AWS Lambda deployment, the content includes a Lambda function
--   name, the alias for its original version, and the alias for its
--   replacement version. The deployment shifts traffic from the original
--   version of the Lambda function to the replacement version.
--   
--   For an Amazon ECS deployment, the content includes the task name,
--   information about the load balancer that serves traffic to the
--   container, and more.
--   
--   For both types of deployments, the content can specify Lambda
--   functions that run at specified hooks, such as <tt>BeforeInstall</tt>,
--   during a deployment.
--   
--   <a>$sel:sha256:AppSpecContent'</a>, <a>appSpecContent_sha256</a> - The
--   SHA256 hash value of the revision content.
newAppSpecContent :: AppSpecContent

-- | Information about an application.
--   
--   <i>See:</i> <a>newApplicationInfo</a> smart constructor.
data ApplicationInfo
ApplicationInfo' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe ComputePlatform -> ApplicationInfo

-- | Create a value of <a>ApplicationInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedToGitHub:ApplicationInfo'</a>,
--   <a>applicationInfo_linkedToGitHub</a> - True if the user has
--   authenticated with GitHub for the specified application. Otherwise,
--   false.
--   
--   <a>$sel:applicationId:ApplicationInfo'</a>,
--   <a>applicationInfo_applicationId</a> - The application ID.
--   
--   <a>$sel:gitHubAccountName:ApplicationInfo'</a>,
--   <a>applicationInfo_gitHubAccountName</a> - The name for a connection
--   to a GitHub account.
--   
--   <a>$sel:createTime:ApplicationInfo'</a>,
--   <a>applicationInfo_createTime</a> - The time at which the application
--   was created.
--   
--   <a>$sel:applicationName:ApplicationInfo'</a>,
--   <a>applicationInfo_applicationName</a> - The application name.
--   
--   <a>$sel:computePlatform:ApplicationInfo'</a>,
--   <a>applicationInfo_computePlatform</a> - The destination platform type
--   for deployment of the application (<tt>Lambda</tt> or
--   <tt>Server</tt>).
newApplicationInfo :: ApplicationInfo

-- | Information about a configuration for automatically rolling back to a
--   previous version of an application revision when a deployment is not
--   completed successfully.
--   
--   <i>See:</i> <a>newAutoRollbackConfiguration</a> smart constructor.
data AutoRollbackConfiguration
AutoRollbackConfiguration' :: Maybe Bool -> Maybe [AutoRollbackEvent] -> AutoRollbackConfiguration

-- | Create a value of <a>AutoRollbackConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:AutoRollbackConfiguration'</a>,
--   <a>autoRollbackConfiguration_enabled</a> - Indicates whether a defined
--   automatic rollback configuration is currently enabled.
--   
--   <a>$sel:events:AutoRollbackConfiguration'</a>,
--   <a>autoRollbackConfiguration_events</a> - The event type or types that
--   trigger a rollback.
newAutoRollbackConfiguration :: AutoRollbackConfiguration

-- | Information about an Auto Scaling group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> Maybe Text -> AutoScalingGroup

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hook:AutoScalingGroup'</a>, <a>autoScalingGroup_hook</a> - An
--   Auto Scaling lifecycle event hook name.
--   
--   <a>$sel:name:AutoScalingGroup'</a>, <a>autoScalingGroup_name</a> - The
--   Auto Scaling group name.
newAutoScalingGroup :: AutoScalingGroup

-- | Information about blue/green deployment options for a deployment
--   group.
--   
--   <i>See:</i> <a>newBlueGreenDeploymentConfiguration</a> smart
--   constructor.
data BlueGreenDeploymentConfiguration
BlueGreenDeploymentConfiguration' :: Maybe GreenFleetProvisioningOption -> Maybe DeploymentReadyOption -> Maybe BlueInstanceTerminationOption -> BlueGreenDeploymentConfiguration

-- | Create a value of <a>BlueGreenDeploymentConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:greenFleetProvisioningOption:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_greenFleetProvisioningOption</a> -
--   Information about how instances are provisioned for a replacement
--   environment in a blue/green deployment.
--   
--   <a>$sel:deploymentReadyOption:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_deploymentReadyOption</a> -
--   Information about the action to take when newly provisioned instances
--   are ready to receive traffic in a blue/green deployment.
--   
--   
--   <a>$sel:terminateBlueInstancesOnDeploymentSuccess:BlueGreenDeploymentConfiguration'</a>,
--   <a>blueGreenDeploymentConfiguration_terminateBlueInstancesOnDeploymentSuccess</a>
--   - Information about whether to terminate instances in the original
--   fleet during a blue/green deployment.
newBlueGreenDeploymentConfiguration :: BlueGreenDeploymentConfiguration

-- | Information about whether instances in the original environment are
--   terminated when a blue/green deployment is successful.
--   <tt>BlueInstanceTerminationOption</tt> does not apply to Lambda
--   deployments.
--   
--   <i>See:</i> <a>newBlueInstanceTerminationOption</a> smart constructor.
data BlueInstanceTerminationOption
BlueInstanceTerminationOption' :: Maybe InstanceAction -> Maybe Int -> BlueInstanceTerminationOption

-- | Create a value of <a>BlueInstanceTerminationOption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:BlueInstanceTerminationOption'</a>,
--   <a>blueInstanceTerminationOption_action</a> - The action to take on
--   instances in the original environment after a successful blue/green
--   deployment.
--   
--   <ul>
--   <li><tt>TERMINATE</tt>: Instances are terminated after a specified
--   wait time.</li>
--   <li><tt>KEEP_ALIVE</tt>: Instances are left running after they are
--   deregistered from the load balancer and removed from the deployment
--   group.</li>
--   </ul>
--   
--   
--   <a>$sel:terminationWaitTimeInMinutes:BlueInstanceTerminationOption'</a>,
--   <a>blueInstanceTerminationOption_terminationWaitTimeInMinutes</a> -
--   For an Amazon EC2 deployment, the number of minutes to wait after a
--   successful blue/green deployment before terminating instances from the
--   original environment.
--   
--   For an Amazon ECS deployment, the number of minutes before deleting
--   the original (blue) task set. During an Amazon ECS deployment,
--   CodeDeploy shifts traffic from the original (blue) task set to a
--   replacement (green) task set.
--   
--   The maximum setting is 2880 minutes (2 days).
newBlueInstanceTerminationOption :: BlueInstanceTerminationOption

-- | Information about the target to be updated by an AWS CloudFormation
--   blue/green deployment. This target type is used for all deployments
--   initiated by a CloudFormation stack update.
--   
--   <i>See:</i> <a>newCloudFormationTarget</a> smart constructor.
data CloudFormationTarget
CloudFormationTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe Double -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> CloudFormationTarget

-- | Create a value of <a>CloudFormationTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_targetId</a> - The unique ID of a deployment
--   target that has a type of <tt>CloudFormationTarget</tt>.
--   
--   <a>$sel:deploymentId:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_deploymentId</a> - The unique ID of an AWS
--   CloudFormation blue/green deployment.
--   
--   <a>$sel:status:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_status</a> - The status of an AWS
--   CloudFormation blue/green deployment's target application.
--   
--   <a>$sel:targetVersionWeight:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_targetVersionWeight</a> - The percentage of
--   production traffic that the target version of an AWS CloudFormation
--   blue/green deployment receives.
--   
--   <a>$sel:resourceType:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_resourceType</a> - The resource type for the
--   AWS CloudFormation blue/green deployment.
--   
--   <a>$sel:lifecycleEvents:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_lifecycleEvents</a> - The lifecycle events of
--   the AWS CloudFormation blue/green deployment to this target
--   application.
--   
--   <a>$sel:lastUpdatedAt:CloudFormationTarget'</a>,
--   <a>cloudFormationTarget_lastUpdatedAt</a> - The date and time when the
--   target application was updated by an AWS CloudFormation blue/green
--   deployment.
newCloudFormationTarget :: CloudFormationTarget

-- | Information about a deployment configuration.
--   
--   <i>See:</i> <a>newDeploymentConfigInfo</a> smart constructor.
data DeploymentConfigInfo
DeploymentConfigInfo' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe TrafficRoutingConfig -> Maybe MinimumHealthyHosts -> Maybe ComputePlatform -> DeploymentConfigInfo

-- | Create a value of <a>DeploymentConfigInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentConfigId:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_deploymentConfigId</a> - The deployment
--   configuration ID.
--   
--   <a>$sel:createTime:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_createTime</a> - The time at which the
--   deployment configuration was created.
--   
--   <a>$sel:trafficRoutingConfig:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_trafficRoutingConfig</a> - The configuration
--   that specifies how the deployment traffic is routed. Used for
--   deployments with a Lambda or ECS compute platform only.
--   
--   <a>$sel:minimumHealthyHosts:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_minimumHealthyHosts</a> - Information about
--   the number or percentage of minimum healthy instance.
--   
--   <a>$sel:computePlatform:DeploymentConfigInfo'</a>,
--   <a>deploymentConfigInfo_computePlatform</a> - The destination platform
--   type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
newDeploymentConfigInfo :: DeploymentConfigInfo

-- | Information about a deployment group.
--   
--   <i>See:</i> <a>newDeploymentGroupInfo</a> smart constructor.
data DeploymentGroupInfo
DeploymentGroupInfo' :: Maybe OnPremisesTagSet -> Maybe OutdatedInstancesStrategy -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe Text -> Maybe [TriggerConfig] -> Maybe [EC2TagFilter] -> Maybe RevisionLocation -> Maybe LastDeploymentInfo -> Maybe LastDeploymentInfo -> Maybe [TagFilter] -> Maybe BlueGreenDeploymentConfiguration -> Maybe LoadBalancerInfo -> Maybe EC2TagSet -> Maybe DeploymentStyle -> Maybe [AutoScalingGroup] -> Maybe [ECSService] -> Maybe AlarmConfiguration -> Maybe Text -> Maybe ComputePlatform -> DeploymentGroupInfo

-- | Create a value of <a>DeploymentGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSet:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_onPremisesTagSet</a> - Information about groups
--   of tags applied to an on-premises instance. The deployment group
--   includes only on-premises instances identified by all the tag groups.
--   Cannot be used in the same call as onPremisesInstanceTagFilters.
--   
--   <a>$sel:outdatedInstancesStrategy:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_outdatedInstancesStrategy</a> - Indicates what
--   happens when new EC2 instances are launched mid-deployment and do not
--   receive the deployed application revision.
--   
--   If this option is set to <tt>UPDATE</tt> or is unspecified, CodeDeploy
--   initiates one or more 'auto-update outdated instances' deployments to
--   apply the deployed application revision to the new EC2 instances.
--   
--   If this option is set to <tt>IGNORE</tt>, CodeDeploy does not initiate
--   a deployment to update the new EC2 instances. This may result in
--   instances having different revisions.
--   
--   <a>$sel:serviceRoleArn:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_serviceRoleArn</a> - A service role Amazon
--   Resource Name (ARN) that grants CodeDeploy permission to make calls to
--   AWS services on your behalf. For more information, see <a>Create a
--   Service Role for AWS CodeDeploy</a> in the <i>AWS CodeDeploy User
--   Guide</i>.
--   
--   <a>$sel:deploymentConfigName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentGroupName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentGroupName</a> - The deployment group
--   name.
--   
--   <a>$sel:autoRollbackConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_autoRollbackConfiguration</a> - Information
--   about the automatic rollback configuration associated with the
--   deployment group.
--   
--   <a>$sel:deploymentGroupId:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentGroupId</a> - The deployment group
--   ID.
--   
--   <a>$sel:triggerConfigurations:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_triggerConfigurations</a> - Information about
--   triggers associated with the deployment group.
--   
--   <a>$sel:ec2TagFilters:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ec2TagFilters</a> - The Amazon EC2 tags on
--   which to filter. The deployment group includes EC2 instances with any
--   of the specified tags.
--   
--   <a>$sel:targetRevision:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_targetRevision</a> - Information about the
--   deployment group's target revision, including type and location.
--   
--   <a>$sel:lastAttemptedDeployment:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_lastAttemptedDeployment</a> - Information about
--   the most recent attempted deployment to the deployment group.
--   
--   <a>$sel:lastSuccessfulDeployment:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_lastSuccessfulDeployment</a> - Information
--   about the most recent successful deployment to the deployment group.
--   
--   <a>$sel:onPremisesInstanceTagFilters:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_onPremisesInstanceTagFilters</a> - The
--   on-premises instance tags on which to filter. The deployment group
--   includes on-premises instances with any of the specified tags.
--   
--   <a>$sel:blueGreenDeploymentConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_blueGreenDeploymentConfiguration</a> -
--   Information about blue/green deployment options for a deployment
--   group.
--   
--   <a>$sel:loadBalancerInfo:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_loadBalancerInfo</a> - Information about the
--   load balancer to use in a deployment.
--   
--   <a>$sel:ec2TagSet:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ec2TagSet</a> - Information about groups of
--   tags applied to an EC2 instance. The deployment group includes only
--   EC2 instances identified by all of the tag groups. Cannot be used in
--   the same call as ec2TagFilters.
--   
--   <a>$sel:deploymentStyle:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_deploymentStyle</a> - Information about the
--   type of deployment, either in-place or blue/green, you want to run and
--   whether to route deployment traffic behind a load balancer.
--   
--   <a>$sel:autoScalingGroups:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_autoScalingGroups</a> - A list of associated
--   Auto Scaling groups.
--   
--   <a>$sel:ecsServices:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_ecsServices</a> - The target Amazon ECS
--   services in the deployment group. This applies only to deployment
--   groups that use the Amazon ECS compute platform. A target Amazon ECS
--   service is specified as an Amazon ECS cluster and service name pair
--   using the format <tt>&lt;clustername&gt;:&lt;servicename&gt;</tt>.
--   
--   <a>$sel:alarmConfiguration:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_alarmConfiguration</a> - A list of alarms
--   associated with the deployment group.
--   
--   <a>$sel:applicationName:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_applicationName</a> - The application name.
--   
--   <a>$sel:computePlatform:DeploymentGroupInfo'</a>,
--   <a>deploymentGroupInfo_computePlatform</a> - The destination platform
--   type for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
newDeploymentGroupInfo :: DeploymentGroupInfo

-- | Information about a deployment.
--   
--   <i>See:</i> <a>newDeploymentInfo</a> smart constructor.
data DeploymentInfo
DeploymentInfo' :: Maybe Text -> Maybe Text -> Maybe DeploymentStatus -> Maybe Text -> Maybe AutoRollbackConfiguration -> Maybe Bool -> Maybe Bool -> Maybe TargetInstances -> Maybe POSIX -> Maybe Bool -> Maybe RevisionLocation -> Maybe DeploymentCreator -> Maybe BlueGreenDeploymentConfiguration -> Maybe ErrorInformation -> Maybe LoadBalancerInfo -> Maybe POSIX -> Maybe POSIX -> Maybe DeploymentStyle -> Maybe Text -> Maybe RevisionLocation -> Maybe RollbackInfo -> Maybe Text -> Maybe [Text] -> Maybe RelatedDeployments -> Maybe Text -> Maybe FileExistsBehavior -> Maybe ComputePlatform -> Maybe Text -> Maybe DeploymentOverview -> DeploymentInfo

-- | Create a value of <a>DeploymentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentConfigName:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentConfigName</a> - The deployment
--   configuration name.
--   
--   <a>$sel:deploymentId:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:DeploymentInfo'</a>, <a>deploymentInfo_status</a> - The
--   current state of the deployment as a whole.
--   
--   <a>$sel:deploymentGroupName:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentGroupName</a> - The deployment group name.
--   
--   <a>$sel:autoRollbackConfiguration:DeploymentInfo'</a>,
--   <a>deploymentInfo_autoRollbackConfiguration</a> - Information about
--   the automatic rollback configuration associated with the deployment.
--   
--   <a>$sel:updateOutdatedInstancesOnly:DeploymentInfo'</a>,
--   <a>deploymentInfo_updateOutdatedInstancesOnly</a> - Indicates whether
--   only instances that are not running the latest application revision
--   are to be deployed to.
--   
--   <a>$sel:ignoreApplicationStopFailures:DeploymentInfo'</a>,
--   <a>deploymentInfo_ignoreApplicationStopFailures</a> - If true, then if
--   an <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, or
--   <tt>AfterBlockTraffic</tt> deployment lifecycle event to an instance
--   fails, then the deployment continues to the next deployment lifecycle
--   event. For example, if <tt>ApplicationStop</tt> fails, the deployment
--   continues with DownloadBundle. If <tt>BeforeBlockTraffic</tt> fails,
--   the deployment continues with <tt>BlockTraffic</tt>. If
--   <tt>AfterBlockTraffic</tt> fails, the deployment continues with
--   <tt>ApplicationStop</tt>.
--   
--   If false or not specified, then if a lifecycle event fails during a
--   deployment to an instance, that deployment fails. If deployment to
--   that instance is part of an overall deployment and the number of
--   healthy hosts is not less than the minimum number of healthy hosts,
--   then a deployment to the next instance is attempted.
--   
--   During a deployment, the AWS CodeDeploy agent runs the scripts
--   specified for <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>,
--   and <tt>AfterBlockTraffic</tt> in the AppSpec file from the previous
--   successful deployment. (All other scripts are run from the AppSpec
--   file in the current deployment.) If one of these scripts contains an
--   error and does not run successfully, the deployment can fail.
--   
--   If the cause of the failure is a script from the last successful
--   deployment that will never run successfully, create a new deployment
--   and use <tt>ignoreApplicationStopFailures</tt> to specify that the
--   <tt>ApplicationStop</tt>, <tt>BeforeBlockTraffic</tt>, and
--   <tt>AfterBlockTraffic</tt> failures should be ignored.
--   
--   <a>$sel:targetInstances:DeploymentInfo'</a>,
--   <a>deploymentInfo_targetInstances</a> - Information about the
--   instances that belong to the replacement environment in a blue/green
--   deployment.
--   
--   <a>$sel:startTime:DeploymentInfo'</a>, <a>deploymentInfo_startTime</a>
--   - A timestamp that indicates when the deployment was deployed to the
--   deployment group.
--   
--   In some cases, the reported value of the start time might be later
--   than the complete time. This is due to differences in the clock
--   settings of backend servers that participate in the deployment
--   process.
--   
--   <a>$sel:instanceTerminationWaitTimeStarted:DeploymentInfo'</a>,
--   <a>deploymentInfo_instanceTerminationWaitTimeStarted</a> - Indicates
--   whether the wait period set for the termination of instances in the
--   original environment has started. Status is 'false' if the KEEP_ALIVE
--   option is specified. Otherwise, 'true' as soon as the termination wait
--   period starts.
--   
--   <a>$sel:previousRevision:DeploymentInfo'</a>,
--   <a>deploymentInfo_previousRevision</a> - Information about the
--   application revision that was deployed to the deployment group before
--   the most recent successful deployment.
--   
--   <a>$sel:creator:DeploymentInfo'</a>, <a>deploymentInfo_creator</a> -
--   The means by which the deployment was created:
--   
--   <ul>
--   <li><tt>user</tt>: A user created the deployment.</li>
--   <li><tt>autoscaling</tt>: Amazon EC2 Auto Scaling created the
--   deployment.</li>
--   <li><tt>codeDeployRollback</tt>: A rollback process created the
--   deployment.</li>
--   <li><tt>CodeDeployAutoUpdate</tt>: An auto-update process created the
--   deployment when it detected outdated EC2 instances.</li>
--   </ul>
--   
--   <a>$sel:blueGreenDeploymentConfiguration:DeploymentInfo'</a>,
--   <a>deploymentInfo_blueGreenDeploymentConfiguration</a> - Information
--   about blue/green deployment options for this deployment.
--   
--   <a>$sel:errorInformation:DeploymentInfo'</a>,
--   <a>deploymentInfo_errorInformation</a> - Information about any error
--   associated with this deployment.
--   
--   <a>$sel:loadBalancerInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_loadBalancerInfo</a> - Information about the load
--   balancer used in the deployment.
--   
--   <a>$sel:completeTime:DeploymentInfo'</a>,
--   <a>deploymentInfo_completeTime</a> - A timestamp that indicates when
--   the deployment was complete.
--   
--   <a>$sel:createTime:DeploymentInfo'</a>,
--   <a>deploymentInfo_createTime</a> - A timestamp that indicates when the
--   deployment was created.
--   
--   <a>$sel:deploymentStyle:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentStyle</a> - Information about the type of
--   deployment, either in-place or blue/green, you want to run and whether
--   to route deployment traffic behind a load balancer.
--   
--   <a>$sel:description:DeploymentInfo'</a>,
--   <a>deploymentInfo_description</a> - A comment about the deployment.
--   
--   <a>$sel:revision:DeploymentInfo'</a>, <a>deploymentInfo_revision</a> -
--   Information about the location of stored application artifacts and the
--   service from which to retrieve them.
--   
--   <a>$sel:rollbackInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_rollbackInfo</a> - Information about a deployment
--   rollback.
--   
--   <a>$sel:externalId:DeploymentInfo'</a>,
--   <a>deploymentInfo_externalId</a> - The unique ID for an external
--   resource (for example, a CloudFormation stack ID) that is linked to
--   this deployment.
--   
--   <a>$sel:deploymentStatusMessages:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentStatusMessages</a> - Messages that contain
--   information about the status of a deployment.
--   
--   <a>$sel:relatedDeployments:DeploymentInfo'</a>,
--   <a>deploymentInfo_relatedDeployments</a> - Undocumented member.
--   
--   <a>$sel:applicationName:DeploymentInfo'</a>,
--   <a>deploymentInfo_applicationName</a> - The application name.
--   
--   <a>$sel:fileExistsBehavior:DeploymentInfo'</a>,
--   <a>deploymentInfo_fileExistsBehavior</a> - Information about how AWS
--   CodeDeploy handles files that already exist in a deployment target
--   location but weren't part of the previous successful deployment.
--   
--   <ul>
--   <li><tt>DISALLOW</tt>: The deployment fails. This is also the default
--   behavior if no option is specified.</li>
--   <li><tt>OVERWRITE</tt>: The version of the file from the application
--   revision currently being deployed replaces the version already on the
--   instance.</li>
--   <li><tt>RETAIN</tt>: The version of the file already on the instance
--   is kept and used as part of the new deployment.</li>
--   </ul>
--   
--   <a>$sel:computePlatform:DeploymentInfo'</a>,
--   <a>deploymentInfo_computePlatform</a> - The destination platform type
--   for the deployment (<tt>Lambda</tt>, <tt>Server</tt>, or
--   <tt>ECS</tt>).
--   
--   <a>$sel:additionalDeploymentStatusInfo:DeploymentInfo'</a>,
--   <a>deploymentInfo_additionalDeploymentStatusInfo</a> - Provides
--   information about the results of a deployment, such as whether
--   instances in the original environment in a blue/green deployment were
--   not terminated.
--   
--   <a>$sel:deploymentOverview:DeploymentInfo'</a>,
--   <a>deploymentInfo_deploymentOverview</a> - A summary of the deployment
--   status of the instances in the deployment.
newDeploymentInfo :: DeploymentInfo

-- | Information about the deployment status of the instances in the
--   deployment.
--   
--   <i>See:</i> <a>newDeploymentOverview</a> smart constructor.
data DeploymentOverview
DeploymentOverview' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> DeploymentOverview

-- | Create a value of <a>DeploymentOverview</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:succeeded:DeploymentOverview'</a>,
--   <a>deploymentOverview_succeeded</a> - The number of instances in the
--   deployment to which revisions have been successfully deployed.
--   
--   <a>$sel:ready:DeploymentOverview'</a>, <a>deploymentOverview_ready</a>
--   - The number of instances in a replacement environment ready to
--   receive traffic in a blue/green deployment.
--   
--   <a>$sel:pending:DeploymentOverview'</a>,
--   <a>deploymentOverview_pending</a> - The number of instances in the
--   deployment in a pending state.
--   
--   <a>$sel:failed:DeploymentOverview'</a>,
--   <a>deploymentOverview_failed</a> - The number of instances in the
--   deployment in a failed state.
--   
--   <a>$sel:skipped:DeploymentOverview'</a>,
--   <a>deploymentOverview_skipped</a> - The number of instances in the
--   deployment in a skipped state.
--   
--   <a>$sel:inProgress:DeploymentOverview'</a>,
--   <a>deploymentOverview_inProgress</a> - The number of instances in
--   which the deployment is in progress.
newDeploymentOverview :: DeploymentOverview

-- | Information about how traffic is rerouted to instances in a
--   replacement environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newDeploymentReadyOption</a> smart constructor.
data DeploymentReadyOption
DeploymentReadyOption' :: Maybe Int -> Maybe DeploymentReadyAction -> DeploymentReadyOption

-- | Create a value of <a>DeploymentReadyOption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:waitTimeInMinutes:DeploymentReadyOption'</a>,
--   <a>deploymentReadyOption_waitTimeInMinutes</a> - The number of minutes
--   to wait before the status of a blue/green deployment is changed to
--   Stopped if rerouting is not started manually. Applies only to the
--   <tt>STOP_DEPLOYMENT</tt> option for <tt>actionOnTimeout</tt>.
--   
--   <a>$sel:actionOnTimeout:DeploymentReadyOption'</a>,
--   <a>deploymentReadyOption_actionOnTimeout</a> - Information about when
--   to reroute traffic from an original environment to a replacement
--   environment in a blue/green deployment.
--   
--   <ul>
--   <li>CONTINUE_DEPLOYMENT: Register new instances with the load balancer
--   immediately after the new application revision is installed on the
--   instances in the replacement environment.</li>
--   <li>STOP_DEPLOYMENT: Do not register new instances with a load
--   balancer unless traffic rerouting is started using ContinueDeployment.
--   If traffic rerouting is not started before the end of the specified
--   wait period, the deployment status is changed to Stopped.</li>
--   </ul>
newDeploymentReadyOption :: DeploymentReadyOption

-- | Information about the type of deployment, either in-place or
--   blue/green, you want to run and whether to route deployment traffic
--   behind a load balancer.
--   
--   <i>See:</i> <a>newDeploymentStyle</a> smart constructor.
data DeploymentStyle
DeploymentStyle' :: Maybe DeploymentType -> Maybe DeploymentOption -> DeploymentStyle

-- | Create a value of <a>DeploymentStyle</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentType:DeploymentStyle'</a>,
--   <a>deploymentStyle_deploymentType</a> - Indicates whether to run an
--   in-place deployment or a blue/green deployment.
--   
--   <a>$sel:deploymentOption:DeploymentStyle'</a>,
--   <a>deploymentStyle_deploymentOption</a> - Indicates whether to route
--   deployment traffic behind a load balancer.
newDeploymentStyle :: DeploymentStyle

-- | Information about the deployment target.
--   
--   <i>See:</i> <a>newDeploymentTarget</a> smart constructor.
data DeploymentTarget
DeploymentTarget' :: Maybe ECSTarget -> Maybe LambdaTarget -> Maybe CloudFormationTarget -> Maybe InstanceTarget -> Maybe DeploymentTargetType -> DeploymentTarget

-- | Create a value of <a>DeploymentTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ecsTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_ecsTarget</a> - Information about the target for a
--   deployment that uses the Amazon ECS compute platform.
--   
--   <a>$sel:lambdaTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_lambdaTarget</a> - Information about the target
--   for a deployment that uses the AWS Lambda compute platform.
--   
--   <a>$sel:cloudFormationTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_cloudFormationTarget</a> - Undocumented member.
--   
--   <a>$sel:instanceTarget:DeploymentTarget'</a>,
--   <a>deploymentTarget_instanceTarget</a> - Information about the target
--   for a deployment that uses the EC2/On-premises compute platform.
--   
--   <a>$sel:deploymentTargetType:DeploymentTarget'</a>,
--   <a>deploymentTarget_deploymentTargetType</a> - The deployment type
--   that is specific to the deployment's compute platform or deployments
--   initiated by a CloudFormation stack update.
newDeploymentTarget :: DeploymentTarget

-- | Diagnostic information about executable scripts that are part of a
--   deployment.
--   
--   <i>See:</i> <a>newDiagnostics</a> smart constructor.
data Diagnostics
Diagnostics' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe LifecycleErrorCode -> Diagnostics

-- | Create a value of <a>Diagnostics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logTail:Diagnostics'</a>, <a>diagnostics_logTail</a> - The
--   last portion of the diagnostic log.
--   
--   If available, AWS CodeDeploy returns up to the last 4 KB of the
--   diagnostic log.
--   
--   <a>$sel:message:Diagnostics'</a>, <a>diagnostics_message</a> - The
--   message associated with the error.
--   
--   <a>$sel:scriptName:Diagnostics'</a>, <a>diagnostics_scriptName</a> -
--   The name of the script.
--   
--   <a>$sel:errorCode:Diagnostics'</a>, <a>diagnostics_errorCode</a> - The
--   associated error code:
--   
--   <ul>
--   <li>Success: The specified script ran.</li>
--   <li>ScriptMissing: The specified script was not found in the specified
--   location.</li>
--   <li>ScriptNotExecutable: The specified script is not a recognized
--   executable file type.</li>
--   <li>ScriptTimedOut: The specified script did not finish running in the
--   specified time period.</li>
--   <li>ScriptFailed: The specified script failed to run as expected.</li>
--   <li>UnknownError: The specified script did not run for an unknown
--   reason.</li>
--   </ul>
newDiagnostics :: Diagnostics

-- | Information about an EC2 tag filter.
--   
--   <i>See:</i> <a>newEC2TagFilter</a> smart constructor.
data EC2TagFilter
EC2TagFilter' :: Maybe Text -> Maybe Text -> Maybe EC2TagFilterType -> EC2TagFilter

-- | Create a value of <a>EC2TagFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:EC2TagFilter'</a>, <a>eC2TagFilter_key</a> - The tag
--   filter key.
--   
--   <a>$sel:value:EC2TagFilter'</a>, <a>eC2TagFilter_value</a> - The tag
--   filter value.
--   
--   <a>$sel:type':EC2TagFilter'</a>, <a>eC2TagFilter_type</a> - The tag
--   filter type:
--   
--   <ul>
--   <li><tt>KEY_ONLY</tt>: Key only.</li>
--   <li><tt>VALUE_ONLY</tt>: Value only.</li>
--   <li><tt>KEY_AND_VALUE</tt>: Key and value.</li>
--   </ul>
newEC2TagFilter :: EC2TagFilter

-- | Information about groups of EC2 instance tags.
--   
--   <i>See:</i> <a>newEC2TagSet</a> smart constructor.
data EC2TagSet
EC2TagSet' :: Maybe [[EC2TagFilter]] -> EC2TagSet

-- | Create a value of <a>EC2TagSet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ec2TagSetList:EC2TagSet'</a>, <a>eC2TagSet_ec2TagSetList</a> -
--   A list that contains other lists of EC2 instance tag groups. For an
--   instance to be included in the deployment group, it must be identified
--   by all of the tag groups in the list.
newEC2TagSet :: EC2TagSet

-- | Contains the service and cluster names used to identify an Amazon ECS
--   deployment's target.
--   
--   <i>See:</i> <a>newECSService</a> smart constructor.
data ECSService
ECSService' :: Maybe Text -> Maybe Text -> ECSService

-- | Create a value of <a>ECSService</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceName:ECSService'</a>, <a>eCSService_serviceName</a> -
--   The name of the target Amazon ECS service.
--   
--   <a>$sel:clusterName:ECSService'</a>, <a>eCSService_clusterName</a> -
--   The name of the cluster that the Amazon ECS service is associated
--   with.
newECSService :: ECSService

-- | Information about the target of an Amazon ECS deployment.
--   
--   <i>See:</i> <a>newECSTarget</a> smart constructor.
data ECSTarget
ECSTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe [ECSTaskSet] -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> ECSTarget

-- | Create a value of <a>ECSTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:ECSTarget'</a>, <a>eCSTarget_targetId</a> - The
--   unique ID of a deployment target that has a type of
--   <tt>ecsTarget</tt>.
--   
--   <a>$sel:deploymentId:ECSTarget'</a>, <a>eCSTarget_deploymentId</a> -
--   The unique ID of a deployment.
--   
--   <a>$sel:status:ECSTarget'</a>, <a>eCSTarget_status</a> - The status an
--   Amazon ECS deployment's target ECS application.
--   
--   <a>$sel:taskSetsInfo:ECSTarget'</a>, <a>eCSTarget_taskSetsInfo</a> -
--   The <tt>ECSTaskSet</tt> objects associated with the ECS target.
--   
--   <a>$sel:targetArn:ECSTarget'</a>, <a>eCSTarget_targetArn</a> - The
--   Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:ECSTarget'</a>,
--   <a>eCSTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target Amazon ECS application.
--   
--   <a>$sel:lastUpdatedAt:ECSTarget'</a>, <a>eCSTarget_lastUpdatedAt</a> -
--   The date and time when the target Amazon ECS application was updated
--   by a deployment.
newECSTarget :: ECSTarget

-- | Information about a set of Amazon ECS tasks in an AWS CodeDeploy
--   deployment. An Amazon ECS task set includes details such as the
--   desired number of tasks, how many tasks are running, and whether the
--   task set serves production traffic. An AWS CodeDeploy application that
--   uses the Amazon ECS compute platform deploys a containerized
--   application in an Amazon ECS service as a task set.
--   
--   <i>See:</i> <a>newECSTaskSet</a> smart constructor.
data ECSTaskSet
ECSTaskSet' :: Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe TargetLabel -> Maybe TargetGroupInfo -> Maybe Double -> Maybe Text -> ECSTaskSet

-- | Create a value of <a>ECSTaskSet</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:runningCount:ECSTaskSet'</a>, <a>eCSTaskSet_runningCount</a> -
--   The number of tasks in the task set that are in the <tt>RUNNING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>RUNNING</tt>
--   state is running and ready for use.
--   
--   <a>$sel:status:ECSTaskSet'</a>, <a>eCSTaskSet_status</a> - The status
--   of the task set. There are three valid task set statuses:
--   
--   <ul>
--   <li><tt>PRIMARY</tt>: Indicates the task set is serving production
--   traffic.</li>
--   <li><tt>ACTIVE</tt>: Indicates the task set is not serving production
--   traffic.</li>
--   <li><tt>DRAINING</tt>: Indicates the tasks in the task set are being
--   stopped and their corresponding targets are being deregistered from
--   their target group.</li>
--   </ul>
--   
--   <a>$sel:desiredCount:ECSTaskSet'</a>, <a>eCSTaskSet_desiredCount</a> -
--   The number of tasks in a task set. During a deployment that uses the
--   Amazon ECS compute type, CodeDeploy instructs Amazon ECS to create a
--   new task set and uses this value to determine how many tasks to
--   create. After the updated task set is created, CodeDeploy shifts
--   traffic to the new task set.
--   
--   <a>$sel:pendingCount:ECSTaskSet'</a>, <a>eCSTaskSet_pendingCount</a> -
--   The number of tasks in the task set that are in the <tt>PENDING</tt>
--   status during an Amazon ECS deployment. A task in the <tt>PENDING</tt>
--   state is preparing to enter the <tt>RUNNING</tt> state. A task set
--   enters the <tt>PENDING</tt> status when it launches for the first
--   time, or when it is restarted after being in the <tt>STOPPED</tt>
--   state.
--   
--   <a>$sel:taskSetLabel:ECSTaskSet'</a>, <a>eCSTaskSet_taskSetLabel</a> -
--   A label that identifies whether the ECS task set is an original target
--   (<tt>BLUE</tt>) or a replacement target (<tt>GREEN</tt>).
--   
--   <a>$sel:targetGroup:ECSTaskSet'</a>, <a>eCSTaskSet_targetGroup</a> -
--   The target group associated with the task set. The target group is
--   used by AWS CodeDeploy to manage traffic to a task set.
--   
--   <a>$sel:trafficWeight:ECSTaskSet'</a>, <a>eCSTaskSet_trafficWeight</a>
--   - The percentage of traffic served by this task set.
--   
--   <a>$sel:identifer:ECSTaskSet'</a>, <a>eCSTaskSet_identifer</a> - A
--   unique ID of an <tt>ECSTaskSet</tt>.
newECSTaskSet :: ECSTaskSet

-- | Information about a load balancer in Elastic Load Balancing to use in
--   a deployment. Instances are registered directly with a load balancer,
--   and traffic is routed to the load balancer.
--   
--   <i>See:</i> <a>newELBInfo</a> smart constructor.
data ELBInfo
ELBInfo' :: Maybe Text -> ELBInfo

-- | Create a value of <a>ELBInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ELBInfo'</a>, <a>eLBInfo_name</a> - For blue/green
--   deployments, the name of the load balancer that is used to route
--   traffic from original instances to replacement instances in a
--   blue/green deployment. For in-place deployments, the name of the load
--   balancer that instances are deregistered from so they are not serving
--   traffic during a deployment, and then re-registered with after the
--   deployment is complete.
newELBInfo :: ELBInfo

-- | Information about a deployment error.
--   
--   <i>See:</i> <a>newErrorInformation</a> smart constructor.
data ErrorInformation
ErrorInformation' :: Maybe Text -> Maybe DeployErrorCode -> ErrorInformation

-- | Create a value of <a>ErrorInformation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:ErrorInformation'</a>, <a>errorInformation_message</a>
--   - An accompanying error message.
--   
--   <a>$sel:code:ErrorInformation'</a>, <a>errorInformation_code</a> - For
--   more information, see <a>Error Codes for AWS CodeDeploy</a> in the
--   <a>AWS CodeDeploy User Guide</a>.
--   
--   The error code:
--   
--   <ul>
--   <li>APPLICATION_MISSING: The application was missing. This error code
--   is most likely raised if the application is deleted after the
--   deployment is created, but before it is started.</li>
--   <li>DEPLOYMENT_GROUP_MISSING: The deployment group was missing. This
--   error code is most likely raised if the deployment group is deleted
--   after the deployment is created, but before it is started.</li>
--   <li>HEALTH_CONSTRAINTS: The deployment failed on too many instances to
--   be successfully deployed within the instance health constraints
--   specified.</li>
--   <li>HEALTH_CONSTRAINTS_INVALID: The revision cannot be successfully
--   deployed within the instance health constraints specified.</li>
--   <li>IAM_ROLE_MISSING: The service role cannot be accessed.</li>
--   <li>IAM_ROLE_PERMISSIONS: The service role does not have the correct
--   permissions.</li>
--   <li>INTERNAL_ERROR: There was an internal error.</li>
--   <li>NO_EC2_SUBSCRIPTION: The calling account is not subscribed to
--   Amazon EC2.</li>
--   <li>NO_INSTANCES: No instances were specified, or no instances can be
--   found.</li>
--   <li>OVER_MAX_INSTANCES: The maximum number of instances was
--   exceeded.</li>
--   <li>THROTTLED: The operation was throttled because the calling account
--   exceeded the throttling limits of one or more AWS services.</li>
--   <li>TIMEOUT: The deployment has timed out.</li>
--   <li>REVISION_MISSING: The revision ID was missing. This error code is
--   most likely raised if the revision is deleted after the deployment is
--   created, but before it is started.</li>
--   </ul>
newErrorInformation :: ErrorInformation

-- | Information about an application revision.
--   
--   <i>See:</i> <a>newGenericRevisionInfo</a> smart constructor.
data GenericRevisionInfo
GenericRevisionInfo' :: Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> GenericRevisionInfo

-- | Create a value of <a>GenericRevisionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registerTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_registerTime</a> - When the revision was
--   registered with AWS CodeDeploy.
--   
--   <a>$sel:deploymentGroups:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_deploymentGroups</a> - The deployment groups
--   for which this is the current target revision.
--   
--   <a>$sel:description:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_description</a> - A comment about the revision.
--   
--   <a>$sel:firstUsedTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_firstUsedTime</a> - When the revision was first
--   used by AWS CodeDeploy.
--   
--   <a>$sel:lastUsedTime:GenericRevisionInfo'</a>,
--   <a>genericRevisionInfo_lastUsedTime</a> - When the revision was last
--   used by AWS CodeDeploy.
newGenericRevisionInfo :: GenericRevisionInfo

-- | Information about the location of application artifacts stored in
--   GitHub.
--   
--   <i>See:</i> <a>newGitHubLocation</a> smart constructor.
data GitHubLocation
GitHubLocation' :: Maybe Text -> Maybe Text -> GitHubLocation

-- | Create a value of <a>GitHubLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:GitHubLocation'</a>, <a>gitHubLocation_commitId</a> -
--   The SHA1 commit ID of the GitHub commit that represents the bundled
--   artifacts for the application revision.
--   
--   <a>$sel:repository:GitHubLocation'</a>,
--   <a>gitHubLocation_repository</a> - The GitHub account and repository
--   pair that stores a reference to the commit that represents the bundled
--   artifacts for the application revision.
--   
--   Specified as account/repository.
newGitHubLocation :: GitHubLocation

-- | Information about the instances that belong to the replacement
--   environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newGreenFleetProvisioningOption</a> smart constructor.
data GreenFleetProvisioningOption
GreenFleetProvisioningOption' :: Maybe GreenFleetProvisioningAction -> GreenFleetProvisioningOption

-- | Create a value of <a>GreenFleetProvisioningOption</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:GreenFleetProvisioningOption'</a>,
--   <a>greenFleetProvisioningOption_action</a> - The method used to add
--   instances to a replacement environment.
--   
--   <ul>
--   <li><tt>DISCOVER_EXISTING</tt>: Use instances that already exist or
--   will be created manually.</li>
--   <li><tt>COPY_AUTO_SCALING_GROUP</tt>: Use settings from a specified
--   Auto Scaling group to define and create instances in a new Auto
--   Scaling group.</li>
--   </ul>
newGreenFleetProvisioningOption :: GreenFleetProvisioningOption

-- | Information about an on-premises instance.
--   
--   <i>See:</i> <a>newInstanceInfo</a> smart constructor.
data InstanceInfo
InstanceInfo' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe POSIX -> InstanceInfo

-- | Create a value of <a>InstanceInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:registerTime:InstanceInfo'</a>,
--   <a>instanceInfo_registerTime</a> - The time at which the on-premises
--   instance was registered.
--   
--   <a>$sel:iamUserArn:InstanceInfo'</a>, <a>instanceInfo_iamUserArn</a> -
--   The IAM user ARN associated with the on-premises instance.
--   
--   <a>$sel:instanceName:InstanceInfo'</a>,
--   <a>instanceInfo_instanceName</a> - The name of the on-premises
--   instance.
--   
--   <a>$sel:instanceArn:InstanceInfo'</a>, <a>instanceInfo_instanceArn</a>
--   - The ARN of the on-premises instance.
--   
--   <a>$sel:tags:InstanceInfo'</a>, <a>instanceInfo_tags</a> - The tags
--   currently associated with the on-premises instance.
--   
--   <a>$sel:iamSessionArn:InstanceInfo'</a>,
--   <a>instanceInfo_iamSessionArn</a> - The ARN of the IAM session
--   associated with the on-premises instance.
--   
--   <a>$sel:deregisterTime:InstanceInfo'</a>,
--   <a>instanceInfo_deregisterTime</a> - If the on-premises instance was
--   deregistered, the time at which the on-premises instance was
--   deregistered.
newInstanceInfo :: InstanceInfo

-- | A target Amazon EC2 or on-premises instance during a deployment that
--   uses the EC2/On-premises compute platform.
--   
--   <i>See:</i> <a>newInstanceTarget</a> smart constructor.
data InstanceTarget
InstanceTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe TargetLabel -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe POSIX -> InstanceTarget

-- | Create a value of <a>InstanceTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:InstanceTarget'</a>, <a>instanceTarget_targetId</a> -
--   The unique ID of a deployment target that has a type of
--   <tt>instanceTarget</tt>.
--   
--   <a>$sel:deploymentId:InstanceTarget'</a>,
--   <a>instanceTarget_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:InstanceTarget'</a>, <a>instanceTarget_status</a> - The
--   status an EC2/On-premises deployment's target instance.
--   
--   <a>$sel:instanceLabel:InstanceTarget'</a>,
--   <a>instanceTarget_instanceLabel</a> - A label that identifies whether
--   the instance is an original target (<tt>BLUE</tt>) or a replacement
--   target (<tt>GREEN</tt>).
--   
--   <a>$sel:targetArn:InstanceTarget'</a>, <a>instanceTarget_targetArn</a>
--   - The Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:InstanceTarget'</a>,
--   <a>instanceTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target instance.
--   
--   <a>$sel:lastUpdatedAt:InstanceTarget'</a>,
--   <a>instanceTarget_lastUpdatedAt</a> - The date and time when the
--   target instance was updated by a deployment.
newInstanceTarget :: InstanceTarget

-- | Information about a Lambda function specified in a deployment.
--   
--   <i>See:</i> <a>newLambdaFunctionInfo</a> smart constructor.
data LambdaFunctionInfo
LambdaFunctionInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Double -> Maybe Text -> LambdaFunctionInfo

-- | Create a value of <a>LambdaFunctionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:functionAlias:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_functionAlias</a> - The alias of a Lambda
--   function. For more information, see <a>AWS Lambda Function Aliases</a>
--   in the <i>AWS Lambda Developer Guide</i>.
--   
--   <a>$sel:currentVersion:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_currentVersion</a> - The version of a Lambda
--   function that production traffic points to.
--   
--   <a>$sel:targetVersion:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_targetVersion</a> - The version of a Lambda
--   function that production traffic points to after the Lambda function
--   is deployed.
--   
--   <a>$sel:targetVersionWeight:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_targetVersionWeight</a> - The percentage of
--   production traffic that the target version of a Lambda function
--   receives.
--   
--   <a>$sel:functionName:LambdaFunctionInfo'</a>,
--   <a>lambdaFunctionInfo_functionName</a> - The name of a Lambda
--   function.
newLambdaFunctionInfo :: LambdaFunctionInfo

-- | Information about the target AWS Lambda function during an AWS Lambda
--   deployment.
--   
--   <i>See:</i> <a>newLambdaTarget</a> smart constructor.
data LambdaTarget
LambdaTarget' :: Maybe Text -> Maybe Text -> Maybe TargetStatus -> Maybe Text -> Maybe [LifecycleEvent] -> Maybe LambdaFunctionInfo -> Maybe POSIX -> LambdaTarget

-- | Create a value of <a>LambdaTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetId:LambdaTarget'</a>, <a>lambdaTarget_targetId</a> - The
--   unique ID of a deployment target that has a type of
--   <tt>lambdaTarget</tt>.
--   
--   <a>$sel:deploymentId:LambdaTarget'</a>,
--   <a>lambdaTarget_deploymentId</a> - The unique ID of a deployment.
--   
--   <a>$sel:status:LambdaTarget'</a>, <a>lambdaTarget_status</a> - The
--   status an AWS Lambda deployment's target Lambda function.
--   
--   <a>$sel:targetArn:LambdaTarget'</a>, <a>lambdaTarget_targetArn</a> -
--   The Amazon Resource Name (ARN) of the target.
--   
--   <a>$sel:lifecycleEvents:LambdaTarget'</a>,
--   <a>lambdaTarget_lifecycleEvents</a> - The lifecycle events of the
--   deployment to this target Lambda function.
--   
--   <a>$sel:lambdaFunctionInfo:LambdaTarget'</a>,
--   <a>lambdaTarget_lambdaFunctionInfo</a> - A <tt>LambdaFunctionInfo</tt>
--   object that describes a target Lambda function.
--   
--   <a>$sel:lastUpdatedAt:LambdaTarget'</a>,
--   <a>lambdaTarget_lastUpdatedAt</a> - The date and time when the target
--   Lambda function was updated by a deployment.
newLambdaTarget :: LambdaTarget

-- | Information about the most recent attempted or successful deployment
--   to a deployment group.
--   
--   <i>See:</i> <a>newLastDeploymentInfo</a> smart constructor.
data LastDeploymentInfo
LastDeploymentInfo' :: Maybe Text -> Maybe DeploymentStatus -> Maybe POSIX -> Maybe POSIX -> LastDeploymentInfo

-- | Create a value of <a>LastDeploymentInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_deploymentId</a> - The unique ID of a
--   deployment.
--   
--   <a>$sel:status:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_status</a> - The status of the most recent
--   deployment.
--   
--   <a>$sel:endTime:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_endTime</a> - A timestamp that indicates when
--   the most recent deployment to the deployment group was complete.
--   
--   <a>$sel:createTime:LastDeploymentInfo'</a>,
--   <a>lastDeploymentInfo_createTime</a> - A timestamp that indicates when
--   the most recent deployment to the deployment group started.
newLastDeploymentInfo :: LastDeploymentInfo

-- | Information about a deployment lifecycle event.
--   
--   <i>See:</i> <a>newLifecycleEvent</a> smart constructor.
data LifecycleEvent
LifecycleEvent' :: Maybe Diagnostics -> Maybe LifecycleEventStatus -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> LifecycleEvent

-- | Create a value of <a>LifecycleEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:diagnostics:LifecycleEvent'</a>,
--   <a>lifecycleEvent_diagnostics</a> - Diagnostic information about the
--   deployment lifecycle event.
--   
--   <a>$sel:status:LifecycleEvent'</a>, <a>lifecycleEvent_status</a> - The
--   deployment lifecycle event status:
--   
--   <ul>
--   <li>Pending: The deployment lifecycle event is pending.</li>
--   <li>InProgress: The deployment lifecycle event is in progress.</li>
--   <li>Succeeded: The deployment lifecycle event ran successfully.</li>
--   <li>Failed: The deployment lifecycle event has failed.</li>
--   <li>Skipped: The deployment lifecycle event has been skipped.</li>
--   <li>Unknown: The deployment lifecycle event is unknown.</li>
--   </ul>
--   
--   <a>$sel:startTime:LifecycleEvent'</a>, <a>lifecycleEvent_startTime</a>
--   - A timestamp that indicates when the deployment lifecycle event
--   started.
--   
--   <a>$sel:endTime:LifecycleEvent'</a>, <a>lifecycleEvent_endTime</a> - A
--   timestamp that indicates when the deployment lifecycle event ended.
--   
--   <a>$sel:lifecycleEventName:LifecycleEvent'</a>,
--   <a>lifecycleEvent_lifecycleEventName</a> - The deployment lifecycle
--   event name, such as <tt>ApplicationStop</tt>, <tt>BeforeInstall</tt>,
--   <tt>AfterInstall</tt>, <tt>ApplicationStart</tt>, or
--   <tt>ValidateService</tt>.
newLifecycleEvent :: LifecycleEvent

-- | Information about the Elastic Load Balancing load balancer or target
--   group used in a deployment.
--   
--   <i>See:</i> <a>newLoadBalancerInfo</a> smart constructor.
data LoadBalancerInfo
LoadBalancerInfo' :: Maybe [TargetGroupPairInfo] -> Maybe [ELBInfo] -> Maybe [TargetGroupInfo] -> LoadBalancerInfo

-- | Create a value of <a>LoadBalancerInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroupPairInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_targetGroupPairInfoList</a> - The target group
--   pair information. This is an array of <tt>TargeGroupPairInfo</tt>
--   objects with a maximum size of one.
--   
--   <a>$sel:elbInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_elbInfoList</a> - An array that contains
--   information about the load balancer to use for load balancing in a
--   deployment. In Elastic Load Balancing, load balancers are used with
--   Classic Load Balancers.
--   
--   Adding more than one load balancer to the array is not supported.
--   
--   <a>$sel:targetGroupInfoList:LoadBalancerInfo'</a>,
--   <a>loadBalancerInfo_targetGroupInfoList</a> - An array that contains
--   information about the target group to use for load balancing in a
--   deployment. In Elastic Load Balancing, target groups are used with
--   Application Load Balancers.
--   
--   Adding more than one target group to the array is not supported.
newLoadBalancerInfo :: LoadBalancerInfo

-- | Information about minimum healthy instance.
--   
--   <i>See:</i> <a>newMinimumHealthyHosts</a> smart constructor.
data MinimumHealthyHosts
MinimumHealthyHosts' :: Maybe Int -> Maybe MinimumHealthyHostsType -> MinimumHealthyHosts

-- | Create a value of <a>MinimumHealthyHosts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:MinimumHealthyHosts'</a>,
--   <a>minimumHealthyHosts_value</a> - The minimum healthy instance value.
--   
--   <a>$sel:type':MinimumHealthyHosts'</a>,
--   <a>minimumHealthyHosts_type</a> - The minimum healthy instance type:
--   
--   <ul>
--   <li><tt>HOST_COUNT</tt>: The minimum number of healthy instances as an
--   absolute value.</li>
--   <li><tt>FLEET_PERCENT</tt>: The minimum number of healthy instances as
--   a percentage of the total number of instances in the deployment.</li>
--   </ul>
--   
--   In an example of nine instances, if a HOST_COUNT of six is specified,
--   deploy to up to three instances at a time. The deployment is
--   successful if six or more instances are deployed to successfully.
--   Otherwise, the deployment fails. If a FLEET_PERCENT of 40 is
--   specified, deploy to up to five instances at a time. The deployment is
--   successful if four or more instances are deployed to successfully.
--   Otherwise, the deployment fails.
--   
--   In a call to the <tt>GetDeploymentConfig</tt>,
--   CodeDeployDefault.OneAtATime returns a minimum healthy instance type
--   of MOST_CONCURRENCY and a value of 1. This means a deployment to only
--   one instance at a time. (You cannot set the type to MOST_CONCURRENCY,
--   only to HOST_COUNT or FLEET_PERCENT.) In addition, with
--   CodeDeployDefault.OneAtATime, AWS CodeDeploy attempts to ensure that
--   all instances but one are kept in a healthy state during the
--   deployment. Although this allows one instance at a time to be taken
--   offline for a new deployment, it also means that if the deployment to
--   the last instance fails, the overall deployment is still successful.
--   
--   For more information, see <a>AWS CodeDeploy Instance Health</a> in the
--   <i>AWS CodeDeploy User Guide</i>.
newMinimumHealthyHosts :: MinimumHealthyHosts

-- | Information about groups of on-premises instance tags.
--   
--   <i>See:</i> <a>newOnPremisesTagSet</a> smart constructor.
data OnPremisesTagSet
OnPremisesTagSet' :: Maybe [[TagFilter]] -> OnPremisesTagSet

-- | Create a value of <a>OnPremisesTagSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:onPremisesTagSetList:OnPremisesTagSet'</a>,
--   <a>onPremisesTagSet_onPremisesTagSetList</a> - A list that contains
--   other lists of on-premises instance tag groups. For an instance to be
--   included in the deployment group, it must be identified by all of the
--   tag groups in the list.
newOnPremisesTagSet :: OnPremisesTagSet

-- | A revision for an AWS Lambda deployment that is a YAML-formatted or
--   JSON-formatted string. For AWS Lambda deployments, the revision is the
--   same as the AppSpec file.
--   
--   <i>See:</i> <a>newRawString</a> smart constructor.
data RawString
RawString' :: Maybe Text -> Maybe Text -> RawString

-- | Create a value of <a>RawString</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:content:RawString'</a>, <a>rawString_content</a> - The
--   YAML-formatted or JSON-formatted revision string. It includes
--   information about which Lambda function to update and optional Lambda
--   functions that validate deployment lifecycle events.
--   
--   <a>$sel:sha256:RawString'</a>, <a>rawString_sha256</a> - The SHA256
--   hash value of the revision content.
newRawString :: RawString

-- | Information about deployments related to the specified deployment.
--   
--   <i>See:</i> <a>newRelatedDeployments</a> smart constructor.
data RelatedDeployments
RelatedDeployments' :: Maybe Text -> Maybe [Text] -> RelatedDeployments

-- | Create a value of <a>RelatedDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:autoUpdateOutdatedInstancesRootDeploymentId:RelatedDeployments'</a>,
--   <a>relatedDeployments_autoUpdateOutdatedInstancesRootDeploymentId</a>
--   - The deployment ID of the root deployment that triggered this
--   deployment.
--   
--   
--   <a>$sel:autoUpdateOutdatedInstancesDeploymentIds:RelatedDeployments'</a>,
--   <a>relatedDeployments_autoUpdateOutdatedInstancesDeploymentIds</a> -
--   The deployment IDs of 'auto-update outdated instances' deployments
--   triggered by this deployment.
newRelatedDeployments :: RelatedDeployments

-- | Information about an application revision.
--   
--   <i>See:</i> <a>newRevisionInfo</a> smart constructor.
data RevisionInfo
RevisionInfo' :: Maybe GenericRevisionInfo -> Maybe RevisionLocation -> RevisionInfo

-- | Create a value of <a>RevisionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:genericRevisionInfo:RevisionInfo'</a>,
--   <a>revisionInfo_genericRevisionInfo</a> - Information about an
--   application revision, including usage details and associated
--   deployment groups.
--   
--   <a>$sel:revisionLocation:RevisionInfo'</a>,
--   <a>revisionInfo_revisionLocation</a> - Information about the location
--   and type of an application revision.
newRevisionInfo :: RevisionInfo

-- | Information about the location of an application revision.
--   
--   <i>See:</i> <a>newRevisionLocation</a> smart constructor.
data RevisionLocation
RevisionLocation' :: Maybe RevisionLocationType -> Maybe S3Location -> Maybe AppSpecContent -> Maybe GitHubLocation -> Maybe RawString -> RevisionLocation

-- | Create a value of <a>RevisionLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revisionType:RevisionLocation'</a>,
--   <a>revisionLocation_revisionType</a> - The type of application
--   revision:
--   
--   <ul>
--   <li>S3: An application revision stored in Amazon S3.</li>
--   <li>GitHub: An application revision stored in GitHub (EC2/On-premises
--   deployments only).</li>
--   <li>String: A YAML-formatted or JSON-formatted string (AWS Lambda
--   deployments only).</li>
--   <li>AppSpecContent: An <tt>AppSpecContent</tt> object that contains
--   the contents of an AppSpec file for an AWS Lambda or Amazon ECS
--   deployment. The content is formatted as JSON or YAML stored as a
--   RawString.</li>
--   </ul>
--   
--   <a>$sel:s3Location:RevisionLocation'</a>,
--   <a>revisionLocation_s3Location</a> - Information about the location of
--   a revision stored in Amazon S3.
--   
--   <a>$sel:appSpecContent:RevisionLocation'</a>,
--   <a>revisionLocation_appSpecContent</a> - The content of an AppSpec
--   file for an AWS Lambda or Amazon ECS deployment. The content is
--   formatted as JSON or YAML and stored as a RawString.
--   
--   <a>$sel:gitHubLocation:RevisionLocation'</a>,
--   <a>revisionLocation_gitHubLocation</a> - Information about the
--   location of application artifacts stored in GitHub.
--   
--   <a>$sel:string:RevisionLocation'</a>, <a>revisionLocation_string</a> -
--   Information about the location of an AWS Lambda deployment revision
--   stored as a RawString.
newRevisionLocation :: RevisionLocation

-- | Information about a deployment rollback.
--   
--   <i>See:</i> <a>newRollbackInfo</a> smart constructor.
data RollbackInfo
RollbackInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> RollbackInfo

-- | Create a value of <a>RollbackInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rollbackMessage:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackMessage</a> - Information that describes the
--   status of a deployment rollback (for example, whether the deployment
--   can't be rolled back, is in progress, failed, or succeeded).
--   
--   <a>$sel:rollbackTriggeringDeploymentId:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackTriggeringDeploymentId</a> - The deployment ID
--   of the deployment that was underway and triggered a rollback
--   deployment because it failed or was stopped.
--   
--   <a>$sel:rollbackDeploymentId:RollbackInfo'</a>,
--   <a>rollbackInfo_rollbackDeploymentId</a> - The ID of the deployment
--   rollback.
newRollbackInfo :: RollbackInfo

-- | Information about the location of application artifacts stored in
--   Amazon S3.
--   
--   <i>See:</i> <a>newS3Location</a> smart constructor.
data S3Location
S3Location' :: Maybe Text -> Maybe Text -> Maybe BundleType -> Maybe Text -> Maybe Text -> S3Location

-- | Create a value of <a>S3Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:S3Location'</a>, <a>s3Location_key</a> - The name of the
--   Amazon S3 object that represents the bundled artifacts for the
--   application revision.
--   
--   <a>$sel:eTag:S3Location'</a>, <a>s3Location_eTag</a> - The ETag of the
--   Amazon S3 object that represents the bundled artifacts for the
--   application revision.
--   
--   If the ETag is not specified as an input parameter, ETag validation of
--   the object is skipped.
--   
--   <a>$sel:bundleType:S3Location'</a>, <a>s3Location_bundleType</a> - The
--   file type of the application revision. Must be one of the following:
--   
--   <ul>
--   <li><tt>tar</tt>: A tar archive file.</li>
--   <li><tt>tgz</tt>: A compressed tar archive file.</li>
--   <li><tt>zip</tt>: A zip archive file.</li>
--   </ul>
--   
--   <a>$sel:version:S3Location'</a>, <a>s3Location_version</a> - A
--   specific version of the Amazon S3 object that represents the bundled
--   artifacts for the application revision.
--   
--   If the version is not specified, the system uses the most recent
--   version by default.
--   
--   <a>$sel:bucket:S3Location'</a>, <a>s3Location_bucket</a> - The name of
--   the Amazon S3 bucket where the application revision is stored.
newS3Location :: S3Location

-- | Information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Tag

-- | Information about an on-premises instance tag filter.
--   
--   <i>See:</i> <a>newTagFilter</a> smart constructor.
data TagFilter
TagFilter' :: Maybe Text -> Maybe Text -> Maybe TagFilterType -> TagFilter

-- | Create a value of <a>TagFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:TagFilter'</a>, <a>tagFilter_key</a> - The on-premises
--   instance tag filter key.
--   
--   <a>$sel:value:TagFilter'</a>, <a>tagFilter_value</a> - The on-premises
--   instance tag filter value.
--   
--   <a>$sel:type':TagFilter'</a>, <a>tagFilter_type</a> - The on-premises
--   instance tag filter type:
--   
--   <ul>
--   <li>KEY_ONLY: Key only.</li>
--   <li>VALUE_ONLY: Value only.</li>
--   <li>KEY_AND_VALUE: Key and value.</li>
--   </ul>
newTagFilter :: TagFilter

-- | Information about a target group in Elastic Load Balancing to use in a
--   deployment. Instances are registered as targets in a target group, and
--   traffic is routed to the target group.
--   
--   <i>See:</i> <a>newTargetGroupInfo</a> smart constructor.
data TargetGroupInfo
TargetGroupInfo' :: Maybe Text -> TargetGroupInfo

-- | Create a value of <a>TargetGroupInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TargetGroupInfo'</a>, <a>targetGroupInfo_name</a> - For
--   blue/green deployments, the name of the target group that instances in
--   the original environment are deregistered from, and instances in the
--   replacement environment are registered with. For in-place deployments,
--   the name of the target group that instances are deregistered from, so
--   they are not serving traffic during a deployment, and then
--   re-registered with after the deployment is complete.
newTargetGroupInfo :: TargetGroupInfo

-- | Information about two target groups and how traffic is routed during
--   an Amazon ECS deployment. An optional test traffic route can be
--   specified.
--   
--   <i>See:</i> <a>newTargetGroupPairInfo</a> smart constructor.
data TargetGroupPairInfo
TargetGroupPairInfo' :: Maybe [TargetGroupInfo] -> Maybe TrafficRoute -> Maybe TrafficRoute -> TargetGroupPairInfo

-- | Create a value of <a>TargetGroupPairInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetGroups:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_targetGroups</a> - One pair of target groups.
--   One is associated with the original task set. The second is associated
--   with the task set that serves traffic after the deployment is
--   complete.
--   
--   <a>$sel:prodTrafficRoute:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_prodTrafficRoute</a> - The path used by a load
--   balancer to route production traffic when an Amazon ECS deployment is
--   complete.
--   
--   <a>$sel:testTrafficRoute:TargetGroupPairInfo'</a>,
--   <a>targetGroupPairInfo_testTrafficRoute</a> - An optional path used by
--   a load balancer to route test traffic after an Amazon ECS deployment.
--   Validation can occur while test traffic is served during a deployment.
newTargetGroupPairInfo :: TargetGroupPairInfo

-- | Information about the instances to be used in the replacement
--   environment in a blue/green deployment.
--   
--   <i>See:</i> <a>newTargetInstances</a> smart constructor.
data TargetInstances
TargetInstances' :: Maybe [EC2TagFilter] -> Maybe EC2TagSet -> Maybe [Text] -> TargetInstances

-- | Create a value of <a>TargetInstances</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tagFilters:TargetInstances'</a>,
--   <a>targetInstances_tagFilters</a> - The tag filter key, type, and
--   value used to identify Amazon EC2 instances in a replacement
--   environment for a blue/green deployment. Cannot be used in the same
--   call as <tt>ec2TagSet</tt>.
--   
--   <a>$sel:ec2TagSet:TargetInstances'</a>,
--   <a>targetInstances_ec2TagSet</a> - Information about the groups of EC2
--   instance tags that an instance must be identified by in order for it
--   to be included in the replacement environment for a blue/green
--   deployment. Cannot be used in the same call as <tt>tagFilters</tt>.
--   
--   <a>$sel:autoScalingGroups:TargetInstances'</a>,
--   <a>targetInstances_autoScalingGroups</a> - The names of one or more
--   Auto Scaling groups to identify a replacement environment for a
--   blue/green deployment.
newTargetInstances :: TargetInstances

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in two increments. The original
--   and target Lambda function versions or ECS task sets are specified in
--   the deployment's AppSpec file.
--   
--   <i>See:</i> <a>newTimeBasedCanary</a> smart constructor.
data TimeBasedCanary
TimeBasedCanary' :: Maybe Int -> Maybe Int -> TimeBasedCanary

-- | Create a value of <a>TimeBasedCanary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:canaryInterval:TimeBasedCanary'</a>,
--   <a>timeBasedCanary_canaryInterval</a> - The number of minutes between
--   the first and second traffic shifts of a <tt>TimeBasedCanary</tt>
--   deployment.
--   
--   <a>$sel:canaryPercentage:TimeBasedCanary'</a>,
--   <a>timeBasedCanary_canaryPercentage</a> - The percentage of traffic to
--   shift in the first increment of a <tt>TimeBasedCanary</tt> deployment.
newTimeBasedCanary :: TimeBasedCanary

-- | A configuration that shifts traffic from one version of a Lambda
--   function or ECS task set to another in equal increments, with an equal
--   number of minutes between each increment. The original and target
--   Lambda function versions or ECS task sets are specified in the
--   deployment's AppSpec file.
--   
--   <i>See:</i> <a>newTimeBasedLinear</a> smart constructor.
data TimeBasedLinear
TimeBasedLinear' :: Maybe Int -> Maybe Int -> TimeBasedLinear

-- | Create a value of <a>TimeBasedLinear</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linearInterval:TimeBasedLinear'</a>,
--   <a>timeBasedLinear_linearInterval</a> - The number of minutes between
--   each incremental traffic shift of a <tt>TimeBasedLinear</tt>
--   deployment.
--   
--   <a>$sel:linearPercentage:TimeBasedLinear'</a>,
--   <a>timeBasedLinear_linearPercentage</a> - The percentage of traffic
--   that is shifted at the start of each increment of a
--   <tt>TimeBasedLinear</tt> deployment.
newTimeBasedLinear :: TimeBasedLinear

-- | Information about a time range.
--   
--   <i>See:</i> <a>newTimeRange</a> smart constructor.
data TimeRange
TimeRange' :: Maybe POSIX -> Maybe POSIX -> TimeRange

-- | Create a value of <a>TimeRange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:end:TimeRange'</a>, <a>timeRange_end</a> - The end time of the
--   time range.
--   
--   Specify null to leave the end time open-ended.
--   
--   <a>$sel:start:TimeRange'</a>, <a>timeRange_start</a> - The start time
--   of the time range.
--   
--   Specify null to leave the start time open-ended.
newTimeRange :: TimeRange

-- | Information about a listener. The listener contains the path used to
--   route traffic that is received from the load balancer to a target
--   group.
--   
--   <i>See:</i> <a>newTrafficRoute</a> smart constructor.
data TrafficRoute
TrafficRoute' :: Maybe [Text] -> TrafficRoute

-- | Create a value of <a>TrafficRoute</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:listenerArns:TrafficRoute'</a>,
--   <a>trafficRoute_listenerArns</a> - The Amazon Resource Name (ARN) of
--   one listener. The listener identifies the route between a target group
--   and a load balancer. This is an array of strings with a maximum size
--   of one.
newTrafficRoute :: TrafficRoute

-- | The configuration that specifies how traffic is shifted from one
--   version of a Lambda function to another version during an AWS Lambda
--   deployment, or from one Amazon ECS task set to another during an
--   Amazon ECS deployment.
--   
--   <i>See:</i> <a>newTrafficRoutingConfig</a> smart constructor.
data TrafficRoutingConfig
TrafficRoutingConfig' :: Maybe TimeBasedLinear -> Maybe TrafficRoutingType -> Maybe TimeBasedCanary -> TrafficRoutingConfig

-- | Create a value of <a>TrafficRoutingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeBasedLinear:TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_timeBasedLinear</a> - A configuration that
--   shifts traffic from one version of a Lambda function or ECS task set
--   to another in equal increments, with an equal number of minutes
--   between each increment. The original and target Lambda function
--   versions or ECS task sets are specified in the deployment's AppSpec
--   file.
--   
--   <a>$sel:type':TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_type</a> - The type of traffic shifting
--   (<tt>TimeBasedCanary</tt> or <tt>TimeBasedLinear</tt>) used by a
--   deployment configuration.
--   
--   <a>$sel:timeBasedCanary:TrafficRoutingConfig'</a>,
--   <a>trafficRoutingConfig_timeBasedCanary</a> - A configuration that
--   shifts traffic from one version of a Lambda function or ECS task set
--   to another in two increments. The original and target Lambda function
--   versions or ECS task sets are specified in the deployment's AppSpec
--   file.
newTrafficRoutingConfig :: TrafficRoutingConfig

-- | Information about notification triggers for the deployment group.
--   
--   <i>See:</i> <a>newTriggerConfig</a> smart constructor.
data TriggerConfig
TriggerConfig' :: Maybe Text -> Maybe [TriggerEventType] -> Maybe Text -> TriggerConfig

-- | Create a value of <a>TriggerConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:triggerName:TriggerConfig'</a>,
--   <a>triggerConfig_triggerName</a> - The name of the notification
--   trigger.
--   
--   <a>$sel:triggerEvents:TriggerConfig'</a>,
--   <a>triggerConfig_triggerEvents</a> - The event type or types for which
--   notifications are triggered.
--   
--   <a>$sel:triggerTargetArn:TriggerConfig'</a>,
--   <a>triggerConfig_triggerTargetArn</a> - The Amazon Resource Name (ARN)
--   of the Amazon Simple Notification Service topic through which
--   notifications about deployment or instance events are sent.
newTriggerConfig :: TriggerConfig
