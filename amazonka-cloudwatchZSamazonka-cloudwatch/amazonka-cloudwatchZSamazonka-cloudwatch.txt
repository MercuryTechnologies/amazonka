-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-cloudwatchZSamazonka-cloudwatch
@version 1.6.1


module Network.AWS.CloudWatch.Types.AlarmType
newtype AlarmType
AlarmType' :: Text -> AlarmType
[fromAlarmType] :: AlarmType -> Text
pattern AlarmType_CompositeAlarm :: AlarmType
pattern AlarmType_MetricAlarm :: AlarmType
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance GHC.Read.Read Network.AWS.CloudWatch.Types.AlarmType.AlarmType
instance GHC.Show.Show Network.AWS.CloudWatch.Types.AlarmType.AlarmType


module Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue
newtype AnomalyDetectorStateValue
AnomalyDetectorStateValue' :: Text -> AnomalyDetectorStateValue
[fromAnomalyDetectorStateValue] :: AnomalyDetectorStateValue -> Text
pattern AnomalyDetectorStateValue_PENDING_TRAINING :: AnomalyDetectorStateValue
pattern AnomalyDetectorStateValue_TRAINED :: AnomalyDetectorStateValue
pattern AnomalyDetectorStateValue_TRAINED_INSUFFICIENT_DATA :: AnomalyDetectorStateValue
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance GHC.Read.Read Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue
instance GHC.Show.Show Network.AWS.CloudWatch.Types.AnomalyDetectorStateValue.AnomalyDetectorStateValue


module Network.AWS.CloudWatch.Types.ComparisonOperator
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_GreaterThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanUpperThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanLowerOrGreaterThanUpperThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanLowerThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanThreshold :: ComparisonOperator
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance GHC.Read.Read Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator
instance GHC.Show.Show Network.AWS.CloudWatch.Types.ComparisonOperator.ComparisonOperator


module Network.AWS.CloudWatch.Types.DashboardEntry

-- | Represents a specific dashboard.
--   
--   <i>See:</i> <a>newDashboardEntry</a> smart constructor.
data DashboardEntry
DashboardEntry' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Integer -> DashboardEntry

-- | The Amazon Resource Name (ARN) of the dashboard.
[$sel:dashboardArn:DashboardEntry'] :: DashboardEntry -> Maybe Text

-- | The name of the dashboard.
[$sel:dashboardName:DashboardEntry'] :: DashboardEntry -> Maybe Text

-- | The time stamp of when the dashboard was last modified, either by an
--   API call or through the console. This number is expressed as the
--   number of milliseconds since Jan 1, 1970 00:00:00 UTC.
[$sel:lastModified:DashboardEntry'] :: DashboardEntry -> Maybe ISO8601

-- | The size of the dashboard, in bytes.
[$sel:size:DashboardEntry'] :: DashboardEntry -> Maybe Integer

-- | Create a value of <a>DashboardEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardArn:DashboardEntry'</a>,
--   <a>dashboardEntry_dashboardArn</a> - The Amazon Resource Name (ARN) of
--   the dashboard.
--   
--   <a>$sel:dashboardName:DashboardEntry'</a>,
--   <a>dashboardEntry_dashboardName</a> - The name of the dashboard.
--   
--   <a>$sel:lastModified:DashboardEntry'</a>,
--   <a>dashboardEntry_lastModified</a> - The time stamp of when the
--   dashboard was last modified, either by an API call or through the
--   console. This number is expressed as the number of milliseconds since
--   Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:size:DashboardEntry'</a>, <a>dashboardEntry_size</a> - The
--   size of the dashboard, in bytes.
newDashboardEntry :: DashboardEntry

-- | The Amazon Resource Name (ARN) of the dashboard.
dashboardEntry_dashboardArn :: Lens' DashboardEntry (Maybe Text)

-- | The name of the dashboard.
dashboardEntry_dashboardName :: Lens' DashboardEntry (Maybe Text)

-- | The time stamp of when the dashboard was last modified, either by an
--   API call or through the console. This number is expressed as the
--   number of milliseconds since Jan 1, 1970 00:00:00 UTC.
dashboardEntry_lastModified :: Lens' DashboardEntry (Maybe UTCTime)

-- | The size of the dashboard, in bytes.
dashboardEntry_size :: Lens' DashboardEntry (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.DashboardEntry.DashboardEntry
instance GHC.Show.Show Network.AWS.CloudWatch.Types.DashboardEntry.DashboardEntry
instance GHC.Read.Read Network.AWS.CloudWatch.Types.DashboardEntry.DashboardEntry
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.DashboardEntry.DashboardEntry
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.DashboardEntry.DashboardEntry
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.DashboardEntry.DashboardEntry
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.DashboardEntry.DashboardEntry


module Network.AWS.CloudWatch.Types.DashboardValidationMessage

-- | An error or warning for the operation.
--   
--   <i>See:</i> <a>newDashboardValidationMessage</a> smart constructor.
data DashboardValidationMessage
DashboardValidationMessage' :: Maybe Text -> Maybe Text -> DashboardValidationMessage

-- | A message describing the error or warning.
[$sel:message:DashboardValidationMessage'] :: DashboardValidationMessage -> Maybe Text

-- | The data path related to the message.
[$sel:dataPath:DashboardValidationMessage'] :: DashboardValidationMessage -> Maybe Text

-- | Create a value of <a>DashboardValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:DashboardValidationMessage'</a>,
--   <a>dashboardValidationMessage_message</a> - A message describing the
--   error or warning.
--   
--   <a>$sel:dataPath:DashboardValidationMessage'</a>,
--   <a>dashboardValidationMessage_dataPath</a> - The data path related to
--   the message.
newDashboardValidationMessage :: DashboardValidationMessage

-- | A message describing the error or warning.
dashboardValidationMessage_message :: Lens' DashboardValidationMessage (Maybe Text)

-- | The data path related to the message.
dashboardValidationMessage_dataPath :: Lens' DashboardValidationMessage (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.DashboardValidationMessage.DashboardValidationMessage
instance GHC.Show.Show Network.AWS.CloudWatch.Types.DashboardValidationMessage.DashboardValidationMessage
instance GHC.Read.Read Network.AWS.CloudWatch.Types.DashboardValidationMessage.DashboardValidationMessage
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.DashboardValidationMessage.DashboardValidationMessage
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.DashboardValidationMessage.DashboardValidationMessage
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.DashboardValidationMessage.DashboardValidationMessage
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.DashboardValidationMessage.DashboardValidationMessage


module Network.AWS.CloudWatch.Types.Dimension

-- | A dimension is a name/value pair that is part of the identity of a
--   metric. You can assign up to 10 dimensions to a metric. Because
--   dimensions are part of the unique identifier for a metric, whenever
--   you add a unique name/value pair to one of your metrics, you are
--   creating a new variation of that metric.
--   
--   <i>See:</i> <a>newDimension</a> smart constructor.
data Dimension
Dimension' :: Text -> Text -> Dimension

-- | The name of the dimension. Dimension names must contain only ASCII
--   characters and must include at least one non-whitespace character.
[$sel:name:Dimension'] :: Dimension -> Text

-- | The value of the dimension. Dimension values must contain only ASCII
--   characters and must include at least one non-whitespace character.
[$sel:value:Dimension'] :: Dimension -> Text

-- | Create a value of <a>Dimension</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Dimension'</a>, <a>dimension_name</a> - The name of the
--   dimension. Dimension names must contain only ASCII characters and must
--   include at least one non-whitespace character.
--   
--   <a>$sel:value:Dimension'</a>, <a>dimension_value</a> - The value of
--   the dimension. Dimension values must contain only ASCII characters and
--   must include at least one non-whitespace character.
newDimension :: Text -> Text -> Dimension

-- | The name of the dimension. Dimension names must contain only ASCII
--   characters and must include at least one non-whitespace character.
dimension_name :: Lens' Dimension Text

-- | The value of the dimension. Dimension values must contain only ASCII
--   characters and must include at least one non-whitespace character.
dimension_value :: Lens' Dimension Text
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.Dimension.Dimension
instance GHC.Show.Show Network.AWS.CloudWatch.Types.Dimension.Dimension
instance GHC.Read.Read Network.AWS.CloudWatch.Types.Dimension.Dimension
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.Dimension.Dimension
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.Dimension.Dimension
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.Dimension.Dimension
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.Dimension.Dimension
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.Dimension.Dimension


module Network.AWS.CloudWatch.Types.DimensionFilter

-- | Represents filters for a dimension.
--   
--   <i>See:</i> <a>newDimensionFilter</a> smart constructor.
data DimensionFilter
DimensionFilter' :: Maybe Text -> Text -> DimensionFilter

-- | The value of the dimension to be matched.
[$sel:value:DimensionFilter'] :: DimensionFilter -> Maybe Text

-- | The dimension name to be matched.
[$sel:name:DimensionFilter'] :: DimensionFilter -> Text

-- | Create a value of <a>DimensionFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:DimensionFilter'</a>, <a>dimensionFilter_value</a> - The
--   value of the dimension to be matched.
--   
--   <a>$sel:name:DimensionFilter'</a>, <a>dimensionFilter_name</a> - The
--   dimension name to be matched.
newDimensionFilter :: Text -> DimensionFilter

-- | The value of the dimension to be matched.
dimensionFilter_value :: Lens' DimensionFilter (Maybe Text)

-- | The dimension name to be matched.
dimensionFilter_name :: Lens' DimensionFilter Text
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.DimensionFilter.DimensionFilter
instance GHC.Show.Show Network.AWS.CloudWatch.Types.DimensionFilter.DimensionFilter
instance GHC.Read.Read Network.AWS.CloudWatch.Types.DimensionFilter.DimensionFilter
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.DimensionFilter.DimensionFilter
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.DimensionFilter.DimensionFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.DimensionFilter.DimensionFilter
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.DimensionFilter.DimensionFilter


module Network.AWS.CloudWatch.Types.HistoryItemType
newtype HistoryItemType
HistoryItemType' :: Text -> HistoryItemType
[fromHistoryItemType] :: HistoryItemType -> Text
pattern HistoryItemType_Action :: HistoryItemType
pattern HistoryItemType_ConfigurationUpdate :: HistoryItemType
pattern HistoryItemType_StateUpdate :: HistoryItemType
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance GHC.Read.Read Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType
instance GHC.Show.Show Network.AWS.CloudWatch.Types.HistoryItemType.HistoryItemType


module Network.AWS.CloudWatch.Types.AlarmHistoryItem

-- | Represents the history of a specific alarm.
--   
--   <i>See:</i> <a>newAlarmHistoryItem</a> smart constructor.
data AlarmHistoryItem
AlarmHistoryItem' :: Maybe Text -> Maybe HistoryItemType -> Maybe Text -> Maybe ISO8601 -> Maybe AlarmType -> Maybe Text -> AlarmHistoryItem

-- | A summary of the alarm history, in text format.
[$sel:historySummary:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe Text

-- | The type of alarm history item.
[$sel:historyItemType:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe HistoryItemType

-- | The descriptive name for the alarm.
[$sel:alarmName:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe Text

-- | The time stamp for the alarm history item.
[$sel:timestamp:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe ISO8601

-- | The type of alarm, either metric alarm or composite alarm.
[$sel:alarmType:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe AlarmType

-- | Data about the alarm, in JSON format.
[$sel:historyData:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe Text

-- | Create a value of <a>AlarmHistoryItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:historySummary:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historySummary</a> - A summary of the alarm
--   history, in text format.
--   
--   <a>$sel:historyItemType:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historyItemType</a> - The type of alarm history
--   item.
--   
--   <a>$sel:alarmName:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_alarmName</a> - The descriptive name for the
--   alarm.
--   
--   <a>$sel:timestamp:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_timestamp</a> - The time stamp for the alarm
--   history item.
--   
--   <a>$sel:alarmType:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_alarmType</a> - The type of alarm, either metric
--   alarm or composite alarm.
--   
--   <a>$sel:historyData:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historyData</a> - Data about the alarm, in JSON
--   format.
newAlarmHistoryItem :: AlarmHistoryItem

-- | A summary of the alarm history, in text format.
alarmHistoryItem_historySummary :: Lens' AlarmHistoryItem (Maybe Text)

-- | The type of alarm history item.
alarmHistoryItem_historyItemType :: Lens' AlarmHistoryItem (Maybe HistoryItemType)

-- | The descriptive name for the alarm.
alarmHistoryItem_alarmName :: Lens' AlarmHistoryItem (Maybe Text)

-- | The time stamp for the alarm history item.
alarmHistoryItem_timestamp :: Lens' AlarmHistoryItem (Maybe UTCTime)

-- | The type of alarm, either metric alarm or composite alarm.
alarmHistoryItem_alarmType :: Lens' AlarmHistoryItem (Maybe AlarmType)

-- | Data about the alarm, in JSON format.
alarmHistoryItem_historyData :: Lens' AlarmHistoryItem (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.AlarmHistoryItem.AlarmHistoryItem
instance GHC.Show.Show Network.AWS.CloudWatch.Types.AlarmHistoryItem.AlarmHistoryItem
instance GHC.Read.Read Network.AWS.CloudWatch.Types.AlarmHistoryItem.AlarmHistoryItem
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.AlarmHistoryItem.AlarmHistoryItem
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.AlarmHistoryItem.AlarmHistoryItem
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.AlarmHistoryItem.AlarmHistoryItem
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.AlarmHistoryItem.AlarmHistoryItem


module Network.AWS.CloudWatch.Types.InsightRule

-- | This structure contains the definition for a Contributor Insights
--   rule.
--   
--   <i>See:</i> <a>newInsightRule</a> smart constructor.
data InsightRule
InsightRule' :: Text -> Text -> Text -> Text -> InsightRule

-- | The name of the rule.
[$sel:name:InsightRule'] :: InsightRule -> Text

-- | Indicates whether the rule is enabled or disabled.
[$sel:state:InsightRule'] :: InsightRule -> Text

-- | For rules that you create, this is always <tt>{"Name":
--   "CloudWatchLogRule", "Version": 1}</tt>. For built-in rules, this is
--   <tt>{"Name": "ServiceLogRule", "Version": 1}</tt>
[$sel:schema:InsightRule'] :: InsightRule -> Text

-- | The definition of the rule, as a JSON object. The definition contains
--   the keywords used to define contributors, the value to aggregate on if
--   this rule returns a sum instead of a count, and the filters. For
--   details on the valid syntax, see <a>Contributor Insights Rule
--   Syntax</a>.
[$sel:definition:InsightRule'] :: InsightRule -> Text

-- | Create a value of <a>InsightRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InsightRule'</a>, <a>insightRule_name</a> - The name of
--   the rule.
--   
--   <a>$sel:state:InsightRule'</a>, <a>insightRule_state</a> - Indicates
--   whether the rule is enabled or disabled.
--   
--   <a>$sel:schema:InsightRule'</a>, <a>insightRule_schema</a> - For rules
--   that you create, this is always <tt>{"Name": "CloudWatchLogRule",
--   "Version": 1}</tt>. For built-in rules, this is <tt>{"Name":
--   "ServiceLogRule", "Version": 1}</tt>
--   
--   <a>$sel:definition:InsightRule'</a>, <a>insightRule_definition</a> -
--   The definition of the rule, as a JSON object. The definition contains
--   the keywords used to define contributors, the value to aggregate on if
--   this rule returns a sum instead of a count, and the filters. For
--   details on the valid syntax, see <a>Contributor Insights Rule
--   Syntax</a>.
newInsightRule :: Text -> Text -> Text -> Text -> InsightRule

-- | The name of the rule.
insightRule_name :: Lens' InsightRule Text

-- | Indicates whether the rule is enabled or disabled.
insightRule_state :: Lens' InsightRule Text

-- | For rules that you create, this is always <tt>{"Name":
--   "CloudWatchLogRule", "Version": 1}</tt>. For built-in rules, this is
--   <tt>{"Name": "ServiceLogRule", "Version": 1}</tt>
insightRule_schema :: Lens' InsightRule Text

-- | The definition of the rule, as a JSON object. The definition contains
--   the keywords used to define contributors, the value to aggregate on if
--   this rule returns a sum instead of a count, and the filters. For
--   details on the valid syntax, see <a>Contributor Insights Rule
--   Syntax</a>.
insightRule_definition :: Lens' InsightRule Text
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.InsightRule.InsightRule
instance GHC.Show.Show Network.AWS.CloudWatch.Types.InsightRule.InsightRule
instance GHC.Read.Read Network.AWS.CloudWatch.Types.InsightRule.InsightRule
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.InsightRule.InsightRule
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.InsightRule.InsightRule
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.InsightRule.InsightRule
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.InsightRule.InsightRule


module Network.AWS.CloudWatch.Types.InsightRuleContributorDatapoint

-- | One data point related to one contributor.
--   
--   For more information, see <a>GetInsightRuleReport</a> and
--   <a>InsightRuleContributor</a>.
--   
--   <i>See:</i> <a>newInsightRuleContributorDatapoint</a> smart
--   constructor.
data InsightRuleContributorDatapoint
InsightRuleContributorDatapoint' :: ISO8601 -> Double -> InsightRuleContributorDatapoint

-- | The timestamp of the data point.
[$sel:timestamp:InsightRuleContributorDatapoint'] :: InsightRuleContributorDatapoint -> ISO8601

-- | The approximate value that this contributor added during this
--   timestamp.
[$sel:approximateValue:InsightRuleContributorDatapoint'] :: InsightRuleContributorDatapoint -> Double

-- | Create a value of <a>InsightRuleContributorDatapoint</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:InsightRuleContributorDatapoint'</a>,
--   <a>insightRuleContributorDatapoint_timestamp</a> - The timestamp of
--   the data point.
--   
--   <a>$sel:approximateValue:InsightRuleContributorDatapoint'</a>,
--   <a>insightRuleContributorDatapoint_approximateValue</a> - The
--   approximate value that this contributor added during this timestamp.
newInsightRuleContributorDatapoint :: UTCTime -> Double -> InsightRuleContributorDatapoint

-- | The timestamp of the data point.
insightRuleContributorDatapoint_timestamp :: Lens' InsightRuleContributorDatapoint UTCTime

-- | The approximate value that this contributor added during this
--   timestamp.
insightRuleContributorDatapoint_approximateValue :: Lens' InsightRuleContributorDatapoint Double
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.InsightRuleContributorDatapoint.InsightRuleContributorDatapoint
instance GHC.Show.Show Network.AWS.CloudWatch.Types.InsightRuleContributorDatapoint.InsightRuleContributorDatapoint
instance GHC.Read.Read Network.AWS.CloudWatch.Types.InsightRuleContributorDatapoint.InsightRuleContributorDatapoint
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.InsightRuleContributorDatapoint.InsightRuleContributorDatapoint
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.InsightRuleContributorDatapoint.InsightRuleContributorDatapoint
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.InsightRuleContributorDatapoint.InsightRuleContributorDatapoint
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.InsightRuleContributorDatapoint.InsightRuleContributorDatapoint


module Network.AWS.CloudWatch.Types.InsightRuleContributor

-- | One of the unique contributors found by a Contributor Insights rule.
--   If the rule contains multiple keys, then a unique contributor is a
--   unique combination of values from all the keys in the rule.
--   
--   If the rule contains a single key, then each unique contributor is
--   each unique value for this key.
--   
--   For more information, see <a>GetInsightRuleReport</a>.
--   
--   <i>See:</i> <a>newInsightRuleContributor</a> smart constructor.
data InsightRuleContributor
InsightRuleContributor' :: [Text] -> Double -> [InsightRuleContributorDatapoint] -> InsightRuleContributor

-- | One of the log entry field keywords that is used to define
--   contributors for this rule.
[$sel:keys:InsightRuleContributor'] :: InsightRuleContributor -> [Text]

-- | An approximation of the aggregate value that comes from this
--   contributor.
[$sel:approximateAggregateValue:InsightRuleContributor'] :: InsightRuleContributor -> Double

-- | An array of the data points where this contributor is present. Only
--   the data points when this contributor appeared are included in the
--   array.
[$sel:datapoints:InsightRuleContributor'] :: InsightRuleContributor -> [InsightRuleContributorDatapoint]

-- | Create a value of <a>InsightRuleContributor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keys:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_keys</a> - One of the log entry field
--   keywords that is used to define contributors for this rule.
--   
--   <a>$sel:approximateAggregateValue:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_approximateAggregateValue</a> - An
--   approximation of the aggregate value that comes from this contributor.
--   
--   <a>$sel:datapoints:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_datapoints</a> - An array of the data points
--   where this contributor is present. Only the data points when this
--   contributor appeared are included in the array.
newInsightRuleContributor :: Double -> InsightRuleContributor

-- | One of the log entry field keywords that is used to define
--   contributors for this rule.
insightRuleContributor_keys :: Lens' InsightRuleContributor [Text]

-- | An approximation of the aggregate value that comes from this
--   contributor.
insightRuleContributor_approximateAggregateValue :: Lens' InsightRuleContributor Double

-- | An array of the data points where this contributor is present. Only
--   the data points when this contributor appeared are included in the
--   array.
insightRuleContributor_datapoints :: Lens' InsightRuleContributor [InsightRuleContributorDatapoint]
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.InsightRuleContributor.InsightRuleContributor
instance GHC.Show.Show Network.AWS.CloudWatch.Types.InsightRuleContributor.InsightRuleContributor
instance GHC.Read.Read Network.AWS.CloudWatch.Types.InsightRuleContributor.InsightRuleContributor
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.InsightRuleContributor.InsightRuleContributor
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.InsightRuleContributor.InsightRuleContributor
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.InsightRuleContributor.InsightRuleContributor
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.InsightRuleContributor.InsightRuleContributor


module Network.AWS.CloudWatch.Types.InsightRuleMetricDatapoint

-- | One data point from the metric time series returned in a Contributor
--   Insights rule report.
--   
--   For more information, see <a>GetInsightRuleReport</a>.
--   
--   <i>See:</i> <a>newInsightRuleMetricDatapoint</a> smart constructor.
data InsightRuleMetricDatapoint
InsightRuleMetricDatapoint' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> ISO8601 -> InsightRuleMetricDatapoint

-- | The minimum value from a single contributor during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:minimum:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The sum of the values from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:sum:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The number of occurrences that matched the rule during this data
--   point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:sampleCount:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The maximum value provided by one contributor during this timestamp.
--   Each timestamp is evaluated separately, so the identity of the max
--   contributor could be different for each timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:maxContributorValue:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The average value from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:average:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The number of unique contributors who published data during this
--   timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:uniqueContributors:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The maximum value from a single occurence from a single contributor
--   during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:maximum:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The timestamp of the data point.
[$sel:timestamp:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> ISO8601

-- | Create a value of <a>InsightRuleMetricDatapoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_minimum</a> - The minimum value from a
--   single contributor during the time period represented by that data
--   point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:sum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_sum</a> - The sum of the values from all
--   contributors during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:sampleCount:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_sampleCount</a> - The number of
--   occurrences that matched the rule during this data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:maxContributorValue:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_maxContributorValue</a> - The maximum
--   value provided by one contributor during this timestamp. Each
--   timestamp is evaluated separately, so the identity of the max
--   contributor could be different for each timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:average:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_average</a> - The average value from all
--   contributors during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:uniqueContributors:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_uniqueContributors</a> - The number of
--   unique contributors who published data during this timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:maximum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_maximum</a> - The maximum value from a
--   single occurence from a single contributor during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:timestamp:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_timestamp</a> - The timestamp of the
--   data point.
newInsightRuleMetricDatapoint :: UTCTime -> InsightRuleMetricDatapoint

-- | The minimum value from a single contributor during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_minimum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The sum of the values from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_sum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The number of occurrences that matched the rule during this data
--   point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_sampleCount :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The maximum value provided by one contributor during this timestamp.
--   Each timestamp is evaluated separately, so the identity of the max
--   contributor could be different for each timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_maxContributorValue :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The average value from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_average :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The number of unique contributors who published data during this
--   timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_uniqueContributors :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The maximum value from a single occurence from a single contributor
--   during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_maximum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The timestamp of the data point.
insightRuleMetricDatapoint_timestamp :: Lens' InsightRuleMetricDatapoint UTCTime
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.InsightRuleMetricDatapoint.InsightRuleMetricDatapoint
instance GHC.Show.Show Network.AWS.CloudWatch.Types.InsightRuleMetricDatapoint.InsightRuleMetricDatapoint
instance GHC.Read.Read Network.AWS.CloudWatch.Types.InsightRuleMetricDatapoint.InsightRuleMetricDatapoint
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.InsightRuleMetricDatapoint.InsightRuleMetricDatapoint
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.InsightRuleMetricDatapoint.InsightRuleMetricDatapoint
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.InsightRuleMetricDatapoint.InsightRuleMetricDatapoint
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.InsightRuleMetricDatapoint.InsightRuleMetricDatapoint


module Network.AWS.CloudWatch.Types.LabelOptions

-- | This structure includes the <tt>Timezone</tt> parameter, which you can
--   use to specify your time zone so that the labels that are associated
--   with returned metrics display the correct time for your time zone.
--   
--   The <tt>Timezone</tt> value affects a label only if you have a
--   time-based dynamic expression in the label. For more information about
--   dynamic expressions in labels, see <a>Using Dynamic Labels</a>.
--   
--   <i>See:</i> <a>newLabelOptions</a> smart constructor.
data LabelOptions
LabelOptions' :: Maybe Text -> LabelOptions

-- | The time zone to use for metric data return in this operation. The
--   format is <tt>+</tt> or <tt>-</tt> followed by four digits. The first
--   two digits indicate the number of hours ahead or behind of UTC, and
--   the final two digits are the number of minutes. For example, +0130
--   indicates a time zone that is 1 hour and 30 minutes ahead of UTC. The
--   default is +0000.
[$sel:timezone:LabelOptions'] :: LabelOptions -> Maybe Text

-- | Create a value of <a>LabelOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timezone:LabelOptions'</a>, <a>labelOptions_timezone</a> - The
--   time zone to use for metric data return in this operation. The format
--   is <tt>+</tt> or <tt>-</tt> followed by four digits. The first two
--   digits indicate the number of hours ahead or behind of UTC, and the
--   final two digits are the number of minutes. For example, +0130
--   indicates a time zone that is 1 hour and 30 minutes ahead of UTC. The
--   default is +0000.
newLabelOptions :: LabelOptions

-- | The time zone to use for metric data return in this operation. The
--   format is <tt>+</tt> or <tt>-</tt> followed by four digits. The first
--   two digits indicate the number of hours ahead or behind of UTC, and
--   the final two digits are the number of minutes. For example, +0130
--   indicates a time zone that is 1 hour and 30 minutes ahead of UTC. The
--   default is +0000.
labelOptions_timezone :: Lens' LabelOptions (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.LabelOptions.LabelOptions
instance GHC.Show.Show Network.AWS.CloudWatch.Types.LabelOptions.LabelOptions
instance GHC.Read.Read Network.AWS.CloudWatch.Types.LabelOptions.LabelOptions
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.LabelOptions.LabelOptions
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.LabelOptions.LabelOptions
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.LabelOptions.LabelOptions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.LabelOptions.LabelOptions


module Network.AWS.CloudWatch.Types.MessageData

-- | A message returned by the <tt>GetMetricData</tt>API, including a code
--   and a description.
--   
--   If a cross-Region <tt>GetMetricData</tt> operation fails with a code
--   of <tt>Forbidden</tt> and a value of <tt>Authentication too complex to
--   retrieve cross region data</tt>, you can correct the problem by
--   running the <tt>GetMetricData</tt> operation in the same Region where
--   the metric data is.
--   
--   <i>See:</i> <a>newMessageData</a> smart constructor.
data MessageData
MessageData' :: Maybe Text -> Maybe Text -> MessageData

-- | The error code or status code associated with the message.
[$sel:code:MessageData'] :: MessageData -> Maybe Text

-- | The message text.
[$sel:value:MessageData'] :: MessageData -> Maybe Text

-- | Create a value of <a>MessageData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:MessageData'</a>, <a>messageData_code</a> - The error
--   code or status code associated with the message.
--   
--   <a>$sel:value:MessageData'</a>, <a>messageData_value</a> - The message
--   text.
newMessageData :: MessageData

-- | The error code or status code associated with the message.
messageData_code :: Lens' MessageData (Maybe Text)

-- | The message text.
messageData_value :: Lens' MessageData (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MessageData.MessageData
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MessageData.MessageData
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MessageData.MessageData
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MessageData.MessageData
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.MessageData.MessageData
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MessageData.MessageData
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MessageData.MessageData


module Network.AWS.CloudWatch.Types.Metric

-- | Represents a specific metric.
--   
--   <i>See:</i> <a>newMetric</a> smart constructor.
data Metric
Metric' :: Maybe Text -> Maybe Text -> Maybe [Dimension] -> Metric

-- | The name of the metric. This is a required field.
[$sel:metricName:Metric'] :: Metric -> Maybe Text

-- | The namespace of the metric.
[$sel:namespace:Metric'] :: Metric -> Maybe Text

-- | The dimensions for the metric.
[$sel:dimensions:Metric'] :: Metric -> Maybe [Dimension]

-- | Create a value of <a>Metric</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:Metric'</a>, <a>metric_metricName</a> - The name of
--   the metric. This is a required field.
--   
--   <a>$sel:namespace:Metric'</a>, <a>metric_namespace</a> - The namespace
--   of the metric.
--   
--   <a>$sel:dimensions:Metric'</a>, <a>metric_dimensions</a> - The
--   dimensions for the metric.
newMetric :: Metric

-- | The name of the metric. This is a required field.
metric_metricName :: Lens' Metric (Maybe Text)

-- | The namespace of the metric.
metric_namespace :: Lens' Metric (Maybe Text)

-- | The dimensions for the metric.
metric_dimensions :: Lens' Metric (Maybe [Dimension])
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.Metric.Metric
instance GHC.Show.Show Network.AWS.CloudWatch.Types.Metric.Metric
instance GHC.Read.Read Network.AWS.CloudWatch.Types.Metric.Metric
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.Metric.Metric
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.Metric.Metric
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.Metric.Metric
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.Metric.Metric
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.Metric.Metric


module Network.AWS.CloudWatch.Types.MetricStreamFilter

-- | This structure contains the name of one of the metric namespaces that
--   is listed in a filter of a metric stream.
--   
--   <i>See:</i> <a>newMetricStreamFilter</a> smart constructor.
data MetricStreamFilter
MetricStreamFilter' :: Maybe Text -> MetricStreamFilter

-- | The name of the metric namespace in the filter.
[$sel:namespace:MetricStreamFilter'] :: MetricStreamFilter -> Maybe Text

-- | Create a value of <a>MetricStreamFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:MetricStreamFilter'</a>,
--   <a>metricStreamFilter_namespace</a> - The name of the metric namespace
--   in the filter.
newMetricStreamFilter :: MetricStreamFilter

-- | The name of the metric namespace in the filter.
metricStreamFilter_namespace :: Lens' MetricStreamFilter (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MetricStreamFilter.MetricStreamFilter
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MetricStreamFilter.MetricStreamFilter
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MetricStreamFilter.MetricStreamFilter
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MetricStreamFilter.MetricStreamFilter
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.MetricStreamFilter.MetricStreamFilter
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MetricStreamFilter.MetricStreamFilter
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MetricStreamFilter.MetricStreamFilter
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.MetricStreamFilter.MetricStreamFilter


module Network.AWS.CloudWatch.Types.MetricStreamOutputFormat
newtype MetricStreamOutputFormat
MetricStreamOutputFormat' :: Text -> MetricStreamOutputFormat
[fromMetricStreamOutputFormat] :: MetricStreamOutputFormat -> Text
pattern MetricStreamOutputFormat_Json :: MetricStreamOutputFormat
pattern MetricStreamOutputFormat_Opentelemetry0_7 :: MetricStreamOutputFormat
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MetricStreamOutputFormat.MetricStreamOutputFormat


module Network.AWS.CloudWatch.Types.MetricStreamEntry

-- | This structure contains the configuration information about one metric
--   stream.
--   
--   <i>See:</i> <a>newMetricStreamEntry</a> smart constructor.
data MetricStreamEntry
MetricStreamEntry' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe MetricStreamOutputFormat -> MetricStreamEntry

-- | The ARN of the Kinesis Firehose devlivery stream that is used for this
--   metric stream.
[$sel:firehoseArn:MetricStreamEntry'] :: MetricStreamEntry -> Maybe Text

-- | The ARN of the metric stream.
[$sel:arn:MetricStreamEntry'] :: MetricStreamEntry -> Maybe Text

-- | The date that the metric stream was originally created.
[$sel:creationDate:MetricStreamEntry'] :: MetricStreamEntry -> Maybe ISO8601

-- | The name of the metric stream.
[$sel:name:MetricStreamEntry'] :: MetricStreamEntry -> Maybe Text

-- | The date that the configuration of this metric stream was most
--   recently updated.
[$sel:lastUpdateDate:MetricStreamEntry'] :: MetricStreamEntry -> Maybe ISO8601

-- | The current state of this stream. Valid values are <tt>running</tt>
--   and <tt>stopped</tt>.
[$sel:state:MetricStreamEntry'] :: MetricStreamEntry -> Maybe Text

-- | The output format of this metric stream. Valid values are
--   <tt>json</tt> and <tt>opentelemetry0.7</tt>.
[$sel:outputFormat:MetricStreamEntry'] :: MetricStreamEntry -> Maybe MetricStreamOutputFormat

-- | Create a value of <a>MetricStreamEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firehoseArn:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_firehoseArn</a> - The ARN of the Kinesis Firehose
--   devlivery stream that is used for this metric stream.
--   
--   <a>$sel:arn:MetricStreamEntry'</a>, <a>metricStreamEntry_arn</a> - The
--   ARN of the metric stream.
--   
--   <a>$sel:creationDate:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_creationDate</a> - The date that the metric
--   stream was originally created.
--   
--   <a>$sel:name:MetricStreamEntry'</a>, <a>metricStreamEntry_name</a> -
--   The name of the metric stream.
--   
--   <a>$sel:lastUpdateDate:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_lastUpdateDate</a> - The date that the
--   configuration of this metric stream was most recently updated.
--   
--   <a>$sel:state:MetricStreamEntry'</a>, <a>metricStreamEntry_state</a> -
--   The current state of this stream. Valid values are <tt>running</tt>
--   and <tt>stopped</tt>.
--   
--   <a>$sel:outputFormat:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_outputFormat</a> - The output format of this
--   metric stream. Valid values are <tt>json</tt> and
--   <tt>opentelemetry0.7</tt>.
newMetricStreamEntry :: MetricStreamEntry

-- | The ARN of the Kinesis Firehose devlivery stream that is used for this
--   metric stream.
metricStreamEntry_firehoseArn :: Lens' MetricStreamEntry (Maybe Text)

-- | The ARN of the metric stream.
metricStreamEntry_arn :: Lens' MetricStreamEntry (Maybe Text)

-- | The date that the metric stream was originally created.
metricStreamEntry_creationDate :: Lens' MetricStreamEntry (Maybe UTCTime)

-- | The name of the metric stream.
metricStreamEntry_name :: Lens' MetricStreamEntry (Maybe Text)

-- | The date that the configuration of this metric stream was most
--   recently updated.
metricStreamEntry_lastUpdateDate :: Lens' MetricStreamEntry (Maybe UTCTime)

-- | The current state of this stream. Valid values are <tt>running</tt>
--   and <tt>stopped</tt>.
metricStreamEntry_state :: Lens' MetricStreamEntry (Maybe Text)

-- | The output format of this metric stream. Valid values are
--   <tt>json</tt> and <tt>opentelemetry0.7</tt>.
metricStreamEntry_outputFormat :: Lens' MetricStreamEntry (Maybe MetricStreamOutputFormat)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MetricStreamEntry.MetricStreamEntry
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MetricStreamEntry.MetricStreamEntry
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MetricStreamEntry.MetricStreamEntry
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MetricStreamEntry.MetricStreamEntry
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.MetricStreamEntry.MetricStreamEntry
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MetricStreamEntry.MetricStreamEntry
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MetricStreamEntry.MetricStreamEntry


module Network.AWS.CloudWatch.Types.PartialFailure

-- | This array is empty if the API operation was successful for all the
--   rules specified in the request. If the operation could not process one
--   of the rules, the following data is returned for each of those rules.
--   
--   <i>See:</i> <a>newPartialFailure</a> smart constructor.
data PartialFailure
PartialFailure' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PartialFailure

-- | The type of error.
[$sel:exceptionType:PartialFailure'] :: PartialFailure -> Maybe Text

-- | The code of the error.
[$sel:failureCode:PartialFailure'] :: PartialFailure -> Maybe Text

-- | A description of the error.
[$sel:failureDescription:PartialFailure'] :: PartialFailure -> Maybe Text

-- | The specified rule that could not be deleted.
[$sel:failureResource:PartialFailure'] :: PartialFailure -> Maybe Text

-- | Create a value of <a>PartialFailure</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptionType:PartialFailure'</a>,
--   <a>partialFailure_exceptionType</a> - The type of error.
--   
--   <a>$sel:failureCode:PartialFailure'</a>,
--   <a>partialFailure_failureCode</a> - The code of the error.
--   
--   <a>$sel:failureDescription:PartialFailure'</a>,
--   <a>partialFailure_failureDescription</a> - A description of the error.
--   
--   <a>$sel:failureResource:PartialFailure'</a>,
--   <a>partialFailure_failureResource</a> - The specified rule that could
--   not be deleted.
newPartialFailure :: PartialFailure

-- | The type of error.
partialFailure_exceptionType :: Lens' PartialFailure (Maybe Text)

-- | The code of the error.
partialFailure_failureCode :: Lens' PartialFailure (Maybe Text)

-- | A description of the error.
partialFailure_failureDescription :: Lens' PartialFailure (Maybe Text)

-- | The specified rule that could not be deleted.
partialFailure_failureResource :: Lens' PartialFailure (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.PartialFailure.PartialFailure
instance GHC.Show.Show Network.AWS.CloudWatch.Types.PartialFailure.PartialFailure
instance GHC.Read.Read Network.AWS.CloudWatch.Types.PartialFailure.PartialFailure
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.PartialFailure.PartialFailure
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.PartialFailure.PartialFailure
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.PartialFailure.PartialFailure
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.PartialFailure.PartialFailure


module Network.AWS.CloudWatch.Types.Range

-- | Specifies one range of days or times to exclude from use for training
--   an anomaly detection model.
--   
--   <i>See:</i> <a>newRange</a> smart constructor.
data Range
Range' :: ISO8601 -> ISO8601 -> Range

-- | The start time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
[$sel:startTime:Range'] :: Range -> ISO8601

-- | The end time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
[$sel:endTime:Range'] :: Range -> ISO8601

-- | Create a value of <a>Range</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:Range'</a>, <a>range_startTime</a> - The start time
--   of the range to exclude. The format is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>.
--   For example, <tt>2019-07-01T23:59:59</tt>.
--   
--   <a>$sel:endTime:Range'</a>, <a>range_endTime</a> - The end time of the
--   range to exclude. The format is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
newRange :: UTCTime -> UTCTime -> Range

-- | The start time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
range_startTime :: Lens' Range UTCTime

-- | The end time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
range_endTime :: Lens' Range UTCTime
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.Range.Range
instance GHC.Show.Show Network.AWS.CloudWatch.Types.Range.Range
instance GHC.Read.Read Network.AWS.CloudWatch.Types.Range.Range
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.Range.Range
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.Range.Range
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.Range.Range
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.Range.Range
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.Range.Range


module Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude from use for
--   training the model and the time zone to use for the metric.
--   
--   <i>See:</i> <a>newAnomalyDetectorConfiguration</a> smart constructor.
data AnomalyDetectorConfiguration
AnomalyDetectorConfiguration' :: Maybe Text -> Maybe [Range] -> AnomalyDetectorConfiguration

-- | The time zone to use for the metric. This is useful to enable the
--   model to automatically account for daylight savings time changes if
--   the metric is sensitive to such time changes.
--   
--   To specify a time zone, use the name of the time zone as specified in
--   the standard tz database. For more information, see <a>tz
--   database</a>.
[$sel:metricTimezone:AnomalyDetectorConfiguration'] :: AnomalyDetectorConfiguration -> Maybe Text

-- | An array of time ranges to exclude from use when the anomaly detection
--   model is trained. Use this to make sure that events that could cause
--   unusual values for the metric, such as deployments, aren't used when
--   CloudWatch creates the model.
[$sel:excludedTimeRanges:AnomalyDetectorConfiguration'] :: AnomalyDetectorConfiguration -> Maybe [Range]

-- | Create a value of <a>AnomalyDetectorConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricTimezone:AnomalyDetectorConfiguration'</a>,
--   <a>anomalyDetectorConfiguration_metricTimezone</a> - The time zone to
--   use for the metric. This is useful to enable the model to
--   automatically account for daylight savings time changes if the metric
--   is sensitive to such time changes.
--   
--   To specify a time zone, use the name of the time zone as specified in
--   the standard tz database. For more information, see <a>tz
--   database</a>.
--   
--   <a>$sel:excludedTimeRanges:AnomalyDetectorConfiguration'</a>,
--   <a>anomalyDetectorConfiguration_excludedTimeRanges</a> - An array of
--   time ranges to exclude from use when the anomaly detection model is
--   trained. Use this to make sure that events that could cause unusual
--   values for the metric, such as deployments, aren't used when
--   CloudWatch creates the model.
newAnomalyDetectorConfiguration :: AnomalyDetectorConfiguration

-- | The time zone to use for the metric. This is useful to enable the
--   model to automatically account for daylight savings time changes if
--   the metric is sensitive to such time changes.
--   
--   To specify a time zone, use the name of the time zone as specified in
--   the standard tz database. For more information, see <a>tz
--   database</a>.
anomalyDetectorConfiguration_metricTimezone :: Lens' AnomalyDetectorConfiguration (Maybe Text)

-- | An array of time ranges to exclude from use when the anomaly detection
--   model is trained. Use this to make sure that events that could cause
--   unusual values for the metric, such as deployments, aren't used when
--   CloudWatch creates the model.
anomalyDetectorConfiguration_excludedTimeRanges :: Lens' AnomalyDetectorConfiguration (Maybe [Range])
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration.AnomalyDetectorConfiguration
instance GHC.Show.Show Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration.AnomalyDetectorConfiguration
instance GHC.Read.Read Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration.AnomalyDetectorConfiguration
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration.AnomalyDetectorConfiguration
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration.AnomalyDetectorConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration.AnomalyDetectorConfiguration
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration.AnomalyDetectorConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.AnomalyDetectorConfiguration.AnomalyDetectorConfiguration


module Network.AWS.CloudWatch.Types.AnomalyDetector

-- | An anomaly detection model associated with a particular CloudWatch
--   metric and statistic. You can use the model to display a band of
--   expected normal values when the metric is graphed.
--   
--   <i>See:</i> <a>newAnomalyDetector</a> smart constructor.
data AnomalyDetector
AnomalyDetector' :: Maybe Text -> Maybe AnomalyDetectorConfiguration -> Maybe AnomalyDetectorStateValue -> Maybe Text -> Maybe [Dimension] -> Maybe Text -> AnomalyDetector

-- | The name of the metric associated with the anomaly detection model.
[$sel:metricName:AnomalyDetector'] :: AnomalyDetector -> Maybe Text

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude from use for
--   training the model, and the time zone to use for the metric.
[$sel:configuration:AnomalyDetector'] :: AnomalyDetector -> Maybe AnomalyDetectorConfiguration

-- | The current status of the anomaly detector's training. The possible
--   values are <tt>TRAINED | PENDING_TRAINING |
--   TRAINED_INSUFFICIENT_DATA</tt>
[$sel:stateValue:AnomalyDetector'] :: AnomalyDetector -> Maybe AnomalyDetectorStateValue

-- | The namespace of the metric associated with the anomaly detection
--   model.
[$sel:namespace:AnomalyDetector'] :: AnomalyDetector -> Maybe Text

-- | The metric dimensions associated with the anomaly detection model.
[$sel:dimensions:AnomalyDetector'] :: AnomalyDetector -> Maybe [Dimension]

-- | The statistic associated with the anomaly detection model.
[$sel:stat:AnomalyDetector'] :: AnomalyDetector -> Maybe Text

-- | Create a value of <a>AnomalyDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:AnomalyDetector'</a>,
--   <a>anomalyDetector_metricName</a> - The name of the metric associated
--   with the anomaly detection model.
--   
--   <a>$sel:configuration:AnomalyDetector'</a>,
--   <a>anomalyDetector_configuration</a> - The configuration specifies
--   details about how the anomaly detection model is to be trained,
--   including time ranges to exclude from use for training the model, and
--   the time zone to use for the metric.
--   
--   <a>$sel:stateValue:AnomalyDetector'</a>,
--   <a>anomalyDetector_stateValue</a> - The current status of the anomaly
--   detector's training. The possible values are <tt>TRAINED |
--   PENDING_TRAINING | TRAINED_INSUFFICIENT_DATA</tt>
--   
--   <a>$sel:namespace:AnomalyDetector'</a>,
--   <a>anomalyDetector_namespace</a> - The namespace of the metric
--   associated with the anomaly detection model.
--   
--   <a>$sel:dimensions:AnomalyDetector'</a>,
--   <a>anomalyDetector_dimensions</a> - The metric dimensions associated
--   with the anomaly detection model.
--   
--   <a>$sel:stat:AnomalyDetector'</a>, <a>anomalyDetector_stat</a> - The
--   statistic associated with the anomaly detection model.
newAnomalyDetector :: AnomalyDetector

-- | The name of the metric associated with the anomaly detection model.
anomalyDetector_metricName :: Lens' AnomalyDetector (Maybe Text)

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude from use for
--   training the model, and the time zone to use for the metric.
anomalyDetector_configuration :: Lens' AnomalyDetector (Maybe AnomalyDetectorConfiguration)

-- | The current status of the anomaly detector's training. The possible
--   values are <tt>TRAINED | PENDING_TRAINING |
--   TRAINED_INSUFFICIENT_DATA</tt>
anomalyDetector_stateValue :: Lens' AnomalyDetector (Maybe AnomalyDetectorStateValue)

-- | The namespace of the metric associated with the anomaly detection
--   model.
anomalyDetector_namespace :: Lens' AnomalyDetector (Maybe Text)

-- | The metric dimensions associated with the anomaly detection model.
anomalyDetector_dimensions :: Lens' AnomalyDetector (Maybe [Dimension])

-- | The statistic associated with the anomaly detection model.
anomalyDetector_stat :: Lens' AnomalyDetector (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.AnomalyDetector.AnomalyDetector
instance GHC.Show.Show Network.AWS.CloudWatch.Types.AnomalyDetector.AnomalyDetector
instance GHC.Read.Read Network.AWS.CloudWatch.Types.AnomalyDetector.AnomalyDetector
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.AnomalyDetector.AnomalyDetector
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.AnomalyDetector.AnomalyDetector
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.AnomalyDetector.AnomalyDetector
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.AnomalyDetector.AnomalyDetector


module Network.AWS.CloudWatch.Types.RecentlyActive
newtype RecentlyActive
RecentlyActive' :: Text -> RecentlyActive
[fromRecentlyActive] :: RecentlyActive -> Text
pattern RecentlyActive_PT3H :: RecentlyActive
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance GHC.Read.Read Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive
instance GHC.Show.Show Network.AWS.CloudWatch.Types.RecentlyActive.RecentlyActive


module Network.AWS.CloudWatch.Types.ScanBy
newtype ScanBy
ScanBy' :: Text -> ScanBy
[fromScanBy] :: ScanBy -> Text
pattern ScanBy_TimestampAscending :: ScanBy
pattern ScanBy_TimestampDescending :: ScanBy
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance GHC.Read.Read Network.AWS.CloudWatch.Types.ScanBy.ScanBy
instance GHC.Show.Show Network.AWS.CloudWatch.Types.ScanBy.ScanBy


module Network.AWS.CloudWatch.Types.StandardUnit
newtype StandardUnit
StandardUnit' :: Text -> StandardUnit
[fromStandardUnit] :: StandardUnit -> Text
pattern StandardUnit_Bits :: StandardUnit
pattern StandardUnit_Bits_Second :: StandardUnit
pattern StandardUnit_Bytes :: StandardUnit
pattern StandardUnit_Bytes_Second :: StandardUnit
pattern StandardUnit_Count :: StandardUnit
pattern StandardUnit_Count_Second :: StandardUnit
pattern StandardUnit_Gigabits :: StandardUnit
pattern StandardUnit_Gigabits_Second :: StandardUnit
pattern StandardUnit_Gigabytes :: StandardUnit
pattern StandardUnit_Gigabytes_Second :: StandardUnit
pattern StandardUnit_Kilobits :: StandardUnit
pattern StandardUnit_Kilobits_Second :: StandardUnit
pattern StandardUnit_Kilobytes :: StandardUnit
pattern StandardUnit_Kilobytes_Second :: StandardUnit
pattern StandardUnit_Megabits :: StandardUnit
pattern StandardUnit_Megabits_Second :: StandardUnit
pattern StandardUnit_Megabytes :: StandardUnit
pattern StandardUnit_Megabytes_Second :: StandardUnit
pattern StandardUnit_Microseconds :: StandardUnit
pattern StandardUnit_Milliseconds :: StandardUnit
pattern StandardUnit_None :: StandardUnit
pattern StandardUnit_Percent :: StandardUnit
pattern StandardUnit_Seconds :: StandardUnit
pattern StandardUnit_Terabits :: StandardUnit
pattern StandardUnit_Terabits_Second :: StandardUnit
pattern StandardUnit_Terabytes :: StandardUnit
pattern StandardUnit_Terabytes_Second :: StandardUnit
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance GHC.Read.Read Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit
instance GHC.Show.Show Network.AWS.CloudWatch.Types.StandardUnit.StandardUnit


module Network.AWS.CloudWatch.Types.MetricStat

-- | This structure defines the metric to be returned, along with the
--   statistics, period, and units.
--   
--   <i>See:</i> <a>newMetricStat</a> smart constructor.
data MetricStat
MetricStat' :: Maybe StandardUnit -> Metric -> Natural -> Text -> MetricStat

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, if you omit <tt>Unit</tt> then all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
[$sel:unit:MetricStat'] :: MetricStat -> Maybe StandardUnit

-- | The metric to return, including the metric name, namespace, and
--   dimensions.
[$sel:metric:MetricStat'] :: MetricStat -> Metric

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
[$sel:period:MetricStat'] :: MetricStat -> Natural

-- | The statistic to return. It can include any CloudWatch statistic or
--   extended statistic.
[$sel:stat:MetricStat'] :: MetricStat -> Text

-- | Create a value of <a>MetricStat</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:MetricStat'</a>, <a>metricStat_unit</a> - When you are
--   using a <tt>Put</tt> operation, this defines what unit you want to use
--   when storing the metric.
--   
--   In a <tt>Get</tt> operation, if you omit <tt>Unit</tt> then all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
--   
--   <a>$sel:metric:MetricStat'</a>, <a>metricStat_metric</a> - The metric
--   to return, including the metric name, namespace, and dimensions.
--   
--   <a>$sel:period:MetricStat'</a>, <a>metricStat_period</a> - The
--   granularity, in seconds, of the returned data points. For metrics with
--   regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
--   
--   <a>$sel:stat:MetricStat'</a>, <a>metricStat_stat</a> - The statistic
--   to return. It can include any CloudWatch statistic or extended
--   statistic.
newMetricStat :: Metric -> Natural -> Text -> MetricStat

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, if you omit <tt>Unit</tt> then all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
metricStat_unit :: Lens' MetricStat (Maybe StandardUnit)

-- | The metric to return, including the metric name, namespace, and
--   dimensions.
metricStat_metric :: Lens' MetricStat Metric

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
metricStat_period :: Lens' MetricStat Natural

-- | The statistic to return. It can include any CloudWatch statistic or
--   extended statistic.
metricStat_stat :: Lens' MetricStat Text
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MetricStat.MetricStat
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MetricStat.MetricStat
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MetricStat.MetricStat
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MetricStat.MetricStat
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.MetricStat.MetricStat
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MetricStat.MetricStat
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MetricStat.MetricStat
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.MetricStat.MetricStat


module Network.AWS.CloudWatch.Types.MetricDataQuery

-- | This structure is used in both <tt>GetMetricData</tt> and
--   <tt>PutMetricAlarm</tt>. The supported use of this structure is
--   different for those two operations.
--   
--   When used in <tt>GetMetricData</tt>, it indicates the metric data to
--   return, and whether this call is just retrieving a batch set of data
--   for one metric, or is performing a math expression on metric data. A
--   single <tt>GetMetricData</tt> call can include up to 500
--   <tt>MetricDataQuery</tt> structures.
--   
--   When used in <tt>PutMetricAlarm</tt>, it enables you to create an
--   alarm based on a metric math expression. Each <tt>MetricDataQuery</tt>
--   in the array specifies either a metric to retrieve, or a math
--   expression to be performed on retrieved metrics. A single
--   <tt>PutMetricAlarm</tt> call can include up to 20
--   <tt>MetricDataQuery</tt> structures in the array. The 20 structures
--   can include as many as 10 structures that contain a
--   <tt>MetricStat</tt> parameter to retrieve a metric, and as many as 10
--   structures that contain the <tt>Expression</tt> parameter to perform a
--   math expression. Of those <tt>Expression</tt> structures, one must
--   have <tt>True</tt> as the value for <tt>ReturnData</tt>. The result of
--   this expression is the value the alarm watches.
--   
--   Any expression used in a <tt>PutMetricAlarm</tt> operation must return
--   a single time series. For more information, see <a>Metric Math Syntax
--   and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   Some of the parameters of this structure also have different uses
--   whether you are using this structure in a <tt>GetMetricData</tt>
--   operation or a <tt>PutMetricAlarm</tt> operation. These differences
--   are explained in the following parameter list.
--   
--   <i>See:</i> <a>newMetricDataQuery</a> smart constructor.
data MetricDataQuery
MetricDataQuery' :: Maybe Text -> Maybe MetricStat -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Text -> MetricDataQuery

-- | The ID of the account where the metrics are located, if this is a
--   cross-account alarm.
--   
--   Use this field only for <tt>PutMetricAlarm</tt> operations. It is not
--   used in <tt>GetMetricData</tt> operations.
[$sel:accountId:MetricDataQuery'] :: MetricDataQuery -> Maybe Text

-- | The metric to be returned, along with statistics, period, and units.
--   Use this parameter only if this object is retrieving a metric and not
--   performing a math expression on returned data.
--   
--   Within one MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
[$sel:metricStat:MetricDataQuery'] :: MetricDataQuery -> Maybe MetricStat

-- | When used in <tt>GetMetricData</tt>, this option indicates whether to
--   return the timestamps and raw data values of this metric. If you are
--   performing this call just to do math expressions and do not also need
--   the raw data returned, you can specify <tt>False</tt>. If you omit
--   this, the default of <tt>True</tt> is used.
--   
--   When used in <tt>PutMetricAlarm</tt>, specify <tt>True</tt> for the
--   one expression result to use as the alarm. For all other metrics and
--   expressions in the same <tt>PutMetricAlarm</tt> operation, specify
--   <tt>ReturnData</tt> as False.
[$sel:returnData:MetricDataQuery'] :: MetricDataQuery -> Maybe Bool

-- | A human-readable label for this metric or expression. This is
--   especially useful if this is an expression, so that you know what the
--   value represents. If the metric or expression is shown in a CloudWatch
--   dashboard widget, the label is shown. If Label is omitted, CloudWatch
--   generates a default.
--   
--   You can put dynamic expressions into a label, so that it is more
--   descriptive. For more information, see <a>Using Dynamic Labels</a>.
[$sel:label:MetricDataQuery'] :: MetricDataQuery -> Maybe Text

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> operation
--   that includes a <tt>StorageResolution of 1 second</tt>.
[$sel:period:MetricDataQuery'] :: MetricDataQuery -> Maybe Natural

-- | The math expression to be performed on the returned data, if this
--   object is performing a math expression. This expression can use the
--   <tt>Id</tt> of the other metrics to refer to those metrics, and can
--   also use the <tt>Id</tt> of other expressions to use the result of
--   those expressions. For more information about metric math expressions,
--   see <a>Metric Math Syntax and Functions</a> in the <i>Amazon
--   CloudWatch User Guide</i>.
--   
--   Within each MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
[$sel:expression:MetricDataQuery'] :: MetricDataQuery -> Maybe Text

-- | A short name used to tie this object to the results in the response.
--   This name must be unique within a single call to
--   <tt>GetMetricData</tt>. If you are performing math expressions on this
--   set of data, this name represents that data and can serve as a
--   variable in the mathematical expression. The valid characters are
--   letters, numbers, and underscore. The first character must be a
--   lowercase letter.
[$sel:id:MetricDataQuery'] :: MetricDataQuery -> Text

-- | Create a value of <a>MetricDataQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:MetricDataQuery'</a>,
--   <a>metricDataQuery_accountId</a> - The ID of the account where the
--   metrics are located, if this is a cross-account alarm.
--   
--   Use this field only for <tt>PutMetricAlarm</tt> operations. It is not
--   used in <tt>GetMetricData</tt> operations.
--   
--   <a>$sel:metricStat:MetricDataQuery'</a>,
--   <a>metricDataQuery_metricStat</a> - The metric to be returned, along
--   with statistics, period, and units. Use this parameter only if this
--   object is retrieving a metric and not performing a math expression on
--   returned data.
--   
--   Within one MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
--   
--   <a>$sel:returnData:MetricDataQuery'</a>,
--   <a>metricDataQuery_returnData</a> - When used in
--   <tt>GetMetricData</tt>, this option indicates whether to return the
--   timestamps and raw data values of this metric. If you are performing
--   this call just to do math expressions and do not also need the raw
--   data returned, you can specify <tt>False</tt>. If you omit this, the
--   default of <tt>True</tt> is used.
--   
--   When used in <tt>PutMetricAlarm</tt>, specify <tt>True</tt> for the
--   one expression result to use as the alarm. For all other metrics and
--   expressions in the same <tt>PutMetricAlarm</tt> operation, specify
--   <tt>ReturnData</tt> as False.
--   
--   <a>$sel:label:MetricDataQuery'</a>, <a>metricDataQuery_label</a> - A
--   human-readable label for this metric or expression. This is especially
--   useful if this is an expression, so that you know what the value
--   represents. If the metric or expression is shown in a CloudWatch
--   dashboard widget, the label is shown. If Label is omitted, CloudWatch
--   generates a default.
--   
--   You can put dynamic expressions into a label, so that it is more
--   descriptive. For more information, see <a>Using Dynamic Labels</a>.
--   
--   <a>$sel:period:MetricDataQuery'</a>, <a>metricDataQuery_period</a> -
--   The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> operation
--   that includes a <tt>StorageResolution of 1 second</tt>.
--   
--   <a>$sel:expression:MetricDataQuery'</a>,
--   <a>metricDataQuery_expression</a> - The math expression to be
--   performed on the returned data, if this object is performing a math
--   expression. This expression can use the <tt>Id</tt> of the other
--   metrics to refer to those metrics, and can also use the <tt>Id</tt> of
--   other expressions to use the result of those expressions. For more
--   information about metric math expressions, see <a>Metric Math Syntax
--   and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   Within each MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
--   
--   <a>$sel:id:MetricDataQuery'</a>, <a>metricDataQuery_id</a> - A short
--   name used to tie this object to the results in the response. This name
--   must be unique within a single call to <tt>GetMetricData</tt>. If you
--   are performing math expressions on this set of data, this name
--   represents that data and can serve as a variable in the mathematical
--   expression. The valid characters are letters, numbers, and underscore.
--   The first character must be a lowercase letter.
newMetricDataQuery :: Text -> MetricDataQuery

-- | The ID of the account where the metrics are located, if this is a
--   cross-account alarm.
--   
--   Use this field only for <tt>PutMetricAlarm</tt> operations. It is not
--   used in <tt>GetMetricData</tt> operations.
metricDataQuery_accountId :: Lens' MetricDataQuery (Maybe Text)

-- | The metric to be returned, along with statistics, period, and units.
--   Use this parameter only if this object is retrieving a metric and not
--   performing a math expression on returned data.
--   
--   Within one MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
metricDataQuery_metricStat :: Lens' MetricDataQuery (Maybe MetricStat)

-- | When used in <tt>GetMetricData</tt>, this option indicates whether to
--   return the timestamps and raw data values of this metric. If you are
--   performing this call just to do math expressions and do not also need
--   the raw data returned, you can specify <tt>False</tt>. If you omit
--   this, the default of <tt>True</tt> is used.
--   
--   When used in <tt>PutMetricAlarm</tt>, specify <tt>True</tt> for the
--   one expression result to use as the alarm. For all other metrics and
--   expressions in the same <tt>PutMetricAlarm</tt> operation, specify
--   <tt>ReturnData</tt> as False.
metricDataQuery_returnData :: Lens' MetricDataQuery (Maybe Bool)

-- | A human-readable label for this metric or expression. This is
--   especially useful if this is an expression, so that you know what the
--   value represents. If the metric or expression is shown in a CloudWatch
--   dashboard widget, the label is shown. If Label is omitted, CloudWatch
--   generates a default.
--   
--   You can put dynamic expressions into a label, so that it is more
--   descriptive. For more information, see <a>Using Dynamic Labels</a>.
metricDataQuery_label :: Lens' MetricDataQuery (Maybe Text)

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> operation
--   that includes a <tt>StorageResolution of 1 second</tt>.
metricDataQuery_period :: Lens' MetricDataQuery (Maybe Natural)

-- | The math expression to be performed on the returned data, if this
--   object is performing a math expression. This expression can use the
--   <tt>Id</tt> of the other metrics to refer to those metrics, and can
--   also use the <tt>Id</tt> of other expressions to use the result of
--   those expressions. For more information about metric math expressions,
--   see <a>Metric Math Syntax and Functions</a> in the <i>Amazon
--   CloudWatch User Guide</i>.
--   
--   Within each MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
metricDataQuery_expression :: Lens' MetricDataQuery (Maybe Text)

-- | A short name used to tie this object to the results in the response.
--   This name must be unique within a single call to
--   <tt>GetMetricData</tt>. If you are performing math expressions on this
--   set of data, this name represents that data and can serve as a
--   variable in the mathematical expression. The valid characters are
--   letters, numbers, and underscore. The first character must be a
--   lowercase letter.
metricDataQuery_id :: Lens' MetricDataQuery Text
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MetricDataQuery.MetricDataQuery
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MetricDataQuery.MetricDataQuery
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MetricDataQuery.MetricDataQuery
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MetricDataQuery.MetricDataQuery
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.MetricDataQuery.MetricDataQuery
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MetricDataQuery.MetricDataQuery
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MetricDataQuery.MetricDataQuery
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.MetricDataQuery.MetricDataQuery


module Network.AWS.CloudWatch.Types.Datapoint

-- | Encapsulates the statistical data that CloudWatch computes from metric
--   data.
--   
--   <i>See:</i> <a>newDatapoint</a> smart constructor.
data Datapoint
Datapoint' :: Maybe StandardUnit -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe ISO8601 -> Maybe Double -> Maybe Double -> Maybe (HashMap Text Double) -> Datapoint

-- | The standard unit for the data point.
[$sel:unit:Datapoint'] :: Datapoint -> Maybe StandardUnit

-- | The minimum metric value for the data point.
[$sel:minimum:Datapoint'] :: Datapoint -> Maybe Double

-- | The sum of the metric values for the data point.
[$sel:sum:Datapoint'] :: Datapoint -> Maybe Double

-- | The number of metric values that contributed to the aggregate value of
--   this data point.
[$sel:sampleCount:Datapoint'] :: Datapoint -> Maybe Double

-- | The time stamp used for the data point.
[$sel:timestamp:Datapoint'] :: Datapoint -> Maybe ISO8601

-- | The average of the metric values that correspond to the data point.
[$sel:average:Datapoint'] :: Datapoint -> Maybe Double

-- | The maximum metric value for the data point.
[$sel:maximum:Datapoint'] :: Datapoint -> Maybe Double

-- | The percentile statistic for the data point.
[$sel:extendedStatistics:Datapoint'] :: Datapoint -> Maybe (HashMap Text Double)

-- | Create a value of <a>Datapoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:Datapoint'</a>, <a>datapoint_unit</a> - The standard unit
--   for the data point.
--   
--   <a>$sel:minimum:Datapoint'</a>, <a>datapoint_minimum</a> - The minimum
--   metric value for the data point.
--   
--   <a>$sel:sum:Datapoint'</a>, <a>datapoint_sum</a> - The sum of the
--   metric values for the data point.
--   
--   <a>$sel:sampleCount:Datapoint'</a>, <a>datapoint_sampleCount</a> - The
--   number of metric values that contributed to the aggregate value of
--   this data point.
--   
--   <a>$sel:timestamp:Datapoint'</a>, <a>datapoint_timestamp</a> - The
--   time stamp used for the data point.
--   
--   <a>$sel:average:Datapoint'</a>, <a>datapoint_average</a> - The average
--   of the metric values that correspond to the data point.
--   
--   <a>$sel:maximum:Datapoint'</a>, <a>datapoint_maximum</a> - The maximum
--   metric value for the data point.
--   
--   <a>$sel:extendedStatistics:Datapoint'</a>,
--   <a>datapoint_extendedStatistics</a> - The percentile statistic for the
--   data point.
newDatapoint :: Datapoint

-- | The standard unit for the data point.
datapoint_unit :: Lens' Datapoint (Maybe StandardUnit)

-- | The minimum metric value for the data point.
datapoint_minimum :: Lens' Datapoint (Maybe Double)

-- | The sum of the metric values for the data point.
datapoint_sum :: Lens' Datapoint (Maybe Double)

-- | The number of metric values that contributed to the aggregate value of
--   this data point.
datapoint_sampleCount :: Lens' Datapoint (Maybe Double)

-- | The time stamp used for the data point.
datapoint_timestamp :: Lens' Datapoint (Maybe UTCTime)

-- | The average of the metric values that correspond to the data point.
datapoint_average :: Lens' Datapoint (Maybe Double)

-- | The maximum metric value for the data point.
datapoint_maximum :: Lens' Datapoint (Maybe Double)

-- | The percentile statistic for the data point.
datapoint_extendedStatistics :: Lens' Datapoint (Maybe (HashMap Text Double))
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.Datapoint.Datapoint
instance GHC.Show.Show Network.AWS.CloudWatch.Types.Datapoint.Datapoint
instance GHC.Read.Read Network.AWS.CloudWatch.Types.Datapoint.Datapoint
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.Datapoint.Datapoint
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.Datapoint.Datapoint
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.Datapoint.Datapoint
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.Datapoint.Datapoint


module Network.AWS.CloudWatch.Types.StateValue
newtype StateValue
StateValue' :: Text -> StateValue
[fromStateValue] :: StateValue -> Text
pattern StateValue_ALARM :: StateValue
pattern StateValue_INSUFFICIENT_DATA :: StateValue
pattern StateValue_OK :: StateValue
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.StateValue.StateValue
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.StateValue.StateValue
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.StateValue.StateValue
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.StateValue.StateValue
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.StateValue.StateValue
instance GHC.Read.Read Network.AWS.CloudWatch.Types.StateValue.StateValue
instance GHC.Show.Show Network.AWS.CloudWatch.Types.StateValue.StateValue


module Network.AWS.CloudWatch.Types.CompositeAlarm

-- | The details about a composite alarm.
--   
--   <i>See:</i> <a>newCompositeAlarm</a> smart constructor.
data CompositeAlarm
CompositeAlarm' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe StateValue -> Maybe ISO8601 -> Maybe [Text] -> Maybe Bool -> Maybe ISO8601 -> Maybe Text -> CompositeAlarm

-- | The actions to execute when this alarm transitions to the ALARM state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
[$sel:alarmActions:CompositeAlarm'] :: CompositeAlarm -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the alarm.
[$sel:alarmArn:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | An explanation for the alarm state, in text format.
[$sel:stateReason:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | An explanation for the alarm state, in JSON format.
[$sel:stateReasonData:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | The actions to execute when this alarm transitions to the
--   INSUFFICIENT_DATA state from any other state. Each action is specified
--   as an Amazon Resource Name (ARN).
[$sel:insufficientDataActions:CompositeAlarm'] :: CompositeAlarm -> Maybe [Text]

-- | The rule that this alarm uses to evaluate its alarm state.
[$sel:alarmRule:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | The name of the alarm.
[$sel:alarmName:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | The state value for the alarm.
[$sel:stateValue:CompositeAlarm'] :: CompositeAlarm -> Maybe StateValue

-- | The time stamp of the last update to the alarm state.
[$sel:stateUpdatedTimestamp:CompositeAlarm'] :: CompositeAlarm -> Maybe ISO8601

-- | The actions to execute when this alarm transitions to the OK state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
[$sel:oKActions:CompositeAlarm'] :: CompositeAlarm -> Maybe [Text]

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
[$sel:actionsEnabled:CompositeAlarm'] :: CompositeAlarm -> Maybe Bool

-- | The time stamp of the last update to the alarm configuration.
[$sel:alarmConfigurationUpdatedTimestamp:CompositeAlarm'] :: CompositeAlarm -> Maybe ISO8601

-- | The description of the alarm.
[$sel:alarmDescription:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | Create a value of <a>CompositeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmActions:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmActions</a> - The actions to execute when this
--   alarm transitions to the ALARM state from any other state. Each action
--   is specified as an Amazon Resource Name (ARN).
--   
--   <a>$sel:alarmArn:CompositeAlarm'</a>, <a>compositeAlarm_alarmArn</a> -
--   The Amazon Resource Name (ARN) of the alarm.
--   
--   <a>$sel:stateReason:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateReason</a> - An explanation for the alarm
--   state, in text format.
--   
--   <a>$sel:stateReasonData:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateReasonData</a> - An explanation for the alarm
--   state, in JSON format.
--   
--   <a>$sel:insufficientDataActions:CompositeAlarm'</a>,
--   <a>compositeAlarm_insufficientDataActions</a> - The actions to execute
--   when this alarm transitions to the INSUFFICIENT_DATA state from any
--   other state. Each action is specified as an Amazon Resource Name
--   (ARN).
--   
--   <a>$sel:alarmRule:CompositeAlarm'</a>, <a>compositeAlarm_alarmRule</a>
--   - The rule that this alarm uses to evaluate its alarm state.
--   
--   <a>$sel:alarmName:CompositeAlarm'</a>, <a>compositeAlarm_alarmName</a>
--   - The name of the alarm.
--   
--   <a>$sel:stateValue:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateValue</a> - The state value for the alarm.
--   
--   <a>$sel:stateUpdatedTimestamp:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateUpdatedTimestamp</a> - The time stamp of the
--   last update to the alarm state.
--   
--   <a>$sel:oKActions:CompositeAlarm'</a>, <a>compositeAlarm_oKActions</a>
--   - The actions to execute when this alarm transitions to the OK state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
--   
--   <a>$sel:actionsEnabled:CompositeAlarm'</a>,
--   <a>compositeAlarm_actionsEnabled</a> - Indicates whether actions
--   should be executed during any changes to the alarm state.
--   
--   <a>$sel:alarmConfigurationUpdatedTimestamp:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmConfigurationUpdatedTimestamp</a> - The time
--   stamp of the last update to the alarm configuration.
--   
--   <a>$sel:alarmDescription:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmDescription</a> - The description of the alarm.
newCompositeAlarm :: CompositeAlarm

-- | The actions to execute when this alarm transitions to the ALARM state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
compositeAlarm_alarmActions :: Lens' CompositeAlarm (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the alarm.
compositeAlarm_alarmArn :: Lens' CompositeAlarm (Maybe Text)

-- | An explanation for the alarm state, in text format.
compositeAlarm_stateReason :: Lens' CompositeAlarm (Maybe Text)

-- | An explanation for the alarm state, in JSON format.
compositeAlarm_stateReasonData :: Lens' CompositeAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   INSUFFICIENT_DATA state from any other state. Each action is specified
--   as an Amazon Resource Name (ARN).
compositeAlarm_insufficientDataActions :: Lens' CompositeAlarm (Maybe [Text])

-- | The rule that this alarm uses to evaluate its alarm state.
compositeAlarm_alarmRule :: Lens' CompositeAlarm (Maybe Text)

-- | The name of the alarm.
compositeAlarm_alarmName :: Lens' CompositeAlarm (Maybe Text)

-- | The state value for the alarm.
compositeAlarm_stateValue :: Lens' CompositeAlarm (Maybe StateValue)

-- | The time stamp of the last update to the alarm state.
compositeAlarm_stateUpdatedTimestamp :: Lens' CompositeAlarm (Maybe UTCTime)

-- | The actions to execute when this alarm transitions to the OK state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
compositeAlarm_oKActions :: Lens' CompositeAlarm (Maybe [Text])

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
compositeAlarm_actionsEnabled :: Lens' CompositeAlarm (Maybe Bool)

-- | The time stamp of the last update to the alarm configuration.
compositeAlarm_alarmConfigurationUpdatedTimestamp :: Lens' CompositeAlarm (Maybe UTCTime)

-- | The description of the alarm.
compositeAlarm_alarmDescription :: Lens' CompositeAlarm (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.CompositeAlarm.CompositeAlarm
instance GHC.Show.Show Network.AWS.CloudWatch.Types.CompositeAlarm.CompositeAlarm
instance GHC.Read.Read Network.AWS.CloudWatch.Types.CompositeAlarm.CompositeAlarm
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.CompositeAlarm.CompositeAlarm
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.CompositeAlarm.CompositeAlarm
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.CompositeAlarm.CompositeAlarm
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.CompositeAlarm.CompositeAlarm


module Network.AWS.CloudWatch.Types.Statistic
newtype Statistic
Statistic' :: Text -> Statistic
[fromStatistic] :: Statistic -> Text
pattern Statistic_Average :: Statistic
pattern Statistic_Maximum :: Statistic
pattern Statistic_Minimum :: Statistic
pattern Statistic_SampleCount :: Statistic
pattern Statistic_Sum :: Statistic
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.Statistic.Statistic
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.Statistic.Statistic
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.Statistic.Statistic
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.Statistic.Statistic
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.Statistic.Statistic
instance GHC.Read.Read Network.AWS.CloudWatch.Types.Statistic.Statistic
instance GHC.Show.Show Network.AWS.CloudWatch.Types.Statistic.Statistic


module Network.AWS.CloudWatch.Types.MetricAlarm

-- | The details about a metric alarm.
--   
--   <i>See:</i> <a>newMetricAlarm</a> smart constructor.
data MetricAlarm
MetricAlarm' :: Maybe Double -> Maybe Natural -> Maybe Text -> Maybe ComparisonOperator -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe StandardUnit -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe [MetricDataQuery] -> Maybe Text -> Maybe StateValue -> Maybe ISO8601 -> Maybe [Text] -> Maybe Statistic -> Maybe Text -> Maybe [Dimension] -> Maybe Natural -> Maybe Bool -> Maybe ISO8601 -> Maybe Natural -> Maybe Text -> MetricAlarm

-- | The value to compare with the specified statistic.
[$sel:threshold:MetricAlarm'] :: MetricAlarm -> Maybe Double

-- | The number of data points that must be breaching to trigger the alarm.
[$sel:datapointsToAlarm:MetricAlarm'] :: MetricAlarm -> Maybe Natural

-- | Used only for alarms based on percentiles. If <tt>ignore</tt>, the
--   alarm state does not change during periods with too few data points to
--   be statistically significant. If <tt>evaluate</tt> or this parameter
--   is not used, the alarm is always evaluated and possibly changes state
--   no matter how many data points are available.
[$sel:evaluateLowSampleCountPercentile:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The arithmetic operation to use when comparing the specified statistic
--   and threshold. The specified statistic value is used as the first
--   operand.
[$sel:comparisonOperator:MetricAlarm'] :: MetricAlarm -> Maybe ComparisonOperator

-- | The percentile statistic for the metric associated with the alarm.
--   Specify a value between p0.0 and p100.
[$sel:extendedStatistic:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | In an alarm based on an anomaly detection model, this is the ID of the
--   <tt>ANOMALY_DETECTION_BAND</tt> function used as the threshold for the
--   alarm.
[$sel:thresholdMetricId:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
[$sel:alarmActions:MetricAlarm'] :: MetricAlarm -> Maybe [Text]

-- | The unit of the metric associated with the alarm.
[$sel:unit:MetricAlarm'] :: MetricAlarm -> Maybe StandardUnit

-- | The Amazon Resource Name (ARN) of the alarm.
[$sel:alarmArn:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The name of the metric associated with the alarm, if this is an alarm
--   based on a single metric.
[$sel:metricName:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | An explanation for the alarm state, in text format.
[$sel:stateReason:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | An explanation for the alarm state, in JSON format.
[$sel:stateReasonData:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
[$sel:insufficientDataActions:MetricAlarm'] :: MetricAlarm -> Maybe [Text]

-- | Sets how this alarm is to handle missing data points. If this
--   parameter is omitted, the default behavior of <tt>missing</tt> is
--   used.
[$sel:treatMissingData:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | An array of MetricDataQuery structures, used in an alarm based on a
--   metric math expression. Each structure either retrieves a metric or
--   performs a math expression. One item in the Metrics array is the math
--   expression that the alarm watches. This expression by designated by
--   having <tt>ReturnData</tt> set to true.
[$sel:metrics:MetricAlarm'] :: MetricAlarm -> Maybe [MetricDataQuery]

-- | The name of the alarm.
[$sel:alarmName:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The state value for the alarm.
[$sel:stateValue:MetricAlarm'] :: MetricAlarm -> Maybe StateValue

-- | The time stamp of the last update to the alarm state.
[$sel:stateUpdatedTimestamp:MetricAlarm'] :: MetricAlarm -> Maybe ISO8601

-- | The actions to execute when this alarm transitions to the <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
[$sel:oKActions:MetricAlarm'] :: MetricAlarm -> Maybe [Text]

-- | The statistic for the metric associated with the alarm, other than
--   percentile. For percentile statistics, use <tt>ExtendedStatistic</tt>.
[$sel:statistic:MetricAlarm'] :: MetricAlarm -> Maybe Statistic

-- | The namespace of the metric associated with the alarm.
[$sel:namespace:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The dimensions for the metric associated with the alarm.
[$sel:dimensions:MetricAlarm'] :: MetricAlarm -> Maybe [Dimension]

-- | The number of periods over which data is compared to the specified
--   threshold.
[$sel:evaluationPeriods:MetricAlarm'] :: MetricAlarm -> Maybe Natural

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
[$sel:actionsEnabled:MetricAlarm'] :: MetricAlarm -> Maybe Bool

-- | The time stamp of the last update to the alarm configuration.
[$sel:alarmConfigurationUpdatedTimestamp:MetricAlarm'] :: MetricAlarm -> Maybe ISO8601

-- | The period, in seconds, over which the statistic is applied.
[$sel:period:MetricAlarm'] :: MetricAlarm -> Maybe Natural

-- | The description of the alarm.
[$sel:alarmDescription:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | Create a value of <a>MetricAlarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:MetricAlarm'</a>, <a>metricAlarm_threshold</a> - The
--   value to compare with the specified statistic.
--   
--   <a>$sel:datapointsToAlarm:MetricAlarm'</a>,
--   <a>metricAlarm_datapointsToAlarm</a> - The number of data points that
--   must be breaching to trigger the alarm.
--   
--   <a>$sel:evaluateLowSampleCountPercentile:MetricAlarm'</a>,
--   <a>metricAlarm_evaluateLowSampleCountPercentile</a> - Used only for
--   alarms based on percentiles. If <tt>ignore</tt>, the alarm state does
--   not change during periods with too few data points to be statistically
--   significant. If <tt>evaluate</tt> or this parameter is not used, the
--   alarm is always evaluated and possibly changes state no matter how
--   many data points are available.
--   
--   <a>$sel:comparisonOperator:MetricAlarm'</a>,
--   <a>metricAlarm_comparisonOperator</a> - The arithmetic operation to
--   use when comparing the specified statistic and threshold. The
--   specified statistic value is used as the first operand.
--   
--   <a>$sel:extendedStatistic:MetricAlarm'</a>,
--   <a>metricAlarm_extendedStatistic</a> - The percentile statistic for
--   the metric associated with the alarm. Specify a value between p0.0 and
--   p100.
--   
--   <a>$sel:thresholdMetricId:MetricAlarm'</a>,
--   <a>metricAlarm_thresholdMetricId</a> - In an alarm based on an anomaly
--   detection model, this is the ID of the <tt>ANOMALY_DETECTION_BAND</tt>
--   function used as the threshold for the alarm.
--   
--   <a>$sel:alarmActions:MetricAlarm'</a>, <a>metricAlarm_alarmActions</a>
--   - The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   <a>$sel:unit:MetricAlarm'</a>, <a>metricAlarm_unit</a> - The unit of
--   the metric associated with the alarm.
--   
--   <a>$sel:alarmArn:MetricAlarm'</a>, <a>metricAlarm_alarmArn</a> - The
--   Amazon Resource Name (ARN) of the alarm.
--   
--   <a>$sel:metricName:MetricAlarm'</a>, <a>metricAlarm_metricName</a> -
--   The name of the metric associated with the alarm, if this is an alarm
--   based on a single metric.
--   
--   <a>$sel:stateReason:MetricAlarm'</a>, <a>metricAlarm_stateReason</a> -
--   An explanation for the alarm state, in text format.
--   
--   <a>$sel:stateReasonData:MetricAlarm'</a>,
--   <a>metricAlarm_stateReasonData</a> - An explanation for the alarm
--   state, in JSON format.
--   
--   <a>$sel:insufficientDataActions:MetricAlarm'</a>,
--   <a>metricAlarm_insufficientDataActions</a> - The actions to execute
--   when this alarm transitions to the <tt>INSUFFICIENT_DATA</tt> state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
--   
--   <a>$sel:treatMissingData:MetricAlarm'</a>,
--   <a>metricAlarm_treatMissingData</a> - Sets how this alarm is to handle
--   missing data points. If this parameter is omitted, the default
--   behavior of <tt>missing</tt> is used.
--   
--   <a>$sel:metrics:MetricAlarm'</a>, <a>metricAlarm_metrics</a> - An
--   array of MetricDataQuery structures, used in an alarm based on a
--   metric math expression. Each structure either retrieves a metric or
--   performs a math expression. One item in the Metrics array is the math
--   expression that the alarm watches. This expression by designated by
--   having <tt>ReturnData</tt> set to true.
--   
--   <a>$sel:alarmName:MetricAlarm'</a>, <a>metricAlarm_alarmName</a> - The
--   name of the alarm.
--   
--   <a>$sel:stateValue:MetricAlarm'</a>, <a>metricAlarm_stateValue</a> -
--   The state value for the alarm.
--   
--   <a>$sel:stateUpdatedTimestamp:MetricAlarm'</a>,
--   <a>metricAlarm_stateUpdatedTimestamp</a> - The time stamp of the last
--   update to the alarm state.
--   
--   <a>$sel:oKActions:MetricAlarm'</a>, <a>metricAlarm_oKActions</a> - The
--   actions to execute when this alarm transitions to the <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:statistic:MetricAlarm'</a>, <a>metricAlarm_statistic</a> - The
--   statistic for the metric associated with the alarm, other than
--   percentile. For percentile statistics, use <tt>ExtendedStatistic</tt>.
--   
--   <a>$sel:namespace:MetricAlarm'</a>, <a>metricAlarm_namespace</a> - The
--   namespace of the metric associated with the alarm.
--   
--   <a>$sel:dimensions:MetricAlarm'</a>, <a>metricAlarm_dimensions</a> -
--   The dimensions for the metric associated with the alarm.
--   
--   <a>$sel:evaluationPeriods:MetricAlarm'</a>,
--   <a>metricAlarm_evaluationPeriods</a> - The number of periods over
--   which data is compared to the specified threshold.
--   
--   <a>$sel:actionsEnabled:MetricAlarm'</a>,
--   <a>metricAlarm_actionsEnabled</a> - Indicates whether actions should
--   be executed during any changes to the alarm state.
--   
--   <a>$sel:alarmConfigurationUpdatedTimestamp:MetricAlarm'</a>,
--   <a>metricAlarm_alarmConfigurationUpdatedTimestamp</a> - The time stamp
--   of the last update to the alarm configuration.
--   
--   <a>$sel:period:MetricAlarm'</a>, <a>metricAlarm_period</a> - The
--   period, in seconds, over which the statistic is applied.
--   
--   <a>$sel:alarmDescription:MetricAlarm'</a>,
--   <a>metricAlarm_alarmDescription</a> - The description of the alarm.
newMetricAlarm :: MetricAlarm

-- | The value to compare with the specified statistic.
metricAlarm_threshold :: Lens' MetricAlarm (Maybe Double)

-- | The number of data points that must be breaching to trigger the alarm.
metricAlarm_datapointsToAlarm :: Lens' MetricAlarm (Maybe Natural)

-- | Used only for alarms based on percentiles. If <tt>ignore</tt>, the
--   alarm state does not change during periods with too few data points to
--   be statistically significant. If <tt>evaluate</tt> or this parameter
--   is not used, the alarm is always evaluated and possibly changes state
--   no matter how many data points are available.
metricAlarm_evaluateLowSampleCountPercentile :: Lens' MetricAlarm (Maybe Text)

-- | The arithmetic operation to use when comparing the specified statistic
--   and threshold. The specified statistic value is used as the first
--   operand.
metricAlarm_comparisonOperator :: Lens' MetricAlarm (Maybe ComparisonOperator)

-- | The percentile statistic for the metric associated with the alarm.
--   Specify a value between p0.0 and p100.
metricAlarm_extendedStatistic :: Lens' MetricAlarm (Maybe Text)

-- | In an alarm based on an anomaly detection model, this is the ID of the
--   <tt>ANOMALY_DETECTION_BAND</tt> function used as the threshold for the
--   alarm.
metricAlarm_thresholdMetricId :: Lens' MetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
metricAlarm_alarmActions :: Lens' MetricAlarm (Maybe [Text])

-- | The unit of the metric associated with the alarm.
metricAlarm_unit :: Lens' MetricAlarm (Maybe StandardUnit)

-- | The Amazon Resource Name (ARN) of the alarm.
metricAlarm_alarmArn :: Lens' MetricAlarm (Maybe Text)

-- | The name of the metric associated with the alarm, if this is an alarm
--   based on a single metric.
metricAlarm_metricName :: Lens' MetricAlarm (Maybe Text)

-- | An explanation for the alarm state, in text format.
metricAlarm_stateReason :: Lens' MetricAlarm (Maybe Text)

-- | An explanation for the alarm state, in JSON format.
metricAlarm_stateReasonData :: Lens' MetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
metricAlarm_insufficientDataActions :: Lens' MetricAlarm (Maybe [Text])

-- | Sets how this alarm is to handle missing data points. If this
--   parameter is omitted, the default behavior of <tt>missing</tt> is
--   used.
metricAlarm_treatMissingData :: Lens' MetricAlarm (Maybe Text)

-- | An array of MetricDataQuery structures, used in an alarm based on a
--   metric math expression. Each structure either retrieves a metric or
--   performs a math expression. One item in the Metrics array is the math
--   expression that the alarm watches. This expression by designated by
--   having <tt>ReturnData</tt> set to true.
metricAlarm_metrics :: Lens' MetricAlarm (Maybe [MetricDataQuery])

-- | The name of the alarm.
metricAlarm_alarmName :: Lens' MetricAlarm (Maybe Text)

-- | The state value for the alarm.
metricAlarm_stateValue :: Lens' MetricAlarm (Maybe StateValue)

-- | The time stamp of the last update to the alarm state.
metricAlarm_stateUpdatedTimestamp :: Lens' MetricAlarm (Maybe UTCTime)

-- | The actions to execute when this alarm transitions to the <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
metricAlarm_oKActions :: Lens' MetricAlarm (Maybe [Text])

-- | The statistic for the metric associated with the alarm, other than
--   percentile. For percentile statistics, use <tt>ExtendedStatistic</tt>.
metricAlarm_statistic :: Lens' MetricAlarm (Maybe Statistic)

-- | The namespace of the metric associated with the alarm.
metricAlarm_namespace :: Lens' MetricAlarm (Maybe Text)

-- | The dimensions for the metric associated with the alarm.
metricAlarm_dimensions :: Lens' MetricAlarm (Maybe [Dimension])

-- | The number of periods over which data is compared to the specified
--   threshold.
metricAlarm_evaluationPeriods :: Lens' MetricAlarm (Maybe Natural)

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
metricAlarm_actionsEnabled :: Lens' MetricAlarm (Maybe Bool)

-- | The time stamp of the last update to the alarm configuration.
metricAlarm_alarmConfigurationUpdatedTimestamp :: Lens' MetricAlarm (Maybe UTCTime)

-- | The period, in seconds, over which the statistic is applied.
metricAlarm_period :: Lens' MetricAlarm (Maybe Natural)

-- | The description of the alarm.
metricAlarm_alarmDescription :: Lens' MetricAlarm (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MetricAlarm.MetricAlarm
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MetricAlarm.MetricAlarm
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MetricAlarm.MetricAlarm
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MetricAlarm.MetricAlarm
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.MetricAlarm.MetricAlarm
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MetricAlarm.MetricAlarm
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MetricAlarm.MetricAlarm


module Network.AWS.CloudWatch.Types.StatisticSet

-- | Represents a set of statistics that describes a specific metric.
--   
--   <i>See:</i> <a>newStatisticSet</a> smart constructor.
data StatisticSet
StatisticSet' :: Double -> Double -> Double -> Double -> StatisticSet

-- | The number of samples used for the statistic set.
[$sel:sampleCount:StatisticSet'] :: StatisticSet -> Double

-- | The sum of values for the sample set.
[$sel:sum:StatisticSet'] :: StatisticSet -> Double

-- | The minimum value of the sample set.
[$sel:minimum:StatisticSet'] :: StatisticSet -> Double

-- | The maximum value of the sample set.
[$sel:maximum:StatisticSet'] :: StatisticSet -> Double

-- | Create a value of <a>StatisticSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sampleCount:StatisticSet'</a>, <a>statisticSet_sampleCount</a>
--   - The number of samples used for the statistic set.
--   
--   <a>$sel:sum:StatisticSet'</a>, <a>statisticSet_sum</a> - The sum of
--   values for the sample set.
--   
--   <a>$sel:minimum:StatisticSet'</a>, <a>statisticSet_minimum</a> - The
--   minimum value of the sample set.
--   
--   <a>$sel:maximum:StatisticSet'</a>, <a>statisticSet_maximum</a> - The
--   maximum value of the sample set.
newStatisticSet :: Double -> Double -> Double -> Double -> StatisticSet

-- | The number of samples used for the statistic set.
statisticSet_sampleCount :: Lens' StatisticSet Double

-- | The sum of values for the sample set.
statisticSet_sum :: Lens' StatisticSet Double

-- | The minimum value of the sample set.
statisticSet_minimum :: Lens' StatisticSet Double

-- | The maximum value of the sample set.
statisticSet_maximum :: Lens' StatisticSet Double
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.StatisticSet.StatisticSet
instance GHC.Show.Show Network.AWS.CloudWatch.Types.StatisticSet.StatisticSet
instance GHC.Read.Read Network.AWS.CloudWatch.Types.StatisticSet.StatisticSet
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.StatisticSet.StatisticSet
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.StatisticSet.StatisticSet
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.StatisticSet.StatisticSet
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.StatisticSet.StatisticSet


module Network.AWS.CloudWatch.Types.MetricDatum

-- | Encapsulates the information sent to either create a metric or add new
--   values to be aggregated into an existing metric.
--   
--   <i>See:</i> <a>newMetricDatum</a> smart constructor.
data MetricDatum
MetricDatum' :: Maybe Natural -> Maybe StandardUnit -> Maybe [Double] -> Maybe [Double] -> Maybe StatisticSet -> Maybe ISO8601 -> Maybe Double -> Maybe [Dimension] -> Text -> MetricDatum

-- | Valid values are 1 and 60. Setting this to 1 specifies this metric as
--   a high-resolution metric, so that CloudWatch stores the metric with
--   sub-minute resolution down to one second. Setting this to 60 specifies
--   this metric as a regular-resolution metric, which CloudWatch stores at
--   1-minute resolution. Currently, high resolution is available only for
--   custom metrics. For more information about high-resolution metrics,
--   see <a>High-Resolution Metrics</a> in the <i>Amazon CloudWatch User
--   Guide</i>.
--   
--   This field is optional, if you do not specify it the default of 60 is
--   used.
[$sel:storageResolution:MetricDatum'] :: MetricDatum -> Maybe Natural

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, this displays the unit that is used for
--   the metric.
[$sel:unit:MetricDatum'] :: MetricDatum -> Maybe StandardUnit

-- | Array of numbers representing the values for the metric during the
--   period. Each unique value is listed just once in this array, and the
--   corresponding number in the <tt>Counts</tt> array specifies the number
--   of times that value occurred during the period. You can include up to
--   150 unique values in each <tt>PutMetricData</tt> action that specifies
--   a <tt>Values</tt> array.
--   
--   Although the <tt>Values</tt> array accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
[$sel:values:MetricDatum'] :: MetricDatum -> Maybe [Double]

-- | Array of numbers that is used along with the <tt>Values</tt> array.
--   Each number in the <tt>Count</tt> array is the number of times the
--   corresponding value in the <tt>Values</tt> array occurred during the
--   period.
--   
--   If you omit the <tt>Counts</tt> array, the default of 1 is used as the
--   value for each count. If you include a <tt>Counts</tt> array, it must
--   include the same amount of values as the <tt>Values</tt> array.
[$sel:counts:MetricDatum'] :: MetricDatum -> Maybe [Double]

-- | The statistical values for the metric.
[$sel:statisticValues:MetricDatum'] :: MetricDatum -> Maybe StatisticSet

-- | The time the metric data was received, expressed as the number of
--   milliseconds since Jan 1, 1970 00:00:00 UTC.
[$sel:timestamp:MetricDatum'] :: MetricDatum -> Maybe ISO8601

-- | The value for the metric.
--   
--   Although the parameter accepts numbers of type Double, CloudWatch
--   rejects values that are either too small or too large. Values must be
--   in the range of -2^360 to 2^360. In addition, special values (for
--   example, NaN, +Infinity, -Infinity) are not supported.
[$sel:value:MetricDatum'] :: MetricDatum -> Maybe Double

-- | The dimensions associated with the metric.
[$sel:dimensions:MetricDatum'] :: MetricDatum -> Maybe [Dimension]

-- | The name of the metric.
[$sel:metricName:MetricDatum'] :: MetricDatum -> Text

-- | Create a value of <a>MetricDatum</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageResolution:MetricDatum'</a>,
--   <a>metricDatum_storageResolution</a> - Valid values are 1 and 60.
--   Setting this to 1 specifies this metric as a high-resolution metric,
--   so that CloudWatch stores the metric with sub-minute resolution down
--   to one second. Setting this to 60 specifies this metric as a
--   regular-resolution metric, which CloudWatch stores at 1-minute
--   resolution. Currently, high resolution is available only for custom
--   metrics. For more information about high-resolution metrics, see
--   <a>High-Resolution Metrics</a> in the <i>Amazon CloudWatch User
--   Guide</i>.
--   
--   This field is optional, if you do not specify it the default of 60 is
--   used.
--   
--   <a>$sel:unit:MetricDatum'</a>, <a>metricDatum_unit</a> - When you are
--   using a <tt>Put</tt> operation, this defines what unit you want to use
--   when storing the metric.
--   
--   In a <tt>Get</tt> operation, this displays the unit that is used for
--   the metric.
--   
--   <a>$sel:values:MetricDatum'</a>, <a>metricDatum_values</a> - Array of
--   numbers representing the values for the metric during the period. Each
--   unique value is listed just once in this array, and the corresponding
--   number in the <tt>Counts</tt> array specifies the number of times that
--   value occurred during the period. You can include up to 150 unique
--   values in each <tt>PutMetricData</tt> action that specifies a
--   <tt>Values</tt> array.
--   
--   Although the <tt>Values</tt> array accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
--   
--   <a>$sel:counts:MetricDatum'</a>, <a>metricDatum_counts</a> - Array of
--   numbers that is used along with the <tt>Values</tt> array. Each number
--   in the <tt>Count</tt> array is the number of times the corresponding
--   value in the <tt>Values</tt> array occurred during the period.
--   
--   If you omit the <tt>Counts</tt> array, the default of 1 is used as the
--   value for each count. If you include a <tt>Counts</tt> array, it must
--   include the same amount of values as the <tt>Values</tt> array.
--   
--   <a>$sel:statisticValues:MetricDatum'</a>,
--   <a>metricDatum_statisticValues</a> - The statistical values for the
--   metric.
--   
--   <a>$sel:timestamp:MetricDatum'</a>, <a>metricDatum_timestamp</a> - The
--   time the metric data was received, expressed as the number of
--   milliseconds since Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:value:MetricDatum'</a>, <a>metricDatum_value</a> - The value
--   for the metric.
--   
--   Although the parameter accepts numbers of type Double, CloudWatch
--   rejects values that are either too small or too large. Values must be
--   in the range of -2^360 to 2^360. In addition, special values (for
--   example, NaN, +Infinity, -Infinity) are not supported.
--   
--   <a>$sel:dimensions:MetricDatum'</a>, <a>metricDatum_dimensions</a> -
--   The dimensions associated with the metric.
--   
--   <a>$sel:metricName:MetricDatum'</a>, <a>metricDatum_metricName</a> -
--   The name of the metric.
newMetricDatum :: Text -> MetricDatum

-- | Valid values are 1 and 60. Setting this to 1 specifies this metric as
--   a high-resolution metric, so that CloudWatch stores the metric with
--   sub-minute resolution down to one second. Setting this to 60 specifies
--   this metric as a regular-resolution metric, which CloudWatch stores at
--   1-minute resolution. Currently, high resolution is available only for
--   custom metrics. For more information about high-resolution metrics,
--   see <a>High-Resolution Metrics</a> in the <i>Amazon CloudWatch User
--   Guide</i>.
--   
--   This field is optional, if you do not specify it the default of 60 is
--   used.
metricDatum_storageResolution :: Lens' MetricDatum (Maybe Natural)

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, this displays the unit that is used for
--   the metric.
metricDatum_unit :: Lens' MetricDatum (Maybe StandardUnit)

-- | Array of numbers representing the values for the metric during the
--   period. Each unique value is listed just once in this array, and the
--   corresponding number in the <tt>Counts</tt> array specifies the number
--   of times that value occurred during the period. You can include up to
--   150 unique values in each <tt>PutMetricData</tt> action that specifies
--   a <tt>Values</tt> array.
--   
--   Although the <tt>Values</tt> array accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
metricDatum_values :: Lens' MetricDatum (Maybe [Double])

-- | Array of numbers that is used along with the <tt>Values</tt> array.
--   Each number in the <tt>Count</tt> array is the number of times the
--   corresponding value in the <tt>Values</tt> array occurred during the
--   period.
--   
--   If you omit the <tt>Counts</tt> array, the default of 1 is used as the
--   value for each count. If you include a <tt>Counts</tt> array, it must
--   include the same amount of values as the <tt>Values</tt> array.
metricDatum_counts :: Lens' MetricDatum (Maybe [Double])

-- | The statistical values for the metric.
metricDatum_statisticValues :: Lens' MetricDatum (Maybe StatisticSet)

-- | The time the metric data was received, expressed as the number of
--   milliseconds since Jan 1, 1970 00:00:00 UTC.
metricDatum_timestamp :: Lens' MetricDatum (Maybe UTCTime)

-- | The value for the metric.
--   
--   Although the parameter accepts numbers of type Double, CloudWatch
--   rejects values that are either too small or too large. Values must be
--   in the range of -2^360 to 2^360. In addition, special values (for
--   example, NaN, +Infinity, -Infinity) are not supported.
metricDatum_value :: Lens' MetricDatum (Maybe Double)

-- | The dimensions associated with the metric.
metricDatum_dimensions :: Lens' MetricDatum (Maybe [Dimension])

-- | The name of the metric.
metricDatum_metricName :: Lens' MetricDatum Text
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MetricDatum.MetricDatum
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MetricDatum.MetricDatum
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MetricDatum.MetricDatum
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MetricDatum.MetricDatum
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MetricDatum.MetricDatum
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MetricDatum.MetricDatum
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.MetricDatum.MetricDatum


module Network.AWS.CloudWatch.Types.StatusCode
newtype StatusCode
StatusCode' :: Text -> StatusCode
[fromStatusCode] :: StatusCode -> Text
pattern StatusCode_Complete :: StatusCode
pattern StatusCode_InternalError :: StatusCode
pattern StatusCode_PartialData :: StatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance GHC.Classes.Ord Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance GHC.Read.Read Network.AWS.CloudWatch.Types.StatusCode.StatusCode
instance GHC.Show.Show Network.AWS.CloudWatch.Types.StatusCode.StatusCode


module Network.AWS.CloudWatch.Types.MetricDataResult

-- | A <tt>GetMetricData</tt> call returns an array of
--   <tt>MetricDataResult</tt> structures. Each of these structures
--   includes the data points for that metric, along with the timestamps of
--   those data points and other identifying information.
--   
--   <i>See:</i> <a>newMetricDataResult</a> smart constructor.
data MetricDataResult
MetricDataResult' :: Maybe [Double] -> Maybe Text -> Maybe [ISO8601] -> Maybe StatusCode -> Maybe Text -> Maybe [MessageData] -> MetricDataResult

-- | The data points for the metric corresponding to <tt>Timestamps</tt>.
--   The number of values always matches the number of timestamps and the
--   timestamp for Values[x] is Timestamps[x].
[$sel:values:MetricDataResult'] :: MetricDataResult -> Maybe [Double]

-- | The short name you specified to represent this metric.
[$sel:id:MetricDataResult'] :: MetricDataResult -> Maybe Text

-- | The timestamps for the data points, formatted in Unix timestamp
--   format. The number of timestamps always matches the number of values
--   and the value for Timestamps[x] is Values[x].
[$sel:timestamps:MetricDataResult'] :: MetricDataResult -> Maybe [ISO8601]

-- | The status of the returned data. <tt>Complete</tt> indicates that all
--   data points in the requested time range were returned.
--   <tt>PartialData</tt> means that an incomplete set of data points were
--   returned. You can use the <tt>NextToken</tt> value that was returned
--   and repeat your request to get more data points. <tt>NextToken</tt> is
--   not returned if you are performing a math expression.
--   <tt>InternalError</tt> indicates that an error occurred. Retry your
--   request using <tt>NextToken</tt>, if present.
[$sel:statusCode:MetricDataResult'] :: MetricDataResult -> Maybe StatusCode

-- | The human-readable label associated with the data.
[$sel:label:MetricDataResult'] :: MetricDataResult -> Maybe Text

-- | A list of messages with additional information about the data
--   returned.
[$sel:messages:MetricDataResult'] :: MetricDataResult -> Maybe [MessageData]

-- | Create a value of <a>MetricDataResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:MetricDataResult'</a>, <a>metricDataResult_values</a> -
--   The data points for the metric corresponding to <tt>Timestamps</tt>.
--   The number of values always matches the number of timestamps and the
--   timestamp for Values[x] is Timestamps[x].
--   
--   <a>$sel:id:MetricDataResult'</a>, <a>metricDataResult_id</a> - The
--   short name you specified to represent this metric.
--   
--   <a>$sel:timestamps:MetricDataResult'</a>,
--   <a>metricDataResult_timestamps</a> - The timestamps for the data
--   points, formatted in Unix timestamp format. The number of timestamps
--   always matches the number of values and the value for Timestamps[x] is
--   Values[x].
--   
--   <a>$sel:statusCode:MetricDataResult'</a>,
--   <a>metricDataResult_statusCode</a> - The status of the returned data.
--   <tt>Complete</tt> indicates that all data points in the requested time
--   range were returned. <tt>PartialData</tt> means that an incomplete set
--   of data points were returned. You can use the <tt>NextToken</tt> value
--   that was returned and repeat your request to get more data points.
--   <tt>NextToken</tt> is not returned if you are performing a math
--   expression. <tt>InternalError</tt> indicates that an error occurred.
--   Retry your request using <tt>NextToken</tt>, if present.
--   
--   <a>$sel:label:MetricDataResult'</a>, <a>metricDataResult_label</a> -
--   The human-readable label associated with the data.
--   
--   <a>$sel:messages:MetricDataResult'</a>,
--   <a>metricDataResult_messages</a> - A list of messages with additional
--   information about the data returned.
newMetricDataResult :: MetricDataResult

-- | The data points for the metric corresponding to <tt>Timestamps</tt>.
--   The number of values always matches the number of timestamps and the
--   timestamp for Values[x] is Timestamps[x].
metricDataResult_values :: Lens' MetricDataResult (Maybe [Double])

-- | The short name you specified to represent this metric.
metricDataResult_id :: Lens' MetricDataResult (Maybe Text)

-- | The timestamps for the data points, formatted in Unix timestamp
--   format. The number of timestamps always matches the number of values
--   and the value for Timestamps[x] is Values[x].
metricDataResult_timestamps :: Lens' MetricDataResult (Maybe [UTCTime])

-- | The status of the returned data. <tt>Complete</tt> indicates that all
--   data points in the requested time range were returned.
--   <tt>PartialData</tt> means that an incomplete set of data points were
--   returned. You can use the <tt>NextToken</tt> value that was returned
--   and repeat your request to get more data points. <tt>NextToken</tt> is
--   not returned if you are performing a math expression.
--   <tt>InternalError</tt> indicates that an error occurred. Retry your
--   request using <tt>NextToken</tt>, if present.
metricDataResult_statusCode :: Lens' MetricDataResult (Maybe StatusCode)

-- | The human-readable label associated with the data.
metricDataResult_label :: Lens' MetricDataResult (Maybe Text)

-- | A list of messages with additional information about the data
--   returned.
metricDataResult_messages :: Lens' MetricDataResult (Maybe [MessageData])
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.MetricDataResult.MetricDataResult
instance GHC.Show.Show Network.AWS.CloudWatch.Types.MetricDataResult.MetricDataResult
instance GHC.Read.Read Network.AWS.CloudWatch.Types.MetricDataResult.MetricDataResult
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.MetricDataResult.MetricDataResult
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.MetricDataResult.MetricDataResult
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.MetricDataResult.MetricDataResult
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.MetricDataResult.MetricDataResult


module Network.AWS.CloudWatch.Types.Tag

-- | A key-value pair associated with a CloudWatch resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A string that you can use to assign a value. The combination of tag
--   keys and values can help you organize and categorize your resources.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for the specified tag key.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A string that you can use to
--   assign a value. The combination of tag keys and values can help you
--   organize and categorize your resources.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag key.
newTag :: Text -> Text -> Tag

-- | A string that you can use to assign a value. The combination of tag
--   keys and values can help you organize and categorize your resources.
tag_key :: Lens' Tag Text

-- | The value for the specified tag key.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.CloudWatch.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.CloudWatch.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.CloudWatch.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.CloudWatch.Types.Tag.Tag
instance Network.AWS.Data.XML.FromXML Network.AWS.CloudWatch.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.Types.Tag.Tag
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.Types.Tag.Tag


module Network.AWS.CloudWatch.Types

-- | API version <tt>2010-08-01</tt> of the Amazon CloudWatch SDK
--   configuration.
defaultService :: Service

-- | The specified dashboard does not exist.
_DashboardNotFoundError :: AsError a => Getting (First ServiceError) a ServiceError

-- | The quota for alarms for this customer has already been reached.
_LimitExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Parameters were used together that cannot be used together.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Some part of the dashboard data is invalid.
_DashboardInvalidInputError :: AsError a => Getting (First ServiceError) a ServiceError

-- | An input parameter that is required is missing.
_MissingRequiredParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Request processing has failed due to some unknown error, exception, or
--   failure.
_InternalServiceFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | More than one process tried to modify a resource at the same time.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value of an input parameter is bad or out-of-range.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation exceeded one or more limits.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The named resource does not exist.
_ResourceNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The named resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Data was not syntactically valid JSON.
_InvalidFormatFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The next token specified is invalid.
_InvalidNextToken :: AsError a => Getting (First ServiceError) a ServiceError
newtype AlarmType
AlarmType' :: Text -> AlarmType
[fromAlarmType] :: AlarmType -> Text
pattern AlarmType_CompositeAlarm :: AlarmType
pattern AlarmType_MetricAlarm :: AlarmType
newtype AnomalyDetectorStateValue
AnomalyDetectorStateValue' :: Text -> AnomalyDetectorStateValue
[fromAnomalyDetectorStateValue] :: AnomalyDetectorStateValue -> Text
pattern AnomalyDetectorStateValue_PENDING_TRAINING :: AnomalyDetectorStateValue
pattern AnomalyDetectorStateValue_TRAINED :: AnomalyDetectorStateValue
pattern AnomalyDetectorStateValue_TRAINED_INSUFFICIENT_DATA :: AnomalyDetectorStateValue
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_GreaterThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanUpperThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanLowerOrGreaterThanUpperThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanLowerThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanThreshold :: ComparisonOperator
newtype HistoryItemType
HistoryItemType' :: Text -> HistoryItemType
[fromHistoryItemType] :: HistoryItemType -> Text
pattern HistoryItemType_Action :: HistoryItemType
pattern HistoryItemType_ConfigurationUpdate :: HistoryItemType
pattern HistoryItemType_StateUpdate :: HistoryItemType
newtype MetricStreamOutputFormat
MetricStreamOutputFormat' :: Text -> MetricStreamOutputFormat
[fromMetricStreamOutputFormat] :: MetricStreamOutputFormat -> Text
pattern MetricStreamOutputFormat_Json :: MetricStreamOutputFormat
pattern MetricStreamOutputFormat_Opentelemetry0_7 :: MetricStreamOutputFormat
newtype RecentlyActive
RecentlyActive' :: Text -> RecentlyActive
[fromRecentlyActive] :: RecentlyActive -> Text
pattern RecentlyActive_PT3H :: RecentlyActive
newtype ScanBy
ScanBy' :: Text -> ScanBy
[fromScanBy] :: ScanBy -> Text
pattern ScanBy_TimestampAscending :: ScanBy
pattern ScanBy_TimestampDescending :: ScanBy
newtype StandardUnit
StandardUnit' :: Text -> StandardUnit
[fromStandardUnit] :: StandardUnit -> Text
pattern StandardUnit_Bits :: StandardUnit
pattern StandardUnit_Bits_Second :: StandardUnit
pattern StandardUnit_Bytes :: StandardUnit
pattern StandardUnit_Bytes_Second :: StandardUnit
pattern StandardUnit_Count :: StandardUnit
pattern StandardUnit_Count_Second :: StandardUnit
pattern StandardUnit_Gigabits :: StandardUnit
pattern StandardUnit_Gigabits_Second :: StandardUnit
pattern StandardUnit_Gigabytes :: StandardUnit
pattern StandardUnit_Gigabytes_Second :: StandardUnit
pattern StandardUnit_Kilobits :: StandardUnit
pattern StandardUnit_Kilobits_Second :: StandardUnit
pattern StandardUnit_Kilobytes :: StandardUnit
pattern StandardUnit_Kilobytes_Second :: StandardUnit
pattern StandardUnit_Megabits :: StandardUnit
pattern StandardUnit_Megabits_Second :: StandardUnit
pattern StandardUnit_Megabytes :: StandardUnit
pattern StandardUnit_Megabytes_Second :: StandardUnit
pattern StandardUnit_Microseconds :: StandardUnit
pattern StandardUnit_Milliseconds :: StandardUnit
pattern StandardUnit_None :: StandardUnit
pattern StandardUnit_Percent :: StandardUnit
pattern StandardUnit_Seconds :: StandardUnit
pattern StandardUnit_Terabits :: StandardUnit
pattern StandardUnit_Terabits_Second :: StandardUnit
pattern StandardUnit_Terabytes :: StandardUnit
pattern StandardUnit_Terabytes_Second :: StandardUnit
newtype StateValue
StateValue' :: Text -> StateValue
[fromStateValue] :: StateValue -> Text
pattern StateValue_ALARM :: StateValue
pattern StateValue_INSUFFICIENT_DATA :: StateValue
pattern StateValue_OK :: StateValue
newtype Statistic
Statistic' :: Text -> Statistic
[fromStatistic] :: Statistic -> Text
pattern Statistic_Average :: Statistic
pattern Statistic_Maximum :: Statistic
pattern Statistic_Minimum :: Statistic
pattern Statistic_SampleCount :: Statistic
pattern Statistic_Sum :: Statistic
newtype StatusCode
StatusCode' :: Text -> StatusCode
[fromStatusCode] :: StatusCode -> Text
pattern StatusCode_Complete :: StatusCode
pattern StatusCode_InternalError :: StatusCode
pattern StatusCode_PartialData :: StatusCode

-- | Represents the history of a specific alarm.
--   
--   <i>See:</i> <a>newAlarmHistoryItem</a> smart constructor.
data AlarmHistoryItem
AlarmHistoryItem' :: Maybe Text -> Maybe HistoryItemType -> Maybe Text -> Maybe ISO8601 -> Maybe AlarmType -> Maybe Text -> AlarmHistoryItem

-- | A summary of the alarm history, in text format.
[$sel:historySummary:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe Text

-- | The type of alarm history item.
[$sel:historyItemType:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe HistoryItemType

-- | The descriptive name for the alarm.
[$sel:alarmName:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe Text

-- | The time stamp for the alarm history item.
[$sel:timestamp:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe ISO8601

-- | The type of alarm, either metric alarm or composite alarm.
[$sel:alarmType:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe AlarmType

-- | Data about the alarm, in JSON format.
[$sel:historyData:AlarmHistoryItem'] :: AlarmHistoryItem -> Maybe Text

-- | Create a value of <a>AlarmHistoryItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:historySummary:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historySummary</a> - A summary of the alarm
--   history, in text format.
--   
--   <a>$sel:historyItemType:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historyItemType</a> - The type of alarm history
--   item.
--   
--   <a>$sel:alarmName:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_alarmName</a> - The descriptive name for the
--   alarm.
--   
--   <a>$sel:timestamp:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_timestamp</a> - The time stamp for the alarm
--   history item.
--   
--   <a>$sel:alarmType:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_alarmType</a> - The type of alarm, either metric
--   alarm or composite alarm.
--   
--   <a>$sel:historyData:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historyData</a> - Data about the alarm, in JSON
--   format.
newAlarmHistoryItem :: AlarmHistoryItem

-- | A summary of the alarm history, in text format.
alarmHistoryItem_historySummary :: Lens' AlarmHistoryItem (Maybe Text)

-- | The type of alarm history item.
alarmHistoryItem_historyItemType :: Lens' AlarmHistoryItem (Maybe HistoryItemType)

-- | The descriptive name for the alarm.
alarmHistoryItem_alarmName :: Lens' AlarmHistoryItem (Maybe Text)

-- | The time stamp for the alarm history item.
alarmHistoryItem_timestamp :: Lens' AlarmHistoryItem (Maybe UTCTime)

-- | The type of alarm, either metric alarm or composite alarm.
alarmHistoryItem_alarmType :: Lens' AlarmHistoryItem (Maybe AlarmType)

-- | Data about the alarm, in JSON format.
alarmHistoryItem_historyData :: Lens' AlarmHistoryItem (Maybe Text)

-- | An anomaly detection model associated with a particular CloudWatch
--   metric and statistic. You can use the model to display a band of
--   expected normal values when the metric is graphed.
--   
--   <i>See:</i> <a>newAnomalyDetector</a> smart constructor.
data AnomalyDetector
AnomalyDetector' :: Maybe Text -> Maybe AnomalyDetectorConfiguration -> Maybe AnomalyDetectorStateValue -> Maybe Text -> Maybe [Dimension] -> Maybe Text -> AnomalyDetector

-- | The name of the metric associated with the anomaly detection model.
[$sel:metricName:AnomalyDetector'] :: AnomalyDetector -> Maybe Text

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude from use for
--   training the model, and the time zone to use for the metric.
[$sel:configuration:AnomalyDetector'] :: AnomalyDetector -> Maybe AnomalyDetectorConfiguration

-- | The current status of the anomaly detector's training. The possible
--   values are <tt>TRAINED | PENDING_TRAINING |
--   TRAINED_INSUFFICIENT_DATA</tt>
[$sel:stateValue:AnomalyDetector'] :: AnomalyDetector -> Maybe AnomalyDetectorStateValue

-- | The namespace of the metric associated with the anomaly detection
--   model.
[$sel:namespace:AnomalyDetector'] :: AnomalyDetector -> Maybe Text

-- | The metric dimensions associated with the anomaly detection model.
[$sel:dimensions:AnomalyDetector'] :: AnomalyDetector -> Maybe [Dimension]

-- | The statistic associated with the anomaly detection model.
[$sel:stat:AnomalyDetector'] :: AnomalyDetector -> Maybe Text

-- | Create a value of <a>AnomalyDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:AnomalyDetector'</a>,
--   <a>anomalyDetector_metricName</a> - The name of the metric associated
--   with the anomaly detection model.
--   
--   <a>$sel:configuration:AnomalyDetector'</a>,
--   <a>anomalyDetector_configuration</a> - The configuration specifies
--   details about how the anomaly detection model is to be trained,
--   including time ranges to exclude from use for training the model, and
--   the time zone to use for the metric.
--   
--   <a>$sel:stateValue:AnomalyDetector'</a>,
--   <a>anomalyDetector_stateValue</a> - The current status of the anomaly
--   detector's training. The possible values are <tt>TRAINED |
--   PENDING_TRAINING | TRAINED_INSUFFICIENT_DATA</tt>
--   
--   <a>$sel:namespace:AnomalyDetector'</a>,
--   <a>anomalyDetector_namespace</a> - The namespace of the metric
--   associated with the anomaly detection model.
--   
--   <a>$sel:dimensions:AnomalyDetector'</a>,
--   <a>anomalyDetector_dimensions</a> - The metric dimensions associated
--   with the anomaly detection model.
--   
--   <a>$sel:stat:AnomalyDetector'</a>, <a>anomalyDetector_stat</a> - The
--   statistic associated with the anomaly detection model.
newAnomalyDetector :: AnomalyDetector

-- | The name of the metric associated with the anomaly detection model.
anomalyDetector_metricName :: Lens' AnomalyDetector (Maybe Text)

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude from use for
--   training the model, and the time zone to use for the metric.
anomalyDetector_configuration :: Lens' AnomalyDetector (Maybe AnomalyDetectorConfiguration)

-- | The current status of the anomaly detector's training. The possible
--   values are <tt>TRAINED | PENDING_TRAINING |
--   TRAINED_INSUFFICIENT_DATA</tt>
anomalyDetector_stateValue :: Lens' AnomalyDetector (Maybe AnomalyDetectorStateValue)

-- | The namespace of the metric associated with the anomaly detection
--   model.
anomalyDetector_namespace :: Lens' AnomalyDetector (Maybe Text)

-- | The metric dimensions associated with the anomaly detection model.
anomalyDetector_dimensions :: Lens' AnomalyDetector (Maybe [Dimension])

-- | The statistic associated with the anomaly detection model.
anomalyDetector_stat :: Lens' AnomalyDetector (Maybe Text)

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude from use for
--   training the model and the time zone to use for the metric.
--   
--   <i>See:</i> <a>newAnomalyDetectorConfiguration</a> smart constructor.
data AnomalyDetectorConfiguration
AnomalyDetectorConfiguration' :: Maybe Text -> Maybe [Range] -> AnomalyDetectorConfiguration

-- | The time zone to use for the metric. This is useful to enable the
--   model to automatically account for daylight savings time changes if
--   the metric is sensitive to such time changes.
--   
--   To specify a time zone, use the name of the time zone as specified in
--   the standard tz database. For more information, see <a>tz
--   database</a>.
[$sel:metricTimezone:AnomalyDetectorConfiguration'] :: AnomalyDetectorConfiguration -> Maybe Text

-- | An array of time ranges to exclude from use when the anomaly detection
--   model is trained. Use this to make sure that events that could cause
--   unusual values for the metric, such as deployments, aren't used when
--   CloudWatch creates the model.
[$sel:excludedTimeRanges:AnomalyDetectorConfiguration'] :: AnomalyDetectorConfiguration -> Maybe [Range]

-- | Create a value of <a>AnomalyDetectorConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricTimezone:AnomalyDetectorConfiguration'</a>,
--   <a>anomalyDetectorConfiguration_metricTimezone</a> - The time zone to
--   use for the metric. This is useful to enable the model to
--   automatically account for daylight savings time changes if the metric
--   is sensitive to such time changes.
--   
--   To specify a time zone, use the name of the time zone as specified in
--   the standard tz database. For more information, see <a>tz
--   database</a>.
--   
--   <a>$sel:excludedTimeRanges:AnomalyDetectorConfiguration'</a>,
--   <a>anomalyDetectorConfiguration_excludedTimeRanges</a> - An array of
--   time ranges to exclude from use when the anomaly detection model is
--   trained. Use this to make sure that events that could cause unusual
--   values for the metric, such as deployments, aren't used when
--   CloudWatch creates the model.
newAnomalyDetectorConfiguration :: AnomalyDetectorConfiguration

-- | The time zone to use for the metric. This is useful to enable the
--   model to automatically account for daylight savings time changes if
--   the metric is sensitive to such time changes.
--   
--   To specify a time zone, use the name of the time zone as specified in
--   the standard tz database. For more information, see <a>tz
--   database</a>.
anomalyDetectorConfiguration_metricTimezone :: Lens' AnomalyDetectorConfiguration (Maybe Text)

-- | An array of time ranges to exclude from use when the anomaly detection
--   model is trained. Use this to make sure that events that could cause
--   unusual values for the metric, such as deployments, aren't used when
--   CloudWatch creates the model.
anomalyDetectorConfiguration_excludedTimeRanges :: Lens' AnomalyDetectorConfiguration (Maybe [Range])

-- | The details about a composite alarm.
--   
--   <i>See:</i> <a>newCompositeAlarm</a> smart constructor.
data CompositeAlarm
CompositeAlarm' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe StateValue -> Maybe ISO8601 -> Maybe [Text] -> Maybe Bool -> Maybe ISO8601 -> Maybe Text -> CompositeAlarm

-- | The actions to execute when this alarm transitions to the ALARM state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
[$sel:alarmActions:CompositeAlarm'] :: CompositeAlarm -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the alarm.
[$sel:alarmArn:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | An explanation for the alarm state, in text format.
[$sel:stateReason:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | An explanation for the alarm state, in JSON format.
[$sel:stateReasonData:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | The actions to execute when this alarm transitions to the
--   INSUFFICIENT_DATA state from any other state. Each action is specified
--   as an Amazon Resource Name (ARN).
[$sel:insufficientDataActions:CompositeAlarm'] :: CompositeAlarm -> Maybe [Text]

-- | The rule that this alarm uses to evaluate its alarm state.
[$sel:alarmRule:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | The name of the alarm.
[$sel:alarmName:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | The state value for the alarm.
[$sel:stateValue:CompositeAlarm'] :: CompositeAlarm -> Maybe StateValue

-- | The time stamp of the last update to the alarm state.
[$sel:stateUpdatedTimestamp:CompositeAlarm'] :: CompositeAlarm -> Maybe ISO8601

-- | The actions to execute when this alarm transitions to the OK state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
[$sel:oKActions:CompositeAlarm'] :: CompositeAlarm -> Maybe [Text]

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
[$sel:actionsEnabled:CompositeAlarm'] :: CompositeAlarm -> Maybe Bool

-- | The time stamp of the last update to the alarm configuration.
[$sel:alarmConfigurationUpdatedTimestamp:CompositeAlarm'] :: CompositeAlarm -> Maybe ISO8601

-- | The description of the alarm.
[$sel:alarmDescription:CompositeAlarm'] :: CompositeAlarm -> Maybe Text

-- | Create a value of <a>CompositeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmActions:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmActions</a> - The actions to execute when this
--   alarm transitions to the ALARM state from any other state. Each action
--   is specified as an Amazon Resource Name (ARN).
--   
--   <a>$sel:alarmArn:CompositeAlarm'</a>, <a>compositeAlarm_alarmArn</a> -
--   The Amazon Resource Name (ARN) of the alarm.
--   
--   <a>$sel:stateReason:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateReason</a> - An explanation for the alarm
--   state, in text format.
--   
--   <a>$sel:stateReasonData:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateReasonData</a> - An explanation for the alarm
--   state, in JSON format.
--   
--   <a>$sel:insufficientDataActions:CompositeAlarm'</a>,
--   <a>compositeAlarm_insufficientDataActions</a> - The actions to execute
--   when this alarm transitions to the INSUFFICIENT_DATA state from any
--   other state. Each action is specified as an Amazon Resource Name
--   (ARN).
--   
--   <a>$sel:alarmRule:CompositeAlarm'</a>, <a>compositeAlarm_alarmRule</a>
--   - The rule that this alarm uses to evaluate its alarm state.
--   
--   <a>$sel:alarmName:CompositeAlarm'</a>, <a>compositeAlarm_alarmName</a>
--   - The name of the alarm.
--   
--   <a>$sel:stateValue:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateValue</a> - The state value for the alarm.
--   
--   <a>$sel:stateUpdatedTimestamp:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateUpdatedTimestamp</a> - The time stamp of the
--   last update to the alarm state.
--   
--   <a>$sel:oKActions:CompositeAlarm'</a>, <a>compositeAlarm_oKActions</a>
--   - The actions to execute when this alarm transitions to the OK state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
--   
--   <a>$sel:actionsEnabled:CompositeAlarm'</a>,
--   <a>compositeAlarm_actionsEnabled</a> - Indicates whether actions
--   should be executed during any changes to the alarm state.
--   
--   <a>$sel:alarmConfigurationUpdatedTimestamp:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmConfigurationUpdatedTimestamp</a> - The time
--   stamp of the last update to the alarm configuration.
--   
--   <a>$sel:alarmDescription:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmDescription</a> - The description of the alarm.
newCompositeAlarm :: CompositeAlarm

-- | The actions to execute when this alarm transitions to the ALARM state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
compositeAlarm_alarmActions :: Lens' CompositeAlarm (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the alarm.
compositeAlarm_alarmArn :: Lens' CompositeAlarm (Maybe Text)

-- | An explanation for the alarm state, in text format.
compositeAlarm_stateReason :: Lens' CompositeAlarm (Maybe Text)

-- | An explanation for the alarm state, in JSON format.
compositeAlarm_stateReasonData :: Lens' CompositeAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   INSUFFICIENT_DATA state from any other state. Each action is specified
--   as an Amazon Resource Name (ARN).
compositeAlarm_insufficientDataActions :: Lens' CompositeAlarm (Maybe [Text])

-- | The rule that this alarm uses to evaluate its alarm state.
compositeAlarm_alarmRule :: Lens' CompositeAlarm (Maybe Text)

-- | The name of the alarm.
compositeAlarm_alarmName :: Lens' CompositeAlarm (Maybe Text)

-- | The state value for the alarm.
compositeAlarm_stateValue :: Lens' CompositeAlarm (Maybe StateValue)

-- | The time stamp of the last update to the alarm state.
compositeAlarm_stateUpdatedTimestamp :: Lens' CompositeAlarm (Maybe UTCTime)

-- | The actions to execute when this alarm transitions to the OK state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
compositeAlarm_oKActions :: Lens' CompositeAlarm (Maybe [Text])

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
compositeAlarm_actionsEnabled :: Lens' CompositeAlarm (Maybe Bool)

-- | The time stamp of the last update to the alarm configuration.
compositeAlarm_alarmConfigurationUpdatedTimestamp :: Lens' CompositeAlarm (Maybe UTCTime)

-- | The description of the alarm.
compositeAlarm_alarmDescription :: Lens' CompositeAlarm (Maybe Text)

-- | Represents a specific dashboard.
--   
--   <i>See:</i> <a>newDashboardEntry</a> smart constructor.
data DashboardEntry
DashboardEntry' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Integer -> DashboardEntry

-- | The Amazon Resource Name (ARN) of the dashboard.
[$sel:dashboardArn:DashboardEntry'] :: DashboardEntry -> Maybe Text

-- | The name of the dashboard.
[$sel:dashboardName:DashboardEntry'] :: DashboardEntry -> Maybe Text

-- | The time stamp of when the dashboard was last modified, either by an
--   API call or through the console. This number is expressed as the
--   number of milliseconds since Jan 1, 1970 00:00:00 UTC.
[$sel:lastModified:DashboardEntry'] :: DashboardEntry -> Maybe ISO8601

-- | The size of the dashboard, in bytes.
[$sel:size:DashboardEntry'] :: DashboardEntry -> Maybe Integer

-- | Create a value of <a>DashboardEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardArn:DashboardEntry'</a>,
--   <a>dashboardEntry_dashboardArn</a> - The Amazon Resource Name (ARN) of
--   the dashboard.
--   
--   <a>$sel:dashboardName:DashboardEntry'</a>,
--   <a>dashboardEntry_dashboardName</a> - The name of the dashboard.
--   
--   <a>$sel:lastModified:DashboardEntry'</a>,
--   <a>dashboardEntry_lastModified</a> - The time stamp of when the
--   dashboard was last modified, either by an API call or through the
--   console. This number is expressed as the number of milliseconds since
--   Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:size:DashboardEntry'</a>, <a>dashboardEntry_size</a> - The
--   size of the dashboard, in bytes.
newDashboardEntry :: DashboardEntry

-- | The Amazon Resource Name (ARN) of the dashboard.
dashboardEntry_dashboardArn :: Lens' DashboardEntry (Maybe Text)

-- | The name of the dashboard.
dashboardEntry_dashboardName :: Lens' DashboardEntry (Maybe Text)

-- | The time stamp of when the dashboard was last modified, either by an
--   API call or through the console. This number is expressed as the
--   number of milliseconds since Jan 1, 1970 00:00:00 UTC.
dashboardEntry_lastModified :: Lens' DashboardEntry (Maybe UTCTime)

-- | The size of the dashboard, in bytes.
dashboardEntry_size :: Lens' DashboardEntry (Maybe Integer)

-- | An error or warning for the operation.
--   
--   <i>See:</i> <a>newDashboardValidationMessage</a> smart constructor.
data DashboardValidationMessage
DashboardValidationMessage' :: Maybe Text -> Maybe Text -> DashboardValidationMessage

-- | A message describing the error or warning.
[$sel:message:DashboardValidationMessage'] :: DashboardValidationMessage -> Maybe Text

-- | The data path related to the message.
[$sel:dataPath:DashboardValidationMessage'] :: DashboardValidationMessage -> Maybe Text

-- | Create a value of <a>DashboardValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:DashboardValidationMessage'</a>,
--   <a>dashboardValidationMessage_message</a> - A message describing the
--   error or warning.
--   
--   <a>$sel:dataPath:DashboardValidationMessage'</a>,
--   <a>dashboardValidationMessage_dataPath</a> - The data path related to
--   the message.
newDashboardValidationMessage :: DashboardValidationMessage

-- | A message describing the error or warning.
dashboardValidationMessage_message :: Lens' DashboardValidationMessage (Maybe Text)

-- | The data path related to the message.
dashboardValidationMessage_dataPath :: Lens' DashboardValidationMessage (Maybe Text)

-- | Encapsulates the statistical data that CloudWatch computes from metric
--   data.
--   
--   <i>See:</i> <a>newDatapoint</a> smart constructor.
data Datapoint
Datapoint' :: Maybe StandardUnit -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe ISO8601 -> Maybe Double -> Maybe Double -> Maybe (HashMap Text Double) -> Datapoint

-- | The standard unit for the data point.
[$sel:unit:Datapoint'] :: Datapoint -> Maybe StandardUnit

-- | The minimum metric value for the data point.
[$sel:minimum:Datapoint'] :: Datapoint -> Maybe Double

-- | The sum of the metric values for the data point.
[$sel:sum:Datapoint'] :: Datapoint -> Maybe Double

-- | The number of metric values that contributed to the aggregate value of
--   this data point.
[$sel:sampleCount:Datapoint'] :: Datapoint -> Maybe Double

-- | The time stamp used for the data point.
[$sel:timestamp:Datapoint'] :: Datapoint -> Maybe ISO8601

-- | The average of the metric values that correspond to the data point.
[$sel:average:Datapoint'] :: Datapoint -> Maybe Double

-- | The maximum metric value for the data point.
[$sel:maximum:Datapoint'] :: Datapoint -> Maybe Double

-- | The percentile statistic for the data point.
[$sel:extendedStatistics:Datapoint'] :: Datapoint -> Maybe (HashMap Text Double)

-- | Create a value of <a>Datapoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:Datapoint'</a>, <a>datapoint_unit</a> - The standard unit
--   for the data point.
--   
--   <a>$sel:minimum:Datapoint'</a>, <a>datapoint_minimum</a> - The minimum
--   metric value for the data point.
--   
--   <a>$sel:sum:Datapoint'</a>, <a>datapoint_sum</a> - The sum of the
--   metric values for the data point.
--   
--   <a>$sel:sampleCount:Datapoint'</a>, <a>datapoint_sampleCount</a> - The
--   number of metric values that contributed to the aggregate value of
--   this data point.
--   
--   <a>$sel:timestamp:Datapoint'</a>, <a>datapoint_timestamp</a> - The
--   time stamp used for the data point.
--   
--   <a>$sel:average:Datapoint'</a>, <a>datapoint_average</a> - The average
--   of the metric values that correspond to the data point.
--   
--   <a>$sel:maximum:Datapoint'</a>, <a>datapoint_maximum</a> - The maximum
--   metric value for the data point.
--   
--   <a>$sel:extendedStatistics:Datapoint'</a>,
--   <a>datapoint_extendedStatistics</a> - The percentile statistic for the
--   data point.
newDatapoint :: Datapoint

-- | The standard unit for the data point.
datapoint_unit :: Lens' Datapoint (Maybe StandardUnit)

-- | The minimum metric value for the data point.
datapoint_minimum :: Lens' Datapoint (Maybe Double)

-- | The sum of the metric values for the data point.
datapoint_sum :: Lens' Datapoint (Maybe Double)

-- | The number of metric values that contributed to the aggregate value of
--   this data point.
datapoint_sampleCount :: Lens' Datapoint (Maybe Double)

-- | The time stamp used for the data point.
datapoint_timestamp :: Lens' Datapoint (Maybe UTCTime)

-- | The average of the metric values that correspond to the data point.
datapoint_average :: Lens' Datapoint (Maybe Double)

-- | The maximum metric value for the data point.
datapoint_maximum :: Lens' Datapoint (Maybe Double)

-- | The percentile statistic for the data point.
datapoint_extendedStatistics :: Lens' Datapoint (Maybe (HashMap Text Double))

-- | A dimension is a name/value pair that is part of the identity of a
--   metric. You can assign up to 10 dimensions to a metric. Because
--   dimensions are part of the unique identifier for a metric, whenever
--   you add a unique name/value pair to one of your metrics, you are
--   creating a new variation of that metric.
--   
--   <i>See:</i> <a>newDimension</a> smart constructor.
data Dimension
Dimension' :: Text -> Text -> Dimension

-- | The name of the dimension. Dimension names must contain only ASCII
--   characters and must include at least one non-whitespace character.
[$sel:name:Dimension'] :: Dimension -> Text

-- | The value of the dimension. Dimension values must contain only ASCII
--   characters and must include at least one non-whitespace character.
[$sel:value:Dimension'] :: Dimension -> Text

-- | Create a value of <a>Dimension</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Dimension'</a>, <a>dimension_name</a> - The name of the
--   dimension. Dimension names must contain only ASCII characters and must
--   include at least one non-whitespace character.
--   
--   <a>$sel:value:Dimension'</a>, <a>dimension_value</a> - The value of
--   the dimension. Dimension values must contain only ASCII characters and
--   must include at least one non-whitespace character.
newDimension :: Text -> Text -> Dimension

-- | The name of the dimension. Dimension names must contain only ASCII
--   characters and must include at least one non-whitespace character.
dimension_name :: Lens' Dimension Text

-- | The value of the dimension. Dimension values must contain only ASCII
--   characters and must include at least one non-whitespace character.
dimension_value :: Lens' Dimension Text

-- | Represents filters for a dimension.
--   
--   <i>See:</i> <a>newDimensionFilter</a> smart constructor.
data DimensionFilter
DimensionFilter' :: Maybe Text -> Text -> DimensionFilter

-- | The value of the dimension to be matched.
[$sel:value:DimensionFilter'] :: DimensionFilter -> Maybe Text

-- | The dimension name to be matched.
[$sel:name:DimensionFilter'] :: DimensionFilter -> Text

-- | Create a value of <a>DimensionFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:DimensionFilter'</a>, <a>dimensionFilter_value</a> - The
--   value of the dimension to be matched.
--   
--   <a>$sel:name:DimensionFilter'</a>, <a>dimensionFilter_name</a> - The
--   dimension name to be matched.
newDimensionFilter :: Text -> DimensionFilter

-- | The value of the dimension to be matched.
dimensionFilter_value :: Lens' DimensionFilter (Maybe Text)

-- | The dimension name to be matched.
dimensionFilter_name :: Lens' DimensionFilter Text

-- | This structure contains the definition for a Contributor Insights
--   rule.
--   
--   <i>See:</i> <a>newInsightRule</a> smart constructor.
data InsightRule
InsightRule' :: Text -> Text -> Text -> Text -> InsightRule

-- | The name of the rule.
[$sel:name:InsightRule'] :: InsightRule -> Text

-- | Indicates whether the rule is enabled or disabled.
[$sel:state:InsightRule'] :: InsightRule -> Text

-- | For rules that you create, this is always <tt>{"Name":
--   "CloudWatchLogRule", "Version": 1}</tt>. For built-in rules, this is
--   <tt>{"Name": "ServiceLogRule", "Version": 1}</tt>
[$sel:schema:InsightRule'] :: InsightRule -> Text

-- | The definition of the rule, as a JSON object. The definition contains
--   the keywords used to define contributors, the value to aggregate on if
--   this rule returns a sum instead of a count, and the filters. For
--   details on the valid syntax, see <a>Contributor Insights Rule
--   Syntax</a>.
[$sel:definition:InsightRule'] :: InsightRule -> Text

-- | Create a value of <a>InsightRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InsightRule'</a>, <a>insightRule_name</a> - The name of
--   the rule.
--   
--   <a>$sel:state:InsightRule'</a>, <a>insightRule_state</a> - Indicates
--   whether the rule is enabled or disabled.
--   
--   <a>$sel:schema:InsightRule'</a>, <a>insightRule_schema</a> - For rules
--   that you create, this is always <tt>{"Name": "CloudWatchLogRule",
--   "Version": 1}</tt>. For built-in rules, this is <tt>{"Name":
--   "ServiceLogRule", "Version": 1}</tt>
--   
--   <a>$sel:definition:InsightRule'</a>, <a>insightRule_definition</a> -
--   The definition of the rule, as a JSON object. The definition contains
--   the keywords used to define contributors, the value to aggregate on if
--   this rule returns a sum instead of a count, and the filters. For
--   details on the valid syntax, see <a>Contributor Insights Rule
--   Syntax</a>.
newInsightRule :: Text -> Text -> Text -> Text -> InsightRule

-- | The name of the rule.
insightRule_name :: Lens' InsightRule Text

-- | Indicates whether the rule is enabled or disabled.
insightRule_state :: Lens' InsightRule Text

-- | For rules that you create, this is always <tt>{"Name":
--   "CloudWatchLogRule", "Version": 1}</tt>. For built-in rules, this is
--   <tt>{"Name": "ServiceLogRule", "Version": 1}</tt>
insightRule_schema :: Lens' InsightRule Text

-- | The definition of the rule, as a JSON object. The definition contains
--   the keywords used to define contributors, the value to aggregate on if
--   this rule returns a sum instead of a count, and the filters. For
--   details on the valid syntax, see <a>Contributor Insights Rule
--   Syntax</a>.
insightRule_definition :: Lens' InsightRule Text

-- | One of the unique contributors found by a Contributor Insights rule.
--   If the rule contains multiple keys, then a unique contributor is a
--   unique combination of values from all the keys in the rule.
--   
--   If the rule contains a single key, then each unique contributor is
--   each unique value for this key.
--   
--   For more information, see <a>GetInsightRuleReport</a>.
--   
--   <i>See:</i> <a>newInsightRuleContributor</a> smart constructor.
data InsightRuleContributor
InsightRuleContributor' :: [Text] -> Double -> [InsightRuleContributorDatapoint] -> InsightRuleContributor

-- | One of the log entry field keywords that is used to define
--   contributors for this rule.
[$sel:keys:InsightRuleContributor'] :: InsightRuleContributor -> [Text]

-- | An approximation of the aggregate value that comes from this
--   contributor.
[$sel:approximateAggregateValue:InsightRuleContributor'] :: InsightRuleContributor -> Double

-- | An array of the data points where this contributor is present. Only
--   the data points when this contributor appeared are included in the
--   array.
[$sel:datapoints:InsightRuleContributor'] :: InsightRuleContributor -> [InsightRuleContributorDatapoint]

-- | Create a value of <a>InsightRuleContributor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keys:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_keys</a> - One of the log entry field
--   keywords that is used to define contributors for this rule.
--   
--   <a>$sel:approximateAggregateValue:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_approximateAggregateValue</a> - An
--   approximation of the aggregate value that comes from this contributor.
--   
--   <a>$sel:datapoints:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_datapoints</a> - An array of the data points
--   where this contributor is present. Only the data points when this
--   contributor appeared are included in the array.
newInsightRuleContributor :: Double -> InsightRuleContributor

-- | One of the log entry field keywords that is used to define
--   contributors for this rule.
insightRuleContributor_keys :: Lens' InsightRuleContributor [Text]

-- | An approximation of the aggregate value that comes from this
--   contributor.
insightRuleContributor_approximateAggregateValue :: Lens' InsightRuleContributor Double

-- | An array of the data points where this contributor is present. Only
--   the data points when this contributor appeared are included in the
--   array.
insightRuleContributor_datapoints :: Lens' InsightRuleContributor [InsightRuleContributorDatapoint]

-- | One data point related to one contributor.
--   
--   For more information, see <a>GetInsightRuleReport</a> and
--   <a>InsightRuleContributor</a>.
--   
--   <i>See:</i> <a>newInsightRuleContributorDatapoint</a> smart
--   constructor.
data InsightRuleContributorDatapoint
InsightRuleContributorDatapoint' :: ISO8601 -> Double -> InsightRuleContributorDatapoint

-- | The timestamp of the data point.
[$sel:timestamp:InsightRuleContributorDatapoint'] :: InsightRuleContributorDatapoint -> ISO8601

-- | The approximate value that this contributor added during this
--   timestamp.
[$sel:approximateValue:InsightRuleContributorDatapoint'] :: InsightRuleContributorDatapoint -> Double

-- | Create a value of <a>InsightRuleContributorDatapoint</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:InsightRuleContributorDatapoint'</a>,
--   <a>insightRuleContributorDatapoint_timestamp</a> - The timestamp of
--   the data point.
--   
--   <a>$sel:approximateValue:InsightRuleContributorDatapoint'</a>,
--   <a>insightRuleContributorDatapoint_approximateValue</a> - The
--   approximate value that this contributor added during this timestamp.
newInsightRuleContributorDatapoint :: UTCTime -> Double -> InsightRuleContributorDatapoint

-- | The timestamp of the data point.
insightRuleContributorDatapoint_timestamp :: Lens' InsightRuleContributorDatapoint UTCTime

-- | The approximate value that this contributor added during this
--   timestamp.
insightRuleContributorDatapoint_approximateValue :: Lens' InsightRuleContributorDatapoint Double

-- | One data point from the metric time series returned in a Contributor
--   Insights rule report.
--   
--   For more information, see <a>GetInsightRuleReport</a>.
--   
--   <i>See:</i> <a>newInsightRuleMetricDatapoint</a> smart constructor.
data InsightRuleMetricDatapoint
InsightRuleMetricDatapoint' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> ISO8601 -> InsightRuleMetricDatapoint

-- | The minimum value from a single contributor during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:minimum:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The sum of the values from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:sum:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The number of occurrences that matched the rule during this data
--   point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:sampleCount:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The maximum value provided by one contributor during this timestamp.
--   Each timestamp is evaluated separately, so the identity of the max
--   contributor could be different for each timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:maxContributorValue:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The average value from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:average:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The number of unique contributors who published data during this
--   timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:uniqueContributors:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The maximum value from a single occurence from a single contributor
--   during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
[$sel:maximum:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> Maybe Double

-- | The timestamp of the data point.
[$sel:timestamp:InsightRuleMetricDatapoint'] :: InsightRuleMetricDatapoint -> ISO8601

-- | Create a value of <a>InsightRuleMetricDatapoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_minimum</a> - The minimum value from a
--   single contributor during the time period represented by that data
--   point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:sum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_sum</a> - The sum of the values from all
--   contributors during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:sampleCount:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_sampleCount</a> - The number of
--   occurrences that matched the rule during this data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:maxContributorValue:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_maxContributorValue</a> - The maximum
--   value provided by one contributor during this timestamp. Each
--   timestamp is evaluated separately, so the identity of the max
--   contributor could be different for each timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:average:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_average</a> - The average value from all
--   contributors during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:uniqueContributors:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_uniqueContributors</a> - The number of
--   unique contributors who published data during this timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:maximum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_maximum</a> - The maximum value from a
--   single occurence from a single contributor during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:timestamp:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_timestamp</a> - The timestamp of the
--   data point.
newInsightRuleMetricDatapoint :: UTCTime -> InsightRuleMetricDatapoint

-- | The minimum value from a single contributor during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_minimum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The sum of the values from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_sum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The number of occurrences that matched the rule during this data
--   point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_sampleCount :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The maximum value provided by one contributor during this timestamp.
--   Each timestamp is evaluated separately, so the identity of the max
--   contributor could be different for each timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_maxContributorValue :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The average value from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_average :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The number of unique contributors who published data during this
--   timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_uniqueContributors :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The maximum value from a single occurence from a single contributor
--   during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_maximum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The timestamp of the data point.
insightRuleMetricDatapoint_timestamp :: Lens' InsightRuleMetricDatapoint UTCTime

-- | This structure includes the <tt>Timezone</tt> parameter, which you can
--   use to specify your time zone so that the labels that are associated
--   with returned metrics display the correct time for your time zone.
--   
--   The <tt>Timezone</tt> value affects a label only if you have a
--   time-based dynamic expression in the label. For more information about
--   dynamic expressions in labels, see <a>Using Dynamic Labels</a>.
--   
--   <i>See:</i> <a>newLabelOptions</a> smart constructor.
data LabelOptions
LabelOptions' :: Maybe Text -> LabelOptions

-- | The time zone to use for metric data return in this operation. The
--   format is <tt>+</tt> or <tt>-</tt> followed by four digits. The first
--   two digits indicate the number of hours ahead or behind of UTC, and
--   the final two digits are the number of minutes. For example, +0130
--   indicates a time zone that is 1 hour and 30 minutes ahead of UTC. The
--   default is +0000.
[$sel:timezone:LabelOptions'] :: LabelOptions -> Maybe Text

-- | Create a value of <a>LabelOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timezone:LabelOptions'</a>, <a>labelOptions_timezone</a> - The
--   time zone to use for metric data return in this operation. The format
--   is <tt>+</tt> or <tt>-</tt> followed by four digits. The first two
--   digits indicate the number of hours ahead or behind of UTC, and the
--   final two digits are the number of minutes. For example, +0130
--   indicates a time zone that is 1 hour and 30 minutes ahead of UTC. The
--   default is +0000.
newLabelOptions :: LabelOptions

-- | The time zone to use for metric data return in this operation. The
--   format is <tt>+</tt> or <tt>-</tt> followed by four digits. The first
--   two digits indicate the number of hours ahead or behind of UTC, and
--   the final two digits are the number of minutes. For example, +0130
--   indicates a time zone that is 1 hour and 30 minutes ahead of UTC. The
--   default is +0000.
labelOptions_timezone :: Lens' LabelOptions (Maybe Text)

-- | A message returned by the <tt>GetMetricData</tt>API, including a code
--   and a description.
--   
--   If a cross-Region <tt>GetMetricData</tt> operation fails with a code
--   of <tt>Forbidden</tt> and a value of <tt>Authentication too complex to
--   retrieve cross region data</tt>, you can correct the problem by
--   running the <tt>GetMetricData</tt> operation in the same Region where
--   the metric data is.
--   
--   <i>See:</i> <a>newMessageData</a> smart constructor.
data MessageData
MessageData' :: Maybe Text -> Maybe Text -> MessageData

-- | The error code or status code associated with the message.
[$sel:code:MessageData'] :: MessageData -> Maybe Text

-- | The message text.
[$sel:value:MessageData'] :: MessageData -> Maybe Text

-- | Create a value of <a>MessageData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:MessageData'</a>, <a>messageData_code</a> - The error
--   code or status code associated with the message.
--   
--   <a>$sel:value:MessageData'</a>, <a>messageData_value</a> - The message
--   text.
newMessageData :: MessageData

-- | The error code or status code associated with the message.
messageData_code :: Lens' MessageData (Maybe Text)

-- | The message text.
messageData_value :: Lens' MessageData (Maybe Text)

-- | Represents a specific metric.
--   
--   <i>See:</i> <a>newMetric</a> smart constructor.
data Metric
Metric' :: Maybe Text -> Maybe Text -> Maybe [Dimension] -> Metric

-- | The name of the metric. This is a required field.
[$sel:metricName:Metric'] :: Metric -> Maybe Text

-- | The namespace of the metric.
[$sel:namespace:Metric'] :: Metric -> Maybe Text

-- | The dimensions for the metric.
[$sel:dimensions:Metric'] :: Metric -> Maybe [Dimension]

-- | Create a value of <a>Metric</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:Metric'</a>, <a>metric_metricName</a> - The name of
--   the metric. This is a required field.
--   
--   <a>$sel:namespace:Metric'</a>, <a>metric_namespace</a> - The namespace
--   of the metric.
--   
--   <a>$sel:dimensions:Metric'</a>, <a>metric_dimensions</a> - The
--   dimensions for the metric.
newMetric :: Metric

-- | The name of the metric. This is a required field.
metric_metricName :: Lens' Metric (Maybe Text)

-- | The namespace of the metric.
metric_namespace :: Lens' Metric (Maybe Text)

-- | The dimensions for the metric.
metric_dimensions :: Lens' Metric (Maybe [Dimension])

-- | The details about a metric alarm.
--   
--   <i>See:</i> <a>newMetricAlarm</a> smart constructor.
data MetricAlarm
MetricAlarm' :: Maybe Double -> Maybe Natural -> Maybe Text -> Maybe ComparisonOperator -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe StandardUnit -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe [MetricDataQuery] -> Maybe Text -> Maybe StateValue -> Maybe ISO8601 -> Maybe [Text] -> Maybe Statistic -> Maybe Text -> Maybe [Dimension] -> Maybe Natural -> Maybe Bool -> Maybe ISO8601 -> Maybe Natural -> Maybe Text -> MetricAlarm

-- | The value to compare with the specified statistic.
[$sel:threshold:MetricAlarm'] :: MetricAlarm -> Maybe Double

-- | The number of data points that must be breaching to trigger the alarm.
[$sel:datapointsToAlarm:MetricAlarm'] :: MetricAlarm -> Maybe Natural

-- | Used only for alarms based on percentiles. If <tt>ignore</tt>, the
--   alarm state does not change during periods with too few data points to
--   be statistically significant. If <tt>evaluate</tt> or this parameter
--   is not used, the alarm is always evaluated and possibly changes state
--   no matter how many data points are available.
[$sel:evaluateLowSampleCountPercentile:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The arithmetic operation to use when comparing the specified statistic
--   and threshold. The specified statistic value is used as the first
--   operand.
[$sel:comparisonOperator:MetricAlarm'] :: MetricAlarm -> Maybe ComparisonOperator

-- | The percentile statistic for the metric associated with the alarm.
--   Specify a value between p0.0 and p100.
[$sel:extendedStatistic:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | In an alarm based on an anomaly detection model, this is the ID of the
--   <tt>ANOMALY_DETECTION_BAND</tt> function used as the threshold for the
--   alarm.
[$sel:thresholdMetricId:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
[$sel:alarmActions:MetricAlarm'] :: MetricAlarm -> Maybe [Text]

-- | The unit of the metric associated with the alarm.
[$sel:unit:MetricAlarm'] :: MetricAlarm -> Maybe StandardUnit

-- | The Amazon Resource Name (ARN) of the alarm.
[$sel:alarmArn:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The name of the metric associated with the alarm, if this is an alarm
--   based on a single metric.
[$sel:metricName:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | An explanation for the alarm state, in text format.
[$sel:stateReason:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | An explanation for the alarm state, in JSON format.
[$sel:stateReasonData:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
[$sel:insufficientDataActions:MetricAlarm'] :: MetricAlarm -> Maybe [Text]

-- | Sets how this alarm is to handle missing data points. If this
--   parameter is omitted, the default behavior of <tt>missing</tt> is
--   used.
[$sel:treatMissingData:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | An array of MetricDataQuery structures, used in an alarm based on a
--   metric math expression. Each structure either retrieves a metric or
--   performs a math expression. One item in the Metrics array is the math
--   expression that the alarm watches. This expression by designated by
--   having <tt>ReturnData</tt> set to true.
[$sel:metrics:MetricAlarm'] :: MetricAlarm -> Maybe [MetricDataQuery]

-- | The name of the alarm.
[$sel:alarmName:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The state value for the alarm.
[$sel:stateValue:MetricAlarm'] :: MetricAlarm -> Maybe StateValue

-- | The time stamp of the last update to the alarm state.
[$sel:stateUpdatedTimestamp:MetricAlarm'] :: MetricAlarm -> Maybe ISO8601

-- | The actions to execute when this alarm transitions to the <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
[$sel:oKActions:MetricAlarm'] :: MetricAlarm -> Maybe [Text]

-- | The statistic for the metric associated with the alarm, other than
--   percentile. For percentile statistics, use <tt>ExtendedStatistic</tt>.
[$sel:statistic:MetricAlarm'] :: MetricAlarm -> Maybe Statistic

-- | The namespace of the metric associated with the alarm.
[$sel:namespace:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | The dimensions for the metric associated with the alarm.
[$sel:dimensions:MetricAlarm'] :: MetricAlarm -> Maybe [Dimension]

-- | The number of periods over which data is compared to the specified
--   threshold.
[$sel:evaluationPeriods:MetricAlarm'] :: MetricAlarm -> Maybe Natural

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
[$sel:actionsEnabled:MetricAlarm'] :: MetricAlarm -> Maybe Bool

-- | The time stamp of the last update to the alarm configuration.
[$sel:alarmConfigurationUpdatedTimestamp:MetricAlarm'] :: MetricAlarm -> Maybe ISO8601

-- | The period, in seconds, over which the statistic is applied.
[$sel:period:MetricAlarm'] :: MetricAlarm -> Maybe Natural

-- | The description of the alarm.
[$sel:alarmDescription:MetricAlarm'] :: MetricAlarm -> Maybe Text

-- | Create a value of <a>MetricAlarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:MetricAlarm'</a>, <a>metricAlarm_threshold</a> - The
--   value to compare with the specified statistic.
--   
--   <a>$sel:datapointsToAlarm:MetricAlarm'</a>,
--   <a>metricAlarm_datapointsToAlarm</a> - The number of data points that
--   must be breaching to trigger the alarm.
--   
--   <a>$sel:evaluateLowSampleCountPercentile:MetricAlarm'</a>,
--   <a>metricAlarm_evaluateLowSampleCountPercentile</a> - Used only for
--   alarms based on percentiles. If <tt>ignore</tt>, the alarm state does
--   not change during periods with too few data points to be statistically
--   significant. If <tt>evaluate</tt> or this parameter is not used, the
--   alarm is always evaluated and possibly changes state no matter how
--   many data points are available.
--   
--   <a>$sel:comparisonOperator:MetricAlarm'</a>,
--   <a>metricAlarm_comparisonOperator</a> - The arithmetic operation to
--   use when comparing the specified statistic and threshold. The
--   specified statistic value is used as the first operand.
--   
--   <a>$sel:extendedStatistic:MetricAlarm'</a>,
--   <a>metricAlarm_extendedStatistic</a> - The percentile statistic for
--   the metric associated with the alarm. Specify a value between p0.0 and
--   p100.
--   
--   <a>$sel:thresholdMetricId:MetricAlarm'</a>,
--   <a>metricAlarm_thresholdMetricId</a> - In an alarm based on an anomaly
--   detection model, this is the ID of the <tt>ANOMALY_DETECTION_BAND</tt>
--   function used as the threshold for the alarm.
--   
--   <a>$sel:alarmActions:MetricAlarm'</a>, <a>metricAlarm_alarmActions</a>
--   - The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   <a>$sel:unit:MetricAlarm'</a>, <a>metricAlarm_unit</a> - The unit of
--   the metric associated with the alarm.
--   
--   <a>$sel:alarmArn:MetricAlarm'</a>, <a>metricAlarm_alarmArn</a> - The
--   Amazon Resource Name (ARN) of the alarm.
--   
--   <a>$sel:metricName:MetricAlarm'</a>, <a>metricAlarm_metricName</a> -
--   The name of the metric associated with the alarm, if this is an alarm
--   based on a single metric.
--   
--   <a>$sel:stateReason:MetricAlarm'</a>, <a>metricAlarm_stateReason</a> -
--   An explanation for the alarm state, in text format.
--   
--   <a>$sel:stateReasonData:MetricAlarm'</a>,
--   <a>metricAlarm_stateReasonData</a> - An explanation for the alarm
--   state, in JSON format.
--   
--   <a>$sel:insufficientDataActions:MetricAlarm'</a>,
--   <a>metricAlarm_insufficientDataActions</a> - The actions to execute
--   when this alarm transitions to the <tt>INSUFFICIENT_DATA</tt> state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
--   
--   <a>$sel:treatMissingData:MetricAlarm'</a>,
--   <a>metricAlarm_treatMissingData</a> - Sets how this alarm is to handle
--   missing data points. If this parameter is omitted, the default
--   behavior of <tt>missing</tt> is used.
--   
--   <a>$sel:metrics:MetricAlarm'</a>, <a>metricAlarm_metrics</a> - An
--   array of MetricDataQuery structures, used in an alarm based on a
--   metric math expression. Each structure either retrieves a metric or
--   performs a math expression. One item in the Metrics array is the math
--   expression that the alarm watches. This expression by designated by
--   having <tt>ReturnData</tt> set to true.
--   
--   <a>$sel:alarmName:MetricAlarm'</a>, <a>metricAlarm_alarmName</a> - The
--   name of the alarm.
--   
--   <a>$sel:stateValue:MetricAlarm'</a>, <a>metricAlarm_stateValue</a> -
--   The state value for the alarm.
--   
--   <a>$sel:stateUpdatedTimestamp:MetricAlarm'</a>,
--   <a>metricAlarm_stateUpdatedTimestamp</a> - The time stamp of the last
--   update to the alarm state.
--   
--   <a>$sel:oKActions:MetricAlarm'</a>, <a>metricAlarm_oKActions</a> - The
--   actions to execute when this alarm transitions to the <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:statistic:MetricAlarm'</a>, <a>metricAlarm_statistic</a> - The
--   statistic for the metric associated with the alarm, other than
--   percentile. For percentile statistics, use <tt>ExtendedStatistic</tt>.
--   
--   <a>$sel:namespace:MetricAlarm'</a>, <a>metricAlarm_namespace</a> - The
--   namespace of the metric associated with the alarm.
--   
--   <a>$sel:dimensions:MetricAlarm'</a>, <a>metricAlarm_dimensions</a> -
--   The dimensions for the metric associated with the alarm.
--   
--   <a>$sel:evaluationPeriods:MetricAlarm'</a>,
--   <a>metricAlarm_evaluationPeriods</a> - The number of periods over
--   which data is compared to the specified threshold.
--   
--   <a>$sel:actionsEnabled:MetricAlarm'</a>,
--   <a>metricAlarm_actionsEnabled</a> - Indicates whether actions should
--   be executed during any changes to the alarm state.
--   
--   <a>$sel:alarmConfigurationUpdatedTimestamp:MetricAlarm'</a>,
--   <a>metricAlarm_alarmConfigurationUpdatedTimestamp</a> - The time stamp
--   of the last update to the alarm configuration.
--   
--   <a>$sel:period:MetricAlarm'</a>, <a>metricAlarm_period</a> - The
--   period, in seconds, over which the statistic is applied.
--   
--   <a>$sel:alarmDescription:MetricAlarm'</a>,
--   <a>metricAlarm_alarmDescription</a> - The description of the alarm.
newMetricAlarm :: MetricAlarm

-- | The value to compare with the specified statistic.
metricAlarm_threshold :: Lens' MetricAlarm (Maybe Double)

-- | The number of data points that must be breaching to trigger the alarm.
metricAlarm_datapointsToAlarm :: Lens' MetricAlarm (Maybe Natural)

-- | Used only for alarms based on percentiles. If <tt>ignore</tt>, the
--   alarm state does not change during periods with too few data points to
--   be statistically significant. If <tt>evaluate</tt> or this parameter
--   is not used, the alarm is always evaluated and possibly changes state
--   no matter how many data points are available.
metricAlarm_evaluateLowSampleCountPercentile :: Lens' MetricAlarm (Maybe Text)

-- | The arithmetic operation to use when comparing the specified statistic
--   and threshold. The specified statistic value is used as the first
--   operand.
metricAlarm_comparisonOperator :: Lens' MetricAlarm (Maybe ComparisonOperator)

-- | The percentile statistic for the metric associated with the alarm.
--   Specify a value between p0.0 and p100.
metricAlarm_extendedStatistic :: Lens' MetricAlarm (Maybe Text)

-- | In an alarm based on an anomaly detection model, this is the ID of the
--   <tt>ANOMALY_DETECTION_BAND</tt> function used as the threshold for the
--   alarm.
metricAlarm_thresholdMetricId :: Lens' MetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
metricAlarm_alarmActions :: Lens' MetricAlarm (Maybe [Text])

-- | The unit of the metric associated with the alarm.
metricAlarm_unit :: Lens' MetricAlarm (Maybe StandardUnit)

-- | The Amazon Resource Name (ARN) of the alarm.
metricAlarm_alarmArn :: Lens' MetricAlarm (Maybe Text)

-- | The name of the metric associated with the alarm, if this is an alarm
--   based on a single metric.
metricAlarm_metricName :: Lens' MetricAlarm (Maybe Text)

-- | An explanation for the alarm state, in text format.
metricAlarm_stateReason :: Lens' MetricAlarm (Maybe Text)

-- | An explanation for the alarm state, in JSON format.
metricAlarm_stateReasonData :: Lens' MetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
metricAlarm_insufficientDataActions :: Lens' MetricAlarm (Maybe [Text])

-- | Sets how this alarm is to handle missing data points. If this
--   parameter is omitted, the default behavior of <tt>missing</tt> is
--   used.
metricAlarm_treatMissingData :: Lens' MetricAlarm (Maybe Text)

-- | An array of MetricDataQuery structures, used in an alarm based on a
--   metric math expression. Each structure either retrieves a metric or
--   performs a math expression. One item in the Metrics array is the math
--   expression that the alarm watches. This expression by designated by
--   having <tt>ReturnData</tt> set to true.
metricAlarm_metrics :: Lens' MetricAlarm (Maybe [MetricDataQuery])

-- | The name of the alarm.
metricAlarm_alarmName :: Lens' MetricAlarm (Maybe Text)

-- | The state value for the alarm.
metricAlarm_stateValue :: Lens' MetricAlarm (Maybe StateValue)

-- | The time stamp of the last update to the alarm state.
metricAlarm_stateUpdatedTimestamp :: Lens' MetricAlarm (Maybe UTCTime)

-- | The actions to execute when this alarm transitions to the <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
metricAlarm_oKActions :: Lens' MetricAlarm (Maybe [Text])

-- | The statistic for the metric associated with the alarm, other than
--   percentile. For percentile statistics, use <tt>ExtendedStatistic</tt>.
metricAlarm_statistic :: Lens' MetricAlarm (Maybe Statistic)

-- | The namespace of the metric associated with the alarm.
metricAlarm_namespace :: Lens' MetricAlarm (Maybe Text)

-- | The dimensions for the metric associated with the alarm.
metricAlarm_dimensions :: Lens' MetricAlarm (Maybe [Dimension])

-- | The number of periods over which data is compared to the specified
--   threshold.
metricAlarm_evaluationPeriods :: Lens' MetricAlarm (Maybe Natural)

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
metricAlarm_actionsEnabled :: Lens' MetricAlarm (Maybe Bool)

-- | The time stamp of the last update to the alarm configuration.
metricAlarm_alarmConfigurationUpdatedTimestamp :: Lens' MetricAlarm (Maybe UTCTime)

-- | The period, in seconds, over which the statistic is applied.
metricAlarm_period :: Lens' MetricAlarm (Maybe Natural)

-- | The description of the alarm.
metricAlarm_alarmDescription :: Lens' MetricAlarm (Maybe Text)

-- | This structure is used in both <tt>GetMetricData</tt> and
--   <tt>PutMetricAlarm</tt>. The supported use of this structure is
--   different for those two operations.
--   
--   When used in <tt>GetMetricData</tt>, it indicates the metric data to
--   return, and whether this call is just retrieving a batch set of data
--   for one metric, or is performing a math expression on metric data. A
--   single <tt>GetMetricData</tt> call can include up to 500
--   <tt>MetricDataQuery</tt> structures.
--   
--   When used in <tt>PutMetricAlarm</tt>, it enables you to create an
--   alarm based on a metric math expression. Each <tt>MetricDataQuery</tt>
--   in the array specifies either a metric to retrieve, or a math
--   expression to be performed on retrieved metrics. A single
--   <tt>PutMetricAlarm</tt> call can include up to 20
--   <tt>MetricDataQuery</tt> structures in the array. The 20 structures
--   can include as many as 10 structures that contain a
--   <tt>MetricStat</tt> parameter to retrieve a metric, and as many as 10
--   structures that contain the <tt>Expression</tt> parameter to perform a
--   math expression. Of those <tt>Expression</tt> structures, one must
--   have <tt>True</tt> as the value for <tt>ReturnData</tt>. The result of
--   this expression is the value the alarm watches.
--   
--   Any expression used in a <tt>PutMetricAlarm</tt> operation must return
--   a single time series. For more information, see <a>Metric Math Syntax
--   and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   Some of the parameters of this structure also have different uses
--   whether you are using this structure in a <tt>GetMetricData</tt>
--   operation or a <tt>PutMetricAlarm</tt> operation. These differences
--   are explained in the following parameter list.
--   
--   <i>See:</i> <a>newMetricDataQuery</a> smart constructor.
data MetricDataQuery
MetricDataQuery' :: Maybe Text -> Maybe MetricStat -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Text -> MetricDataQuery

-- | The ID of the account where the metrics are located, if this is a
--   cross-account alarm.
--   
--   Use this field only for <tt>PutMetricAlarm</tt> operations. It is not
--   used in <tt>GetMetricData</tt> operations.
[$sel:accountId:MetricDataQuery'] :: MetricDataQuery -> Maybe Text

-- | The metric to be returned, along with statistics, period, and units.
--   Use this parameter only if this object is retrieving a metric and not
--   performing a math expression on returned data.
--   
--   Within one MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
[$sel:metricStat:MetricDataQuery'] :: MetricDataQuery -> Maybe MetricStat

-- | When used in <tt>GetMetricData</tt>, this option indicates whether to
--   return the timestamps and raw data values of this metric. If you are
--   performing this call just to do math expressions and do not also need
--   the raw data returned, you can specify <tt>False</tt>. If you omit
--   this, the default of <tt>True</tt> is used.
--   
--   When used in <tt>PutMetricAlarm</tt>, specify <tt>True</tt> for the
--   one expression result to use as the alarm. For all other metrics and
--   expressions in the same <tt>PutMetricAlarm</tt> operation, specify
--   <tt>ReturnData</tt> as False.
[$sel:returnData:MetricDataQuery'] :: MetricDataQuery -> Maybe Bool

-- | A human-readable label for this metric or expression. This is
--   especially useful if this is an expression, so that you know what the
--   value represents. If the metric or expression is shown in a CloudWatch
--   dashboard widget, the label is shown. If Label is omitted, CloudWatch
--   generates a default.
--   
--   You can put dynamic expressions into a label, so that it is more
--   descriptive. For more information, see <a>Using Dynamic Labels</a>.
[$sel:label:MetricDataQuery'] :: MetricDataQuery -> Maybe Text

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> operation
--   that includes a <tt>StorageResolution of 1 second</tt>.
[$sel:period:MetricDataQuery'] :: MetricDataQuery -> Maybe Natural

-- | The math expression to be performed on the returned data, if this
--   object is performing a math expression. This expression can use the
--   <tt>Id</tt> of the other metrics to refer to those metrics, and can
--   also use the <tt>Id</tt> of other expressions to use the result of
--   those expressions. For more information about metric math expressions,
--   see <a>Metric Math Syntax and Functions</a> in the <i>Amazon
--   CloudWatch User Guide</i>.
--   
--   Within each MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
[$sel:expression:MetricDataQuery'] :: MetricDataQuery -> Maybe Text

-- | A short name used to tie this object to the results in the response.
--   This name must be unique within a single call to
--   <tt>GetMetricData</tt>. If you are performing math expressions on this
--   set of data, this name represents that data and can serve as a
--   variable in the mathematical expression. The valid characters are
--   letters, numbers, and underscore. The first character must be a
--   lowercase letter.
[$sel:id:MetricDataQuery'] :: MetricDataQuery -> Text

-- | Create a value of <a>MetricDataQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:MetricDataQuery'</a>,
--   <a>metricDataQuery_accountId</a> - The ID of the account where the
--   metrics are located, if this is a cross-account alarm.
--   
--   Use this field only for <tt>PutMetricAlarm</tt> operations. It is not
--   used in <tt>GetMetricData</tt> operations.
--   
--   <a>$sel:metricStat:MetricDataQuery'</a>,
--   <a>metricDataQuery_metricStat</a> - The metric to be returned, along
--   with statistics, period, and units. Use this parameter only if this
--   object is retrieving a metric and not performing a math expression on
--   returned data.
--   
--   Within one MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
--   
--   <a>$sel:returnData:MetricDataQuery'</a>,
--   <a>metricDataQuery_returnData</a> - When used in
--   <tt>GetMetricData</tt>, this option indicates whether to return the
--   timestamps and raw data values of this metric. If you are performing
--   this call just to do math expressions and do not also need the raw
--   data returned, you can specify <tt>False</tt>. If you omit this, the
--   default of <tt>True</tt> is used.
--   
--   When used in <tt>PutMetricAlarm</tt>, specify <tt>True</tt> for the
--   one expression result to use as the alarm. For all other metrics and
--   expressions in the same <tt>PutMetricAlarm</tt> operation, specify
--   <tt>ReturnData</tt> as False.
--   
--   <a>$sel:label:MetricDataQuery'</a>, <a>metricDataQuery_label</a> - A
--   human-readable label for this metric or expression. This is especially
--   useful if this is an expression, so that you know what the value
--   represents. If the metric or expression is shown in a CloudWatch
--   dashboard widget, the label is shown. If Label is omitted, CloudWatch
--   generates a default.
--   
--   You can put dynamic expressions into a label, so that it is more
--   descriptive. For more information, see <a>Using Dynamic Labels</a>.
--   
--   <a>$sel:period:MetricDataQuery'</a>, <a>metricDataQuery_period</a> -
--   The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> operation
--   that includes a <tt>StorageResolution of 1 second</tt>.
--   
--   <a>$sel:expression:MetricDataQuery'</a>,
--   <a>metricDataQuery_expression</a> - The math expression to be
--   performed on the returned data, if this object is performing a math
--   expression. This expression can use the <tt>Id</tt> of the other
--   metrics to refer to those metrics, and can also use the <tt>Id</tt> of
--   other expressions to use the result of those expressions. For more
--   information about metric math expressions, see <a>Metric Math Syntax
--   and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   Within each MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
--   
--   <a>$sel:id:MetricDataQuery'</a>, <a>metricDataQuery_id</a> - A short
--   name used to tie this object to the results in the response. This name
--   must be unique within a single call to <tt>GetMetricData</tt>. If you
--   are performing math expressions on this set of data, this name
--   represents that data and can serve as a variable in the mathematical
--   expression. The valid characters are letters, numbers, and underscore.
--   The first character must be a lowercase letter.
newMetricDataQuery :: Text -> MetricDataQuery

-- | The ID of the account where the metrics are located, if this is a
--   cross-account alarm.
--   
--   Use this field only for <tt>PutMetricAlarm</tt> operations. It is not
--   used in <tt>GetMetricData</tt> operations.
metricDataQuery_accountId :: Lens' MetricDataQuery (Maybe Text)

-- | The metric to be returned, along with statistics, period, and units.
--   Use this parameter only if this object is retrieving a metric and not
--   performing a math expression on returned data.
--   
--   Within one MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
metricDataQuery_metricStat :: Lens' MetricDataQuery (Maybe MetricStat)

-- | When used in <tt>GetMetricData</tt>, this option indicates whether to
--   return the timestamps and raw data values of this metric. If you are
--   performing this call just to do math expressions and do not also need
--   the raw data returned, you can specify <tt>False</tt>. If you omit
--   this, the default of <tt>True</tt> is used.
--   
--   When used in <tt>PutMetricAlarm</tt>, specify <tt>True</tt> for the
--   one expression result to use as the alarm. For all other metrics and
--   expressions in the same <tt>PutMetricAlarm</tt> operation, specify
--   <tt>ReturnData</tt> as False.
metricDataQuery_returnData :: Lens' MetricDataQuery (Maybe Bool)

-- | A human-readable label for this metric or expression. This is
--   especially useful if this is an expression, so that you know what the
--   value represents. If the metric or expression is shown in a CloudWatch
--   dashboard widget, the label is shown. If Label is omitted, CloudWatch
--   generates a default.
--   
--   You can put dynamic expressions into a label, so that it is more
--   descriptive. For more information, see <a>Using Dynamic Labels</a>.
metricDataQuery_label :: Lens' MetricDataQuery (Maybe Text)

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> operation
--   that includes a <tt>StorageResolution of 1 second</tt>.
metricDataQuery_period :: Lens' MetricDataQuery (Maybe Natural)

-- | The math expression to be performed on the returned data, if this
--   object is performing a math expression. This expression can use the
--   <tt>Id</tt> of the other metrics to refer to those metrics, and can
--   also use the <tt>Id</tt> of other expressions to use the result of
--   those expressions. For more information about metric math expressions,
--   see <a>Metric Math Syntax and Functions</a> in the <i>Amazon
--   CloudWatch User Guide</i>.
--   
--   Within each MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
metricDataQuery_expression :: Lens' MetricDataQuery (Maybe Text)

-- | A short name used to tie this object to the results in the response.
--   This name must be unique within a single call to
--   <tt>GetMetricData</tt>. If you are performing math expressions on this
--   set of data, this name represents that data and can serve as a
--   variable in the mathematical expression. The valid characters are
--   letters, numbers, and underscore. The first character must be a
--   lowercase letter.
metricDataQuery_id :: Lens' MetricDataQuery Text

-- | A <tt>GetMetricData</tt> call returns an array of
--   <tt>MetricDataResult</tt> structures. Each of these structures
--   includes the data points for that metric, along with the timestamps of
--   those data points and other identifying information.
--   
--   <i>See:</i> <a>newMetricDataResult</a> smart constructor.
data MetricDataResult
MetricDataResult' :: Maybe [Double] -> Maybe Text -> Maybe [ISO8601] -> Maybe StatusCode -> Maybe Text -> Maybe [MessageData] -> MetricDataResult

-- | The data points for the metric corresponding to <tt>Timestamps</tt>.
--   The number of values always matches the number of timestamps and the
--   timestamp for Values[x] is Timestamps[x].
[$sel:values:MetricDataResult'] :: MetricDataResult -> Maybe [Double]

-- | The short name you specified to represent this metric.
[$sel:id:MetricDataResult'] :: MetricDataResult -> Maybe Text

-- | The timestamps for the data points, formatted in Unix timestamp
--   format. The number of timestamps always matches the number of values
--   and the value for Timestamps[x] is Values[x].
[$sel:timestamps:MetricDataResult'] :: MetricDataResult -> Maybe [ISO8601]

-- | The status of the returned data. <tt>Complete</tt> indicates that all
--   data points in the requested time range were returned.
--   <tt>PartialData</tt> means that an incomplete set of data points were
--   returned. You can use the <tt>NextToken</tt> value that was returned
--   and repeat your request to get more data points. <tt>NextToken</tt> is
--   not returned if you are performing a math expression.
--   <tt>InternalError</tt> indicates that an error occurred. Retry your
--   request using <tt>NextToken</tt>, if present.
[$sel:statusCode:MetricDataResult'] :: MetricDataResult -> Maybe StatusCode

-- | The human-readable label associated with the data.
[$sel:label:MetricDataResult'] :: MetricDataResult -> Maybe Text

-- | A list of messages with additional information about the data
--   returned.
[$sel:messages:MetricDataResult'] :: MetricDataResult -> Maybe [MessageData]

-- | Create a value of <a>MetricDataResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:MetricDataResult'</a>, <a>metricDataResult_values</a> -
--   The data points for the metric corresponding to <tt>Timestamps</tt>.
--   The number of values always matches the number of timestamps and the
--   timestamp for Values[x] is Timestamps[x].
--   
--   <a>$sel:id:MetricDataResult'</a>, <a>metricDataResult_id</a> - The
--   short name you specified to represent this metric.
--   
--   <a>$sel:timestamps:MetricDataResult'</a>,
--   <a>metricDataResult_timestamps</a> - The timestamps for the data
--   points, formatted in Unix timestamp format. The number of timestamps
--   always matches the number of values and the value for Timestamps[x] is
--   Values[x].
--   
--   <a>$sel:statusCode:MetricDataResult'</a>,
--   <a>metricDataResult_statusCode</a> - The status of the returned data.
--   <tt>Complete</tt> indicates that all data points in the requested time
--   range were returned. <tt>PartialData</tt> means that an incomplete set
--   of data points were returned. You can use the <tt>NextToken</tt> value
--   that was returned and repeat your request to get more data points.
--   <tt>NextToken</tt> is not returned if you are performing a math
--   expression. <tt>InternalError</tt> indicates that an error occurred.
--   Retry your request using <tt>NextToken</tt>, if present.
--   
--   <a>$sel:label:MetricDataResult'</a>, <a>metricDataResult_label</a> -
--   The human-readable label associated with the data.
--   
--   <a>$sel:messages:MetricDataResult'</a>,
--   <a>metricDataResult_messages</a> - A list of messages with additional
--   information about the data returned.
newMetricDataResult :: MetricDataResult

-- | The data points for the metric corresponding to <tt>Timestamps</tt>.
--   The number of values always matches the number of timestamps and the
--   timestamp for Values[x] is Timestamps[x].
metricDataResult_values :: Lens' MetricDataResult (Maybe [Double])

-- | The short name you specified to represent this metric.
metricDataResult_id :: Lens' MetricDataResult (Maybe Text)

-- | The timestamps for the data points, formatted in Unix timestamp
--   format. The number of timestamps always matches the number of values
--   and the value for Timestamps[x] is Values[x].
metricDataResult_timestamps :: Lens' MetricDataResult (Maybe [UTCTime])

-- | The status of the returned data. <tt>Complete</tt> indicates that all
--   data points in the requested time range were returned.
--   <tt>PartialData</tt> means that an incomplete set of data points were
--   returned. You can use the <tt>NextToken</tt> value that was returned
--   and repeat your request to get more data points. <tt>NextToken</tt> is
--   not returned if you are performing a math expression.
--   <tt>InternalError</tt> indicates that an error occurred. Retry your
--   request using <tt>NextToken</tt>, if present.
metricDataResult_statusCode :: Lens' MetricDataResult (Maybe StatusCode)

-- | The human-readable label associated with the data.
metricDataResult_label :: Lens' MetricDataResult (Maybe Text)

-- | A list of messages with additional information about the data
--   returned.
metricDataResult_messages :: Lens' MetricDataResult (Maybe [MessageData])

-- | Encapsulates the information sent to either create a metric or add new
--   values to be aggregated into an existing metric.
--   
--   <i>See:</i> <a>newMetricDatum</a> smart constructor.
data MetricDatum
MetricDatum' :: Maybe Natural -> Maybe StandardUnit -> Maybe [Double] -> Maybe [Double] -> Maybe StatisticSet -> Maybe ISO8601 -> Maybe Double -> Maybe [Dimension] -> Text -> MetricDatum

-- | Valid values are 1 and 60. Setting this to 1 specifies this metric as
--   a high-resolution metric, so that CloudWatch stores the metric with
--   sub-minute resolution down to one second. Setting this to 60 specifies
--   this metric as a regular-resolution metric, which CloudWatch stores at
--   1-minute resolution. Currently, high resolution is available only for
--   custom metrics. For more information about high-resolution metrics,
--   see <a>High-Resolution Metrics</a> in the <i>Amazon CloudWatch User
--   Guide</i>.
--   
--   This field is optional, if you do not specify it the default of 60 is
--   used.
[$sel:storageResolution:MetricDatum'] :: MetricDatum -> Maybe Natural

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, this displays the unit that is used for
--   the metric.
[$sel:unit:MetricDatum'] :: MetricDatum -> Maybe StandardUnit

-- | Array of numbers representing the values for the metric during the
--   period. Each unique value is listed just once in this array, and the
--   corresponding number in the <tt>Counts</tt> array specifies the number
--   of times that value occurred during the period. You can include up to
--   150 unique values in each <tt>PutMetricData</tt> action that specifies
--   a <tt>Values</tt> array.
--   
--   Although the <tt>Values</tt> array accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
[$sel:values:MetricDatum'] :: MetricDatum -> Maybe [Double]

-- | Array of numbers that is used along with the <tt>Values</tt> array.
--   Each number in the <tt>Count</tt> array is the number of times the
--   corresponding value in the <tt>Values</tt> array occurred during the
--   period.
--   
--   If you omit the <tt>Counts</tt> array, the default of 1 is used as the
--   value for each count. If you include a <tt>Counts</tt> array, it must
--   include the same amount of values as the <tt>Values</tt> array.
[$sel:counts:MetricDatum'] :: MetricDatum -> Maybe [Double]

-- | The statistical values for the metric.
[$sel:statisticValues:MetricDatum'] :: MetricDatum -> Maybe StatisticSet

-- | The time the metric data was received, expressed as the number of
--   milliseconds since Jan 1, 1970 00:00:00 UTC.
[$sel:timestamp:MetricDatum'] :: MetricDatum -> Maybe ISO8601

-- | The value for the metric.
--   
--   Although the parameter accepts numbers of type Double, CloudWatch
--   rejects values that are either too small or too large. Values must be
--   in the range of -2^360 to 2^360. In addition, special values (for
--   example, NaN, +Infinity, -Infinity) are not supported.
[$sel:value:MetricDatum'] :: MetricDatum -> Maybe Double

-- | The dimensions associated with the metric.
[$sel:dimensions:MetricDatum'] :: MetricDatum -> Maybe [Dimension]

-- | The name of the metric.
[$sel:metricName:MetricDatum'] :: MetricDatum -> Text

-- | Create a value of <a>MetricDatum</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageResolution:MetricDatum'</a>,
--   <a>metricDatum_storageResolution</a> - Valid values are 1 and 60.
--   Setting this to 1 specifies this metric as a high-resolution metric,
--   so that CloudWatch stores the metric with sub-minute resolution down
--   to one second. Setting this to 60 specifies this metric as a
--   regular-resolution metric, which CloudWatch stores at 1-minute
--   resolution. Currently, high resolution is available only for custom
--   metrics. For more information about high-resolution metrics, see
--   <a>High-Resolution Metrics</a> in the <i>Amazon CloudWatch User
--   Guide</i>.
--   
--   This field is optional, if you do not specify it the default of 60 is
--   used.
--   
--   <a>$sel:unit:MetricDatum'</a>, <a>metricDatum_unit</a> - When you are
--   using a <tt>Put</tt> operation, this defines what unit you want to use
--   when storing the metric.
--   
--   In a <tt>Get</tt> operation, this displays the unit that is used for
--   the metric.
--   
--   <a>$sel:values:MetricDatum'</a>, <a>metricDatum_values</a> - Array of
--   numbers representing the values for the metric during the period. Each
--   unique value is listed just once in this array, and the corresponding
--   number in the <tt>Counts</tt> array specifies the number of times that
--   value occurred during the period. You can include up to 150 unique
--   values in each <tt>PutMetricData</tt> action that specifies a
--   <tt>Values</tt> array.
--   
--   Although the <tt>Values</tt> array accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
--   
--   <a>$sel:counts:MetricDatum'</a>, <a>metricDatum_counts</a> - Array of
--   numbers that is used along with the <tt>Values</tt> array. Each number
--   in the <tt>Count</tt> array is the number of times the corresponding
--   value in the <tt>Values</tt> array occurred during the period.
--   
--   If you omit the <tt>Counts</tt> array, the default of 1 is used as the
--   value for each count. If you include a <tt>Counts</tt> array, it must
--   include the same amount of values as the <tt>Values</tt> array.
--   
--   <a>$sel:statisticValues:MetricDatum'</a>,
--   <a>metricDatum_statisticValues</a> - The statistical values for the
--   metric.
--   
--   <a>$sel:timestamp:MetricDatum'</a>, <a>metricDatum_timestamp</a> - The
--   time the metric data was received, expressed as the number of
--   milliseconds since Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:value:MetricDatum'</a>, <a>metricDatum_value</a> - The value
--   for the metric.
--   
--   Although the parameter accepts numbers of type Double, CloudWatch
--   rejects values that are either too small or too large. Values must be
--   in the range of -2^360 to 2^360. In addition, special values (for
--   example, NaN, +Infinity, -Infinity) are not supported.
--   
--   <a>$sel:dimensions:MetricDatum'</a>, <a>metricDatum_dimensions</a> -
--   The dimensions associated with the metric.
--   
--   <a>$sel:metricName:MetricDatum'</a>, <a>metricDatum_metricName</a> -
--   The name of the metric.
newMetricDatum :: Text -> MetricDatum

-- | Valid values are 1 and 60. Setting this to 1 specifies this metric as
--   a high-resolution metric, so that CloudWatch stores the metric with
--   sub-minute resolution down to one second. Setting this to 60 specifies
--   this metric as a regular-resolution metric, which CloudWatch stores at
--   1-minute resolution. Currently, high resolution is available only for
--   custom metrics. For more information about high-resolution metrics,
--   see <a>High-Resolution Metrics</a> in the <i>Amazon CloudWatch User
--   Guide</i>.
--   
--   This field is optional, if you do not specify it the default of 60 is
--   used.
metricDatum_storageResolution :: Lens' MetricDatum (Maybe Natural)

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, this displays the unit that is used for
--   the metric.
metricDatum_unit :: Lens' MetricDatum (Maybe StandardUnit)

-- | Array of numbers representing the values for the metric during the
--   period. Each unique value is listed just once in this array, and the
--   corresponding number in the <tt>Counts</tt> array specifies the number
--   of times that value occurred during the period. You can include up to
--   150 unique values in each <tt>PutMetricData</tt> action that specifies
--   a <tt>Values</tt> array.
--   
--   Although the <tt>Values</tt> array accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
metricDatum_values :: Lens' MetricDatum (Maybe [Double])

-- | Array of numbers that is used along with the <tt>Values</tt> array.
--   Each number in the <tt>Count</tt> array is the number of times the
--   corresponding value in the <tt>Values</tt> array occurred during the
--   period.
--   
--   If you omit the <tt>Counts</tt> array, the default of 1 is used as the
--   value for each count. If you include a <tt>Counts</tt> array, it must
--   include the same amount of values as the <tt>Values</tt> array.
metricDatum_counts :: Lens' MetricDatum (Maybe [Double])

-- | The statistical values for the metric.
metricDatum_statisticValues :: Lens' MetricDatum (Maybe StatisticSet)

-- | The time the metric data was received, expressed as the number of
--   milliseconds since Jan 1, 1970 00:00:00 UTC.
metricDatum_timestamp :: Lens' MetricDatum (Maybe UTCTime)

-- | The value for the metric.
--   
--   Although the parameter accepts numbers of type Double, CloudWatch
--   rejects values that are either too small or too large. Values must be
--   in the range of -2^360 to 2^360. In addition, special values (for
--   example, NaN, +Infinity, -Infinity) are not supported.
metricDatum_value :: Lens' MetricDatum (Maybe Double)

-- | The dimensions associated with the metric.
metricDatum_dimensions :: Lens' MetricDatum (Maybe [Dimension])

-- | The name of the metric.
metricDatum_metricName :: Lens' MetricDatum Text

-- | This structure defines the metric to be returned, along with the
--   statistics, period, and units.
--   
--   <i>See:</i> <a>newMetricStat</a> smart constructor.
data MetricStat
MetricStat' :: Maybe StandardUnit -> Metric -> Natural -> Text -> MetricStat

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, if you omit <tt>Unit</tt> then all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
[$sel:unit:MetricStat'] :: MetricStat -> Maybe StandardUnit

-- | The metric to return, including the metric name, namespace, and
--   dimensions.
[$sel:metric:MetricStat'] :: MetricStat -> Metric

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
[$sel:period:MetricStat'] :: MetricStat -> Natural

-- | The statistic to return. It can include any CloudWatch statistic or
--   extended statistic.
[$sel:stat:MetricStat'] :: MetricStat -> Text

-- | Create a value of <a>MetricStat</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:MetricStat'</a>, <a>metricStat_unit</a> - When you are
--   using a <tt>Put</tt> operation, this defines what unit you want to use
--   when storing the metric.
--   
--   In a <tt>Get</tt> operation, if you omit <tt>Unit</tt> then all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
--   
--   <a>$sel:metric:MetricStat'</a>, <a>metricStat_metric</a> - The metric
--   to return, including the metric name, namespace, and dimensions.
--   
--   <a>$sel:period:MetricStat'</a>, <a>metricStat_period</a> - The
--   granularity, in seconds, of the returned data points. For metrics with
--   regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
--   
--   <a>$sel:stat:MetricStat'</a>, <a>metricStat_stat</a> - The statistic
--   to return. It can include any CloudWatch statistic or extended
--   statistic.
newMetricStat :: Metric -> Natural -> Text -> MetricStat

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, if you omit <tt>Unit</tt> then all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
metricStat_unit :: Lens' MetricStat (Maybe StandardUnit)

-- | The metric to return, including the metric name, namespace, and
--   dimensions.
metricStat_metric :: Lens' MetricStat Metric

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
metricStat_period :: Lens' MetricStat Natural

-- | The statistic to return. It can include any CloudWatch statistic or
--   extended statistic.
metricStat_stat :: Lens' MetricStat Text

-- | This structure contains the configuration information about one metric
--   stream.
--   
--   <i>See:</i> <a>newMetricStreamEntry</a> smart constructor.
data MetricStreamEntry
MetricStreamEntry' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe MetricStreamOutputFormat -> MetricStreamEntry

-- | The ARN of the Kinesis Firehose devlivery stream that is used for this
--   metric stream.
[$sel:firehoseArn:MetricStreamEntry'] :: MetricStreamEntry -> Maybe Text

-- | The ARN of the metric stream.
[$sel:arn:MetricStreamEntry'] :: MetricStreamEntry -> Maybe Text

-- | The date that the metric stream was originally created.
[$sel:creationDate:MetricStreamEntry'] :: MetricStreamEntry -> Maybe ISO8601

-- | The name of the metric stream.
[$sel:name:MetricStreamEntry'] :: MetricStreamEntry -> Maybe Text

-- | The date that the configuration of this metric stream was most
--   recently updated.
[$sel:lastUpdateDate:MetricStreamEntry'] :: MetricStreamEntry -> Maybe ISO8601

-- | The current state of this stream. Valid values are <tt>running</tt>
--   and <tt>stopped</tt>.
[$sel:state:MetricStreamEntry'] :: MetricStreamEntry -> Maybe Text

-- | The output format of this metric stream. Valid values are
--   <tt>json</tt> and <tt>opentelemetry0.7</tt>.
[$sel:outputFormat:MetricStreamEntry'] :: MetricStreamEntry -> Maybe MetricStreamOutputFormat

-- | Create a value of <a>MetricStreamEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firehoseArn:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_firehoseArn</a> - The ARN of the Kinesis Firehose
--   devlivery stream that is used for this metric stream.
--   
--   <a>$sel:arn:MetricStreamEntry'</a>, <a>metricStreamEntry_arn</a> - The
--   ARN of the metric stream.
--   
--   <a>$sel:creationDate:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_creationDate</a> - The date that the metric
--   stream was originally created.
--   
--   <a>$sel:name:MetricStreamEntry'</a>, <a>metricStreamEntry_name</a> -
--   The name of the metric stream.
--   
--   <a>$sel:lastUpdateDate:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_lastUpdateDate</a> - The date that the
--   configuration of this metric stream was most recently updated.
--   
--   <a>$sel:state:MetricStreamEntry'</a>, <a>metricStreamEntry_state</a> -
--   The current state of this stream. Valid values are <tt>running</tt>
--   and <tt>stopped</tt>.
--   
--   <a>$sel:outputFormat:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_outputFormat</a> - The output format of this
--   metric stream. Valid values are <tt>json</tt> and
--   <tt>opentelemetry0.7</tt>.
newMetricStreamEntry :: MetricStreamEntry

-- | The ARN of the Kinesis Firehose devlivery stream that is used for this
--   metric stream.
metricStreamEntry_firehoseArn :: Lens' MetricStreamEntry (Maybe Text)

-- | The ARN of the metric stream.
metricStreamEntry_arn :: Lens' MetricStreamEntry (Maybe Text)

-- | The date that the metric stream was originally created.
metricStreamEntry_creationDate :: Lens' MetricStreamEntry (Maybe UTCTime)

-- | The name of the metric stream.
metricStreamEntry_name :: Lens' MetricStreamEntry (Maybe Text)

-- | The date that the configuration of this metric stream was most
--   recently updated.
metricStreamEntry_lastUpdateDate :: Lens' MetricStreamEntry (Maybe UTCTime)

-- | The current state of this stream. Valid values are <tt>running</tt>
--   and <tt>stopped</tt>.
metricStreamEntry_state :: Lens' MetricStreamEntry (Maybe Text)

-- | The output format of this metric stream. Valid values are
--   <tt>json</tt> and <tt>opentelemetry0.7</tt>.
metricStreamEntry_outputFormat :: Lens' MetricStreamEntry (Maybe MetricStreamOutputFormat)

-- | This structure contains the name of one of the metric namespaces that
--   is listed in a filter of a metric stream.
--   
--   <i>See:</i> <a>newMetricStreamFilter</a> smart constructor.
data MetricStreamFilter
MetricStreamFilter' :: Maybe Text -> MetricStreamFilter

-- | The name of the metric namespace in the filter.
[$sel:namespace:MetricStreamFilter'] :: MetricStreamFilter -> Maybe Text

-- | Create a value of <a>MetricStreamFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:MetricStreamFilter'</a>,
--   <a>metricStreamFilter_namespace</a> - The name of the metric namespace
--   in the filter.
newMetricStreamFilter :: MetricStreamFilter

-- | The name of the metric namespace in the filter.
metricStreamFilter_namespace :: Lens' MetricStreamFilter (Maybe Text)

-- | This array is empty if the API operation was successful for all the
--   rules specified in the request. If the operation could not process one
--   of the rules, the following data is returned for each of those rules.
--   
--   <i>See:</i> <a>newPartialFailure</a> smart constructor.
data PartialFailure
PartialFailure' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PartialFailure

-- | The type of error.
[$sel:exceptionType:PartialFailure'] :: PartialFailure -> Maybe Text

-- | The code of the error.
[$sel:failureCode:PartialFailure'] :: PartialFailure -> Maybe Text

-- | A description of the error.
[$sel:failureDescription:PartialFailure'] :: PartialFailure -> Maybe Text

-- | The specified rule that could not be deleted.
[$sel:failureResource:PartialFailure'] :: PartialFailure -> Maybe Text

-- | Create a value of <a>PartialFailure</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptionType:PartialFailure'</a>,
--   <a>partialFailure_exceptionType</a> - The type of error.
--   
--   <a>$sel:failureCode:PartialFailure'</a>,
--   <a>partialFailure_failureCode</a> - The code of the error.
--   
--   <a>$sel:failureDescription:PartialFailure'</a>,
--   <a>partialFailure_failureDescription</a> - A description of the error.
--   
--   <a>$sel:failureResource:PartialFailure'</a>,
--   <a>partialFailure_failureResource</a> - The specified rule that could
--   not be deleted.
newPartialFailure :: PartialFailure

-- | The type of error.
partialFailure_exceptionType :: Lens' PartialFailure (Maybe Text)

-- | The code of the error.
partialFailure_failureCode :: Lens' PartialFailure (Maybe Text)

-- | A description of the error.
partialFailure_failureDescription :: Lens' PartialFailure (Maybe Text)

-- | The specified rule that could not be deleted.
partialFailure_failureResource :: Lens' PartialFailure (Maybe Text)

-- | Specifies one range of days or times to exclude from use for training
--   an anomaly detection model.
--   
--   <i>See:</i> <a>newRange</a> smart constructor.
data Range
Range' :: ISO8601 -> ISO8601 -> Range

-- | The start time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
[$sel:startTime:Range'] :: Range -> ISO8601

-- | The end time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
[$sel:endTime:Range'] :: Range -> ISO8601

-- | Create a value of <a>Range</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:Range'</a>, <a>range_startTime</a> - The start time
--   of the range to exclude. The format is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>.
--   For example, <tt>2019-07-01T23:59:59</tt>.
--   
--   <a>$sel:endTime:Range'</a>, <a>range_endTime</a> - The end time of the
--   range to exclude. The format is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
newRange :: UTCTime -> UTCTime -> Range

-- | The start time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
range_startTime :: Lens' Range UTCTime

-- | The end time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
range_endTime :: Lens' Range UTCTime

-- | Represents a set of statistics that describes a specific metric.
--   
--   <i>See:</i> <a>newStatisticSet</a> smart constructor.
data StatisticSet
StatisticSet' :: Double -> Double -> Double -> Double -> StatisticSet

-- | The number of samples used for the statistic set.
[$sel:sampleCount:StatisticSet'] :: StatisticSet -> Double

-- | The sum of values for the sample set.
[$sel:sum:StatisticSet'] :: StatisticSet -> Double

-- | The minimum value of the sample set.
[$sel:minimum:StatisticSet'] :: StatisticSet -> Double

-- | The maximum value of the sample set.
[$sel:maximum:StatisticSet'] :: StatisticSet -> Double

-- | Create a value of <a>StatisticSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sampleCount:StatisticSet'</a>, <a>statisticSet_sampleCount</a>
--   - The number of samples used for the statistic set.
--   
--   <a>$sel:sum:StatisticSet'</a>, <a>statisticSet_sum</a> - The sum of
--   values for the sample set.
--   
--   <a>$sel:minimum:StatisticSet'</a>, <a>statisticSet_minimum</a> - The
--   minimum value of the sample set.
--   
--   <a>$sel:maximum:StatisticSet'</a>, <a>statisticSet_maximum</a> - The
--   maximum value of the sample set.
newStatisticSet :: Double -> Double -> Double -> Double -> StatisticSet

-- | The number of samples used for the statistic set.
statisticSet_sampleCount :: Lens' StatisticSet Double

-- | The sum of values for the sample set.
statisticSet_sum :: Lens' StatisticSet Double

-- | The minimum value of the sample set.
statisticSet_minimum :: Lens' StatisticSet Double

-- | The maximum value of the sample set.
statisticSet_maximum :: Lens' StatisticSet Double

-- | A key-value pair associated with a CloudWatch resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | A string that you can use to assign a value. The combination of tag
--   keys and values can help you organize and categorize your resources.
[$sel:key:Tag'] :: Tag -> Text

-- | The value for the specified tag key.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A string that you can use to
--   assign a value. The combination of tag keys and values can help you
--   organize and categorize your resources.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag key.
newTag :: Text -> Text -> Tag

-- | A string that you can use to assign a value. The combination of tag
--   keys and values can help you organize and categorize your resources.
tag_key :: Lens' Tag Text

-- | The value for the specified tag key.
tag_value :: Lens' Tag Text


-- | Assigns one or more tags (key-value pairs) to the specified CloudWatch
--   resource. Currently, the only CloudWatch resources that can be tagged
--   are alarms and Contributor Insights rules.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   Tags don't have any semantic meaning to Amazon Web Services and are
--   interpreted strictly as strings of characters.
--   
--   You can use the <tt>TagResource</tt> action with an alarm that already
--   has tags. If you specify a new tag key for the alarm, this tag is
--   appended to the list of tags associated with the alarm. If you specify
--   a tag key that is already associated with the alarm, the new tag value
--   that you specify replaces the previous value for that tag.
--   
--   You can associate as many as 50 tags with a CloudWatch resource.
module Network.AWS.CloudWatch.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The ARN of the CloudWatch resource that you're adding tags to.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | The list of key-value pairs to associate with the alarm.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The ARN of the CloudWatch resource that you're adding tags to.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The list of
--   key-value pairs to associate with the alarm.
newTagResource :: Text -> TagResource

-- | The ARN of the CloudWatch resource that you're adding tags to.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
tagResource_resourceARN :: Lens' TagResource Text

-- | The list of key-value pairs to associate with the alarm.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.TagResource.TagResource
instance GHC.Show.Show Network.AWS.CloudWatch.TagResource.TagResource
instance GHC.Read.Read Network.AWS.CloudWatch.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.CloudWatch.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.CloudWatch.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.CloudWatch.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.CloudWatch.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.TagResource.TagResource


-- | Stops the streaming of metrics for one or more of your metric streams.
module Network.AWS.CloudWatch.StopMetricStreams

-- | <i>See:</i> <a>newStopMetricStreams</a> smart constructor.
data StopMetricStreams
StopMetricStreams' :: [Text] -> StopMetricStreams

-- | The array of the names of metric streams to stop streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will stop streaming.
[$sel:names:StopMetricStreams'] :: StopMetricStreams -> [Text]

-- | Create a value of <a>StopMetricStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:StopMetricStreams'</a>, <a>stopMetricStreams_names</a> -
--   The array of the names of metric streams to stop streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will stop streaming.
newStopMetricStreams :: StopMetricStreams

-- | The array of the names of metric streams to stop streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will stop streaming.
stopMetricStreams_names :: Lens' StopMetricStreams [Text]

-- | <i>See:</i> <a>newStopMetricStreamsResponse</a> smart constructor.
data StopMetricStreamsResponse
StopMetricStreamsResponse' :: Int -> StopMetricStreamsResponse

-- | The response's http status code.
[$sel:httpStatus:StopMetricStreamsResponse'] :: StopMetricStreamsResponse -> Int

-- | Create a value of <a>StopMetricStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopMetricStreamsResponse'</a>,
--   <a>stopMetricStreamsResponse_httpStatus</a> - The response's http
--   status code.
newStopMetricStreamsResponse :: Int -> StopMetricStreamsResponse

-- | The response's http status code.
stopMetricStreamsResponse_httpStatus :: Lens' StopMetricStreamsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance GHC.Show.Show Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance GHC.Read.Read Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance GHC.Classes.Eq Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance GHC.Generics.Generic Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreamsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreamsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreamsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreamsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreamsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.StopMetricStreams.StopMetricStreams


-- | Starts the streaming of metrics for one or more of your metric
--   streams.
module Network.AWS.CloudWatch.StartMetricStreams

-- | <i>See:</i> <a>newStartMetricStreams</a> smart constructor.
data StartMetricStreams
StartMetricStreams' :: [Text] -> StartMetricStreams

-- | The array of the names of metric streams to start streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will start streaming.
[$sel:names:StartMetricStreams'] :: StartMetricStreams -> [Text]

-- | Create a value of <a>StartMetricStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:StartMetricStreams'</a>, <a>startMetricStreams_names</a>
--   - The array of the names of metric streams to start streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will start streaming.
newStartMetricStreams :: StartMetricStreams

-- | The array of the names of metric streams to start streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will start streaming.
startMetricStreams_names :: Lens' StartMetricStreams [Text]

-- | <i>See:</i> <a>newStartMetricStreamsResponse</a> smart constructor.
data StartMetricStreamsResponse
StartMetricStreamsResponse' :: Int -> StartMetricStreamsResponse

-- | The response's http status code.
[$sel:httpStatus:StartMetricStreamsResponse'] :: StartMetricStreamsResponse -> Int

-- | Create a value of <a>StartMetricStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartMetricStreamsResponse'</a>,
--   <a>startMetricStreamsResponse_httpStatus</a> - The response's http
--   status code.
newStartMetricStreamsResponse :: Int -> StartMetricStreamsResponse

-- | The response's http status code.
startMetricStreamsResponse_httpStatus :: Lens' StartMetricStreamsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance GHC.Show.Show Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance GHC.Read.Read Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance GHC.Classes.Eq Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance GHC.Generics.Generic Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreamsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreamsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreamsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreamsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreamsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.StartMetricStreams.StartMetricStreams


-- | Temporarily sets the state of an alarm for testing purposes. When the
--   updated state differs from the previous value, the action configured
--   for the appropriate state is invoked. For example, if your alarm is
--   configured to send an Amazon SNS message when an alarm is triggered,
--   temporarily changing the alarm state to <tt>ALARM</tt> sends an SNS
--   message.
--   
--   Metric alarms returns to their actual state quickly, often within
--   seconds. Because the metric alarm state change happens quickly, it is
--   typically only visible in the alarm's <b>History</b> tab in the Amazon
--   CloudWatch console or through <a>DescribeAlarmHistory</a>.
--   
--   If you use <tt>SetAlarmState</tt> on a composite alarm, the composite
--   alarm is not guaranteed to return to its actual state. It returns to
--   its actual state only once any of its children alarms change state. It
--   is also reevaluated if you update its configuration.
--   
--   If an alarm triggers EC2 Auto Scaling policies or application Auto
--   Scaling policies, you must include information in the
--   <tt>StateReasonData</tt> parameter to enable the policy to take the
--   correct action.
module Network.AWS.CloudWatch.SetAlarmState

-- | <i>See:</i> <a>newSetAlarmState</a> smart constructor.
data SetAlarmState
SetAlarmState' :: Maybe Text -> Text -> StateValue -> Text -> SetAlarmState

-- | The reason that this alarm is set to this specific state, in JSON
--   format.
--   
--   For SNS or EC2 alarm actions, this is just informational. But for EC2
--   Auto Scaling or application Auto Scaling alarm actions, the Auto
--   Scaling policy uses the information in this field to take the correct
--   action.
[$sel:stateReasonData:SetAlarmState'] :: SetAlarmState -> Maybe Text

-- | The name of the alarm.
[$sel:alarmName:SetAlarmState'] :: SetAlarmState -> Text

-- | The value of the state.
[$sel:stateValue:SetAlarmState'] :: SetAlarmState -> StateValue

-- | The reason that this alarm is set to this specific state, in text
--   format.
[$sel:stateReason:SetAlarmState'] :: SetAlarmState -> Text

-- | Create a value of <a>SetAlarmState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateReasonData:SetAlarmState'</a>,
--   <a>setAlarmState_stateReasonData</a> - The reason that this alarm is
--   set to this specific state, in JSON format.
--   
--   For SNS or EC2 alarm actions, this is just informational. But for EC2
--   Auto Scaling or application Auto Scaling alarm actions, the Auto
--   Scaling policy uses the information in this field to take the correct
--   action.
--   
--   <a>$sel:alarmName:SetAlarmState'</a>, <a>setAlarmState_alarmName</a> -
--   The name of the alarm.
--   
--   <a>$sel:stateValue:SetAlarmState'</a>, <a>setAlarmState_stateValue</a>
--   - The value of the state.
--   
--   <a>$sel:stateReason:SetAlarmState'</a>,
--   <a>setAlarmState_stateReason</a> - The reason that this alarm is set
--   to this specific state, in text format.
newSetAlarmState :: Text -> StateValue -> Text -> SetAlarmState

-- | The reason that this alarm is set to this specific state, in JSON
--   format.
--   
--   For SNS or EC2 alarm actions, this is just informational. But for EC2
--   Auto Scaling or application Auto Scaling alarm actions, the Auto
--   Scaling policy uses the information in this field to take the correct
--   action.
setAlarmState_stateReasonData :: Lens' SetAlarmState (Maybe Text)

-- | The name of the alarm.
setAlarmState_alarmName :: Lens' SetAlarmState Text

-- | The value of the state.
setAlarmState_stateValue :: Lens' SetAlarmState StateValue

-- | The reason that this alarm is set to this specific state, in text
--   format.
setAlarmState_stateReason :: Lens' SetAlarmState Text

-- | <i>See:</i> <a>newSetAlarmStateResponse</a> smart constructor.
data SetAlarmStateResponse
SetAlarmStateResponse' :: SetAlarmStateResponse

-- | Create a value of <a>SetAlarmStateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetAlarmStateResponse :: SetAlarmStateResponse
instance GHC.Generics.Generic Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance GHC.Show.Show Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance GHC.Read.Read Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance GHC.Classes.Eq Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance GHC.Generics.Generic Network.AWS.CloudWatch.SetAlarmState.SetAlarmStateResponse
instance GHC.Show.Show Network.AWS.CloudWatch.SetAlarmState.SetAlarmStateResponse
instance GHC.Read.Read Network.AWS.CloudWatch.SetAlarmState.SetAlarmStateResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.SetAlarmState.SetAlarmStateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.SetAlarmState.SetAlarmStateResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.SetAlarmState.SetAlarmState
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.SetAlarmState.SetAlarmState


-- | Creates or updates a metric stream. Metric streams can automatically
--   stream CloudWatch metrics to Amazon Web Services destinations
--   including Amazon S3 and to many third-party solutions.
--   
--   For more information, see <a>Using Metric Streams</a>.
--   
--   To create a metric stream, you must be logged on to an account that
--   has the <tt>iam:PassRole</tt> permission and either the
--   <tt>CloudWatchFullAccess</tt> policy or the
--   <tt>cloudwatch:PutMetricStream</tt> permission.
--   
--   When you create or update a metric stream, you choose one of the
--   following:
--   
--   <ul>
--   <li>Stream metrics from all metric namespaces in the account.</li>
--   <li>Stream metrics from all metric namespaces in the account, except
--   for the namespaces that you list in <tt>ExcludeFilters</tt>.</li>
--   <li>Stream metrics from only the metric namespaces that you list in
--   <tt>IncludeFilters</tt>.</li>
--   </ul>
--   
--   When you use <tt>PutMetricStream</tt> to create a new metric stream,
--   the stream is created in the <tt>running</tt> state. If you use it to
--   update an existing stream, the state of the stream is not changed.
module Network.AWS.CloudWatch.PutMetricStream

-- | <i>See:</i> <a>newPutMetricStream</a> smart constructor.
data PutMetricStream
PutMetricStream' :: Maybe [MetricStreamFilter] -> Maybe [Tag] -> Maybe [MetricStreamFilter] -> Text -> Text -> Text -> MetricStreamOutputFormat -> PutMetricStream

-- | If you specify this parameter, the stream sends only the metrics from
--   the metric namespaces that you specify here.
--   
--   You cannot include <tt>IncludeFilters</tt> and <tt>ExcludeFilters</tt>
--   in the same operation.
[$sel:includeFilters:PutMetricStream'] :: PutMetricStream -> Maybe [MetricStreamFilter]

-- | A list of key-value pairs to associate with the metric stream. You can
--   associate as many as 50 tags with a metric stream.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   You can use this parameter only when you are creating a new metric
--   stream. If you are using this operation to update an existing metric
--   stream, any tags you specify in this parameter are ignored. To change
--   the tags of an existing metric stream, use <a>TagResource</a> or
--   <a>UntagResource</a>.
[$sel:tags:PutMetricStream'] :: PutMetricStream -> Maybe [Tag]

-- | If you specify this parameter, the stream sends metrics from all
--   metric namespaces except for the namespaces that you specify here.
--   
--   You cannot include <tt>ExcludeFilters</tt> and <tt>IncludeFilters</tt>
--   in the same operation.
[$sel:excludeFilters:PutMetricStream'] :: PutMetricStream -> Maybe [MetricStreamFilter]

-- | If you are creating a new metric stream, this is the name for the new
--   stream. The name must be different than the names of other metric
--   streams in this account and Region.
--   
--   If you are updating a metric stream, specify the name of that stream
--   here.
--   
--   Valid characters are A-Z, a-z, 0-9, "-" and "_".
[$sel:name:PutMetricStream'] :: PutMetricStream -> Text

-- | The ARN of the Amazon Kinesis Firehose delivery stream to use for this
--   metric stream. This Amazon Kinesis Firehose delivery stream must
--   already exist and must be in the same account as the metric stream.
[$sel:firehoseArn:PutMetricStream'] :: PutMetricStream -> Text

-- | The ARN of an IAM role that this metric stream will use to access
--   Amazon Kinesis Firehose resources. This IAM role must already exist
--   and must be in the same account as the metric stream. This IAM role
--   must include the following permissions:
--   
--   <ul>
--   <li>firehose:PutRecord</li>
--   <li>firehose:PutRecordBatch</li>
--   </ul>
[$sel:roleArn:PutMetricStream'] :: PutMetricStream -> Text

-- | The output format for the stream. Valid values are <tt>json</tt> and
--   <tt>opentelemetry0.7</tt>. For more information about metric stream
--   output formats, see <a>Metric streams output formats</a>.
[$sel:outputFormat:PutMetricStream'] :: PutMetricStream -> MetricStreamOutputFormat

-- | Create a value of <a>PutMetricStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeFilters:PutMetricStream'</a>,
--   <a>putMetricStream_includeFilters</a> - If you specify this parameter,
--   the stream sends only the metrics from the metric namespaces that you
--   specify here.
--   
--   You cannot include <tt>IncludeFilters</tt> and <tt>ExcludeFilters</tt>
--   in the same operation.
--   
--   <a>$sel:tags:PutMetricStream'</a>, <a>putMetricStream_tags</a> - A
--   list of key-value pairs to associate with the metric stream. You can
--   associate as many as 50 tags with a metric stream.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   You can use this parameter only when you are creating a new metric
--   stream. If you are using this operation to update an existing metric
--   stream, any tags you specify in this parameter are ignored. To change
--   the tags of an existing metric stream, use <a>TagResource</a> or
--   <a>UntagResource</a>.
--   
--   <a>$sel:excludeFilters:PutMetricStream'</a>,
--   <a>putMetricStream_excludeFilters</a> - If you specify this parameter,
--   the stream sends metrics from all metric namespaces except for the
--   namespaces that you specify here.
--   
--   You cannot include <tt>ExcludeFilters</tt> and <tt>IncludeFilters</tt>
--   in the same operation.
--   
--   <a>$sel:name:PutMetricStream'</a>, <a>putMetricStream_name</a> - If
--   you are creating a new metric stream, this is the name for the new
--   stream. The name must be different than the names of other metric
--   streams in this account and Region.
--   
--   If you are updating a metric stream, specify the name of that stream
--   here.
--   
--   Valid characters are A-Z, a-z, 0-9, "-" and "_".
--   
--   <a>$sel:firehoseArn:PutMetricStream'</a>,
--   <a>putMetricStream_firehoseArn</a> - The ARN of the Amazon Kinesis
--   Firehose delivery stream to use for this metric stream. This Amazon
--   Kinesis Firehose delivery stream must already exist and must be in the
--   same account as the metric stream.
--   
--   <a>$sel:roleArn:PutMetricStream'</a>, <a>putMetricStream_roleArn</a> -
--   The ARN of an IAM role that this metric stream will use to access
--   Amazon Kinesis Firehose resources. This IAM role must already exist
--   and must be in the same account as the metric stream. This IAM role
--   must include the following permissions:
--   
--   <ul>
--   <li>firehose:PutRecord</li>
--   <li>firehose:PutRecordBatch</li>
--   </ul>
--   
--   <a>$sel:outputFormat:PutMetricStream'</a>,
--   <a>putMetricStream_outputFormat</a> - The output format for the
--   stream. Valid values are <tt>json</tt> and <tt>opentelemetry0.7</tt>.
--   For more information about metric stream output formats, see <a>Metric
--   streams output formats</a>.
newPutMetricStream :: Text -> Text -> Text -> MetricStreamOutputFormat -> PutMetricStream

-- | If you specify this parameter, the stream sends only the metrics from
--   the metric namespaces that you specify here.
--   
--   You cannot include <tt>IncludeFilters</tt> and <tt>ExcludeFilters</tt>
--   in the same operation.
putMetricStream_includeFilters :: Lens' PutMetricStream (Maybe [MetricStreamFilter])

-- | A list of key-value pairs to associate with the metric stream. You can
--   associate as many as 50 tags with a metric stream.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   You can use this parameter only when you are creating a new metric
--   stream. If you are using this operation to update an existing metric
--   stream, any tags you specify in this parameter are ignored. To change
--   the tags of an existing metric stream, use <a>TagResource</a> or
--   <a>UntagResource</a>.
putMetricStream_tags :: Lens' PutMetricStream (Maybe [Tag])

-- | If you specify this parameter, the stream sends metrics from all
--   metric namespaces except for the namespaces that you specify here.
--   
--   You cannot include <tt>ExcludeFilters</tt> and <tt>IncludeFilters</tt>
--   in the same operation.
putMetricStream_excludeFilters :: Lens' PutMetricStream (Maybe [MetricStreamFilter])

-- | If you are creating a new metric stream, this is the name for the new
--   stream. The name must be different than the names of other metric
--   streams in this account and Region.
--   
--   If you are updating a metric stream, specify the name of that stream
--   here.
--   
--   Valid characters are A-Z, a-z, 0-9, "-" and "_".
putMetricStream_name :: Lens' PutMetricStream Text

-- | The ARN of the Amazon Kinesis Firehose delivery stream to use for this
--   metric stream. This Amazon Kinesis Firehose delivery stream must
--   already exist and must be in the same account as the metric stream.
putMetricStream_firehoseArn :: Lens' PutMetricStream Text

-- | The ARN of an IAM role that this metric stream will use to access
--   Amazon Kinesis Firehose resources. This IAM role must already exist
--   and must be in the same account as the metric stream. This IAM role
--   must include the following permissions:
--   
--   <ul>
--   <li>firehose:PutRecord</li>
--   <li>firehose:PutRecordBatch</li>
--   </ul>
putMetricStream_roleArn :: Lens' PutMetricStream Text

-- | The output format for the stream. Valid values are <tt>json</tt> and
--   <tt>opentelemetry0.7</tt>. For more information about metric stream
--   output formats, see <a>Metric streams output formats</a>.
putMetricStream_outputFormat :: Lens' PutMetricStream MetricStreamOutputFormat

-- | <i>See:</i> <a>newPutMetricStreamResponse</a> smart constructor.
data PutMetricStreamResponse
PutMetricStreamResponse' :: Maybe Text -> Int -> PutMetricStreamResponse

-- | The ARN of the metric stream.
[$sel:arn:PutMetricStreamResponse'] :: PutMetricStreamResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutMetricStreamResponse'] :: PutMetricStreamResponse -> Int

-- | Create a value of <a>PutMetricStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutMetricStreamResponse'</a>,
--   <a>putMetricStreamResponse_arn</a> - The ARN of the metric stream.
--   
--   <a>$sel:httpStatus:PutMetricStreamResponse'</a>,
--   <a>putMetricStreamResponse_httpStatus</a> - The response's http status
--   code.
newPutMetricStreamResponse :: Int -> PutMetricStreamResponse

-- | The ARN of the metric stream.
putMetricStreamResponse_arn :: Lens' PutMetricStreamResponse (Maybe Text)

-- | The response's http status code.
putMetricStreamResponse_httpStatus :: Lens' PutMetricStreamResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance GHC.Show.Show Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance GHC.Read.Read Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutMetricStream.PutMetricStreamResponse
instance GHC.Show.Show Network.AWS.CloudWatch.PutMetricStream.PutMetricStreamResponse
instance GHC.Read.Read Network.AWS.CloudWatch.PutMetricStream.PutMetricStreamResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutMetricStream.PutMetricStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutMetricStream.PutMetricStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.PutMetricStream.PutMetricStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.PutMetricStream.PutMetricStream


-- | Publishes metric data points to Amazon CloudWatch. CloudWatch
--   associates the data points with the specified metric. If the specified
--   metric does not exist, CloudWatch creates the metric. When CloudWatch
--   creates a metric, it can take up to fifteen minutes for the metric to
--   appear in calls to <a>ListMetrics</a>.
--   
--   You can publish either individual data points in the <tt>Value</tt>
--   field, or arrays of values and the number of times each value occurred
--   during the period by using the <tt>Values</tt> and <tt>Counts</tt>
--   fields in the <tt>MetricDatum</tt> structure. Using the
--   <tt>Values</tt> and <tt>Counts</tt> method enables you to publish up
--   to 150 values per metric with one <tt>PutMetricData</tt> request, and
--   supports retrieving percentile statistics on this data.
--   
--   Each <tt>PutMetricData</tt> request is limited to 40 KB in size for
--   HTTP POST requests. You can send a payload compressed by gzip. Each
--   request is also limited to no more than 20 different metrics.
--   
--   Although the <tt>Value</tt> parameter accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
--   
--   You can use up to 10 dimensions per metric to further clarify what
--   data the metric collects. Each dimension consists of a Name and Value
--   pair. For more information about specifying dimensions, see
--   <a>Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   You specify the time stamp to be associated with each data point. You
--   can specify time stamps that are as much as two weeks before the
--   current date, and as much as 2 hours after the current day and time.
--   
--   Data points with time stamps from 24 hours ago or longer can take at
--   least 48 hours to become available for <a>GetMetricData</a> or
--   <a>GetMetricStatistics</a> from the time they are submitted. Data
--   points with time stamps between 3 and 24 hours ago can take as much as
--   2 hours to become available for for <a>GetMetricData</a> or
--   <a>GetMetricStatistics</a>.
--   
--   CloudWatch needs raw data points to calculate percentile statistics.
--   If you publish data using a statistic set instead, you can only
--   retrieve percentile statistics for this data if one of the following
--   conditions is true:
--   
--   <ul>
--   <li>The <tt>SampleCount</tt> value of the statistic set is 1 and
--   <tt>Min</tt>, <tt>Max</tt>, and <tt>Sum</tt> are all equal.</li>
--   <li>The <tt>Min</tt> and <tt>Max</tt> are equal, and <tt>Sum</tt> is
--   equal to <tt>Min</tt> multiplied by <tt>SampleCount</tt>.</li>
--   </ul>
module Network.AWS.CloudWatch.PutMetricData

-- | <i>See:</i> <a>newPutMetricData</a> smart constructor.
data PutMetricData
PutMetricData' :: Text -> [MetricDatum] -> PutMetricData

-- | The namespace for the metric data.
--   
--   To avoid conflicts with Amazon Web Services service namespaces, you
--   should not specify a namespace that begins with <tt>AWS/</tt>
[$sel:namespace:PutMetricData'] :: PutMetricData -> Text

-- | The data for the metric. The array can include no more than 20 metrics
--   per call.
[$sel:metricData:PutMetricData'] :: PutMetricData -> [MetricDatum]

-- | Create a value of <a>PutMetricData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:PutMetricData'</a>, <a>putMetricData_namespace</a> -
--   The namespace for the metric data.
--   
--   To avoid conflicts with Amazon Web Services service namespaces, you
--   should not specify a namespace that begins with <tt>AWS/</tt>
--   
--   <a>$sel:metricData:PutMetricData'</a>, <a>putMetricData_metricData</a>
--   - The data for the metric. The array can include no more than 20
--   metrics per call.
newPutMetricData :: Text -> PutMetricData

-- | The namespace for the metric data.
--   
--   To avoid conflicts with Amazon Web Services service namespaces, you
--   should not specify a namespace that begins with <tt>AWS/</tt>
putMetricData_namespace :: Lens' PutMetricData Text

-- | The data for the metric. The array can include no more than 20 metrics
--   per call.
putMetricData_metricData :: Lens' PutMetricData [MetricDatum]

-- | <i>See:</i> <a>newPutMetricDataResponse</a> smart constructor.
data PutMetricDataResponse
PutMetricDataResponse' :: PutMetricDataResponse

-- | Create a value of <a>PutMetricDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutMetricDataResponse :: PutMetricDataResponse
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance GHC.Show.Show Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance GHC.Read.Read Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutMetricData.PutMetricDataResponse
instance GHC.Show.Show Network.AWS.CloudWatch.PutMetricData.PutMetricDataResponse
instance GHC.Read.Read Network.AWS.CloudWatch.PutMetricData.PutMetricDataResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutMetricData.PutMetricDataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutMetricData.PutMetricDataResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.PutMetricData.PutMetricData
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.PutMetricData.PutMetricData


-- | Creates or updates an alarm and associates it with the specified
--   metric, metric math expression, or anomaly detection model.
--   
--   Alarms based on anomaly detection models cannot have Auto Scaling
--   actions.
--   
--   When this operation creates an alarm, the alarm state is immediately
--   set to <tt>INSUFFICIENT_DATA</tt>. The alarm is then evaluated and its
--   state is set appropriately. Any actions associated with the new state
--   are then executed.
--   
--   When you update an existing alarm, its state is left unchanged, but
--   the update completely overwrites the previous configuration of the
--   alarm.
--   
--   If you are an IAM user, you must have Amazon EC2 permissions for some
--   alarm operations:
--   
--   <ul>
--   <li>The <tt>iam:CreateServiceLinkedRole</tt> for all alarms with EC2
--   actions</li>
--   <li>The <tt>iam:CreateServiceLinkedRole</tt> to create an alarm with
--   Systems Manager OpsItem actions.</li>
--   </ul>
--   
--   The first time you create an alarm in the Management Console, the CLI,
--   or by using the PutMetricAlarm API, CloudWatch creates the necessary
--   service-linked role for you. The service-linked roles are called
--   <tt>AWSServiceRoleForCloudWatchEvents</tt> and
--   <tt>AWSServiceRoleForCloudWatchAlarms_ActionSSM</tt>. For more
--   information, see <a>Amazon Web Services service-linked role</a>.
--   
--   <b>Cross-account alarms</b>
--   
--   You can set an alarm on metrics in the current account, or in another
--   account. To create a cross-account alarm that watches a metric in a
--   different account, you must have completed the following
--   pre-requisites:
--   
--   <ul>
--   <li>The account where the metrics are located (the <i>sharing
--   account</i>) must already have a sharing role named
--   <b>CloudWatch-CrossAccountSharingRole</b>. If it does not already have
--   this role, you must create it using the instructions in __Set up a
--   sharing account__ in <a>Cross-account cross-Region CloudWatch
--   console</a>. The policy for that role must grant access to the ID of
--   the account where you are creating the alarm.</li>
--   <li>The account where you are creating the alarm (the /monitoring
--   account/) must already have a service-linked role named
--   <b>AWSServiceRoleForCloudWatchCrossAccount</b> to allow CloudWatch to
--   assume the sharing role in the sharing account. If it does not, you
--   must create it following the directions in __Set up a monitoring
--   account__ in <a>Cross-account cross-Region CloudWatch
--   console</a>.</li>
--   </ul>
module Network.AWS.CloudWatch.PutMetricAlarm

-- | <i>See:</i> <a>newPutMetricAlarm</a> smart constructor.
data PutMetricAlarm
PutMetricAlarm' :: Maybe Double -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe StandardUnit -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe [MetricDataQuery] -> Maybe [Tag] -> Maybe [Text] -> Maybe Statistic -> Maybe Text -> Maybe [Dimension] -> Maybe Bool -> Maybe Natural -> Maybe Text -> Text -> Natural -> ComparisonOperator -> PutMetricAlarm

-- | The value against which the specified statistic is compared.
--   
--   This parameter is required for alarms based on static thresholds, but
--   should not be used for alarms based on anomaly detection models.
[$sel:threshold:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Double

-- | The number of data points that must be breaching to trigger the alarm.
--   This is used only if you are setting an "M out of N" alarm. In that
--   case, this value is the M. For more information, see <a>Evaluating an
--   Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.
[$sel:datapointsToAlarm:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Natural

-- | Used only for alarms based on percentiles. If you specify
--   <tt>ignore</tt>, the alarm state does not change during periods with
--   too few data points to be statistically significant. If you specify
--   <tt>evaluate</tt> or omit this parameter, the alarm is always
--   evaluated and possibly changes state no matter how many data points
--   are available. For more information, see <a>Percentile-Based
--   CloudWatch Alarms and Low Data Samples</a>.
--   
--   Valid Values: <tt>evaluate | ignore</tt>
[$sel:evaluateLowSampleCountPercentile:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Text

-- | The percentile statistic for the metric specified in
--   <tt>MetricName</tt>. Specify a value between p0.0 and p100. When you
--   call <tt>PutMetricAlarm</tt> and specify a <tt>MetricName</tt>, you
--   must specify either <tt>Statistic</tt> or <tt>ExtendedStatistic,</tt>
--   but not both.
[$sel:extendedStatistic:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Text

-- | If this is an alarm based on an anomaly detection model, make this
--   value match the ID of the <tt>ANOMALY_DETECTION_BAND</tt> function.
--   
--   For an example of how to use this parameter, see the __Anomaly
--   Detection Model Alarm__ example on this page.
--   
--   If your alarm uses this parameter, it cannot have Auto Scaling
--   actions.
[$sel:thresholdMetricId:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Text

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt> | <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt> |
--   <tt>arn:aws:ssm-incidents::account-id:response-plan:response-plan-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
[$sel:alarmActions:PutMetricAlarm'] :: PutMetricAlarm -> Maybe [Text]

-- | The unit of measure for the statistic. For example, the units for the
--   Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the
--   number of bytes that an instance receives on all network interfaces.
--   You can also specify a unit when you create a custom metric. Units
--   help provide conceptual meaning to your data. Metric data points that
--   specify a unit of measure, such as Percent, are aggregated separately.
--   
--   If you don't specify <tt>Unit</tt>, CloudWatch retrieves all unit
--   types that have been published for the metric and attempts to evaluate
--   the alarm. Usually, metrics are published with only one unit, so the
--   alarm works as intended.
--   
--   However, if the metric is published with multiple types of units and
--   you don't specify a unit, the alarm's behavior is not defined and it
--   behaves predictably.
--   
--   We recommend omitting <tt>Unit</tt> so that you don't inadvertently
--   specify an incorrect unit that is not published for this metric. Doing
--   so causes the alarm to be stuck in the <tt>INSUFFICIENT DATA</tt>
--   state.
[$sel:unit:PutMetricAlarm'] :: PutMetricAlarm -> Maybe StandardUnit

-- | The name for the metric associated with the alarm. For each
--   <tt>PutMetricAlarm</tt> operation, you must specify either
--   <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   If you are creating an alarm based on a math expression, you cannot
--   specify this parameter, or any of the <tt>Dimensions</tt>,
--   <tt>Period</tt>, <tt>Namespace</tt>, <tt>Statistic</tt>, or
--   <tt>ExtendedStatistic</tt> parameters. Instead, you specify all this
--   information in the <tt>Metrics</tt> array.
[$sel:metricName:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Text

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>&gt;arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
[$sel:insufficientDataActions:PutMetricAlarm'] :: PutMetricAlarm -> Maybe [Text]

-- | Sets how this alarm is to handle missing data points. If
--   <tt>TreatMissingData</tt> is omitted, the default behavior of
--   <tt>missing</tt> is used. For more information, see <a>Configuring How
--   CloudWatch Alarms Treats Missing Data</a>.
--   
--   Valid Values: <tt>breaching | notBreaching | ignore | missing</tt>
[$sel:treatMissingData:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Text

-- | An array of <tt>MetricDataQuery</tt> structures that enable you to
--   create an alarm based on the result of a metric math expression. For
--   each <tt>PutMetricAlarm</tt> operation, you must specify either
--   <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   Each item in the <tt>Metrics</tt> array either retrieves a metric or
--   performs a math expression.
--   
--   One item in the <tt>Metrics</tt> array is the expression that the
--   alarm watches. You designate this expression by setting
--   <tt>ReturnData</tt> to true for this object in the array. For more
--   information, see <a>MetricDataQuery</a>.
--   
--   If you use the <tt>Metrics</tt> parameter, you cannot include the
--   <tt>MetricName</tt>, <tt>Dimensions</tt>, <tt>Period</tt>,
--   <tt>Namespace</tt>, <tt>Statistic</tt>, or <tt>ExtendedStatistic</tt>
--   parameters of <tt>PutMetricAlarm</tt> in the same operation. Instead,
--   you retrieve the metrics you are using in your math expression as part
--   of the <tt>Metrics</tt> array.
[$sel:metrics:PutMetricAlarm'] :: PutMetricAlarm -> Maybe [MetricDataQuery]

-- | A list of key-value pairs to associate with the alarm. You can
--   associate as many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   If you are using this operation to update an existing alarm, any tags
--   you specify in this parameter are ignored. To change the tags of an
--   existing alarm, use <a>TagResource</a> or <a>UntagResource</a>.
[$sel:tags:PutMetricAlarm'] :: PutMetricAlarm -> Maybe [Tag]

-- | The actions to execute when this alarm transitions to an <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
[$sel:oKActions:PutMetricAlarm'] :: PutMetricAlarm -> Maybe [Text]

-- | The statistic for the metric specified in <tt>MetricName</tt>, other
--   than percentile. For percentile statistics, use
--   <tt>ExtendedStatistic</tt>. When you call <tt>PutMetricAlarm</tt> and
--   specify a <tt>MetricName</tt>, you must specify either
--   <tt>Statistic</tt> or <tt>ExtendedStatistic,</tt> but not both.
[$sel:statistic:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Statistic

-- | The namespace for the metric associated specified in
--   <tt>MetricName</tt>.
[$sel:namespace:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Text

-- | The dimensions for the metric specified in <tt>MetricName</tt>.
[$sel:dimensions:PutMetricAlarm'] :: PutMetricAlarm -> Maybe [Dimension]

-- | Indicates whether actions should be executed during any changes to the
--   alarm state. The default is <tt>TRUE</tt>.
[$sel:actionsEnabled:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Bool

-- | The length, in seconds, used each time the metric specified in
--   <tt>MetricName</tt> is evaluated. Valid values are 10, 30, and any
--   multiple of 60.
--   
--   <tt>Period</tt> is required for alarms based on static thresholds. If
--   you are creating an alarm based on a metric math expression, you
--   specify the period for each metric within the objects in the
--   <tt>Metrics</tt> array.
--   
--   Be sure to specify 10 or 30 only for metrics that are stored by a
--   <tt>PutMetricData</tt> call with a <tt>StorageResolution</tt> of 1. If
--   you specify a period of 10 or 30 for a metric that does not have
--   sub-minute resolution, the alarm still attempts to gather data at the
--   period rate that you specify. In this case, it does not receive data
--   for the attempts that do not correspond to a one-minute data
--   resolution, and the alarm might often lapse into INSUFFICENT_DATA
--   status. Specifying 10 or 30 also sets this alarm as a high-resolution
--   alarm, which has a higher charge than other alarms. For more
--   information about pricing, see <a>Amazon CloudWatch Pricing</a>.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so <tt>Period</tt> multiplied by <tt>EvaluationPeriods</tt>
--   cannot be more than 86,400 seconds.
[$sel:period:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Natural

-- | The description for the alarm.
[$sel:alarmDescription:PutMetricAlarm'] :: PutMetricAlarm -> Maybe Text

-- | The name for the alarm. This name must be unique within the Region.
[$sel:alarmName:PutMetricAlarm'] :: PutMetricAlarm -> Text

-- | The number of periods over which data is compared to the specified
--   threshold. If you are setting an alarm that requires that a number of
--   consecutive data points be breaching to trigger the alarm, this value
--   specifies that number. If you are setting an "M out of N" alarm, this
--   value is the N.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so this number multiplied by <tt>Period</tt> cannot be more than
--   86,400 seconds.
[$sel:evaluationPeriods:PutMetricAlarm'] :: PutMetricAlarm -> Natural

-- | The arithmetic operation to use when comparing the specified statistic
--   and threshold. The specified statistic value is used as the first
--   operand.
--   
--   The values <tt>LessThanLowerOrGreaterThanUpperThreshold</tt>,
--   <tt>LessThanLowerThreshold</tt>, and
--   <tt>GreaterThanUpperThreshold</tt> are used only for alarms based on
--   anomaly detection models.
[$sel:comparisonOperator:PutMetricAlarm'] :: PutMetricAlarm -> ComparisonOperator

-- | Create a value of <a>PutMetricAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:PutMetricAlarm'</a>, <a>putMetricAlarm_threshold</a>
--   - The value against which the specified statistic is compared.
--   
--   This parameter is required for alarms based on static thresholds, but
--   should not be used for alarms based on anomaly detection models.
--   
--   <a>$sel:datapointsToAlarm:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_datapointsToAlarm</a> - The number of data points
--   that must be breaching to trigger the alarm. This is used only if you
--   are setting an "M out of N" alarm. In that case, this value is the M.
--   For more information, see <a>Evaluating an Alarm</a> in the <i>Amazon
--   CloudWatch User Guide</i>.
--   
--   <a>$sel:evaluateLowSampleCountPercentile:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_evaluateLowSampleCountPercentile</a> - Used only for
--   alarms based on percentiles. If you specify <tt>ignore</tt>, the alarm
--   state does not change during periods with too few data points to be
--   statistically significant. If you specify <tt>evaluate</tt> or omit
--   this parameter, the alarm is always evaluated and possibly changes
--   state no matter how many data points are available. For more
--   information, see <a>Percentile-Based CloudWatch Alarms and Low Data
--   Samples</a>.
--   
--   Valid Values: <tt>evaluate | ignore</tt>
--   
--   <a>$sel:extendedStatistic:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_extendedStatistic</a> - The percentile statistic for
--   the metric specified in <tt>MetricName</tt>. Specify a value between
--   p0.0 and p100. When you call <tt>PutMetricAlarm</tt> and specify a
--   <tt>MetricName</tt>, you must specify either <tt>Statistic</tt> or
--   <tt>ExtendedStatistic,</tt> but not both.
--   
--   <a>$sel:thresholdMetricId:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_thresholdMetricId</a> - If this is an alarm based on
--   an anomaly detection model, make this value match the ID of the
--   <tt>ANOMALY_DETECTION_BAND</tt> function.
--   
--   For an example of how to use this parameter, see the __Anomaly
--   Detection Model Alarm__ example on this page.
--   
--   If your alarm uses this parameter, it cannot have Auto Scaling
--   actions.
--   
--   <a>$sel:alarmActions:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_alarmActions</a> - The actions to execute when this
--   alarm transitions to the <tt>ALARM</tt> state from any other state.
--   Each action is specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt> | <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt> |
--   <tt>arn:aws:ssm-incidents::account-id:response-plan:response-plan-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
--   
--   <a>$sel:unit:PutMetricAlarm'</a>, <a>putMetricAlarm_unit</a> - The
--   unit of measure for the statistic. For example, the units for the
--   Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the
--   number of bytes that an instance receives on all network interfaces.
--   You can also specify a unit when you create a custom metric. Units
--   help provide conceptual meaning to your data. Metric data points that
--   specify a unit of measure, such as Percent, are aggregated separately.
--   
--   If you don't specify <tt>Unit</tt>, CloudWatch retrieves all unit
--   types that have been published for the metric and attempts to evaluate
--   the alarm. Usually, metrics are published with only one unit, so the
--   alarm works as intended.
--   
--   However, if the metric is published with multiple types of units and
--   you don't specify a unit, the alarm's behavior is not defined and it
--   behaves predictably.
--   
--   We recommend omitting <tt>Unit</tt> so that you don't inadvertently
--   specify an incorrect unit that is not published for this metric. Doing
--   so causes the alarm to be stuck in the <tt>INSUFFICIENT DATA</tt>
--   state.
--   
--   <a>$sel:metricName:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_metricName</a> - The name for the metric associated
--   with the alarm. For each <tt>PutMetricAlarm</tt> operation, you must
--   specify either <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   If you are creating an alarm based on a math expression, you cannot
--   specify this parameter, or any of the <tt>Dimensions</tt>,
--   <tt>Period</tt>, <tt>Namespace</tt>, <tt>Statistic</tt>, or
--   <tt>ExtendedStatistic</tt> parameters. Instead, you specify all this
--   information in the <tt>Metrics</tt> array.
--   
--   <a>$sel:insufficientDataActions:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_insufficientDataActions</a> - The actions to execute
--   when this alarm transitions to the <tt>INSUFFICIENT_DATA</tt> state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>&gt;arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   
--   <a>$sel:treatMissingData:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_treatMissingData</a> - Sets how this alarm is to
--   handle missing data points. If <tt>TreatMissingData</tt> is omitted,
--   the default behavior of <tt>missing</tt> is used. For more
--   information, see <a>Configuring How CloudWatch Alarms Treats Missing
--   Data</a>.
--   
--   Valid Values: <tt>breaching | notBreaching | ignore | missing</tt>
--   
--   <a>$sel:metrics:PutMetricAlarm'</a>, <a>putMetricAlarm_metrics</a> -
--   An array of <tt>MetricDataQuery</tt> structures that enable you to
--   create an alarm based on the result of a metric math expression. For
--   each <tt>PutMetricAlarm</tt> operation, you must specify either
--   <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   Each item in the <tt>Metrics</tt> array either retrieves a metric or
--   performs a math expression.
--   
--   One item in the <tt>Metrics</tt> array is the expression that the
--   alarm watches. You designate this expression by setting
--   <tt>ReturnData</tt> to true for this object in the array. For more
--   information, see <a>MetricDataQuery</a>.
--   
--   If you use the <tt>Metrics</tt> parameter, you cannot include the
--   <tt>MetricName</tt>, <tt>Dimensions</tt>, <tt>Period</tt>,
--   <tt>Namespace</tt>, <tt>Statistic</tt>, or <tt>ExtendedStatistic</tt>
--   parameters of <tt>PutMetricAlarm</tt> in the same operation. Instead,
--   you retrieve the metrics you are using in your math expression as part
--   of the <tt>Metrics</tt> array.
--   
--   <a>$sel:tags:PutMetricAlarm'</a>, <a>putMetricAlarm_tags</a> - A list
--   of key-value pairs to associate with the alarm. You can associate as
--   many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   If you are using this operation to update an existing alarm, any tags
--   you specify in this parameter are ignored. To change the tags of an
--   existing alarm, use <a>TagResource</a> or <a>UntagResource</a>.
--   
--   <a>$sel:oKActions:PutMetricAlarm'</a>, <a>putMetricAlarm_oKActions</a>
--   - The actions to execute when this alarm transitions to an <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
--   
--   <a>$sel:statistic:PutMetricAlarm'</a>, <a>putMetricAlarm_statistic</a>
--   - The statistic for the metric specified in <tt>MetricName</tt>, other
--   than percentile. For percentile statistics, use
--   <tt>ExtendedStatistic</tt>. When you call <tt>PutMetricAlarm</tt> and
--   specify a <tt>MetricName</tt>, you must specify either
--   <tt>Statistic</tt> or <tt>ExtendedStatistic,</tt> but not both.
--   
--   <a>$sel:namespace:PutMetricAlarm'</a>, <a>putMetricAlarm_namespace</a>
--   - The namespace for the metric associated specified in
--   <tt>MetricName</tt>.
--   
--   <a>$sel:dimensions:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_dimensions</a> - The dimensions for the metric
--   specified in <tt>MetricName</tt>.
--   
--   <a>$sel:actionsEnabled:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_actionsEnabled</a> - Indicates whether actions
--   should be executed during any changes to the alarm state. The default
--   is <tt>TRUE</tt>.
--   
--   <a>$sel:period:PutMetricAlarm'</a>, <a>putMetricAlarm_period</a> - The
--   length, in seconds, used each time the metric specified in
--   <tt>MetricName</tt> is evaluated. Valid values are 10, 30, and any
--   multiple of 60.
--   
--   <tt>Period</tt> is required for alarms based on static thresholds. If
--   you are creating an alarm based on a metric math expression, you
--   specify the period for each metric within the objects in the
--   <tt>Metrics</tt> array.
--   
--   Be sure to specify 10 or 30 only for metrics that are stored by a
--   <tt>PutMetricData</tt> call with a <tt>StorageResolution</tt> of 1. If
--   you specify a period of 10 or 30 for a metric that does not have
--   sub-minute resolution, the alarm still attempts to gather data at the
--   period rate that you specify. In this case, it does not receive data
--   for the attempts that do not correspond to a one-minute data
--   resolution, and the alarm might often lapse into INSUFFICENT_DATA
--   status. Specifying 10 or 30 also sets this alarm as a high-resolution
--   alarm, which has a higher charge than other alarms. For more
--   information about pricing, see <a>Amazon CloudWatch Pricing</a>.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so <tt>Period</tt> multiplied by <tt>EvaluationPeriods</tt>
--   cannot be more than 86,400 seconds.
--   
--   <a>$sel:alarmDescription:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_alarmDescription</a> - The description for the
--   alarm.
--   
--   <a>$sel:alarmName:PutMetricAlarm'</a>, <a>putMetricAlarm_alarmName</a>
--   - The name for the alarm. This name must be unique within the Region.
--   
--   <a>$sel:evaluationPeriods:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_evaluationPeriods</a> - The number of periods over
--   which data is compared to the specified threshold. If you are setting
--   an alarm that requires that a number of consecutive data points be
--   breaching to trigger the alarm, this value specifies that number. If
--   you are setting an "M out of N" alarm, this value is the N.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so this number multiplied by <tt>Period</tt> cannot be more than
--   86,400 seconds.
--   
--   <a>$sel:comparisonOperator:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_comparisonOperator</a> - The arithmetic operation to
--   use when comparing the specified statistic and threshold. The
--   specified statistic value is used as the first operand.
--   
--   The values <tt>LessThanLowerOrGreaterThanUpperThreshold</tt>,
--   <tt>LessThanLowerThreshold</tt>, and
--   <tt>GreaterThanUpperThreshold</tt> are used only for alarms based on
--   anomaly detection models.
newPutMetricAlarm :: Text -> Natural -> ComparisonOperator -> PutMetricAlarm

-- | The value against which the specified statistic is compared.
--   
--   This parameter is required for alarms based on static thresholds, but
--   should not be used for alarms based on anomaly detection models.
putMetricAlarm_threshold :: Lens' PutMetricAlarm (Maybe Double)

-- | The number of data points that must be breaching to trigger the alarm.
--   This is used only if you are setting an "M out of N" alarm. In that
--   case, this value is the M. For more information, see <a>Evaluating an
--   Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.
putMetricAlarm_datapointsToAlarm :: Lens' PutMetricAlarm (Maybe Natural)

-- | Used only for alarms based on percentiles. If you specify
--   <tt>ignore</tt>, the alarm state does not change during periods with
--   too few data points to be statistically significant. If you specify
--   <tt>evaluate</tt> or omit this parameter, the alarm is always
--   evaluated and possibly changes state no matter how many data points
--   are available. For more information, see <a>Percentile-Based
--   CloudWatch Alarms and Low Data Samples</a>.
--   
--   Valid Values: <tt>evaluate | ignore</tt>
putMetricAlarm_evaluateLowSampleCountPercentile :: Lens' PutMetricAlarm (Maybe Text)

-- | The percentile statistic for the metric specified in
--   <tt>MetricName</tt>. Specify a value between p0.0 and p100. When you
--   call <tt>PutMetricAlarm</tt> and specify a <tt>MetricName</tt>, you
--   must specify either <tt>Statistic</tt> or <tt>ExtendedStatistic,</tt>
--   but not both.
putMetricAlarm_extendedStatistic :: Lens' PutMetricAlarm (Maybe Text)

-- | If this is an alarm based on an anomaly detection model, make this
--   value match the ID of the <tt>ANOMALY_DETECTION_BAND</tt> function.
--   
--   For an example of how to use this parameter, see the __Anomaly
--   Detection Model Alarm__ example on this page.
--   
--   If your alarm uses this parameter, it cannot have Auto Scaling
--   actions.
putMetricAlarm_thresholdMetricId :: Lens' PutMetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt> | <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt> |
--   <tt>arn:aws:ssm-incidents::account-id:response-plan:response-plan-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
putMetricAlarm_alarmActions :: Lens' PutMetricAlarm (Maybe [Text])

-- | The unit of measure for the statistic. For example, the units for the
--   Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the
--   number of bytes that an instance receives on all network interfaces.
--   You can also specify a unit when you create a custom metric. Units
--   help provide conceptual meaning to your data. Metric data points that
--   specify a unit of measure, such as Percent, are aggregated separately.
--   
--   If you don't specify <tt>Unit</tt>, CloudWatch retrieves all unit
--   types that have been published for the metric and attempts to evaluate
--   the alarm. Usually, metrics are published with only one unit, so the
--   alarm works as intended.
--   
--   However, if the metric is published with multiple types of units and
--   you don't specify a unit, the alarm's behavior is not defined and it
--   behaves predictably.
--   
--   We recommend omitting <tt>Unit</tt> so that you don't inadvertently
--   specify an incorrect unit that is not published for this metric. Doing
--   so causes the alarm to be stuck in the <tt>INSUFFICIENT DATA</tt>
--   state.
putMetricAlarm_unit :: Lens' PutMetricAlarm (Maybe StandardUnit)

-- | The name for the metric associated with the alarm. For each
--   <tt>PutMetricAlarm</tt> operation, you must specify either
--   <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   If you are creating an alarm based on a math expression, you cannot
--   specify this parameter, or any of the <tt>Dimensions</tt>,
--   <tt>Period</tt>, <tt>Namespace</tt>, <tt>Statistic</tt>, or
--   <tt>ExtendedStatistic</tt> parameters. Instead, you specify all this
--   information in the <tt>Metrics</tt> array.
putMetricAlarm_metricName :: Lens' PutMetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>&gt;arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
putMetricAlarm_insufficientDataActions :: Lens' PutMetricAlarm (Maybe [Text])

-- | Sets how this alarm is to handle missing data points. If
--   <tt>TreatMissingData</tt> is omitted, the default behavior of
--   <tt>missing</tt> is used. For more information, see <a>Configuring How
--   CloudWatch Alarms Treats Missing Data</a>.
--   
--   Valid Values: <tt>breaching | notBreaching | ignore | missing</tt>
putMetricAlarm_treatMissingData :: Lens' PutMetricAlarm (Maybe Text)

-- | An array of <tt>MetricDataQuery</tt> structures that enable you to
--   create an alarm based on the result of a metric math expression. For
--   each <tt>PutMetricAlarm</tt> operation, you must specify either
--   <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   Each item in the <tt>Metrics</tt> array either retrieves a metric or
--   performs a math expression.
--   
--   One item in the <tt>Metrics</tt> array is the expression that the
--   alarm watches. You designate this expression by setting
--   <tt>ReturnData</tt> to true for this object in the array. For more
--   information, see <a>MetricDataQuery</a>.
--   
--   If you use the <tt>Metrics</tt> parameter, you cannot include the
--   <tt>MetricName</tt>, <tt>Dimensions</tt>, <tt>Period</tt>,
--   <tt>Namespace</tt>, <tt>Statistic</tt>, or <tt>ExtendedStatistic</tt>
--   parameters of <tt>PutMetricAlarm</tt> in the same operation. Instead,
--   you retrieve the metrics you are using in your math expression as part
--   of the <tt>Metrics</tt> array.
putMetricAlarm_metrics :: Lens' PutMetricAlarm (Maybe [MetricDataQuery])

-- | A list of key-value pairs to associate with the alarm. You can
--   associate as many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   If you are using this operation to update an existing alarm, any tags
--   you specify in this parameter are ignored. To change the tags of an
--   existing alarm, use <a>TagResource</a> or <a>UntagResource</a>.
putMetricAlarm_tags :: Lens' PutMetricAlarm (Maybe [Tag])

-- | The actions to execute when this alarm transitions to an <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
putMetricAlarm_oKActions :: Lens' PutMetricAlarm (Maybe [Text])

-- | The statistic for the metric specified in <tt>MetricName</tt>, other
--   than percentile. For percentile statistics, use
--   <tt>ExtendedStatistic</tt>. When you call <tt>PutMetricAlarm</tt> and
--   specify a <tt>MetricName</tt>, you must specify either
--   <tt>Statistic</tt> or <tt>ExtendedStatistic,</tt> but not both.
putMetricAlarm_statistic :: Lens' PutMetricAlarm (Maybe Statistic)

-- | The namespace for the metric associated specified in
--   <tt>MetricName</tt>.
putMetricAlarm_namespace :: Lens' PutMetricAlarm (Maybe Text)

-- | The dimensions for the metric specified in <tt>MetricName</tt>.
putMetricAlarm_dimensions :: Lens' PutMetricAlarm (Maybe [Dimension])

-- | Indicates whether actions should be executed during any changes to the
--   alarm state. The default is <tt>TRUE</tt>.
putMetricAlarm_actionsEnabled :: Lens' PutMetricAlarm (Maybe Bool)

-- | The length, in seconds, used each time the metric specified in
--   <tt>MetricName</tt> is evaluated. Valid values are 10, 30, and any
--   multiple of 60.
--   
--   <tt>Period</tt> is required for alarms based on static thresholds. If
--   you are creating an alarm based on a metric math expression, you
--   specify the period for each metric within the objects in the
--   <tt>Metrics</tt> array.
--   
--   Be sure to specify 10 or 30 only for metrics that are stored by a
--   <tt>PutMetricData</tt> call with a <tt>StorageResolution</tt> of 1. If
--   you specify a period of 10 or 30 for a metric that does not have
--   sub-minute resolution, the alarm still attempts to gather data at the
--   period rate that you specify. In this case, it does not receive data
--   for the attempts that do not correspond to a one-minute data
--   resolution, and the alarm might often lapse into INSUFFICENT_DATA
--   status. Specifying 10 or 30 also sets this alarm as a high-resolution
--   alarm, which has a higher charge than other alarms. For more
--   information about pricing, see <a>Amazon CloudWatch Pricing</a>.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so <tt>Period</tt> multiplied by <tt>EvaluationPeriods</tt>
--   cannot be more than 86,400 seconds.
putMetricAlarm_period :: Lens' PutMetricAlarm (Maybe Natural)

-- | The description for the alarm.
putMetricAlarm_alarmDescription :: Lens' PutMetricAlarm (Maybe Text)

-- | The name for the alarm. This name must be unique within the Region.
putMetricAlarm_alarmName :: Lens' PutMetricAlarm Text

-- | The number of periods over which data is compared to the specified
--   threshold. If you are setting an alarm that requires that a number of
--   consecutive data points be breaching to trigger the alarm, this value
--   specifies that number. If you are setting an "M out of N" alarm, this
--   value is the N.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so this number multiplied by <tt>Period</tt> cannot be more than
--   86,400 seconds.
putMetricAlarm_evaluationPeriods :: Lens' PutMetricAlarm Natural

-- | The arithmetic operation to use when comparing the specified statistic
--   and threshold. The specified statistic value is used as the first
--   operand.
--   
--   The values <tt>LessThanLowerOrGreaterThanUpperThreshold</tt>,
--   <tt>LessThanLowerThreshold</tt>, and
--   <tt>GreaterThanUpperThreshold</tt> are used only for alarms based on
--   anomaly detection models.
putMetricAlarm_comparisonOperator :: Lens' PutMetricAlarm ComparisonOperator

-- | <i>See:</i> <a>newPutMetricAlarmResponse</a> smart constructor.
data PutMetricAlarmResponse
PutMetricAlarmResponse' :: PutMetricAlarmResponse

-- | Create a value of <a>PutMetricAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutMetricAlarmResponse :: PutMetricAlarmResponse
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance GHC.Show.Show Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance GHC.Read.Read Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarmResponse
instance GHC.Show.Show Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarmResponse
instance GHC.Read.Read Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarmResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarmResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarmResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.PutMetricAlarm.PutMetricAlarm


-- | Creates a Contributor Insights rule. Rules evaluate log events in a
--   CloudWatch Logs log group, enabling you to find contributor data for
--   the log events in that log group. For more information, see <a>Using
--   Contributor Insights to Analyze High-Cardinality Data</a>.
--   
--   If you create a rule, delete it, and then re-create it with the same
--   name, historical data from the first time the rule was created might
--   not be available.
module Network.AWS.CloudWatch.PutInsightRule

-- | <i>See:</i> <a>newPutInsightRule</a> smart constructor.
data PutInsightRule
PutInsightRule' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> PutInsightRule

-- | The state of the rule. Valid values are ENABLED and DISABLED.
[$sel:ruleState:PutInsightRule'] :: PutInsightRule -> Maybe Text

-- | A list of key-value pairs to associate with the Contributor Insights
--   rule. You can associate as many as 50 tags with a rule.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
--   
--   To be able to associate tags with a rule, you must have the
--   <tt>cloudwatch:TagResource</tt> permission in addition to the
--   <tt>cloudwatch:PutInsightRule</tt> permission.
--   
--   If you are using this operation to update an existing Contributor
--   Insights rule, any tags you specify in this parameter are ignored. To
--   change the tags of an existing rule, use <a>TagResource</a>.
[$sel:tags:PutInsightRule'] :: PutInsightRule -> Maybe [Tag]

-- | A unique name for the rule.
[$sel:ruleName:PutInsightRule'] :: PutInsightRule -> Text

-- | The definition of the rule, as a JSON object. For details on the valid
--   syntax, see <a>Contributor Insights Rule Syntax</a>.
[$sel:ruleDefinition:PutInsightRule'] :: PutInsightRule -> Text

-- | Create a value of <a>PutInsightRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleState:PutInsightRule'</a>, <a>putInsightRule_ruleState</a>
--   - The state of the rule. Valid values are ENABLED and DISABLED.
--   
--   <a>$sel:tags:PutInsightRule'</a>, <a>putInsightRule_tags</a> - A list
--   of key-value pairs to associate with the Contributor Insights rule.
--   You can associate as many as 50 tags with a rule.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
--   
--   To be able to associate tags with a rule, you must have the
--   <tt>cloudwatch:TagResource</tt> permission in addition to the
--   <tt>cloudwatch:PutInsightRule</tt> permission.
--   
--   If you are using this operation to update an existing Contributor
--   Insights rule, any tags you specify in this parameter are ignored. To
--   change the tags of an existing rule, use <a>TagResource</a>.
--   
--   <a>$sel:ruleName:PutInsightRule'</a>, <a>putInsightRule_ruleName</a> -
--   A unique name for the rule.
--   
--   <a>$sel:ruleDefinition:PutInsightRule'</a>,
--   <a>putInsightRule_ruleDefinition</a> - The definition of the rule, as
--   a JSON object. For details on the valid syntax, see <a>Contributor
--   Insights Rule Syntax</a>.
newPutInsightRule :: Text -> Text -> PutInsightRule

-- | The state of the rule. Valid values are ENABLED and DISABLED.
putInsightRule_ruleState :: Lens' PutInsightRule (Maybe Text)

-- | A list of key-value pairs to associate with the Contributor Insights
--   rule. You can associate as many as 50 tags with a rule.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
--   
--   To be able to associate tags with a rule, you must have the
--   <tt>cloudwatch:TagResource</tt> permission in addition to the
--   <tt>cloudwatch:PutInsightRule</tt> permission.
--   
--   If you are using this operation to update an existing Contributor
--   Insights rule, any tags you specify in this parameter are ignored. To
--   change the tags of an existing rule, use <a>TagResource</a>.
putInsightRule_tags :: Lens' PutInsightRule (Maybe [Tag])

-- | A unique name for the rule.
putInsightRule_ruleName :: Lens' PutInsightRule Text

-- | The definition of the rule, as a JSON object. For details on the valid
--   syntax, see <a>Contributor Insights Rule Syntax</a>.
putInsightRule_ruleDefinition :: Lens' PutInsightRule Text

-- | <i>See:</i> <a>newPutInsightRuleResponse</a> smart constructor.
data PutInsightRuleResponse
PutInsightRuleResponse' :: Int -> PutInsightRuleResponse

-- | The response's http status code.
[$sel:httpStatus:PutInsightRuleResponse'] :: PutInsightRuleResponse -> Int

-- | Create a value of <a>PutInsightRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutInsightRuleResponse'</a>,
--   <a>putInsightRuleResponse_httpStatus</a> - The response's http status
--   code.
newPutInsightRuleResponse :: Int -> PutInsightRuleResponse

-- | The response's http status code.
putInsightRuleResponse_httpStatus :: Lens' PutInsightRuleResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance GHC.Show.Show Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance GHC.Read.Read Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutInsightRule.PutInsightRuleResponse
instance GHC.Show.Show Network.AWS.CloudWatch.PutInsightRule.PutInsightRuleResponse
instance GHC.Read.Read Network.AWS.CloudWatch.PutInsightRule.PutInsightRuleResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutInsightRule.PutInsightRuleResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutInsightRule.PutInsightRuleResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.PutInsightRule.PutInsightRule
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.PutInsightRule.PutInsightRule


-- | Creates a dashboard if it does not already exist, or updates an
--   existing dashboard. If you update a dashboard, the entire contents are
--   replaced with what you specify here.
--   
--   All dashboards in your account are global, not region-specific.
--   
--   A simple way to create a dashboard using <tt>PutDashboard</tt> is to
--   copy an existing dashboard. To copy an existing dashboard using the
--   console, you can load the dashboard and then use the View/edit source
--   command in the Actions menu to display the JSON block for that
--   dashboard. Another way to copy a dashboard is to use
--   <tt>GetDashboard</tt>, and then use the data returned within
--   <tt>DashboardBody</tt> as the template for the new dashboard when you
--   call <tt>PutDashboard</tt>.
--   
--   When you create a dashboard with <tt>PutDashboard</tt>, a good
--   practice is to add a text widget at the top of the dashboard with a
--   message that the dashboard was created by script and should not be
--   changed in the console. This message could also point console users to
--   the location of the <tt>DashboardBody</tt> script or the
--   CloudFormation template used to create the dashboard.
module Network.AWS.CloudWatch.PutDashboard

-- | <i>See:</i> <a>newPutDashboard</a> smart constructor.
data PutDashboard
PutDashboard' :: Text -> Text -> PutDashboard

-- | The name of the dashboard. If a dashboard with this name already
--   exists, this call modifies that dashboard, replacing its current
--   contents. Otherwise, a new dashboard is created. The maximum length is
--   255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This
--   parameter is required.
[$sel:dashboardName:PutDashboard'] :: PutDashboard -> Text

-- | The detailed information about the dashboard in JSON format, including
--   the widgets to include and their location on the dashboard. This
--   parameter is required.
--   
--   For more information about the syntax, see <a>Dashboard Body Structure
--   and Syntax</a>.
[$sel:dashboardBody:PutDashboard'] :: PutDashboard -> Text

-- | Create a value of <a>PutDashboard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardName:PutDashboard'</a>,
--   <a>putDashboard_dashboardName</a> - The name of the dashboard. If a
--   dashboard with this name already exists, this call modifies that
--   dashboard, replacing its current contents. Otherwise, a new dashboard
--   is created. The maximum length is 255, and valid characters are A-Z,
--   a-z, 0-9, "-", and "_". This parameter is required.
--   
--   <a>$sel:dashboardBody:PutDashboard'</a>,
--   <a>putDashboard_dashboardBody</a> - The detailed information about the
--   dashboard in JSON format, including the widgets to include and their
--   location on the dashboard. This parameter is required.
--   
--   For more information about the syntax, see <a>Dashboard Body Structure
--   and Syntax</a>.
newPutDashboard :: Text -> Text -> PutDashboard

-- | The name of the dashboard. If a dashboard with this name already
--   exists, this call modifies that dashboard, replacing its current
--   contents. Otherwise, a new dashboard is created. The maximum length is
--   255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This
--   parameter is required.
putDashboard_dashboardName :: Lens' PutDashboard Text

-- | The detailed information about the dashboard in JSON format, including
--   the widgets to include and their location on the dashboard. This
--   parameter is required.
--   
--   For more information about the syntax, see <a>Dashboard Body Structure
--   and Syntax</a>.
putDashboard_dashboardBody :: Lens' PutDashboard Text

-- | <i>See:</i> <a>newPutDashboardResponse</a> smart constructor.
data PutDashboardResponse
PutDashboardResponse' :: Maybe [DashboardValidationMessage] -> Int -> PutDashboardResponse

-- | If the input for <tt>PutDashboard</tt> was correct and the dashboard
--   was successfully created or modified, this result is empty.
--   
--   If this result includes only warning messages, then the input was
--   valid enough for the dashboard to be created or modified, but some
--   elements of the dashboard might not render.
--   
--   If this result includes error messages, the input was not valid and
--   the operation failed.
[$sel:dashboardValidationMessages:PutDashboardResponse'] :: PutDashboardResponse -> Maybe [DashboardValidationMessage]

-- | The response's http status code.
[$sel:httpStatus:PutDashboardResponse'] :: PutDashboardResponse -> Int

-- | Create a value of <a>PutDashboardResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardValidationMessages:PutDashboardResponse'</a>,
--   <a>putDashboardResponse_dashboardValidationMessages</a> - If the input
--   for <tt>PutDashboard</tt> was correct and the dashboard was
--   successfully created or modified, this result is empty.
--   
--   If this result includes only warning messages, then the input was
--   valid enough for the dashboard to be created or modified, but some
--   elements of the dashboard might not render.
--   
--   If this result includes error messages, the input was not valid and
--   the operation failed.
--   
--   <a>$sel:httpStatus:PutDashboardResponse'</a>,
--   <a>putDashboardResponse_httpStatus</a> - The response's http status
--   code.
newPutDashboardResponse :: Int -> PutDashboardResponse

-- | If the input for <tt>PutDashboard</tt> was correct and the dashboard
--   was successfully created or modified, this result is empty.
--   
--   If this result includes only warning messages, then the input was
--   valid enough for the dashboard to be created or modified, but some
--   elements of the dashboard might not render.
--   
--   If this result includes error messages, the input was not valid and
--   the operation failed.
putDashboardResponse_dashboardValidationMessages :: Lens' PutDashboardResponse (Maybe [DashboardValidationMessage])

-- | The response's http status code.
putDashboardResponse_httpStatus :: Lens' PutDashboardResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance GHC.Show.Show Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance GHC.Read.Read Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutDashboard.PutDashboardResponse
instance GHC.Show.Show Network.AWS.CloudWatch.PutDashboard.PutDashboardResponse
instance GHC.Read.Read Network.AWS.CloudWatch.PutDashboard.PutDashboardResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutDashboard.PutDashboardResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutDashboard.PutDashboardResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.PutDashboard.PutDashboard
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.PutDashboard.PutDashboard


-- | Creates or updates a <i>composite alarm</i>. When you create a
--   composite alarm, you specify a rule expression for the alarm that
--   takes into account the alarm states of other alarms that you have
--   created. The composite alarm goes into ALARM state only if all
--   conditions of the rule are met.
--   
--   The alarms specified in a composite alarm's rule expression can
--   include metric alarms and other composite alarms.
--   
--   Using composite alarms can reduce alarm noise. You can create multiple
--   metric alarms, and also create a composite alarm and set up alerts
--   only for the composite alarm. For example, you could create a
--   composite alarm that goes into ALARM state only when more than one of
--   the underlying metric alarms are in ALARM state.
--   
--   Currently, the only alarm actions that can be taken by composite
--   alarms are notifying SNS topics.
--   
--   It is possible to create a loop or cycle of composite alarms, where
--   composite alarm A depends on composite alarm B, and composite alarm B
--   also depends on composite alarm A. In this scenario, you can't delete
--   any composite alarm that is part of the cycle because there is always
--   still a composite alarm that depends on that alarm that you want to
--   delete.
--   
--   To get out of such a situation, you must break the cycle by changing
--   the rule of one of the composite alarms in the cycle to remove a
--   dependency that creates the cycle. The simplest change to make to
--   break a cycle is to change the <tt>AlarmRule</tt> of one of the alarms
--   to <tt>False</tt>.
--   
--   Additionally, the evaluation of composite alarms stops if CloudWatch
--   detects a cycle in the evaluation path.
--   
--   When this operation creates an alarm, the alarm state is immediately
--   set to <tt>INSUFFICIENT_DATA</tt>. The alarm is then evaluated and its
--   state is set appropriately. Any actions associated with the new state
--   are then executed. For a composite alarm, this initial time after
--   creation is the only time that the alarm can be in
--   <tt>INSUFFICIENT_DATA</tt> state.
--   
--   When you update an existing alarm, its state is left unchanged, but
--   the update completely overwrites the previous configuration of the
--   alarm.
--   
--   If you are an IAM user, you must have
--   <tt>iam:CreateServiceLinkedRole</tt> to create a composite alarm that
--   has Systems Manager OpsItem actions.
module Network.AWS.CloudWatch.PutCompositeAlarm

-- | <i>See:</i> <a>newPutCompositeAlarm</a> smart constructor.
data PutCompositeAlarm
PutCompositeAlarm' :: Maybe [Text] -> Maybe [Text] -> Maybe [Tag] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Text -> Text -> PutCompositeAlarm

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt>
[$sel:alarmActions:PutCompositeAlarm'] :: PutCompositeAlarm -> Maybe [Text]

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
[$sel:insufficientDataActions:PutCompositeAlarm'] :: PutCompositeAlarm -> Maybe [Text]

-- | A list of key-value pairs to associate with the composite alarm. You
--   can associate as many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only resources with certain tag values.
[$sel:tags:PutCompositeAlarm'] :: PutCompositeAlarm -> Maybe [Tag]

-- | The actions to execute when this alarm transitions to an <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
[$sel:oKActions:PutCompositeAlarm'] :: PutCompositeAlarm -> Maybe [Text]

-- | Indicates whether actions should be executed during any changes to the
--   alarm state of the composite alarm. The default is <tt>TRUE</tt>.
[$sel:actionsEnabled:PutCompositeAlarm'] :: PutCompositeAlarm -> Maybe Bool

-- | The description for the composite alarm.
[$sel:alarmDescription:PutCompositeAlarm'] :: PutCompositeAlarm -> Maybe Text

-- | The name for the composite alarm. This name must be unique within the
--   Region.
[$sel:alarmName:PutCompositeAlarm'] :: PutCompositeAlarm -> Text

-- | An expression that specifies which other alarms are to be evaluated to
--   determine this composite alarm's state. For each alarm that you
--   reference, you designate a function that specifies whether that alarm
--   needs to be in ALARM state, OK state, or INSUFFICIENT_DATA state. You
--   can use operators (AND, OR and NOT) to combine multiple functions in a
--   single expression. You can use parenthesis to logically group the
--   functions in your expression.
--   
--   You can use either alarm names or ARNs to reference the other alarms
--   that are to be evaluated.
--   
--   Functions can include the following:
--   
--   <ul>
--   <li><tt>ALARM("alarm-name or alarm-ARN")</tt> is TRUE if the named
--   alarm is in ALARM state.</li>
--   <li><tt>OK("alarm-name or alarm-ARN")</tt> is TRUE if the named alarm
--   is in OK state.</li>
--   <li><tt>INSUFFICIENT_DATA("alarm-name or alarm-ARN")</tt> is TRUE if
--   the named alarm is in INSUFFICIENT_DATA state.</li>
--   <li><tt>TRUE</tt> always evaluates to TRUE.</li>
--   <li><tt>FALSE</tt> always evaluates to FALSE.</li>
--   </ul>
--   
--   TRUE and FALSE are useful for testing a complex <tt>AlarmRule</tt>
--   structure, and for testing your alarm actions.
--   
--   Alarm names specified in <tt>AlarmRule</tt> can be surrounded with
--   double-quotes ("), but do not have to be.
--   
--   The following are some examples of <tt>AlarmRule</tt>:
--   
--   <ul>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND
--   ALARM(DiskReadOpsTooHigh)</tt> specifies that the composite alarm goes
--   into ALARM state only if both CPUUtilizationTooHigh and
--   DiskReadOpsTooHigh alarms are in ALARM state.</li>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND NOT
--   ALARM(DeploymentInProgress)</tt> specifies that the alarm goes to
--   ALARM state if CPUUtilizationTooHigh is in ALARM state and
--   DeploymentInProgress is not in ALARM state. This example reduces alarm
--   noise during a known deployment window.</li>
--   <li><tt>(ALARM(CPUUtilizationTooHigh) OR ALARM(DiskReadOpsTooHigh))
--   AND OK(NetworkOutTooHigh)</tt> goes into ALARM state if
--   CPUUtilizationTooHigh OR DiskReadOpsTooHigh is in ALARM state, and if
--   NetworkOutTooHigh is in OK state. This provides another example of
--   using a composite alarm to prevent noise. This rule ensures that you
--   are not notified with an alarm action on high CPU or disk usage if a
--   known network problem is also occurring.</li>
--   </ul>
--   
--   The <tt>AlarmRule</tt> can specify as many as 100 "children" alarms.
--   The <tt>AlarmRule</tt> expression can have as many as 500 elements.
--   Elements are child alarms, TRUE or FALSE statements, and parentheses.
[$sel:alarmRule:PutCompositeAlarm'] :: PutCompositeAlarm -> Text

-- | Create a value of <a>PutCompositeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmActions:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_alarmActions</a> - The actions to execute when
--   this alarm transitions to the <tt>ALARM</tt> state from any other
--   state. Each action is specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt>
--   
--   <a>$sel:insufficientDataActions:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_insufficientDataActions</a> - The actions to
--   execute when this alarm transitions to the <tt>INSUFFICIENT_DATA</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
--   
--   <a>$sel:tags:PutCompositeAlarm'</a>, <a>putCompositeAlarm_tags</a> - A
--   list of key-value pairs to associate with the composite alarm. You can
--   associate as many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   <a>$sel:oKActions:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_oKActions</a> - The actions to execute when this
--   alarm transitions to an <tt>OK</tt> state from any other state. Each
--   action is specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
--   
--   <a>$sel:actionsEnabled:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_actionsEnabled</a> - Indicates whether actions
--   should be executed during any changes to the alarm state of the
--   composite alarm. The default is <tt>TRUE</tt>.
--   
--   <a>$sel:alarmDescription:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_alarmDescription</a> - The description for the
--   composite alarm.
--   
--   <a>$sel:alarmName:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_alarmName</a> - The name for the composite alarm.
--   This name must be unique within the Region.
--   
--   <a>$sel:alarmRule:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_alarmRule</a> - An expression that specifies
--   which other alarms are to be evaluated to determine this composite
--   alarm's state. For each alarm that you reference, you designate a
--   function that specifies whether that alarm needs to be in ALARM state,
--   OK state, or INSUFFICIENT_DATA state. You can use operators (AND, OR
--   and NOT) to combine multiple functions in a single expression. You can
--   use parenthesis to logically group the functions in your expression.
--   
--   You can use either alarm names or ARNs to reference the other alarms
--   that are to be evaluated.
--   
--   Functions can include the following:
--   
--   <ul>
--   <li><tt>ALARM("alarm-name or alarm-ARN")</tt> is TRUE if the named
--   alarm is in ALARM state.</li>
--   <li><tt>OK("alarm-name or alarm-ARN")</tt> is TRUE if the named alarm
--   is in OK state.</li>
--   <li><tt>INSUFFICIENT_DATA("alarm-name or alarm-ARN")</tt> is TRUE if
--   the named alarm is in INSUFFICIENT_DATA state.</li>
--   <li><tt>TRUE</tt> always evaluates to TRUE.</li>
--   <li><tt>FALSE</tt> always evaluates to FALSE.</li>
--   </ul>
--   
--   TRUE and FALSE are useful for testing a complex <tt>AlarmRule</tt>
--   structure, and for testing your alarm actions.
--   
--   Alarm names specified in <tt>AlarmRule</tt> can be surrounded with
--   double-quotes ("), but do not have to be.
--   
--   The following are some examples of <tt>AlarmRule</tt>:
--   
--   <ul>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND
--   ALARM(DiskReadOpsTooHigh)</tt> specifies that the composite alarm goes
--   into ALARM state only if both CPUUtilizationTooHigh and
--   DiskReadOpsTooHigh alarms are in ALARM state.</li>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND NOT
--   ALARM(DeploymentInProgress)</tt> specifies that the alarm goes to
--   ALARM state if CPUUtilizationTooHigh is in ALARM state and
--   DeploymentInProgress is not in ALARM state. This example reduces alarm
--   noise during a known deployment window.</li>
--   <li><tt>(ALARM(CPUUtilizationTooHigh) OR ALARM(DiskReadOpsTooHigh))
--   AND OK(NetworkOutTooHigh)</tt> goes into ALARM state if
--   CPUUtilizationTooHigh OR DiskReadOpsTooHigh is in ALARM state, and if
--   NetworkOutTooHigh is in OK state. This provides another example of
--   using a composite alarm to prevent noise. This rule ensures that you
--   are not notified with an alarm action on high CPU or disk usage if a
--   known network problem is also occurring.</li>
--   </ul>
--   
--   The <tt>AlarmRule</tt> can specify as many as 100 "children" alarms.
--   The <tt>AlarmRule</tt> expression can have as many as 500 elements.
--   Elements are child alarms, TRUE or FALSE statements, and parentheses.
newPutCompositeAlarm :: Text -> Text -> PutCompositeAlarm

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt>
putCompositeAlarm_alarmActions :: Lens' PutCompositeAlarm (Maybe [Text])

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
putCompositeAlarm_insufficientDataActions :: Lens' PutCompositeAlarm (Maybe [Text])

-- | A list of key-value pairs to associate with the composite alarm. You
--   can associate as many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only resources with certain tag values.
putCompositeAlarm_tags :: Lens' PutCompositeAlarm (Maybe [Tag])

-- | The actions to execute when this alarm transitions to an <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
putCompositeAlarm_oKActions :: Lens' PutCompositeAlarm (Maybe [Text])

-- | Indicates whether actions should be executed during any changes to the
--   alarm state of the composite alarm. The default is <tt>TRUE</tt>.
putCompositeAlarm_actionsEnabled :: Lens' PutCompositeAlarm (Maybe Bool)

-- | The description for the composite alarm.
putCompositeAlarm_alarmDescription :: Lens' PutCompositeAlarm (Maybe Text)

-- | The name for the composite alarm. This name must be unique within the
--   Region.
putCompositeAlarm_alarmName :: Lens' PutCompositeAlarm Text

-- | An expression that specifies which other alarms are to be evaluated to
--   determine this composite alarm's state. For each alarm that you
--   reference, you designate a function that specifies whether that alarm
--   needs to be in ALARM state, OK state, or INSUFFICIENT_DATA state. You
--   can use operators (AND, OR and NOT) to combine multiple functions in a
--   single expression. You can use parenthesis to logically group the
--   functions in your expression.
--   
--   You can use either alarm names or ARNs to reference the other alarms
--   that are to be evaluated.
--   
--   Functions can include the following:
--   
--   <ul>
--   <li><tt>ALARM("alarm-name or alarm-ARN")</tt> is TRUE if the named
--   alarm is in ALARM state.</li>
--   <li><tt>OK("alarm-name or alarm-ARN")</tt> is TRUE if the named alarm
--   is in OK state.</li>
--   <li><tt>INSUFFICIENT_DATA("alarm-name or alarm-ARN")</tt> is TRUE if
--   the named alarm is in INSUFFICIENT_DATA state.</li>
--   <li><tt>TRUE</tt> always evaluates to TRUE.</li>
--   <li><tt>FALSE</tt> always evaluates to FALSE.</li>
--   </ul>
--   
--   TRUE and FALSE are useful for testing a complex <tt>AlarmRule</tt>
--   structure, and for testing your alarm actions.
--   
--   Alarm names specified in <tt>AlarmRule</tt> can be surrounded with
--   double-quotes ("), but do not have to be.
--   
--   The following are some examples of <tt>AlarmRule</tt>:
--   
--   <ul>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND
--   ALARM(DiskReadOpsTooHigh)</tt> specifies that the composite alarm goes
--   into ALARM state only if both CPUUtilizationTooHigh and
--   DiskReadOpsTooHigh alarms are in ALARM state.</li>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND NOT
--   ALARM(DeploymentInProgress)</tt> specifies that the alarm goes to
--   ALARM state if CPUUtilizationTooHigh is in ALARM state and
--   DeploymentInProgress is not in ALARM state. This example reduces alarm
--   noise during a known deployment window.</li>
--   <li><tt>(ALARM(CPUUtilizationTooHigh) OR ALARM(DiskReadOpsTooHigh))
--   AND OK(NetworkOutTooHigh)</tt> goes into ALARM state if
--   CPUUtilizationTooHigh OR DiskReadOpsTooHigh is in ALARM state, and if
--   NetworkOutTooHigh is in OK state. This provides another example of
--   using a composite alarm to prevent noise. This rule ensures that you
--   are not notified with an alarm action on high CPU or disk usage if a
--   known network problem is also occurring.</li>
--   </ul>
--   
--   The <tt>AlarmRule</tt> can specify as many as 100 "children" alarms.
--   The <tt>AlarmRule</tt> expression can have as many as 500 elements.
--   Elements are child alarms, TRUE or FALSE statements, and parentheses.
putCompositeAlarm_alarmRule :: Lens' PutCompositeAlarm Text

-- | <i>See:</i> <a>newPutCompositeAlarmResponse</a> smart constructor.
data PutCompositeAlarmResponse
PutCompositeAlarmResponse' :: PutCompositeAlarmResponse

-- | Create a value of <a>PutCompositeAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutCompositeAlarmResponse :: PutCompositeAlarmResponse
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance GHC.Show.Show Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance GHC.Read.Read Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarmResponse
instance GHC.Show.Show Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarmResponse
instance GHC.Read.Read Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarmResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarmResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarmResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.PutCompositeAlarm.PutCompositeAlarm


-- | Creates an anomaly detection model for a CloudWatch metric. You can
--   use the model to display a band of expected normal values when the
--   metric is graphed.
--   
--   For more information, see <a>CloudWatch Anomaly Detection</a>.
module Network.AWS.CloudWatch.PutAnomalyDetector

-- | <i>See:</i> <a>newPutAnomalyDetector</a> smart constructor.
data PutAnomalyDetector
PutAnomalyDetector' :: Maybe AnomalyDetectorConfiguration -> Maybe [Dimension] -> Text -> Text -> Text -> PutAnomalyDetector

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude when training
--   and updating the model. You can specify as many as 10 time ranges.
--   
--   The configuration can also include the time zone to use for the
--   metric.
[$sel:configuration:PutAnomalyDetector'] :: PutAnomalyDetector -> Maybe AnomalyDetectorConfiguration

-- | The metric dimensions to create the anomaly detection model for.
[$sel:dimensions:PutAnomalyDetector'] :: PutAnomalyDetector -> Maybe [Dimension]

-- | The namespace of the metric to create the anomaly detection model for.
[$sel:namespace:PutAnomalyDetector'] :: PutAnomalyDetector -> Text

-- | The name of the metric to create the anomaly detection model for.
[$sel:metricName:PutAnomalyDetector'] :: PutAnomalyDetector -> Text

-- | The statistic to use for the metric and the anomaly detection model.
[$sel:stat:PutAnomalyDetector'] :: PutAnomalyDetector -> Text

-- | Create a value of <a>PutAnomalyDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:PutAnomalyDetector'</a>,
--   <a>putAnomalyDetector_configuration</a> - The configuration specifies
--   details about how the anomaly detection model is to be trained,
--   including time ranges to exclude when training and updating the model.
--   You can specify as many as 10 time ranges.
--   
--   The configuration can also include the time zone to use for the
--   metric.
--   
--   <a>$sel:dimensions:PutAnomalyDetector'</a>,
--   <a>putAnomalyDetector_dimensions</a> - The metric dimensions to create
--   the anomaly detection model for.
--   
--   <a>$sel:namespace:PutAnomalyDetector'</a>,
--   <a>putAnomalyDetector_namespace</a> - The namespace of the metric to
--   create the anomaly detection model for.
--   
--   <a>$sel:metricName:PutAnomalyDetector'</a>,
--   <a>putAnomalyDetector_metricName</a> - The name of the metric to
--   create the anomaly detection model for.
--   
--   <a>$sel:stat:PutAnomalyDetector'</a>, <a>putAnomalyDetector_stat</a> -
--   The statistic to use for the metric and the anomaly detection model.
newPutAnomalyDetector :: Text -> Text -> Text -> PutAnomalyDetector

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude when training
--   and updating the model. You can specify as many as 10 time ranges.
--   
--   The configuration can also include the time zone to use for the
--   metric.
putAnomalyDetector_configuration :: Lens' PutAnomalyDetector (Maybe AnomalyDetectorConfiguration)

-- | The metric dimensions to create the anomaly detection model for.
putAnomalyDetector_dimensions :: Lens' PutAnomalyDetector (Maybe [Dimension])

-- | The namespace of the metric to create the anomaly detection model for.
putAnomalyDetector_namespace :: Lens' PutAnomalyDetector Text

-- | The name of the metric to create the anomaly detection model for.
putAnomalyDetector_metricName :: Lens' PutAnomalyDetector Text

-- | The statistic to use for the metric and the anomaly detection model.
putAnomalyDetector_stat :: Lens' PutAnomalyDetector Text

-- | <i>See:</i> <a>newPutAnomalyDetectorResponse</a> smart constructor.
data PutAnomalyDetectorResponse
PutAnomalyDetectorResponse' :: Int -> PutAnomalyDetectorResponse

-- | The response's http status code.
[$sel:httpStatus:PutAnomalyDetectorResponse'] :: PutAnomalyDetectorResponse -> Int

-- | Create a value of <a>PutAnomalyDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutAnomalyDetectorResponse'</a>,
--   <a>putAnomalyDetectorResponse_httpStatus</a> - The response's http
--   status code.
newPutAnomalyDetectorResponse :: Int -> PutAnomalyDetectorResponse

-- | The response's http status code.
putAnomalyDetectorResponse_httpStatus :: Lens' PutAnomalyDetectorResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance GHC.Show.Show Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance GHC.Read.Read Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance GHC.Generics.Generic Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetectorResponse
instance GHC.Show.Show Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetectorResponse
instance GHC.Read.Read Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetectorResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetectorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetectorResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.PutAnomalyDetector.PutAnomalyDetector


-- | Displays the tags associated with a CloudWatch resource. Currently,
--   alarms and Contributor Insights rules support tagging.
module Network.AWS.CloudWatch.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the CloudWatch resource that you want to view tags for.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN of the CloudWatch
--   resource that you want to view tags for.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the CloudWatch resource that you want to view tags for.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | The list of tag keys and values associated with the resource you
--   specified.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tag keys and
--   values associated with the resource you specified.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The list of tag keys and values associated with the resource you
--   specified.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.ListTagsForResource.ListTagsForResource


-- | List the specified metrics. You can use the returned metrics with
--   <a>GetMetricData</a> or <a>GetMetricStatistics</a> to obtain
--   statistical data.
--   
--   Up to 500 results are returned for any one call. To retrieve
--   additional results, use the returned token with subsequent calls.
--   
--   After you create a metric, allow up to 15 minutes before the metric
--   appears. You can see statistics about the metric sooner by using
--   <a>GetMetricData</a> or <a>GetMetricStatistics</a>.
--   
--   <tt>ListMetrics</tt> doesn't return information about metrics if those
--   metrics haven't reported data in the past two weeks. To retrieve those
--   metrics, use <a>GetMetricData</a> or <a>GetMetricStatistics</a>.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatch.ListMetrics

-- | <i>See:</i> <a>newListMetrics</a> smart constructor.
data ListMetrics
ListMetrics' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [DimensionFilter] -> Maybe RecentlyActive -> ListMetrics

-- | The token returned by a previous call to indicate that there is more
--   data available.
[$sel:nextToken:ListMetrics'] :: ListMetrics -> Maybe Text

-- | The name of the metric to filter against. Only the metrics with names
--   that match exactly will be returned.
[$sel:metricName:ListMetrics'] :: ListMetrics -> Maybe Text

-- | The metric namespace to filter against. Only the namespace that
--   matches exactly will be returned.
[$sel:namespace:ListMetrics'] :: ListMetrics -> Maybe Text

-- | The dimensions to filter against. Only the dimensions that match
--   exactly will be returned.
[$sel:dimensions:ListMetrics'] :: ListMetrics -> Maybe [DimensionFilter]

-- | To filter the results to show only metrics that have had data points
--   published in the past three hours, specify this parameter with a value
--   of <tt>PT3H</tt>. This is the only valid value for this parameter.
--   
--   The results that are returned are an approximation of the value you
--   specify. There is a low probability that the returned results include
--   metrics with last published data as much as 40 minutes more than the
--   specified time interval.
[$sel:recentlyActive:ListMetrics'] :: ListMetrics -> Maybe RecentlyActive

-- | Create a value of <a>ListMetrics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMetrics'</a>, <a>listMetrics_nextToken</a> - The
--   token returned by a previous call to indicate that there is more data
--   available.
--   
--   <a>$sel:metricName:ListMetrics'</a>, <a>listMetrics_metricName</a> -
--   The name of the metric to filter against. Only the metrics with names
--   that match exactly will be returned.
--   
--   <a>$sel:namespace:ListMetrics'</a>, <a>listMetrics_namespace</a> - The
--   metric namespace to filter against. Only the namespace that matches
--   exactly will be returned.
--   
--   <a>$sel:dimensions:ListMetrics'</a>, <a>listMetrics_dimensions</a> -
--   The dimensions to filter against. Only the dimensions that match
--   exactly will be returned.
--   
--   <a>$sel:recentlyActive:ListMetrics'</a>,
--   <a>listMetrics_recentlyActive</a> - To filter the results to show only
--   metrics that have had data points published in the past three hours,
--   specify this parameter with a value of <tt>PT3H</tt>. This is the only
--   valid value for this parameter.
--   
--   The results that are returned are an approximation of the value you
--   specify. There is a low probability that the returned results include
--   metrics with last published data as much as 40 minutes more than the
--   specified time interval.
newListMetrics :: ListMetrics

-- | The token returned by a previous call to indicate that there is more
--   data available.
listMetrics_nextToken :: Lens' ListMetrics (Maybe Text)

-- | The name of the metric to filter against. Only the metrics with names
--   that match exactly will be returned.
listMetrics_metricName :: Lens' ListMetrics (Maybe Text)

-- | The metric namespace to filter against. Only the namespace that
--   matches exactly will be returned.
listMetrics_namespace :: Lens' ListMetrics (Maybe Text)

-- | The dimensions to filter against. Only the dimensions that match
--   exactly will be returned.
listMetrics_dimensions :: Lens' ListMetrics (Maybe [DimensionFilter])

-- | To filter the results to show only metrics that have had data points
--   published in the past three hours, specify this parameter with a value
--   of <tt>PT3H</tt>. This is the only valid value for this parameter.
--   
--   The results that are returned are an approximation of the value you
--   specify. There is a low probability that the returned results include
--   metrics with last published data as much as 40 minutes more than the
--   specified time interval.
listMetrics_recentlyActive :: Lens' ListMetrics (Maybe RecentlyActive)

-- | <i>See:</i> <a>newListMetricsResponse</a> smart constructor.
data ListMetricsResponse
ListMetricsResponse' :: Maybe Text -> Maybe [Metric] -> Int -> ListMetricsResponse

-- | The token that marks the start of the next batch of returned results.
[$sel:nextToken:ListMetricsResponse'] :: ListMetricsResponse -> Maybe Text

-- | The metrics that match your request.
[$sel:metrics:ListMetricsResponse'] :: ListMetricsResponse -> Maybe [Metric]

-- | The response's http status code.
[$sel:httpStatus:ListMetricsResponse'] :: ListMetricsResponse -> Int

-- | Create a value of <a>ListMetricsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMetrics'</a>,
--   <a>listMetricsResponse_nextToken</a> - The token that marks the start
--   of the next batch of returned results.
--   
--   <a>$sel:metrics:ListMetricsResponse'</a>,
--   <a>listMetricsResponse_metrics</a> - The metrics that match your
--   request.
--   
--   <a>$sel:httpStatus:ListMetricsResponse'</a>,
--   <a>listMetricsResponse_httpStatus</a> - The response's http status
--   code.
newListMetricsResponse :: Int -> ListMetricsResponse

-- | The token that marks the start of the next batch of returned results.
listMetricsResponse_nextToken :: Lens' ListMetricsResponse (Maybe Text)

-- | The metrics that match your request.
listMetricsResponse_metrics :: Lens' ListMetricsResponse (Maybe [Metric])

-- | The response's http status code.
listMetricsResponse_httpStatus :: Lens' ListMetricsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance GHC.Show.Show Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance GHC.Read.Read Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance GHC.Classes.Eq Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance GHC.Generics.Generic Network.AWS.CloudWatch.ListMetrics.ListMetricsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.ListMetrics.ListMetricsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.ListMetrics.ListMetricsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.ListMetrics.ListMetricsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.ListMetrics.ListMetricsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.ListMetrics.ListMetrics
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.ListMetrics.ListMetrics


-- | Returns a list of metric streams in this account.
module Network.AWS.CloudWatch.ListMetricStreams

-- | <i>See:</i> <a>newListMetricStreams</a> smart constructor.
data ListMetricStreams
ListMetricStreams' :: Maybe Text -> Maybe Natural -> ListMetricStreams

-- | Include this value, if it was returned by the previous call, to get
--   the next set of metric streams.
[$sel:nextToken:ListMetricStreams'] :: ListMetricStreams -> Maybe Text

-- | The maximum number of results to return in one operation.
[$sel:maxResults:ListMetricStreams'] :: ListMetricStreams -> Maybe Natural

-- | Create a value of <a>ListMetricStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMetricStreams'</a>,
--   <a>listMetricStreams_nextToken</a> - Include this value, if it was
--   returned by the previous call, to get the next set of metric streams.
--   
--   <a>$sel:maxResults:ListMetricStreams'</a>,
--   <a>listMetricStreams_maxResults</a> - The maximum number of results to
--   return in one operation.
newListMetricStreams :: ListMetricStreams

-- | Include this value, if it was returned by the previous call, to get
--   the next set of metric streams.
listMetricStreams_nextToken :: Lens' ListMetricStreams (Maybe Text)

-- | The maximum number of results to return in one operation.
listMetricStreams_maxResults :: Lens' ListMetricStreams (Maybe Natural)

-- | <i>See:</i> <a>newListMetricStreamsResponse</a> smart constructor.
data ListMetricStreamsResponse
ListMetricStreamsResponse' :: Maybe Text -> Maybe [MetricStreamEntry] -> Int -> ListMetricStreamsResponse

-- | The token that marks the start of the next batch of returned results.
--   You can use this token in a subsequent operation to get the next batch
--   of results.
[$sel:nextToken:ListMetricStreamsResponse'] :: ListMetricStreamsResponse -> Maybe Text

-- | The array of metric stream information.
[$sel:entries:ListMetricStreamsResponse'] :: ListMetricStreamsResponse -> Maybe [MetricStreamEntry]

-- | The response's http status code.
[$sel:httpStatus:ListMetricStreamsResponse'] :: ListMetricStreamsResponse -> Int

-- | Create a value of <a>ListMetricStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMetricStreams'</a>,
--   <a>listMetricStreamsResponse_nextToken</a> - The token that marks the
--   start of the next batch of returned results. You can use this token in
--   a subsequent operation to get the next batch of results.
--   
--   <a>$sel:entries:ListMetricStreamsResponse'</a>,
--   <a>listMetricStreamsResponse_entries</a> - The array of metric stream
--   information.
--   
--   <a>$sel:httpStatus:ListMetricStreamsResponse'</a>,
--   <a>listMetricStreamsResponse_httpStatus</a> - The response's http
--   status code.
newListMetricStreamsResponse :: Int -> ListMetricStreamsResponse

-- | The token that marks the start of the next batch of returned results.
--   You can use this token in a subsequent operation to get the next batch
--   of results.
listMetricStreamsResponse_nextToken :: Lens' ListMetricStreamsResponse (Maybe Text)

-- | The array of metric stream information.
listMetricStreamsResponse_entries :: Lens' ListMetricStreamsResponse (Maybe [MetricStreamEntry])

-- | The response's http status code.
listMetricStreamsResponse_httpStatus :: Lens' ListMetricStreamsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance GHC.Show.Show Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance GHC.Read.Read Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance GHC.Classes.Eq Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance GHC.Generics.Generic Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreamsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreamsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreamsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreamsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreamsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.ListMetricStreams.ListMetricStreams


-- | Returns a list of the dashboards for your account. If you include
--   <tt>DashboardNamePrefix</tt>, only those dashboards with names
--   starting with the prefix are listed. Otherwise, all dashboards in your
--   account are listed.
--   
--   <tt>ListDashboards</tt> returns up to 1000 results on one page. If
--   there are more than 1000 dashboards, you can call
--   <tt>ListDashboards</tt> again and include the value you received for
--   <tt>NextToken</tt> in the first call, to receive the next 1000
--   results.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatch.ListDashboards

-- | <i>See:</i> <a>newListDashboards</a> smart constructor.
data ListDashboards
ListDashboards' :: Maybe Text -> Maybe Text -> ListDashboards

-- | The token returned by a previous call to indicate that there is more
--   data available.
[$sel:nextToken:ListDashboards'] :: ListDashboards -> Maybe Text

-- | If you specify this parameter, only the dashboards with names starting
--   with the specified string are listed. The maximum length is 255, and
--   valid characters are A-Z, a-z, 0-9, ".", "-", and "_".
[$sel:dashboardNamePrefix:ListDashboards'] :: ListDashboards -> Maybe Text

-- | Create a value of <a>ListDashboards</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDashboards'</a>, <a>listDashboards_nextToken</a>
--   - The token returned by a previous call to indicate that there is more
--   data available.
--   
--   <a>$sel:dashboardNamePrefix:ListDashboards'</a>,
--   <a>listDashboards_dashboardNamePrefix</a> - If you specify this
--   parameter, only the dashboards with names starting with the specified
--   string are listed. The maximum length is 255, and valid characters are
--   A-Z, a-z, 0-9, ".", "-", and "_".
newListDashboards :: ListDashboards

-- | The token returned by a previous call to indicate that there is more
--   data available.
listDashboards_nextToken :: Lens' ListDashboards (Maybe Text)

-- | If you specify this parameter, only the dashboards with names starting
--   with the specified string are listed. The maximum length is 255, and
--   valid characters are A-Z, a-z, 0-9, ".", "-", and "_".
listDashboards_dashboardNamePrefix :: Lens' ListDashboards (Maybe Text)

-- | <i>See:</i> <a>newListDashboardsResponse</a> smart constructor.
data ListDashboardsResponse
ListDashboardsResponse' :: Maybe Text -> Maybe [DashboardEntry] -> Int -> ListDashboardsResponse

-- | The token that marks the start of the next batch of returned results.
[$sel:nextToken:ListDashboardsResponse'] :: ListDashboardsResponse -> Maybe Text

-- | The list of matching dashboards.
[$sel:dashboardEntries:ListDashboardsResponse'] :: ListDashboardsResponse -> Maybe [DashboardEntry]

-- | The response's http status code.
[$sel:httpStatus:ListDashboardsResponse'] :: ListDashboardsResponse -> Int

-- | Create a value of <a>ListDashboardsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDashboards'</a>,
--   <a>listDashboardsResponse_nextToken</a> - The token that marks the
--   start of the next batch of returned results.
--   
--   <a>$sel:dashboardEntries:ListDashboardsResponse'</a>,
--   <a>listDashboardsResponse_dashboardEntries</a> - The list of matching
--   dashboards.
--   
--   <a>$sel:httpStatus:ListDashboardsResponse'</a>,
--   <a>listDashboardsResponse_httpStatus</a> - The response's http status
--   code.
newListDashboardsResponse :: Int -> ListDashboardsResponse

-- | The token that marks the start of the next batch of returned results.
listDashboardsResponse_nextToken :: Lens' ListDashboardsResponse (Maybe Text)

-- | The list of matching dashboards.
listDashboardsResponse_dashboardEntries :: Lens' ListDashboardsResponse (Maybe [DashboardEntry])

-- | The response's http status code.
listDashboardsResponse_httpStatus :: Lens' ListDashboardsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance GHC.Show.Show Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance GHC.Read.Read Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance GHC.Classes.Eq Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance GHC.Generics.Generic Network.AWS.CloudWatch.ListDashboards.ListDashboardsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.ListDashboards.ListDashboardsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.ListDashboards.ListDashboardsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.ListDashboards.ListDashboardsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.ListDashboards.ListDashboardsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.ListDashboards.ListDashboards
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.ListDashboards.ListDashboards


-- | You can use the <tt>GetMetricWidgetImage</tt> API to retrieve a
--   snapshot graph of one or more Amazon CloudWatch metrics as a bitmap
--   image. You can then embed this image into your services and products,
--   such as wiki pages, reports, and documents. You could also retrieve
--   images regularly, such as every minute, and create your own custom
--   live dashboard.
--   
--   The graph you retrieve can include all CloudWatch metric graph
--   features, including metric math and horizontal and vertical
--   annotations.
--   
--   There is a limit of 20 transactions per second for this API. Each
--   <tt>GetMetricWidgetImage</tt> action has the following limits:
--   
--   <ul>
--   <li>As many as 100 metrics in the graph.</li>
--   <li>Up to 100 KB uncompressed payload.</li>
--   </ul>
module Network.AWS.CloudWatch.GetMetricWidgetImage

-- | <i>See:</i> <a>newGetMetricWidgetImage</a> smart constructor.
data GetMetricWidgetImage
GetMetricWidgetImage' :: Maybe Text -> Text -> GetMetricWidgetImage

-- | The format of the resulting image. Only PNG images are supported.
--   
--   The default is <tt>png</tt>. If you specify <tt>png</tt>, the API
--   returns an HTTP response with the content-type set to
--   <tt>text/xml</tt>. The image data is in a <tt>MetricWidgetImage</tt>
--   field. For example:
--   
--   <pre>
--   &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;
--   </pre>
--   
--   <pre>
--   &lt;GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...
--   </pre>
--   
--   <pre>
--   &lt;/MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;
--   </pre>
--   
--   <pre>
--   &lt;/ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResponse&gt;
--   </pre>
--   
--   The <tt>image/png</tt> setting is intended only for custom HTTP
--   requests. For most use cases, and all actions using an Amazon Web
--   Services SDK, you should use <tt>png</tt>. If you specify
--   <tt>image/png</tt>, the HTTP response has a content-type set to
--   <tt>image/png</tt>, and the body of the response is a PNG image.
[$sel:outputFormat:GetMetricWidgetImage'] :: GetMetricWidgetImage -> Maybe Text

-- | A JSON string that defines the bitmap graph to be retrieved. The
--   string includes the metrics to include in the graph, statistics,
--   annotations, title, axis limits, and so on. You can include only one
--   <tt>MetricWidget</tt> parameter in each <tt>GetMetricWidgetImage</tt>
--   call.
--   
--   For more information about the syntax of <tt>MetricWidget</tt> see
--   <a>GetMetricWidgetImage: Metric Widget Structure and Syntax</a>.
--   
--   If any metric on the graph could not load all the requested data
--   points, an orange triangle with an exclamation point appears next to
--   the graph legend.
[$sel:metricWidget:GetMetricWidgetImage'] :: GetMetricWidgetImage -> Text

-- | Create a value of <a>GetMetricWidgetImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputFormat:GetMetricWidgetImage'</a>,
--   <a>getMetricWidgetImage_outputFormat</a> - The format of the resulting
--   image. Only PNG images are supported.
--   
--   The default is <tt>png</tt>. If you specify <tt>png</tt>, the API
--   returns an HTTP response with the content-type set to
--   <tt>text/xml</tt>. The image data is in a <tt>MetricWidgetImage</tt>
--   field. For example:
--   
--   <pre>
--   &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;
--   </pre>
--   
--   <pre>
--   &lt;GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...
--   </pre>
--   
--   <pre>
--   &lt;/MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;
--   </pre>
--   
--   <pre>
--   &lt;/ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResponse&gt;
--   </pre>
--   
--   The <tt>image/png</tt> setting is intended only for custom HTTP
--   requests. For most use cases, and all actions using an Amazon Web
--   Services SDK, you should use <tt>png</tt>. If you specify
--   <tt>image/png</tt>, the HTTP response has a content-type set to
--   <tt>image/png</tt>, and the body of the response is a PNG image.
--   
--   <a>$sel:metricWidget:GetMetricWidgetImage'</a>,
--   <a>getMetricWidgetImage_metricWidget</a> - A JSON string that defines
--   the bitmap graph to be retrieved. The string includes the metrics to
--   include in the graph, statistics, annotations, title, axis limits, and
--   so on. You can include only one <tt>MetricWidget</tt> parameter in
--   each <tt>GetMetricWidgetImage</tt> call.
--   
--   For more information about the syntax of <tt>MetricWidget</tt> see
--   <a>GetMetricWidgetImage: Metric Widget Structure and Syntax</a>.
--   
--   If any metric on the graph could not load all the requested data
--   points, an orange triangle with an exclamation point appears next to
--   the graph legend.
newGetMetricWidgetImage :: Text -> GetMetricWidgetImage

-- | The format of the resulting image. Only PNG images are supported.
--   
--   The default is <tt>png</tt>. If you specify <tt>png</tt>, the API
--   returns an HTTP response with the content-type set to
--   <tt>text/xml</tt>. The image data is in a <tt>MetricWidgetImage</tt>
--   field. For example:
--   
--   <pre>
--   &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;
--   </pre>
--   
--   <pre>
--   &lt;GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...
--   </pre>
--   
--   <pre>
--   &lt;/MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;
--   </pre>
--   
--   <pre>
--   &lt;/ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResponse&gt;
--   </pre>
--   
--   The <tt>image/png</tt> setting is intended only for custom HTTP
--   requests. For most use cases, and all actions using an Amazon Web
--   Services SDK, you should use <tt>png</tt>. If you specify
--   <tt>image/png</tt>, the HTTP response has a content-type set to
--   <tt>image/png</tt>, and the body of the response is a PNG image.
getMetricWidgetImage_outputFormat :: Lens' GetMetricWidgetImage (Maybe Text)

-- | A JSON string that defines the bitmap graph to be retrieved. The
--   string includes the metrics to include in the graph, statistics,
--   annotations, title, axis limits, and so on. You can include only one
--   <tt>MetricWidget</tt> parameter in each <tt>GetMetricWidgetImage</tt>
--   call.
--   
--   For more information about the syntax of <tt>MetricWidget</tt> see
--   <a>GetMetricWidgetImage: Metric Widget Structure and Syntax</a>.
--   
--   If any metric on the graph could not load all the requested data
--   points, an orange triangle with an exclamation point appears next to
--   the graph legend.
getMetricWidgetImage_metricWidget :: Lens' GetMetricWidgetImage Text

-- | <i>See:</i> <a>newGetMetricWidgetImageResponse</a> smart constructor.
data GetMetricWidgetImageResponse
GetMetricWidgetImageResponse' :: Maybe Base64 -> Int -> GetMetricWidgetImageResponse

-- | The image of the graph, in the output format specified. The output is
--   base64-encoded.
[$sel:metricWidgetImage:GetMetricWidgetImageResponse'] :: GetMetricWidgetImageResponse -> Maybe Base64

-- | The response's http status code.
[$sel:httpStatus:GetMetricWidgetImageResponse'] :: GetMetricWidgetImageResponse -> Int

-- | Create a value of <a>GetMetricWidgetImageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricWidgetImage:GetMetricWidgetImageResponse'</a>,
--   <a>getMetricWidgetImageResponse_metricWidgetImage</a> - The image of
--   the graph, in the output format specified. The output is
--   base64-encoded.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
--   
--   <a>$sel:httpStatus:GetMetricWidgetImageResponse'</a>,
--   <a>getMetricWidgetImageResponse_httpStatus</a> - The response's http
--   status code.
newGetMetricWidgetImageResponse :: Int -> GetMetricWidgetImageResponse

-- | The image of the graph, in the output format specified. The output is
--   base64-encoded.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
getMetricWidgetImageResponse_metricWidgetImage :: Lens' GetMetricWidgetImageResponse (Maybe ByteString)

-- | The response's http status code.
getMetricWidgetImageResponse_httpStatus :: Lens' GetMetricWidgetImageResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance GHC.Show.Show Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance GHC.Read.Read Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImageResponse
instance GHC.Show.Show Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImageResponse
instance GHC.Read.Read Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImageResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImageResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.GetMetricWidgetImage.GetMetricWidgetImage


-- | Returns information about the metric stream that you specify.
module Network.AWS.CloudWatch.GetMetricStream

-- | <i>See:</i> <a>newGetMetricStream</a> smart constructor.
data GetMetricStream
GetMetricStream' :: Text -> GetMetricStream

-- | The name of the metric stream to retrieve information about.
[$sel:name:GetMetricStream'] :: GetMetricStream -> Text

-- | Create a value of <a>GetMetricStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetMetricStream'</a>, <a>getMetricStream_name</a> - The
--   name of the metric stream to retrieve information about.
newGetMetricStream :: Text -> GetMetricStream

-- | The name of the metric stream to retrieve information about.
getMetricStream_name :: Lens' GetMetricStream Text

-- | <i>See:</i> <a>newGetMetricStreamResponse</a> smart constructor.
data GetMetricStreamResponse
GetMetricStreamResponse' :: Maybe [MetricStreamFilter] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe MetricStreamOutputFormat -> Maybe [MetricStreamFilter] -> Int -> GetMetricStreamResponse

-- | If this array of metric namespaces is present, then these namespaces
--   are the only metric namespaces that are streamed by this metric
--   stream.
[$sel:includeFilters:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe [MetricStreamFilter]

-- | The ARN of the Amazon Kinesis Firehose delivery stream that is used by
--   this metric stream.
[$sel:firehoseArn:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe Text

-- | The ARN of the IAM role that is used by this metric stream.
[$sel:roleArn:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe Text

-- | The ARN of the metric stream.
[$sel:arn:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe Text

-- | The date that the metric stream was created.
[$sel:creationDate:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe ISO8601

-- | The name of the metric stream.
[$sel:name:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe Text

-- | The date of the most recent update to the metric stream's
--   configuration.
[$sel:lastUpdateDate:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe ISO8601

-- | The state of the metric stream. The possible values are
--   <tt>running</tt> and <tt>stopped</tt>.
[$sel:state:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe Text
[$sel:outputFormat:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe MetricStreamOutputFormat

-- | If this array of metric namespaces is present, then these namespaces
--   are the only metric namespaces that are not streamed by this metric
--   stream. In this case, all other metric namespaces in the account are
--   streamed by this metric stream.
[$sel:excludeFilters:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Maybe [MetricStreamFilter]

-- | The response's http status code.
[$sel:httpStatus:GetMetricStreamResponse'] :: GetMetricStreamResponse -> Int

-- | Create a value of <a>GetMetricStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeFilters:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_includeFilters</a> - If this array of
--   metric namespaces is present, then these namespaces are the only
--   metric namespaces that are streamed by this metric stream.
--   
--   <a>$sel:firehoseArn:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_firehoseArn</a> - The ARN of the Amazon
--   Kinesis Firehose delivery stream that is used by this metric stream.
--   
--   <a>$sel:roleArn:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_roleArn</a> - The ARN of the IAM role that
--   is used by this metric stream.
--   
--   <a>$sel:arn:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_arn</a> - The ARN of the metric stream.
--   
--   <a>$sel:creationDate:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_creationDate</a> - The date that the metric
--   stream was created.
--   
--   <a>$sel:name:GetMetricStream'</a>, <a>getMetricStreamResponse_name</a>
--   - The name of the metric stream.
--   
--   <a>$sel:lastUpdateDate:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_lastUpdateDate</a> - The date of the most
--   recent update to the metric stream's configuration.
--   
--   <a>$sel:state:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_state</a> - The state of the metric stream.
--   The possible values are <tt>running</tt> and <tt>stopped</tt>.
--   
--   <a>$sel:outputFormat:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_outputFormat</a> -
--   
--   <a>$sel:excludeFilters:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_excludeFilters</a> - If this array of
--   metric namespaces is present, then these namespaces are the only
--   metric namespaces that are not streamed by this metric stream. In this
--   case, all other metric namespaces in the account are streamed by this
--   metric stream.
--   
--   <a>$sel:httpStatus:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_httpStatus</a> - The response's http status
--   code.
newGetMetricStreamResponse :: Int -> GetMetricStreamResponse

-- | If this array of metric namespaces is present, then these namespaces
--   are the only metric namespaces that are streamed by this metric
--   stream.
getMetricStreamResponse_includeFilters :: Lens' GetMetricStreamResponse (Maybe [MetricStreamFilter])

-- | The ARN of the Amazon Kinesis Firehose delivery stream that is used by
--   this metric stream.
getMetricStreamResponse_firehoseArn :: Lens' GetMetricStreamResponse (Maybe Text)

-- | The ARN of the IAM role that is used by this metric stream.
getMetricStreamResponse_roleArn :: Lens' GetMetricStreamResponse (Maybe Text)

-- | The ARN of the metric stream.
getMetricStreamResponse_arn :: Lens' GetMetricStreamResponse (Maybe Text)

-- | The date that the metric stream was created.
getMetricStreamResponse_creationDate :: Lens' GetMetricStreamResponse (Maybe UTCTime)

-- | The name of the metric stream.
getMetricStreamResponse_name :: Lens' GetMetricStreamResponse (Maybe Text)

-- | The date of the most recent update to the metric stream's
--   configuration.
getMetricStreamResponse_lastUpdateDate :: Lens' GetMetricStreamResponse (Maybe UTCTime)

-- | The state of the metric stream. The possible values are
--   <tt>running</tt> and <tt>stopped</tt>.
getMetricStreamResponse_state :: Lens' GetMetricStreamResponse (Maybe Text)

getMetricStreamResponse_outputFormat :: Lens' GetMetricStreamResponse (Maybe MetricStreamOutputFormat)

-- | If this array of metric namespaces is present, then these namespaces
--   are the only metric namespaces that are not streamed by this metric
--   stream. In this case, all other metric namespaces in the account are
--   streamed by this metric stream.
getMetricStreamResponse_excludeFilters :: Lens' GetMetricStreamResponse (Maybe [MetricStreamFilter])

-- | The response's http status code.
getMetricStreamResponse_httpStatus :: Lens' GetMetricStreamResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance GHC.Show.Show Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance GHC.Read.Read Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetMetricStream.GetMetricStreamResponse
instance GHC.Show.Show Network.AWS.CloudWatch.GetMetricStream.GetMetricStreamResponse
instance GHC.Read.Read Network.AWS.CloudWatch.GetMetricStream.GetMetricStreamResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetMetricStream.GetMetricStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetMetricStream.GetMetricStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.GetMetricStream.GetMetricStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.GetMetricStream.GetMetricStream


-- | Gets statistics for the specified metric.
--   
--   The maximum number of data points returned from a single call is
--   1,440. If you request more than 1,440 data points, CloudWatch returns
--   an error. To reduce the number of data points, you can narrow the
--   specified time range and make multiple requests across adjacent time
--   ranges, or you can increase the specified period. Data points are not
--   returned in chronological order.
--   
--   CloudWatch aggregates data points based on the length of the period
--   that you specify. For example, if you request statistics with a
--   one-hour period, CloudWatch aggregates all data points with time
--   stamps that fall within each one-hour period. Therefore, the number of
--   values aggregated by CloudWatch is larger than the number of data
--   points returned.
--   
--   CloudWatch needs raw data points to calculate percentile statistics.
--   If you publish data using a statistic set instead, you can only
--   retrieve percentile statistics for this data if one of the following
--   conditions is true:
--   
--   <ul>
--   <li>The SampleCount value of the statistic set is 1.</li>
--   <li>The Min and the Max values of the statistic set are equal.</li>
--   </ul>
--   
--   Percentile statistics are not available for metrics when any of the
--   metric values are negative numbers.
--   
--   Amazon CloudWatch retains metric data as follows:
--   
--   <ul>
--   <li>Data points with a period of less than 60 seconds are available
--   for 3 hours. These data points are high-resolution metrics and are
--   available only for custom metrics that have been defined with a
--   <tt>StorageResolution</tt> of 1.</li>
--   <li>Data points with a period of 60 seconds (1-minute) are available
--   for 15 days.</li>
--   <li>Data points with a period of 300 seconds (5-minute) are available
--   for 63 days.</li>
--   <li>Data points with a period of 3600 seconds (1 hour) are available
--   for 455 days (15 months).</li>
--   </ul>
--   
--   Data points that are initially published with a shorter period are
--   aggregated together for long-term storage. For example, if you collect
--   data using a period of 1 minute, the data remains available for 15
--   days with 1-minute resolution. After 15 days, this data is still
--   available, but is aggregated and retrievable only with a resolution of
--   5 minutes. After 63 days, the data is further aggregated and is
--   available with a resolution of 1 hour.
--   
--   CloudWatch started retaining 5-minute and 1-hour metric data as of
--   July 9, 2016.
--   
--   For information about metrics and dimensions supported by Amazon Web
--   Services services, see the <a>Amazon CloudWatch Metrics and Dimensions
--   Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
module Network.AWS.CloudWatch.GetMetricStatistics

-- | <i>See:</i> <a>newGetMetricStatistics</a> smart constructor.
data GetMetricStatistics
GetMetricStatistics' :: Maybe StandardUnit -> Maybe (NonEmpty Statistic) -> Maybe [Dimension] -> Maybe (NonEmpty Text) -> Text -> Text -> ISO8601 -> ISO8601 -> Natural -> GetMetricStatistics

-- | The unit for a given metric. If you omit <tt>Unit</tt>, all data that
--   was collected with any unit is returned, along with the corresponding
--   units that were specified when the data was reported to CloudWatch. If
--   you specify a unit, the operation returns only data that was collected
--   with that unit specified. If you specify a unit that does not match
--   the data collected, the results of the operation are null. CloudWatch
--   does not perform unit conversions.
[$sel:unit:GetMetricStatistics'] :: GetMetricStatistics -> Maybe StandardUnit

-- | The metric statistics, other than percentile. For percentile
--   statistics, use <tt>ExtendedStatistics</tt>. When calling
--   <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
[$sel:statistics:GetMetricStatistics'] :: GetMetricStatistics -> Maybe (NonEmpty Statistic)

-- | The dimensions. If the metric contains multiple dimensions, you must
--   include a value for each dimension. CloudWatch treats each unique
--   combination of dimensions as a separate metric. If a specific
--   combination of dimensions was not published, you can't retrieve
--   statistics for it. You must specify the same dimensions that were used
--   when the metrics were created. For an example, see <a>Dimension
--   Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more
--   information about specifying dimensions, see <a>Publishing Metrics</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
[$sel:dimensions:GetMetricStatistics'] :: GetMetricStatistics -> Maybe [Dimension]

-- | The percentile statistics. Specify values between p0.0 and p100. When
--   calling <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
--   Percentile statistics are not available for metrics when any of the
--   metric values are negative numbers.
[$sel:extendedStatistics:GetMetricStatistics'] :: GetMetricStatistics -> Maybe (NonEmpty Text)

-- | The namespace of the metric, with or without spaces.
[$sel:namespace:GetMetricStatistics'] :: GetMetricStatistics -> Text

-- | The name of the metric, with or without spaces.
[$sel:metricName:GetMetricStatistics'] :: GetMetricStatistics -> Text

-- | The time stamp that determines the first data point to return. Start
--   times are evaluated relative to the time that CloudWatch receives the
--   request.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp. In a raw HTTP query, the time stamp must be in
--   ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
[$sel:startTime:GetMetricStatistics'] :: GetMetricStatistics -> ISO8601

-- | The time stamp that determines the last data point to return.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp. In a raw HTTP query, the time stamp must be
--   in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).
[$sel:endTime:GetMetricStatistics'] :: GetMetricStatistics -> ISO8601

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
[$sel:period:GetMetricStatistics'] :: GetMetricStatistics -> Natural

-- | Create a value of <a>GetMetricStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:GetMetricStatistics'</a>, <a>getMetricStatistics_unit</a>
--   - The unit for a given metric. If you omit <tt>Unit</tt>, all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
--   
--   <a>$sel:statistics:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_statistics</a> - The metric statistics, other
--   than percentile. For percentile statistics, use
--   <tt>ExtendedStatistics</tt>. When calling
--   <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
--   
--   <a>$sel:dimensions:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_dimensions</a> - The dimensions. If the metric
--   contains multiple dimensions, you must include a value for each
--   dimension. CloudWatch treats each unique combination of dimensions as
--   a separate metric. If a specific combination of dimensions was not
--   published, you can't retrieve statistics for it. You must specify the
--   same dimensions that were used when the metrics were created. For an
--   example, see <a>Dimension Combinations</a> in the <i>Amazon CloudWatch
--   User Guide</i>. For more information about specifying dimensions, see
--   <a>Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   <a>$sel:extendedStatistics:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_extendedStatistics</a> - The percentile
--   statistics. Specify values between p0.0 and p100. When calling
--   <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
--   Percentile statistics are not available for metrics when any of the
--   metric values are negative numbers.
--   
--   <a>$sel:namespace:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_namespace</a> - The namespace of the metric,
--   with or without spaces.
--   
--   <a>$sel:metricName:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_metricName</a> - The name of the metric, with
--   or without spaces.
--   
--   <a>$sel:startTime:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_startTime</a> - The time stamp that determines
--   the first data point to return. Start times are evaluated relative to
--   the time that CloudWatch receives the request.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp. In a raw HTTP query, the time stamp must be in
--   ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
--   
--   <a>$sel:endTime:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_endTime</a> - The time stamp that determines
--   the last data point to return.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp. In a raw HTTP query, the time stamp must be
--   in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).
--   
--   <a>$sel:period:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_period</a> - The granularity, in seconds, of
--   the returned data points. For metrics with regular resolution, a
--   period can be as short as one minute (60 seconds) and must be a
--   multiple of 60. For high-resolution metrics that are collected at
--   intervals of less than one minute, the period can be 1, 5, 10, 30, 60,
--   or any multiple of 60. High-resolution metrics are those metrics
--   stored by a <tt>PutMetricData</tt> call that includes a
--   <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
newGetMetricStatistics :: Text -> Text -> UTCTime -> UTCTime -> Natural -> GetMetricStatistics

-- | The unit for a given metric. If you omit <tt>Unit</tt>, all data that
--   was collected with any unit is returned, along with the corresponding
--   units that were specified when the data was reported to CloudWatch. If
--   you specify a unit, the operation returns only data that was collected
--   with that unit specified. If you specify a unit that does not match
--   the data collected, the results of the operation are null. CloudWatch
--   does not perform unit conversions.
getMetricStatistics_unit :: Lens' GetMetricStatistics (Maybe StandardUnit)

-- | The metric statistics, other than percentile. For percentile
--   statistics, use <tt>ExtendedStatistics</tt>. When calling
--   <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
getMetricStatistics_statistics :: Lens' GetMetricStatistics (Maybe (NonEmpty Statistic))

-- | The dimensions. If the metric contains multiple dimensions, you must
--   include a value for each dimension. CloudWatch treats each unique
--   combination of dimensions as a separate metric. If a specific
--   combination of dimensions was not published, you can't retrieve
--   statistics for it. You must specify the same dimensions that were used
--   when the metrics were created. For an example, see <a>Dimension
--   Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more
--   information about specifying dimensions, see <a>Publishing Metrics</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
getMetricStatistics_dimensions :: Lens' GetMetricStatistics (Maybe [Dimension])

-- | The percentile statistics. Specify values between p0.0 and p100. When
--   calling <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
--   Percentile statistics are not available for metrics when any of the
--   metric values are negative numbers.
getMetricStatistics_extendedStatistics :: Lens' GetMetricStatistics (Maybe (NonEmpty Text))

-- | The namespace of the metric, with or without spaces.
getMetricStatistics_namespace :: Lens' GetMetricStatistics Text

-- | The name of the metric, with or without spaces.
getMetricStatistics_metricName :: Lens' GetMetricStatistics Text

-- | The time stamp that determines the first data point to return. Start
--   times are evaluated relative to the time that CloudWatch receives the
--   request.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp. In a raw HTTP query, the time stamp must be in
--   ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
getMetricStatistics_startTime :: Lens' GetMetricStatistics UTCTime

-- | The time stamp that determines the last data point to return.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp. In a raw HTTP query, the time stamp must be
--   in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).
getMetricStatistics_endTime :: Lens' GetMetricStatistics UTCTime

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
getMetricStatistics_period :: Lens' GetMetricStatistics Natural

-- | <i>See:</i> <a>newGetMetricStatisticsResponse</a> smart constructor.
data GetMetricStatisticsResponse
GetMetricStatisticsResponse' :: Maybe [Datapoint] -> Maybe Text -> Int -> GetMetricStatisticsResponse

-- | The data points for the specified metric.
[$sel:datapoints:GetMetricStatisticsResponse'] :: GetMetricStatisticsResponse -> Maybe [Datapoint]

-- | A label for the specified metric.
[$sel:label:GetMetricStatisticsResponse'] :: GetMetricStatisticsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMetricStatisticsResponse'] :: GetMetricStatisticsResponse -> Int

-- | Create a value of <a>GetMetricStatisticsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datapoints:GetMetricStatisticsResponse'</a>,
--   <a>getMetricStatisticsResponse_datapoints</a> - The data points for
--   the specified metric.
--   
--   <a>$sel:label:GetMetricStatisticsResponse'</a>,
--   <a>getMetricStatisticsResponse_label</a> - A label for the specified
--   metric.
--   
--   <a>$sel:httpStatus:GetMetricStatisticsResponse'</a>,
--   <a>getMetricStatisticsResponse_httpStatus</a> - The response's http
--   status code.
newGetMetricStatisticsResponse :: Int -> GetMetricStatisticsResponse

-- | The data points for the specified metric.
getMetricStatisticsResponse_datapoints :: Lens' GetMetricStatisticsResponse (Maybe [Datapoint])

-- | A label for the specified metric.
getMetricStatisticsResponse_label :: Lens' GetMetricStatisticsResponse (Maybe Text)

-- | The response's http status code.
getMetricStatisticsResponse_httpStatus :: Lens' GetMetricStatisticsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance GHC.Show.Show Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance GHC.Read.Read Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatisticsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatisticsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatisticsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatisticsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatisticsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.GetMetricStatistics.GetMetricStatistics


-- | You can use the <tt>GetMetricData</tt> API to retrieve as many as 500
--   different metrics in a single request, with a total of as many as
--   100,800 data points. You can also optionally perform math expressions
--   on the values of the returned statistics, to create new time series
--   that represent new insights into your data. For example, using Lambda
--   metrics, you could divide the Errors metric by the Invocations metric
--   to get an error rate time series. For more information about metric
--   math expressions, see <a>Metric Math Syntax and Functions</a> in the
--   <i>Amazon CloudWatch User Guide</i>.
--   
--   Calls to the <tt>GetMetricData</tt> API have a different pricing
--   structure than calls to <tt>GetMetricStatistics</tt>. For more
--   information about pricing, see <a>Amazon CloudWatch Pricing</a>.
--   
--   Amazon CloudWatch retains metric data as follows:
--   
--   <ul>
--   <li>Data points with a period of less than 60 seconds are available
--   for 3 hours. These data points are high-resolution metrics and are
--   available only for custom metrics that have been defined with a
--   <tt>StorageResolution</tt> of 1.</li>
--   <li>Data points with a period of 60 seconds (1-minute) are available
--   for 15 days.</li>
--   <li>Data points with a period of 300 seconds (5-minute) are available
--   for 63 days.</li>
--   <li>Data points with a period of 3600 seconds (1 hour) are available
--   for 455 days (15 months).</li>
--   </ul>
--   
--   Data points that are initially published with a shorter period are
--   aggregated together for long-term storage. For example, if you collect
--   data using a period of 1 minute, the data remains available for 15
--   days with 1-minute resolution. After 15 days, this data is still
--   available, but is aggregated and retrievable only with a resolution of
--   5 minutes. After 63 days, the data is further aggregated and is
--   available with a resolution of 1 hour.
--   
--   If you omit <tt>Unit</tt> in your request, all data that was collected
--   with any unit is returned, along with the corresponding units that
--   were specified when the data was reported to CloudWatch. If you
--   specify a unit, the operation returns only data that was collected
--   with that unit specified. If you specify a unit that does not match
--   the data collected, the results of the operation are null. CloudWatch
--   does not perform unit conversions.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatch.GetMetricData

-- | <i>See:</i> <a>newGetMetricData</a> smart constructor.
data GetMetricData
GetMetricData' :: Maybe Text -> Maybe ScanBy -> Maybe LabelOptions -> Maybe Int -> [MetricDataQuery] -> ISO8601 -> ISO8601 -> GetMetricData

-- | Include this value, if it was returned by the previous
--   <tt>GetMetricData</tt> operation, to get the next set of data points.
[$sel:nextToken:GetMetricData'] :: GetMetricData -> Maybe Text

-- | The order in which data points should be returned.
--   <tt>TimestampDescending</tt> returns the newest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
--   <tt>TimestampAscending</tt> returns the oldest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
[$sel:scanBy:GetMetricData'] :: GetMetricData -> Maybe ScanBy

-- | This structure includes the <tt>Timezone</tt> parameter, which you can
--   use to specify your time zone so that the labels of returned data
--   display the correct time for your time zone.
[$sel:labelOptions:GetMetricData'] :: GetMetricData -> Maybe LabelOptions

-- | The maximum number of data points the request should return before
--   paginating. If you omit this, the default of 100,800 is used.
[$sel:maxDatapoints:GetMetricData'] :: GetMetricData -> Maybe Int

-- | The metric queries to be returned. A single <tt>GetMetricData</tt>
--   call can include as many as 500 <tt>MetricDataQuery</tt> structures.
--   Each of these structures can specify either a metric to retrieve, or a
--   math expression to perform on retrieved data.
[$sel:metricDataQueries:GetMetricData'] :: GetMetricData -> [MetricDataQuery]

-- | The time stamp indicating the earliest data to be returned.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp.
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>StartTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>StartTime</tt>.
[$sel:startTime:GetMetricData'] :: GetMetricData -> ISO8601

-- | The time stamp indicating the latest data to be returned.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>EndTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>EndTime</tt>.
[$sel:endTime:GetMetricData'] :: GetMetricData -> ISO8601

-- | Create a value of <a>GetMetricData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMetricData'</a>, <a>getMetricData_nextToken</a> -
--   Include this value, if it was returned by the previous
--   <tt>GetMetricData</tt> operation, to get the next set of data points.
--   
--   <a>$sel:scanBy:GetMetricData'</a>, <a>getMetricData_scanBy</a> - The
--   order in which data points should be returned.
--   <tt>TimestampDescending</tt> returns the newest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
--   <tt>TimestampAscending</tt> returns the oldest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
--   
--   <a>$sel:labelOptions:GetMetricData'</a>,
--   <a>getMetricData_labelOptions</a> - This structure includes the
--   <tt>Timezone</tt> parameter, which you can use to specify your time
--   zone so that the labels of returned data display the correct time for
--   your time zone.
--   
--   <a>$sel:maxDatapoints:GetMetricData'</a>,
--   <a>getMetricData_maxDatapoints</a> - The maximum number of data points
--   the request should return before paginating. If you omit this, the
--   default of 100,800 is used.
--   
--   <a>$sel:metricDataQueries:GetMetricData'</a>,
--   <a>getMetricData_metricDataQueries</a> - The metric queries to be
--   returned. A single <tt>GetMetricData</tt> call can include as many as
--   500 <tt>MetricDataQuery</tt> structures. Each of these structures can
--   specify either a metric to retrieve, or a math expression to perform
--   on retrieved data.
--   
--   <a>$sel:startTime:GetMetricData'</a>, <a>getMetricData_startTime</a> -
--   The time stamp indicating the earliest data to be returned.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp.
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>StartTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>StartTime</tt>.
--   
--   <a>$sel:endTime:GetMetricData'</a>, <a>getMetricData_endTime</a> - The
--   time stamp indicating the latest data to be returned.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>EndTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>EndTime</tt>.
newGetMetricData :: UTCTime -> UTCTime -> GetMetricData

-- | Include this value, if it was returned by the previous
--   <tt>GetMetricData</tt> operation, to get the next set of data points.
getMetricData_nextToken :: Lens' GetMetricData (Maybe Text)

-- | The order in which data points should be returned.
--   <tt>TimestampDescending</tt> returns the newest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
--   <tt>TimestampAscending</tt> returns the oldest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
getMetricData_scanBy :: Lens' GetMetricData (Maybe ScanBy)

-- | This structure includes the <tt>Timezone</tt> parameter, which you can
--   use to specify your time zone so that the labels of returned data
--   display the correct time for your time zone.
getMetricData_labelOptions :: Lens' GetMetricData (Maybe LabelOptions)

-- | The maximum number of data points the request should return before
--   paginating. If you omit this, the default of 100,800 is used.
getMetricData_maxDatapoints :: Lens' GetMetricData (Maybe Int)

-- | The metric queries to be returned. A single <tt>GetMetricData</tt>
--   call can include as many as 500 <tt>MetricDataQuery</tt> structures.
--   Each of these structures can specify either a metric to retrieve, or a
--   math expression to perform on retrieved data.
getMetricData_metricDataQueries :: Lens' GetMetricData [MetricDataQuery]

-- | The time stamp indicating the earliest data to be returned.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp.
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>StartTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>StartTime</tt>.
getMetricData_startTime :: Lens' GetMetricData UTCTime

-- | The time stamp indicating the latest data to be returned.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>EndTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>EndTime</tt>.
getMetricData_endTime :: Lens' GetMetricData UTCTime

-- | <i>See:</i> <a>newGetMetricDataResponse</a> smart constructor.
data GetMetricDataResponse
GetMetricDataResponse' :: Maybe Text -> Maybe [MetricDataResult] -> Maybe [MessageData] -> Int -> GetMetricDataResponse

-- | A token that marks the next batch of returned results.
[$sel:nextToken:GetMetricDataResponse'] :: GetMetricDataResponse -> Maybe Text

-- | The metrics that are returned, including the metric name, namespace,
--   and dimensions.
[$sel:metricDataResults:GetMetricDataResponse'] :: GetMetricDataResponse -> Maybe [MetricDataResult]

-- | Contains a message about this <tt>GetMetricData</tt> operation, if the
--   operation results in such a message. An example of a message that
--   might be returned is <tt>Maximum number of allowed metrics
--   exceeded</tt>. If there is a message, as much of the operation as
--   possible is still executed.
--   
--   A message appears here only if it is related to the global
--   <tt>GetMetricData</tt> operation. Any message about a specific metric
--   returned by the operation appears in the <tt>MetricDataResult</tt>
--   object returned for that metric.
[$sel:messages:GetMetricDataResponse'] :: GetMetricDataResponse -> Maybe [MessageData]

-- | The response's http status code.
[$sel:httpStatus:GetMetricDataResponse'] :: GetMetricDataResponse -> Int

-- | Create a value of <a>GetMetricDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMetricData'</a>,
--   <a>getMetricDataResponse_nextToken</a> - A token that marks the next
--   batch of returned results.
--   
--   <a>$sel:metricDataResults:GetMetricDataResponse'</a>,
--   <a>getMetricDataResponse_metricDataResults</a> - The metrics that are
--   returned, including the metric name, namespace, and dimensions.
--   
--   <a>$sel:messages:GetMetricDataResponse'</a>,
--   <a>getMetricDataResponse_messages</a> - Contains a message about this
--   <tt>GetMetricData</tt> operation, if the operation results in such a
--   message. An example of a message that might be returned is <tt>Maximum
--   number of allowed metrics exceeded</tt>. If there is a message, as
--   much of the operation as possible is still executed.
--   
--   A message appears here only if it is related to the global
--   <tt>GetMetricData</tt> operation. Any message about a specific metric
--   returned by the operation appears in the <tt>MetricDataResult</tt>
--   object returned for that metric.
--   
--   <a>$sel:httpStatus:GetMetricDataResponse'</a>,
--   <a>getMetricDataResponse_httpStatus</a> - The response's http status
--   code.
newGetMetricDataResponse :: Int -> GetMetricDataResponse

-- | A token that marks the next batch of returned results.
getMetricDataResponse_nextToken :: Lens' GetMetricDataResponse (Maybe Text)

-- | The metrics that are returned, including the metric name, namespace,
--   and dimensions.
getMetricDataResponse_metricDataResults :: Lens' GetMetricDataResponse (Maybe [MetricDataResult])

-- | Contains a message about this <tt>GetMetricData</tt> operation, if the
--   operation results in such a message. An example of a message that
--   might be returned is <tt>Maximum number of allowed metrics
--   exceeded</tt>. If there is a message, as much of the operation as
--   possible is still executed.
--   
--   A message appears here only if it is related to the global
--   <tt>GetMetricData</tt> operation. Any message about a specific metric
--   returned by the operation appears in the <tt>MetricDataResult</tt>
--   object returned for that metric.
getMetricDataResponse_messages :: Lens' GetMetricDataResponse (Maybe [MessageData])

-- | The response's http status code.
getMetricDataResponse_httpStatus :: Lens' GetMetricDataResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance GHC.Show.Show Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance GHC.Read.Read Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetMetricData.GetMetricDataResponse
instance GHC.Show.Show Network.AWS.CloudWatch.GetMetricData.GetMetricDataResponse
instance GHC.Read.Read Network.AWS.CloudWatch.GetMetricData.GetMetricDataResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetMetricData.GetMetricDataResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetMetricData.GetMetricDataResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.GetMetricData.GetMetricData
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.GetMetricData.GetMetricData


-- | This operation returns the time series data collected by a Contributor
--   Insights rule. The data includes the identity and number of
--   contributors to the log group.
--   
--   You can also optionally return one or more statistics about each data
--   point in the time series. These statistics can include the following:
--   
--   <ul>
--   <li><tt>UniqueContributors</tt> -- the number of unique contributors
--   for each data point.</li>
--   <li><tt>MaxContributorValue</tt> -- the value of the top contributor
--   for each data point. The identity of the contributor might change for
--   each data point in the graph.If this rule aggregates by COUNT, the top
--   contributor for each data point is the contributor with the most
--   occurrences in that period. If the rule aggregates by SUM, the top
--   contributor is the contributor with the highest sum in the log field
--   specified by the rule's <tt>Value</tt>, during that period.</li>
--   <li><tt>SampleCount</tt> -- the number of data points matched by the
--   rule.</li>
--   <li><tt>Sum</tt> -- the sum of the values from all contributors during
--   the time period represented by that data point.</li>
--   <li><tt>Minimum</tt> -- the minimum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Maximum</tt> -- the maximum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Average</tt> -- the average value from all contributors during
--   the time period represented by that data point.</li>
--   </ul>
module Network.AWS.CloudWatch.GetInsightRuleReport

-- | <i>See:</i> <a>newGetInsightRuleReport</a> smart constructor.
data GetInsightRuleReport
GetInsightRuleReport' :: Maybe Text -> Maybe [Text] -> Maybe Int -> Text -> ISO8601 -> ISO8601 -> Natural -> GetInsightRuleReport

-- | Determines what statistic to use to rank the contributors. Valid
--   values are SUM and MAXIMUM.
[$sel:orderBy:GetInsightRuleReport'] :: GetInsightRuleReport -> Maybe Text

-- | Specifies which metrics to use for aggregation of contributor values
--   for the report. You can specify one or more of the following metrics:
--   
--   <ul>
--   <li><tt>UniqueContributors</tt> -- the number of unique contributors
--   for each data point.</li>
--   <li><tt>MaxContributorValue</tt> -- the value of the top contributor
--   for each data point. The identity of the contributor might change for
--   each data point in the graph.If this rule aggregates by COUNT, the top
--   contributor for each data point is the contributor with the most
--   occurrences in that period. If the rule aggregates by SUM, the top
--   contributor is the contributor with the highest sum in the log field
--   specified by the rule's <tt>Value</tt>, during that period.</li>
--   <li><tt>SampleCount</tt> -- the number of data points matched by the
--   rule.</li>
--   <li><tt>Sum</tt> -- the sum of the values from all contributors during
--   the time period represented by that data point.</li>
--   <li><tt>Minimum</tt> -- the minimum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Maximum</tt> -- the maximum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Average</tt> -- the average value from all contributors during
--   the time period represented by that data point.</li>
--   </ul>
[$sel:metrics:GetInsightRuleReport'] :: GetInsightRuleReport -> Maybe [Text]

-- | The maximum number of contributors to include in the report. The range
--   is 1 to 100. If you omit this, the default of 10 is used.
[$sel:maxContributorCount:GetInsightRuleReport'] :: GetInsightRuleReport -> Maybe Int

-- | The name of the rule that you want to see data from.
[$sel:ruleName:GetInsightRuleReport'] :: GetInsightRuleReport -> Text

-- | The start time of the data to use in the report. When used in a raw
--   HTTP Query API, it is formatted as <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
[$sel:startTime:GetInsightRuleReport'] :: GetInsightRuleReport -> ISO8601

-- | The end time of the data to use in the report. When used in a raw HTTP
--   Query API, it is formatted as <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
[$sel:endTime:GetInsightRuleReport'] :: GetInsightRuleReport -> ISO8601

-- | The period, in seconds, to use for the statistics in the
--   <tt>InsightRuleMetricDatapoint</tt> results.
[$sel:period:GetInsightRuleReport'] :: GetInsightRuleReport -> Natural

-- | Create a value of <a>GetInsightRuleReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderBy:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_orderBy</a> - Determines what statistic to use
--   to rank the contributors. Valid values are SUM and MAXIMUM.
--   
--   <a>$sel:metrics:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_metrics</a> - Specifies which metrics to use
--   for aggregation of contributor values for the report. You can specify
--   one or more of the following metrics:
--   
--   <ul>
--   <li><tt>UniqueContributors</tt> -- the number of unique contributors
--   for each data point.</li>
--   <li><tt>MaxContributorValue</tt> -- the value of the top contributor
--   for each data point. The identity of the contributor might change for
--   each data point in the graph.If this rule aggregates by COUNT, the top
--   contributor for each data point is the contributor with the most
--   occurrences in that period. If the rule aggregates by SUM, the top
--   contributor is the contributor with the highest sum in the log field
--   specified by the rule's <tt>Value</tt>, during that period.</li>
--   <li><tt>SampleCount</tt> -- the number of data points matched by the
--   rule.</li>
--   <li><tt>Sum</tt> -- the sum of the values from all contributors during
--   the time period represented by that data point.</li>
--   <li><tt>Minimum</tt> -- the minimum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Maximum</tt> -- the maximum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Average</tt> -- the average value from all contributors during
--   the time period represented by that data point.</li>
--   </ul>
--   
--   <a>$sel:maxContributorCount:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_maxContributorCount</a> - The maximum number
--   of contributors to include in the report. The range is 1 to 100. If
--   you omit this, the default of 10 is used.
--   
--   <a>$sel:ruleName:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_ruleName</a> - The name of the rule that you
--   want to see data from.
--   
--   <a>$sel:startTime:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_startTime</a> - The start time of the data to
--   use in the report. When used in a raw HTTP Query API, it is formatted
--   as <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
--   
--   <a>$sel:endTime:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_endTime</a> - The end time of the data to use
--   in the report. When used in a raw HTTP Query API, it is formatted as
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
--   
--   <a>$sel:period:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_period</a> - The period, in seconds, to use
--   for the statistics in the <tt>InsightRuleMetricDatapoint</tt> results.
newGetInsightRuleReport :: Text -> UTCTime -> UTCTime -> Natural -> GetInsightRuleReport

-- | Determines what statistic to use to rank the contributors. Valid
--   values are SUM and MAXIMUM.
getInsightRuleReport_orderBy :: Lens' GetInsightRuleReport (Maybe Text)

-- | Specifies which metrics to use for aggregation of contributor values
--   for the report. You can specify one or more of the following metrics:
--   
--   <ul>
--   <li><tt>UniqueContributors</tt> -- the number of unique contributors
--   for each data point.</li>
--   <li><tt>MaxContributorValue</tt> -- the value of the top contributor
--   for each data point. The identity of the contributor might change for
--   each data point in the graph.If this rule aggregates by COUNT, the top
--   contributor for each data point is the contributor with the most
--   occurrences in that period. If the rule aggregates by SUM, the top
--   contributor is the contributor with the highest sum in the log field
--   specified by the rule's <tt>Value</tt>, during that period.</li>
--   <li><tt>SampleCount</tt> -- the number of data points matched by the
--   rule.</li>
--   <li><tt>Sum</tt> -- the sum of the values from all contributors during
--   the time period represented by that data point.</li>
--   <li><tt>Minimum</tt> -- the minimum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Maximum</tt> -- the maximum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Average</tt> -- the average value from all contributors during
--   the time period represented by that data point.</li>
--   </ul>
getInsightRuleReport_metrics :: Lens' GetInsightRuleReport (Maybe [Text])

-- | The maximum number of contributors to include in the report. The range
--   is 1 to 100. If you omit this, the default of 10 is used.
getInsightRuleReport_maxContributorCount :: Lens' GetInsightRuleReport (Maybe Int)

-- | The name of the rule that you want to see data from.
getInsightRuleReport_ruleName :: Lens' GetInsightRuleReport Text

-- | The start time of the data to use in the report. When used in a raw
--   HTTP Query API, it is formatted as <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
getInsightRuleReport_startTime :: Lens' GetInsightRuleReport UTCTime

-- | The end time of the data to use in the report. When used in a raw HTTP
--   Query API, it is formatted as <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
getInsightRuleReport_endTime :: Lens' GetInsightRuleReport UTCTime

-- | The period, in seconds, to use for the statistics in the
--   <tt>InsightRuleMetricDatapoint</tt> results.
getInsightRuleReport_period :: Lens' GetInsightRuleReport Natural

-- | <i>See:</i> <a>newGetInsightRuleReportResponse</a> smart constructor.
data GetInsightRuleReportResponse
GetInsightRuleReportResponse' :: Maybe Integer -> Maybe [InsightRuleMetricDatapoint] -> Maybe [InsightRuleContributor] -> Maybe Double -> Maybe [Text] -> Maybe Text -> Int -> GetInsightRuleReportResponse

-- | An approximate count of the unique contributors found by this rule in
--   this time period.
[$sel:approximateUniqueCount:GetInsightRuleReportResponse'] :: GetInsightRuleReportResponse -> Maybe Integer

-- | A time series of metric data points that matches the time period in
--   the rule request.
[$sel:metricDatapoints:GetInsightRuleReportResponse'] :: GetInsightRuleReportResponse -> Maybe [InsightRuleMetricDatapoint]

-- | An array of the unique contributors found by this rule in this time
--   period. If the rule contains multiple keys, each combination of values
--   for the keys counts as a unique contributor.
[$sel:contributors:GetInsightRuleReportResponse'] :: GetInsightRuleReportResponse -> Maybe [InsightRuleContributor]

-- | The sum of the values from all individual contributors that match the
--   rule.
[$sel:aggregateValue:GetInsightRuleReportResponse'] :: GetInsightRuleReportResponse -> Maybe Double

-- | An array of the strings used as the keys for this rule. The keys are
--   the dimensions used to classify contributors. If the rule contains
--   more than one key, then each unique combination of values for the keys
--   is counted as a unique contributor.
[$sel:keyLabels:GetInsightRuleReportResponse'] :: GetInsightRuleReportResponse -> Maybe [Text]

-- | Specifies whether this rule aggregates contributor data by COUNT or
--   SUM.
[$sel:aggregationStatistic:GetInsightRuleReportResponse'] :: GetInsightRuleReportResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetInsightRuleReportResponse'] :: GetInsightRuleReportResponse -> Int

-- | Create a value of <a>GetInsightRuleReportResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approximateUniqueCount:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_approximateUniqueCount</a> - An
--   approximate count of the unique contributors found by this rule in
--   this time period.
--   
--   <a>$sel:metricDatapoints:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_metricDatapoints</a> - A time series
--   of metric data points that matches the time period in the rule
--   request.
--   
--   <a>$sel:contributors:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_contributors</a> - An array of the
--   unique contributors found by this rule in this time period. If the
--   rule contains multiple keys, each combination of values for the keys
--   counts as a unique contributor.
--   
--   <a>$sel:aggregateValue:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_aggregateValue</a> - The sum of the
--   values from all individual contributors that match the rule.
--   
--   <a>$sel:keyLabels:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_keyLabels</a> - An array of the
--   strings used as the keys for this rule. The keys are the dimensions
--   used to classify contributors. If the rule contains more than one key,
--   then each unique combination of values for the keys is counted as a
--   unique contributor.
--   
--   <a>$sel:aggregationStatistic:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_aggregationStatistic</a> - Specifies
--   whether this rule aggregates contributor data by COUNT or SUM.
--   
--   <a>$sel:httpStatus:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_httpStatus</a> - The response's http
--   status code.
newGetInsightRuleReportResponse :: Int -> GetInsightRuleReportResponse

-- | An approximate count of the unique contributors found by this rule in
--   this time period.
getInsightRuleReportResponse_approximateUniqueCount :: Lens' GetInsightRuleReportResponse (Maybe Integer)

-- | A time series of metric data points that matches the time period in
--   the rule request.
getInsightRuleReportResponse_metricDatapoints :: Lens' GetInsightRuleReportResponse (Maybe [InsightRuleMetricDatapoint])

-- | An array of the unique contributors found by this rule in this time
--   period. If the rule contains multiple keys, each combination of values
--   for the keys counts as a unique contributor.
getInsightRuleReportResponse_contributors :: Lens' GetInsightRuleReportResponse (Maybe [InsightRuleContributor])

-- | The sum of the values from all individual contributors that match the
--   rule.
getInsightRuleReportResponse_aggregateValue :: Lens' GetInsightRuleReportResponse (Maybe Double)

-- | An array of the strings used as the keys for this rule. The keys are
--   the dimensions used to classify contributors. If the rule contains
--   more than one key, then each unique combination of values for the keys
--   is counted as a unique contributor.
getInsightRuleReportResponse_keyLabels :: Lens' GetInsightRuleReportResponse (Maybe [Text])

-- | Specifies whether this rule aggregates contributor data by COUNT or
--   SUM.
getInsightRuleReportResponse_aggregationStatistic :: Lens' GetInsightRuleReportResponse (Maybe Text)

-- | The response's http status code.
getInsightRuleReportResponse_httpStatus :: Lens' GetInsightRuleReportResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance GHC.Show.Show Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance GHC.Read.Read Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReportResponse
instance GHC.Show.Show Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReportResponse
instance GHC.Read.Read Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReportResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReportResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReportResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.GetInsightRuleReport.GetInsightRuleReport


-- | Displays the details of the dashboard that you specify.
--   
--   To copy an existing dashboard, use <tt>GetDashboard</tt>, and then use
--   the data returned within <tt>DashboardBody</tt> as the template for
--   the new dashboard when you call <tt>PutDashboard</tt> to create the
--   copy.
module Network.AWS.CloudWatch.GetDashboard

-- | <i>See:</i> <a>newGetDashboard</a> smart constructor.
data GetDashboard
GetDashboard' :: Text -> GetDashboard

-- | The name of the dashboard to be described.
[$sel:dashboardName:GetDashboard'] :: GetDashboard -> Text

-- | Create a value of <a>GetDashboard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardName:GetDashboard'</a>,
--   <a>getDashboard_dashboardName</a> - The name of the dashboard to be
--   described.
newGetDashboard :: Text -> GetDashboard

-- | The name of the dashboard to be described.
getDashboard_dashboardName :: Lens' GetDashboard Text

-- | <i>See:</i> <a>newGetDashboardResponse</a> smart constructor.
data GetDashboardResponse
GetDashboardResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetDashboardResponse

-- | The detailed information about the dashboard, including what widgets
--   are included and their location on the dashboard. For more information
--   about the <tt>DashboardBody</tt> syntax, see <a>Dashboard Body
--   Structure and Syntax</a>.
[$sel:dashboardBody:GetDashboardResponse'] :: GetDashboardResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the dashboard.
[$sel:dashboardArn:GetDashboardResponse'] :: GetDashboardResponse -> Maybe Text

-- | The name of the dashboard.
[$sel:dashboardName:GetDashboardResponse'] :: GetDashboardResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDashboardResponse'] :: GetDashboardResponse -> Int

-- | Create a value of <a>GetDashboardResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardBody:GetDashboardResponse'</a>,
--   <a>getDashboardResponse_dashboardBody</a> - The detailed information
--   about the dashboard, including what widgets are included and their
--   location on the dashboard. For more information about the
--   <tt>DashboardBody</tt> syntax, see <a>Dashboard Body Structure and
--   Syntax</a>.
--   
--   <a>$sel:dashboardArn:GetDashboardResponse'</a>,
--   <a>getDashboardResponse_dashboardArn</a> - The Amazon Resource Name
--   (ARN) of the dashboard.
--   
--   <a>$sel:dashboardName:GetDashboard'</a>,
--   <a>getDashboardResponse_dashboardName</a> - The name of the dashboard.
--   
--   <a>$sel:httpStatus:GetDashboardResponse'</a>,
--   <a>getDashboardResponse_httpStatus</a> - The response's http status
--   code.
newGetDashboardResponse :: Int -> GetDashboardResponse

-- | The detailed information about the dashboard, including what widgets
--   are included and their location on the dashboard. For more information
--   about the <tt>DashboardBody</tt> syntax, see <a>Dashboard Body
--   Structure and Syntax</a>.
getDashboardResponse_dashboardBody :: Lens' GetDashboardResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dashboard.
getDashboardResponse_dashboardArn :: Lens' GetDashboardResponse (Maybe Text)

-- | The name of the dashboard.
getDashboardResponse_dashboardName :: Lens' GetDashboardResponse (Maybe Text)

-- | The response's http status code.
getDashboardResponse_httpStatus :: Lens' GetDashboardResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance GHC.Show.Show Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance GHC.Read.Read Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance GHC.Generics.Generic Network.AWS.CloudWatch.GetDashboard.GetDashboardResponse
instance GHC.Show.Show Network.AWS.CloudWatch.GetDashboard.GetDashboardResponse
instance GHC.Read.Read Network.AWS.CloudWatch.GetDashboard.GetDashboardResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.GetDashboard.GetDashboardResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetDashboard.GetDashboardResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.GetDashboard.GetDashboard
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.GetDashboard.GetDashboard


-- | Enables the specified Contributor Insights rules. When rules are
--   enabled, they immediately begin analyzing log data.
module Network.AWS.CloudWatch.EnableInsightRules

-- | <i>See:</i> <a>newEnableInsightRules</a> smart constructor.
data EnableInsightRules
EnableInsightRules' :: [Text] -> EnableInsightRules

-- | An array of the rule names to enable. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
[$sel:ruleNames:EnableInsightRules'] :: EnableInsightRules -> [Text]

-- | Create a value of <a>EnableInsightRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleNames:EnableInsightRules'</a>,
--   <a>enableInsightRules_ruleNames</a> - An array of the rule names to
--   enable. If you need to find out the names of your rules, use
--   <a>DescribeInsightRules</a>.
newEnableInsightRules :: EnableInsightRules

-- | An array of the rule names to enable. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
enableInsightRules_ruleNames :: Lens' EnableInsightRules [Text]

-- | <i>See:</i> <a>newEnableInsightRulesResponse</a> smart constructor.
data EnableInsightRulesResponse
EnableInsightRulesResponse' :: Maybe [PartialFailure] -> Int -> EnableInsightRulesResponse

-- | An array listing the rules that could not be enabled. You cannot
--   disable or enable built-in rules.
[$sel:failures:EnableInsightRulesResponse'] :: EnableInsightRulesResponse -> Maybe [PartialFailure]

-- | The response's http status code.
[$sel:httpStatus:EnableInsightRulesResponse'] :: EnableInsightRulesResponse -> Int

-- | Create a value of <a>EnableInsightRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:EnableInsightRulesResponse'</a>,
--   <a>enableInsightRulesResponse_failures</a> - An array listing the
--   rules that could not be enabled. You cannot disable or enable built-in
--   rules.
--   
--   <a>$sel:httpStatus:EnableInsightRulesResponse'</a>,
--   <a>enableInsightRulesResponse_httpStatus</a> - The response's http
--   status code.
newEnableInsightRulesResponse :: Int -> EnableInsightRulesResponse

-- | An array listing the rules that could not be enabled. You cannot
--   disable or enable built-in rules.
enableInsightRulesResponse_failures :: Lens' EnableInsightRulesResponse (Maybe [PartialFailure])

-- | The response's http status code.
enableInsightRulesResponse_httpStatus :: Lens' EnableInsightRulesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance GHC.Show.Show Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance GHC.Read.Read Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance GHC.Classes.Eq Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance GHC.Generics.Generic Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRulesResponse
instance GHC.Show.Show Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRulesResponse
instance GHC.Read.Read Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRulesResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRulesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.EnableInsightRules.EnableInsightRules


-- | Enables the actions for the specified alarms.
module Network.AWS.CloudWatch.EnableAlarmActions

-- | <i>See:</i> <a>newEnableAlarmActions</a> smart constructor.
data EnableAlarmActions
EnableAlarmActions' :: [Text] -> EnableAlarmActions

-- | The names of the alarms.
[$sel:alarmNames:EnableAlarmActions'] :: EnableAlarmActions -> [Text]

-- | Create a value of <a>EnableAlarmActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmNames:EnableAlarmActions'</a>,
--   <a>enableAlarmActions_alarmNames</a> - The names of the alarms.
newEnableAlarmActions :: EnableAlarmActions

-- | The names of the alarms.
enableAlarmActions_alarmNames :: Lens' EnableAlarmActions [Text]

-- | <i>See:</i> <a>newEnableAlarmActionsResponse</a> smart constructor.
data EnableAlarmActionsResponse
EnableAlarmActionsResponse' :: EnableAlarmActionsResponse

-- | Create a value of <a>EnableAlarmActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEnableAlarmActionsResponse :: EnableAlarmActionsResponse
instance GHC.Generics.Generic Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance GHC.Show.Show Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance GHC.Read.Read Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance GHC.Classes.Eq Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance GHC.Generics.Generic Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActionsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActionsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActionsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.EnableAlarmActions.EnableAlarmActions


-- | Disables the specified Contributor Insights rules. When rules are
--   disabled, they do not analyze log groups and do not incur costs.
module Network.AWS.CloudWatch.DisableInsightRules

-- | <i>See:</i> <a>newDisableInsightRules</a> smart constructor.
data DisableInsightRules
DisableInsightRules' :: [Text] -> DisableInsightRules

-- | An array of the rule names to disable. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
[$sel:ruleNames:DisableInsightRules'] :: DisableInsightRules -> [Text]

-- | Create a value of <a>DisableInsightRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleNames:DisableInsightRules'</a>,
--   <a>disableInsightRules_ruleNames</a> - An array of the rule names to
--   disable. If you need to find out the names of your rules, use
--   <a>DescribeInsightRules</a>.
newDisableInsightRules :: DisableInsightRules

-- | An array of the rule names to disable. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
disableInsightRules_ruleNames :: Lens' DisableInsightRules [Text]

-- | <i>See:</i> <a>newDisableInsightRulesResponse</a> smart constructor.
data DisableInsightRulesResponse
DisableInsightRulesResponse' :: Maybe [PartialFailure] -> Int -> DisableInsightRulesResponse

-- | An array listing the rules that could not be disabled. You cannot
--   disable built-in rules.
[$sel:failures:DisableInsightRulesResponse'] :: DisableInsightRulesResponse -> Maybe [PartialFailure]

-- | The response's http status code.
[$sel:httpStatus:DisableInsightRulesResponse'] :: DisableInsightRulesResponse -> Int

-- | Create a value of <a>DisableInsightRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:DisableInsightRulesResponse'</a>,
--   <a>disableInsightRulesResponse_failures</a> - An array listing the
--   rules that could not be disabled. You cannot disable built-in rules.
--   
--   <a>$sel:httpStatus:DisableInsightRulesResponse'</a>,
--   <a>disableInsightRulesResponse_httpStatus</a> - The response's http
--   status code.
newDisableInsightRulesResponse :: Int -> DisableInsightRulesResponse

-- | An array listing the rules that could not be disabled. You cannot
--   disable built-in rules.
disableInsightRulesResponse_failures :: Lens' DisableInsightRulesResponse (Maybe [PartialFailure])

-- | The response's http status code.
disableInsightRulesResponse_httpStatus :: Lens' DisableInsightRulesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance GHC.Show.Show Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance GHC.Read.Read Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance GHC.Classes.Eq Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance GHC.Generics.Generic Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRulesResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRulesResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRulesResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRulesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DisableInsightRules.DisableInsightRules


-- | Disables the actions for the specified alarms. When an alarm's actions
--   are disabled, the alarm actions do not execute when the alarm state
--   changes.
module Network.AWS.CloudWatch.DisableAlarmActions

-- | <i>See:</i> <a>newDisableAlarmActions</a> smart constructor.
data DisableAlarmActions
DisableAlarmActions' :: [Text] -> DisableAlarmActions

-- | The names of the alarms.
[$sel:alarmNames:DisableAlarmActions'] :: DisableAlarmActions -> [Text]

-- | Create a value of <a>DisableAlarmActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmNames:DisableAlarmActions'</a>,
--   <a>disableAlarmActions_alarmNames</a> - The names of the alarms.
newDisableAlarmActions :: DisableAlarmActions

-- | The names of the alarms.
disableAlarmActions_alarmNames :: Lens' DisableAlarmActions [Text]

-- | <i>See:</i> <a>newDisableAlarmActionsResponse</a> smart constructor.
data DisableAlarmActionsResponse
DisableAlarmActionsResponse' :: DisableAlarmActionsResponse

-- | Create a value of <a>DisableAlarmActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisableAlarmActionsResponse :: DisableAlarmActionsResponse
instance GHC.Generics.Generic Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance GHC.Show.Show Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance GHC.Read.Read Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance GHC.Classes.Eq Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance GHC.Generics.Generic Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActionsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActionsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActionsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DisableAlarmActions.DisableAlarmActions


-- | Returns a list of all the Contributor Insights rules in your account.
--   
--   For more information about Contributor Insights, see <a>Using
--   Contributor Insights to Analyze High-Cardinality Data</a>.
module Network.AWS.CloudWatch.DescribeInsightRules

-- | <i>See:</i> <a>newDescribeInsightRules</a> smart constructor.
data DescribeInsightRules
DescribeInsightRules' :: Maybe Text -> Maybe Natural -> DescribeInsightRules

-- | Include this value, if it was returned by the previous operation, to
--   get the next set of rules.
[$sel:nextToken:DescribeInsightRules'] :: DescribeInsightRules -> Maybe Text

-- | The maximum number of results to return in one operation. If you omit
--   this parameter, the default of 500 is used.
[$sel:maxResults:DescribeInsightRules'] :: DescribeInsightRules -> Maybe Natural

-- | Create a value of <a>DescribeInsightRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInsightRules'</a>,
--   <a>describeInsightRules_nextToken</a> - Include this value, if it was
--   returned by the previous operation, to get the next set of rules.
--   
--   <a>$sel:maxResults:DescribeInsightRules'</a>,
--   <a>describeInsightRules_maxResults</a> - The maximum number of results
--   to return in one operation. If you omit this parameter, the default of
--   500 is used.
newDescribeInsightRules :: DescribeInsightRules

-- | Include this value, if it was returned by the previous operation, to
--   get the next set of rules.
describeInsightRules_nextToken :: Lens' DescribeInsightRules (Maybe Text)

-- | The maximum number of results to return in one operation. If you omit
--   this parameter, the default of 500 is used.
describeInsightRules_maxResults :: Lens' DescribeInsightRules (Maybe Natural)

-- | <i>See:</i> <a>newDescribeInsightRulesResponse</a> smart constructor.
data DescribeInsightRulesResponse
DescribeInsightRulesResponse' :: Maybe Text -> Maybe [InsightRule] -> Int -> DescribeInsightRulesResponse

-- | If this parameter is present, it is a token that marks the start of
--   the next batch of returned results.
[$sel:nextToken:DescribeInsightRulesResponse'] :: DescribeInsightRulesResponse -> Maybe Text

-- | The rules returned by the operation.
[$sel:insightRules:DescribeInsightRulesResponse'] :: DescribeInsightRulesResponse -> Maybe [InsightRule]

-- | The response's http status code.
[$sel:httpStatus:DescribeInsightRulesResponse'] :: DescribeInsightRulesResponse -> Int

-- | Create a value of <a>DescribeInsightRulesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInsightRules'</a>,
--   <a>describeInsightRulesResponse_nextToken</a> - If this parameter is
--   present, it is a token that marks the start of the next batch of
--   returned results.
--   
--   <a>$sel:insightRules:DescribeInsightRulesResponse'</a>,
--   <a>describeInsightRulesResponse_insightRules</a> - The rules returned
--   by the operation.
--   
--   <a>$sel:httpStatus:DescribeInsightRulesResponse'</a>,
--   <a>describeInsightRulesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeInsightRulesResponse :: Int -> DescribeInsightRulesResponse

-- | If this parameter is present, it is a token that marks the start of
--   the next batch of returned results.
describeInsightRulesResponse_nextToken :: Lens' DescribeInsightRulesResponse (Maybe Text)

-- | The rules returned by the operation.
describeInsightRulesResponse_insightRules :: Lens' DescribeInsightRulesResponse (Maybe [InsightRule])

-- | The response's http status code.
describeInsightRulesResponse_httpStatus :: Lens' DescribeInsightRulesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRulesResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRulesResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRulesResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRulesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DescribeInsightRules.DescribeInsightRules


-- | Lists the anomaly detection models that you have created in your
--   account. You can list all models in your account or filter the results
--   to only the models that are related to a certain namespace, metric
--   name, or metric dimension.
module Network.AWS.CloudWatch.DescribeAnomalyDetectors

-- | <i>See:</i> <a>newDescribeAnomalyDetectors</a> smart constructor.
data DescribeAnomalyDetectors
DescribeAnomalyDetectors' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [Dimension] -> DescribeAnomalyDetectors

-- | Use the token returned by the previous operation to request the next
--   page of results.
[$sel:nextToken:DescribeAnomalyDetectors'] :: DescribeAnomalyDetectors -> Maybe Text

-- | The maximum number of results to return in one operation. The maximum
--   value that you can specify is 100.
--   
--   To retrieve the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
[$sel:maxResults:DescribeAnomalyDetectors'] :: DescribeAnomalyDetectors -> Maybe Natural

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified metric name. If there are multiple
--   metrics with this name in different namespaces that have anomaly
--   detection models, they're all returned.
[$sel:metricName:DescribeAnomalyDetectors'] :: DescribeAnomalyDetectors -> Maybe Text

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified namespace.
[$sel:namespace:DescribeAnomalyDetectors'] :: DescribeAnomalyDetectors -> Maybe Text

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified metric dimensions. If there are multiple
--   metrics that have these dimensions and have anomaly detection models
--   associated, they're all returned.
[$sel:dimensions:DescribeAnomalyDetectors'] :: DescribeAnomalyDetectors -> Maybe [Dimension]

-- | Create a value of <a>DescribeAnomalyDetectors</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_nextToken</a> - Use the token returned by
--   the previous operation to request the next page of results.
--   
--   <a>$sel:maxResults:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_maxResults</a> - The maximum number of
--   results to return in one operation. The maximum value that you can
--   specify is 100.
--   
--   To retrieve the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
--   
--   <a>$sel:metricName:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_metricName</a> - Limits the results to
--   only the anomaly detection models that are associated with the
--   specified metric name. If there are multiple metrics with this name in
--   different namespaces that have anomaly detection models, they're all
--   returned.
--   
--   <a>$sel:namespace:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_namespace</a> - Limits the results to only
--   the anomaly detection models that are associated with the specified
--   namespace.
--   
--   <a>$sel:dimensions:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_dimensions</a> - Limits the results to
--   only the anomaly detection models that are associated with the
--   specified metric dimensions. If there are multiple metrics that have
--   these dimensions and have anomaly detection models associated, they're
--   all returned.
newDescribeAnomalyDetectors :: DescribeAnomalyDetectors

-- | Use the token returned by the previous operation to request the next
--   page of results.
describeAnomalyDetectors_nextToken :: Lens' DescribeAnomalyDetectors (Maybe Text)

-- | The maximum number of results to return in one operation. The maximum
--   value that you can specify is 100.
--   
--   To retrieve the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
describeAnomalyDetectors_maxResults :: Lens' DescribeAnomalyDetectors (Maybe Natural)

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified metric name. If there are multiple
--   metrics with this name in different namespaces that have anomaly
--   detection models, they're all returned.
describeAnomalyDetectors_metricName :: Lens' DescribeAnomalyDetectors (Maybe Text)

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified namespace.
describeAnomalyDetectors_namespace :: Lens' DescribeAnomalyDetectors (Maybe Text)

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified metric dimensions. If there are multiple
--   metrics that have these dimensions and have anomaly detection models
--   associated, they're all returned.
describeAnomalyDetectors_dimensions :: Lens' DescribeAnomalyDetectors (Maybe [Dimension])

-- | <i>See:</i> <a>newDescribeAnomalyDetectorsResponse</a> smart
--   constructor.
data DescribeAnomalyDetectorsResponse
DescribeAnomalyDetectorsResponse' :: Maybe Text -> Maybe [AnomalyDetector] -> Int -> DescribeAnomalyDetectorsResponse

-- | A token that you can use in a subsequent operation to retrieve the
--   next set of results.
[$sel:nextToken:DescribeAnomalyDetectorsResponse'] :: DescribeAnomalyDetectorsResponse -> Maybe Text

-- | The list of anomaly detection models returned by the operation.
[$sel:anomalyDetectors:DescribeAnomalyDetectorsResponse'] :: DescribeAnomalyDetectorsResponse -> Maybe [AnomalyDetector]

-- | The response's http status code.
[$sel:httpStatus:DescribeAnomalyDetectorsResponse'] :: DescribeAnomalyDetectorsResponse -> Int

-- | Create a value of <a>DescribeAnomalyDetectorsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectorsResponse_nextToken</a> - A token that you
--   can use in a subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:anomalyDetectors:DescribeAnomalyDetectorsResponse'</a>,
--   <a>describeAnomalyDetectorsResponse_anomalyDetectors</a> - The list of
--   anomaly detection models returned by the operation.
--   
--   <a>$sel:httpStatus:DescribeAnomalyDetectorsResponse'</a>,
--   <a>describeAnomalyDetectorsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAnomalyDetectorsResponse :: Int -> DescribeAnomalyDetectorsResponse

-- | A token that you can use in a subsequent operation to retrieve the
--   next set of results.
describeAnomalyDetectorsResponse_nextToken :: Lens' DescribeAnomalyDetectorsResponse (Maybe Text)

-- | The list of anomaly detection models returned by the operation.
describeAnomalyDetectorsResponse_anomalyDetectors :: Lens' DescribeAnomalyDetectorsResponse (Maybe [AnomalyDetector])

-- | The response's http status code.
describeAnomalyDetectorsResponse_httpStatus :: Lens' DescribeAnomalyDetectorsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectorsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectorsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectorsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectorsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectorsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DescribeAnomalyDetectors.DescribeAnomalyDetectors


-- | Retrieves the alarms for the specified metric. To filter the results,
--   specify a statistic, period, or unit.
--   
--   This operation retrieves only standard alarms that are based on the
--   specified metric. It does not return alarms based on math expressions
--   that use the specified metric, or composite alarms that use the
--   specified metric.
module Network.AWS.CloudWatch.DescribeAlarmsForMetric

-- | <i>See:</i> <a>newDescribeAlarmsForMetric</a> smart constructor.
data DescribeAlarmsForMetric
DescribeAlarmsForMetric' :: Maybe Text -> Maybe StandardUnit -> Maybe Statistic -> Maybe [Dimension] -> Maybe Natural -> Text -> Text -> DescribeAlarmsForMetric

-- | The percentile statistic for the metric. Specify a value between p0.0
--   and p100.
[$sel:extendedStatistic:DescribeAlarmsForMetric'] :: DescribeAlarmsForMetric -> Maybe Text

-- | The unit for the metric.
[$sel:unit:DescribeAlarmsForMetric'] :: DescribeAlarmsForMetric -> Maybe StandardUnit

-- | The statistic for the metric, other than percentiles. For percentile
--   statistics, use <tt>ExtendedStatistics</tt>.
[$sel:statistic:DescribeAlarmsForMetric'] :: DescribeAlarmsForMetric -> Maybe Statistic

-- | The dimensions associated with the metric. If the metric has any
--   associated dimensions, you must specify them in order for the call to
--   succeed.
[$sel:dimensions:DescribeAlarmsForMetric'] :: DescribeAlarmsForMetric -> Maybe [Dimension]

-- | The period, in seconds, over which the statistic is applied.
[$sel:period:DescribeAlarmsForMetric'] :: DescribeAlarmsForMetric -> Maybe Natural

-- | The name of the metric.
[$sel:metricName:DescribeAlarmsForMetric'] :: DescribeAlarmsForMetric -> Text

-- | The namespace of the metric.
[$sel:namespace:DescribeAlarmsForMetric'] :: DescribeAlarmsForMetric -> Text

-- | Create a value of <a>DescribeAlarmsForMetric</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extendedStatistic:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_extendedStatistic</a> - The percentile
--   statistic for the metric. Specify a value between p0.0 and p100.
--   
--   <a>$sel:unit:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_unit</a> - The unit for the metric.
--   
--   <a>$sel:statistic:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_statistic</a> - The statistic for the
--   metric, other than percentiles. For percentile statistics, use
--   <tt>ExtendedStatistics</tt>.
--   
--   <a>$sel:dimensions:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_dimensions</a> - The dimensions associated
--   with the metric. If the metric has any associated dimensions, you must
--   specify them in order for the call to succeed.
--   
--   <a>$sel:period:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_period</a> - The period, in seconds, over
--   which the statistic is applied.
--   
--   <a>$sel:metricName:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_metricName</a> - The name of the metric.
--   
--   <a>$sel:namespace:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_namespace</a> - The namespace of the
--   metric.
newDescribeAlarmsForMetric :: Text -> Text -> DescribeAlarmsForMetric

-- | The percentile statistic for the metric. Specify a value between p0.0
--   and p100.
describeAlarmsForMetric_extendedStatistic :: Lens' DescribeAlarmsForMetric (Maybe Text)

-- | The unit for the metric.
describeAlarmsForMetric_unit :: Lens' DescribeAlarmsForMetric (Maybe StandardUnit)

-- | The statistic for the metric, other than percentiles. For percentile
--   statistics, use <tt>ExtendedStatistics</tt>.
describeAlarmsForMetric_statistic :: Lens' DescribeAlarmsForMetric (Maybe Statistic)

-- | The dimensions associated with the metric. If the metric has any
--   associated dimensions, you must specify them in order for the call to
--   succeed.
describeAlarmsForMetric_dimensions :: Lens' DescribeAlarmsForMetric (Maybe [Dimension])

-- | The period, in seconds, over which the statistic is applied.
describeAlarmsForMetric_period :: Lens' DescribeAlarmsForMetric (Maybe Natural)

-- | The name of the metric.
describeAlarmsForMetric_metricName :: Lens' DescribeAlarmsForMetric Text

-- | The namespace of the metric.
describeAlarmsForMetric_namespace :: Lens' DescribeAlarmsForMetric Text

-- | <i>See:</i> <a>newDescribeAlarmsForMetricResponse</a> smart
--   constructor.
data DescribeAlarmsForMetricResponse
DescribeAlarmsForMetricResponse' :: Maybe [MetricAlarm] -> Int -> DescribeAlarmsForMetricResponse

-- | The information for each alarm with the specified metric.
[$sel:metricAlarms:DescribeAlarmsForMetricResponse'] :: DescribeAlarmsForMetricResponse -> Maybe [MetricAlarm]

-- | The response's http status code.
[$sel:httpStatus:DescribeAlarmsForMetricResponse'] :: DescribeAlarmsForMetricResponse -> Int

-- | Create a value of <a>DescribeAlarmsForMetricResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricAlarms:DescribeAlarmsForMetricResponse'</a>,
--   <a>describeAlarmsForMetricResponse_metricAlarms</a> - The information
--   for each alarm with the specified metric.
--   
--   <a>$sel:httpStatus:DescribeAlarmsForMetricResponse'</a>,
--   <a>describeAlarmsForMetricResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAlarmsForMetricResponse :: Int -> DescribeAlarmsForMetricResponse

-- | The information for each alarm with the specified metric.
describeAlarmsForMetricResponse_metricAlarms :: Lens' DescribeAlarmsForMetricResponse (Maybe [MetricAlarm])

-- | The response's http status code.
describeAlarmsForMetricResponse_httpStatus :: Lens' DescribeAlarmsForMetricResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetricResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetricResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetricResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetricResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetricResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DescribeAlarmsForMetric.DescribeAlarmsForMetric


-- | Retrieves the specified alarms. You can filter the results by
--   specifying a prefix for the alarm name, the alarm state, or a prefix
--   for any action.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatch.DescribeAlarms

-- | <i>See:</i> <a>newDescribeAlarms</a> smart constructor.
data DescribeAlarms
DescribeAlarms' :: Maybe Text -> Maybe [AlarmType] -> Maybe [Text] -> Maybe Text -> Maybe StateValue -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeAlarms

-- | The token returned by a previous call to indicate that there is more
--   data available.
[$sel:nextToken:DescribeAlarms'] :: DescribeAlarms -> Maybe Text

-- | Use this parameter to specify whether you want the operation to return
--   metric alarms or composite alarms. If you omit this parameter, only
--   metric alarms are returned.
[$sel:alarmTypes:DescribeAlarms'] :: DescribeAlarms -> Maybe [AlarmType]

-- | The names of the alarms to retrieve information about.
[$sel:alarmNames:DescribeAlarms'] :: DescribeAlarms -> Maybe [Text]

-- | An alarm name prefix. If you specify this parameter, you receive
--   information about all alarms that have names that start with this
--   prefix.
--   
--   If this parameter is specified, you cannot specify
--   <tt>AlarmNames</tt>.
[$sel:alarmNamePrefix:DescribeAlarms'] :: DescribeAlarms -> Maybe Text

-- | Specify this parameter to receive information only about alarms that
--   are currently in the state that you specify.
[$sel:stateValue:DescribeAlarms'] :: DescribeAlarms -> Maybe StateValue

-- | Use this parameter to filter the results of the operation to only
--   those alarms that use a certain alarm action. For example, you could
--   specify the ARN of an SNS topic to find all alarms that send
--   notifications to that topic.
[$sel:actionPrefix:DescribeAlarms'] :: DescribeAlarms -> Maybe Text

-- | If you use this parameter and specify the name of a composite alarm,
--   the operation returns information about the "children" alarms of the
--   alarm you specify. These are the metric alarms and composite alarms
--   referenced in the <tt>AlarmRule</tt> field of the composite alarm that
--   you specify in <tt>ChildrenOfAlarmName</tt>. Information about the
--   composite alarm that you name in <tt>ChildrenOfAlarmName</tt> is not
--   returned.
--   
--   If you specify <tt>ChildrenOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the <tt>Alarm Name</tt>, <tt>ARN</tt>, <tt>StateValue</tt>
--   (OK/ALARM/INSUFFICIENT_DATA), and <tt>StateUpdatedTimestamp</tt>
--   information are returned by this operation when you use this
--   parameter. To get complete information about these alarms, perform
--   another <tt>DescribeAlarms</tt> operation and specify the parent alarm
--   names in the <tt>AlarmNames</tt> parameter.
[$sel:childrenOfAlarmName:DescribeAlarms'] :: DescribeAlarms -> Maybe Text

-- | If you use this parameter and specify the name of a metric or
--   composite alarm, the operation returns information about the "parent"
--   alarms of the alarm you specify. These are the composite alarms that
--   have <tt>AlarmRule</tt> parameters that reference the alarm named in
--   <tt>ParentsOfAlarmName</tt>. Information about the alarm that you
--   specify in <tt>ParentsOfAlarmName</tt> is not returned.
--   
--   If you specify <tt>ParentsOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the Alarm Name and ARN are returned by this operation when you
--   use this parameter. To get complete information about these alarms,
--   perform another <tt>DescribeAlarms</tt> operation and specify the
--   parent alarm names in the <tt>AlarmNames</tt> parameter.
[$sel:parentsOfAlarmName:DescribeAlarms'] :: DescribeAlarms -> Maybe Text

-- | The maximum number of alarm descriptions to retrieve.
[$sel:maxRecords:DescribeAlarms'] :: DescribeAlarms -> Maybe Natural

-- | Create a value of <a>DescribeAlarms</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAlarms'</a>, <a>describeAlarms_nextToken</a>
--   - The token returned by a previous call to indicate that there is more
--   data available.
--   
--   <a>$sel:alarmTypes:DescribeAlarms'</a>,
--   <a>describeAlarms_alarmTypes</a> - Use this parameter to specify
--   whether you want the operation to return metric alarms or composite
--   alarms. If you omit this parameter, only metric alarms are returned.
--   
--   <a>$sel:alarmNames:DescribeAlarms'</a>,
--   <a>describeAlarms_alarmNames</a> - The names of the alarms to retrieve
--   information about.
--   
--   <a>$sel:alarmNamePrefix:DescribeAlarms'</a>,
--   <a>describeAlarms_alarmNamePrefix</a> - An alarm name prefix. If you
--   specify this parameter, you receive information about all alarms that
--   have names that start with this prefix.
--   
--   If this parameter is specified, you cannot specify
--   <tt>AlarmNames</tt>.
--   
--   <a>$sel:stateValue:DescribeAlarms'</a>,
--   <a>describeAlarms_stateValue</a> - Specify this parameter to receive
--   information only about alarms that are currently in the state that you
--   specify.
--   
--   <a>$sel:actionPrefix:DescribeAlarms'</a>,
--   <a>describeAlarms_actionPrefix</a> - Use this parameter to filter the
--   results of the operation to only those alarms that use a certain alarm
--   action. For example, you could specify the ARN of an SNS topic to find
--   all alarms that send notifications to that topic.
--   
--   <a>$sel:childrenOfAlarmName:DescribeAlarms'</a>,
--   <a>describeAlarms_childrenOfAlarmName</a> - If you use this parameter
--   and specify the name of a composite alarm, the operation returns
--   information about the "children" alarms of the alarm you specify.
--   These are the metric alarms and composite alarms referenced in the
--   <tt>AlarmRule</tt> field of the composite alarm that you specify in
--   <tt>ChildrenOfAlarmName</tt>. Information about the composite alarm
--   that you name in <tt>ChildrenOfAlarmName</tt> is not returned.
--   
--   If you specify <tt>ChildrenOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the <tt>Alarm Name</tt>, <tt>ARN</tt>, <tt>StateValue</tt>
--   (OK/ALARM/INSUFFICIENT_DATA), and <tt>StateUpdatedTimestamp</tt>
--   information are returned by this operation when you use this
--   parameter. To get complete information about these alarms, perform
--   another <tt>DescribeAlarms</tt> operation and specify the parent alarm
--   names in the <tt>AlarmNames</tt> parameter.
--   
--   <a>$sel:parentsOfAlarmName:DescribeAlarms'</a>,
--   <a>describeAlarms_parentsOfAlarmName</a> - If you use this parameter
--   and specify the name of a metric or composite alarm, the operation
--   returns information about the "parent" alarms of the alarm you
--   specify. These are the composite alarms that have <tt>AlarmRule</tt>
--   parameters that reference the alarm named in
--   <tt>ParentsOfAlarmName</tt>. Information about the alarm that you
--   specify in <tt>ParentsOfAlarmName</tt> is not returned.
--   
--   If you specify <tt>ParentsOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the Alarm Name and ARN are returned by this operation when you
--   use this parameter. To get complete information about these alarms,
--   perform another <tt>DescribeAlarms</tt> operation and specify the
--   parent alarm names in the <tt>AlarmNames</tt> parameter.
--   
--   <a>$sel:maxRecords:DescribeAlarms'</a>,
--   <a>describeAlarms_maxRecords</a> - The maximum number of alarm
--   descriptions to retrieve.
newDescribeAlarms :: DescribeAlarms

-- | The token returned by a previous call to indicate that there is more
--   data available.
describeAlarms_nextToken :: Lens' DescribeAlarms (Maybe Text)

-- | Use this parameter to specify whether you want the operation to return
--   metric alarms or composite alarms. If you omit this parameter, only
--   metric alarms are returned.
describeAlarms_alarmTypes :: Lens' DescribeAlarms (Maybe [AlarmType])

-- | The names of the alarms to retrieve information about.
describeAlarms_alarmNames :: Lens' DescribeAlarms (Maybe [Text])

-- | An alarm name prefix. If you specify this parameter, you receive
--   information about all alarms that have names that start with this
--   prefix.
--   
--   If this parameter is specified, you cannot specify
--   <tt>AlarmNames</tt>.
describeAlarms_alarmNamePrefix :: Lens' DescribeAlarms (Maybe Text)

-- | Specify this parameter to receive information only about alarms that
--   are currently in the state that you specify.
describeAlarms_stateValue :: Lens' DescribeAlarms (Maybe StateValue)

-- | Use this parameter to filter the results of the operation to only
--   those alarms that use a certain alarm action. For example, you could
--   specify the ARN of an SNS topic to find all alarms that send
--   notifications to that topic.
describeAlarms_actionPrefix :: Lens' DescribeAlarms (Maybe Text)

-- | If you use this parameter and specify the name of a composite alarm,
--   the operation returns information about the "children" alarms of the
--   alarm you specify. These are the metric alarms and composite alarms
--   referenced in the <tt>AlarmRule</tt> field of the composite alarm that
--   you specify in <tt>ChildrenOfAlarmName</tt>. Information about the
--   composite alarm that you name in <tt>ChildrenOfAlarmName</tt> is not
--   returned.
--   
--   If you specify <tt>ChildrenOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the <tt>Alarm Name</tt>, <tt>ARN</tt>, <tt>StateValue</tt>
--   (OK/ALARM/INSUFFICIENT_DATA), and <tt>StateUpdatedTimestamp</tt>
--   information are returned by this operation when you use this
--   parameter. To get complete information about these alarms, perform
--   another <tt>DescribeAlarms</tt> operation and specify the parent alarm
--   names in the <tt>AlarmNames</tt> parameter.
describeAlarms_childrenOfAlarmName :: Lens' DescribeAlarms (Maybe Text)

-- | If you use this parameter and specify the name of a metric or
--   composite alarm, the operation returns information about the "parent"
--   alarms of the alarm you specify. These are the composite alarms that
--   have <tt>AlarmRule</tt> parameters that reference the alarm named in
--   <tt>ParentsOfAlarmName</tt>. Information about the alarm that you
--   specify in <tt>ParentsOfAlarmName</tt> is not returned.
--   
--   If you specify <tt>ParentsOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the Alarm Name and ARN are returned by this operation when you
--   use this parameter. To get complete information about these alarms,
--   perform another <tt>DescribeAlarms</tt> operation and specify the
--   parent alarm names in the <tt>AlarmNames</tt> parameter.
describeAlarms_parentsOfAlarmName :: Lens' DescribeAlarms (Maybe Text)

-- | The maximum number of alarm descriptions to retrieve.
describeAlarms_maxRecords :: Lens' DescribeAlarms (Maybe Natural)

-- | <i>See:</i> <a>newDescribeAlarmsResponse</a> smart constructor.
data DescribeAlarmsResponse
DescribeAlarmsResponse' :: Maybe [MetricAlarm] -> Maybe Text -> Maybe [CompositeAlarm] -> Int -> DescribeAlarmsResponse

-- | The information about any metric alarms returned by the operation.
[$sel:metricAlarms:DescribeAlarmsResponse'] :: DescribeAlarmsResponse -> Maybe [MetricAlarm]

-- | The token that marks the start of the next batch of returned results.
[$sel:nextToken:DescribeAlarmsResponse'] :: DescribeAlarmsResponse -> Maybe Text

-- | The information about any composite alarms returned by the operation.
[$sel:compositeAlarms:DescribeAlarmsResponse'] :: DescribeAlarmsResponse -> Maybe [CompositeAlarm]

-- | The response's http status code.
[$sel:httpStatus:DescribeAlarmsResponse'] :: DescribeAlarmsResponse -> Int

-- | Create a value of <a>DescribeAlarmsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricAlarms:DescribeAlarmsResponse'</a>,
--   <a>describeAlarmsResponse_metricAlarms</a> - The information about any
--   metric alarms returned by the operation.
--   
--   <a>$sel:nextToken:DescribeAlarms'</a>,
--   <a>describeAlarmsResponse_nextToken</a> - The token that marks the
--   start of the next batch of returned results.
--   
--   <a>$sel:compositeAlarms:DescribeAlarmsResponse'</a>,
--   <a>describeAlarmsResponse_compositeAlarms</a> - The information about
--   any composite alarms returned by the operation.
--   
--   <a>$sel:httpStatus:DescribeAlarmsResponse'</a>,
--   <a>describeAlarmsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAlarmsResponse :: Int -> DescribeAlarmsResponse

-- | The information about any metric alarms returned by the operation.
describeAlarmsResponse_metricAlarms :: Lens' DescribeAlarmsResponse (Maybe [MetricAlarm])

-- | The token that marks the start of the next batch of returned results.
describeAlarmsResponse_nextToken :: Lens' DescribeAlarmsResponse (Maybe Text)

-- | The information about any composite alarms returned by the operation.
describeAlarmsResponse_compositeAlarms :: Lens' DescribeAlarmsResponse (Maybe [CompositeAlarm])

-- | The response's http status code.
describeAlarmsResponse_httpStatus :: Lens' DescribeAlarmsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarmsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarmsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarmsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarmsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarmsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DescribeAlarms.DescribeAlarms


-- | Retrieves the history for the specified alarm. You can filter the
--   results by date range or item type. If an alarm name is not specified,
--   the histories for either all metric alarms or all composite alarms are
--   returned.
--   
--   CloudWatch retains the history of an alarm even if you delete the
--   alarm.
--   
--   This operation returns paginated results.
module Network.AWS.CloudWatch.DescribeAlarmHistory

-- | <i>See:</i> <a>newDescribeAlarmHistory</a> smart constructor.
data DescribeAlarmHistory
DescribeAlarmHistory' :: Maybe Text -> Maybe ISO8601 -> Maybe [AlarmType] -> Maybe HistoryItemType -> Maybe ScanBy -> Maybe Text -> Maybe ISO8601 -> Maybe Natural -> DescribeAlarmHistory

-- | The token returned by a previous call to indicate that there is more
--   data available.
[$sel:nextToken:DescribeAlarmHistory'] :: DescribeAlarmHistory -> Maybe Text

-- | The starting date to retrieve alarm history.
[$sel:startDate:DescribeAlarmHistory'] :: DescribeAlarmHistory -> Maybe ISO8601

-- | Use this parameter to specify whether you want the operation to return
--   metric alarms or composite alarms. If you omit this parameter, only
--   metric alarms are returned.
[$sel:alarmTypes:DescribeAlarmHistory'] :: DescribeAlarmHistory -> Maybe [AlarmType]

-- | The type of alarm histories to retrieve.
[$sel:historyItemType:DescribeAlarmHistory'] :: DescribeAlarmHistory -> Maybe HistoryItemType

-- | Specified whether to return the newest or oldest alarm history first.
--   Specify <tt>TimestampDescending</tt> to have the newest event history
--   returned first, and specify <tt>TimestampAscending</tt> to have the
--   oldest history returned first.
[$sel:scanBy:DescribeAlarmHistory'] :: DescribeAlarmHistory -> Maybe ScanBy

-- | The name of the alarm.
[$sel:alarmName:DescribeAlarmHistory'] :: DescribeAlarmHistory -> Maybe Text

-- | The ending date to retrieve alarm history.
[$sel:endDate:DescribeAlarmHistory'] :: DescribeAlarmHistory -> Maybe ISO8601

-- | The maximum number of alarm history records to retrieve.
[$sel:maxRecords:DescribeAlarmHistory'] :: DescribeAlarmHistory -> Maybe Natural

-- | Create a value of <a>DescribeAlarmHistory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_nextToken</a> - The token returned by a
--   previous call to indicate that there is more data available.
--   
--   <a>$sel:startDate:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_startDate</a> - The starting date to retrieve
--   alarm history.
--   
--   <a>$sel:alarmTypes:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_alarmTypes</a> - Use this parameter to specify
--   whether you want the operation to return metric alarms or composite
--   alarms. If you omit this parameter, only metric alarms are returned.
--   
--   <a>$sel:historyItemType:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_historyItemType</a> - The type of alarm
--   histories to retrieve.
--   
--   <a>$sel:scanBy:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_scanBy</a> - Specified whether to return the
--   newest or oldest alarm history first. Specify
--   <tt>TimestampDescending</tt> to have the newest event history returned
--   first, and specify <tt>TimestampAscending</tt> to have the oldest
--   history returned first.
--   
--   <a>$sel:alarmName:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_alarmName</a> - The name of the alarm.
--   
--   <a>$sel:endDate:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_endDate</a> - The ending date to retrieve
--   alarm history.
--   
--   <a>$sel:maxRecords:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_maxRecords</a> - The maximum number of alarm
--   history records to retrieve.
newDescribeAlarmHistory :: DescribeAlarmHistory

-- | The token returned by a previous call to indicate that there is more
--   data available.
describeAlarmHistory_nextToken :: Lens' DescribeAlarmHistory (Maybe Text)

-- | The starting date to retrieve alarm history.
describeAlarmHistory_startDate :: Lens' DescribeAlarmHistory (Maybe UTCTime)

-- | Use this parameter to specify whether you want the operation to return
--   metric alarms or composite alarms. If you omit this parameter, only
--   metric alarms are returned.
describeAlarmHistory_alarmTypes :: Lens' DescribeAlarmHistory (Maybe [AlarmType])

-- | The type of alarm histories to retrieve.
describeAlarmHistory_historyItemType :: Lens' DescribeAlarmHistory (Maybe HistoryItemType)

-- | Specified whether to return the newest or oldest alarm history first.
--   Specify <tt>TimestampDescending</tt> to have the newest event history
--   returned first, and specify <tt>TimestampAscending</tt> to have the
--   oldest history returned first.
describeAlarmHistory_scanBy :: Lens' DescribeAlarmHistory (Maybe ScanBy)

-- | The name of the alarm.
describeAlarmHistory_alarmName :: Lens' DescribeAlarmHistory (Maybe Text)

-- | The ending date to retrieve alarm history.
describeAlarmHistory_endDate :: Lens' DescribeAlarmHistory (Maybe UTCTime)

-- | The maximum number of alarm history records to retrieve.
describeAlarmHistory_maxRecords :: Lens' DescribeAlarmHistory (Maybe Natural)

-- | <i>See:</i> <a>newDescribeAlarmHistoryResponse</a> smart constructor.
data DescribeAlarmHistoryResponse
DescribeAlarmHistoryResponse' :: Maybe Text -> Maybe [AlarmHistoryItem] -> Int -> DescribeAlarmHistoryResponse

-- | The token that marks the start of the next batch of returned results.
[$sel:nextToken:DescribeAlarmHistoryResponse'] :: DescribeAlarmHistoryResponse -> Maybe Text

-- | The alarm histories, in JSON format.
[$sel:alarmHistoryItems:DescribeAlarmHistoryResponse'] :: DescribeAlarmHistoryResponse -> Maybe [AlarmHistoryItem]

-- | The response's http status code.
[$sel:httpStatus:DescribeAlarmHistoryResponse'] :: DescribeAlarmHistoryResponse -> Int

-- | Create a value of <a>DescribeAlarmHistoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistoryResponse_nextToken</a> - The token that marks
--   the start of the next batch of returned results.
--   
--   <a>$sel:alarmHistoryItems:DescribeAlarmHistoryResponse'</a>,
--   <a>describeAlarmHistoryResponse_alarmHistoryItems</a> - The alarm
--   histories, in JSON format.
--   
--   <a>$sel:httpStatus:DescribeAlarmHistoryResponse'</a>,
--   <a>describeAlarmHistoryResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAlarmHistoryResponse :: Int -> DescribeAlarmHistoryResponse

-- | The token that marks the start of the next batch of returned results.
describeAlarmHistoryResponse_nextToken :: Lens' DescribeAlarmHistoryResponse (Maybe Text)

-- | The alarm histories, in JSON format.
describeAlarmHistoryResponse_alarmHistoryItems :: Lens' DescribeAlarmHistoryResponse (Maybe [AlarmHistoryItem])

-- | The response's http status code.
describeAlarmHistoryResponse_httpStatus :: Lens' DescribeAlarmHistoryResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance GHC.Generics.Generic Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistoryResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistoryResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistoryResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistoryResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistoryResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DescribeAlarmHistory.DescribeAlarmHistory


-- | Permanently deletes the metric stream that you specify.
module Network.AWS.CloudWatch.DeleteMetricStream

-- | <i>See:</i> <a>newDeleteMetricStream</a> smart constructor.
data DeleteMetricStream
DeleteMetricStream' :: Text -> DeleteMetricStream

-- | The name of the metric stream to delete.
[$sel:name:DeleteMetricStream'] :: DeleteMetricStream -> Text

-- | Create a value of <a>DeleteMetricStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteMetricStream'</a>, <a>deleteMetricStream_name</a> -
--   The name of the metric stream to delete.
newDeleteMetricStream :: Text -> DeleteMetricStream

-- | The name of the metric stream to delete.
deleteMetricStream_name :: Lens' DeleteMetricStream Text

-- | <i>See:</i> <a>newDeleteMetricStreamResponse</a> smart constructor.
data DeleteMetricStreamResponse
DeleteMetricStreamResponse' :: Int -> DeleteMetricStreamResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteMetricStreamResponse'] :: DeleteMetricStreamResponse -> Int

-- | Create a value of <a>DeleteMetricStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMetricStreamResponse'</a>,
--   <a>deleteMetricStreamResponse_httpStatus</a> - The response's http
--   status code.
newDeleteMetricStreamResponse :: Int -> DeleteMetricStreamResponse

-- | The response's http status code.
deleteMetricStreamResponse_httpStatus :: Lens' DeleteMetricStreamResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStreamResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStreamResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStreamResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStreamResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStreamResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DeleteMetricStream.DeleteMetricStream


-- | Permanently deletes the specified Contributor Insights rules.
--   
--   If you create a rule, delete it, and then re-create it with the same
--   name, historical data from the first time the rule was created might
--   not be available.
module Network.AWS.CloudWatch.DeleteInsightRules

-- | <i>See:</i> <a>newDeleteInsightRules</a> smart constructor.
data DeleteInsightRules
DeleteInsightRules' :: [Text] -> DeleteInsightRules

-- | An array of the rule names to delete. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
[$sel:ruleNames:DeleteInsightRules'] :: DeleteInsightRules -> [Text]

-- | Create a value of <a>DeleteInsightRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleNames:DeleteInsightRules'</a>,
--   <a>deleteInsightRules_ruleNames</a> - An array of the rule names to
--   delete. If you need to find out the names of your rules, use
--   <a>DescribeInsightRules</a>.
newDeleteInsightRules :: DeleteInsightRules

-- | An array of the rule names to delete. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
deleteInsightRules_ruleNames :: Lens' DeleteInsightRules [Text]

-- | <i>See:</i> <a>newDeleteInsightRulesResponse</a> smart constructor.
data DeleteInsightRulesResponse
DeleteInsightRulesResponse' :: Maybe [PartialFailure] -> Int -> DeleteInsightRulesResponse

-- | An array listing the rules that could not be deleted. You cannot
--   delete built-in rules.
[$sel:failures:DeleteInsightRulesResponse'] :: DeleteInsightRulesResponse -> Maybe [PartialFailure]

-- | The response's http status code.
[$sel:httpStatus:DeleteInsightRulesResponse'] :: DeleteInsightRulesResponse -> Int

-- | Create a value of <a>DeleteInsightRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:DeleteInsightRulesResponse'</a>,
--   <a>deleteInsightRulesResponse_failures</a> - An array listing the
--   rules that could not be deleted. You cannot delete built-in rules.
--   
--   <a>$sel:httpStatus:DeleteInsightRulesResponse'</a>,
--   <a>deleteInsightRulesResponse_httpStatus</a> - The response's http
--   status code.
newDeleteInsightRulesResponse :: Int -> DeleteInsightRulesResponse

-- | An array listing the rules that could not be deleted. You cannot
--   delete built-in rules.
deleteInsightRulesResponse_failures :: Lens' DeleteInsightRulesResponse (Maybe [PartialFailure])

-- | The response's http status code.
deleteInsightRulesResponse_httpStatus :: Lens' DeleteInsightRulesResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRulesResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRulesResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRulesResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRulesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRulesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DeleteInsightRules.DeleteInsightRules


-- | Deletes all dashboards that you specify. You can specify up to 100
--   dashboards to delete. If there is an error during this call, no
--   dashboards are deleted.
module Network.AWS.CloudWatch.DeleteDashboards

-- | <i>See:</i> <a>newDeleteDashboards</a> smart constructor.
data DeleteDashboards
DeleteDashboards' :: [Text] -> DeleteDashboards

-- | The dashboards to be deleted. This parameter is required.
[$sel:dashboardNames:DeleteDashboards'] :: DeleteDashboards -> [Text]

-- | Create a value of <a>DeleteDashboards</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardNames:DeleteDashboards'</a>,
--   <a>deleteDashboards_dashboardNames</a> - The dashboards to be deleted.
--   This parameter is required.
newDeleteDashboards :: DeleteDashboards

-- | The dashboards to be deleted. This parameter is required.
deleteDashboards_dashboardNames :: Lens' DeleteDashboards [Text]

-- | <i>See:</i> <a>newDeleteDashboardsResponse</a> smart constructor.
data DeleteDashboardsResponse
DeleteDashboardsResponse' :: Int -> DeleteDashboardsResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteDashboardsResponse'] :: DeleteDashboardsResponse -> Int

-- | Create a value of <a>DeleteDashboardsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDashboardsResponse'</a>,
--   <a>deleteDashboardsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDashboardsResponse :: Int -> DeleteDashboardsResponse

-- | The response's http status code.
deleteDashboardsResponse_httpStatus :: Lens' DeleteDashboardsResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboardsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboardsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboardsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboardsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboardsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DeleteDashboards.DeleteDashboards


-- | Deletes the specified anomaly detection model from your account.
module Network.AWS.CloudWatch.DeleteAnomalyDetector

-- | <i>See:</i> <a>newDeleteAnomalyDetector</a> smart constructor.
data DeleteAnomalyDetector
DeleteAnomalyDetector' :: Maybe [Dimension] -> Text -> Text -> Text -> DeleteAnomalyDetector

-- | The metric dimensions associated with the anomaly detection model to
--   delete.
[$sel:dimensions:DeleteAnomalyDetector'] :: DeleteAnomalyDetector -> Maybe [Dimension]

-- | The namespace associated with the anomaly detection model to delete.
[$sel:namespace:DeleteAnomalyDetector'] :: DeleteAnomalyDetector -> Text

-- | The metric name associated with the anomaly detection model to delete.
[$sel:metricName:DeleteAnomalyDetector'] :: DeleteAnomalyDetector -> Text

-- | The statistic associated with the anomaly detection model to delete.
[$sel:stat:DeleteAnomalyDetector'] :: DeleteAnomalyDetector -> Text

-- | Create a value of <a>DeleteAnomalyDetector</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dimensions:DeleteAnomalyDetector'</a>,
--   <a>deleteAnomalyDetector_dimensions</a> - The metric dimensions
--   associated with the anomaly detection model to delete.
--   
--   <a>$sel:namespace:DeleteAnomalyDetector'</a>,
--   <a>deleteAnomalyDetector_namespace</a> - The namespace associated with
--   the anomaly detection model to delete.
--   
--   <a>$sel:metricName:DeleteAnomalyDetector'</a>,
--   <a>deleteAnomalyDetector_metricName</a> - The metric name associated
--   with the anomaly detection model to delete.
--   
--   <a>$sel:stat:DeleteAnomalyDetector'</a>,
--   <a>deleteAnomalyDetector_stat</a> - The statistic associated with the
--   anomaly detection model to delete.
newDeleteAnomalyDetector :: Text -> Text -> Text -> DeleteAnomalyDetector

-- | The metric dimensions associated with the anomaly detection model to
--   delete.
deleteAnomalyDetector_dimensions :: Lens' DeleteAnomalyDetector (Maybe [Dimension])

-- | The namespace associated with the anomaly detection model to delete.
deleteAnomalyDetector_namespace :: Lens' DeleteAnomalyDetector Text

-- | The metric name associated with the anomaly detection model to delete.
deleteAnomalyDetector_metricName :: Lens' DeleteAnomalyDetector Text

-- | The statistic associated with the anomaly detection model to delete.
deleteAnomalyDetector_stat :: Lens' DeleteAnomalyDetector Text

-- | <i>See:</i> <a>newDeleteAnomalyDetectorResponse</a> smart constructor.
data DeleteAnomalyDetectorResponse
DeleteAnomalyDetectorResponse' :: Int -> DeleteAnomalyDetectorResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteAnomalyDetectorResponse'] :: DeleteAnomalyDetectorResponse -> Int

-- | Create a value of <a>DeleteAnomalyDetectorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteAnomalyDetectorResponse'</a>,
--   <a>deleteAnomalyDetectorResponse_httpStatus</a> - The response's http
--   status code.
newDeleteAnomalyDetectorResponse :: Int -> DeleteAnomalyDetectorResponse

-- | The response's http status code.
deleteAnomalyDetectorResponse_httpStatus :: Lens' DeleteAnomalyDetectorResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetectorResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetectorResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetectorResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetectorResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetectorResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DeleteAnomalyDetector.DeleteAnomalyDetector


-- | Deletes the specified alarms. You can delete up to 100 alarms in one
--   operation. However, this total can include no more than one composite
--   alarm. For example, you could delete 99 metric alarms and one
--   composite alarms with one operation, but you can't delete two
--   composite alarms with one operation.
--   
--   In the event of an error, no alarms are deleted.
--   
--   It is possible to create a loop or cycle of composite alarms, where
--   composite alarm A depends on composite alarm B, and composite alarm B
--   also depends on composite alarm A. In this scenario, you can't delete
--   any composite alarm that is part of the cycle because there is always
--   still a composite alarm that depends on that alarm that you want to
--   delete.
--   
--   To get out of such a situation, you must break the cycle by changing
--   the rule of one of the composite alarms in the cycle to remove a
--   dependency that creates the cycle. The simplest change to make to
--   break a cycle is to change the <tt>AlarmRule</tt> of one of the alarms
--   to <tt>False</tt>.
--   
--   Additionally, the evaluation of composite alarms stops if CloudWatch
--   detects a cycle in the evaluation path.
module Network.AWS.CloudWatch.DeleteAlarms

-- | <i>See:</i> <a>newDeleteAlarms</a> smart constructor.
data DeleteAlarms
DeleteAlarms' :: [Text] -> DeleteAlarms

-- | The alarms to be deleted.
[$sel:alarmNames:DeleteAlarms'] :: DeleteAlarms -> [Text]

-- | Create a value of <a>DeleteAlarms</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmNames:DeleteAlarms'</a>, <a>deleteAlarms_alarmNames</a> -
--   The alarms to be deleted.
newDeleteAlarms :: DeleteAlarms

-- | The alarms to be deleted.
deleteAlarms_alarmNames :: Lens' DeleteAlarms [Text]

-- | <i>See:</i> <a>newDeleteAlarmsResponse</a> smart constructor.
data DeleteAlarmsResponse
DeleteAlarmsResponse' :: DeleteAlarmsResponse

-- | Create a value of <a>DeleteAlarmsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAlarmsResponse :: DeleteAlarmsResponse
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance GHC.Generics.Generic Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarmsResponse
instance GHC.Show.Show Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarmsResponse
instance GHC.Read.Read Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarmsResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarmsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarmsResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.DeleteAlarms.DeleteAlarms


-- | Removes one or more tags from the specified resource.
module Network.AWS.CloudWatch.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The ARN of the CloudWatch resource that you're removing tags from.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | The list of tag keys to remove from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The ARN of the CloudWatch resource
--   that you're removing tags from.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | The ARN of the CloudWatch resource that you're removing tags from.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The list of tag keys to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CloudWatch.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.CloudWatch.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.CloudWatch.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.CloudWatch.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.CloudWatch.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.CloudWatch.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.CloudWatch.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.CloudWatch.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CloudWatch.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CloudWatch.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CloudWatch.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CloudWatch.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CloudWatch.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CloudWatch.UntagResource.UntagResource


module Network.AWS.CloudWatch.Lens

-- | The unit for a given metric. If you omit <tt>Unit</tt>, all data that
--   was collected with any unit is returned, along with the corresponding
--   units that were specified when the data was reported to CloudWatch. If
--   you specify a unit, the operation returns only data that was collected
--   with that unit specified. If you specify a unit that does not match
--   the data collected, the results of the operation are null. CloudWatch
--   does not perform unit conversions.
getMetricStatistics_unit :: Lens' GetMetricStatistics (Maybe StandardUnit)

-- | The metric statistics, other than percentile. For percentile
--   statistics, use <tt>ExtendedStatistics</tt>. When calling
--   <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
getMetricStatistics_statistics :: Lens' GetMetricStatistics (Maybe (NonEmpty Statistic))

-- | The dimensions. If the metric contains multiple dimensions, you must
--   include a value for each dimension. CloudWatch treats each unique
--   combination of dimensions as a separate metric. If a specific
--   combination of dimensions was not published, you can't retrieve
--   statistics for it. You must specify the same dimensions that were used
--   when the metrics were created. For an example, see <a>Dimension
--   Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more
--   information about specifying dimensions, see <a>Publishing Metrics</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
getMetricStatistics_dimensions :: Lens' GetMetricStatistics (Maybe [Dimension])

-- | The percentile statistics. Specify values between p0.0 and p100. When
--   calling <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
--   Percentile statistics are not available for metrics when any of the
--   metric values are negative numbers.
getMetricStatistics_extendedStatistics :: Lens' GetMetricStatistics (Maybe (NonEmpty Text))

-- | The namespace of the metric, with or without spaces.
getMetricStatistics_namespace :: Lens' GetMetricStatistics Text

-- | The name of the metric, with or without spaces.
getMetricStatistics_metricName :: Lens' GetMetricStatistics Text

-- | The time stamp that determines the first data point to return. Start
--   times are evaluated relative to the time that CloudWatch receives the
--   request.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp. In a raw HTTP query, the time stamp must be in
--   ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
getMetricStatistics_startTime :: Lens' GetMetricStatistics UTCTime

-- | The time stamp that determines the last data point to return.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp. In a raw HTTP query, the time stamp must be
--   in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).
getMetricStatistics_endTime :: Lens' GetMetricStatistics UTCTime

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
getMetricStatistics_period :: Lens' GetMetricStatistics Natural

-- | The data points for the specified metric.
getMetricStatisticsResponse_datapoints :: Lens' GetMetricStatisticsResponse (Maybe [Datapoint])

-- | A label for the specified metric.
getMetricStatisticsResponse_label :: Lens' GetMetricStatisticsResponse (Maybe Text)

-- | The response's http status code.
getMetricStatisticsResponse_httpStatus :: Lens' GetMetricStatisticsResponse Int

-- | The names of the alarms.
enableAlarmActions_alarmNames :: Lens' EnableAlarmActions [Text]

-- | The format of the resulting image. Only PNG images are supported.
--   
--   The default is <tt>png</tt>. If you specify <tt>png</tt>, the API
--   returns an HTTP response with the content-type set to
--   <tt>text/xml</tt>. The image data is in a <tt>MetricWidgetImage</tt>
--   field. For example:
--   
--   <pre>
--   &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;
--   </pre>
--   
--   <pre>
--   &lt;GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...
--   </pre>
--   
--   <pre>
--   &lt;/MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;
--   </pre>
--   
--   <pre>
--   &lt;/ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResponse&gt;
--   </pre>
--   
--   The <tt>image/png</tt> setting is intended only for custom HTTP
--   requests. For most use cases, and all actions using an Amazon Web
--   Services SDK, you should use <tt>png</tt>. If you specify
--   <tt>image/png</tt>, the HTTP response has a content-type set to
--   <tt>image/png</tt>, and the body of the response is a PNG image.
getMetricWidgetImage_outputFormat :: Lens' GetMetricWidgetImage (Maybe Text)

-- | A JSON string that defines the bitmap graph to be retrieved. The
--   string includes the metrics to include in the graph, statistics,
--   annotations, title, axis limits, and so on. You can include only one
--   <tt>MetricWidget</tt> parameter in each <tt>GetMetricWidgetImage</tt>
--   call.
--   
--   For more information about the syntax of <tt>MetricWidget</tt> see
--   <a>GetMetricWidgetImage: Metric Widget Structure and Syntax</a>.
--   
--   If any metric on the graph could not load all the requested data
--   points, an orange triangle with an exclamation point appears next to
--   the graph legend.
getMetricWidgetImage_metricWidget :: Lens' GetMetricWidgetImage Text

-- | The image of the graph, in the output format specified. The output is
--   base64-encoded.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
getMetricWidgetImageResponse_metricWidgetImage :: Lens' GetMetricWidgetImageResponse (Maybe ByteString)

-- | The response's http status code.
getMetricWidgetImageResponse_httpStatus :: Lens' GetMetricWidgetImageResponse Int

-- | The state of the rule. Valid values are ENABLED and DISABLED.
putInsightRule_ruleState :: Lens' PutInsightRule (Maybe Text)

-- | A list of key-value pairs to associate with the Contributor Insights
--   rule. You can associate as many as 50 tags with a rule.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
--   
--   To be able to associate tags with a rule, you must have the
--   <tt>cloudwatch:TagResource</tt> permission in addition to the
--   <tt>cloudwatch:PutInsightRule</tt> permission.
--   
--   If you are using this operation to update an existing Contributor
--   Insights rule, any tags you specify in this parameter are ignored. To
--   change the tags of an existing rule, use <a>TagResource</a>.
putInsightRule_tags :: Lens' PutInsightRule (Maybe [Tag])

-- | A unique name for the rule.
putInsightRule_ruleName :: Lens' PutInsightRule Text

-- | The definition of the rule, as a JSON object. For details on the valid
--   syntax, see <a>Contributor Insights Rule Syntax</a>.
putInsightRule_ruleDefinition :: Lens' PutInsightRule Text

-- | The response's http status code.
putInsightRuleResponse_httpStatus :: Lens' PutInsightRuleResponse Int

-- | The name of the metric stream to delete.
deleteMetricStream_name :: Lens' DeleteMetricStream Text

-- | The response's http status code.
deleteMetricStreamResponse_httpStatus :: Lens' DeleteMetricStreamResponse Int

-- | The alarms to be deleted.
deleteAlarms_alarmNames :: Lens' DeleteAlarms [Text]

-- | The value against which the specified statistic is compared.
--   
--   This parameter is required for alarms based on static thresholds, but
--   should not be used for alarms based on anomaly detection models.
putMetricAlarm_threshold :: Lens' PutMetricAlarm (Maybe Double)

-- | The number of data points that must be breaching to trigger the alarm.
--   This is used only if you are setting an "M out of N" alarm. In that
--   case, this value is the M. For more information, see <a>Evaluating an
--   Alarm</a> in the <i>Amazon CloudWatch User Guide</i>.
putMetricAlarm_datapointsToAlarm :: Lens' PutMetricAlarm (Maybe Natural)

-- | Used only for alarms based on percentiles. If you specify
--   <tt>ignore</tt>, the alarm state does not change during periods with
--   too few data points to be statistically significant. If you specify
--   <tt>evaluate</tt> or omit this parameter, the alarm is always
--   evaluated and possibly changes state no matter how many data points
--   are available. For more information, see <a>Percentile-Based
--   CloudWatch Alarms and Low Data Samples</a>.
--   
--   Valid Values: <tt>evaluate | ignore</tt>
putMetricAlarm_evaluateLowSampleCountPercentile :: Lens' PutMetricAlarm (Maybe Text)

-- | The percentile statistic for the metric specified in
--   <tt>MetricName</tt>. Specify a value between p0.0 and p100. When you
--   call <tt>PutMetricAlarm</tt> and specify a <tt>MetricName</tt>, you
--   must specify either <tt>Statistic</tt> or <tt>ExtendedStatistic,</tt>
--   but not both.
putMetricAlarm_extendedStatistic :: Lens' PutMetricAlarm (Maybe Text)

-- | If this is an alarm based on an anomaly detection model, make this
--   value match the ID of the <tt>ANOMALY_DETECTION_BAND</tt> function.
--   
--   For an example of how to use this parameter, see the __Anomaly
--   Detection Model Alarm__ example on this page.
--   
--   If your alarm uses this parameter, it cannot have Auto Scaling
--   actions.
putMetricAlarm_thresholdMetricId :: Lens' PutMetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt> | <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt> |
--   <tt>arn:aws:ssm-incidents::account-id:response-plan:response-plan-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
putMetricAlarm_alarmActions :: Lens' PutMetricAlarm (Maybe [Text])

-- | The unit of measure for the statistic. For example, the units for the
--   Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the
--   number of bytes that an instance receives on all network interfaces.
--   You can also specify a unit when you create a custom metric. Units
--   help provide conceptual meaning to your data. Metric data points that
--   specify a unit of measure, such as Percent, are aggregated separately.
--   
--   If you don't specify <tt>Unit</tt>, CloudWatch retrieves all unit
--   types that have been published for the metric and attempts to evaluate
--   the alarm. Usually, metrics are published with only one unit, so the
--   alarm works as intended.
--   
--   However, if the metric is published with multiple types of units and
--   you don't specify a unit, the alarm's behavior is not defined and it
--   behaves predictably.
--   
--   We recommend omitting <tt>Unit</tt> so that you don't inadvertently
--   specify an incorrect unit that is not published for this metric. Doing
--   so causes the alarm to be stuck in the <tt>INSUFFICIENT DATA</tt>
--   state.
putMetricAlarm_unit :: Lens' PutMetricAlarm (Maybe StandardUnit)

-- | The name for the metric associated with the alarm. For each
--   <tt>PutMetricAlarm</tt> operation, you must specify either
--   <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   If you are creating an alarm based on a math expression, you cannot
--   specify this parameter, or any of the <tt>Dimensions</tt>,
--   <tt>Period</tt>, <tt>Namespace</tt>, <tt>Statistic</tt>, or
--   <tt>ExtendedStatistic</tt> parameters. Instead, you specify all this
--   information in the <tt>Metrics</tt> array.
putMetricAlarm_metricName :: Lens' PutMetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>&gt;arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
putMetricAlarm_insufficientDataActions :: Lens' PutMetricAlarm (Maybe [Text])

-- | Sets how this alarm is to handle missing data points. If
--   <tt>TreatMissingData</tt> is omitted, the default behavior of
--   <tt>missing</tt> is used. For more information, see <a>Configuring How
--   CloudWatch Alarms Treats Missing Data</a>.
--   
--   Valid Values: <tt>breaching | notBreaching | ignore | missing</tt>
putMetricAlarm_treatMissingData :: Lens' PutMetricAlarm (Maybe Text)

-- | An array of <tt>MetricDataQuery</tt> structures that enable you to
--   create an alarm based on the result of a metric math expression. For
--   each <tt>PutMetricAlarm</tt> operation, you must specify either
--   <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   Each item in the <tt>Metrics</tt> array either retrieves a metric or
--   performs a math expression.
--   
--   One item in the <tt>Metrics</tt> array is the expression that the
--   alarm watches. You designate this expression by setting
--   <tt>ReturnData</tt> to true for this object in the array. For more
--   information, see <a>MetricDataQuery</a>.
--   
--   If you use the <tt>Metrics</tt> parameter, you cannot include the
--   <tt>MetricName</tt>, <tt>Dimensions</tt>, <tt>Period</tt>,
--   <tt>Namespace</tt>, <tt>Statistic</tt>, or <tt>ExtendedStatistic</tt>
--   parameters of <tt>PutMetricAlarm</tt> in the same operation. Instead,
--   you retrieve the metrics you are using in your math expression as part
--   of the <tt>Metrics</tt> array.
putMetricAlarm_metrics :: Lens' PutMetricAlarm (Maybe [MetricDataQuery])

-- | A list of key-value pairs to associate with the alarm. You can
--   associate as many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   If you are using this operation to update an existing alarm, any tags
--   you specify in this parameter are ignored. To change the tags of an
--   existing alarm, use <a>TagResource</a> or <a>UntagResource</a>.
putMetricAlarm_tags :: Lens' PutMetricAlarm (Maybe [Tag])

-- | The actions to execute when this alarm transitions to an <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
putMetricAlarm_oKActions :: Lens' PutMetricAlarm (Maybe [Text])

-- | The statistic for the metric specified in <tt>MetricName</tt>, other
--   than percentile. For percentile statistics, use
--   <tt>ExtendedStatistic</tt>. When you call <tt>PutMetricAlarm</tt> and
--   specify a <tt>MetricName</tt>, you must specify either
--   <tt>Statistic</tt> or <tt>ExtendedStatistic,</tt> but not both.
putMetricAlarm_statistic :: Lens' PutMetricAlarm (Maybe Statistic)

-- | The namespace for the metric associated specified in
--   <tt>MetricName</tt>.
putMetricAlarm_namespace :: Lens' PutMetricAlarm (Maybe Text)

-- | The dimensions for the metric specified in <tt>MetricName</tt>.
putMetricAlarm_dimensions :: Lens' PutMetricAlarm (Maybe [Dimension])

-- | Indicates whether actions should be executed during any changes to the
--   alarm state. The default is <tt>TRUE</tt>.
putMetricAlarm_actionsEnabled :: Lens' PutMetricAlarm (Maybe Bool)

-- | The length, in seconds, used each time the metric specified in
--   <tt>MetricName</tt> is evaluated. Valid values are 10, 30, and any
--   multiple of 60.
--   
--   <tt>Period</tt> is required for alarms based on static thresholds. If
--   you are creating an alarm based on a metric math expression, you
--   specify the period for each metric within the objects in the
--   <tt>Metrics</tt> array.
--   
--   Be sure to specify 10 or 30 only for metrics that are stored by a
--   <tt>PutMetricData</tt> call with a <tt>StorageResolution</tt> of 1. If
--   you specify a period of 10 or 30 for a metric that does not have
--   sub-minute resolution, the alarm still attempts to gather data at the
--   period rate that you specify. In this case, it does not receive data
--   for the attempts that do not correspond to a one-minute data
--   resolution, and the alarm might often lapse into INSUFFICENT_DATA
--   status. Specifying 10 or 30 also sets this alarm as a high-resolution
--   alarm, which has a higher charge than other alarms. For more
--   information about pricing, see <a>Amazon CloudWatch Pricing</a>.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so <tt>Period</tt> multiplied by <tt>EvaluationPeriods</tt>
--   cannot be more than 86,400 seconds.
putMetricAlarm_period :: Lens' PutMetricAlarm (Maybe Natural)

-- | The description for the alarm.
putMetricAlarm_alarmDescription :: Lens' PutMetricAlarm (Maybe Text)

-- | The name for the alarm. This name must be unique within the Region.
putMetricAlarm_alarmName :: Lens' PutMetricAlarm Text

-- | The number of periods over which data is compared to the specified
--   threshold. If you are setting an alarm that requires that a number of
--   consecutive data points be breaching to trigger the alarm, this value
--   specifies that number. If you are setting an "M out of N" alarm, this
--   value is the N.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so this number multiplied by <tt>Period</tt> cannot be more than
--   86,400 seconds.
putMetricAlarm_evaluationPeriods :: Lens' PutMetricAlarm Natural

-- | The arithmetic operation to use when comparing the specified statistic
--   and threshold. The specified statistic value is used as the first
--   operand.
--   
--   The values <tt>LessThanLowerOrGreaterThanUpperThreshold</tt>,
--   <tt>LessThanLowerThreshold</tt>, and
--   <tt>GreaterThanUpperThreshold</tt> are used only for alarms based on
--   anomaly detection models.
putMetricAlarm_comparisonOperator :: Lens' PutMetricAlarm ComparisonOperator

-- | Include this value, if it was returned by the previous operation, to
--   get the next set of rules.
describeInsightRules_nextToken :: Lens' DescribeInsightRules (Maybe Text)

-- | The maximum number of results to return in one operation. If you omit
--   this parameter, the default of 500 is used.
describeInsightRules_maxResults :: Lens' DescribeInsightRules (Maybe Natural)

-- | If this parameter is present, it is a token that marks the start of
--   the next batch of returned results.
describeInsightRulesResponse_nextToken :: Lens' DescribeInsightRulesResponse (Maybe Text)

-- | The rules returned by the operation.
describeInsightRulesResponse_insightRules :: Lens' DescribeInsightRulesResponse (Maybe [InsightRule])

-- | The response's http status code.
describeInsightRulesResponse_httpStatus :: Lens' DescribeInsightRulesResponse Int

-- | The array of the names of metric streams to start streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will start streaming.
startMetricStreams_names :: Lens' StartMetricStreams [Text]

-- | The response's http status code.
startMetricStreamsResponse_httpStatus :: Lens' StartMetricStreamsResponse Int

-- | The array of the names of metric streams to stop streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will stop streaming.
stopMetricStreams_names :: Lens' StopMetricStreams [Text]

-- | The response's http status code.
stopMetricStreamsResponse_httpStatus :: Lens' StopMetricStreamsResponse Int

-- | The ARN of the CloudWatch resource that you're removing tags from.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
untagResource_resourceARN :: Lens' UntagResource Text

-- | The list of tag keys to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The ARN of the CloudWatch resource that you're adding tags to.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
tagResource_resourceARN :: Lens' TagResource Text

-- | The list of key-value pairs to associate with the alarm.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Determines what statistic to use to rank the contributors. Valid
--   values are SUM and MAXIMUM.
getInsightRuleReport_orderBy :: Lens' GetInsightRuleReport (Maybe Text)

-- | Specifies which metrics to use for aggregation of contributor values
--   for the report. You can specify one or more of the following metrics:
--   
--   <ul>
--   <li><tt>UniqueContributors</tt> -- the number of unique contributors
--   for each data point.</li>
--   <li><tt>MaxContributorValue</tt> -- the value of the top contributor
--   for each data point. The identity of the contributor might change for
--   each data point in the graph.If this rule aggregates by COUNT, the top
--   contributor for each data point is the contributor with the most
--   occurrences in that period. If the rule aggregates by SUM, the top
--   contributor is the contributor with the highest sum in the log field
--   specified by the rule's <tt>Value</tt>, during that period.</li>
--   <li><tt>SampleCount</tt> -- the number of data points matched by the
--   rule.</li>
--   <li><tt>Sum</tt> -- the sum of the values from all contributors during
--   the time period represented by that data point.</li>
--   <li><tt>Minimum</tt> -- the minimum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Maximum</tt> -- the maximum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Average</tt> -- the average value from all contributors during
--   the time period represented by that data point.</li>
--   </ul>
getInsightRuleReport_metrics :: Lens' GetInsightRuleReport (Maybe [Text])

-- | The maximum number of contributors to include in the report. The range
--   is 1 to 100. If you omit this, the default of 10 is used.
getInsightRuleReport_maxContributorCount :: Lens' GetInsightRuleReport (Maybe Int)

-- | The name of the rule that you want to see data from.
getInsightRuleReport_ruleName :: Lens' GetInsightRuleReport Text

-- | The start time of the data to use in the report. When used in a raw
--   HTTP Query API, it is formatted as <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
getInsightRuleReport_startTime :: Lens' GetInsightRuleReport UTCTime

-- | The end time of the data to use in the report. When used in a raw HTTP
--   Query API, it is formatted as <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
getInsightRuleReport_endTime :: Lens' GetInsightRuleReport UTCTime

-- | The period, in seconds, to use for the statistics in the
--   <tt>InsightRuleMetricDatapoint</tt> results.
getInsightRuleReport_period :: Lens' GetInsightRuleReport Natural

-- | An approximate count of the unique contributors found by this rule in
--   this time period.
getInsightRuleReportResponse_approximateUniqueCount :: Lens' GetInsightRuleReportResponse (Maybe Integer)

-- | A time series of metric data points that matches the time period in
--   the rule request.
getInsightRuleReportResponse_metricDatapoints :: Lens' GetInsightRuleReportResponse (Maybe [InsightRuleMetricDatapoint])

-- | An array of the unique contributors found by this rule in this time
--   period. If the rule contains multiple keys, each combination of values
--   for the keys counts as a unique contributor.
getInsightRuleReportResponse_contributors :: Lens' GetInsightRuleReportResponse (Maybe [InsightRuleContributor])

-- | The sum of the values from all individual contributors that match the
--   rule.
getInsightRuleReportResponse_aggregateValue :: Lens' GetInsightRuleReportResponse (Maybe Double)

-- | An array of the strings used as the keys for this rule. The keys are
--   the dimensions used to classify contributors. If the rule contains
--   more than one key, then each unique combination of values for the keys
--   is counted as a unique contributor.
getInsightRuleReportResponse_keyLabels :: Lens' GetInsightRuleReportResponse (Maybe [Text])

-- | Specifies whether this rule aggregates contributor data by COUNT or
--   SUM.
getInsightRuleReportResponse_aggregationStatistic :: Lens' GetInsightRuleReportResponse (Maybe Text)

-- | The response's http status code.
getInsightRuleReportResponse_httpStatus :: Lens' GetInsightRuleReportResponse Int

-- | Use the token returned by the previous operation to request the next
--   page of results.
describeAnomalyDetectors_nextToken :: Lens' DescribeAnomalyDetectors (Maybe Text)

-- | The maximum number of results to return in one operation. The maximum
--   value that you can specify is 100.
--   
--   To retrieve the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
describeAnomalyDetectors_maxResults :: Lens' DescribeAnomalyDetectors (Maybe Natural)

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified metric name. If there are multiple
--   metrics with this name in different namespaces that have anomaly
--   detection models, they're all returned.
describeAnomalyDetectors_metricName :: Lens' DescribeAnomalyDetectors (Maybe Text)

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified namespace.
describeAnomalyDetectors_namespace :: Lens' DescribeAnomalyDetectors (Maybe Text)

-- | Limits the results to only the anomaly detection models that are
--   associated with the specified metric dimensions. If there are multiple
--   metrics that have these dimensions and have anomaly detection models
--   associated, they're all returned.
describeAnomalyDetectors_dimensions :: Lens' DescribeAnomalyDetectors (Maybe [Dimension])

-- | A token that you can use in a subsequent operation to retrieve the
--   next set of results.
describeAnomalyDetectorsResponse_nextToken :: Lens' DescribeAnomalyDetectorsResponse (Maybe Text)

-- | The list of anomaly detection models returned by the operation.
describeAnomalyDetectorsResponse_anomalyDetectors :: Lens' DescribeAnomalyDetectorsResponse (Maybe [AnomalyDetector])

-- | The response's http status code.
describeAnomalyDetectorsResponse_httpStatus :: Lens' DescribeAnomalyDetectorsResponse Int

-- | The namespace for the metric data.
--   
--   To avoid conflicts with Amazon Web Services service namespaces, you
--   should not specify a namespace that begins with <tt>AWS/</tt>
putMetricData_namespace :: Lens' PutMetricData Text

-- | The data for the metric. The array can include no more than 20 metrics
--   per call.
putMetricData_metricData :: Lens' PutMetricData [MetricDatum]

-- | The token returned by a previous call to indicate that there is more
--   data available.
listMetrics_nextToken :: Lens' ListMetrics (Maybe Text)

-- | The name of the metric to filter against. Only the metrics with names
--   that match exactly will be returned.
listMetrics_metricName :: Lens' ListMetrics (Maybe Text)

-- | The metric namespace to filter against. Only the namespace that
--   matches exactly will be returned.
listMetrics_namespace :: Lens' ListMetrics (Maybe Text)

-- | The dimensions to filter against. Only the dimensions that match
--   exactly will be returned.
listMetrics_dimensions :: Lens' ListMetrics (Maybe [DimensionFilter])

-- | To filter the results to show only metrics that have had data points
--   published in the past three hours, specify this parameter with a value
--   of <tt>PT3H</tt>. This is the only valid value for this parameter.
--   
--   The results that are returned are an approximation of the value you
--   specify. There is a low probability that the returned results include
--   metrics with last published data as much as 40 minutes more than the
--   specified time interval.
listMetrics_recentlyActive :: Lens' ListMetrics (Maybe RecentlyActive)

-- | The token that marks the start of the next batch of returned results.
listMetricsResponse_nextToken :: Lens' ListMetricsResponse (Maybe Text)

-- | The metrics that match your request.
listMetricsResponse_metrics :: Lens' ListMetricsResponse (Maybe [Metric])

-- | The response's http status code.
listMetricsResponse_httpStatus :: Lens' ListMetricsResponse Int

-- | The name of the dashboard. If a dashboard with this name already
--   exists, this call modifies that dashboard, replacing its current
--   contents. Otherwise, a new dashboard is created. The maximum length is
--   255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This
--   parameter is required.
putDashboard_dashboardName :: Lens' PutDashboard Text

-- | The detailed information about the dashboard in JSON format, including
--   the widgets to include and their location on the dashboard. This
--   parameter is required.
--   
--   For more information about the syntax, see <a>Dashboard Body Structure
--   and Syntax</a>.
putDashboard_dashboardBody :: Lens' PutDashboard Text

-- | If the input for <tt>PutDashboard</tt> was correct and the dashboard
--   was successfully created or modified, this result is empty.
--   
--   If this result includes only warning messages, then the input was
--   valid enough for the dashboard to be created or modified, but some
--   elements of the dashboard might not render.
--   
--   If this result includes error messages, the input was not valid and
--   the operation failed.
putDashboardResponse_dashboardValidationMessages :: Lens' PutDashboardResponse (Maybe [DashboardValidationMessage])

-- | The response's http status code.
putDashboardResponse_httpStatus :: Lens' PutDashboardResponse Int

-- | An array of the rule names to delete. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
deleteInsightRules_ruleNames :: Lens' DeleteInsightRules [Text]

-- | An array listing the rules that could not be deleted. You cannot
--   delete built-in rules.
deleteInsightRulesResponse_failures :: Lens' DeleteInsightRulesResponse (Maybe [PartialFailure])

-- | The response's http status code.
deleteInsightRulesResponse_httpStatus :: Lens' DeleteInsightRulesResponse Int

-- | The name of the dashboard to be described.
getDashboard_dashboardName :: Lens' GetDashboard Text

-- | The detailed information about the dashboard, including what widgets
--   are included and their location on the dashboard. For more information
--   about the <tt>DashboardBody</tt> syntax, see <a>Dashboard Body
--   Structure and Syntax</a>.
getDashboardResponse_dashboardBody :: Lens' GetDashboardResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dashboard.
getDashboardResponse_dashboardArn :: Lens' GetDashboardResponse (Maybe Text)

-- | The name of the dashboard.
getDashboardResponse_dashboardName :: Lens' GetDashboardResponse (Maybe Text)

-- | The response's http status code.
getDashboardResponse_httpStatus :: Lens' GetDashboardResponse Int

-- | The percentile statistic for the metric. Specify a value between p0.0
--   and p100.
describeAlarmsForMetric_extendedStatistic :: Lens' DescribeAlarmsForMetric (Maybe Text)

-- | The unit for the metric.
describeAlarmsForMetric_unit :: Lens' DescribeAlarmsForMetric (Maybe StandardUnit)

-- | The statistic for the metric, other than percentiles. For percentile
--   statistics, use <tt>ExtendedStatistics</tt>.
describeAlarmsForMetric_statistic :: Lens' DescribeAlarmsForMetric (Maybe Statistic)

-- | The dimensions associated with the metric. If the metric has any
--   associated dimensions, you must specify them in order for the call to
--   succeed.
describeAlarmsForMetric_dimensions :: Lens' DescribeAlarmsForMetric (Maybe [Dimension])

-- | The period, in seconds, over which the statistic is applied.
describeAlarmsForMetric_period :: Lens' DescribeAlarmsForMetric (Maybe Natural)

-- | The name of the metric.
describeAlarmsForMetric_metricName :: Lens' DescribeAlarmsForMetric Text

-- | The namespace of the metric.
describeAlarmsForMetric_namespace :: Lens' DescribeAlarmsForMetric Text

-- | The information for each alarm with the specified metric.
describeAlarmsForMetricResponse_metricAlarms :: Lens' DescribeAlarmsForMetricResponse (Maybe [MetricAlarm])

-- | The response's http status code.
describeAlarmsForMetricResponse_httpStatus :: Lens' DescribeAlarmsForMetricResponse Int

-- | The names of the alarms.
disableAlarmActions_alarmNames :: Lens' DisableAlarmActions [Text]

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude when training
--   and updating the model. You can specify as many as 10 time ranges.
--   
--   The configuration can also include the time zone to use for the
--   metric.
putAnomalyDetector_configuration :: Lens' PutAnomalyDetector (Maybe AnomalyDetectorConfiguration)

-- | The metric dimensions to create the anomaly detection model for.
putAnomalyDetector_dimensions :: Lens' PutAnomalyDetector (Maybe [Dimension])

-- | The namespace of the metric to create the anomaly detection model for.
putAnomalyDetector_namespace :: Lens' PutAnomalyDetector Text

-- | The name of the metric to create the anomaly detection model for.
putAnomalyDetector_metricName :: Lens' PutAnomalyDetector Text

-- | The statistic to use for the metric and the anomaly detection model.
putAnomalyDetector_stat :: Lens' PutAnomalyDetector Text

-- | The response's http status code.
putAnomalyDetectorResponse_httpStatus :: Lens' PutAnomalyDetectorResponse Int

-- | An array of the rule names to disable. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
disableInsightRules_ruleNames :: Lens' DisableInsightRules [Text]

-- | An array listing the rules that could not be disabled. You cannot
--   disable built-in rules.
disableInsightRulesResponse_failures :: Lens' DisableInsightRulesResponse (Maybe [PartialFailure])

-- | The response's http status code.
disableInsightRulesResponse_httpStatus :: Lens' DisableInsightRulesResponse Int

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt>
putCompositeAlarm_alarmActions :: Lens' PutCompositeAlarm (Maybe [Text])

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
putCompositeAlarm_insufficientDataActions :: Lens' PutCompositeAlarm (Maybe [Text])

-- | A list of key-value pairs to associate with the composite alarm. You
--   can associate as many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only resources with certain tag values.
putCompositeAlarm_tags :: Lens' PutCompositeAlarm (Maybe [Tag])

-- | The actions to execute when this alarm transitions to an <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
putCompositeAlarm_oKActions :: Lens' PutCompositeAlarm (Maybe [Text])

-- | Indicates whether actions should be executed during any changes to the
--   alarm state of the composite alarm. The default is <tt>TRUE</tt>.
putCompositeAlarm_actionsEnabled :: Lens' PutCompositeAlarm (Maybe Bool)

-- | The description for the composite alarm.
putCompositeAlarm_alarmDescription :: Lens' PutCompositeAlarm (Maybe Text)

-- | The name for the composite alarm. This name must be unique within the
--   Region.
putCompositeAlarm_alarmName :: Lens' PutCompositeAlarm Text

-- | An expression that specifies which other alarms are to be evaluated to
--   determine this composite alarm's state. For each alarm that you
--   reference, you designate a function that specifies whether that alarm
--   needs to be in ALARM state, OK state, or INSUFFICIENT_DATA state. You
--   can use operators (AND, OR and NOT) to combine multiple functions in a
--   single expression. You can use parenthesis to logically group the
--   functions in your expression.
--   
--   You can use either alarm names or ARNs to reference the other alarms
--   that are to be evaluated.
--   
--   Functions can include the following:
--   
--   <ul>
--   <li><tt>ALARM("alarm-name or alarm-ARN")</tt> is TRUE if the named
--   alarm is in ALARM state.</li>
--   <li><tt>OK("alarm-name or alarm-ARN")</tt> is TRUE if the named alarm
--   is in OK state.</li>
--   <li><tt>INSUFFICIENT_DATA("alarm-name or alarm-ARN")</tt> is TRUE if
--   the named alarm is in INSUFFICIENT_DATA state.</li>
--   <li><tt>TRUE</tt> always evaluates to TRUE.</li>
--   <li><tt>FALSE</tt> always evaluates to FALSE.</li>
--   </ul>
--   
--   TRUE and FALSE are useful for testing a complex <tt>AlarmRule</tt>
--   structure, and for testing your alarm actions.
--   
--   Alarm names specified in <tt>AlarmRule</tt> can be surrounded with
--   double-quotes ("), but do not have to be.
--   
--   The following are some examples of <tt>AlarmRule</tt>:
--   
--   <ul>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND
--   ALARM(DiskReadOpsTooHigh)</tt> specifies that the composite alarm goes
--   into ALARM state only if both CPUUtilizationTooHigh and
--   DiskReadOpsTooHigh alarms are in ALARM state.</li>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND NOT
--   ALARM(DeploymentInProgress)</tt> specifies that the alarm goes to
--   ALARM state if CPUUtilizationTooHigh is in ALARM state and
--   DeploymentInProgress is not in ALARM state. This example reduces alarm
--   noise during a known deployment window.</li>
--   <li><tt>(ALARM(CPUUtilizationTooHigh) OR ALARM(DiskReadOpsTooHigh))
--   AND OK(NetworkOutTooHigh)</tt> goes into ALARM state if
--   CPUUtilizationTooHigh OR DiskReadOpsTooHigh is in ALARM state, and if
--   NetworkOutTooHigh is in OK state. This provides another example of
--   using a composite alarm to prevent noise. This rule ensures that you
--   are not notified with an alarm action on high CPU or disk usage if a
--   known network problem is also occurring.</li>
--   </ul>
--   
--   The <tt>AlarmRule</tt> can specify as many as 100 "children" alarms.
--   The <tt>AlarmRule</tt> expression can have as many as 500 elements.
--   Elements are child alarms, TRUE or FALSE statements, and parentheses.
putCompositeAlarm_alarmRule :: Lens' PutCompositeAlarm Text

-- | The token returned by a previous call to indicate that there is more
--   data available.
describeAlarmHistory_nextToken :: Lens' DescribeAlarmHistory (Maybe Text)

-- | The starting date to retrieve alarm history.
describeAlarmHistory_startDate :: Lens' DescribeAlarmHistory (Maybe UTCTime)

-- | Use this parameter to specify whether you want the operation to return
--   metric alarms or composite alarms. If you omit this parameter, only
--   metric alarms are returned.
describeAlarmHistory_alarmTypes :: Lens' DescribeAlarmHistory (Maybe [AlarmType])

-- | The type of alarm histories to retrieve.
describeAlarmHistory_historyItemType :: Lens' DescribeAlarmHistory (Maybe HistoryItemType)

-- | Specified whether to return the newest or oldest alarm history first.
--   Specify <tt>TimestampDescending</tt> to have the newest event history
--   returned first, and specify <tt>TimestampAscending</tt> to have the
--   oldest history returned first.
describeAlarmHistory_scanBy :: Lens' DescribeAlarmHistory (Maybe ScanBy)

-- | The name of the alarm.
describeAlarmHistory_alarmName :: Lens' DescribeAlarmHistory (Maybe Text)

-- | The ending date to retrieve alarm history.
describeAlarmHistory_endDate :: Lens' DescribeAlarmHistory (Maybe UTCTime)

-- | The maximum number of alarm history records to retrieve.
describeAlarmHistory_maxRecords :: Lens' DescribeAlarmHistory (Maybe Natural)

-- | The token that marks the start of the next batch of returned results.
describeAlarmHistoryResponse_nextToken :: Lens' DescribeAlarmHistoryResponse (Maybe Text)

-- | The alarm histories, in JSON format.
describeAlarmHistoryResponse_alarmHistoryItems :: Lens' DescribeAlarmHistoryResponse (Maybe [AlarmHistoryItem])

-- | The response's http status code.
describeAlarmHistoryResponse_httpStatus :: Lens' DescribeAlarmHistoryResponse Int

-- | If you specify this parameter, the stream sends only the metrics from
--   the metric namespaces that you specify here.
--   
--   You cannot include <tt>IncludeFilters</tt> and <tt>ExcludeFilters</tt>
--   in the same operation.
putMetricStream_includeFilters :: Lens' PutMetricStream (Maybe [MetricStreamFilter])

-- | A list of key-value pairs to associate with the metric stream. You can
--   associate as many as 50 tags with a metric stream.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   You can use this parameter only when you are creating a new metric
--   stream. If you are using this operation to update an existing metric
--   stream, any tags you specify in this parameter are ignored. To change
--   the tags of an existing metric stream, use <a>TagResource</a> or
--   <a>UntagResource</a>.
putMetricStream_tags :: Lens' PutMetricStream (Maybe [Tag])

-- | If you specify this parameter, the stream sends metrics from all
--   metric namespaces except for the namespaces that you specify here.
--   
--   You cannot include <tt>ExcludeFilters</tt> and <tt>IncludeFilters</tt>
--   in the same operation.
putMetricStream_excludeFilters :: Lens' PutMetricStream (Maybe [MetricStreamFilter])

-- | If you are creating a new metric stream, this is the name for the new
--   stream. The name must be different than the names of other metric
--   streams in this account and Region.
--   
--   If you are updating a metric stream, specify the name of that stream
--   here.
--   
--   Valid characters are A-Z, a-z, 0-9, "-" and "_".
putMetricStream_name :: Lens' PutMetricStream Text

-- | The ARN of the Amazon Kinesis Firehose delivery stream to use for this
--   metric stream. This Amazon Kinesis Firehose delivery stream must
--   already exist and must be in the same account as the metric stream.
putMetricStream_firehoseArn :: Lens' PutMetricStream Text

-- | The ARN of an IAM role that this metric stream will use to access
--   Amazon Kinesis Firehose resources. This IAM role must already exist
--   and must be in the same account as the metric stream. This IAM role
--   must include the following permissions:
--   
--   <ul>
--   <li>firehose:PutRecord</li>
--   <li>firehose:PutRecordBatch</li>
--   </ul>
putMetricStream_roleArn :: Lens' PutMetricStream Text

-- | The output format for the stream. Valid values are <tt>json</tt> and
--   <tt>opentelemetry0.7</tt>. For more information about metric stream
--   output formats, see <a>Metric streams output formats</a>.
putMetricStream_outputFormat :: Lens' PutMetricStream MetricStreamOutputFormat

-- | The ARN of the metric stream.
putMetricStreamResponse_arn :: Lens' PutMetricStreamResponse (Maybe Text)

-- | The response's http status code.
putMetricStreamResponse_httpStatus :: Lens' PutMetricStreamResponse Int

-- | Include this value, if it was returned by the previous call, to get
--   the next set of metric streams.
listMetricStreams_nextToken :: Lens' ListMetricStreams (Maybe Text)

-- | The maximum number of results to return in one operation.
listMetricStreams_maxResults :: Lens' ListMetricStreams (Maybe Natural)

-- | The token that marks the start of the next batch of returned results.
--   You can use this token in a subsequent operation to get the next batch
--   of results.
listMetricStreamsResponse_nextToken :: Lens' ListMetricStreamsResponse (Maybe Text)

-- | The array of metric stream information.
listMetricStreamsResponse_entries :: Lens' ListMetricStreamsResponse (Maybe [MetricStreamEntry])

-- | The response's http status code.
listMetricStreamsResponse_httpStatus :: Lens' ListMetricStreamsResponse Int

-- | The name of the metric stream to retrieve information about.
getMetricStream_name :: Lens' GetMetricStream Text

-- | If this array of metric namespaces is present, then these namespaces
--   are the only metric namespaces that are streamed by this metric
--   stream.
getMetricStreamResponse_includeFilters :: Lens' GetMetricStreamResponse (Maybe [MetricStreamFilter])

-- | The ARN of the Amazon Kinesis Firehose delivery stream that is used by
--   this metric stream.
getMetricStreamResponse_firehoseArn :: Lens' GetMetricStreamResponse (Maybe Text)

-- | The ARN of the IAM role that is used by this metric stream.
getMetricStreamResponse_roleArn :: Lens' GetMetricStreamResponse (Maybe Text)

-- | The ARN of the metric stream.
getMetricStreamResponse_arn :: Lens' GetMetricStreamResponse (Maybe Text)

-- | The date that the metric stream was created.
getMetricStreamResponse_creationDate :: Lens' GetMetricStreamResponse (Maybe UTCTime)

-- | The name of the metric stream.
getMetricStreamResponse_name :: Lens' GetMetricStreamResponse (Maybe Text)

-- | The date of the most recent update to the metric stream's
--   configuration.
getMetricStreamResponse_lastUpdateDate :: Lens' GetMetricStreamResponse (Maybe UTCTime)

-- | The state of the metric stream. The possible values are
--   <tt>running</tt> and <tt>stopped</tt>.
getMetricStreamResponse_state :: Lens' GetMetricStreamResponse (Maybe Text)

getMetricStreamResponse_outputFormat :: Lens' GetMetricStreamResponse (Maybe MetricStreamOutputFormat)

-- | If this array of metric namespaces is present, then these namespaces
--   are the only metric namespaces that are not streamed by this metric
--   stream. In this case, all other metric namespaces in the account are
--   streamed by this metric stream.
getMetricStreamResponse_excludeFilters :: Lens' GetMetricStreamResponse (Maybe [MetricStreamFilter])

-- | The response's http status code.
getMetricStreamResponse_httpStatus :: Lens' GetMetricStreamResponse Int

-- | The reason that this alarm is set to this specific state, in JSON
--   format.
--   
--   For SNS or EC2 alarm actions, this is just informational. But for EC2
--   Auto Scaling or application Auto Scaling alarm actions, the Auto
--   Scaling policy uses the information in this field to take the correct
--   action.
setAlarmState_stateReasonData :: Lens' SetAlarmState (Maybe Text)

-- | The name of the alarm.
setAlarmState_alarmName :: Lens' SetAlarmState Text

-- | The value of the state.
setAlarmState_stateValue :: Lens' SetAlarmState StateValue

-- | The reason that this alarm is set to this specific state, in text
--   format.
setAlarmState_stateReason :: Lens' SetAlarmState Text

-- | The dashboards to be deleted. This parameter is required.
deleteDashboards_dashboardNames :: Lens' DeleteDashboards [Text]

-- | The response's http status code.
deleteDashboardsResponse_httpStatus :: Lens' DeleteDashboardsResponse Int

-- | The token returned by a previous call to indicate that there is more
--   data available.
listDashboards_nextToken :: Lens' ListDashboards (Maybe Text)

-- | If you specify this parameter, only the dashboards with names starting
--   with the specified string are listed. The maximum length is 255, and
--   valid characters are A-Z, a-z, 0-9, ".", "-", and "_".
listDashboards_dashboardNamePrefix :: Lens' ListDashboards (Maybe Text)

-- | The token that marks the start of the next batch of returned results.
listDashboardsResponse_nextToken :: Lens' ListDashboardsResponse (Maybe Text)

-- | The list of matching dashboards.
listDashboardsResponse_dashboardEntries :: Lens' ListDashboardsResponse (Maybe [DashboardEntry])

-- | The response's http status code.
listDashboardsResponse_httpStatus :: Lens' ListDashboardsResponse Int

-- | The token returned by a previous call to indicate that there is more
--   data available.
describeAlarms_nextToken :: Lens' DescribeAlarms (Maybe Text)

-- | Use this parameter to specify whether you want the operation to return
--   metric alarms or composite alarms. If you omit this parameter, only
--   metric alarms are returned.
describeAlarms_alarmTypes :: Lens' DescribeAlarms (Maybe [AlarmType])

-- | The names of the alarms to retrieve information about.
describeAlarms_alarmNames :: Lens' DescribeAlarms (Maybe [Text])

-- | An alarm name prefix. If you specify this parameter, you receive
--   information about all alarms that have names that start with this
--   prefix.
--   
--   If this parameter is specified, you cannot specify
--   <tt>AlarmNames</tt>.
describeAlarms_alarmNamePrefix :: Lens' DescribeAlarms (Maybe Text)

-- | Specify this parameter to receive information only about alarms that
--   are currently in the state that you specify.
describeAlarms_stateValue :: Lens' DescribeAlarms (Maybe StateValue)

-- | Use this parameter to filter the results of the operation to only
--   those alarms that use a certain alarm action. For example, you could
--   specify the ARN of an SNS topic to find all alarms that send
--   notifications to that topic.
describeAlarms_actionPrefix :: Lens' DescribeAlarms (Maybe Text)

-- | If you use this parameter and specify the name of a composite alarm,
--   the operation returns information about the "children" alarms of the
--   alarm you specify. These are the metric alarms and composite alarms
--   referenced in the <tt>AlarmRule</tt> field of the composite alarm that
--   you specify in <tt>ChildrenOfAlarmName</tt>. Information about the
--   composite alarm that you name in <tt>ChildrenOfAlarmName</tt> is not
--   returned.
--   
--   If you specify <tt>ChildrenOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the <tt>Alarm Name</tt>, <tt>ARN</tt>, <tt>StateValue</tt>
--   (OK/ALARM/INSUFFICIENT_DATA), and <tt>StateUpdatedTimestamp</tt>
--   information are returned by this operation when you use this
--   parameter. To get complete information about these alarms, perform
--   another <tt>DescribeAlarms</tt> operation and specify the parent alarm
--   names in the <tt>AlarmNames</tt> parameter.
describeAlarms_childrenOfAlarmName :: Lens' DescribeAlarms (Maybe Text)

-- | If you use this parameter and specify the name of a metric or
--   composite alarm, the operation returns information about the "parent"
--   alarms of the alarm you specify. These are the composite alarms that
--   have <tt>AlarmRule</tt> parameters that reference the alarm named in
--   <tt>ParentsOfAlarmName</tt>. Information about the alarm that you
--   specify in <tt>ParentsOfAlarmName</tt> is not returned.
--   
--   If you specify <tt>ParentsOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the Alarm Name and ARN are returned by this operation when you
--   use this parameter. To get complete information about these alarms,
--   perform another <tt>DescribeAlarms</tt> operation and specify the
--   parent alarm names in the <tt>AlarmNames</tt> parameter.
describeAlarms_parentsOfAlarmName :: Lens' DescribeAlarms (Maybe Text)

-- | The maximum number of alarm descriptions to retrieve.
describeAlarms_maxRecords :: Lens' DescribeAlarms (Maybe Natural)

-- | The information about any metric alarms returned by the operation.
describeAlarmsResponse_metricAlarms :: Lens' DescribeAlarmsResponse (Maybe [MetricAlarm])

-- | The token that marks the start of the next batch of returned results.
describeAlarmsResponse_nextToken :: Lens' DescribeAlarmsResponse (Maybe Text)

-- | The information about any composite alarms returned by the operation.
describeAlarmsResponse_compositeAlarms :: Lens' DescribeAlarmsResponse (Maybe [CompositeAlarm])

-- | The response's http status code.
describeAlarmsResponse_httpStatus :: Lens' DescribeAlarmsResponse Int

-- | An array of the rule names to enable. If you need to find out the
--   names of your rules, use <a>DescribeInsightRules</a>.
enableInsightRules_ruleNames :: Lens' EnableInsightRules [Text]

-- | An array listing the rules that could not be enabled. You cannot
--   disable or enable built-in rules.
enableInsightRulesResponse_failures :: Lens' EnableInsightRulesResponse (Maybe [PartialFailure])

-- | The response's http status code.
enableInsightRulesResponse_httpStatus :: Lens' EnableInsightRulesResponse Int

-- | The ARN of the CloudWatch resource that you want to view tags for.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | The list of tag keys and values associated with the resource you
--   specified.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The metric dimensions associated with the anomaly detection model to
--   delete.
deleteAnomalyDetector_dimensions :: Lens' DeleteAnomalyDetector (Maybe [Dimension])

-- | The namespace associated with the anomaly detection model to delete.
deleteAnomalyDetector_namespace :: Lens' DeleteAnomalyDetector Text

-- | The metric name associated with the anomaly detection model to delete.
deleteAnomalyDetector_metricName :: Lens' DeleteAnomalyDetector Text

-- | The statistic associated with the anomaly detection model to delete.
deleteAnomalyDetector_stat :: Lens' DeleteAnomalyDetector Text

-- | The response's http status code.
deleteAnomalyDetectorResponse_httpStatus :: Lens' DeleteAnomalyDetectorResponse Int

-- | Include this value, if it was returned by the previous
--   <tt>GetMetricData</tt> operation, to get the next set of data points.
getMetricData_nextToken :: Lens' GetMetricData (Maybe Text)

-- | The order in which data points should be returned.
--   <tt>TimestampDescending</tt> returns the newest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
--   <tt>TimestampAscending</tt> returns the oldest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
getMetricData_scanBy :: Lens' GetMetricData (Maybe ScanBy)

-- | This structure includes the <tt>Timezone</tt> parameter, which you can
--   use to specify your time zone so that the labels of returned data
--   display the correct time for your time zone.
getMetricData_labelOptions :: Lens' GetMetricData (Maybe LabelOptions)

-- | The maximum number of data points the request should return before
--   paginating. If you omit this, the default of 100,800 is used.
getMetricData_maxDatapoints :: Lens' GetMetricData (Maybe Int)

-- | The metric queries to be returned. A single <tt>GetMetricData</tt>
--   call can include as many as 500 <tt>MetricDataQuery</tt> structures.
--   Each of these structures can specify either a metric to retrieve, or a
--   math expression to perform on retrieved data.
getMetricData_metricDataQueries :: Lens' GetMetricData [MetricDataQuery]

-- | The time stamp indicating the earliest data to be returned.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp.
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>StartTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>StartTime</tt>.
getMetricData_startTime :: Lens' GetMetricData UTCTime

-- | The time stamp indicating the latest data to be returned.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>EndTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>EndTime</tt>.
getMetricData_endTime :: Lens' GetMetricData UTCTime

-- | A token that marks the next batch of returned results.
getMetricDataResponse_nextToken :: Lens' GetMetricDataResponse (Maybe Text)

-- | The metrics that are returned, including the metric name, namespace,
--   and dimensions.
getMetricDataResponse_metricDataResults :: Lens' GetMetricDataResponse (Maybe [MetricDataResult])

-- | Contains a message about this <tt>GetMetricData</tt> operation, if the
--   operation results in such a message. An example of a message that
--   might be returned is <tt>Maximum number of allowed metrics
--   exceeded</tt>. If there is a message, as much of the operation as
--   possible is still executed.
--   
--   A message appears here only if it is related to the global
--   <tt>GetMetricData</tt> operation. Any message about a specific metric
--   returned by the operation appears in the <tt>MetricDataResult</tt>
--   object returned for that metric.
getMetricDataResponse_messages :: Lens' GetMetricDataResponse (Maybe [MessageData])

-- | The response's http status code.
getMetricDataResponse_httpStatus :: Lens' GetMetricDataResponse Int

-- | A summary of the alarm history, in text format.
alarmHistoryItem_historySummary :: Lens' AlarmHistoryItem (Maybe Text)

-- | The type of alarm history item.
alarmHistoryItem_historyItemType :: Lens' AlarmHistoryItem (Maybe HistoryItemType)

-- | The descriptive name for the alarm.
alarmHistoryItem_alarmName :: Lens' AlarmHistoryItem (Maybe Text)

-- | The time stamp for the alarm history item.
alarmHistoryItem_timestamp :: Lens' AlarmHistoryItem (Maybe UTCTime)

-- | The type of alarm, either metric alarm or composite alarm.
alarmHistoryItem_alarmType :: Lens' AlarmHistoryItem (Maybe AlarmType)

-- | Data about the alarm, in JSON format.
alarmHistoryItem_historyData :: Lens' AlarmHistoryItem (Maybe Text)

-- | The name of the metric associated with the anomaly detection model.
anomalyDetector_metricName :: Lens' AnomalyDetector (Maybe Text)

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude from use for
--   training the model, and the time zone to use for the metric.
anomalyDetector_configuration :: Lens' AnomalyDetector (Maybe AnomalyDetectorConfiguration)

-- | The current status of the anomaly detector's training. The possible
--   values are <tt>TRAINED | PENDING_TRAINING |
--   TRAINED_INSUFFICIENT_DATA</tt>
anomalyDetector_stateValue :: Lens' AnomalyDetector (Maybe AnomalyDetectorStateValue)

-- | The namespace of the metric associated with the anomaly detection
--   model.
anomalyDetector_namespace :: Lens' AnomalyDetector (Maybe Text)

-- | The metric dimensions associated with the anomaly detection model.
anomalyDetector_dimensions :: Lens' AnomalyDetector (Maybe [Dimension])

-- | The statistic associated with the anomaly detection model.
anomalyDetector_stat :: Lens' AnomalyDetector (Maybe Text)

-- | The time zone to use for the metric. This is useful to enable the
--   model to automatically account for daylight savings time changes if
--   the metric is sensitive to such time changes.
--   
--   To specify a time zone, use the name of the time zone as specified in
--   the standard tz database. For more information, see <a>tz
--   database</a>.
anomalyDetectorConfiguration_metricTimezone :: Lens' AnomalyDetectorConfiguration (Maybe Text)

-- | An array of time ranges to exclude from use when the anomaly detection
--   model is trained. Use this to make sure that events that could cause
--   unusual values for the metric, such as deployments, aren't used when
--   CloudWatch creates the model.
anomalyDetectorConfiguration_excludedTimeRanges :: Lens' AnomalyDetectorConfiguration (Maybe [Range])

-- | The actions to execute when this alarm transitions to the ALARM state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
compositeAlarm_alarmActions :: Lens' CompositeAlarm (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the alarm.
compositeAlarm_alarmArn :: Lens' CompositeAlarm (Maybe Text)

-- | An explanation for the alarm state, in text format.
compositeAlarm_stateReason :: Lens' CompositeAlarm (Maybe Text)

-- | An explanation for the alarm state, in JSON format.
compositeAlarm_stateReasonData :: Lens' CompositeAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   INSUFFICIENT_DATA state from any other state. Each action is specified
--   as an Amazon Resource Name (ARN).
compositeAlarm_insufficientDataActions :: Lens' CompositeAlarm (Maybe [Text])

-- | The rule that this alarm uses to evaluate its alarm state.
compositeAlarm_alarmRule :: Lens' CompositeAlarm (Maybe Text)

-- | The name of the alarm.
compositeAlarm_alarmName :: Lens' CompositeAlarm (Maybe Text)

-- | The state value for the alarm.
compositeAlarm_stateValue :: Lens' CompositeAlarm (Maybe StateValue)

-- | The time stamp of the last update to the alarm state.
compositeAlarm_stateUpdatedTimestamp :: Lens' CompositeAlarm (Maybe UTCTime)

-- | The actions to execute when this alarm transitions to the OK state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
compositeAlarm_oKActions :: Lens' CompositeAlarm (Maybe [Text])

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
compositeAlarm_actionsEnabled :: Lens' CompositeAlarm (Maybe Bool)

-- | The time stamp of the last update to the alarm configuration.
compositeAlarm_alarmConfigurationUpdatedTimestamp :: Lens' CompositeAlarm (Maybe UTCTime)

-- | The description of the alarm.
compositeAlarm_alarmDescription :: Lens' CompositeAlarm (Maybe Text)

-- | The Amazon Resource Name (ARN) of the dashboard.
dashboardEntry_dashboardArn :: Lens' DashboardEntry (Maybe Text)

-- | The name of the dashboard.
dashboardEntry_dashboardName :: Lens' DashboardEntry (Maybe Text)

-- | The time stamp of when the dashboard was last modified, either by an
--   API call or through the console. This number is expressed as the
--   number of milliseconds since Jan 1, 1970 00:00:00 UTC.
dashboardEntry_lastModified :: Lens' DashboardEntry (Maybe UTCTime)

-- | The size of the dashboard, in bytes.
dashboardEntry_size :: Lens' DashboardEntry (Maybe Integer)

-- | A message describing the error or warning.
dashboardValidationMessage_message :: Lens' DashboardValidationMessage (Maybe Text)

-- | The data path related to the message.
dashboardValidationMessage_dataPath :: Lens' DashboardValidationMessage (Maybe Text)

-- | The standard unit for the data point.
datapoint_unit :: Lens' Datapoint (Maybe StandardUnit)

-- | The minimum metric value for the data point.
datapoint_minimum :: Lens' Datapoint (Maybe Double)

-- | The sum of the metric values for the data point.
datapoint_sum :: Lens' Datapoint (Maybe Double)

-- | The number of metric values that contributed to the aggregate value of
--   this data point.
datapoint_sampleCount :: Lens' Datapoint (Maybe Double)

-- | The time stamp used for the data point.
datapoint_timestamp :: Lens' Datapoint (Maybe UTCTime)

-- | The average of the metric values that correspond to the data point.
datapoint_average :: Lens' Datapoint (Maybe Double)

-- | The maximum metric value for the data point.
datapoint_maximum :: Lens' Datapoint (Maybe Double)

-- | The percentile statistic for the data point.
datapoint_extendedStatistics :: Lens' Datapoint (Maybe (HashMap Text Double))

-- | The name of the dimension. Dimension names must contain only ASCII
--   characters and must include at least one non-whitespace character.
dimension_name :: Lens' Dimension Text

-- | The value of the dimension. Dimension values must contain only ASCII
--   characters and must include at least one non-whitespace character.
dimension_value :: Lens' Dimension Text

-- | The value of the dimension to be matched.
dimensionFilter_value :: Lens' DimensionFilter (Maybe Text)

-- | The dimension name to be matched.
dimensionFilter_name :: Lens' DimensionFilter Text

-- | The name of the rule.
insightRule_name :: Lens' InsightRule Text

-- | Indicates whether the rule is enabled or disabled.
insightRule_state :: Lens' InsightRule Text

-- | For rules that you create, this is always <tt>{"Name":
--   "CloudWatchLogRule", "Version": 1}</tt>. For built-in rules, this is
--   <tt>{"Name": "ServiceLogRule", "Version": 1}</tt>
insightRule_schema :: Lens' InsightRule Text

-- | The definition of the rule, as a JSON object. The definition contains
--   the keywords used to define contributors, the value to aggregate on if
--   this rule returns a sum instead of a count, and the filters. For
--   details on the valid syntax, see <a>Contributor Insights Rule
--   Syntax</a>.
insightRule_definition :: Lens' InsightRule Text

-- | One of the log entry field keywords that is used to define
--   contributors for this rule.
insightRuleContributor_keys :: Lens' InsightRuleContributor [Text]

-- | An approximation of the aggregate value that comes from this
--   contributor.
insightRuleContributor_approximateAggregateValue :: Lens' InsightRuleContributor Double

-- | An array of the data points where this contributor is present. Only
--   the data points when this contributor appeared are included in the
--   array.
insightRuleContributor_datapoints :: Lens' InsightRuleContributor [InsightRuleContributorDatapoint]

-- | The timestamp of the data point.
insightRuleContributorDatapoint_timestamp :: Lens' InsightRuleContributorDatapoint UTCTime

-- | The approximate value that this contributor added during this
--   timestamp.
insightRuleContributorDatapoint_approximateValue :: Lens' InsightRuleContributorDatapoint Double

-- | The minimum value from a single contributor during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_minimum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The sum of the values from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_sum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The number of occurrences that matched the rule during this data
--   point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_sampleCount :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The maximum value provided by one contributor during this timestamp.
--   Each timestamp is evaluated separately, so the identity of the max
--   contributor could be different for each timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_maxContributorValue :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The average value from all contributors during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_average :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The number of unique contributors who published data during this
--   timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_uniqueContributors :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The maximum value from a single occurence from a single contributor
--   during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
insightRuleMetricDatapoint_maximum :: Lens' InsightRuleMetricDatapoint (Maybe Double)

-- | The timestamp of the data point.
insightRuleMetricDatapoint_timestamp :: Lens' InsightRuleMetricDatapoint UTCTime

-- | The time zone to use for metric data return in this operation. The
--   format is <tt>+</tt> or <tt>-</tt> followed by four digits. The first
--   two digits indicate the number of hours ahead or behind of UTC, and
--   the final two digits are the number of minutes. For example, +0130
--   indicates a time zone that is 1 hour and 30 minutes ahead of UTC. The
--   default is +0000.
labelOptions_timezone :: Lens' LabelOptions (Maybe Text)

-- | The error code or status code associated with the message.
messageData_code :: Lens' MessageData (Maybe Text)

-- | The message text.
messageData_value :: Lens' MessageData (Maybe Text)

-- | The name of the metric. This is a required field.
metric_metricName :: Lens' Metric (Maybe Text)

-- | The namespace of the metric.
metric_namespace :: Lens' Metric (Maybe Text)

-- | The dimensions for the metric.
metric_dimensions :: Lens' Metric (Maybe [Dimension])

-- | The value to compare with the specified statistic.
metricAlarm_threshold :: Lens' MetricAlarm (Maybe Double)

-- | The number of data points that must be breaching to trigger the alarm.
metricAlarm_datapointsToAlarm :: Lens' MetricAlarm (Maybe Natural)

-- | Used only for alarms based on percentiles. If <tt>ignore</tt>, the
--   alarm state does not change during periods with too few data points to
--   be statistically significant. If <tt>evaluate</tt> or this parameter
--   is not used, the alarm is always evaluated and possibly changes state
--   no matter how many data points are available.
metricAlarm_evaluateLowSampleCountPercentile :: Lens' MetricAlarm (Maybe Text)

-- | The arithmetic operation to use when comparing the specified statistic
--   and threshold. The specified statistic value is used as the first
--   operand.
metricAlarm_comparisonOperator :: Lens' MetricAlarm (Maybe ComparisonOperator)

-- | The percentile statistic for the metric associated with the alarm.
--   Specify a value between p0.0 and p100.
metricAlarm_extendedStatistic :: Lens' MetricAlarm (Maybe Text)

-- | In an alarm based on an anomaly detection model, this is the ID of the
--   <tt>ANOMALY_DETECTION_BAND</tt> function used as the threshold for the
--   alarm.
metricAlarm_thresholdMetricId :: Lens' MetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
metricAlarm_alarmActions :: Lens' MetricAlarm (Maybe [Text])

-- | The unit of the metric associated with the alarm.
metricAlarm_unit :: Lens' MetricAlarm (Maybe StandardUnit)

-- | The Amazon Resource Name (ARN) of the alarm.
metricAlarm_alarmArn :: Lens' MetricAlarm (Maybe Text)

-- | The name of the metric associated with the alarm, if this is an alarm
--   based on a single metric.
metricAlarm_metricName :: Lens' MetricAlarm (Maybe Text)

-- | An explanation for the alarm state, in text format.
metricAlarm_stateReason :: Lens' MetricAlarm (Maybe Text)

-- | An explanation for the alarm state, in JSON format.
metricAlarm_stateReasonData :: Lens' MetricAlarm (Maybe Text)

-- | The actions to execute when this alarm transitions to the
--   <tt>INSUFFICIENT_DATA</tt> state from any other state. Each action is
--   specified as an Amazon Resource Name (ARN).
metricAlarm_insufficientDataActions :: Lens' MetricAlarm (Maybe [Text])

-- | Sets how this alarm is to handle missing data points. If this
--   parameter is omitted, the default behavior of <tt>missing</tt> is
--   used.
metricAlarm_treatMissingData :: Lens' MetricAlarm (Maybe Text)

-- | An array of MetricDataQuery structures, used in an alarm based on a
--   metric math expression. Each structure either retrieves a metric or
--   performs a math expression. One item in the Metrics array is the math
--   expression that the alarm watches. This expression by designated by
--   having <tt>ReturnData</tt> set to true.
metricAlarm_metrics :: Lens' MetricAlarm (Maybe [MetricDataQuery])

-- | The name of the alarm.
metricAlarm_alarmName :: Lens' MetricAlarm (Maybe Text)

-- | The state value for the alarm.
metricAlarm_stateValue :: Lens' MetricAlarm (Maybe StateValue)

-- | The time stamp of the last update to the alarm state.
metricAlarm_stateUpdatedTimestamp :: Lens' MetricAlarm (Maybe UTCTime)

-- | The actions to execute when this alarm transitions to the <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
metricAlarm_oKActions :: Lens' MetricAlarm (Maybe [Text])

-- | The statistic for the metric associated with the alarm, other than
--   percentile. For percentile statistics, use <tt>ExtendedStatistic</tt>.
metricAlarm_statistic :: Lens' MetricAlarm (Maybe Statistic)

-- | The namespace of the metric associated with the alarm.
metricAlarm_namespace :: Lens' MetricAlarm (Maybe Text)

-- | The dimensions for the metric associated with the alarm.
metricAlarm_dimensions :: Lens' MetricAlarm (Maybe [Dimension])

-- | The number of periods over which data is compared to the specified
--   threshold.
metricAlarm_evaluationPeriods :: Lens' MetricAlarm (Maybe Natural)

-- | Indicates whether actions should be executed during any changes to the
--   alarm state.
metricAlarm_actionsEnabled :: Lens' MetricAlarm (Maybe Bool)

-- | The time stamp of the last update to the alarm configuration.
metricAlarm_alarmConfigurationUpdatedTimestamp :: Lens' MetricAlarm (Maybe UTCTime)

-- | The period, in seconds, over which the statistic is applied.
metricAlarm_period :: Lens' MetricAlarm (Maybe Natural)

-- | The description of the alarm.
metricAlarm_alarmDescription :: Lens' MetricAlarm (Maybe Text)

-- | The ID of the account where the metrics are located, if this is a
--   cross-account alarm.
--   
--   Use this field only for <tt>PutMetricAlarm</tt> operations. It is not
--   used in <tt>GetMetricData</tt> operations.
metricDataQuery_accountId :: Lens' MetricDataQuery (Maybe Text)

-- | The metric to be returned, along with statistics, period, and units.
--   Use this parameter only if this object is retrieving a metric and not
--   performing a math expression on returned data.
--   
--   Within one MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
metricDataQuery_metricStat :: Lens' MetricDataQuery (Maybe MetricStat)

-- | When used in <tt>GetMetricData</tt>, this option indicates whether to
--   return the timestamps and raw data values of this metric. If you are
--   performing this call just to do math expressions and do not also need
--   the raw data returned, you can specify <tt>False</tt>. If you omit
--   this, the default of <tt>True</tt> is used.
--   
--   When used in <tt>PutMetricAlarm</tt>, specify <tt>True</tt> for the
--   one expression result to use as the alarm. For all other metrics and
--   expressions in the same <tt>PutMetricAlarm</tt> operation, specify
--   <tt>ReturnData</tt> as False.
metricDataQuery_returnData :: Lens' MetricDataQuery (Maybe Bool)

-- | A human-readable label for this metric or expression. This is
--   especially useful if this is an expression, so that you know what the
--   value represents. If the metric or expression is shown in a CloudWatch
--   dashboard widget, the label is shown. If Label is omitted, CloudWatch
--   generates a default.
--   
--   You can put dynamic expressions into a label, so that it is more
--   descriptive. For more information, see <a>Using Dynamic Labels</a>.
metricDataQuery_label :: Lens' MetricDataQuery (Maybe Text)

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> operation
--   that includes a <tt>StorageResolution of 1 second</tt>.
metricDataQuery_period :: Lens' MetricDataQuery (Maybe Natural)

-- | The math expression to be performed on the returned data, if this
--   object is performing a math expression. This expression can use the
--   <tt>Id</tt> of the other metrics to refer to those metrics, and can
--   also use the <tt>Id</tt> of other expressions to use the result of
--   those expressions. For more information about metric math expressions,
--   see <a>Metric Math Syntax and Functions</a> in the <i>Amazon
--   CloudWatch User Guide</i>.
--   
--   Within each MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
metricDataQuery_expression :: Lens' MetricDataQuery (Maybe Text)

-- | A short name used to tie this object to the results in the response.
--   This name must be unique within a single call to
--   <tt>GetMetricData</tt>. If you are performing math expressions on this
--   set of data, this name represents that data and can serve as a
--   variable in the mathematical expression. The valid characters are
--   letters, numbers, and underscore. The first character must be a
--   lowercase letter.
metricDataQuery_id :: Lens' MetricDataQuery Text

-- | The data points for the metric corresponding to <tt>Timestamps</tt>.
--   The number of values always matches the number of timestamps and the
--   timestamp for Values[x] is Timestamps[x].
metricDataResult_values :: Lens' MetricDataResult (Maybe [Double])

-- | The short name you specified to represent this metric.
metricDataResult_id :: Lens' MetricDataResult (Maybe Text)

-- | The timestamps for the data points, formatted in Unix timestamp
--   format. The number of timestamps always matches the number of values
--   and the value for Timestamps[x] is Values[x].
metricDataResult_timestamps :: Lens' MetricDataResult (Maybe [UTCTime])

-- | The status of the returned data. <tt>Complete</tt> indicates that all
--   data points in the requested time range were returned.
--   <tt>PartialData</tt> means that an incomplete set of data points were
--   returned. You can use the <tt>NextToken</tt> value that was returned
--   and repeat your request to get more data points. <tt>NextToken</tt> is
--   not returned if you are performing a math expression.
--   <tt>InternalError</tt> indicates that an error occurred. Retry your
--   request using <tt>NextToken</tt>, if present.
metricDataResult_statusCode :: Lens' MetricDataResult (Maybe StatusCode)

-- | The human-readable label associated with the data.
metricDataResult_label :: Lens' MetricDataResult (Maybe Text)

-- | A list of messages with additional information about the data
--   returned.
metricDataResult_messages :: Lens' MetricDataResult (Maybe [MessageData])

-- | Valid values are 1 and 60. Setting this to 1 specifies this metric as
--   a high-resolution metric, so that CloudWatch stores the metric with
--   sub-minute resolution down to one second. Setting this to 60 specifies
--   this metric as a regular-resolution metric, which CloudWatch stores at
--   1-minute resolution. Currently, high resolution is available only for
--   custom metrics. For more information about high-resolution metrics,
--   see <a>High-Resolution Metrics</a> in the <i>Amazon CloudWatch User
--   Guide</i>.
--   
--   This field is optional, if you do not specify it the default of 60 is
--   used.
metricDatum_storageResolution :: Lens' MetricDatum (Maybe Natural)

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, this displays the unit that is used for
--   the metric.
metricDatum_unit :: Lens' MetricDatum (Maybe StandardUnit)

-- | Array of numbers representing the values for the metric during the
--   period. Each unique value is listed just once in this array, and the
--   corresponding number in the <tt>Counts</tt> array specifies the number
--   of times that value occurred during the period. You can include up to
--   150 unique values in each <tt>PutMetricData</tt> action that specifies
--   a <tt>Values</tt> array.
--   
--   Although the <tt>Values</tt> array accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
metricDatum_values :: Lens' MetricDatum (Maybe [Double])

-- | Array of numbers that is used along with the <tt>Values</tt> array.
--   Each number in the <tt>Count</tt> array is the number of times the
--   corresponding value in the <tt>Values</tt> array occurred during the
--   period.
--   
--   If you omit the <tt>Counts</tt> array, the default of 1 is used as the
--   value for each count. If you include a <tt>Counts</tt> array, it must
--   include the same amount of values as the <tt>Values</tt> array.
metricDatum_counts :: Lens' MetricDatum (Maybe [Double])

-- | The statistical values for the metric.
metricDatum_statisticValues :: Lens' MetricDatum (Maybe StatisticSet)

-- | The time the metric data was received, expressed as the number of
--   milliseconds since Jan 1, 1970 00:00:00 UTC.
metricDatum_timestamp :: Lens' MetricDatum (Maybe UTCTime)

-- | The value for the metric.
--   
--   Although the parameter accepts numbers of type Double, CloudWatch
--   rejects values that are either too small or too large. Values must be
--   in the range of -2^360 to 2^360. In addition, special values (for
--   example, NaN, +Infinity, -Infinity) are not supported.
metricDatum_value :: Lens' MetricDatum (Maybe Double)

-- | The dimensions associated with the metric.
metricDatum_dimensions :: Lens' MetricDatum (Maybe [Dimension])

-- | The name of the metric.
metricDatum_metricName :: Lens' MetricDatum Text

-- | When you are using a <tt>Put</tt> operation, this defines what unit
--   you want to use when storing the metric.
--   
--   In a <tt>Get</tt> operation, if you omit <tt>Unit</tt> then all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
metricStat_unit :: Lens' MetricStat (Maybe StandardUnit)

-- | The metric to return, including the metric name, namespace, and
--   dimensions.
metricStat_metric :: Lens' MetricStat Metric

-- | The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
metricStat_period :: Lens' MetricStat Natural

-- | The statistic to return. It can include any CloudWatch statistic or
--   extended statistic.
metricStat_stat :: Lens' MetricStat Text

-- | The ARN of the Kinesis Firehose devlivery stream that is used for this
--   metric stream.
metricStreamEntry_firehoseArn :: Lens' MetricStreamEntry (Maybe Text)

-- | The ARN of the metric stream.
metricStreamEntry_arn :: Lens' MetricStreamEntry (Maybe Text)

-- | The date that the metric stream was originally created.
metricStreamEntry_creationDate :: Lens' MetricStreamEntry (Maybe UTCTime)

-- | The name of the metric stream.
metricStreamEntry_name :: Lens' MetricStreamEntry (Maybe Text)

-- | The date that the configuration of this metric stream was most
--   recently updated.
metricStreamEntry_lastUpdateDate :: Lens' MetricStreamEntry (Maybe UTCTime)

-- | The current state of this stream. Valid values are <tt>running</tt>
--   and <tt>stopped</tt>.
metricStreamEntry_state :: Lens' MetricStreamEntry (Maybe Text)

-- | The output format of this metric stream. Valid values are
--   <tt>json</tt> and <tt>opentelemetry0.7</tt>.
metricStreamEntry_outputFormat :: Lens' MetricStreamEntry (Maybe MetricStreamOutputFormat)

-- | The name of the metric namespace in the filter.
metricStreamFilter_namespace :: Lens' MetricStreamFilter (Maybe Text)

-- | The type of error.
partialFailure_exceptionType :: Lens' PartialFailure (Maybe Text)

-- | The code of the error.
partialFailure_failureCode :: Lens' PartialFailure (Maybe Text)

-- | A description of the error.
partialFailure_failureDescription :: Lens' PartialFailure (Maybe Text)

-- | The specified rule that could not be deleted.
partialFailure_failureResource :: Lens' PartialFailure (Maybe Text)

-- | The start time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
range_startTime :: Lens' Range UTCTime

-- | The end time of the range to exclude. The format is
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
range_endTime :: Lens' Range UTCTime

-- | The number of samples used for the statistic set.
statisticSet_sampleCount :: Lens' StatisticSet Double

-- | The sum of values for the sample set.
statisticSet_sum :: Lens' StatisticSet Double

-- | The minimum value of the sample set.
statisticSet_minimum :: Lens' StatisticSet Double

-- | The maximum value of the sample set.
statisticSet_maximum :: Lens' StatisticSet Double

-- | A string that you can use to assign a value. The combination of tag
--   keys and values can help you organize and categorize your resources.
tag_key :: Lens' Tag Text

-- | The value for the specified tag key.
tag_value :: Lens' Tag Text


module Network.AWS.CloudWatch.Waiters

-- | Polls <a>DescribeAlarms</a> every 5 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newAlarmExists :: Wait DescribeAlarms

-- | Polls <a>DescribeAlarms</a> every 5 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newCompositeAlarmExists :: Wait DescribeAlarms


-- | Derived from API version <tt>2010-08-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon CloudWatch monitors your Amazon Web Services (Amazon Web
--   Services) resources and the applications you run on Amazon Web
--   Services in real time. You can use CloudWatch to collect and track
--   metrics, which are the variables you want to measure for your
--   resources and applications.
--   
--   CloudWatch alarms send notifications or automatically change the
--   resources you are monitoring based on rules that you define. For
--   example, you can monitor the CPU usage and disk reads and writes of
--   your Amazon EC2 instances. Then, use this data to determine whether
--   you should launch additional instances to handle increased load. You
--   can also use this data to stop under-used instances to save money.
--   
--   In addition to monitoring the built-in metrics that come with Amazon
--   Web Services, you can monitor your own custom metrics. With
--   CloudWatch, you gain system-wide visibility into resource utilization,
--   application performance, and operational health.
module Network.AWS.CloudWatch

-- | API version <tt>2010-08-01</tt> of the Amazon CloudWatch SDK
--   configuration.
defaultService :: Service

-- | The specified dashboard does not exist.
_DashboardNotFoundError :: AsError a => Getting (First ServiceError) a ServiceError

-- | The quota for alarms for this customer has already been reached.
_LimitExceededFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Parameters were used together that cannot be used together.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Some part of the dashboard data is invalid.
_DashboardInvalidInputError :: AsError a => Getting (First ServiceError) a ServiceError

-- | An input parameter that is required is missing.
_MissingRequiredParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Request processing has failed due to some unknown error, exception, or
--   failure.
_InternalServiceFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | More than one process tried to modify a resource at the same time.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value of an input parameter is bad or out-of-range.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation exceeded one or more limits.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The named resource does not exist.
_ResourceNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The named resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Data was not syntactically valid JSON.
_InvalidFormatFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | The next token specified is invalid.
_InvalidNextToken :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeAlarms</a> every 5 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newAlarmExists :: Wait DescribeAlarms

-- | Polls <a>DescribeAlarms</a> every 5 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newCompositeAlarmExists :: Wait DescribeAlarms

-- | <i>See:</i> <a>newGetMetricStatistics</a> smart constructor.
data GetMetricStatistics
GetMetricStatistics' :: Maybe StandardUnit -> Maybe (NonEmpty Statistic) -> Maybe [Dimension] -> Maybe (NonEmpty Text) -> Text -> Text -> ISO8601 -> ISO8601 -> Natural -> GetMetricStatistics

-- | Create a value of <a>GetMetricStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:GetMetricStatistics'</a>, <a>getMetricStatistics_unit</a>
--   - The unit for a given metric. If you omit <tt>Unit</tt>, all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
--   
--   <a>$sel:statistics:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_statistics</a> - The metric statistics, other
--   than percentile. For percentile statistics, use
--   <tt>ExtendedStatistics</tt>. When calling
--   <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
--   
--   <a>$sel:dimensions:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_dimensions</a> - The dimensions. If the metric
--   contains multiple dimensions, you must include a value for each
--   dimension. CloudWatch treats each unique combination of dimensions as
--   a separate metric. If a specific combination of dimensions was not
--   published, you can't retrieve statistics for it. You must specify the
--   same dimensions that were used when the metrics were created. For an
--   example, see <a>Dimension Combinations</a> in the <i>Amazon CloudWatch
--   User Guide</i>. For more information about specifying dimensions, see
--   <a>Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   <a>$sel:extendedStatistics:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_extendedStatistics</a> - The percentile
--   statistics. Specify values between p0.0 and p100. When calling
--   <tt>GetMetricStatistics</tt>, you must specify either
--   <tt>Statistics</tt> or <tt>ExtendedStatistics</tt>, but not both.
--   Percentile statistics are not available for metrics when any of the
--   metric values are negative numbers.
--   
--   <a>$sel:namespace:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_namespace</a> - The namespace of the metric,
--   with or without spaces.
--   
--   <a>$sel:metricName:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_metricName</a> - The name of the metric, with
--   or without spaces.
--   
--   <a>$sel:startTime:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_startTime</a> - The time stamp that determines
--   the first data point to return. Start times are evaluated relative to
--   the time that CloudWatch receives the request.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp. In a raw HTTP query, the time stamp must be in
--   ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
--   
--   <a>$sel:endTime:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_endTime</a> - The time stamp that determines
--   the last data point to return.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp. In a raw HTTP query, the time stamp must be
--   in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).
--   
--   <a>$sel:period:GetMetricStatistics'</a>,
--   <a>getMetricStatistics_period</a> - The granularity, in seconds, of
--   the returned data points. For metrics with regular resolution, a
--   period can be as short as one minute (60 seconds) and must be a
--   multiple of 60. For high-resolution metrics that are collected at
--   intervals of less than one minute, the period can be 1, 5, 10, 30, 60,
--   or any multiple of 60. High-resolution metrics are those metrics
--   stored by a <tt>PutMetricData</tt> call that includes a
--   <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
newGetMetricStatistics :: Text -> Text -> UTCTime -> UTCTime -> Natural -> GetMetricStatistics

-- | <i>See:</i> <a>newGetMetricStatisticsResponse</a> smart constructor.
data GetMetricStatisticsResponse
GetMetricStatisticsResponse' :: Maybe [Datapoint] -> Maybe Text -> Int -> GetMetricStatisticsResponse

-- | Create a value of <a>GetMetricStatisticsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datapoints:GetMetricStatisticsResponse'</a>,
--   <a>getMetricStatisticsResponse_datapoints</a> - The data points for
--   the specified metric.
--   
--   <a>$sel:label:GetMetricStatisticsResponse'</a>,
--   <a>getMetricStatisticsResponse_label</a> - A label for the specified
--   metric.
--   
--   <a>$sel:httpStatus:GetMetricStatisticsResponse'</a>,
--   <a>getMetricStatisticsResponse_httpStatus</a> - The response's http
--   status code.
newGetMetricStatisticsResponse :: Int -> GetMetricStatisticsResponse

-- | <i>See:</i> <a>newEnableAlarmActions</a> smart constructor.
data EnableAlarmActions
EnableAlarmActions' :: [Text] -> EnableAlarmActions

-- | Create a value of <a>EnableAlarmActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmNames:EnableAlarmActions'</a>,
--   <a>enableAlarmActions_alarmNames</a> - The names of the alarms.
newEnableAlarmActions :: EnableAlarmActions

-- | <i>See:</i> <a>newEnableAlarmActionsResponse</a> smart constructor.
data EnableAlarmActionsResponse
EnableAlarmActionsResponse' :: EnableAlarmActionsResponse

-- | Create a value of <a>EnableAlarmActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newEnableAlarmActionsResponse :: EnableAlarmActionsResponse

-- | <i>See:</i> <a>newGetMetricWidgetImage</a> smart constructor.
data GetMetricWidgetImage
GetMetricWidgetImage' :: Maybe Text -> Text -> GetMetricWidgetImage

-- | Create a value of <a>GetMetricWidgetImage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputFormat:GetMetricWidgetImage'</a>,
--   <a>getMetricWidgetImage_outputFormat</a> - The format of the resulting
--   image. Only PNG images are supported.
--   
--   The default is <tt>png</tt>. If you specify <tt>png</tt>, the API
--   returns an HTTP response with the content-type set to
--   <tt>text/xml</tt>. The image data is in a <tt>MetricWidgetImage</tt>
--   field. For example:
--   
--   <pre>
--   &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;
--   </pre>
--   
--   <pre>
--   &lt;GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...
--   </pre>
--   
--   <pre>
--   &lt;/MetricWidgetImage&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResult&gt;
--   </pre>
--   
--   <pre>
--   &lt;ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;
--   </pre>
--   
--   <pre>
--   &lt;/ResponseMetadata&gt;
--   </pre>
--   
--   <pre>
--   &lt;/GetMetricWidgetImageResponse&gt;
--   </pre>
--   
--   The <tt>image/png</tt> setting is intended only for custom HTTP
--   requests. For most use cases, and all actions using an Amazon Web
--   Services SDK, you should use <tt>png</tt>. If you specify
--   <tt>image/png</tt>, the HTTP response has a content-type set to
--   <tt>image/png</tt>, and the body of the response is a PNG image.
--   
--   <a>$sel:metricWidget:GetMetricWidgetImage'</a>,
--   <a>getMetricWidgetImage_metricWidget</a> - A JSON string that defines
--   the bitmap graph to be retrieved. The string includes the metrics to
--   include in the graph, statistics, annotations, title, axis limits, and
--   so on. You can include only one <tt>MetricWidget</tt> parameter in
--   each <tt>GetMetricWidgetImage</tt> call.
--   
--   For more information about the syntax of <tt>MetricWidget</tt> see
--   <a>GetMetricWidgetImage: Metric Widget Structure and Syntax</a>.
--   
--   If any metric on the graph could not load all the requested data
--   points, an orange triangle with an exclamation point appears next to
--   the graph legend.
newGetMetricWidgetImage :: Text -> GetMetricWidgetImage

-- | <i>See:</i> <a>newGetMetricWidgetImageResponse</a> smart constructor.
data GetMetricWidgetImageResponse
GetMetricWidgetImageResponse' :: Maybe Base64 -> Int -> GetMetricWidgetImageResponse

-- | Create a value of <a>GetMetricWidgetImageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricWidgetImage:GetMetricWidgetImageResponse'</a>,
--   <a>getMetricWidgetImageResponse_metricWidgetImage</a> - The image of
--   the graph, in the output format specified. The output is
--   base64-encoded.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
--   
--   <a>$sel:httpStatus:GetMetricWidgetImageResponse'</a>,
--   <a>getMetricWidgetImageResponse_httpStatus</a> - The response's http
--   status code.
newGetMetricWidgetImageResponse :: Int -> GetMetricWidgetImageResponse

-- | <i>See:</i> <a>newPutInsightRule</a> smart constructor.
data PutInsightRule
PutInsightRule' :: Maybe Text -> Maybe [Tag] -> Text -> Text -> PutInsightRule

-- | Create a value of <a>PutInsightRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleState:PutInsightRule'</a>, <a>putInsightRule_ruleState</a>
--   - The state of the rule. Valid values are ENABLED and DISABLED.
--   
--   <a>$sel:tags:PutInsightRule'</a>, <a>putInsightRule_tags</a> - A list
--   of key-value pairs to associate with the Contributor Insights rule.
--   You can associate as many as 50 tags with a rule.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only the resources that have certain tag values.
--   
--   To be able to associate tags with a rule, you must have the
--   <tt>cloudwatch:TagResource</tt> permission in addition to the
--   <tt>cloudwatch:PutInsightRule</tt> permission.
--   
--   If you are using this operation to update an existing Contributor
--   Insights rule, any tags you specify in this parameter are ignored. To
--   change the tags of an existing rule, use <a>TagResource</a>.
--   
--   <a>$sel:ruleName:PutInsightRule'</a>, <a>putInsightRule_ruleName</a> -
--   A unique name for the rule.
--   
--   <a>$sel:ruleDefinition:PutInsightRule'</a>,
--   <a>putInsightRule_ruleDefinition</a> - The definition of the rule, as
--   a JSON object. For details on the valid syntax, see <a>Contributor
--   Insights Rule Syntax</a>.
newPutInsightRule :: Text -> Text -> PutInsightRule

-- | <i>See:</i> <a>newPutInsightRuleResponse</a> smart constructor.
data PutInsightRuleResponse
PutInsightRuleResponse' :: Int -> PutInsightRuleResponse

-- | Create a value of <a>PutInsightRuleResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutInsightRuleResponse'</a>,
--   <a>putInsightRuleResponse_httpStatus</a> - The response's http status
--   code.
newPutInsightRuleResponse :: Int -> PutInsightRuleResponse

-- | <i>See:</i> <a>newDeleteMetricStream</a> smart constructor.
data DeleteMetricStream
DeleteMetricStream' :: Text -> DeleteMetricStream

-- | Create a value of <a>DeleteMetricStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteMetricStream'</a>, <a>deleteMetricStream_name</a> -
--   The name of the metric stream to delete.
newDeleteMetricStream :: Text -> DeleteMetricStream

-- | <i>See:</i> <a>newDeleteMetricStreamResponse</a> smart constructor.
data DeleteMetricStreamResponse
DeleteMetricStreamResponse' :: Int -> DeleteMetricStreamResponse

-- | Create a value of <a>DeleteMetricStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteMetricStreamResponse'</a>,
--   <a>deleteMetricStreamResponse_httpStatus</a> - The response's http
--   status code.
newDeleteMetricStreamResponse :: Int -> DeleteMetricStreamResponse

-- | <i>See:</i> <a>newDeleteAlarms</a> smart constructor.
data DeleteAlarms
DeleteAlarms' :: [Text] -> DeleteAlarms

-- | Create a value of <a>DeleteAlarms</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmNames:DeleteAlarms'</a>, <a>deleteAlarms_alarmNames</a> -
--   The alarms to be deleted.
newDeleteAlarms :: DeleteAlarms

-- | <i>See:</i> <a>newDeleteAlarmsResponse</a> smart constructor.
data DeleteAlarmsResponse
DeleteAlarmsResponse' :: DeleteAlarmsResponse

-- | Create a value of <a>DeleteAlarmsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAlarmsResponse :: DeleteAlarmsResponse

-- | <i>See:</i> <a>newPutMetricAlarm</a> smart constructor.
data PutMetricAlarm
PutMetricAlarm' :: Maybe Double -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe StandardUnit -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe [MetricDataQuery] -> Maybe [Tag] -> Maybe [Text] -> Maybe Statistic -> Maybe Text -> Maybe [Dimension] -> Maybe Bool -> Maybe Natural -> Maybe Text -> Text -> Natural -> ComparisonOperator -> PutMetricAlarm

-- | Create a value of <a>PutMetricAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:PutMetricAlarm'</a>, <a>putMetricAlarm_threshold</a>
--   - The value against which the specified statistic is compared.
--   
--   This parameter is required for alarms based on static thresholds, but
--   should not be used for alarms based on anomaly detection models.
--   
--   <a>$sel:datapointsToAlarm:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_datapointsToAlarm</a> - The number of data points
--   that must be breaching to trigger the alarm. This is used only if you
--   are setting an "M out of N" alarm. In that case, this value is the M.
--   For more information, see <a>Evaluating an Alarm</a> in the <i>Amazon
--   CloudWatch User Guide</i>.
--   
--   <a>$sel:evaluateLowSampleCountPercentile:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_evaluateLowSampleCountPercentile</a> - Used only for
--   alarms based on percentiles. If you specify <tt>ignore</tt>, the alarm
--   state does not change during periods with too few data points to be
--   statistically significant. If you specify <tt>evaluate</tt> or omit
--   this parameter, the alarm is always evaluated and possibly changes
--   state no matter how many data points are available. For more
--   information, see <a>Percentile-Based CloudWatch Alarms and Low Data
--   Samples</a>.
--   
--   Valid Values: <tt>evaluate | ignore</tt>
--   
--   <a>$sel:extendedStatistic:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_extendedStatistic</a> - The percentile statistic for
--   the metric specified in <tt>MetricName</tt>. Specify a value between
--   p0.0 and p100. When you call <tt>PutMetricAlarm</tt> and specify a
--   <tt>MetricName</tt>, you must specify either <tt>Statistic</tt> or
--   <tt>ExtendedStatistic,</tt> but not both.
--   
--   <a>$sel:thresholdMetricId:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_thresholdMetricId</a> - If this is an alarm based on
--   an anomaly detection model, make this value match the ID of the
--   <tt>ANOMALY_DETECTION_BAND</tt> function.
--   
--   For an example of how to use this parameter, see the __Anomaly
--   Detection Model Alarm__ example on this page.
--   
--   If your alarm uses this parameter, it cannot have Auto Scaling
--   actions.
--   
--   <a>$sel:alarmActions:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_alarmActions</a> - The actions to execute when this
--   alarm transitions to the <tt>ALARM</tt> state from any other state.
--   Each action is specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt> | <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt> |
--   <tt>arn:aws:ssm-incidents::account-id:response-plan:response-plan-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
--   
--   <a>$sel:unit:PutMetricAlarm'</a>, <a>putMetricAlarm_unit</a> - The
--   unit of measure for the statistic. For example, the units for the
--   Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the
--   number of bytes that an instance receives on all network interfaces.
--   You can also specify a unit when you create a custom metric. Units
--   help provide conceptual meaning to your data. Metric data points that
--   specify a unit of measure, such as Percent, are aggregated separately.
--   
--   If you don't specify <tt>Unit</tt>, CloudWatch retrieves all unit
--   types that have been published for the metric and attempts to evaluate
--   the alarm. Usually, metrics are published with only one unit, so the
--   alarm works as intended.
--   
--   However, if the metric is published with multiple types of units and
--   you don't specify a unit, the alarm's behavior is not defined and it
--   behaves predictably.
--   
--   We recommend omitting <tt>Unit</tt> so that you don't inadvertently
--   specify an incorrect unit that is not published for this metric. Doing
--   so causes the alarm to be stuck in the <tt>INSUFFICIENT DATA</tt>
--   state.
--   
--   <a>$sel:metricName:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_metricName</a> - The name for the metric associated
--   with the alarm. For each <tt>PutMetricAlarm</tt> operation, you must
--   specify either <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   If you are creating an alarm based on a math expression, you cannot
--   specify this parameter, or any of the <tt>Dimensions</tt>,
--   <tt>Period</tt>, <tt>Namespace</tt>, <tt>Statistic</tt>, or
--   <tt>ExtendedStatistic</tt> parameters. Instead, you specify all this
--   information in the <tt>Metrics</tt> array.
--   
--   <a>$sel:insufficientDataActions:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_insufficientDataActions</a> - The actions to execute
--   when this alarm transitions to the <tt>INSUFFICIENT_DATA</tt> state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>&gt;arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   
--   <a>$sel:treatMissingData:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_treatMissingData</a> - Sets how this alarm is to
--   handle missing data points. If <tt>TreatMissingData</tt> is omitted,
--   the default behavior of <tt>missing</tt> is used. For more
--   information, see <a>Configuring How CloudWatch Alarms Treats Missing
--   Data</a>.
--   
--   Valid Values: <tt>breaching | notBreaching | ignore | missing</tt>
--   
--   <a>$sel:metrics:PutMetricAlarm'</a>, <a>putMetricAlarm_metrics</a> -
--   An array of <tt>MetricDataQuery</tt> structures that enable you to
--   create an alarm based on the result of a metric math expression. For
--   each <tt>PutMetricAlarm</tt> operation, you must specify either
--   <tt>MetricName</tt> or a <tt>Metrics</tt> array.
--   
--   Each item in the <tt>Metrics</tt> array either retrieves a metric or
--   performs a math expression.
--   
--   One item in the <tt>Metrics</tt> array is the expression that the
--   alarm watches. You designate this expression by setting
--   <tt>ReturnData</tt> to true for this object in the array. For more
--   information, see <a>MetricDataQuery</a>.
--   
--   If you use the <tt>Metrics</tt> parameter, you cannot include the
--   <tt>MetricName</tt>, <tt>Dimensions</tt>, <tt>Period</tt>,
--   <tt>Namespace</tt>, <tt>Statistic</tt>, or <tt>ExtendedStatistic</tt>
--   parameters of <tt>PutMetricAlarm</tt> in the same operation. Instead,
--   you retrieve the metrics you are using in your math expression as part
--   of the <tt>Metrics</tt> array.
--   
--   <a>$sel:tags:PutMetricAlarm'</a>, <a>putMetricAlarm_tags</a> - A list
--   of key-value pairs to associate with the alarm. You can associate as
--   many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   If you are using this operation to update an existing alarm, any tags
--   you specify in this parameter are ignored. To change the tags of an
--   existing alarm, use <a>TagResource</a> or <a>UntagResource</a>.
--   
--   <a>$sel:oKActions:PutMetricAlarm'</a>, <a>putMetricAlarm_oKActions</a>
--   - The actions to execute when this alarm transitions to an <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:automate:region:ec2:stop</tt> |
--   <tt>arn:aws:automate:region:ec2:terminate</tt> |
--   <tt>arn:aws:automate:region:ec2:recover</tt> |
--   <tt>arn:aws:automate:region:ec2:reboot</tt> |
--   <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:autoscaling:region:account-id:scalingPolicy:policy-id:autoScalingGroupName/group-friendly-name:policyName/policy-friendly-name
--   </tt>
--   
--   Valid Values (for use with IAM roles):
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Stop/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Terminate/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Reboot/1.0</tt>
--   |
--   <tt>arn:aws:swf:region:account-id:action/actions/AWS_EC2.InstanceId.Recover/1.0</tt>
--   
--   <a>$sel:statistic:PutMetricAlarm'</a>, <a>putMetricAlarm_statistic</a>
--   - The statistic for the metric specified in <tt>MetricName</tt>, other
--   than percentile. For percentile statistics, use
--   <tt>ExtendedStatistic</tt>. When you call <tt>PutMetricAlarm</tt> and
--   specify a <tt>MetricName</tt>, you must specify either
--   <tt>Statistic</tt> or <tt>ExtendedStatistic,</tt> but not both.
--   
--   <a>$sel:namespace:PutMetricAlarm'</a>, <a>putMetricAlarm_namespace</a>
--   - The namespace for the metric associated specified in
--   <tt>MetricName</tt>.
--   
--   <a>$sel:dimensions:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_dimensions</a> - The dimensions for the metric
--   specified in <tt>MetricName</tt>.
--   
--   <a>$sel:actionsEnabled:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_actionsEnabled</a> - Indicates whether actions
--   should be executed during any changes to the alarm state. The default
--   is <tt>TRUE</tt>.
--   
--   <a>$sel:period:PutMetricAlarm'</a>, <a>putMetricAlarm_period</a> - The
--   length, in seconds, used each time the metric specified in
--   <tt>MetricName</tt> is evaluated. Valid values are 10, 30, and any
--   multiple of 60.
--   
--   <tt>Period</tt> is required for alarms based on static thresholds. If
--   you are creating an alarm based on a metric math expression, you
--   specify the period for each metric within the objects in the
--   <tt>Metrics</tt> array.
--   
--   Be sure to specify 10 or 30 only for metrics that are stored by a
--   <tt>PutMetricData</tt> call with a <tt>StorageResolution</tt> of 1. If
--   you specify a period of 10 or 30 for a metric that does not have
--   sub-minute resolution, the alarm still attempts to gather data at the
--   period rate that you specify. In this case, it does not receive data
--   for the attempts that do not correspond to a one-minute data
--   resolution, and the alarm might often lapse into INSUFFICENT_DATA
--   status. Specifying 10 or 30 also sets this alarm as a high-resolution
--   alarm, which has a higher charge than other alarms. For more
--   information about pricing, see <a>Amazon CloudWatch Pricing</a>.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so <tt>Period</tt> multiplied by <tt>EvaluationPeriods</tt>
--   cannot be more than 86,400 seconds.
--   
--   <a>$sel:alarmDescription:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_alarmDescription</a> - The description for the
--   alarm.
--   
--   <a>$sel:alarmName:PutMetricAlarm'</a>, <a>putMetricAlarm_alarmName</a>
--   - The name for the alarm. This name must be unique within the Region.
--   
--   <a>$sel:evaluationPeriods:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_evaluationPeriods</a> - The number of periods over
--   which data is compared to the specified threshold. If you are setting
--   an alarm that requires that a number of consecutive data points be
--   breaching to trigger the alarm, this value specifies that number. If
--   you are setting an "M out of N" alarm, this value is the N.
--   
--   An alarm's total current evaluation period can be no longer than one
--   day, so this number multiplied by <tt>Period</tt> cannot be more than
--   86,400 seconds.
--   
--   <a>$sel:comparisonOperator:PutMetricAlarm'</a>,
--   <a>putMetricAlarm_comparisonOperator</a> - The arithmetic operation to
--   use when comparing the specified statistic and threshold. The
--   specified statistic value is used as the first operand.
--   
--   The values <tt>LessThanLowerOrGreaterThanUpperThreshold</tt>,
--   <tt>LessThanLowerThreshold</tt>, and
--   <tt>GreaterThanUpperThreshold</tt> are used only for alarms based on
--   anomaly detection models.
newPutMetricAlarm :: Text -> Natural -> ComparisonOperator -> PutMetricAlarm

-- | <i>See:</i> <a>newPutMetricAlarmResponse</a> smart constructor.
data PutMetricAlarmResponse
PutMetricAlarmResponse' :: PutMetricAlarmResponse

-- | Create a value of <a>PutMetricAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutMetricAlarmResponse :: PutMetricAlarmResponse

-- | <i>See:</i> <a>newDescribeInsightRules</a> smart constructor.
data DescribeInsightRules
DescribeInsightRules' :: Maybe Text -> Maybe Natural -> DescribeInsightRules

-- | Create a value of <a>DescribeInsightRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInsightRules'</a>,
--   <a>describeInsightRules_nextToken</a> - Include this value, if it was
--   returned by the previous operation, to get the next set of rules.
--   
--   <a>$sel:maxResults:DescribeInsightRules'</a>,
--   <a>describeInsightRules_maxResults</a> - The maximum number of results
--   to return in one operation. If you omit this parameter, the default of
--   500 is used.
newDescribeInsightRules :: DescribeInsightRules

-- | <i>See:</i> <a>newDescribeInsightRulesResponse</a> smart constructor.
data DescribeInsightRulesResponse
DescribeInsightRulesResponse' :: Maybe Text -> Maybe [InsightRule] -> Int -> DescribeInsightRulesResponse

-- | Create a value of <a>DescribeInsightRulesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeInsightRules'</a>,
--   <a>describeInsightRulesResponse_nextToken</a> - If this parameter is
--   present, it is a token that marks the start of the next batch of
--   returned results.
--   
--   <a>$sel:insightRules:DescribeInsightRulesResponse'</a>,
--   <a>describeInsightRulesResponse_insightRules</a> - The rules returned
--   by the operation.
--   
--   <a>$sel:httpStatus:DescribeInsightRulesResponse'</a>,
--   <a>describeInsightRulesResponse_httpStatus</a> - The response's http
--   status code.
newDescribeInsightRulesResponse :: Int -> DescribeInsightRulesResponse

-- | <i>See:</i> <a>newStartMetricStreams</a> smart constructor.
data StartMetricStreams
StartMetricStreams' :: [Text] -> StartMetricStreams

-- | Create a value of <a>StartMetricStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:StartMetricStreams'</a>, <a>startMetricStreams_names</a>
--   - The array of the names of metric streams to start streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will start streaming.
newStartMetricStreams :: StartMetricStreams

-- | <i>See:</i> <a>newStartMetricStreamsResponse</a> smart constructor.
data StartMetricStreamsResponse
StartMetricStreamsResponse' :: Int -> StartMetricStreamsResponse

-- | Create a value of <a>StartMetricStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartMetricStreamsResponse'</a>,
--   <a>startMetricStreamsResponse_httpStatus</a> - The response's http
--   status code.
newStartMetricStreamsResponse :: Int -> StartMetricStreamsResponse

-- | <i>See:</i> <a>newStopMetricStreams</a> smart constructor.
data StopMetricStreams
StopMetricStreams' :: [Text] -> StopMetricStreams

-- | Create a value of <a>StopMetricStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:names:StopMetricStreams'</a>, <a>stopMetricStreams_names</a> -
--   The array of the names of metric streams to stop streaming.
--   
--   This is an "all or nothing" operation. If you do not have permission
--   to access all of the metric streams that you list here, then none of
--   the streams that you list in the operation will stop streaming.
newStopMetricStreams :: StopMetricStreams

-- | <i>See:</i> <a>newStopMetricStreamsResponse</a> smart constructor.
data StopMetricStreamsResponse
StopMetricStreamsResponse' :: Int -> StopMetricStreamsResponse

-- | Create a value of <a>StopMetricStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopMetricStreamsResponse'</a>,
--   <a>stopMetricStreamsResponse_httpStatus</a> - The response's http
--   status code.
newStopMetricStreamsResponse :: Int -> StopMetricStreamsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The ARN of the CloudWatch resource
--   that you're removing tags from.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of tag keys to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The ARN of the CloudWatch resource that you're adding tags to.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The list of
--   key-value pairs to associate with the alarm.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newGetInsightRuleReport</a> smart constructor.
data GetInsightRuleReport
GetInsightRuleReport' :: Maybe Text -> Maybe [Text] -> Maybe Int -> Text -> ISO8601 -> ISO8601 -> Natural -> GetInsightRuleReport

-- | Create a value of <a>GetInsightRuleReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:orderBy:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_orderBy</a> - Determines what statistic to use
--   to rank the contributors. Valid values are SUM and MAXIMUM.
--   
--   <a>$sel:metrics:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_metrics</a> - Specifies which metrics to use
--   for aggregation of contributor values for the report. You can specify
--   one or more of the following metrics:
--   
--   <ul>
--   <li><tt>UniqueContributors</tt> -- the number of unique contributors
--   for each data point.</li>
--   <li><tt>MaxContributorValue</tt> -- the value of the top contributor
--   for each data point. The identity of the contributor might change for
--   each data point in the graph.If this rule aggregates by COUNT, the top
--   contributor for each data point is the contributor with the most
--   occurrences in that period. If the rule aggregates by SUM, the top
--   contributor is the contributor with the highest sum in the log field
--   specified by the rule's <tt>Value</tt>, during that period.</li>
--   <li><tt>SampleCount</tt> -- the number of data points matched by the
--   rule.</li>
--   <li><tt>Sum</tt> -- the sum of the values from all contributors during
--   the time period represented by that data point.</li>
--   <li><tt>Minimum</tt> -- the minimum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Maximum</tt> -- the maximum value from a single observation
--   during the time period represented by that data point.</li>
--   <li><tt>Average</tt> -- the average value from all contributors during
--   the time period represented by that data point.</li>
--   </ul>
--   
--   <a>$sel:maxContributorCount:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_maxContributorCount</a> - The maximum number
--   of contributors to include in the report. The range is 1 to 100. If
--   you omit this, the default of 10 is used.
--   
--   <a>$sel:ruleName:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_ruleName</a> - The name of the rule that you
--   want to see data from.
--   
--   <a>$sel:startTime:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_startTime</a> - The start time of the data to
--   use in the report. When used in a raw HTTP Query API, it is formatted
--   as <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
--   
--   <a>$sel:endTime:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_endTime</a> - The end time of the data to use
--   in the report. When used in a raw HTTP Query API, it is formatted as
--   <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For example,
--   <tt>2019-07-01T23:59:59</tt>.
--   
--   <a>$sel:period:GetInsightRuleReport'</a>,
--   <a>getInsightRuleReport_period</a> - The period, in seconds, to use
--   for the statistics in the <tt>InsightRuleMetricDatapoint</tt> results.
newGetInsightRuleReport :: Text -> UTCTime -> UTCTime -> Natural -> GetInsightRuleReport

-- | <i>See:</i> <a>newGetInsightRuleReportResponse</a> smart constructor.
data GetInsightRuleReportResponse
GetInsightRuleReportResponse' :: Maybe Integer -> Maybe [InsightRuleMetricDatapoint] -> Maybe [InsightRuleContributor] -> Maybe Double -> Maybe [Text] -> Maybe Text -> Int -> GetInsightRuleReportResponse

-- | Create a value of <a>GetInsightRuleReportResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approximateUniqueCount:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_approximateUniqueCount</a> - An
--   approximate count of the unique contributors found by this rule in
--   this time period.
--   
--   <a>$sel:metricDatapoints:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_metricDatapoints</a> - A time series
--   of metric data points that matches the time period in the rule
--   request.
--   
--   <a>$sel:contributors:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_contributors</a> - An array of the
--   unique contributors found by this rule in this time period. If the
--   rule contains multiple keys, each combination of values for the keys
--   counts as a unique contributor.
--   
--   <a>$sel:aggregateValue:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_aggregateValue</a> - The sum of the
--   values from all individual contributors that match the rule.
--   
--   <a>$sel:keyLabels:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_keyLabels</a> - An array of the
--   strings used as the keys for this rule. The keys are the dimensions
--   used to classify contributors. If the rule contains more than one key,
--   then each unique combination of values for the keys is counted as a
--   unique contributor.
--   
--   <a>$sel:aggregationStatistic:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_aggregationStatistic</a> - Specifies
--   whether this rule aggregates contributor data by COUNT or SUM.
--   
--   <a>$sel:httpStatus:GetInsightRuleReportResponse'</a>,
--   <a>getInsightRuleReportResponse_httpStatus</a> - The response's http
--   status code.
newGetInsightRuleReportResponse :: Int -> GetInsightRuleReportResponse

-- | <i>See:</i> <a>newDescribeAnomalyDetectors</a> smart constructor.
data DescribeAnomalyDetectors
DescribeAnomalyDetectors' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe [Dimension] -> DescribeAnomalyDetectors

-- | Create a value of <a>DescribeAnomalyDetectors</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_nextToken</a> - Use the token returned by
--   the previous operation to request the next page of results.
--   
--   <a>$sel:maxResults:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_maxResults</a> - The maximum number of
--   results to return in one operation. The maximum value that you can
--   specify is 100.
--   
--   To retrieve the remaining results, make another call with the returned
--   <tt>NextToken</tt> value.
--   
--   <a>$sel:metricName:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_metricName</a> - Limits the results to
--   only the anomaly detection models that are associated with the
--   specified metric name. If there are multiple metrics with this name in
--   different namespaces that have anomaly detection models, they're all
--   returned.
--   
--   <a>$sel:namespace:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_namespace</a> - Limits the results to only
--   the anomaly detection models that are associated with the specified
--   namespace.
--   
--   <a>$sel:dimensions:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectors_dimensions</a> - Limits the results to
--   only the anomaly detection models that are associated with the
--   specified metric dimensions. If there are multiple metrics that have
--   these dimensions and have anomaly detection models associated, they're
--   all returned.
newDescribeAnomalyDetectors :: DescribeAnomalyDetectors

-- | <i>See:</i> <a>newDescribeAnomalyDetectorsResponse</a> smart
--   constructor.
data DescribeAnomalyDetectorsResponse
DescribeAnomalyDetectorsResponse' :: Maybe Text -> Maybe [AnomalyDetector] -> Int -> DescribeAnomalyDetectorsResponse

-- | Create a value of <a>DescribeAnomalyDetectorsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAnomalyDetectors'</a>,
--   <a>describeAnomalyDetectorsResponse_nextToken</a> - A token that you
--   can use in a subsequent operation to retrieve the next set of results.
--   
--   <a>$sel:anomalyDetectors:DescribeAnomalyDetectorsResponse'</a>,
--   <a>describeAnomalyDetectorsResponse_anomalyDetectors</a> - The list of
--   anomaly detection models returned by the operation.
--   
--   <a>$sel:httpStatus:DescribeAnomalyDetectorsResponse'</a>,
--   <a>describeAnomalyDetectorsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAnomalyDetectorsResponse :: Int -> DescribeAnomalyDetectorsResponse

-- | <i>See:</i> <a>newPutMetricData</a> smart constructor.
data PutMetricData
PutMetricData' :: Text -> [MetricDatum] -> PutMetricData

-- | Create a value of <a>PutMetricData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:PutMetricData'</a>, <a>putMetricData_namespace</a> -
--   The namespace for the metric data.
--   
--   To avoid conflicts with Amazon Web Services service namespaces, you
--   should not specify a namespace that begins with <tt>AWS/</tt>
--   
--   <a>$sel:metricData:PutMetricData'</a>, <a>putMetricData_metricData</a>
--   - The data for the metric. The array can include no more than 20
--   metrics per call.
newPutMetricData :: Text -> PutMetricData

-- | <i>See:</i> <a>newPutMetricDataResponse</a> smart constructor.
data PutMetricDataResponse
PutMetricDataResponse' :: PutMetricDataResponse

-- | Create a value of <a>PutMetricDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutMetricDataResponse :: PutMetricDataResponse

-- | <i>See:</i> <a>newListMetrics</a> smart constructor.
data ListMetrics
ListMetrics' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe [DimensionFilter] -> Maybe RecentlyActive -> ListMetrics

-- | Create a value of <a>ListMetrics</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMetrics'</a>, <a>listMetrics_nextToken</a> - The
--   token returned by a previous call to indicate that there is more data
--   available.
--   
--   <a>$sel:metricName:ListMetrics'</a>, <a>listMetrics_metricName</a> -
--   The name of the metric to filter against. Only the metrics with names
--   that match exactly will be returned.
--   
--   <a>$sel:namespace:ListMetrics'</a>, <a>listMetrics_namespace</a> - The
--   metric namespace to filter against. Only the namespace that matches
--   exactly will be returned.
--   
--   <a>$sel:dimensions:ListMetrics'</a>, <a>listMetrics_dimensions</a> -
--   The dimensions to filter against. Only the dimensions that match
--   exactly will be returned.
--   
--   <a>$sel:recentlyActive:ListMetrics'</a>,
--   <a>listMetrics_recentlyActive</a> - To filter the results to show only
--   metrics that have had data points published in the past three hours,
--   specify this parameter with a value of <tt>PT3H</tt>. This is the only
--   valid value for this parameter.
--   
--   The results that are returned are an approximation of the value you
--   specify. There is a low probability that the returned results include
--   metrics with last published data as much as 40 minutes more than the
--   specified time interval.
newListMetrics :: ListMetrics

-- | <i>See:</i> <a>newListMetricsResponse</a> smart constructor.
data ListMetricsResponse
ListMetricsResponse' :: Maybe Text -> Maybe [Metric] -> Int -> ListMetricsResponse

-- | Create a value of <a>ListMetricsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMetrics'</a>,
--   <a>listMetricsResponse_nextToken</a> - The token that marks the start
--   of the next batch of returned results.
--   
--   <a>$sel:metrics:ListMetricsResponse'</a>,
--   <a>listMetricsResponse_metrics</a> - The metrics that match your
--   request.
--   
--   <a>$sel:httpStatus:ListMetricsResponse'</a>,
--   <a>listMetricsResponse_httpStatus</a> - The response's http status
--   code.
newListMetricsResponse :: Int -> ListMetricsResponse

-- | <i>See:</i> <a>newPutDashboard</a> smart constructor.
data PutDashboard
PutDashboard' :: Text -> Text -> PutDashboard

-- | Create a value of <a>PutDashboard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardName:PutDashboard'</a>,
--   <a>putDashboard_dashboardName</a> - The name of the dashboard. If a
--   dashboard with this name already exists, this call modifies that
--   dashboard, replacing its current contents. Otherwise, a new dashboard
--   is created. The maximum length is 255, and valid characters are A-Z,
--   a-z, 0-9, "-", and "_". This parameter is required.
--   
--   <a>$sel:dashboardBody:PutDashboard'</a>,
--   <a>putDashboard_dashboardBody</a> - The detailed information about the
--   dashboard in JSON format, including the widgets to include and their
--   location on the dashboard. This parameter is required.
--   
--   For more information about the syntax, see <a>Dashboard Body Structure
--   and Syntax</a>.
newPutDashboard :: Text -> Text -> PutDashboard

-- | <i>See:</i> <a>newPutDashboardResponse</a> smart constructor.
data PutDashboardResponse
PutDashboardResponse' :: Maybe [DashboardValidationMessage] -> Int -> PutDashboardResponse

-- | Create a value of <a>PutDashboardResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardValidationMessages:PutDashboardResponse'</a>,
--   <a>putDashboardResponse_dashboardValidationMessages</a> - If the input
--   for <tt>PutDashboard</tt> was correct and the dashboard was
--   successfully created or modified, this result is empty.
--   
--   If this result includes only warning messages, then the input was
--   valid enough for the dashboard to be created or modified, but some
--   elements of the dashboard might not render.
--   
--   If this result includes error messages, the input was not valid and
--   the operation failed.
--   
--   <a>$sel:httpStatus:PutDashboardResponse'</a>,
--   <a>putDashboardResponse_httpStatus</a> - The response's http status
--   code.
newPutDashboardResponse :: Int -> PutDashboardResponse

-- | <i>See:</i> <a>newDeleteInsightRules</a> smart constructor.
data DeleteInsightRules
DeleteInsightRules' :: [Text] -> DeleteInsightRules

-- | Create a value of <a>DeleteInsightRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleNames:DeleteInsightRules'</a>,
--   <a>deleteInsightRules_ruleNames</a> - An array of the rule names to
--   delete. If you need to find out the names of your rules, use
--   <a>DescribeInsightRules</a>.
newDeleteInsightRules :: DeleteInsightRules

-- | <i>See:</i> <a>newDeleteInsightRulesResponse</a> smart constructor.
data DeleteInsightRulesResponse
DeleteInsightRulesResponse' :: Maybe [PartialFailure] -> Int -> DeleteInsightRulesResponse

-- | Create a value of <a>DeleteInsightRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:DeleteInsightRulesResponse'</a>,
--   <a>deleteInsightRulesResponse_failures</a> - An array listing the
--   rules that could not be deleted. You cannot delete built-in rules.
--   
--   <a>$sel:httpStatus:DeleteInsightRulesResponse'</a>,
--   <a>deleteInsightRulesResponse_httpStatus</a> - The response's http
--   status code.
newDeleteInsightRulesResponse :: Int -> DeleteInsightRulesResponse

-- | <i>See:</i> <a>newGetDashboard</a> smart constructor.
data GetDashboard
GetDashboard' :: Text -> GetDashboard

-- | Create a value of <a>GetDashboard</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardName:GetDashboard'</a>,
--   <a>getDashboard_dashboardName</a> - The name of the dashboard to be
--   described.
newGetDashboard :: Text -> GetDashboard

-- | <i>See:</i> <a>newGetDashboardResponse</a> smart constructor.
data GetDashboardResponse
GetDashboardResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetDashboardResponse

-- | Create a value of <a>GetDashboardResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardBody:GetDashboardResponse'</a>,
--   <a>getDashboardResponse_dashboardBody</a> - The detailed information
--   about the dashboard, including what widgets are included and their
--   location on the dashboard. For more information about the
--   <tt>DashboardBody</tt> syntax, see <a>Dashboard Body Structure and
--   Syntax</a>.
--   
--   <a>$sel:dashboardArn:GetDashboardResponse'</a>,
--   <a>getDashboardResponse_dashboardArn</a> - The Amazon Resource Name
--   (ARN) of the dashboard.
--   
--   <a>$sel:dashboardName:GetDashboard'</a>,
--   <a>getDashboardResponse_dashboardName</a> - The name of the dashboard.
--   
--   <a>$sel:httpStatus:GetDashboardResponse'</a>,
--   <a>getDashboardResponse_httpStatus</a> - The response's http status
--   code.
newGetDashboardResponse :: Int -> GetDashboardResponse

-- | <i>See:</i> <a>newDescribeAlarmsForMetric</a> smart constructor.
data DescribeAlarmsForMetric
DescribeAlarmsForMetric' :: Maybe Text -> Maybe StandardUnit -> Maybe Statistic -> Maybe [Dimension] -> Maybe Natural -> Text -> Text -> DescribeAlarmsForMetric

-- | Create a value of <a>DescribeAlarmsForMetric</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:extendedStatistic:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_extendedStatistic</a> - The percentile
--   statistic for the metric. Specify a value between p0.0 and p100.
--   
--   <a>$sel:unit:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_unit</a> - The unit for the metric.
--   
--   <a>$sel:statistic:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_statistic</a> - The statistic for the
--   metric, other than percentiles. For percentile statistics, use
--   <tt>ExtendedStatistics</tt>.
--   
--   <a>$sel:dimensions:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_dimensions</a> - The dimensions associated
--   with the metric. If the metric has any associated dimensions, you must
--   specify them in order for the call to succeed.
--   
--   <a>$sel:period:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_period</a> - The period, in seconds, over
--   which the statistic is applied.
--   
--   <a>$sel:metricName:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_metricName</a> - The name of the metric.
--   
--   <a>$sel:namespace:DescribeAlarmsForMetric'</a>,
--   <a>describeAlarmsForMetric_namespace</a> - The namespace of the
--   metric.
newDescribeAlarmsForMetric :: Text -> Text -> DescribeAlarmsForMetric

-- | <i>See:</i> <a>newDescribeAlarmsForMetricResponse</a> smart
--   constructor.
data DescribeAlarmsForMetricResponse
DescribeAlarmsForMetricResponse' :: Maybe [MetricAlarm] -> Int -> DescribeAlarmsForMetricResponse

-- | Create a value of <a>DescribeAlarmsForMetricResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricAlarms:DescribeAlarmsForMetricResponse'</a>,
--   <a>describeAlarmsForMetricResponse_metricAlarms</a> - The information
--   for each alarm with the specified metric.
--   
--   <a>$sel:httpStatus:DescribeAlarmsForMetricResponse'</a>,
--   <a>describeAlarmsForMetricResponse_httpStatus</a> - The response's
--   http status code.
newDescribeAlarmsForMetricResponse :: Int -> DescribeAlarmsForMetricResponse

-- | <i>See:</i> <a>newDisableAlarmActions</a> smart constructor.
data DisableAlarmActions
DisableAlarmActions' :: [Text] -> DisableAlarmActions

-- | Create a value of <a>DisableAlarmActions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmNames:DisableAlarmActions'</a>,
--   <a>disableAlarmActions_alarmNames</a> - The names of the alarms.
newDisableAlarmActions :: DisableAlarmActions

-- | <i>See:</i> <a>newDisableAlarmActionsResponse</a> smart constructor.
data DisableAlarmActionsResponse
DisableAlarmActionsResponse' :: DisableAlarmActionsResponse

-- | Create a value of <a>DisableAlarmActionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisableAlarmActionsResponse :: DisableAlarmActionsResponse

-- | <i>See:</i> <a>newPutAnomalyDetector</a> smart constructor.
data PutAnomalyDetector
PutAnomalyDetector' :: Maybe AnomalyDetectorConfiguration -> Maybe [Dimension] -> Text -> Text -> Text -> PutAnomalyDetector

-- | Create a value of <a>PutAnomalyDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configuration:PutAnomalyDetector'</a>,
--   <a>putAnomalyDetector_configuration</a> - The configuration specifies
--   details about how the anomaly detection model is to be trained,
--   including time ranges to exclude when training and updating the model.
--   You can specify as many as 10 time ranges.
--   
--   The configuration can also include the time zone to use for the
--   metric.
--   
--   <a>$sel:dimensions:PutAnomalyDetector'</a>,
--   <a>putAnomalyDetector_dimensions</a> - The metric dimensions to create
--   the anomaly detection model for.
--   
--   <a>$sel:namespace:PutAnomalyDetector'</a>,
--   <a>putAnomalyDetector_namespace</a> - The namespace of the metric to
--   create the anomaly detection model for.
--   
--   <a>$sel:metricName:PutAnomalyDetector'</a>,
--   <a>putAnomalyDetector_metricName</a> - The name of the metric to
--   create the anomaly detection model for.
--   
--   <a>$sel:stat:PutAnomalyDetector'</a>, <a>putAnomalyDetector_stat</a> -
--   The statistic to use for the metric and the anomaly detection model.
newPutAnomalyDetector :: Text -> Text -> Text -> PutAnomalyDetector

-- | <i>See:</i> <a>newPutAnomalyDetectorResponse</a> smart constructor.
data PutAnomalyDetectorResponse
PutAnomalyDetectorResponse' :: Int -> PutAnomalyDetectorResponse

-- | Create a value of <a>PutAnomalyDetectorResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutAnomalyDetectorResponse'</a>,
--   <a>putAnomalyDetectorResponse_httpStatus</a> - The response's http
--   status code.
newPutAnomalyDetectorResponse :: Int -> PutAnomalyDetectorResponse

-- | <i>See:</i> <a>newDisableInsightRules</a> smart constructor.
data DisableInsightRules
DisableInsightRules' :: [Text] -> DisableInsightRules

-- | Create a value of <a>DisableInsightRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleNames:DisableInsightRules'</a>,
--   <a>disableInsightRules_ruleNames</a> - An array of the rule names to
--   disable. If you need to find out the names of your rules, use
--   <a>DescribeInsightRules</a>.
newDisableInsightRules :: DisableInsightRules

-- | <i>See:</i> <a>newDisableInsightRulesResponse</a> smart constructor.
data DisableInsightRulesResponse
DisableInsightRulesResponse' :: Maybe [PartialFailure] -> Int -> DisableInsightRulesResponse

-- | Create a value of <a>DisableInsightRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:DisableInsightRulesResponse'</a>,
--   <a>disableInsightRulesResponse_failures</a> - An array listing the
--   rules that could not be disabled. You cannot disable built-in rules.
--   
--   <a>$sel:httpStatus:DisableInsightRulesResponse'</a>,
--   <a>disableInsightRulesResponse_httpStatus</a> - The response's http
--   status code.
newDisableInsightRulesResponse :: Int -> DisableInsightRulesResponse

-- | <i>See:</i> <a>newPutCompositeAlarm</a> smart constructor.
data PutCompositeAlarm
PutCompositeAlarm' :: Maybe [Text] -> Maybe [Text] -> Maybe [Tag] -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Text -> Text -> PutCompositeAlarm

-- | Create a value of <a>PutCompositeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmActions:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_alarmActions</a> - The actions to execute when
--   this alarm transitions to the <tt>ALARM</tt> state from any other
--   state. Each action is specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt> |
--   <tt>arn:aws:ssm:region:account-id:opsitem:severity </tt>
--   
--   <a>$sel:insufficientDataActions:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_insufficientDataActions</a> - The actions to
--   execute when this alarm transitions to the <tt>INSUFFICIENT_DATA</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
--   
--   <a>$sel:tags:PutCompositeAlarm'</a>, <a>putCompositeAlarm_tags</a> - A
--   list of key-value pairs to associate with the composite alarm. You can
--   associate as many as 50 tags with an alarm.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions, by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   <a>$sel:oKActions:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_oKActions</a> - The actions to execute when this
--   alarm transitions to an <tt>OK</tt> state from any other state. Each
--   action is specified as an Amazon Resource Name (ARN).
--   
--   Valid Values: <tt>arn:aws:sns:region:account-id:sns-topic-name </tt>
--   
--   <a>$sel:actionsEnabled:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_actionsEnabled</a> - Indicates whether actions
--   should be executed during any changes to the alarm state of the
--   composite alarm. The default is <tt>TRUE</tt>.
--   
--   <a>$sel:alarmDescription:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_alarmDescription</a> - The description for the
--   composite alarm.
--   
--   <a>$sel:alarmName:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_alarmName</a> - The name for the composite alarm.
--   This name must be unique within the Region.
--   
--   <a>$sel:alarmRule:PutCompositeAlarm'</a>,
--   <a>putCompositeAlarm_alarmRule</a> - An expression that specifies
--   which other alarms are to be evaluated to determine this composite
--   alarm's state. For each alarm that you reference, you designate a
--   function that specifies whether that alarm needs to be in ALARM state,
--   OK state, or INSUFFICIENT_DATA state. You can use operators (AND, OR
--   and NOT) to combine multiple functions in a single expression. You can
--   use parenthesis to logically group the functions in your expression.
--   
--   You can use either alarm names or ARNs to reference the other alarms
--   that are to be evaluated.
--   
--   Functions can include the following:
--   
--   <ul>
--   <li><tt>ALARM("alarm-name or alarm-ARN")</tt> is TRUE if the named
--   alarm is in ALARM state.</li>
--   <li><tt>OK("alarm-name or alarm-ARN")</tt> is TRUE if the named alarm
--   is in OK state.</li>
--   <li><tt>INSUFFICIENT_DATA("alarm-name or alarm-ARN")</tt> is TRUE if
--   the named alarm is in INSUFFICIENT_DATA state.</li>
--   <li><tt>TRUE</tt> always evaluates to TRUE.</li>
--   <li><tt>FALSE</tt> always evaluates to FALSE.</li>
--   </ul>
--   
--   TRUE and FALSE are useful for testing a complex <tt>AlarmRule</tt>
--   structure, and for testing your alarm actions.
--   
--   Alarm names specified in <tt>AlarmRule</tt> can be surrounded with
--   double-quotes ("), but do not have to be.
--   
--   The following are some examples of <tt>AlarmRule</tt>:
--   
--   <ul>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND
--   ALARM(DiskReadOpsTooHigh)</tt> specifies that the composite alarm goes
--   into ALARM state only if both CPUUtilizationTooHigh and
--   DiskReadOpsTooHigh alarms are in ALARM state.</li>
--   <li><tt>ALARM(CPUUtilizationTooHigh) AND NOT
--   ALARM(DeploymentInProgress)</tt> specifies that the alarm goes to
--   ALARM state if CPUUtilizationTooHigh is in ALARM state and
--   DeploymentInProgress is not in ALARM state. This example reduces alarm
--   noise during a known deployment window.</li>
--   <li><tt>(ALARM(CPUUtilizationTooHigh) OR ALARM(DiskReadOpsTooHigh))
--   AND OK(NetworkOutTooHigh)</tt> goes into ALARM state if
--   CPUUtilizationTooHigh OR DiskReadOpsTooHigh is in ALARM state, and if
--   NetworkOutTooHigh is in OK state. This provides another example of
--   using a composite alarm to prevent noise. This rule ensures that you
--   are not notified with an alarm action on high CPU or disk usage if a
--   known network problem is also occurring.</li>
--   </ul>
--   
--   The <tt>AlarmRule</tt> can specify as many as 100 "children" alarms.
--   The <tt>AlarmRule</tt> expression can have as many as 500 elements.
--   Elements are child alarms, TRUE or FALSE statements, and parentheses.
newPutCompositeAlarm :: Text -> Text -> PutCompositeAlarm

-- | <i>See:</i> <a>newPutCompositeAlarmResponse</a> smart constructor.
data PutCompositeAlarmResponse
PutCompositeAlarmResponse' :: PutCompositeAlarmResponse

-- | Create a value of <a>PutCompositeAlarmResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutCompositeAlarmResponse :: PutCompositeAlarmResponse

-- | <i>See:</i> <a>newDescribeAlarmHistory</a> smart constructor.
data DescribeAlarmHistory
DescribeAlarmHistory' :: Maybe Text -> Maybe ISO8601 -> Maybe [AlarmType] -> Maybe HistoryItemType -> Maybe ScanBy -> Maybe Text -> Maybe ISO8601 -> Maybe Natural -> DescribeAlarmHistory

-- | Create a value of <a>DescribeAlarmHistory</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_nextToken</a> - The token returned by a
--   previous call to indicate that there is more data available.
--   
--   <a>$sel:startDate:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_startDate</a> - The starting date to retrieve
--   alarm history.
--   
--   <a>$sel:alarmTypes:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_alarmTypes</a> - Use this parameter to specify
--   whether you want the operation to return metric alarms or composite
--   alarms. If you omit this parameter, only metric alarms are returned.
--   
--   <a>$sel:historyItemType:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_historyItemType</a> - The type of alarm
--   histories to retrieve.
--   
--   <a>$sel:scanBy:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_scanBy</a> - Specified whether to return the
--   newest or oldest alarm history first. Specify
--   <tt>TimestampDescending</tt> to have the newest event history returned
--   first, and specify <tt>TimestampAscending</tt> to have the oldest
--   history returned first.
--   
--   <a>$sel:alarmName:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_alarmName</a> - The name of the alarm.
--   
--   <a>$sel:endDate:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_endDate</a> - The ending date to retrieve
--   alarm history.
--   
--   <a>$sel:maxRecords:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistory_maxRecords</a> - The maximum number of alarm
--   history records to retrieve.
newDescribeAlarmHistory :: DescribeAlarmHistory

-- | <i>See:</i> <a>newDescribeAlarmHistoryResponse</a> smart constructor.
data DescribeAlarmHistoryResponse
DescribeAlarmHistoryResponse' :: Maybe Text -> Maybe [AlarmHistoryItem] -> Int -> DescribeAlarmHistoryResponse

-- | Create a value of <a>DescribeAlarmHistoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAlarmHistory'</a>,
--   <a>describeAlarmHistoryResponse_nextToken</a> - The token that marks
--   the start of the next batch of returned results.
--   
--   <a>$sel:alarmHistoryItems:DescribeAlarmHistoryResponse'</a>,
--   <a>describeAlarmHistoryResponse_alarmHistoryItems</a> - The alarm
--   histories, in JSON format.
--   
--   <a>$sel:httpStatus:DescribeAlarmHistoryResponse'</a>,
--   <a>describeAlarmHistoryResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAlarmHistoryResponse :: Int -> DescribeAlarmHistoryResponse

-- | <i>See:</i> <a>newPutMetricStream</a> smart constructor.
data PutMetricStream
PutMetricStream' :: Maybe [MetricStreamFilter] -> Maybe [Tag] -> Maybe [MetricStreamFilter] -> Text -> Text -> Text -> MetricStreamOutputFormat -> PutMetricStream

-- | Create a value of <a>PutMetricStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeFilters:PutMetricStream'</a>,
--   <a>putMetricStream_includeFilters</a> - If you specify this parameter,
--   the stream sends only the metrics from the metric namespaces that you
--   specify here.
--   
--   You cannot include <tt>IncludeFilters</tt> and <tt>ExcludeFilters</tt>
--   in the same operation.
--   
--   <a>$sel:tags:PutMetricStream'</a>, <a>putMetricStream_tags</a> - A
--   list of key-value pairs to associate with the metric stream. You can
--   associate as many as 50 tags with a metric stream.
--   
--   Tags can help you organize and categorize your resources. You can also
--   use them to scope user permissions by granting a user permission to
--   access or change only resources with certain tag values.
--   
--   You can use this parameter only when you are creating a new metric
--   stream. If you are using this operation to update an existing metric
--   stream, any tags you specify in this parameter are ignored. To change
--   the tags of an existing metric stream, use <a>TagResource</a> or
--   <a>UntagResource</a>.
--   
--   <a>$sel:excludeFilters:PutMetricStream'</a>,
--   <a>putMetricStream_excludeFilters</a> - If you specify this parameter,
--   the stream sends metrics from all metric namespaces except for the
--   namespaces that you specify here.
--   
--   You cannot include <tt>ExcludeFilters</tt> and <tt>IncludeFilters</tt>
--   in the same operation.
--   
--   <a>$sel:name:PutMetricStream'</a>, <a>putMetricStream_name</a> - If
--   you are creating a new metric stream, this is the name for the new
--   stream. The name must be different than the names of other metric
--   streams in this account and Region.
--   
--   If you are updating a metric stream, specify the name of that stream
--   here.
--   
--   Valid characters are A-Z, a-z, 0-9, "-" and "_".
--   
--   <a>$sel:firehoseArn:PutMetricStream'</a>,
--   <a>putMetricStream_firehoseArn</a> - The ARN of the Amazon Kinesis
--   Firehose delivery stream to use for this metric stream. This Amazon
--   Kinesis Firehose delivery stream must already exist and must be in the
--   same account as the metric stream.
--   
--   <a>$sel:roleArn:PutMetricStream'</a>, <a>putMetricStream_roleArn</a> -
--   The ARN of an IAM role that this metric stream will use to access
--   Amazon Kinesis Firehose resources. This IAM role must already exist
--   and must be in the same account as the metric stream. This IAM role
--   must include the following permissions:
--   
--   <ul>
--   <li>firehose:PutRecord</li>
--   <li>firehose:PutRecordBatch</li>
--   </ul>
--   
--   <a>$sel:outputFormat:PutMetricStream'</a>,
--   <a>putMetricStream_outputFormat</a> - The output format for the
--   stream. Valid values are <tt>json</tt> and <tt>opentelemetry0.7</tt>.
--   For more information about metric stream output formats, see <a>Metric
--   streams output formats</a>.
newPutMetricStream :: Text -> Text -> Text -> MetricStreamOutputFormat -> PutMetricStream

-- | <i>See:</i> <a>newPutMetricStreamResponse</a> smart constructor.
data PutMetricStreamResponse
PutMetricStreamResponse' :: Maybe Text -> Int -> PutMetricStreamResponse

-- | Create a value of <a>PutMetricStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutMetricStreamResponse'</a>,
--   <a>putMetricStreamResponse_arn</a> - The ARN of the metric stream.
--   
--   <a>$sel:httpStatus:PutMetricStreamResponse'</a>,
--   <a>putMetricStreamResponse_httpStatus</a> - The response's http status
--   code.
newPutMetricStreamResponse :: Int -> PutMetricStreamResponse

-- | <i>See:</i> <a>newListMetricStreams</a> smart constructor.
data ListMetricStreams
ListMetricStreams' :: Maybe Text -> Maybe Natural -> ListMetricStreams

-- | Create a value of <a>ListMetricStreams</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMetricStreams'</a>,
--   <a>listMetricStreams_nextToken</a> - Include this value, if it was
--   returned by the previous call, to get the next set of metric streams.
--   
--   <a>$sel:maxResults:ListMetricStreams'</a>,
--   <a>listMetricStreams_maxResults</a> - The maximum number of results to
--   return in one operation.
newListMetricStreams :: ListMetricStreams

-- | <i>See:</i> <a>newListMetricStreamsResponse</a> smart constructor.
data ListMetricStreamsResponse
ListMetricStreamsResponse' :: Maybe Text -> Maybe [MetricStreamEntry] -> Int -> ListMetricStreamsResponse

-- | Create a value of <a>ListMetricStreamsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListMetricStreams'</a>,
--   <a>listMetricStreamsResponse_nextToken</a> - The token that marks the
--   start of the next batch of returned results. You can use this token in
--   a subsequent operation to get the next batch of results.
--   
--   <a>$sel:entries:ListMetricStreamsResponse'</a>,
--   <a>listMetricStreamsResponse_entries</a> - The array of metric stream
--   information.
--   
--   <a>$sel:httpStatus:ListMetricStreamsResponse'</a>,
--   <a>listMetricStreamsResponse_httpStatus</a> - The response's http
--   status code.
newListMetricStreamsResponse :: Int -> ListMetricStreamsResponse

-- | <i>See:</i> <a>newGetMetricStream</a> smart constructor.
data GetMetricStream
GetMetricStream' :: Text -> GetMetricStream

-- | Create a value of <a>GetMetricStream</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetMetricStream'</a>, <a>getMetricStream_name</a> - The
--   name of the metric stream to retrieve information about.
newGetMetricStream :: Text -> GetMetricStream

-- | <i>See:</i> <a>newGetMetricStreamResponse</a> smart constructor.
data GetMetricStreamResponse
GetMetricStreamResponse' :: Maybe [MetricStreamFilter] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe MetricStreamOutputFormat -> Maybe [MetricStreamFilter] -> Int -> GetMetricStreamResponse

-- | Create a value of <a>GetMetricStreamResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeFilters:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_includeFilters</a> - If this array of
--   metric namespaces is present, then these namespaces are the only
--   metric namespaces that are streamed by this metric stream.
--   
--   <a>$sel:firehoseArn:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_firehoseArn</a> - The ARN of the Amazon
--   Kinesis Firehose delivery stream that is used by this metric stream.
--   
--   <a>$sel:roleArn:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_roleArn</a> - The ARN of the IAM role that
--   is used by this metric stream.
--   
--   <a>$sel:arn:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_arn</a> - The ARN of the metric stream.
--   
--   <a>$sel:creationDate:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_creationDate</a> - The date that the metric
--   stream was created.
--   
--   <a>$sel:name:GetMetricStream'</a>, <a>getMetricStreamResponse_name</a>
--   - The name of the metric stream.
--   
--   <a>$sel:lastUpdateDate:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_lastUpdateDate</a> - The date of the most
--   recent update to the metric stream's configuration.
--   
--   <a>$sel:state:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_state</a> - The state of the metric stream.
--   The possible values are <tt>running</tt> and <tt>stopped</tt>.
--   
--   <a>$sel:outputFormat:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_outputFormat</a> -
--   
--   <a>$sel:excludeFilters:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_excludeFilters</a> - If this array of
--   metric namespaces is present, then these namespaces are the only
--   metric namespaces that are not streamed by this metric stream. In this
--   case, all other metric namespaces in the account are streamed by this
--   metric stream.
--   
--   <a>$sel:httpStatus:GetMetricStreamResponse'</a>,
--   <a>getMetricStreamResponse_httpStatus</a> - The response's http status
--   code.
newGetMetricStreamResponse :: Int -> GetMetricStreamResponse

-- | <i>See:</i> <a>newSetAlarmState</a> smart constructor.
data SetAlarmState
SetAlarmState' :: Maybe Text -> Text -> StateValue -> Text -> SetAlarmState

-- | Create a value of <a>SetAlarmState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stateReasonData:SetAlarmState'</a>,
--   <a>setAlarmState_stateReasonData</a> - The reason that this alarm is
--   set to this specific state, in JSON format.
--   
--   For SNS or EC2 alarm actions, this is just informational. But for EC2
--   Auto Scaling or application Auto Scaling alarm actions, the Auto
--   Scaling policy uses the information in this field to take the correct
--   action.
--   
--   <a>$sel:alarmName:SetAlarmState'</a>, <a>setAlarmState_alarmName</a> -
--   The name of the alarm.
--   
--   <a>$sel:stateValue:SetAlarmState'</a>, <a>setAlarmState_stateValue</a>
--   - The value of the state.
--   
--   <a>$sel:stateReason:SetAlarmState'</a>,
--   <a>setAlarmState_stateReason</a> - The reason that this alarm is set
--   to this specific state, in text format.
newSetAlarmState :: Text -> StateValue -> Text -> SetAlarmState

-- | <i>See:</i> <a>newSetAlarmStateResponse</a> smart constructor.
data SetAlarmStateResponse
SetAlarmStateResponse' :: SetAlarmStateResponse

-- | Create a value of <a>SetAlarmStateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetAlarmStateResponse :: SetAlarmStateResponse

-- | <i>See:</i> <a>newDeleteDashboards</a> smart constructor.
data DeleteDashboards
DeleteDashboards' :: [Text] -> DeleteDashboards

-- | Create a value of <a>DeleteDashboards</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardNames:DeleteDashboards'</a>,
--   <a>deleteDashboards_dashboardNames</a> - The dashboards to be deleted.
--   This parameter is required.
newDeleteDashboards :: DeleteDashboards

-- | <i>See:</i> <a>newDeleteDashboardsResponse</a> smart constructor.
data DeleteDashboardsResponse
DeleteDashboardsResponse' :: Int -> DeleteDashboardsResponse

-- | Create a value of <a>DeleteDashboardsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteDashboardsResponse'</a>,
--   <a>deleteDashboardsResponse_httpStatus</a> - The response's http
--   status code.
newDeleteDashboardsResponse :: Int -> DeleteDashboardsResponse

-- | <i>See:</i> <a>newListDashboards</a> smart constructor.
data ListDashboards
ListDashboards' :: Maybe Text -> Maybe Text -> ListDashboards

-- | Create a value of <a>ListDashboards</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDashboards'</a>, <a>listDashboards_nextToken</a>
--   - The token returned by a previous call to indicate that there is more
--   data available.
--   
--   <a>$sel:dashboardNamePrefix:ListDashboards'</a>,
--   <a>listDashboards_dashboardNamePrefix</a> - If you specify this
--   parameter, only the dashboards with names starting with the specified
--   string are listed. The maximum length is 255, and valid characters are
--   A-Z, a-z, 0-9, ".", "-", and "_".
newListDashboards :: ListDashboards

-- | <i>See:</i> <a>newListDashboardsResponse</a> smart constructor.
data ListDashboardsResponse
ListDashboardsResponse' :: Maybe Text -> Maybe [DashboardEntry] -> Int -> ListDashboardsResponse

-- | Create a value of <a>ListDashboardsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDashboards'</a>,
--   <a>listDashboardsResponse_nextToken</a> - The token that marks the
--   start of the next batch of returned results.
--   
--   <a>$sel:dashboardEntries:ListDashboardsResponse'</a>,
--   <a>listDashboardsResponse_dashboardEntries</a> - The list of matching
--   dashboards.
--   
--   <a>$sel:httpStatus:ListDashboardsResponse'</a>,
--   <a>listDashboardsResponse_httpStatus</a> - The response's http status
--   code.
newListDashboardsResponse :: Int -> ListDashboardsResponse

-- | <i>See:</i> <a>newDescribeAlarms</a> smart constructor.
data DescribeAlarms
DescribeAlarms' :: Maybe Text -> Maybe [AlarmType] -> Maybe [Text] -> Maybe Text -> Maybe StateValue -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeAlarms

-- | Create a value of <a>DescribeAlarms</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeAlarms'</a>, <a>describeAlarms_nextToken</a>
--   - The token returned by a previous call to indicate that there is more
--   data available.
--   
--   <a>$sel:alarmTypes:DescribeAlarms'</a>,
--   <a>describeAlarms_alarmTypes</a> - Use this parameter to specify
--   whether you want the operation to return metric alarms or composite
--   alarms. If you omit this parameter, only metric alarms are returned.
--   
--   <a>$sel:alarmNames:DescribeAlarms'</a>,
--   <a>describeAlarms_alarmNames</a> - The names of the alarms to retrieve
--   information about.
--   
--   <a>$sel:alarmNamePrefix:DescribeAlarms'</a>,
--   <a>describeAlarms_alarmNamePrefix</a> - An alarm name prefix. If you
--   specify this parameter, you receive information about all alarms that
--   have names that start with this prefix.
--   
--   If this parameter is specified, you cannot specify
--   <tt>AlarmNames</tt>.
--   
--   <a>$sel:stateValue:DescribeAlarms'</a>,
--   <a>describeAlarms_stateValue</a> - Specify this parameter to receive
--   information only about alarms that are currently in the state that you
--   specify.
--   
--   <a>$sel:actionPrefix:DescribeAlarms'</a>,
--   <a>describeAlarms_actionPrefix</a> - Use this parameter to filter the
--   results of the operation to only those alarms that use a certain alarm
--   action. For example, you could specify the ARN of an SNS topic to find
--   all alarms that send notifications to that topic.
--   
--   <a>$sel:childrenOfAlarmName:DescribeAlarms'</a>,
--   <a>describeAlarms_childrenOfAlarmName</a> - If you use this parameter
--   and specify the name of a composite alarm, the operation returns
--   information about the "children" alarms of the alarm you specify.
--   These are the metric alarms and composite alarms referenced in the
--   <tt>AlarmRule</tt> field of the composite alarm that you specify in
--   <tt>ChildrenOfAlarmName</tt>. Information about the composite alarm
--   that you name in <tt>ChildrenOfAlarmName</tt> is not returned.
--   
--   If you specify <tt>ChildrenOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the <tt>Alarm Name</tt>, <tt>ARN</tt>, <tt>StateValue</tt>
--   (OK/ALARM/INSUFFICIENT_DATA), and <tt>StateUpdatedTimestamp</tt>
--   information are returned by this operation when you use this
--   parameter. To get complete information about these alarms, perform
--   another <tt>DescribeAlarms</tt> operation and specify the parent alarm
--   names in the <tt>AlarmNames</tt> parameter.
--   
--   <a>$sel:parentsOfAlarmName:DescribeAlarms'</a>,
--   <a>describeAlarms_parentsOfAlarmName</a> - If you use this parameter
--   and specify the name of a metric or composite alarm, the operation
--   returns information about the "parent" alarms of the alarm you
--   specify. These are the composite alarms that have <tt>AlarmRule</tt>
--   parameters that reference the alarm named in
--   <tt>ParentsOfAlarmName</tt>. Information about the alarm that you
--   specify in <tt>ParentsOfAlarmName</tt> is not returned.
--   
--   If you specify <tt>ParentsOfAlarmName</tt>, you cannot specify any
--   other parameters in the request except for <tt>MaxRecords</tt> and
--   <tt>NextToken</tt>. If you do so, you receive a validation error.
--   
--   Only the Alarm Name and ARN are returned by this operation when you
--   use this parameter. To get complete information about these alarms,
--   perform another <tt>DescribeAlarms</tt> operation and specify the
--   parent alarm names in the <tt>AlarmNames</tt> parameter.
--   
--   <a>$sel:maxRecords:DescribeAlarms'</a>,
--   <a>describeAlarms_maxRecords</a> - The maximum number of alarm
--   descriptions to retrieve.
newDescribeAlarms :: DescribeAlarms

-- | <i>See:</i> <a>newDescribeAlarmsResponse</a> smart constructor.
data DescribeAlarmsResponse
DescribeAlarmsResponse' :: Maybe [MetricAlarm] -> Maybe Text -> Maybe [CompositeAlarm] -> Int -> DescribeAlarmsResponse

-- | Create a value of <a>DescribeAlarmsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricAlarms:DescribeAlarmsResponse'</a>,
--   <a>describeAlarmsResponse_metricAlarms</a> - The information about any
--   metric alarms returned by the operation.
--   
--   <a>$sel:nextToken:DescribeAlarms'</a>,
--   <a>describeAlarmsResponse_nextToken</a> - The token that marks the
--   start of the next batch of returned results.
--   
--   <a>$sel:compositeAlarms:DescribeAlarmsResponse'</a>,
--   <a>describeAlarmsResponse_compositeAlarms</a> - The information about
--   any composite alarms returned by the operation.
--   
--   <a>$sel:httpStatus:DescribeAlarmsResponse'</a>,
--   <a>describeAlarmsResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAlarmsResponse :: Int -> DescribeAlarmsResponse

-- | <i>See:</i> <a>newEnableInsightRules</a> smart constructor.
data EnableInsightRules
EnableInsightRules' :: [Text] -> EnableInsightRules

-- | Create a value of <a>EnableInsightRules</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleNames:EnableInsightRules'</a>,
--   <a>enableInsightRules_ruleNames</a> - An array of the rule names to
--   enable. If you need to find out the names of your rules, use
--   <a>DescribeInsightRules</a>.
newEnableInsightRules :: EnableInsightRules

-- | <i>See:</i> <a>newEnableInsightRulesResponse</a> smart constructor.
data EnableInsightRulesResponse
EnableInsightRulesResponse' :: Maybe [PartialFailure] -> Int -> EnableInsightRulesResponse

-- | Create a value of <a>EnableInsightRulesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failures:EnableInsightRulesResponse'</a>,
--   <a>enableInsightRulesResponse_failures</a> - An array listing the
--   rules that could not be enabled. You cannot disable or enable built-in
--   rules.
--   
--   <a>$sel:httpStatus:EnableInsightRulesResponse'</a>,
--   <a>enableInsightRulesResponse_httpStatus</a> - The response's http
--   status code.
newEnableInsightRulesResponse :: Int -> EnableInsightRulesResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN of the CloudWatch
--   resource that you want to view tags for.
--   
--   The ARN format of an alarm is
--   <tt>arn:aws:cloudwatch:Region:account-id:alarm:alarm-name </tt>
--   
--   The ARN format of a Contributor Insights rule is
--   <tt>arn:aws:cloudwatch:Region:account-id:insight-rule:insight-rule-name
--   </tt>
--   
--   For more information about ARN format, see <a>Resource Types Defined
--   by Amazon CloudWatch</a> in the <i>Amazon Web Services General
--   Reference</i>.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The list of tag keys and
--   values associated with the resource you specified.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteAnomalyDetector</a> smart constructor.
data DeleteAnomalyDetector
DeleteAnomalyDetector' :: Maybe [Dimension] -> Text -> Text -> Text -> DeleteAnomalyDetector

-- | Create a value of <a>DeleteAnomalyDetector</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dimensions:DeleteAnomalyDetector'</a>,
--   <a>deleteAnomalyDetector_dimensions</a> - The metric dimensions
--   associated with the anomaly detection model to delete.
--   
--   <a>$sel:namespace:DeleteAnomalyDetector'</a>,
--   <a>deleteAnomalyDetector_namespace</a> - The namespace associated with
--   the anomaly detection model to delete.
--   
--   <a>$sel:metricName:DeleteAnomalyDetector'</a>,
--   <a>deleteAnomalyDetector_metricName</a> - The metric name associated
--   with the anomaly detection model to delete.
--   
--   <a>$sel:stat:DeleteAnomalyDetector'</a>,
--   <a>deleteAnomalyDetector_stat</a> - The statistic associated with the
--   anomaly detection model to delete.
newDeleteAnomalyDetector :: Text -> Text -> Text -> DeleteAnomalyDetector

-- | <i>See:</i> <a>newDeleteAnomalyDetectorResponse</a> smart constructor.
data DeleteAnomalyDetectorResponse
DeleteAnomalyDetectorResponse' :: Int -> DeleteAnomalyDetectorResponse

-- | Create a value of <a>DeleteAnomalyDetectorResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteAnomalyDetectorResponse'</a>,
--   <a>deleteAnomalyDetectorResponse_httpStatus</a> - The response's http
--   status code.
newDeleteAnomalyDetectorResponse :: Int -> DeleteAnomalyDetectorResponse

-- | <i>See:</i> <a>newGetMetricData</a> smart constructor.
data GetMetricData
GetMetricData' :: Maybe Text -> Maybe ScanBy -> Maybe LabelOptions -> Maybe Int -> [MetricDataQuery] -> ISO8601 -> ISO8601 -> GetMetricData

-- | Create a value of <a>GetMetricData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMetricData'</a>, <a>getMetricData_nextToken</a> -
--   Include this value, if it was returned by the previous
--   <tt>GetMetricData</tt> operation, to get the next set of data points.
--   
--   <a>$sel:scanBy:GetMetricData'</a>, <a>getMetricData_scanBy</a> - The
--   order in which data points should be returned.
--   <tt>TimestampDescending</tt> returns the newest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
--   <tt>TimestampAscending</tt> returns the oldest data first and
--   paginates when the <tt>MaxDatapoints</tt> limit is reached.
--   
--   <a>$sel:labelOptions:GetMetricData'</a>,
--   <a>getMetricData_labelOptions</a> - This structure includes the
--   <tt>Timezone</tt> parameter, which you can use to specify your time
--   zone so that the labels of returned data display the correct time for
--   your time zone.
--   
--   <a>$sel:maxDatapoints:GetMetricData'</a>,
--   <a>getMetricData_maxDatapoints</a> - The maximum number of data points
--   the request should return before paginating. If you omit this, the
--   default of 100,800 is used.
--   
--   <a>$sel:metricDataQueries:GetMetricData'</a>,
--   <a>getMetricData_metricDataQueries</a> - The metric queries to be
--   returned. A single <tt>GetMetricData</tt> call can include as many as
--   500 <tt>MetricDataQuery</tt> structures. Each of these structures can
--   specify either a metric to retrieve, or a math expression to perform
--   on retrieved data.
--   
--   <a>$sel:startTime:GetMetricData'</a>, <a>getMetricData_startTime</a> -
--   The time stamp indicating the earliest data to be returned.
--   
--   The value specified is inclusive; results include data points with the
--   specified time stamp.
--   
--   CloudWatch rounds the specified time stamp as follows:
--   
--   <ul>
--   <li>Start time less than 15 days ago - Round down to the nearest whole
--   minute. For example, 12:32:34 is rounded down to 12:32:00.</li>
--   <li>Start time between 15 and 63 days ago - Round down to the nearest
--   5-minute clock interval. For example, 12:32:34 is rounded down to
--   12:30:00.</li>
--   <li>Start time greater than 63 days ago - Round down to the nearest
--   1-hour clock interval. For example, 12:32:34 is rounded down to
--   12:00:00.</li>
--   </ul>
--   
--   If you set <tt>Period</tt> to 5, 10, or 30, the start time of your
--   request is rounded down to the nearest time that corresponds to even
--   5-, 10-, or 30-second divisions of a minute. For example, if you make
--   a query at (HH:mm:ss) 01:05:23 for the previous 10-second period, the
--   start time of your request is rounded down and you receive data from
--   01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previous
--   5 minutes of data, using a period of 5 seconds, you receive data
--   timestamped between 15:02:15 and 15:07:15.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>StartTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>StartTime</tt>.
--   
--   <a>$sel:endTime:GetMetricData'</a>, <a>getMetricData_endTime</a> - The
--   time stamp indicating the latest data to be returned.
--   
--   The value specified is exclusive; results include data points up to
--   the specified time stamp.
--   
--   For better performance, specify <tt>StartTime</tt> and
--   <tt>EndTime</tt> values that align with the value of the metric's
--   <tt>Period</tt> and sync up with the beginning and end of an hour. For
--   example, if the <tt>Period</tt> of a metric is 5 minutes, specifying
--   12:05 or 12:30 as <tt>EndTime</tt> can get a faster response from
--   CloudWatch than setting 12:07 or 12:29 as the <tt>EndTime</tt>.
newGetMetricData :: UTCTime -> UTCTime -> GetMetricData

-- | <i>See:</i> <a>newGetMetricDataResponse</a> smart constructor.
data GetMetricDataResponse
GetMetricDataResponse' :: Maybe Text -> Maybe [MetricDataResult] -> Maybe [MessageData] -> Int -> GetMetricDataResponse

-- | Create a value of <a>GetMetricDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetMetricData'</a>,
--   <a>getMetricDataResponse_nextToken</a> - A token that marks the next
--   batch of returned results.
--   
--   <a>$sel:metricDataResults:GetMetricDataResponse'</a>,
--   <a>getMetricDataResponse_metricDataResults</a> - The metrics that are
--   returned, including the metric name, namespace, and dimensions.
--   
--   <a>$sel:messages:GetMetricDataResponse'</a>,
--   <a>getMetricDataResponse_messages</a> - Contains a message about this
--   <tt>GetMetricData</tt> operation, if the operation results in such a
--   message. An example of a message that might be returned is <tt>Maximum
--   number of allowed metrics exceeded</tt>. If there is a message, as
--   much of the operation as possible is still executed.
--   
--   A message appears here only if it is related to the global
--   <tt>GetMetricData</tt> operation. Any message about a specific metric
--   returned by the operation appears in the <tt>MetricDataResult</tt>
--   object returned for that metric.
--   
--   <a>$sel:httpStatus:GetMetricDataResponse'</a>,
--   <a>getMetricDataResponse_httpStatus</a> - The response's http status
--   code.
newGetMetricDataResponse :: Int -> GetMetricDataResponse
newtype AlarmType
AlarmType' :: Text -> AlarmType
[fromAlarmType] :: AlarmType -> Text
pattern AlarmType_CompositeAlarm :: AlarmType
pattern AlarmType_MetricAlarm :: AlarmType
newtype AnomalyDetectorStateValue
AnomalyDetectorStateValue' :: Text -> AnomalyDetectorStateValue
[fromAnomalyDetectorStateValue] :: AnomalyDetectorStateValue -> Text
pattern AnomalyDetectorStateValue_PENDING_TRAINING :: AnomalyDetectorStateValue
pattern AnomalyDetectorStateValue_TRAINED :: AnomalyDetectorStateValue
pattern AnomalyDetectorStateValue_TRAINED_INSUFFICIENT_DATA :: AnomalyDetectorStateValue
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_GreaterThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanUpperThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanLowerOrGreaterThanUpperThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanLowerThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanThreshold :: ComparisonOperator
newtype HistoryItemType
HistoryItemType' :: Text -> HistoryItemType
[fromHistoryItemType] :: HistoryItemType -> Text
pattern HistoryItemType_Action :: HistoryItemType
pattern HistoryItemType_ConfigurationUpdate :: HistoryItemType
pattern HistoryItemType_StateUpdate :: HistoryItemType
newtype MetricStreamOutputFormat
MetricStreamOutputFormat' :: Text -> MetricStreamOutputFormat
[fromMetricStreamOutputFormat] :: MetricStreamOutputFormat -> Text
pattern MetricStreamOutputFormat_Json :: MetricStreamOutputFormat
pattern MetricStreamOutputFormat_Opentelemetry0_7 :: MetricStreamOutputFormat
newtype RecentlyActive
RecentlyActive' :: Text -> RecentlyActive
[fromRecentlyActive] :: RecentlyActive -> Text
pattern RecentlyActive_PT3H :: RecentlyActive
newtype ScanBy
ScanBy' :: Text -> ScanBy
[fromScanBy] :: ScanBy -> Text
pattern ScanBy_TimestampAscending :: ScanBy
pattern ScanBy_TimestampDescending :: ScanBy
newtype StandardUnit
StandardUnit' :: Text -> StandardUnit
[fromStandardUnit] :: StandardUnit -> Text
pattern StandardUnit_Bits :: StandardUnit
pattern StandardUnit_Bits_Second :: StandardUnit
pattern StandardUnit_Bytes :: StandardUnit
pattern StandardUnit_Bytes_Second :: StandardUnit
pattern StandardUnit_Count :: StandardUnit
pattern StandardUnit_Count_Second :: StandardUnit
pattern StandardUnit_Gigabits :: StandardUnit
pattern StandardUnit_Gigabits_Second :: StandardUnit
pattern StandardUnit_Gigabytes :: StandardUnit
pattern StandardUnit_Gigabytes_Second :: StandardUnit
pattern StandardUnit_Kilobits :: StandardUnit
pattern StandardUnit_Kilobits_Second :: StandardUnit
pattern StandardUnit_Kilobytes :: StandardUnit
pattern StandardUnit_Kilobytes_Second :: StandardUnit
pattern StandardUnit_Megabits :: StandardUnit
pattern StandardUnit_Megabits_Second :: StandardUnit
pattern StandardUnit_Megabytes :: StandardUnit
pattern StandardUnit_Megabytes_Second :: StandardUnit
pattern StandardUnit_Microseconds :: StandardUnit
pattern StandardUnit_Milliseconds :: StandardUnit
pattern StandardUnit_None :: StandardUnit
pattern StandardUnit_Percent :: StandardUnit
pattern StandardUnit_Seconds :: StandardUnit
pattern StandardUnit_Terabits :: StandardUnit
pattern StandardUnit_Terabits_Second :: StandardUnit
pattern StandardUnit_Terabytes :: StandardUnit
pattern StandardUnit_Terabytes_Second :: StandardUnit
newtype StateValue
StateValue' :: Text -> StateValue
[fromStateValue] :: StateValue -> Text
pattern StateValue_ALARM :: StateValue
pattern StateValue_INSUFFICIENT_DATA :: StateValue
pattern StateValue_OK :: StateValue
newtype Statistic
Statistic' :: Text -> Statistic
[fromStatistic] :: Statistic -> Text
pattern Statistic_Average :: Statistic
pattern Statistic_Maximum :: Statistic
pattern Statistic_Minimum :: Statistic
pattern Statistic_SampleCount :: Statistic
pattern Statistic_Sum :: Statistic
newtype StatusCode
StatusCode' :: Text -> StatusCode
[fromStatusCode] :: StatusCode -> Text
pattern StatusCode_Complete :: StatusCode
pattern StatusCode_InternalError :: StatusCode
pattern StatusCode_PartialData :: StatusCode

-- | Represents the history of a specific alarm.
--   
--   <i>See:</i> <a>newAlarmHistoryItem</a> smart constructor.
data AlarmHistoryItem
AlarmHistoryItem' :: Maybe Text -> Maybe HistoryItemType -> Maybe Text -> Maybe ISO8601 -> Maybe AlarmType -> Maybe Text -> AlarmHistoryItem

-- | Create a value of <a>AlarmHistoryItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:historySummary:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historySummary</a> - A summary of the alarm
--   history, in text format.
--   
--   <a>$sel:historyItemType:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historyItemType</a> - The type of alarm history
--   item.
--   
--   <a>$sel:alarmName:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_alarmName</a> - The descriptive name for the
--   alarm.
--   
--   <a>$sel:timestamp:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_timestamp</a> - The time stamp for the alarm
--   history item.
--   
--   <a>$sel:alarmType:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_alarmType</a> - The type of alarm, either metric
--   alarm or composite alarm.
--   
--   <a>$sel:historyData:AlarmHistoryItem'</a>,
--   <a>alarmHistoryItem_historyData</a> - Data about the alarm, in JSON
--   format.
newAlarmHistoryItem :: AlarmHistoryItem

-- | An anomaly detection model associated with a particular CloudWatch
--   metric and statistic. You can use the model to display a band of
--   expected normal values when the metric is graphed.
--   
--   <i>See:</i> <a>newAnomalyDetector</a> smart constructor.
data AnomalyDetector
AnomalyDetector' :: Maybe Text -> Maybe AnomalyDetectorConfiguration -> Maybe AnomalyDetectorStateValue -> Maybe Text -> Maybe [Dimension] -> Maybe Text -> AnomalyDetector

-- | Create a value of <a>AnomalyDetector</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:AnomalyDetector'</a>,
--   <a>anomalyDetector_metricName</a> - The name of the metric associated
--   with the anomaly detection model.
--   
--   <a>$sel:configuration:AnomalyDetector'</a>,
--   <a>anomalyDetector_configuration</a> - The configuration specifies
--   details about how the anomaly detection model is to be trained,
--   including time ranges to exclude from use for training the model, and
--   the time zone to use for the metric.
--   
--   <a>$sel:stateValue:AnomalyDetector'</a>,
--   <a>anomalyDetector_stateValue</a> - The current status of the anomaly
--   detector's training. The possible values are <tt>TRAINED |
--   PENDING_TRAINING | TRAINED_INSUFFICIENT_DATA</tt>
--   
--   <a>$sel:namespace:AnomalyDetector'</a>,
--   <a>anomalyDetector_namespace</a> - The namespace of the metric
--   associated with the anomaly detection model.
--   
--   <a>$sel:dimensions:AnomalyDetector'</a>,
--   <a>anomalyDetector_dimensions</a> - The metric dimensions associated
--   with the anomaly detection model.
--   
--   <a>$sel:stat:AnomalyDetector'</a>, <a>anomalyDetector_stat</a> - The
--   statistic associated with the anomaly detection model.
newAnomalyDetector :: AnomalyDetector

-- | The configuration specifies details about how the anomaly detection
--   model is to be trained, including time ranges to exclude from use for
--   training the model and the time zone to use for the metric.
--   
--   <i>See:</i> <a>newAnomalyDetectorConfiguration</a> smart constructor.
data AnomalyDetectorConfiguration
AnomalyDetectorConfiguration' :: Maybe Text -> Maybe [Range] -> AnomalyDetectorConfiguration

-- | Create a value of <a>AnomalyDetectorConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricTimezone:AnomalyDetectorConfiguration'</a>,
--   <a>anomalyDetectorConfiguration_metricTimezone</a> - The time zone to
--   use for the metric. This is useful to enable the model to
--   automatically account for daylight savings time changes if the metric
--   is sensitive to such time changes.
--   
--   To specify a time zone, use the name of the time zone as specified in
--   the standard tz database. For more information, see <a>tz
--   database</a>.
--   
--   <a>$sel:excludedTimeRanges:AnomalyDetectorConfiguration'</a>,
--   <a>anomalyDetectorConfiguration_excludedTimeRanges</a> - An array of
--   time ranges to exclude from use when the anomaly detection model is
--   trained. Use this to make sure that events that could cause unusual
--   values for the metric, such as deployments, aren't used when
--   CloudWatch creates the model.
newAnomalyDetectorConfiguration :: AnomalyDetectorConfiguration

-- | The details about a composite alarm.
--   
--   <i>See:</i> <a>newCompositeAlarm</a> smart constructor.
data CompositeAlarm
CompositeAlarm' :: Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe StateValue -> Maybe ISO8601 -> Maybe [Text] -> Maybe Bool -> Maybe ISO8601 -> Maybe Text -> CompositeAlarm

-- | Create a value of <a>CompositeAlarm</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmActions:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmActions</a> - The actions to execute when this
--   alarm transitions to the ALARM state from any other state. Each action
--   is specified as an Amazon Resource Name (ARN).
--   
--   <a>$sel:alarmArn:CompositeAlarm'</a>, <a>compositeAlarm_alarmArn</a> -
--   The Amazon Resource Name (ARN) of the alarm.
--   
--   <a>$sel:stateReason:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateReason</a> - An explanation for the alarm
--   state, in text format.
--   
--   <a>$sel:stateReasonData:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateReasonData</a> - An explanation for the alarm
--   state, in JSON format.
--   
--   <a>$sel:insufficientDataActions:CompositeAlarm'</a>,
--   <a>compositeAlarm_insufficientDataActions</a> - The actions to execute
--   when this alarm transitions to the INSUFFICIENT_DATA state from any
--   other state. Each action is specified as an Amazon Resource Name
--   (ARN).
--   
--   <a>$sel:alarmRule:CompositeAlarm'</a>, <a>compositeAlarm_alarmRule</a>
--   - The rule that this alarm uses to evaluate its alarm state.
--   
--   <a>$sel:alarmName:CompositeAlarm'</a>, <a>compositeAlarm_alarmName</a>
--   - The name of the alarm.
--   
--   <a>$sel:stateValue:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateValue</a> - The state value for the alarm.
--   
--   <a>$sel:stateUpdatedTimestamp:CompositeAlarm'</a>,
--   <a>compositeAlarm_stateUpdatedTimestamp</a> - The time stamp of the
--   last update to the alarm state.
--   
--   <a>$sel:oKActions:CompositeAlarm'</a>, <a>compositeAlarm_oKActions</a>
--   - The actions to execute when this alarm transitions to the OK state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
--   
--   <a>$sel:actionsEnabled:CompositeAlarm'</a>,
--   <a>compositeAlarm_actionsEnabled</a> - Indicates whether actions
--   should be executed during any changes to the alarm state.
--   
--   <a>$sel:alarmConfigurationUpdatedTimestamp:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmConfigurationUpdatedTimestamp</a> - The time
--   stamp of the last update to the alarm configuration.
--   
--   <a>$sel:alarmDescription:CompositeAlarm'</a>,
--   <a>compositeAlarm_alarmDescription</a> - The description of the alarm.
newCompositeAlarm :: CompositeAlarm

-- | Represents a specific dashboard.
--   
--   <i>See:</i> <a>newDashboardEntry</a> smart constructor.
data DashboardEntry
DashboardEntry' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Integer -> DashboardEntry

-- | Create a value of <a>DashboardEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dashboardArn:DashboardEntry'</a>,
--   <a>dashboardEntry_dashboardArn</a> - The Amazon Resource Name (ARN) of
--   the dashboard.
--   
--   <a>$sel:dashboardName:DashboardEntry'</a>,
--   <a>dashboardEntry_dashboardName</a> - The name of the dashboard.
--   
--   <a>$sel:lastModified:DashboardEntry'</a>,
--   <a>dashboardEntry_lastModified</a> - The time stamp of when the
--   dashboard was last modified, either by an API call or through the
--   console. This number is expressed as the number of milliseconds since
--   Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:size:DashboardEntry'</a>, <a>dashboardEntry_size</a> - The
--   size of the dashboard, in bytes.
newDashboardEntry :: DashboardEntry

-- | An error or warning for the operation.
--   
--   <i>See:</i> <a>newDashboardValidationMessage</a> smart constructor.
data DashboardValidationMessage
DashboardValidationMessage' :: Maybe Text -> Maybe Text -> DashboardValidationMessage

-- | Create a value of <a>DashboardValidationMessage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:message:DashboardValidationMessage'</a>,
--   <a>dashboardValidationMessage_message</a> - A message describing the
--   error or warning.
--   
--   <a>$sel:dataPath:DashboardValidationMessage'</a>,
--   <a>dashboardValidationMessage_dataPath</a> - The data path related to
--   the message.
newDashboardValidationMessage :: DashboardValidationMessage

-- | Encapsulates the statistical data that CloudWatch computes from metric
--   data.
--   
--   <i>See:</i> <a>newDatapoint</a> smart constructor.
data Datapoint
Datapoint' :: Maybe StandardUnit -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe ISO8601 -> Maybe Double -> Maybe Double -> Maybe (HashMap Text Double) -> Datapoint

-- | Create a value of <a>Datapoint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:Datapoint'</a>, <a>datapoint_unit</a> - The standard unit
--   for the data point.
--   
--   <a>$sel:minimum:Datapoint'</a>, <a>datapoint_minimum</a> - The minimum
--   metric value for the data point.
--   
--   <a>$sel:sum:Datapoint'</a>, <a>datapoint_sum</a> - The sum of the
--   metric values for the data point.
--   
--   <a>$sel:sampleCount:Datapoint'</a>, <a>datapoint_sampleCount</a> - The
--   number of metric values that contributed to the aggregate value of
--   this data point.
--   
--   <a>$sel:timestamp:Datapoint'</a>, <a>datapoint_timestamp</a> - The
--   time stamp used for the data point.
--   
--   <a>$sel:average:Datapoint'</a>, <a>datapoint_average</a> - The average
--   of the metric values that correspond to the data point.
--   
--   <a>$sel:maximum:Datapoint'</a>, <a>datapoint_maximum</a> - The maximum
--   metric value for the data point.
--   
--   <a>$sel:extendedStatistics:Datapoint'</a>,
--   <a>datapoint_extendedStatistics</a> - The percentile statistic for the
--   data point.
newDatapoint :: Datapoint

-- | A dimension is a name/value pair that is part of the identity of a
--   metric. You can assign up to 10 dimensions to a metric. Because
--   dimensions are part of the unique identifier for a metric, whenever
--   you add a unique name/value pair to one of your metrics, you are
--   creating a new variation of that metric.
--   
--   <i>See:</i> <a>newDimension</a> smart constructor.
data Dimension
Dimension' :: Text -> Text -> Dimension

-- | Create a value of <a>Dimension</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Dimension'</a>, <a>dimension_name</a> - The name of the
--   dimension. Dimension names must contain only ASCII characters and must
--   include at least one non-whitespace character.
--   
--   <a>$sel:value:Dimension'</a>, <a>dimension_value</a> - The value of
--   the dimension. Dimension values must contain only ASCII characters and
--   must include at least one non-whitespace character.
newDimension :: Text -> Text -> Dimension

-- | Represents filters for a dimension.
--   
--   <i>See:</i> <a>newDimensionFilter</a> smart constructor.
data DimensionFilter
DimensionFilter' :: Maybe Text -> Text -> DimensionFilter

-- | Create a value of <a>DimensionFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:DimensionFilter'</a>, <a>dimensionFilter_value</a> - The
--   value of the dimension to be matched.
--   
--   <a>$sel:name:DimensionFilter'</a>, <a>dimensionFilter_name</a> - The
--   dimension name to be matched.
newDimensionFilter :: Text -> DimensionFilter

-- | This structure contains the definition for a Contributor Insights
--   rule.
--   
--   <i>See:</i> <a>newInsightRule</a> smart constructor.
data InsightRule
InsightRule' :: Text -> Text -> Text -> Text -> InsightRule

-- | Create a value of <a>InsightRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:InsightRule'</a>, <a>insightRule_name</a> - The name of
--   the rule.
--   
--   <a>$sel:state:InsightRule'</a>, <a>insightRule_state</a> - Indicates
--   whether the rule is enabled or disabled.
--   
--   <a>$sel:schema:InsightRule'</a>, <a>insightRule_schema</a> - For rules
--   that you create, this is always <tt>{"Name": "CloudWatchLogRule",
--   "Version": 1}</tt>. For built-in rules, this is <tt>{"Name":
--   "ServiceLogRule", "Version": 1}</tt>
--   
--   <a>$sel:definition:InsightRule'</a>, <a>insightRule_definition</a> -
--   The definition of the rule, as a JSON object. The definition contains
--   the keywords used to define contributors, the value to aggregate on if
--   this rule returns a sum instead of a count, and the filters. For
--   details on the valid syntax, see <a>Contributor Insights Rule
--   Syntax</a>.
newInsightRule :: Text -> Text -> Text -> Text -> InsightRule

-- | One of the unique contributors found by a Contributor Insights rule.
--   If the rule contains multiple keys, then a unique contributor is a
--   unique combination of values from all the keys in the rule.
--   
--   If the rule contains a single key, then each unique contributor is
--   each unique value for this key.
--   
--   For more information, see <a>GetInsightRuleReport</a>.
--   
--   <i>See:</i> <a>newInsightRuleContributor</a> smart constructor.
data InsightRuleContributor
InsightRuleContributor' :: [Text] -> Double -> [InsightRuleContributorDatapoint] -> InsightRuleContributor

-- | Create a value of <a>InsightRuleContributor</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keys:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_keys</a> - One of the log entry field
--   keywords that is used to define contributors for this rule.
--   
--   <a>$sel:approximateAggregateValue:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_approximateAggregateValue</a> - An
--   approximation of the aggregate value that comes from this contributor.
--   
--   <a>$sel:datapoints:InsightRuleContributor'</a>,
--   <a>insightRuleContributor_datapoints</a> - An array of the data points
--   where this contributor is present. Only the data points when this
--   contributor appeared are included in the array.
newInsightRuleContributor :: Double -> InsightRuleContributor

-- | One data point related to one contributor.
--   
--   For more information, see <a>GetInsightRuleReport</a> and
--   <a>InsightRuleContributor</a>.
--   
--   <i>See:</i> <a>newInsightRuleContributorDatapoint</a> smart
--   constructor.
data InsightRuleContributorDatapoint
InsightRuleContributorDatapoint' :: ISO8601 -> Double -> InsightRuleContributorDatapoint

-- | Create a value of <a>InsightRuleContributorDatapoint</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestamp:InsightRuleContributorDatapoint'</a>,
--   <a>insightRuleContributorDatapoint_timestamp</a> - The timestamp of
--   the data point.
--   
--   <a>$sel:approximateValue:InsightRuleContributorDatapoint'</a>,
--   <a>insightRuleContributorDatapoint_approximateValue</a> - The
--   approximate value that this contributor added during this timestamp.
newInsightRuleContributorDatapoint :: UTCTime -> Double -> InsightRuleContributorDatapoint

-- | One data point from the metric time series returned in a Contributor
--   Insights rule report.
--   
--   For more information, see <a>GetInsightRuleReport</a>.
--   
--   <i>See:</i> <a>newInsightRuleMetricDatapoint</a> smart constructor.
data InsightRuleMetricDatapoint
InsightRuleMetricDatapoint' :: Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> Maybe Double -> ISO8601 -> InsightRuleMetricDatapoint

-- | Create a value of <a>InsightRuleMetricDatapoint</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:minimum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_minimum</a> - The minimum value from a
--   single contributor during the time period represented by that data
--   point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:sum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_sum</a> - The sum of the values from all
--   contributors during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:sampleCount:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_sampleCount</a> - The number of
--   occurrences that matched the rule during this data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:maxContributorValue:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_maxContributorValue</a> - The maximum
--   value provided by one contributor during this timestamp. Each
--   timestamp is evaluated separately, so the identity of the max
--   contributor could be different for each timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:average:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_average</a> - The average value from all
--   contributors during the time period represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:uniqueContributors:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_uniqueContributors</a> - The number of
--   unique contributors who published data during this timestamp.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:maximum:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_maximum</a> - The maximum value from a
--   single occurence from a single contributor during the time period
--   represented by that data point.
--   
--   This statistic is returned only if you included it in the
--   <tt>Metrics</tt> array in your request.
--   
--   <a>$sel:timestamp:InsightRuleMetricDatapoint'</a>,
--   <a>insightRuleMetricDatapoint_timestamp</a> - The timestamp of the
--   data point.
newInsightRuleMetricDatapoint :: UTCTime -> InsightRuleMetricDatapoint

-- | This structure includes the <tt>Timezone</tt> parameter, which you can
--   use to specify your time zone so that the labels that are associated
--   with returned metrics display the correct time for your time zone.
--   
--   The <tt>Timezone</tt> value affects a label only if you have a
--   time-based dynamic expression in the label. For more information about
--   dynamic expressions in labels, see <a>Using Dynamic Labels</a>.
--   
--   <i>See:</i> <a>newLabelOptions</a> smart constructor.
data LabelOptions
LabelOptions' :: Maybe Text -> LabelOptions

-- | Create a value of <a>LabelOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timezone:LabelOptions'</a>, <a>labelOptions_timezone</a> - The
--   time zone to use for metric data return in this operation. The format
--   is <tt>+</tt> or <tt>-</tt> followed by four digits. The first two
--   digits indicate the number of hours ahead or behind of UTC, and the
--   final two digits are the number of minutes. For example, +0130
--   indicates a time zone that is 1 hour and 30 minutes ahead of UTC. The
--   default is +0000.
newLabelOptions :: LabelOptions

-- | A message returned by the <tt>GetMetricData</tt>API, including a code
--   and a description.
--   
--   If a cross-Region <tt>GetMetricData</tt> operation fails with a code
--   of <tt>Forbidden</tt> and a value of <tt>Authentication too complex to
--   retrieve cross region data</tt>, you can correct the problem by
--   running the <tt>GetMetricData</tt> operation in the same Region where
--   the metric data is.
--   
--   <i>See:</i> <a>newMessageData</a> smart constructor.
data MessageData
MessageData' :: Maybe Text -> Maybe Text -> MessageData

-- | Create a value of <a>MessageData</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:code:MessageData'</a>, <a>messageData_code</a> - The error
--   code or status code associated with the message.
--   
--   <a>$sel:value:MessageData'</a>, <a>messageData_value</a> - The message
--   text.
newMessageData :: MessageData

-- | Represents a specific metric.
--   
--   <i>See:</i> <a>newMetric</a> smart constructor.
data Metric
Metric' :: Maybe Text -> Maybe Text -> Maybe [Dimension] -> Metric

-- | Create a value of <a>Metric</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricName:Metric'</a>, <a>metric_metricName</a> - The name of
--   the metric. This is a required field.
--   
--   <a>$sel:namespace:Metric'</a>, <a>metric_namespace</a> - The namespace
--   of the metric.
--   
--   <a>$sel:dimensions:Metric'</a>, <a>metric_dimensions</a> - The
--   dimensions for the metric.
newMetric :: Metric

-- | The details about a metric alarm.
--   
--   <i>See:</i> <a>newMetricAlarm</a> smart constructor.
data MetricAlarm
MetricAlarm' :: Maybe Double -> Maybe Natural -> Maybe Text -> Maybe ComparisonOperator -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe StandardUnit -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe [MetricDataQuery] -> Maybe Text -> Maybe StateValue -> Maybe ISO8601 -> Maybe [Text] -> Maybe Statistic -> Maybe Text -> Maybe [Dimension] -> Maybe Natural -> Maybe Bool -> Maybe ISO8601 -> Maybe Natural -> Maybe Text -> MetricAlarm

-- | Create a value of <a>MetricAlarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:threshold:MetricAlarm'</a>, <a>metricAlarm_threshold</a> - The
--   value to compare with the specified statistic.
--   
--   <a>$sel:datapointsToAlarm:MetricAlarm'</a>,
--   <a>metricAlarm_datapointsToAlarm</a> - The number of data points that
--   must be breaching to trigger the alarm.
--   
--   <a>$sel:evaluateLowSampleCountPercentile:MetricAlarm'</a>,
--   <a>metricAlarm_evaluateLowSampleCountPercentile</a> - Used only for
--   alarms based on percentiles. If <tt>ignore</tt>, the alarm state does
--   not change during periods with too few data points to be statistically
--   significant. If <tt>evaluate</tt> or this parameter is not used, the
--   alarm is always evaluated and possibly changes state no matter how
--   many data points are available.
--   
--   <a>$sel:comparisonOperator:MetricAlarm'</a>,
--   <a>metricAlarm_comparisonOperator</a> - The arithmetic operation to
--   use when comparing the specified statistic and threshold. The
--   specified statistic value is used as the first operand.
--   
--   <a>$sel:extendedStatistic:MetricAlarm'</a>,
--   <a>metricAlarm_extendedStatistic</a> - The percentile statistic for
--   the metric associated with the alarm. Specify a value between p0.0 and
--   p100.
--   
--   <a>$sel:thresholdMetricId:MetricAlarm'</a>,
--   <a>metricAlarm_thresholdMetricId</a> - In an alarm based on an anomaly
--   detection model, this is the ID of the <tt>ANOMALY_DETECTION_BAND</tt>
--   function used as the threshold for the alarm.
--   
--   <a>$sel:alarmActions:MetricAlarm'</a>, <a>metricAlarm_alarmActions</a>
--   - The actions to execute when this alarm transitions to the
--   <tt>ALARM</tt> state from any other state. Each action is specified as
--   an Amazon Resource Name (ARN).
--   
--   <a>$sel:unit:MetricAlarm'</a>, <a>metricAlarm_unit</a> - The unit of
--   the metric associated with the alarm.
--   
--   <a>$sel:alarmArn:MetricAlarm'</a>, <a>metricAlarm_alarmArn</a> - The
--   Amazon Resource Name (ARN) of the alarm.
--   
--   <a>$sel:metricName:MetricAlarm'</a>, <a>metricAlarm_metricName</a> -
--   The name of the metric associated with the alarm, if this is an alarm
--   based on a single metric.
--   
--   <a>$sel:stateReason:MetricAlarm'</a>, <a>metricAlarm_stateReason</a> -
--   An explanation for the alarm state, in text format.
--   
--   <a>$sel:stateReasonData:MetricAlarm'</a>,
--   <a>metricAlarm_stateReasonData</a> - An explanation for the alarm
--   state, in JSON format.
--   
--   <a>$sel:insufficientDataActions:MetricAlarm'</a>,
--   <a>metricAlarm_insufficientDataActions</a> - The actions to execute
--   when this alarm transitions to the <tt>INSUFFICIENT_DATA</tt> state
--   from any other state. Each action is specified as an Amazon Resource
--   Name (ARN).
--   
--   <a>$sel:treatMissingData:MetricAlarm'</a>,
--   <a>metricAlarm_treatMissingData</a> - Sets how this alarm is to handle
--   missing data points. If this parameter is omitted, the default
--   behavior of <tt>missing</tt> is used.
--   
--   <a>$sel:metrics:MetricAlarm'</a>, <a>metricAlarm_metrics</a> - An
--   array of MetricDataQuery structures, used in an alarm based on a
--   metric math expression. Each structure either retrieves a metric or
--   performs a math expression. One item in the Metrics array is the math
--   expression that the alarm watches. This expression by designated by
--   having <tt>ReturnData</tt> set to true.
--   
--   <a>$sel:alarmName:MetricAlarm'</a>, <a>metricAlarm_alarmName</a> - The
--   name of the alarm.
--   
--   <a>$sel:stateValue:MetricAlarm'</a>, <a>metricAlarm_stateValue</a> -
--   The state value for the alarm.
--   
--   <a>$sel:stateUpdatedTimestamp:MetricAlarm'</a>,
--   <a>metricAlarm_stateUpdatedTimestamp</a> - The time stamp of the last
--   update to the alarm state.
--   
--   <a>$sel:oKActions:MetricAlarm'</a>, <a>metricAlarm_oKActions</a> - The
--   actions to execute when this alarm transitions to the <tt>OK</tt>
--   state from any other state. Each action is specified as an Amazon
--   Resource Name (ARN).
--   
--   <a>$sel:statistic:MetricAlarm'</a>, <a>metricAlarm_statistic</a> - The
--   statistic for the metric associated with the alarm, other than
--   percentile. For percentile statistics, use <tt>ExtendedStatistic</tt>.
--   
--   <a>$sel:namespace:MetricAlarm'</a>, <a>metricAlarm_namespace</a> - The
--   namespace of the metric associated with the alarm.
--   
--   <a>$sel:dimensions:MetricAlarm'</a>, <a>metricAlarm_dimensions</a> -
--   The dimensions for the metric associated with the alarm.
--   
--   <a>$sel:evaluationPeriods:MetricAlarm'</a>,
--   <a>metricAlarm_evaluationPeriods</a> - The number of periods over
--   which data is compared to the specified threshold.
--   
--   <a>$sel:actionsEnabled:MetricAlarm'</a>,
--   <a>metricAlarm_actionsEnabled</a> - Indicates whether actions should
--   be executed during any changes to the alarm state.
--   
--   <a>$sel:alarmConfigurationUpdatedTimestamp:MetricAlarm'</a>,
--   <a>metricAlarm_alarmConfigurationUpdatedTimestamp</a> - The time stamp
--   of the last update to the alarm configuration.
--   
--   <a>$sel:period:MetricAlarm'</a>, <a>metricAlarm_period</a> - The
--   period, in seconds, over which the statistic is applied.
--   
--   <a>$sel:alarmDescription:MetricAlarm'</a>,
--   <a>metricAlarm_alarmDescription</a> - The description of the alarm.
newMetricAlarm :: MetricAlarm

-- | This structure is used in both <tt>GetMetricData</tt> and
--   <tt>PutMetricAlarm</tt>. The supported use of this structure is
--   different for those two operations.
--   
--   When used in <tt>GetMetricData</tt>, it indicates the metric data to
--   return, and whether this call is just retrieving a batch set of data
--   for one metric, or is performing a math expression on metric data. A
--   single <tt>GetMetricData</tt> call can include up to 500
--   <tt>MetricDataQuery</tt> structures.
--   
--   When used in <tt>PutMetricAlarm</tt>, it enables you to create an
--   alarm based on a metric math expression. Each <tt>MetricDataQuery</tt>
--   in the array specifies either a metric to retrieve, or a math
--   expression to be performed on retrieved metrics. A single
--   <tt>PutMetricAlarm</tt> call can include up to 20
--   <tt>MetricDataQuery</tt> structures in the array. The 20 structures
--   can include as many as 10 structures that contain a
--   <tt>MetricStat</tt> parameter to retrieve a metric, and as many as 10
--   structures that contain the <tt>Expression</tt> parameter to perform a
--   math expression. Of those <tt>Expression</tt> structures, one must
--   have <tt>True</tt> as the value for <tt>ReturnData</tt>. The result of
--   this expression is the value the alarm watches.
--   
--   Any expression used in a <tt>PutMetricAlarm</tt> operation must return
--   a single time series. For more information, see <a>Metric Math Syntax
--   and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   Some of the parameters of this structure also have different uses
--   whether you are using this structure in a <tt>GetMetricData</tt>
--   operation or a <tt>PutMetricAlarm</tt> operation. These differences
--   are explained in the following parameter list.
--   
--   <i>See:</i> <a>newMetricDataQuery</a> smart constructor.
data MetricDataQuery
MetricDataQuery' :: Maybe Text -> Maybe MetricStat -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Text -> MetricDataQuery

-- | Create a value of <a>MetricDataQuery</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:MetricDataQuery'</a>,
--   <a>metricDataQuery_accountId</a> - The ID of the account where the
--   metrics are located, if this is a cross-account alarm.
--   
--   Use this field only for <tt>PutMetricAlarm</tt> operations. It is not
--   used in <tt>GetMetricData</tt> operations.
--   
--   <a>$sel:metricStat:MetricDataQuery'</a>,
--   <a>metricDataQuery_metricStat</a> - The metric to be returned, along
--   with statistics, period, and units. Use this parameter only if this
--   object is retrieving a metric and not performing a math expression on
--   returned data.
--   
--   Within one MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
--   
--   <a>$sel:returnData:MetricDataQuery'</a>,
--   <a>metricDataQuery_returnData</a> - When used in
--   <tt>GetMetricData</tt>, this option indicates whether to return the
--   timestamps and raw data values of this metric. If you are performing
--   this call just to do math expressions and do not also need the raw
--   data returned, you can specify <tt>False</tt>. If you omit this, the
--   default of <tt>True</tt> is used.
--   
--   When used in <tt>PutMetricAlarm</tt>, specify <tt>True</tt> for the
--   one expression result to use as the alarm. For all other metrics and
--   expressions in the same <tt>PutMetricAlarm</tt> operation, specify
--   <tt>ReturnData</tt> as False.
--   
--   <a>$sel:label:MetricDataQuery'</a>, <a>metricDataQuery_label</a> - A
--   human-readable label for this metric or expression. This is especially
--   useful if this is an expression, so that you know what the value
--   represents. If the metric or expression is shown in a CloudWatch
--   dashboard widget, the label is shown. If Label is omitted, CloudWatch
--   generates a default.
--   
--   You can put dynamic expressions into a label, so that it is more
--   descriptive. For more information, see <a>Using Dynamic Labels</a>.
--   
--   <a>$sel:period:MetricDataQuery'</a>, <a>metricDataQuery_period</a> -
--   The granularity, in seconds, of the returned data points. For metrics
--   with regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> operation
--   that includes a <tt>StorageResolution of 1 second</tt>.
--   
--   <a>$sel:expression:MetricDataQuery'</a>,
--   <a>metricDataQuery_expression</a> - The math expression to be
--   performed on the returned data, if this object is performing a math
--   expression. This expression can use the <tt>Id</tt> of the other
--   metrics to refer to those metrics, and can also use the <tt>Id</tt> of
--   other expressions to use the result of those expressions. For more
--   information about metric math expressions, see <a>Metric Math Syntax
--   and Functions</a> in the <i>Amazon CloudWatch User Guide</i>.
--   
--   Within each MetricDataQuery object, you must specify either
--   <tt>Expression</tt> or <tt>MetricStat</tt> but not both.
--   
--   <a>$sel:id:MetricDataQuery'</a>, <a>metricDataQuery_id</a> - A short
--   name used to tie this object to the results in the response. This name
--   must be unique within a single call to <tt>GetMetricData</tt>. If you
--   are performing math expressions on this set of data, this name
--   represents that data and can serve as a variable in the mathematical
--   expression. The valid characters are letters, numbers, and underscore.
--   The first character must be a lowercase letter.
newMetricDataQuery :: Text -> MetricDataQuery

-- | A <tt>GetMetricData</tt> call returns an array of
--   <tt>MetricDataResult</tt> structures. Each of these structures
--   includes the data points for that metric, along with the timestamps of
--   those data points and other identifying information.
--   
--   <i>See:</i> <a>newMetricDataResult</a> smart constructor.
data MetricDataResult
MetricDataResult' :: Maybe [Double] -> Maybe Text -> Maybe [ISO8601] -> Maybe StatusCode -> Maybe Text -> Maybe [MessageData] -> MetricDataResult

-- | Create a value of <a>MetricDataResult</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:MetricDataResult'</a>, <a>metricDataResult_values</a> -
--   The data points for the metric corresponding to <tt>Timestamps</tt>.
--   The number of values always matches the number of timestamps and the
--   timestamp for Values[x] is Timestamps[x].
--   
--   <a>$sel:id:MetricDataResult'</a>, <a>metricDataResult_id</a> - The
--   short name you specified to represent this metric.
--   
--   <a>$sel:timestamps:MetricDataResult'</a>,
--   <a>metricDataResult_timestamps</a> - The timestamps for the data
--   points, formatted in Unix timestamp format. The number of timestamps
--   always matches the number of values and the value for Timestamps[x] is
--   Values[x].
--   
--   <a>$sel:statusCode:MetricDataResult'</a>,
--   <a>metricDataResult_statusCode</a> - The status of the returned data.
--   <tt>Complete</tt> indicates that all data points in the requested time
--   range were returned. <tt>PartialData</tt> means that an incomplete set
--   of data points were returned. You can use the <tt>NextToken</tt> value
--   that was returned and repeat your request to get more data points.
--   <tt>NextToken</tt> is not returned if you are performing a math
--   expression. <tt>InternalError</tt> indicates that an error occurred.
--   Retry your request using <tt>NextToken</tt>, if present.
--   
--   <a>$sel:label:MetricDataResult'</a>, <a>metricDataResult_label</a> -
--   The human-readable label associated with the data.
--   
--   <a>$sel:messages:MetricDataResult'</a>,
--   <a>metricDataResult_messages</a> - A list of messages with additional
--   information about the data returned.
newMetricDataResult :: MetricDataResult

-- | Encapsulates the information sent to either create a metric or add new
--   values to be aggregated into an existing metric.
--   
--   <i>See:</i> <a>newMetricDatum</a> smart constructor.
data MetricDatum
MetricDatum' :: Maybe Natural -> Maybe StandardUnit -> Maybe [Double] -> Maybe [Double] -> Maybe StatisticSet -> Maybe ISO8601 -> Maybe Double -> Maybe [Dimension] -> Text -> MetricDatum

-- | Create a value of <a>MetricDatum</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:storageResolution:MetricDatum'</a>,
--   <a>metricDatum_storageResolution</a> - Valid values are 1 and 60.
--   Setting this to 1 specifies this metric as a high-resolution metric,
--   so that CloudWatch stores the metric with sub-minute resolution down
--   to one second. Setting this to 60 specifies this metric as a
--   regular-resolution metric, which CloudWatch stores at 1-minute
--   resolution. Currently, high resolution is available only for custom
--   metrics. For more information about high-resolution metrics, see
--   <a>High-Resolution Metrics</a> in the <i>Amazon CloudWatch User
--   Guide</i>.
--   
--   This field is optional, if you do not specify it the default of 60 is
--   used.
--   
--   <a>$sel:unit:MetricDatum'</a>, <a>metricDatum_unit</a> - When you are
--   using a <tt>Put</tt> operation, this defines what unit you want to use
--   when storing the metric.
--   
--   In a <tt>Get</tt> operation, this displays the unit that is used for
--   the metric.
--   
--   <a>$sel:values:MetricDatum'</a>, <a>metricDatum_values</a> - Array of
--   numbers representing the values for the metric during the period. Each
--   unique value is listed just once in this array, and the corresponding
--   number in the <tt>Counts</tt> array specifies the number of times that
--   value occurred during the period. You can include up to 150 unique
--   values in each <tt>PutMetricData</tt> action that specifies a
--   <tt>Values</tt> array.
--   
--   Although the <tt>Values</tt> array accepts numbers of type
--   <tt>Double</tt>, CloudWatch rejects values that are either too small
--   or too large. Values must be in the range of -2^360 to 2^360. In
--   addition, special values (for example, NaN, +Infinity, -Infinity) are
--   not supported.
--   
--   <a>$sel:counts:MetricDatum'</a>, <a>metricDatum_counts</a> - Array of
--   numbers that is used along with the <tt>Values</tt> array. Each number
--   in the <tt>Count</tt> array is the number of times the corresponding
--   value in the <tt>Values</tt> array occurred during the period.
--   
--   If you omit the <tt>Counts</tt> array, the default of 1 is used as the
--   value for each count. If you include a <tt>Counts</tt> array, it must
--   include the same amount of values as the <tt>Values</tt> array.
--   
--   <a>$sel:statisticValues:MetricDatum'</a>,
--   <a>metricDatum_statisticValues</a> - The statistical values for the
--   metric.
--   
--   <a>$sel:timestamp:MetricDatum'</a>, <a>metricDatum_timestamp</a> - The
--   time the metric data was received, expressed as the number of
--   milliseconds since Jan 1, 1970 00:00:00 UTC.
--   
--   <a>$sel:value:MetricDatum'</a>, <a>metricDatum_value</a> - The value
--   for the metric.
--   
--   Although the parameter accepts numbers of type Double, CloudWatch
--   rejects values that are either too small or too large. Values must be
--   in the range of -2^360 to 2^360. In addition, special values (for
--   example, NaN, +Infinity, -Infinity) are not supported.
--   
--   <a>$sel:dimensions:MetricDatum'</a>, <a>metricDatum_dimensions</a> -
--   The dimensions associated with the metric.
--   
--   <a>$sel:metricName:MetricDatum'</a>, <a>metricDatum_metricName</a> -
--   The name of the metric.
newMetricDatum :: Text -> MetricDatum

-- | This structure defines the metric to be returned, along with the
--   statistics, period, and units.
--   
--   <i>See:</i> <a>newMetricStat</a> smart constructor.
data MetricStat
MetricStat' :: Maybe StandardUnit -> Metric -> Natural -> Text -> MetricStat

-- | Create a value of <a>MetricStat</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:MetricStat'</a>, <a>metricStat_unit</a> - When you are
--   using a <tt>Put</tt> operation, this defines what unit you want to use
--   when storing the metric.
--   
--   In a <tt>Get</tt> operation, if you omit <tt>Unit</tt> then all data
--   that was collected with any unit is returned, along with the
--   corresponding units that were specified when the data was reported to
--   CloudWatch. If you specify a unit, the operation returns only data
--   that was collected with that unit specified. If you specify a unit
--   that does not match the data collected, the results of the operation
--   are null. CloudWatch does not perform unit conversions.
--   
--   <a>$sel:metric:MetricStat'</a>, <a>metricStat_metric</a> - The metric
--   to return, including the metric name, namespace, and dimensions.
--   
--   <a>$sel:period:MetricStat'</a>, <a>metricStat_period</a> - The
--   granularity, in seconds, of the returned data points. For metrics with
--   regular resolution, a period can be as short as one minute (60
--   seconds) and must be a multiple of 60. For high-resolution metrics
--   that are collected at intervals of less than one minute, the period
--   can be 1, 5, 10, 30, 60, or any multiple of 60. High-resolution
--   metrics are those metrics stored by a <tt>PutMetricData</tt> call that
--   includes a <tt>StorageResolution</tt> of 1 second.
--   
--   If the <tt>StartTime</tt> parameter specifies a time stamp that is
--   greater than 3 hours ago, you must specify the period as follows or no
--   data points in that time range is returned:
--   
--   <ul>
--   <li>Start time between 3 hours and 15 days ago - Use a multiple of 60
--   seconds (1 minute).</li>
--   <li>Start time between 15 and 63 days ago - Use a multiple of 300
--   seconds (5 minutes).</li>
--   <li>Start time greater than 63 days ago - Use a multiple of 3600
--   seconds (1 hour).</li>
--   </ul>
--   
--   <a>$sel:stat:MetricStat'</a>, <a>metricStat_stat</a> - The statistic
--   to return. It can include any CloudWatch statistic or extended
--   statistic.
newMetricStat :: Metric -> Natural -> Text -> MetricStat

-- | This structure contains the configuration information about one metric
--   stream.
--   
--   <i>See:</i> <a>newMetricStreamEntry</a> smart constructor.
data MetricStreamEntry
MetricStreamEntry' :: Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe ISO8601 -> Maybe Text -> Maybe MetricStreamOutputFormat -> MetricStreamEntry

-- | Create a value of <a>MetricStreamEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:firehoseArn:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_firehoseArn</a> - The ARN of the Kinesis Firehose
--   devlivery stream that is used for this metric stream.
--   
--   <a>$sel:arn:MetricStreamEntry'</a>, <a>metricStreamEntry_arn</a> - The
--   ARN of the metric stream.
--   
--   <a>$sel:creationDate:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_creationDate</a> - The date that the metric
--   stream was originally created.
--   
--   <a>$sel:name:MetricStreamEntry'</a>, <a>metricStreamEntry_name</a> -
--   The name of the metric stream.
--   
--   <a>$sel:lastUpdateDate:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_lastUpdateDate</a> - The date that the
--   configuration of this metric stream was most recently updated.
--   
--   <a>$sel:state:MetricStreamEntry'</a>, <a>metricStreamEntry_state</a> -
--   The current state of this stream. Valid values are <tt>running</tt>
--   and <tt>stopped</tt>.
--   
--   <a>$sel:outputFormat:MetricStreamEntry'</a>,
--   <a>metricStreamEntry_outputFormat</a> - The output format of this
--   metric stream. Valid values are <tt>json</tt> and
--   <tt>opentelemetry0.7</tt>.
newMetricStreamEntry :: MetricStreamEntry

-- | This structure contains the name of one of the metric namespaces that
--   is listed in a filter of a metric stream.
--   
--   <i>See:</i> <a>newMetricStreamFilter</a> smart constructor.
data MetricStreamFilter
MetricStreamFilter' :: Maybe Text -> MetricStreamFilter

-- | Create a value of <a>MetricStreamFilter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:MetricStreamFilter'</a>,
--   <a>metricStreamFilter_namespace</a> - The name of the metric namespace
--   in the filter.
newMetricStreamFilter :: MetricStreamFilter

-- | This array is empty if the API operation was successful for all the
--   rules specified in the request. If the operation could not process one
--   of the rules, the following data is returned for each of those rules.
--   
--   <i>See:</i> <a>newPartialFailure</a> smart constructor.
data PartialFailure
PartialFailure' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PartialFailure

-- | Create a value of <a>PartialFailure</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exceptionType:PartialFailure'</a>,
--   <a>partialFailure_exceptionType</a> - The type of error.
--   
--   <a>$sel:failureCode:PartialFailure'</a>,
--   <a>partialFailure_failureCode</a> - The code of the error.
--   
--   <a>$sel:failureDescription:PartialFailure'</a>,
--   <a>partialFailure_failureDescription</a> - A description of the error.
--   
--   <a>$sel:failureResource:PartialFailure'</a>,
--   <a>partialFailure_failureResource</a> - The specified rule that could
--   not be deleted.
newPartialFailure :: PartialFailure

-- | Specifies one range of days or times to exclude from use for training
--   an anomaly detection model.
--   
--   <i>See:</i> <a>newRange</a> smart constructor.
data Range
Range' :: ISO8601 -> ISO8601 -> Range

-- | Create a value of <a>Range</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:Range'</a>, <a>range_startTime</a> - The start time
--   of the range to exclude. The format is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>.
--   For example, <tt>2019-07-01T23:59:59</tt>.
--   
--   <a>$sel:endTime:Range'</a>, <a>range_endTime</a> - The end time of the
--   range to exclude. The format is <tt>yyyy-MM-dd'T'HH:mm:ss</tt>. For
--   example, <tt>2019-07-01T23:59:59</tt>.
newRange :: UTCTime -> UTCTime -> Range

-- | Represents a set of statistics that describes a specific metric.
--   
--   <i>See:</i> <a>newStatisticSet</a> smart constructor.
data StatisticSet
StatisticSet' :: Double -> Double -> Double -> Double -> StatisticSet

-- | Create a value of <a>StatisticSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sampleCount:StatisticSet'</a>, <a>statisticSet_sampleCount</a>
--   - The number of samples used for the statistic set.
--   
--   <a>$sel:sum:StatisticSet'</a>, <a>statisticSet_sum</a> - The sum of
--   values for the sample set.
--   
--   <a>$sel:minimum:StatisticSet'</a>, <a>statisticSet_minimum</a> - The
--   minimum value of the sample set.
--   
--   <a>$sel:maximum:StatisticSet'</a>, <a>statisticSet_maximum</a> - The
--   maximum value of the sample set.
newStatisticSet :: Double -> Double -> Double -> Double -> StatisticSet

-- | A key-value pair associated with a CloudWatch resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - A string that you can use to
--   assign a value. The combination of tag keys and values can help you
--   organize and categorize your resources.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value for the specified
--   tag key.
newTag :: Text -> Text -> Tag
