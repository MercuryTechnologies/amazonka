-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-application-autoscalingZSamazonka-application-autoscaling
@version 1.6.1


module Network.AWS.ApplicationAutoScaling.Types.AdjustmentType
newtype AdjustmentType
AdjustmentType' :: Text -> AdjustmentType
[fromAdjustmentType] :: AdjustmentType -> Text
pattern AdjustmentType_ChangeInCapacity :: AdjustmentType
pattern AdjustmentType_ExactCapacity :: AdjustmentType
pattern AdjustmentType_PercentChangeInCapacity :: AdjustmentType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Network.AWS.Data.Text.ToText Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Network.AWS.Data.Text.FromText Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance GHC.Classes.Ord Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.AdjustmentType.AdjustmentType


module Network.AWS.ApplicationAutoScaling.Types.Alarm

-- | Represents a CloudWatch alarm associated with a scaling policy.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Text -> Text -> Alarm

-- | The name of the alarm.
[$sel:alarmName:Alarm'] :: Alarm -> Text

-- | The Amazon Resource Name (ARN) of the alarm.
[$sel:alarmARN:Alarm'] :: Alarm -> Text

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmName:Alarm'</a>, <a>alarm_alarmName</a> - The name of the
--   alarm.
--   
--   <a>$sel:alarmARN:Alarm'</a>, <a>alarm_alarmARN</a> - The Amazon
--   Resource Name (ARN) of the alarm.
newAlarm :: Text -> Text -> Alarm

-- | The name of the alarm.
alarm_alarmName :: Lens' Alarm Text

-- | The Amazon Resource Name (ARN) of the alarm.
alarm_alarmARN :: Lens' Alarm Text
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.Alarm.Alarm
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.Alarm.Alarm
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.Alarm.Alarm
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.Alarm.Alarm
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.Alarm.Alarm
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.Alarm.Alarm
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.Alarm.Alarm


module Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType
newtype MetricAggregationType
MetricAggregationType' :: Text -> MetricAggregationType
[fromMetricAggregationType] :: MetricAggregationType -> Text
pattern MetricAggregationType_Average :: MetricAggregationType
pattern MetricAggregationType_Maximum :: MetricAggregationType
pattern MetricAggregationType_Minimum :: MetricAggregationType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Network.AWS.Data.Text.ToText Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Network.AWS.Data.Text.FromText Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance GHC.Classes.Ord Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.MetricAggregationType.MetricAggregationType


module Network.AWS.ApplicationAutoScaling.Types.MetricDimension

-- | Describes the dimension names and values associated with a metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | The name of the dimension.
[$sel:name:MetricDimension'] :: MetricDimension -> Text

-- | The value of the dimension.
[$sel:value:MetricDimension'] :: MetricDimension -> Text

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.MetricDimension.MetricDimension
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.MetricDimension.MetricDimension
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.MetricDimension.MetricDimension
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.MetricDimension.MetricDimension
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.MetricDimension.MetricDimension
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.MetricDimension.MetricDimension
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.MetricDimension.MetricDimension
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.MetricDimension.MetricDimension


module Network.AWS.ApplicationAutoScaling.Types.MetricStatistic
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
instance Network.AWS.Data.XML.ToXML Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.XML.FromXML Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Log.ToLog Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Text.ToText Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Network.AWS.Data.Text.FromText Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Classes.Ord Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.MetricStatistic.MetricStatistic


module Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification

-- | Represents a CloudWatch metric of your choosing for a target tracking
--   scaling policy to use with Application Auto Scaling.
--   
--   For information about the available metrics for a service, see
--   <a>Amazon Web Services Services That Publish CloudWatch Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.
--   
--   To create your customized metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases, and increase when capacity
--   decreases.</li>
--   </ul>
--   
--   For more information about CloudWatch, see <a>Amazon CloudWatch
--   Concepts</a>.
--   
--   <i>See:</i> <a>newCustomizedMetricSpecification</a> smart constructor.
data CustomizedMetricSpecification
CustomizedMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | The unit of the metric.
[$sel:unit:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Maybe Text

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
[$sel:dimensions:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Maybe [MetricDimension]

-- | The name of the metric.
[$sel:metricName:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Text

-- | The namespace of the metric.
[$sel:namespace:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Text

-- | The statistic of the metric.
[$sel:statistic:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> MetricStatistic

-- | Create a value of <a>CustomizedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_unit</a> - The unit of the metric.
--   
--   <a>$sel:dimensions:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_dimensions</a> - The dimensions of
--   the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
--   
--   <a>$sel:metricName:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_namespace</a> - The namespace of the
--   metric.
--   
--   <a>$sel:statistic:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_statistic</a> - The statistic of the
--   metric.
newCustomizedMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | The unit of the metric.
customizedMetricSpecification_unit :: Lens' CustomizedMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
customizedMetricSpecification_dimensions :: Lens' CustomizedMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedMetricSpecification_metricName :: Lens' CustomizedMetricSpecification Text

-- | The namespace of the metric.
customizedMetricSpecification_namespace :: Lens' CustomizedMetricSpecification Text

-- | The statistic of the metric.
customizedMetricSpecification_statistic :: Lens' CustomizedMetricSpecification MetricStatistic
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.CustomizedMetricSpecification.CustomizedMetricSpecification


module Network.AWS.ApplicationAutoScaling.Types.MetricType
newtype MetricType
MetricType' :: Text -> MetricType
[fromMetricType] :: MetricType -> Text
pattern MetricType_ALBRequestCountPerTarget :: MetricType
pattern MetricType_AppStreamAverageCapacityUtilization :: MetricType
pattern MetricType_CassandraReadCapacityUtilization :: MetricType
pattern MetricType_CassandraWriteCapacityUtilization :: MetricType
pattern MetricType_ComprehendInferenceUtilization :: MetricType
pattern MetricType_DynamoDBReadCapacityUtilization :: MetricType
pattern MetricType_DynamoDBWriteCapacityUtilization :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageCPUUtilization :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageNetworkIn :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageNetworkOut :: MetricType
pattern MetricType_ECSServiceAverageCPUUtilization :: MetricType
pattern MetricType_ECSServiceAverageMemoryUtilization :: MetricType
pattern MetricType_ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage :: MetricType
pattern MetricType_ElastiCachePrimaryEngineCPUUtilization :: MetricType
pattern MetricType_ElastiCacheReplicaEngineCPUUtilization :: MetricType
pattern MetricType_KafkaBrokerStorageUtilization :: MetricType
pattern MetricType_LambdaProvisionedConcurrencyUtilization :: MetricType
pattern MetricType_RDSReaderAverageCPUUtilization :: MetricType
pattern MetricType_RDSReaderAverageDatabaseConnections :: MetricType
pattern MetricType_SageMakerVariantInvocationsPerInstance :: MetricType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Text.ToText Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Network.AWS.Data.Text.FromText Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance GHC.Classes.Ord Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.MetricType.MetricType


module Network.AWS.ApplicationAutoScaling.Types.PolicyType
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_StepScaling :: PolicyType
pattern PolicyType_TargetTrackingScaling :: PolicyType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Network.AWS.Data.Text.ToText Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Network.AWS.Data.Text.FromText Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance GHC.Classes.Ord Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.PolicyType.PolicyType


module Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification

-- | Represents a predefined metric for a target tracking scaling policy to
--   use with Application Auto Scaling.
--   
--   Only the Amazon Web Services that you're using send metrics to Amazon
--   CloudWatch. To determine whether a desired metric already exists by
--   looking up its namespace and dimension using the CloudWatch metrics
--   dashboard in the console, follow the procedure in <a>Building
--   dashboards with CloudWatch</a> in the <i>Application Auto Scaling User
--   Guide</i>.
--   
--   <i>See:</i> <a>newPredefinedMetricSpecification</a> smart constructor.
data PredefinedMetricSpecification
PredefinedMetricSpecification' :: Maybe Text -> MetricType -> PredefinedMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group attached
--   to the Spot Fleet request or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredefinedMetricSpecification'] :: PredefinedMetricSpecification -> Maybe Text

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Spot Fleet requests and ECS services.
[$sel:predefinedMetricType:PredefinedMetricSpecification'] :: PredefinedMetricSpecification -> MetricType

-- | Create a value of <a>PredefinedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_resourceLabel</a> - Identifies the
--   resource associated with the metric type. You can't specify a resource
--   label unless the metric type is <tt>ALBRequestCountPerTarget</tt> and
--   there is a target group attached to the Spot Fleet request or ECS
--   service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   <a>$sel:predefinedMetricType:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_predefinedMetricType</a> - The metric
--   type. The <tt>ALBRequestCountPerTarget</tt> metric type applies only
--   to Spot Fleet requests and ECS services.
newPredefinedMetricSpecification :: MetricType -> PredefinedMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group attached
--   to the Spot Fleet request or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedMetricSpecification_resourceLabel :: Lens' PredefinedMetricSpecification (Maybe Text)

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Spot Fleet requests and ECS services.
predefinedMetricSpecification_predefinedMetricType :: Lens' PredefinedMetricSpecification MetricType
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.PredefinedMetricSpecification.PredefinedMetricSpecification


module Network.AWS.ApplicationAutoScaling.Types.ScalableDimension
newtype ScalableDimension
ScalableDimension' :: Text -> ScalableDimension
[fromScalableDimension] :: ScalableDimension -> Text
pattern ScalableDimension_Appstream_fleet_DesiredCapacity :: ScalableDimension
pattern ScalableDimension_Cassandra_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Cassandra_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Comprehend_document_classifier_endpoint_DesiredInferenceUnits :: ScalableDimension
pattern ScalableDimension_Comprehend_entity_recognizer_endpoint_DesiredInferenceUnits :: ScalableDimension
pattern ScalableDimension_Custom_resource_ResourceType_Property :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Ec2_spot_fleet_request_TargetCapacity :: ScalableDimension
pattern ScalableDimension_Ecs_service_DesiredCount :: ScalableDimension
pattern ScalableDimension_Elasticache_replication_group_NodeGroups :: ScalableDimension
pattern ScalableDimension_Elasticache_replication_group_Replicas :: ScalableDimension
pattern ScalableDimension_Elasticmapreduce_instancegroup_InstanceCount :: ScalableDimension
pattern ScalableDimension_Kafka_broker_storage_VolumeSize :: ScalableDimension
pattern ScalableDimension_Lambda_function_ProvisionedConcurrency :: ScalableDimension
pattern ScalableDimension_Rds_cluster_ReadReplicaCount :: ScalableDimension
pattern ScalableDimension_Sagemaker_variant_DesiredInstanceCount :: ScalableDimension
instance Network.AWS.Data.XML.ToXML Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.XML.FromXML Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Log.ToLog Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Text.ToText Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Network.AWS.Data.Text.FromText Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance GHC.Classes.Ord Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.ScalableDimension.ScalableDimension


module Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction

-- | Represents the minimum and maximum capacity for a scheduled action.
--   
--   <i>See:</i> <a>newScalableTargetAction</a> smart constructor.
data ScalableTargetAction
ScalableTargetAction' :: Maybe Int -> Maybe Int -> ScalableTargetAction

-- | The maximum capacity.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
[$sel:maxCapacity:ScalableTargetAction'] :: ScalableTargetAction -> Maybe Int

-- | The minimum capacity.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
[$sel:minCapacity:ScalableTargetAction'] :: ScalableTargetAction -> Maybe Int

-- | Create a value of <a>ScalableTargetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxCapacity:ScalableTargetAction'</a>,
--   <a>scalableTargetAction_maxCapacity</a> - The maximum capacity.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:minCapacity:ScalableTargetAction'</a>,
--   <a>scalableTargetAction_minCapacity</a> - The minimum capacity.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
newScalableTargetAction :: ScalableTargetAction

-- | The maximum capacity.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
scalableTargetAction_maxCapacity :: Lens' ScalableTargetAction (Maybe Int)

-- | The minimum capacity.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
scalableTargetAction_minCapacity :: Lens' ScalableTargetAction (Maybe Int)
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction.ScalableTargetAction
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction.ScalableTargetAction
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction.ScalableTargetAction
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction.ScalableTargetAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction.ScalableTargetAction
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction.ScalableTargetAction
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction.ScalableTargetAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.ScalableTargetAction.ScalableTargetAction


module Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode
newtype ScalingActivityStatusCode
ScalingActivityStatusCode' :: Text -> ScalingActivityStatusCode
[fromScalingActivityStatusCode] :: ScalingActivityStatusCode -> Text
pattern ScalingActivityStatusCode_Failed :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_InProgress :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Overridden :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Pending :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Successful :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Unfulfilled :: ScalingActivityStatusCode
instance Network.AWS.Data.XML.ToXML Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.XML.FromXML Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Log.ToLog Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Text.ToText Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Network.AWS.Data.Text.FromText Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Classes.Ord Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.ScalingActivityStatusCode.ScalingActivityStatusCode


module Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace
newtype ServiceNamespace
ServiceNamespace' :: Text -> ServiceNamespace
[fromServiceNamespace] :: ServiceNamespace -> Text
pattern ServiceNamespace_Appstream :: ServiceNamespace
pattern ServiceNamespace_Cassandra :: ServiceNamespace
pattern ServiceNamespace_Comprehend :: ServiceNamespace
pattern ServiceNamespace_Custom_resource :: ServiceNamespace
pattern ServiceNamespace_Dynamodb :: ServiceNamespace
pattern ServiceNamespace_Ec2 :: ServiceNamespace
pattern ServiceNamespace_Ecs :: ServiceNamespace
pattern ServiceNamespace_Elasticache :: ServiceNamespace
pattern ServiceNamespace_Elasticmapreduce :: ServiceNamespace
pattern ServiceNamespace_Kafka :: ServiceNamespace
pattern ServiceNamespace_Lambda :: ServiceNamespace
pattern ServiceNamespace_Rds :: ServiceNamespace
pattern ServiceNamespace_Sagemaker :: ServiceNamespace
instance Network.AWS.Data.XML.ToXML Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.XML.FromXML Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Log.ToLog Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Text.ToText Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Network.AWS.Data.Text.FromText Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance GHC.Classes.Ord Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.ServiceNamespace.ServiceNamespace


module Network.AWS.ApplicationAutoScaling.Types.ScheduledAction

-- | Represents a scheduled action.
--   
--   <i>See:</i> <a>newScheduledAction</a> smart constructor.
data ScheduledAction
ScheduledAction' :: Maybe POSIX -> Maybe POSIX -> Maybe ScalableDimension -> Maybe Text -> Maybe ScalableTargetAction -> Text -> Text -> ServiceNamespace -> Text -> Text -> POSIX -> ScheduledAction

-- | The date and time that the action is scheduled to begin, in UTC.
[$sel:startTime:ScheduledAction'] :: ScheduledAction -> Maybe POSIX

-- | The date and time that the action is scheduled to end, in UTC.
[$sel:endTime:ScheduledAction'] :: ScheduledAction -> Maybe POSIX

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:ScheduledAction'] :: ScheduledAction -> Maybe ScalableDimension

-- | The time zone used when referring to the date and time of a scheduled
--   action, when the scheduled action uses an at or cron expression.
[$sel:timezone:ScheduledAction'] :: ScheduledAction -> Maybe Text

-- | The new minimum and maximum capacity. You can set both values or just
--   one. At the scheduled time, if the current capacity is below the
--   minimum capacity, Application Auto Scaling scales out to the minimum
--   capacity. If the current capacity is above the maximum capacity,
--   Application Auto Scaling scales in to the maximum capacity.
[$sel:scalableTargetAction:ScheduledAction'] :: ScheduledAction -> Maybe ScalableTargetAction

-- | The name of the scheduled action.
[$sel:scheduledActionName:ScheduledAction'] :: ScheduledAction -> Text

-- | The Amazon Resource Name (ARN) of the scheduled action.
[$sel:scheduledActionARN:ScheduledAction'] :: ScheduledAction -> Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
[$sel:serviceNamespace:ScheduledAction'] :: ScheduledAction -> ServiceNamespace

-- | The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
[$sel:schedule:ScheduledAction'] :: ScheduledAction -> Text

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScheduledAction'] :: ScheduledAction -> Text

-- | The date and time that the scheduled action was created.
[$sel:creationTime:ScheduledAction'] :: ScheduledAction -> POSIX

-- | Create a value of <a>ScheduledAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:ScheduledAction'</a>,
--   <a>scheduledAction_startTime</a> - The date and time that the action
--   is scheduled to begin, in UTC.
--   
--   <a>$sel:endTime:ScheduledAction'</a>, <a>scheduledAction_endTime</a> -
--   The date and time that the action is scheduled to end, in UTC.
--   
--   <a>$sel:scalableDimension:ScheduledAction'</a>,
--   <a>scheduledAction_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:timezone:ScheduledAction'</a>, <a>scheduledAction_timezone</a>
--   - The time zone used when referring to the date and time of a
--   scheduled action, when the scheduled action uses an at or cron
--   expression.
--   
--   <a>$sel:scalableTargetAction:ScheduledAction'</a>,
--   <a>scheduledAction_scalableTargetAction</a> - The new minimum and
--   maximum capacity. You can set both values or just one. At the
--   scheduled time, if the current capacity is below the minimum capacity,
--   Application Auto Scaling scales out to the minimum capacity. If the
--   current capacity is above the maximum capacity, Application Auto
--   Scaling scales in to the maximum capacity.
--   
--   <a>$sel:scheduledActionName:ScheduledAction'</a>,
--   <a>scheduledAction_scheduledActionName</a> - The name of the scheduled
--   action.
--   
--   <a>$sel:scheduledActionARN:ScheduledAction'</a>,
--   <a>scheduledAction_scheduledActionARN</a> - The Amazon Resource Name
--   (ARN) of the scheduled action.
--   
--   <a>$sel:serviceNamespace:ScheduledAction'</a>,
--   <a>scheduledAction_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:schedule:ScheduledAction'</a>, <a>scheduledAction_schedule</a>
--   - The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:resourceId:ScheduledAction'</a>,
--   <a>scheduledAction_resourceId</a> - The identifier of the resource
--   associated with the scaling policy. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:creationTime:ScheduledAction'</a>,
--   <a>scheduledAction_creationTime</a> - The date and time that the
--   scheduled action was created.
newScheduledAction :: Text -> Text -> ServiceNamespace -> Text -> Text -> UTCTime -> ScheduledAction

-- | The date and time that the action is scheduled to begin, in UTC.
scheduledAction_startTime :: Lens' ScheduledAction (Maybe UTCTime)

-- | The date and time that the action is scheduled to end, in UTC.
scheduledAction_endTime :: Lens' ScheduledAction (Maybe UTCTime)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scheduledAction_scalableDimension :: Lens' ScheduledAction (Maybe ScalableDimension)

-- | The time zone used when referring to the date and time of a scheduled
--   action, when the scheduled action uses an at or cron expression.
scheduledAction_timezone :: Lens' ScheduledAction (Maybe Text)

-- | The new minimum and maximum capacity. You can set both values or just
--   one. At the scheduled time, if the current capacity is below the
--   minimum capacity, Application Auto Scaling scales out to the minimum
--   capacity. If the current capacity is above the maximum capacity,
--   Application Auto Scaling scales in to the maximum capacity.
scheduledAction_scalableTargetAction :: Lens' ScheduledAction (Maybe ScalableTargetAction)

-- | The name of the scheduled action.
scheduledAction_scheduledActionName :: Lens' ScheduledAction Text

-- | The Amazon Resource Name (ARN) of the scheduled action.
scheduledAction_scheduledActionARN :: Lens' ScheduledAction Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scheduledAction_serviceNamespace :: Lens' ScheduledAction ServiceNamespace

-- | The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
scheduledAction_schedule :: Lens' ScheduledAction Text

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scheduledAction_resourceId :: Lens' ScheduledAction Text

-- | The date and time that the scheduled action was created.
scheduledAction_creationTime :: Lens' ScheduledAction UTCTime
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.ScheduledAction.ScheduledAction
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.ScheduledAction.ScheduledAction
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.ScheduledAction.ScheduledAction
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.ScheduledAction.ScheduledAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.ScheduledAction.ScheduledAction
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.ScheduledAction.ScheduledAction
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.ScheduledAction.ScheduledAction


module Network.AWS.ApplicationAutoScaling.Types.ScalingActivity

-- | Represents a scaling activity.
--   
--   <i>See:</i> <a>newScalingActivity</a> smart constructor.
data ScalingActivity
ScalingActivity' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> Text -> Text -> POSIX -> ScalingActivityStatusCode -> ScalingActivity

-- | A simple message about the current status of the scaling activity.
[$sel:statusMessage:ScalingActivity'] :: ScalingActivity -> Maybe Text

-- | The Unix timestamp for when the scaling activity ended.
[$sel:endTime:ScalingActivity'] :: ScalingActivity -> Maybe POSIX

-- | The details about the scaling activity.
[$sel:details:ScalingActivity'] :: ScalingActivity -> Maybe Text

-- | The unique identifier of the scaling activity.
[$sel:activityId:ScalingActivity'] :: ScalingActivity -> Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
[$sel:serviceNamespace:ScalingActivity'] :: ScalingActivity -> ServiceNamespace

-- | The identifier of the resource associated with the scaling activity.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalingActivity'] :: ScalingActivity -> Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:ScalingActivity'] :: ScalingActivity -> ScalableDimension

-- | A simple description of what action the scaling activity intends to
--   accomplish.
[$sel:description:ScalingActivity'] :: ScalingActivity -> Text

-- | A simple description of what caused the scaling activity to happen.
[$sel:cause:ScalingActivity'] :: ScalingActivity -> Text

-- | The Unix timestamp for when the scaling activity began.
[$sel:startTime:ScalingActivity'] :: ScalingActivity -> POSIX

-- | Indicates the status of the scaling activity.
[$sel:statusCode:ScalingActivity'] :: ScalingActivity -> ScalingActivityStatusCode

-- | Create a value of <a>ScalingActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ScalingActivity'</a>,
--   <a>scalingActivity_statusMessage</a> - A simple message about the
--   current status of the scaling activity.
--   
--   <a>$sel:endTime:ScalingActivity'</a>, <a>scalingActivity_endTime</a> -
--   The Unix timestamp for when the scaling activity ended.
--   
--   <a>$sel:details:ScalingActivity'</a>, <a>scalingActivity_details</a> -
--   The details about the scaling activity.
--   
--   <a>$sel:activityId:ScalingActivity'</a>,
--   <a>scalingActivity_activityId</a> - The unique identifier of the
--   scaling activity.
--   
--   <a>$sel:serviceNamespace:ScalingActivity'</a>,
--   <a>scalingActivity_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalingActivity'</a>,
--   <a>scalingActivity_resourceId</a> - The identifier of the resource
--   associated with the scaling activity. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingActivity'</a>,
--   <a>scalingActivity_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:description:ScalingActivity'</a>,
--   <a>scalingActivity_description</a> - A simple description of what
--   action the scaling activity intends to accomplish.
--   
--   <a>$sel:cause:ScalingActivity'</a>, <a>scalingActivity_cause</a> - A
--   simple description of what caused the scaling activity to happen.
--   
--   <a>$sel:startTime:ScalingActivity'</a>,
--   <a>scalingActivity_startTime</a> - The Unix timestamp for when the
--   scaling activity began.
--   
--   <a>$sel:statusCode:ScalingActivity'</a>,
--   <a>scalingActivity_statusCode</a> - Indicates the status of the
--   scaling activity.
newScalingActivity :: Text -> ServiceNamespace -> Text -> ScalableDimension -> Text -> Text -> UTCTime -> ScalingActivityStatusCode -> ScalingActivity

-- | A simple message about the current status of the scaling activity.
scalingActivity_statusMessage :: Lens' ScalingActivity (Maybe Text)

-- | The Unix timestamp for when the scaling activity ended.
scalingActivity_endTime :: Lens' ScalingActivity (Maybe UTCTime)

-- | The details about the scaling activity.
scalingActivity_details :: Lens' ScalingActivity (Maybe Text)

-- | The unique identifier of the scaling activity.
scalingActivity_activityId :: Lens' ScalingActivity Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalingActivity_serviceNamespace :: Lens' ScalingActivity ServiceNamespace

-- | The identifier of the resource associated with the scaling activity.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalingActivity_resourceId :: Lens' ScalingActivity Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalingActivity_scalableDimension :: Lens' ScalingActivity ScalableDimension

-- | A simple description of what action the scaling activity intends to
--   accomplish.
scalingActivity_description :: Lens' ScalingActivity Text

-- | A simple description of what caused the scaling activity to happen.
scalingActivity_cause :: Lens' ScalingActivity Text

-- | The Unix timestamp for when the scaling activity began.
scalingActivity_startTime :: Lens' ScalingActivity UTCTime

-- | Indicates the status of the scaling activity.
scalingActivity_statusCode :: Lens' ScalingActivity ScalingActivityStatusCode
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.ScalingActivity.ScalingActivity
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.ScalingActivity.ScalingActivity
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.ScalingActivity.ScalingActivity
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.ScalingActivity.ScalingActivity
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.ScalingActivity.ScalingActivity
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.ScalingActivity.ScalingActivity
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.ScalingActivity.ScalingActivity


module Network.AWS.ApplicationAutoScaling.Types.StepAdjustment

-- | Represents a step adjustment for a
--   <a>StepScalingPolicyConfiguration</a>. Describes an adjustment based
--   on the difference between the value of the aggregated CloudWatch
--   metric and the breach threshold that you've defined for the alarm.
--   
--   For the following examples, suppose that you have an alarm with a
--   breach threshold of 50:
--   
--   <ul>
--   <li>To trigger the adjustment when the metric is greater than or equal
--   to 50 and less than 60, specify a lower bound of 0 and an upper bound
--   of 10.</li>
--   <li>To trigger the adjustment when the metric is greater than 40 and
--   less than or equal to 50, specify a lower bound of -10 and an upper
--   bound of 0.</li>
--   </ul>
--   
--   There are a few rules for the step adjustments for your step policy:
--   
--   <ul>
--   <li>The ranges of your step adjustments can't overlap or have a
--   gap.</li>
--   <li>At most one step adjustment can have a null lower bound. If one
--   step adjustment has a negative lower bound, then there must be a step
--   adjustment with a null lower bound.</li>
--   <li>At most one step adjustment can have a null upper bound. If one
--   step adjustment has a positive upper bound, then there must be a step
--   adjustment with a null upper bound.</li>
--   <li>The upper and lower bound can't be null in the same step
--   adjustment.</li>
--   </ul>
--   
--   <i>See:</i> <a>newStepAdjustment</a> smart constructor.
data StepAdjustment
StepAdjustment' :: Maybe Double -> Maybe Double -> Int -> StepAdjustment

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
[$sel:metricIntervalUpperBound:StepAdjustment'] :: StepAdjustment -> Maybe Double

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
[$sel:metricIntervalLowerBound:StepAdjustment'] :: StepAdjustment -> Maybe Double

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity. For exact capacity, you must
--   specify a positive value.
[$sel:scalingAdjustment:StepAdjustment'] :: StepAdjustment -> Int

-- | Create a value of <a>StepAdjustment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricIntervalUpperBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalUpperBound</a> - The upper bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the upper bound is
--   exclusive (the metric must be less than the threshold plus the upper
--   bound). Otherwise, it is inclusive (the metric must be less than or
--   equal to the threshold plus the upper bound). A null value indicates
--   positive infinity.
--   
--   The upper bound must be greater than the lower bound.
--   
--   <a>$sel:metricIntervalLowerBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalLowerBound</a> - The lower bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the lower bound is
--   inclusive (the metric must be greater than or equal to the threshold
--   plus the lower bound). Otherwise, it is exclusive (the metric must be
--   greater than the threshold plus the lower bound). A null value
--   indicates negative infinity.
--   
--   <a>$sel:scalingAdjustment:StepAdjustment'</a>,
--   <a>stepAdjustment_scalingAdjustment</a> - The amount by which to
--   scale, based on the specified adjustment type. A positive value adds
--   to the current capacity while a negative number removes from the
--   current capacity. For exact capacity, you must specify a positive
--   value.
newStepAdjustment :: Int -> StepAdjustment

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
stepAdjustment_metricIntervalUpperBound :: Lens' StepAdjustment (Maybe Double)

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
stepAdjustment_metricIntervalLowerBound :: Lens' StepAdjustment (Maybe Double)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity. For exact capacity, you must
--   specify a positive value.
stepAdjustment_scalingAdjustment :: Lens' StepAdjustment Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.StepAdjustment.StepAdjustment
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.StepAdjustment.StepAdjustment
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.StepAdjustment.StepAdjustment
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.StepAdjustment.StepAdjustment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.StepAdjustment.StepAdjustment
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.StepAdjustment.StepAdjustment
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.StepAdjustment.StepAdjustment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.StepAdjustment.StepAdjustment


module Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration

-- | Represents a step scaling policy configuration to use with Application
--   Auto Scaling.
--   
--   <i>See:</i> <a>newStepScalingPolicyConfiguration</a> smart
--   constructor.
data StepScalingPolicyConfiguration
StepScalingPolicyConfiguration' :: Maybe [StepAdjustment] -> Maybe MetricAggregationType -> Maybe Int -> Maybe AdjustmentType -> Maybe Int -> StepScalingPolicyConfiguration

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
--   
--   At least one step adjustment is required if you are adding a new step
--   scaling policy configuration.
[$sel:stepAdjustments:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe [StepAdjustment]

-- | The aggregation type for the CloudWatch metrics. Valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
[$sel:metricAggregationType:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe MetricAggregationType

-- | The amount of time, in seconds, to wait for a previous scaling
--   activity to take effect.
--   
--   With scale-out policies, the intention is to continuously (but not
--   excessively) scale out. After Application Auto Scaling successfully
--   scales out using a step scaling policy, it starts to calculate the
--   cooldown time. The scaling policy won't increase the desired capacity
--   again unless either a larger scale out is triggered or the cooldown
--   period ends. While the cooldown period is in effect, capacity added by
--   the initiating scale-out activity is calculated as part of the desired
--   capacity for the next scale-out activity. For example, when an alarm
--   triggers a step scaling policy to increase the capacity by 2, the
--   scaling activity completes successfully, and a cooldown period starts.
--   If the alarm triggers again during the cooldown period but at a more
--   aggressive step adjustment of 3, the previous increase of 2 is
--   considered part of the current capacity. Therefore, only 1 is added to
--   the capacity.
--   
--   With scale-in policies, the intention is to scale in conservatively to
--   protect your application’s availability, so scale-in activities are
--   blocked until the cooldown period has expired. However, if another
--   alarm triggers a scale-out activity during the cooldown period after a
--   scale-in activity, Application Auto Scaling scales out the target
--   immediately. In this case, the cooldown period for the scale-in
--   activity stops and doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
[$sel:cooldown:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe Int

-- | Specifies how the <tt>ScalingAdjustment</tt> value in a
--   <a>StepAdjustment</a> is interpreted (for example, an absolute number
--   or a percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   <tt>AdjustmentType</tt> is required if you are adding a new step
--   scaling policy configuration.
[$sel:adjustmentType:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe AdjustmentType

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Amazon ECS service by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the service
--   has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1.
--   However, because you specified a <tt>MinAdjustmentMagnitude</tt> of 2,
--   Application Auto Scaling scales out the service by 2 tasks.
[$sel:minAdjustmentMagnitude:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe Int

-- | Create a value of <a>StepScalingPolicyConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepAdjustments:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_stepAdjustments</a> - A set of
--   adjustments that enable you to scale based on the size of the alarm
--   breach.
--   
--   At least one step adjustment is required if you are adding a new step
--   scaling policy configuration.
--   
--   <a>$sel:metricAggregationType:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_metricAggregationType</a> - The
--   aggregation type for the CloudWatch metrics. Valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
--   
--   <a>$sel:cooldown:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_cooldown</a> - The amount of time,
--   in seconds, to wait for a previous scaling activity to take effect.
--   
--   With scale-out policies, the intention is to continuously (but not
--   excessively) scale out. After Application Auto Scaling successfully
--   scales out using a step scaling policy, it starts to calculate the
--   cooldown time. The scaling policy won't increase the desired capacity
--   again unless either a larger scale out is triggered or the cooldown
--   period ends. While the cooldown period is in effect, capacity added by
--   the initiating scale-out activity is calculated as part of the desired
--   capacity for the next scale-out activity. For example, when an alarm
--   triggers a step scaling policy to increase the capacity by 2, the
--   scaling activity completes successfully, and a cooldown period starts.
--   If the alarm triggers again during the cooldown period but at a more
--   aggressive step adjustment of 3, the previous increase of 2 is
--   considered part of the current capacity. Therefore, only 1 is added to
--   the capacity.
--   
--   With scale-in policies, the intention is to scale in conservatively to
--   protect your application’s availability, so scale-in activities are
--   blocked until the cooldown period has expired. However, if another
--   alarm triggers a scale-out activity during the cooldown period after a
--   scale-in activity, Application Auto Scaling scales out the target
--   immediately. In this case, the cooldown period for the scale-in
--   activity stops and doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   <a>$sel:adjustmentType:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_adjustmentType</a> - Specifies how
--   the <tt>ScalingAdjustment</tt> value in a <a>StepAdjustment</a> is
--   interpreted (for example, an absolute number or a percentage). The
--   valid values are <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>,
--   and <tt>PercentChangeInCapacity</tt>.
--   
--   <tt>AdjustmentType</tt> is required if you are adding a new step
--   scaling policy configuration.
--   
--   <a>$sel:minAdjustmentMagnitude:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_minAdjustmentMagnitude</a> - The
--   minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Amazon ECS service by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the service
--   has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1.
--   However, because you specified a <tt>MinAdjustmentMagnitude</tt> of 2,
--   Application Auto Scaling scales out the service by 2 tasks.
newStepScalingPolicyConfiguration :: StepScalingPolicyConfiguration

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
--   
--   At least one step adjustment is required if you are adding a new step
--   scaling policy configuration.
stepScalingPolicyConfiguration_stepAdjustments :: Lens' StepScalingPolicyConfiguration (Maybe [StepAdjustment])

-- | The aggregation type for the CloudWatch metrics. Valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
stepScalingPolicyConfiguration_metricAggregationType :: Lens' StepScalingPolicyConfiguration (Maybe MetricAggregationType)

-- | The amount of time, in seconds, to wait for a previous scaling
--   activity to take effect.
--   
--   With scale-out policies, the intention is to continuously (but not
--   excessively) scale out. After Application Auto Scaling successfully
--   scales out using a step scaling policy, it starts to calculate the
--   cooldown time. The scaling policy won't increase the desired capacity
--   again unless either a larger scale out is triggered or the cooldown
--   period ends. While the cooldown period is in effect, capacity added by
--   the initiating scale-out activity is calculated as part of the desired
--   capacity for the next scale-out activity. For example, when an alarm
--   triggers a step scaling policy to increase the capacity by 2, the
--   scaling activity completes successfully, and a cooldown period starts.
--   If the alarm triggers again during the cooldown period but at a more
--   aggressive step adjustment of 3, the previous increase of 2 is
--   considered part of the current capacity. Therefore, only 1 is added to
--   the capacity.
--   
--   With scale-in policies, the intention is to scale in conservatively to
--   protect your application’s availability, so scale-in activities are
--   blocked until the cooldown period has expired. However, if another
--   alarm triggers a scale-out activity during the cooldown period after a
--   scale-in activity, Application Auto Scaling scales out the target
--   immediately. In this case, the cooldown period for the scale-in
--   activity stops and doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
stepScalingPolicyConfiguration_cooldown :: Lens' StepScalingPolicyConfiguration (Maybe Int)

-- | Specifies how the <tt>ScalingAdjustment</tt> value in a
--   <a>StepAdjustment</a> is interpreted (for example, an absolute number
--   or a percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   <tt>AdjustmentType</tt> is required if you are adding a new step
--   scaling policy configuration.
stepScalingPolicyConfiguration_adjustmentType :: Lens' StepScalingPolicyConfiguration (Maybe AdjustmentType)

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Amazon ECS service by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the service
--   has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1.
--   However, because you specified a <tt>MinAdjustmentMagnitude</tt> of 2,
--   Application Auto Scaling scales out the service by 2 tasks.
stepScalingPolicyConfiguration_minAdjustmentMagnitude :: Lens' StepScalingPolicyConfiguration (Maybe Int)
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration.StepScalingPolicyConfiguration
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration.StepScalingPolicyConfiguration
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration.StepScalingPolicyConfiguration
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration.StepScalingPolicyConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration.StepScalingPolicyConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration.StepScalingPolicyConfiguration
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration.StepScalingPolicyConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.StepScalingPolicyConfiguration.StepScalingPolicyConfiguration


module Network.AWS.ApplicationAutoScaling.Types.SuspendedState

-- | Specifies whether the scaling activities for a scalable target are in
--   a suspended state.
--   
--   <i>See:</i> <a>newSuspendedState</a> smart constructor.
data SuspendedState
SuspendedState' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> SuspendedState

-- | Whether scheduled scaling is suspended. Set the value to <tt>true</tt>
--   if you don't want Application Auto Scaling to add or remove capacity
--   by initiating scheduled actions. The default is <tt>false</tt>.
[$sel:scheduledScalingSuspended:SuspendedState'] :: SuspendedState -> Maybe Bool

-- | Whether scale in by a target tracking scaling policy or a step scaling
--   policy is suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to remove capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
[$sel:dynamicScalingInSuspended:SuspendedState'] :: SuspendedState -> Maybe Bool

-- | Whether scale out by a target tracking scaling policy or a step
--   scaling policy is suspended. Set the value to <tt>true</tt> if you
--   don't want Application Auto Scaling to add capacity when a scaling
--   policy is triggered. The default is <tt>false</tt>.
[$sel:dynamicScalingOutSuspended:SuspendedState'] :: SuspendedState -> Maybe Bool

-- | Create a value of <a>SuspendedState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduledScalingSuspended:SuspendedState'</a>,
--   <a>suspendedState_scheduledScalingSuspended</a> - Whether scheduled
--   scaling is suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to add or remove capacity by initiating
--   scheduled actions. The default is <tt>false</tt>.
--   
--   <a>$sel:dynamicScalingInSuspended:SuspendedState'</a>,
--   <a>suspendedState_dynamicScalingInSuspended</a> - Whether scale in by
--   a target tracking scaling policy or a step scaling policy is
--   suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to remove capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
--   
--   <a>$sel:dynamicScalingOutSuspended:SuspendedState'</a>,
--   <a>suspendedState_dynamicScalingOutSuspended</a> - Whether scale out
--   by a target tracking scaling policy or a step scaling policy is
--   suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to add capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
newSuspendedState :: SuspendedState

-- | Whether scheduled scaling is suspended. Set the value to <tt>true</tt>
--   if you don't want Application Auto Scaling to add or remove capacity
--   by initiating scheduled actions. The default is <tt>false</tt>.
suspendedState_scheduledScalingSuspended :: Lens' SuspendedState (Maybe Bool)

-- | Whether scale in by a target tracking scaling policy or a step scaling
--   policy is suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to remove capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
suspendedState_dynamicScalingInSuspended :: Lens' SuspendedState (Maybe Bool)

-- | Whether scale out by a target tracking scaling policy or a step
--   scaling policy is suspended. Set the value to <tt>true</tt> if you
--   don't want Application Auto Scaling to add capacity when a scaling
--   policy is triggered. The default is <tt>false</tt>.
suspendedState_dynamicScalingOutSuspended :: Lens' SuspendedState (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.SuspendedState.SuspendedState
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.SuspendedState.SuspendedState
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.SuspendedState.SuspendedState
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.SuspendedState.SuspendedState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.SuspendedState.SuspendedState
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.SuspendedState.SuspendedState
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.SuspendedState.SuspendedState
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.SuspendedState.SuspendedState


module Network.AWS.ApplicationAutoScaling.Types.ScalableTarget

-- | Represents a scalable target.
--   
--   <i>See:</i> <a>newScalableTarget</a> smart constructor.
data ScalableTarget
ScalableTarget' :: Maybe SuspendedState -> ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> Text -> POSIX -> ScalableTarget
[$sel:suspendedState:ScalableTarget'] :: ScalableTarget -> Maybe SuspendedState

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
[$sel:serviceNamespace:ScalableTarget'] :: ScalableTarget -> ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalableTarget'] :: ScalableTarget -> Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:ScalableTarget'] :: ScalableTarget -> ScalableDimension

-- | The minimum value to scale to in response to a scale-in activity.
[$sel:minCapacity:ScalableTarget'] :: ScalableTarget -> Int

-- | The maximum value to scale to in response to a scale-out activity.
[$sel:maxCapacity:ScalableTarget'] :: ScalableTarget -> Int

-- | The ARN of an IAM role that allows Application Auto Scaling to modify
--   the scalable target on your behalf.
[$sel:roleARN:ScalableTarget'] :: ScalableTarget -> Text

-- | The Unix timestamp for when the scalable target was created.
[$sel:creationTime:ScalableTarget'] :: ScalableTarget -> POSIX

-- | Create a value of <a>ScalableTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suspendedState:ScalableTarget'</a>,
--   <a>scalableTarget_suspendedState</a> - Undocumented member.
--   
--   <a>$sel:serviceNamespace:ScalableTarget'</a>,
--   <a>scalableTarget_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalableTarget'</a>,
--   <a>scalableTarget_resourceId</a> - The identifier of the resource
--   associated with the scalable target. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalableTarget'</a>,
--   <a>scalableTarget_scalableDimension</a> - The scalable dimension
--   associated with the scalable target. This string consists of the
--   service namespace, resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:minCapacity:ScalableTarget'</a>,
--   <a>scalableTarget_minCapacity</a> - The minimum value to scale to in
--   response to a scale-in activity.
--   
--   <a>$sel:maxCapacity:ScalableTarget'</a>,
--   <a>scalableTarget_maxCapacity</a> - The maximum value to scale to in
--   response to a scale-out activity.
--   
--   <a>$sel:roleARN:ScalableTarget'</a>, <a>scalableTarget_roleARN</a> -
--   The ARN of an IAM role that allows Application Auto Scaling to modify
--   the scalable target on your behalf.
--   
--   <a>$sel:creationTime:ScalableTarget'</a>,
--   <a>scalableTarget_creationTime</a> - The Unix timestamp for when the
--   scalable target was created.
newScalableTarget :: ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> Text -> UTCTime -> ScalableTarget

-- | Undocumented member.
scalableTarget_suspendedState :: Lens' ScalableTarget (Maybe SuspendedState)

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalableTarget_serviceNamespace :: Lens' ScalableTarget ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalableTarget_resourceId :: Lens' ScalableTarget Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalableTarget_scalableDimension :: Lens' ScalableTarget ScalableDimension

-- | The minimum value to scale to in response to a scale-in activity.
scalableTarget_minCapacity :: Lens' ScalableTarget Int

-- | The maximum value to scale to in response to a scale-out activity.
scalableTarget_maxCapacity :: Lens' ScalableTarget Int

-- | The ARN of an IAM role that allows Application Auto Scaling to modify
--   the scalable target on your behalf.
scalableTarget_roleARN :: Lens' ScalableTarget Text

-- | The Unix timestamp for when the scalable target was created.
scalableTarget_creationTime :: Lens' ScalableTarget UTCTime
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.ScalableTarget.ScalableTarget
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.ScalableTarget.ScalableTarget
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.ScalableTarget.ScalableTarget
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.ScalableTarget.ScalableTarget
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.ScalableTarget.ScalableTarget
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.ScalableTarget.ScalableTarget
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.ScalableTarget.ScalableTarget


module Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration

-- | Represents a target tracking scaling policy configuration to use with
--   Application Auto Scaling.
--   
--   <i>See:</i> <a>newTargetTrackingScalingPolicyConfiguration</a> smart
--   constructor.
data TargetTrackingScalingPolicyConfiguration
TargetTrackingScalingPolicyConfiguration' :: Maybe Bool -> Maybe PredefinedMetricSpecification -> Maybe Int -> Maybe CustomizedMetricSpecification -> Maybe Int -> Double -> TargetTrackingScalingPolicyConfiguration

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy won't remove capacity from the scalable
--   target. Otherwise, scale in is enabled and the target tracking scaling
--   policy can remove capacity from the scalable target. The default value
--   is <tt>false</tt>.
[$sel:disableScaleIn:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe Bool

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
[$sel:predefinedMetricSpecification:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe PredefinedMetricSpecification

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Application Auto
--   Scaling successfully scales out using a target tracking scaling
--   policy, it starts to calculate the cooldown time. The scaling policy
--   won't increase the desired capacity again unless either a larger scale
--   out is triggered or the cooldown period ends. While the cooldown
--   period is in effect, the capacity added by the initiating scale-out
--   activity is calculated as part of the desired capacity for the next
--   scale-out activity.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
[$sel:scaleOutCooldown:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe Int

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
[$sel:customizedMetricSpecification:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe CustomizedMetricSpecification

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Application Auto Scaling scales out the target
--   immediately. In this case, the scale-in cooldown period stops and
--   doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
[$sel:scaleInCooldown:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe Int

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
--   The value must be a valid number based on the choice of metric. For
--   example, if the metric is CPU utilization, then the target value is a
--   percent value that represents how much of the CPU can be used before
--   scaling out.
[$sel:targetValue:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Double

-- | Create a value of <a>TargetTrackingScalingPolicyConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_disableScaleIn</a> -
--   Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy won't remove capacity from the scalable
--   target. Otherwise, scale in is enabled and the target tracking scaling
--   policy can remove capacity from the scalable target. The default value
--   is <tt>false</tt>.
--   
--   
--   <a>$sel:predefinedMetricSpecification:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_predefinedMetricSpecification</a>
--   - A predefined metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:scaleOutCooldown:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_scaleOutCooldown</a> - The
--   amount of time, in seconds, to wait for a previous scale-out activity
--   to take effect.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Application Auto
--   Scaling successfully scales out using a target tracking scaling
--   policy, it starts to calculate the cooldown time. The scaling policy
--   won't increase the desired capacity again unless either a larger scale
--   out is triggered or the cooldown period ends. While the cooldown
--   period is in effect, the capacity added by the initiating scale-out
--   activity is calculated as part of the desired capacity for the next
--   scale-out activity.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   
--   <a>$sel:customizedMetricSpecification:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_customizedMetricSpecification</a>
--   - A customized metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:scaleInCooldown:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_scaleInCooldown</a> - The
--   amount of time, in seconds, after a scale-in activity completes before
--   another scale-in activity can start.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Application Auto Scaling scales out the target
--   immediately. In this case, the scale-in cooldown period stops and
--   doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   <a>$sel:targetValue:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_targetValue</a> - The
--   target value for the metric. Although this property accepts numbers of
--   type Double, it won't accept values that are either too small or too
--   large. Values must be in the range of -2^360 to 2^360. The value must
--   be a valid number based on the choice of metric. For example, if the
--   metric is CPU utilization, then the target value is a percent value
--   that represents how much of the CPU can be used before scaling out.
newTargetTrackingScalingPolicyConfiguration :: Double -> TargetTrackingScalingPolicyConfiguration

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy won't remove capacity from the scalable
--   target. Otherwise, scale in is enabled and the target tracking scaling
--   policy can remove capacity from the scalable target. The default value
--   is <tt>false</tt>.
targetTrackingScalingPolicyConfiguration_disableScaleIn :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Bool)

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingScalingPolicyConfiguration_predefinedMetricSpecification :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe PredefinedMetricSpecification)

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Application Auto
--   Scaling successfully scales out using a target tracking scaling
--   policy, it starts to calculate the cooldown time. The scaling policy
--   won't increase the desired capacity again unless either a larger scale
--   out is triggered or the cooldown period ends. While the cooldown
--   period is in effect, the capacity added by the initiating scale-out
--   activity is calculated as part of the desired capacity for the next
--   scale-out activity.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
targetTrackingScalingPolicyConfiguration_scaleOutCooldown :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Int)

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingScalingPolicyConfiguration_customizedMetricSpecification :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe CustomizedMetricSpecification)

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Application Auto Scaling scales out the target
--   immediately. In this case, the scale-in cooldown period stops and
--   doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
targetTrackingScalingPolicyConfiguration_scaleInCooldown :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Int)

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
--   The value must be a valid number based on the choice of metric. For
--   example, if the metric is CPU utilization, then the target value is a
--   percent value that represents how much of the CPU can be used before
--   scaling out.
targetTrackingScalingPolicyConfiguration_targetValue :: Lens' TargetTrackingScalingPolicyConfiguration Double
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration.TargetTrackingScalingPolicyConfiguration
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration.TargetTrackingScalingPolicyConfiguration
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration.TargetTrackingScalingPolicyConfiguration
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration.TargetTrackingScalingPolicyConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration.TargetTrackingScalingPolicyConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration.TargetTrackingScalingPolicyConfiguration
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration.TargetTrackingScalingPolicyConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.Types.TargetTrackingScalingPolicyConfiguration.TargetTrackingScalingPolicyConfiguration


module Network.AWS.ApplicationAutoScaling.Types.ScalingPolicy

-- | Represents a scaling policy to use with Application Auto Scaling.
--   
--   For more information about configuring scaling policies for a specific
--   service, see <a>Getting started with Application Auto Scaling</a> in
--   the <i>Application Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe TargetTrackingScalingPolicyConfiguration -> Maybe StepScalingPolicyConfiguration -> Maybe [Alarm] -> Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> PolicyType -> POSIX -> ScalingPolicy

-- | A target tracking scaling policy.
[$sel:targetTrackingScalingPolicyConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe TargetTrackingScalingPolicyConfiguration

-- | A step scaling policy.
[$sel:stepScalingPolicyConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe StepScalingPolicyConfiguration

-- | The CloudWatch alarms associated with the scaling policy.
[$sel:alarms:ScalingPolicy'] :: ScalingPolicy -> Maybe [Alarm]

-- | The Amazon Resource Name (ARN) of the scaling policy.
[$sel:policyARN:ScalingPolicy'] :: ScalingPolicy -> Text

-- | The name of the scaling policy.
[$sel:policyName:ScalingPolicy'] :: ScalingPolicy -> Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
[$sel:serviceNamespace:ScalingPolicy'] :: ScalingPolicy -> ServiceNamespace

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalingPolicy'] :: ScalingPolicy -> Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:ScalingPolicy'] :: ScalingPolicy -> ScalableDimension

-- | The scaling policy type.
[$sel:policyType:ScalingPolicy'] :: ScalingPolicy -> PolicyType

-- | The Unix timestamp for when the scaling policy was created.
[$sel:creationTime:ScalingPolicy'] :: ScalingPolicy -> POSIX

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTrackingScalingPolicyConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingScalingPolicyConfiguration</a> - A
--   target tracking scaling policy.
--   
--   <a>$sel:stepScalingPolicyConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_stepScalingPolicyConfiguration</a> - A step scaling
--   policy.
--   
--   <a>$sel:alarms:ScalingPolicy'</a>, <a>scalingPolicy_alarms</a> - The
--   CloudWatch alarms associated with the scaling policy.
--   
--   <a>$sel:policyARN:ScalingPolicy'</a>, <a>scalingPolicy_policyARN</a> -
--   The Amazon Resource Name (ARN) of the scaling policy.
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:serviceNamespace:ScalingPolicy'</a>,
--   <a>scalingPolicy_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalingPolicy'</a>, <a>scalingPolicy_resourceId</a>
--   - The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalableDimension</a> - The scalable dimension. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The scaling policy type.
--   
--   <a>$sel:creationTime:ScalingPolicy'</a>,
--   <a>scalingPolicy_creationTime</a> - The Unix timestamp for when the
--   scaling policy was created.
newScalingPolicy :: Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> PolicyType -> UTCTime -> ScalingPolicy

-- | A target tracking scaling policy.
scalingPolicy_targetTrackingScalingPolicyConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingScalingPolicyConfiguration)

-- | A step scaling policy.
scalingPolicy_stepScalingPolicyConfiguration :: Lens' ScalingPolicy (Maybe StepScalingPolicyConfiguration)

-- | The CloudWatch alarms associated with the scaling policy.
scalingPolicy_alarms :: Lens' ScalingPolicy (Maybe [Alarm])

-- | The Amazon Resource Name (ARN) of the scaling policy.
scalingPolicy_policyARN :: Lens' ScalingPolicy Text

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalingPolicy_serviceNamespace :: Lens' ScalingPolicy ServiceNamespace

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalingPolicy_resourceId :: Lens' ScalingPolicy Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalingPolicy_scalableDimension :: Lens' ScalingPolicy ScalableDimension

-- | The scaling policy type.
scalingPolicy_policyType :: Lens' ScalingPolicy PolicyType

-- | The Unix timestamp for when the scaling policy was created.
scalingPolicy_creationTime :: Lens' ScalingPolicy UTCTime
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.Types.ScalingPolicy.ScalingPolicy
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.Types.ScalingPolicy.ScalingPolicy
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.Types.ScalingPolicy.ScalingPolicy
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.Types.ScalingPolicy.ScalingPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApplicationAutoScaling.Types.ScalingPolicy.ScalingPolicy
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.Types.ScalingPolicy.ScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.Types.ScalingPolicy.ScalingPolicy


module Network.AWS.ApplicationAutoScaling.Types

-- | API version <tt>2016-02-06</tt> of the Amazon Application Auto Scaling
--   SDK configuration.
defaultService :: Service

-- | The specified object could not be found. For any operation that
--   depends on the existence of a scalable target, this exception is
--   thrown if the scalable target with the specified service namespace,
--   resource ID, and scalable dimension does not exist. For any operation
--   that deletes or deregisters a resource, this exception is thrown if
--   the resource cannot be found.
_ObjectNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service encountered an internal error.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The next token supplied was invalid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Failed access to resources caused an exception. This exception is
--   thrown when Application Auto Scaling is unable to retrieve the alarms
--   associated with a scaling policy due to a client error, for example,
--   if the role ARN specified for a scalable target does not have
--   permission to call the CloudWatch <a>DescribeAlarms</a> on your
--   behalf.
_FailedResourceAccessException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception was thrown for a validation issue. Review the available
--   parameters for the API request.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A per-account resource limit is exceeded. For more information, see
--   <a>Application Auto Scaling service quotas</a>.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Concurrent updates caused an exception, for example, if you request an
--   update to an Application Auto Scaling resource that already has a
--   pending update.
_ConcurrentUpdateException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AdjustmentType
AdjustmentType' :: Text -> AdjustmentType
[fromAdjustmentType] :: AdjustmentType -> Text
pattern AdjustmentType_ChangeInCapacity :: AdjustmentType
pattern AdjustmentType_ExactCapacity :: AdjustmentType
pattern AdjustmentType_PercentChangeInCapacity :: AdjustmentType
newtype MetricAggregationType
MetricAggregationType' :: Text -> MetricAggregationType
[fromMetricAggregationType] :: MetricAggregationType -> Text
pattern MetricAggregationType_Average :: MetricAggregationType
pattern MetricAggregationType_Maximum :: MetricAggregationType
pattern MetricAggregationType_Minimum :: MetricAggregationType
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
newtype MetricType
MetricType' :: Text -> MetricType
[fromMetricType] :: MetricType -> Text
pattern MetricType_ALBRequestCountPerTarget :: MetricType
pattern MetricType_AppStreamAverageCapacityUtilization :: MetricType
pattern MetricType_CassandraReadCapacityUtilization :: MetricType
pattern MetricType_CassandraWriteCapacityUtilization :: MetricType
pattern MetricType_ComprehendInferenceUtilization :: MetricType
pattern MetricType_DynamoDBReadCapacityUtilization :: MetricType
pattern MetricType_DynamoDBWriteCapacityUtilization :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageCPUUtilization :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageNetworkIn :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageNetworkOut :: MetricType
pattern MetricType_ECSServiceAverageCPUUtilization :: MetricType
pattern MetricType_ECSServiceAverageMemoryUtilization :: MetricType
pattern MetricType_ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage :: MetricType
pattern MetricType_ElastiCachePrimaryEngineCPUUtilization :: MetricType
pattern MetricType_ElastiCacheReplicaEngineCPUUtilization :: MetricType
pattern MetricType_KafkaBrokerStorageUtilization :: MetricType
pattern MetricType_LambdaProvisionedConcurrencyUtilization :: MetricType
pattern MetricType_RDSReaderAverageCPUUtilization :: MetricType
pattern MetricType_RDSReaderAverageDatabaseConnections :: MetricType
pattern MetricType_SageMakerVariantInvocationsPerInstance :: MetricType
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_StepScaling :: PolicyType
pattern PolicyType_TargetTrackingScaling :: PolicyType
newtype ScalableDimension
ScalableDimension' :: Text -> ScalableDimension
[fromScalableDimension] :: ScalableDimension -> Text
pattern ScalableDimension_Appstream_fleet_DesiredCapacity :: ScalableDimension
pattern ScalableDimension_Cassandra_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Cassandra_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Comprehend_document_classifier_endpoint_DesiredInferenceUnits :: ScalableDimension
pattern ScalableDimension_Comprehend_entity_recognizer_endpoint_DesiredInferenceUnits :: ScalableDimension
pattern ScalableDimension_Custom_resource_ResourceType_Property :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Ec2_spot_fleet_request_TargetCapacity :: ScalableDimension
pattern ScalableDimension_Ecs_service_DesiredCount :: ScalableDimension
pattern ScalableDimension_Elasticache_replication_group_NodeGroups :: ScalableDimension
pattern ScalableDimension_Elasticache_replication_group_Replicas :: ScalableDimension
pattern ScalableDimension_Elasticmapreduce_instancegroup_InstanceCount :: ScalableDimension
pattern ScalableDimension_Kafka_broker_storage_VolumeSize :: ScalableDimension
pattern ScalableDimension_Lambda_function_ProvisionedConcurrency :: ScalableDimension
pattern ScalableDimension_Rds_cluster_ReadReplicaCount :: ScalableDimension
pattern ScalableDimension_Sagemaker_variant_DesiredInstanceCount :: ScalableDimension
newtype ScalingActivityStatusCode
ScalingActivityStatusCode' :: Text -> ScalingActivityStatusCode
[fromScalingActivityStatusCode] :: ScalingActivityStatusCode -> Text
pattern ScalingActivityStatusCode_Failed :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_InProgress :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Overridden :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Pending :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Successful :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Unfulfilled :: ScalingActivityStatusCode
newtype ServiceNamespace
ServiceNamespace' :: Text -> ServiceNamespace
[fromServiceNamespace] :: ServiceNamespace -> Text
pattern ServiceNamespace_Appstream :: ServiceNamespace
pattern ServiceNamespace_Cassandra :: ServiceNamespace
pattern ServiceNamespace_Comprehend :: ServiceNamespace
pattern ServiceNamespace_Custom_resource :: ServiceNamespace
pattern ServiceNamespace_Dynamodb :: ServiceNamespace
pattern ServiceNamespace_Ec2 :: ServiceNamespace
pattern ServiceNamespace_Ecs :: ServiceNamespace
pattern ServiceNamespace_Elasticache :: ServiceNamespace
pattern ServiceNamespace_Elasticmapreduce :: ServiceNamespace
pattern ServiceNamespace_Kafka :: ServiceNamespace
pattern ServiceNamespace_Lambda :: ServiceNamespace
pattern ServiceNamespace_Rds :: ServiceNamespace
pattern ServiceNamespace_Sagemaker :: ServiceNamespace

-- | Represents a CloudWatch alarm associated with a scaling policy.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Text -> Text -> Alarm

-- | The name of the alarm.
[$sel:alarmName:Alarm'] :: Alarm -> Text

-- | The Amazon Resource Name (ARN) of the alarm.
[$sel:alarmARN:Alarm'] :: Alarm -> Text

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmName:Alarm'</a>, <a>alarm_alarmName</a> - The name of the
--   alarm.
--   
--   <a>$sel:alarmARN:Alarm'</a>, <a>alarm_alarmARN</a> - The Amazon
--   Resource Name (ARN) of the alarm.
newAlarm :: Text -> Text -> Alarm

-- | The name of the alarm.
alarm_alarmName :: Lens' Alarm Text

-- | The Amazon Resource Name (ARN) of the alarm.
alarm_alarmARN :: Lens' Alarm Text

-- | Represents a CloudWatch metric of your choosing for a target tracking
--   scaling policy to use with Application Auto Scaling.
--   
--   For information about the available metrics for a service, see
--   <a>Amazon Web Services Services That Publish CloudWatch Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.
--   
--   To create your customized metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases, and increase when capacity
--   decreases.</li>
--   </ul>
--   
--   For more information about CloudWatch, see <a>Amazon CloudWatch
--   Concepts</a>.
--   
--   <i>See:</i> <a>newCustomizedMetricSpecification</a> smart constructor.
data CustomizedMetricSpecification
CustomizedMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | The unit of the metric.
[$sel:unit:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Maybe Text

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
[$sel:dimensions:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Maybe [MetricDimension]

-- | The name of the metric.
[$sel:metricName:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Text

-- | The namespace of the metric.
[$sel:namespace:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> Text

-- | The statistic of the metric.
[$sel:statistic:CustomizedMetricSpecification'] :: CustomizedMetricSpecification -> MetricStatistic

-- | Create a value of <a>CustomizedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_unit</a> - The unit of the metric.
--   
--   <a>$sel:dimensions:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_dimensions</a> - The dimensions of
--   the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
--   
--   <a>$sel:metricName:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_namespace</a> - The namespace of the
--   metric.
--   
--   <a>$sel:statistic:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_statistic</a> - The statistic of the
--   metric.
newCustomizedMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | The unit of the metric.
customizedMetricSpecification_unit :: Lens' CustomizedMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
customizedMetricSpecification_dimensions :: Lens' CustomizedMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedMetricSpecification_metricName :: Lens' CustomizedMetricSpecification Text

-- | The namespace of the metric.
customizedMetricSpecification_namespace :: Lens' CustomizedMetricSpecification Text

-- | The statistic of the metric.
customizedMetricSpecification_statistic :: Lens' CustomizedMetricSpecification MetricStatistic

-- | Describes the dimension names and values associated with a metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | The name of the dimension.
[$sel:name:MetricDimension'] :: MetricDimension -> Text

-- | The value of the dimension.
[$sel:value:MetricDimension'] :: MetricDimension -> Text

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text

-- | Represents a predefined metric for a target tracking scaling policy to
--   use with Application Auto Scaling.
--   
--   Only the Amazon Web Services that you're using send metrics to Amazon
--   CloudWatch. To determine whether a desired metric already exists by
--   looking up its namespace and dimension using the CloudWatch metrics
--   dashboard in the console, follow the procedure in <a>Building
--   dashboards with CloudWatch</a> in the <i>Application Auto Scaling User
--   Guide</i>.
--   
--   <i>See:</i> <a>newPredefinedMetricSpecification</a> smart constructor.
data PredefinedMetricSpecification
PredefinedMetricSpecification' :: Maybe Text -> MetricType -> PredefinedMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group attached
--   to the Spot Fleet request or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
[$sel:resourceLabel:PredefinedMetricSpecification'] :: PredefinedMetricSpecification -> Maybe Text

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Spot Fleet requests and ECS services.
[$sel:predefinedMetricType:PredefinedMetricSpecification'] :: PredefinedMetricSpecification -> MetricType

-- | Create a value of <a>PredefinedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_resourceLabel</a> - Identifies the
--   resource associated with the metric type. You can't specify a resource
--   label unless the metric type is <tt>ALBRequestCountPerTarget</tt> and
--   there is a target group attached to the Spot Fleet request or ECS
--   service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   <a>$sel:predefinedMetricType:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_predefinedMetricType</a> - The metric
--   type. The <tt>ALBRequestCountPerTarget</tt> metric type applies only
--   to Spot Fleet requests and ECS services.
newPredefinedMetricSpecification :: MetricType -> PredefinedMetricSpecification

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group attached
--   to the Spot Fleet request or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedMetricSpecification_resourceLabel :: Lens' PredefinedMetricSpecification (Maybe Text)

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Spot Fleet requests and ECS services.
predefinedMetricSpecification_predefinedMetricType :: Lens' PredefinedMetricSpecification MetricType

-- | Represents a scalable target.
--   
--   <i>See:</i> <a>newScalableTarget</a> smart constructor.
data ScalableTarget
ScalableTarget' :: Maybe SuspendedState -> ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> Text -> POSIX -> ScalableTarget
[$sel:suspendedState:ScalableTarget'] :: ScalableTarget -> Maybe SuspendedState

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
[$sel:serviceNamespace:ScalableTarget'] :: ScalableTarget -> ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalableTarget'] :: ScalableTarget -> Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:ScalableTarget'] :: ScalableTarget -> ScalableDimension

-- | The minimum value to scale to in response to a scale-in activity.
[$sel:minCapacity:ScalableTarget'] :: ScalableTarget -> Int

-- | The maximum value to scale to in response to a scale-out activity.
[$sel:maxCapacity:ScalableTarget'] :: ScalableTarget -> Int

-- | The ARN of an IAM role that allows Application Auto Scaling to modify
--   the scalable target on your behalf.
[$sel:roleARN:ScalableTarget'] :: ScalableTarget -> Text

-- | The Unix timestamp for when the scalable target was created.
[$sel:creationTime:ScalableTarget'] :: ScalableTarget -> POSIX

-- | Create a value of <a>ScalableTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suspendedState:ScalableTarget'</a>,
--   <a>scalableTarget_suspendedState</a> - Undocumented member.
--   
--   <a>$sel:serviceNamespace:ScalableTarget'</a>,
--   <a>scalableTarget_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalableTarget'</a>,
--   <a>scalableTarget_resourceId</a> - The identifier of the resource
--   associated with the scalable target. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalableTarget'</a>,
--   <a>scalableTarget_scalableDimension</a> - The scalable dimension
--   associated with the scalable target. This string consists of the
--   service namespace, resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:minCapacity:ScalableTarget'</a>,
--   <a>scalableTarget_minCapacity</a> - The minimum value to scale to in
--   response to a scale-in activity.
--   
--   <a>$sel:maxCapacity:ScalableTarget'</a>,
--   <a>scalableTarget_maxCapacity</a> - The maximum value to scale to in
--   response to a scale-out activity.
--   
--   <a>$sel:roleARN:ScalableTarget'</a>, <a>scalableTarget_roleARN</a> -
--   The ARN of an IAM role that allows Application Auto Scaling to modify
--   the scalable target on your behalf.
--   
--   <a>$sel:creationTime:ScalableTarget'</a>,
--   <a>scalableTarget_creationTime</a> - The Unix timestamp for when the
--   scalable target was created.
newScalableTarget :: ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> Text -> UTCTime -> ScalableTarget

-- | Undocumented member.
scalableTarget_suspendedState :: Lens' ScalableTarget (Maybe SuspendedState)

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalableTarget_serviceNamespace :: Lens' ScalableTarget ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalableTarget_resourceId :: Lens' ScalableTarget Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalableTarget_scalableDimension :: Lens' ScalableTarget ScalableDimension

-- | The minimum value to scale to in response to a scale-in activity.
scalableTarget_minCapacity :: Lens' ScalableTarget Int

-- | The maximum value to scale to in response to a scale-out activity.
scalableTarget_maxCapacity :: Lens' ScalableTarget Int

-- | The ARN of an IAM role that allows Application Auto Scaling to modify
--   the scalable target on your behalf.
scalableTarget_roleARN :: Lens' ScalableTarget Text

-- | The Unix timestamp for when the scalable target was created.
scalableTarget_creationTime :: Lens' ScalableTarget UTCTime

-- | Represents the minimum and maximum capacity for a scheduled action.
--   
--   <i>See:</i> <a>newScalableTargetAction</a> smart constructor.
data ScalableTargetAction
ScalableTargetAction' :: Maybe Int -> Maybe Int -> ScalableTargetAction

-- | The maximum capacity.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
[$sel:maxCapacity:ScalableTargetAction'] :: ScalableTargetAction -> Maybe Int

-- | The minimum capacity.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
[$sel:minCapacity:ScalableTargetAction'] :: ScalableTargetAction -> Maybe Int

-- | Create a value of <a>ScalableTargetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxCapacity:ScalableTargetAction'</a>,
--   <a>scalableTargetAction_maxCapacity</a> - The maximum capacity.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:minCapacity:ScalableTargetAction'</a>,
--   <a>scalableTargetAction_minCapacity</a> - The minimum capacity.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
newScalableTargetAction :: ScalableTargetAction

-- | The maximum capacity.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
scalableTargetAction_maxCapacity :: Lens' ScalableTargetAction (Maybe Int)

-- | The minimum capacity.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
scalableTargetAction_minCapacity :: Lens' ScalableTargetAction (Maybe Int)

-- | Represents a scaling activity.
--   
--   <i>See:</i> <a>newScalingActivity</a> smart constructor.
data ScalingActivity
ScalingActivity' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> Text -> Text -> POSIX -> ScalingActivityStatusCode -> ScalingActivity

-- | A simple message about the current status of the scaling activity.
[$sel:statusMessage:ScalingActivity'] :: ScalingActivity -> Maybe Text

-- | The Unix timestamp for when the scaling activity ended.
[$sel:endTime:ScalingActivity'] :: ScalingActivity -> Maybe POSIX

-- | The details about the scaling activity.
[$sel:details:ScalingActivity'] :: ScalingActivity -> Maybe Text

-- | The unique identifier of the scaling activity.
[$sel:activityId:ScalingActivity'] :: ScalingActivity -> Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
[$sel:serviceNamespace:ScalingActivity'] :: ScalingActivity -> ServiceNamespace

-- | The identifier of the resource associated with the scaling activity.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalingActivity'] :: ScalingActivity -> Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:ScalingActivity'] :: ScalingActivity -> ScalableDimension

-- | A simple description of what action the scaling activity intends to
--   accomplish.
[$sel:description:ScalingActivity'] :: ScalingActivity -> Text

-- | A simple description of what caused the scaling activity to happen.
[$sel:cause:ScalingActivity'] :: ScalingActivity -> Text

-- | The Unix timestamp for when the scaling activity began.
[$sel:startTime:ScalingActivity'] :: ScalingActivity -> POSIX

-- | Indicates the status of the scaling activity.
[$sel:statusCode:ScalingActivity'] :: ScalingActivity -> ScalingActivityStatusCode

-- | Create a value of <a>ScalingActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ScalingActivity'</a>,
--   <a>scalingActivity_statusMessage</a> - A simple message about the
--   current status of the scaling activity.
--   
--   <a>$sel:endTime:ScalingActivity'</a>, <a>scalingActivity_endTime</a> -
--   The Unix timestamp for when the scaling activity ended.
--   
--   <a>$sel:details:ScalingActivity'</a>, <a>scalingActivity_details</a> -
--   The details about the scaling activity.
--   
--   <a>$sel:activityId:ScalingActivity'</a>,
--   <a>scalingActivity_activityId</a> - The unique identifier of the
--   scaling activity.
--   
--   <a>$sel:serviceNamespace:ScalingActivity'</a>,
--   <a>scalingActivity_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalingActivity'</a>,
--   <a>scalingActivity_resourceId</a> - The identifier of the resource
--   associated with the scaling activity. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingActivity'</a>,
--   <a>scalingActivity_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:description:ScalingActivity'</a>,
--   <a>scalingActivity_description</a> - A simple description of what
--   action the scaling activity intends to accomplish.
--   
--   <a>$sel:cause:ScalingActivity'</a>, <a>scalingActivity_cause</a> - A
--   simple description of what caused the scaling activity to happen.
--   
--   <a>$sel:startTime:ScalingActivity'</a>,
--   <a>scalingActivity_startTime</a> - The Unix timestamp for when the
--   scaling activity began.
--   
--   <a>$sel:statusCode:ScalingActivity'</a>,
--   <a>scalingActivity_statusCode</a> - Indicates the status of the
--   scaling activity.
newScalingActivity :: Text -> ServiceNamespace -> Text -> ScalableDimension -> Text -> Text -> UTCTime -> ScalingActivityStatusCode -> ScalingActivity

-- | A simple message about the current status of the scaling activity.
scalingActivity_statusMessage :: Lens' ScalingActivity (Maybe Text)

-- | The Unix timestamp for when the scaling activity ended.
scalingActivity_endTime :: Lens' ScalingActivity (Maybe UTCTime)

-- | The details about the scaling activity.
scalingActivity_details :: Lens' ScalingActivity (Maybe Text)

-- | The unique identifier of the scaling activity.
scalingActivity_activityId :: Lens' ScalingActivity Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalingActivity_serviceNamespace :: Lens' ScalingActivity ServiceNamespace

-- | The identifier of the resource associated with the scaling activity.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalingActivity_resourceId :: Lens' ScalingActivity Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalingActivity_scalableDimension :: Lens' ScalingActivity ScalableDimension

-- | A simple description of what action the scaling activity intends to
--   accomplish.
scalingActivity_description :: Lens' ScalingActivity Text

-- | A simple description of what caused the scaling activity to happen.
scalingActivity_cause :: Lens' ScalingActivity Text

-- | The Unix timestamp for when the scaling activity began.
scalingActivity_startTime :: Lens' ScalingActivity UTCTime

-- | Indicates the status of the scaling activity.
scalingActivity_statusCode :: Lens' ScalingActivity ScalingActivityStatusCode

-- | Represents a scaling policy to use with Application Auto Scaling.
--   
--   For more information about configuring scaling policies for a specific
--   service, see <a>Getting started with Application Auto Scaling</a> in
--   the <i>Application Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe TargetTrackingScalingPolicyConfiguration -> Maybe StepScalingPolicyConfiguration -> Maybe [Alarm] -> Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> PolicyType -> POSIX -> ScalingPolicy

-- | A target tracking scaling policy.
[$sel:targetTrackingScalingPolicyConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe TargetTrackingScalingPolicyConfiguration

-- | A step scaling policy.
[$sel:stepScalingPolicyConfiguration:ScalingPolicy'] :: ScalingPolicy -> Maybe StepScalingPolicyConfiguration

-- | The CloudWatch alarms associated with the scaling policy.
[$sel:alarms:ScalingPolicy'] :: ScalingPolicy -> Maybe [Alarm]

-- | The Amazon Resource Name (ARN) of the scaling policy.
[$sel:policyARN:ScalingPolicy'] :: ScalingPolicy -> Text

-- | The name of the scaling policy.
[$sel:policyName:ScalingPolicy'] :: ScalingPolicy -> Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
[$sel:serviceNamespace:ScalingPolicy'] :: ScalingPolicy -> ServiceNamespace

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScalingPolicy'] :: ScalingPolicy -> Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:ScalingPolicy'] :: ScalingPolicy -> ScalableDimension

-- | The scaling policy type.
[$sel:policyType:ScalingPolicy'] :: ScalingPolicy -> PolicyType

-- | The Unix timestamp for when the scaling policy was created.
[$sel:creationTime:ScalingPolicy'] :: ScalingPolicy -> POSIX

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTrackingScalingPolicyConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingScalingPolicyConfiguration</a> - A
--   target tracking scaling policy.
--   
--   <a>$sel:stepScalingPolicyConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_stepScalingPolicyConfiguration</a> - A step scaling
--   policy.
--   
--   <a>$sel:alarms:ScalingPolicy'</a>, <a>scalingPolicy_alarms</a> - The
--   CloudWatch alarms associated with the scaling policy.
--   
--   <a>$sel:policyARN:ScalingPolicy'</a>, <a>scalingPolicy_policyARN</a> -
--   The Amazon Resource Name (ARN) of the scaling policy.
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:serviceNamespace:ScalingPolicy'</a>,
--   <a>scalingPolicy_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalingPolicy'</a>, <a>scalingPolicy_resourceId</a>
--   - The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalableDimension</a> - The scalable dimension. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The scaling policy type.
--   
--   <a>$sel:creationTime:ScalingPolicy'</a>,
--   <a>scalingPolicy_creationTime</a> - The Unix timestamp for when the
--   scaling policy was created.
newScalingPolicy :: Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> PolicyType -> UTCTime -> ScalingPolicy

-- | A target tracking scaling policy.
scalingPolicy_targetTrackingScalingPolicyConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingScalingPolicyConfiguration)

-- | A step scaling policy.
scalingPolicy_stepScalingPolicyConfiguration :: Lens' ScalingPolicy (Maybe StepScalingPolicyConfiguration)

-- | The CloudWatch alarms associated with the scaling policy.
scalingPolicy_alarms :: Lens' ScalingPolicy (Maybe [Alarm])

-- | The Amazon Resource Name (ARN) of the scaling policy.
scalingPolicy_policyARN :: Lens' ScalingPolicy Text

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalingPolicy_serviceNamespace :: Lens' ScalingPolicy ServiceNamespace

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalingPolicy_resourceId :: Lens' ScalingPolicy Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalingPolicy_scalableDimension :: Lens' ScalingPolicy ScalableDimension

-- | The scaling policy type.
scalingPolicy_policyType :: Lens' ScalingPolicy PolicyType

-- | The Unix timestamp for when the scaling policy was created.
scalingPolicy_creationTime :: Lens' ScalingPolicy UTCTime

-- | Represents a scheduled action.
--   
--   <i>See:</i> <a>newScheduledAction</a> smart constructor.
data ScheduledAction
ScheduledAction' :: Maybe POSIX -> Maybe POSIX -> Maybe ScalableDimension -> Maybe Text -> Maybe ScalableTargetAction -> Text -> Text -> ServiceNamespace -> Text -> Text -> POSIX -> ScheduledAction

-- | The date and time that the action is scheduled to begin, in UTC.
[$sel:startTime:ScheduledAction'] :: ScheduledAction -> Maybe POSIX

-- | The date and time that the action is scheduled to end, in UTC.
[$sel:endTime:ScheduledAction'] :: ScheduledAction -> Maybe POSIX

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:ScheduledAction'] :: ScheduledAction -> Maybe ScalableDimension

-- | The time zone used when referring to the date and time of a scheduled
--   action, when the scheduled action uses an at or cron expression.
[$sel:timezone:ScheduledAction'] :: ScheduledAction -> Maybe Text

-- | The new minimum and maximum capacity. You can set both values or just
--   one. At the scheduled time, if the current capacity is below the
--   minimum capacity, Application Auto Scaling scales out to the minimum
--   capacity. If the current capacity is above the maximum capacity,
--   Application Auto Scaling scales in to the maximum capacity.
[$sel:scalableTargetAction:ScheduledAction'] :: ScheduledAction -> Maybe ScalableTargetAction

-- | The name of the scheduled action.
[$sel:scheduledActionName:ScheduledAction'] :: ScheduledAction -> Text

-- | The Amazon Resource Name (ARN) of the scheduled action.
[$sel:scheduledActionARN:ScheduledAction'] :: ScheduledAction -> Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
[$sel:serviceNamespace:ScheduledAction'] :: ScheduledAction -> ServiceNamespace

-- | The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
[$sel:schedule:ScheduledAction'] :: ScheduledAction -> Text

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:ScheduledAction'] :: ScheduledAction -> Text

-- | The date and time that the scheduled action was created.
[$sel:creationTime:ScheduledAction'] :: ScheduledAction -> POSIX

-- | Create a value of <a>ScheduledAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:ScheduledAction'</a>,
--   <a>scheduledAction_startTime</a> - The date and time that the action
--   is scheduled to begin, in UTC.
--   
--   <a>$sel:endTime:ScheduledAction'</a>, <a>scheduledAction_endTime</a> -
--   The date and time that the action is scheduled to end, in UTC.
--   
--   <a>$sel:scalableDimension:ScheduledAction'</a>,
--   <a>scheduledAction_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:timezone:ScheduledAction'</a>, <a>scheduledAction_timezone</a>
--   - The time zone used when referring to the date and time of a
--   scheduled action, when the scheduled action uses an at or cron
--   expression.
--   
--   <a>$sel:scalableTargetAction:ScheduledAction'</a>,
--   <a>scheduledAction_scalableTargetAction</a> - The new minimum and
--   maximum capacity. You can set both values or just one. At the
--   scheduled time, if the current capacity is below the minimum capacity,
--   Application Auto Scaling scales out to the minimum capacity. If the
--   current capacity is above the maximum capacity, Application Auto
--   Scaling scales in to the maximum capacity.
--   
--   <a>$sel:scheduledActionName:ScheduledAction'</a>,
--   <a>scheduledAction_scheduledActionName</a> - The name of the scheduled
--   action.
--   
--   <a>$sel:scheduledActionARN:ScheduledAction'</a>,
--   <a>scheduledAction_scheduledActionARN</a> - The Amazon Resource Name
--   (ARN) of the scheduled action.
--   
--   <a>$sel:serviceNamespace:ScheduledAction'</a>,
--   <a>scheduledAction_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:schedule:ScheduledAction'</a>, <a>scheduledAction_schedule</a>
--   - The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:resourceId:ScheduledAction'</a>,
--   <a>scheduledAction_resourceId</a> - The identifier of the resource
--   associated with the scaling policy. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:creationTime:ScheduledAction'</a>,
--   <a>scheduledAction_creationTime</a> - The date and time that the
--   scheduled action was created.
newScheduledAction :: Text -> Text -> ServiceNamespace -> Text -> Text -> UTCTime -> ScheduledAction

-- | The date and time that the action is scheduled to begin, in UTC.
scheduledAction_startTime :: Lens' ScheduledAction (Maybe UTCTime)

-- | The date and time that the action is scheduled to end, in UTC.
scheduledAction_endTime :: Lens' ScheduledAction (Maybe UTCTime)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scheduledAction_scalableDimension :: Lens' ScheduledAction (Maybe ScalableDimension)

-- | The time zone used when referring to the date and time of a scheduled
--   action, when the scheduled action uses an at or cron expression.
scheduledAction_timezone :: Lens' ScheduledAction (Maybe Text)

-- | The new minimum and maximum capacity. You can set both values or just
--   one. At the scheduled time, if the current capacity is below the
--   minimum capacity, Application Auto Scaling scales out to the minimum
--   capacity. If the current capacity is above the maximum capacity,
--   Application Auto Scaling scales in to the maximum capacity.
scheduledAction_scalableTargetAction :: Lens' ScheduledAction (Maybe ScalableTargetAction)

-- | The name of the scheduled action.
scheduledAction_scheduledActionName :: Lens' ScheduledAction Text

-- | The Amazon Resource Name (ARN) of the scheduled action.
scheduledAction_scheduledActionARN :: Lens' ScheduledAction Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scheduledAction_serviceNamespace :: Lens' ScheduledAction ServiceNamespace

-- | The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
scheduledAction_schedule :: Lens' ScheduledAction Text

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scheduledAction_resourceId :: Lens' ScheduledAction Text

-- | The date and time that the scheduled action was created.
scheduledAction_creationTime :: Lens' ScheduledAction UTCTime

-- | Represents a step adjustment for a
--   <a>StepScalingPolicyConfiguration</a>. Describes an adjustment based
--   on the difference between the value of the aggregated CloudWatch
--   metric and the breach threshold that you've defined for the alarm.
--   
--   For the following examples, suppose that you have an alarm with a
--   breach threshold of 50:
--   
--   <ul>
--   <li>To trigger the adjustment when the metric is greater than or equal
--   to 50 and less than 60, specify a lower bound of 0 and an upper bound
--   of 10.</li>
--   <li>To trigger the adjustment when the metric is greater than 40 and
--   less than or equal to 50, specify a lower bound of -10 and an upper
--   bound of 0.</li>
--   </ul>
--   
--   There are a few rules for the step adjustments for your step policy:
--   
--   <ul>
--   <li>The ranges of your step adjustments can't overlap or have a
--   gap.</li>
--   <li>At most one step adjustment can have a null lower bound. If one
--   step adjustment has a negative lower bound, then there must be a step
--   adjustment with a null lower bound.</li>
--   <li>At most one step adjustment can have a null upper bound. If one
--   step adjustment has a positive upper bound, then there must be a step
--   adjustment with a null upper bound.</li>
--   <li>The upper and lower bound can't be null in the same step
--   adjustment.</li>
--   </ul>
--   
--   <i>See:</i> <a>newStepAdjustment</a> smart constructor.
data StepAdjustment
StepAdjustment' :: Maybe Double -> Maybe Double -> Int -> StepAdjustment

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
[$sel:metricIntervalUpperBound:StepAdjustment'] :: StepAdjustment -> Maybe Double

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
[$sel:metricIntervalLowerBound:StepAdjustment'] :: StepAdjustment -> Maybe Double

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity. For exact capacity, you must
--   specify a positive value.
[$sel:scalingAdjustment:StepAdjustment'] :: StepAdjustment -> Int

-- | Create a value of <a>StepAdjustment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricIntervalUpperBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalUpperBound</a> - The upper bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the upper bound is
--   exclusive (the metric must be less than the threshold plus the upper
--   bound). Otherwise, it is inclusive (the metric must be less than or
--   equal to the threshold plus the upper bound). A null value indicates
--   positive infinity.
--   
--   The upper bound must be greater than the lower bound.
--   
--   <a>$sel:metricIntervalLowerBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalLowerBound</a> - The lower bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the lower bound is
--   inclusive (the metric must be greater than or equal to the threshold
--   plus the lower bound). Otherwise, it is exclusive (the metric must be
--   greater than the threshold plus the lower bound). A null value
--   indicates negative infinity.
--   
--   <a>$sel:scalingAdjustment:StepAdjustment'</a>,
--   <a>stepAdjustment_scalingAdjustment</a> - The amount by which to
--   scale, based on the specified adjustment type. A positive value adds
--   to the current capacity while a negative number removes from the
--   current capacity. For exact capacity, you must specify a positive
--   value.
newStepAdjustment :: Int -> StepAdjustment

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
stepAdjustment_metricIntervalUpperBound :: Lens' StepAdjustment (Maybe Double)

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
stepAdjustment_metricIntervalLowerBound :: Lens' StepAdjustment (Maybe Double)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity. For exact capacity, you must
--   specify a positive value.
stepAdjustment_scalingAdjustment :: Lens' StepAdjustment Int

-- | Represents a step scaling policy configuration to use with Application
--   Auto Scaling.
--   
--   <i>See:</i> <a>newStepScalingPolicyConfiguration</a> smart
--   constructor.
data StepScalingPolicyConfiguration
StepScalingPolicyConfiguration' :: Maybe [StepAdjustment] -> Maybe MetricAggregationType -> Maybe Int -> Maybe AdjustmentType -> Maybe Int -> StepScalingPolicyConfiguration

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
--   
--   At least one step adjustment is required if you are adding a new step
--   scaling policy configuration.
[$sel:stepAdjustments:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe [StepAdjustment]

-- | The aggregation type for the CloudWatch metrics. Valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
[$sel:metricAggregationType:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe MetricAggregationType

-- | The amount of time, in seconds, to wait for a previous scaling
--   activity to take effect.
--   
--   With scale-out policies, the intention is to continuously (but not
--   excessively) scale out. After Application Auto Scaling successfully
--   scales out using a step scaling policy, it starts to calculate the
--   cooldown time. The scaling policy won't increase the desired capacity
--   again unless either a larger scale out is triggered or the cooldown
--   period ends. While the cooldown period is in effect, capacity added by
--   the initiating scale-out activity is calculated as part of the desired
--   capacity for the next scale-out activity. For example, when an alarm
--   triggers a step scaling policy to increase the capacity by 2, the
--   scaling activity completes successfully, and a cooldown period starts.
--   If the alarm triggers again during the cooldown period but at a more
--   aggressive step adjustment of 3, the previous increase of 2 is
--   considered part of the current capacity. Therefore, only 1 is added to
--   the capacity.
--   
--   With scale-in policies, the intention is to scale in conservatively to
--   protect your application’s availability, so scale-in activities are
--   blocked until the cooldown period has expired. However, if another
--   alarm triggers a scale-out activity during the cooldown period after a
--   scale-in activity, Application Auto Scaling scales out the target
--   immediately. In this case, the cooldown period for the scale-in
--   activity stops and doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
[$sel:cooldown:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe Int

-- | Specifies how the <tt>ScalingAdjustment</tt> value in a
--   <a>StepAdjustment</a> is interpreted (for example, an absolute number
--   or a percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   <tt>AdjustmentType</tt> is required if you are adding a new step
--   scaling policy configuration.
[$sel:adjustmentType:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe AdjustmentType

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Amazon ECS service by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the service
--   has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1.
--   However, because you specified a <tt>MinAdjustmentMagnitude</tt> of 2,
--   Application Auto Scaling scales out the service by 2 tasks.
[$sel:minAdjustmentMagnitude:StepScalingPolicyConfiguration'] :: StepScalingPolicyConfiguration -> Maybe Int

-- | Create a value of <a>StepScalingPolicyConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepAdjustments:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_stepAdjustments</a> - A set of
--   adjustments that enable you to scale based on the size of the alarm
--   breach.
--   
--   At least one step adjustment is required if you are adding a new step
--   scaling policy configuration.
--   
--   <a>$sel:metricAggregationType:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_metricAggregationType</a> - The
--   aggregation type for the CloudWatch metrics. Valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
--   
--   <a>$sel:cooldown:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_cooldown</a> - The amount of time,
--   in seconds, to wait for a previous scaling activity to take effect.
--   
--   With scale-out policies, the intention is to continuously (but not
--   excessively) scale out. After Application Auto Scaling successfully
--   scales out using a step scaling policy, it starts to calculate the
--   cooldown time. The scaling policy won't increase the desired capacity
--   again unless either a larger scale out is triggered or the cooldown
--   period ends. While the cooldown period is in effect, capacity added by
--   the initiating scale-out activity is calculated as part of the desired
--   capacity for the next scale-out activity. For example, when an alarm
--   triggers a step scaling policy to increase the capacity by 2, the
--   scaling activity completes successfully, and a cooldown period starts.
--   If the alarm triggers again during the cooldown period but at a more
--   aggressive step adjustment of 3, the previous increase of 2 is
--   considered part of the current capacity. Therefore, only 1 is added to
--   the capacity.
--   
--   With scale-in policies, the intention is to scale in conservatively to
--   protect your application’s availability, so scale-in activities are
--   blocked until the cooldown period has expired. However, if another
--   alarm triggers a scale-out activity during the cooldown period after a
--   scale-in activity, Application Auto Scaling scales out the target
--   immediately. In this case, the cooldown period for the scale-in
--   activity stops and doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   <a>$sel:adjustmentType:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_adjustmentType</a> - Specifies how
--   the <tt>ScalingAdjustment</tt> value in a <a>StepAdjustment</a> is
--   interpreted (for example, an absolute number or a percentage). The
--   valid values are <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>,
--   and <tt>PercentChangeInCapacity</tt>.
--   
--   <tt>AdjustmentType</tt> is required if you are adding a new step
--   scaling policy configuration.
--   
--   <a>$sel:minAdjustmentMagnitude:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_minAdjustmentMagnitude</a> - The
--   minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Amazon ECS service by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the service
--   has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1.
--   However, because you specified a <tt>MinAdjustmentMagnitude</tt> of 2,
--   Application Auto Scaling scales out the service by 2 tasks.
newStepScalingPolicyConfiguration :: StepScalingPolicyConfiguration

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
--   
--   At least one step adjustment is required if you are adding a new step
--   scaling policy configuration.
stepScalingPolicyConfiguration_stepAdjustments :: Lens' StepScalingPolicyConfiguration (Maybe [StepAdjustment])

-- | The aggregation type for the CloudWatch metrics. Valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
stepScalingPolicyConfiguration_metricAggregationType :: Lens' StepScalingPolicyConfiguration (Maybe MetricAggregationType)

-- | The amount of time, in seconds, to wait for a previous scaling
--   activity to take effect.
--   
--   With scale-out policies, the intention is to continuously (but not
--   excessively) scale out. After Application Auto Scaling successfully
--   scales out using a step scaling policy, it starts to calculate the
--   cooldown time. The scaling policy won't increase the desired capacity
--   again unless either a larger scale out is triggered or the cooldown
--   period ends. While the cooldown period is in effect, capacity added by
--   the initiating scale-out activity is calculated as part of the desired
--   capacity for the next scale-out activity. For example, when an alarm
--   triggers a step scaling policy to increase the capacity by 2, the
--   scaling activity completes successfully, and a cooldown period starts.
--   If the alarm triggers again during the cooldown period but at a more
--   aggressive step adjustment of 3, the previous increase of 2 is
--   considered part of the current capacity. Therefore, only 1 is added to
--   the capacity.
--   
--   With scale-in policies, the intention is to scale in conservatively to
--   protect your application’s availability, so scale-in activities are
--   blocked until the cooldown period has expired. However, if another
--   alarm triggers a scale-out activity during the cooldown period after a
--   scale-in activity, Application Auto Scaling scales out the target
--   immediately. In this case, the cooldown period for the scale-in
--   activity stops and doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
stepScalingPolicyConfiguration_cooldown :: Lens' StepScalingPolicyConfiguration (Maybe Int)

-- | Specifies how the <tt>ScalingAdjustment</tt> value in a
--   <a>StepAdjustment</a> is interpreted (for example, an absolute number
--   or a percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   <tt>AdjustmentType</tt> is required if you are adding a new step
--   scaling policy configuration.
stepScalingPolicyConfiguration_adjustmentType :: Lens' StepScalingPolicyConfiguration (Maybe AdjustmentType)

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Amazon ECS service by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the service
--   has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1.
--   However, because you specified a <tt>MinAdjustmentMagnitude</tt> of 2,
--   Application Auto Scaling scales out the service by 2 tasks.
stepScalingPolicyConfiguration_minAdjustmentMagnitude :: Lens' StepScalingPolicyConfiguration (Maybe Int)

-- | Specifies whether the scaling activities for a scalable target are in
--   a suspended state.
--   
--   <i>See:</i> <a>newSuspendedState</a> smart constructor.
data SuspendedState
SuspendedState' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> SuspendedState

-- | Whether scheduled scaling is suspended. Set the value to <tt>true</tt>
--   if you don't want Application Auto Scaling to add or remove capacity
--   by initiating scheduled actions. The default is <tt>false</tt>.
[$sel:scheduledScalingSuspended:SuspendedState'] :: SuspendedState -> Maybe Bool

-- | Whether scale in by a target tracking scaling policy or a step scaling
--   policy is suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to remove capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
[$sel:dynamicScalingInSuspended:SuspendedState'] :: SuspendedState -> Maybe Bool

-- | Whether scale out by a target tracking scaling policy or a step
--   scaling policy is suspended. Set the value to <tt>true</tt> if you
--   don't want Application Auto Scaling to add capacity when a scaling
--   policy is triggered. The default is <tt>false</tt>.
[$sel:dynamicScalingOutSuspended:SuspendedState'] :: SuspendedState -> Maybe Bool

-- | Create a value of <a>SuspendedState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduledScalingSuspended:SuspendedState'</a>,
--   <a>suspendedState_scheduledScalingSuspended</a> - Whether scheduled
--   scaling is suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to add or remove capacity by initiating
--   scheduled actions. The default is <tt>false</tt>.
--   
--   <a>$sel:dynamicScalingInSuspended:SuspendedState'</a>,
--   <a>suspendedState_dynamicScalingInSuspended</a> - Whether scale in by
--   a target tracking scaling policy or a step scaling policy is
--   suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to remove capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
--   
--   <a>$sel:dynamicScalingOutSuspended:SuspendedState'</a>,
--   <a>suspendedState_dynamicScalingOutSuspended</a> - Whether scale out
--   by a target tracking scaling policy or a step scaling policy is
--   suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to add capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
newSuspendedState :: SuspendedState

-- | Whether scheduled scaling is suspended. Set the value to <tt>true</tt>
--   if you don't want Application Auto Scaling to add or remove capacity
--   by initiating scheduled actions. The default is <tt>false</tt>.
suspendedState_scheduledScalingSuspended :: Lens' SuspendedState (Maybe Bool)

-- | Whether scale in by a target tracking scaling policy or a step scaling
--   policy is suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to remove capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
suspendedState_dynamicScalingInSuspended :: Lens' SuspendedState (Maybe Bool)

-- | Whether scale out by a target tracking scaling policy or a step
--   scaling policy is suspended. Set the value to <tt>true</tt> if you
--   don't want Application Auto Scaling to add capacity when a scaling
--   policy is triggered. The default is <tt>false</tt>.
suspendedState_dynamicScalingOutSuspended :: Lens' SuspendedState (Maybe Bool)

-- | Represents a target tracking scaling policy configuration to use with
--   Application Auto Scaling.
--   
--   <i>See:</i> <a>newTargetTrackingScalingPolicyConfiguration</a> smart
--   constructor.
data TargetTrackingScalingPolicyConfiguration
TargetTrackingScalingPolicyConfiguration' :: Maybe Bool -> Maybe PredefinedMetricSpecification -> Maybe Int -> Maybe CustomizedMetricSpecification -> Maybe Int -> Double -> TargetTrackingScalingPolicyConfiguration

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy won't remove capacity from the scalable
--   target. Otherwise, scale in is enabled and the target tracking scaling
--   policy can remove capacity from the scalable target. The default value
--   is <tt>false</tt>.
[$sel:disableScaleIn:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe Bool

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
[$sel:predefinedMetricSpecification:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe PredefinedMetricSpecification

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Application Auto
--   Scaling successfully scales out using a target tracking scaling
--   policy, it starts to calculate the cooldown time. The scaling policy
--   won't increase the desired capacity again unless either a larger scale
--   out is triggered or the cooldown period ends. While the cooldown
--   period is in effect, the capacity added by the initiating scale-out
--   activity is calculated as part of the desired capacity for the next
--   scale-out activity.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
[$sel:scaleOutCooldown:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe Int

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
[$sel:customizedMetricSpecification:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe CustomizedMetricSpecification

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Application Auto Scaling scales out the target
--   immediately. In this case, the scale-in cooldown period stops and
--   doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
[$sel:scaleInCooldown:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Maybe Int

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
--   The value must be a valid number based on the choice of metric. For
--   example, if the metric is CPU utilization, then the target value is a
--   percent value that represents how much of the CPU can be used before
--   scaling out.
[$sel:targetValue:TargetTrackingScalingPolicyConfiguration'] :: TargetTrackingScalingPolicyConfiguration -> Double

-- | Create a value of <a>TargetTrackingScalingPolicyConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_disableScaleIn</a> -
--   Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy won't remove capacity from the scalable
--   target. Otherwise, scale in is enabled and the target tracking scaling
--   policy can remove capacity from the scalable target. The default value
--   is <tt>false</tt>.
--   
--   
--   <a>$sel:predefinedMetricSpecification:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_predefinedMetricSpecification</a>
--   - A predefined metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:scaleOutCooldown:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_scaleOutCooldown</a> - The
--   amount of time, in seconds, to wait for a previous scale-out activity
--   to take effect.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Application Auto
--   Scaling successfully scales out using a target tracking scaling
--   policy, it starts to calculate the cooldown time. The scaling policy
--   won't increase the desired capacity again unless either a larger scale
--   out is triggered or the cooldown period ends. While the cooldown
--   period is in effect, the capacity added by the initiating scale-out
--   activity is calculated as part of the desired capacity for the next
--   scale-out activity.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   
--   <a>$sel:customizedMetricSpecification:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_customizedMetricSpecification</a>
--   - A customized metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:scaleInCooldown:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_scaleInCooldown</a> - The
--   amount of time, in seconds, after a scale-in activity completes before
--   another scale-in activity can start.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Application Auto Scaling scales out the target
--   immediately. In this case, the scale-in cooldown period stops and
--   doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   <a>$sel:targetValue:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_targetValue</a> - The
--   target value for the metric. Although this property accepts numbers of
--   type Double, it won't accept values that are either too small or too
--   large. Values must be in the range of -2^360 to 2^360. The value must
--   be a valid number based on the choice of metric. For example, if the
--   metric is CPU utilization, then the target value is a percent value
--   that represents how much of the CPU can be used before scaling out.
newTargetTrackingScalingPolicyConfiguration :: Double -> TargetTrackingScalingPolicyConfiguration

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy won't remove capacity from the scalable
--   target. Otherwise, scale in is enabled and the target tracking scaling
--   policy can remove capacity from the scalable target. The default value
--   is <tt>false</tt>.
targetTrackingScalingPolicyConfiguration_disableScaleIn :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Bool)

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingScalingPolicyConfiguration_predefinedMetricSpecification :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe PredefinedMetricSpecification)

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Application Auto
--   Scaling successfully scales out using a target tracking scaling
--   policy, it starts to calculate the cooldown time. The scaling policy
--   won't increase the desired capacity again unless either a larger scale
--   out is triggered or the cooldown period ends. While the cooldown
--   period is in effect, the capacity added by the initiating scale-out
--   activity is calculated as part of the desired capacity for the next
--   scale-out activity.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
targetTrackingScalingPolicyConfiguration_scaleOutCooldown :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Int)

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingScalingPolicyConfiguration_customizedMetricSpecification :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe CustomizedMetricSpecification)

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Application Auto Scaling scales out the target
--   immediately. In this case, the scale-in cooldown period stops and
--   doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
targetTrackingScalingPolicyConfiguration_scaleInCooldown :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Int)

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
--   The value must be a valid number based on the choice of metric. For
--   example, if the metric is CPU utilization, then the target value is a
--   percent value that represents how much of the CPU can be used before
--   scaling out.
targetTrackingScalingPolicyConfiguration_targetValue :: Lens' TargetTrackingScalingPolicyConfiguration Double


-- | Registers or updates a scalable target.
--   
--   A scalable target is a resource that Application Auto Scaling can
--   scale out and scale in. Scalable targets are uniquely identified by
--   the combination of resource ID, scalable dimension, and namespace.
--   
--   When you register a new scalable target, you must specify values for
--   minimum and maximum capacity. Current capacity will be adjusted within
--   the specified range when scaling starts. Application Auto Scaling
--   scaling policies will not scale capacity to values that are outside of
--   this range.
--   
--   After you register a scalable target, you do not need to register it
--   again to use other Application Auto Scaling operations. To see which
--   resources have been registered, use <a>DescribeScalableTargets</a>.
--   You can also view the scaling policies for a service namespace by
--   using <a>DescribeScalableTargets</a>. If you no longer need a scalable
--   target, you can deregister it by using
--   <a>DeregisterScalableTarget</a>.
--   
--   To update a scalable target, specify the parameters that you want to
--   change. Include the parameters that identify the scalable target:
--   resource ID, scalable dimension, and namespace. Any parameters that
--   you don't specify are not changed by this update request.
module Network.AWS.ApplicationAutoScaling.RegisterScalableTarget

-- | <i>See:</i> <a>newRegisterScalableTarget</a> smart constructor.
data RegisterScalableTarget
RegisterScalableTarget' :: Maybe Text -> Maybe Int -> Maybe SuspendedState -> Maybe Int -> ServiceNamespace -> Text -> ScalableDimension -> RegisterScalableTarget

-- | This parameter is required for services that do not support
--   service-linked roles (such as Amazon EMR), and it must specify the ARN
--   of an IAM role that allows Application Auto Scaling to modify the
--   scalable target on your behalf.
--   
--   If the service supports service-linked roles, Application Auto Scaling
--   uses a service-linked role, which it creates if it does not yet exist.
--   For more information, see <a>Application Auto Scaling IAM roles</a>.
[$sel:roleARN:RegisterScalableTarget'] :: RegisterScalableTarget -> Maybe Text

-- | The maximum value that you plan to scale out to. When a scaling policy
--   is in effect, Application Auto Scaling can scale out (expand) as
--   needed to the maximum capacity limit in response to changing demand.
--   This property is required when registering a new scalable target.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
[$sel:maxCapacity:RegisterScalableTarget'] :: RegisterScalableTarget -> Maybe Int

-- | An embedded object that contains attributes and attribute values that
--   are used to suspend and resume automatic scaling. Setting the value of
--   an attribute to <tt>true</tt> suspends the specified scaling
--   activities. Setting it to <tt>false</tt> (default) resumes the
--   specified scaling activities.
--   
--   <b>Suspension Outcomes</b>
--   
--   <ul>
--   <li>For <tt>DynamicScalingInSuspended</tt>, while a suspension is in
--   effect, all scale-in activities that are triggered by a scaling policy
--   are suspended.</li>
--   <li>For <tt>DynamicScalingOutSuspended</tt>, while a suspension is in
--   effect, all scale-out activities that are triggered by a scaling
--   policy are suspended.</li>
--   <li>For <tt>ScheduledScalingSuspended</tt>, while a suspension is in
--   effect, all scaling activities that involve scheduled actions are
--   suspended.</li>
--   </ul>
--   
--   For more information, see <a>Suspending and resuming scaling</a> in
--   the <i>Application Auto Scaling User Guide</i>.
[$sel:suspendedState:RegisterScalableTarget'] :: RegisterScalableTarget -> Maybe SuspendedState

-- | The minimum value that you plan to scale in to. When a scaling policy
--   is in effect, Application Auto Scaling can scale in (contract) as
--   needed to the minimum capacity limit in response to changing demand.
--   This property is required when registering a new scalable target.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
[$sel:minCapacity:RegisterScalableTarget'] :: RegisterScalableTarget -> Maybe Int

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:RegisterScalableTarget'] :: RegisterScalableTarget -> ServiceNamespace

-- | The identifier of the resource that is associated with the scalable
--   target. This string consists of the resource type and unique
--   identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:RegisterScalableTarget'] :: RegisterScalableTarget -> Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:RegisterScalableTarget'] :: RegisterScalableTarget -> ScalableDimension

-- | Create a value of <a>RegisterScalableTarget</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_roleARN</a> - This parameter is required for
--   services that do not support service-linked roles (such as Amazon
--   EMR), and it must specify the ARN of an IAM role that allows
--   Application Auto Scaling to modify the scalable target on your behalf.
--   
--   If the service supports service-linked roles, Application Auto Scaling
--   uses a service-linked role, which it creates if it does not yet exist.
--   For more information, see <a>Application Auto Scaling IAM roles</a>.
--   
--   <a>$sel:maxCapacity:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_maxCapacity</a> - The maximum value that you
--   plan to scale out to. When a scaling policy is in effect, Application
--   Auto Scaling can scale out (expand) as needed to the maximum capacity
--   limit in response to changing demand. This property is required when
--   registering a new scalable target.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:suspendedState:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_suspendedState</a> - An embedded object that
--   contains attributes and attribute values that are used to suspend and
--   resume automatic scaling. Setting the value of an attribute to
--   <tt>true</tt> suspends the specified scaling activities. Setting it to
--   <tt>false</tt> (default) resumes the specified scaling activities.
--   
--   <b>Suspension Outcomes</b>
--   
--   <ul>
--   <li>For <tt>DynamicScalingInSuspended</tt>, while a suspension is in
--   effect, all scale-in activities that are triggered by a scaling policy
--   are suspended.</li>
--   <li>For <tt>DynamicScalingOutSuspended</tt>, while a suspension is in
--   effect, all scale-out activities that are triggered by a scaling
--   policy are suspended.</li>
--   <li>For <tt>ScheduledScalingSuspended</tt>, while a suspension is in
--   effect, all scaling activities that involve scheduled actions are
--   suspended.</li>
--   </ul>
--   
--   For more information, see <a>Suspending and resuming scaling</a> in
--   the <i>Application Auto Scaling User Guide</i>.
--   
--   <a>$sel:minCapacity:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_minCapacity</a> - The minimum value that you
--   plan to scale in to. When a scaling policy is in effect, Application
--   Auto Scaling can scale in (contract) as needed to the minimum capacity
--   limit in response to changing demand. This property is required when
--   registering a new scalable target.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
--   
--   <a>$sel:serviceNamespace:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:resourceId:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_resourceId</a> - The identifier of the
--   resource that is associated with the scalable target. This string
--   consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_scalableDimension</a> - The scalable
--   dimension associated with the scalable target. This string consists of
--   the service namespace, resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newRegisterScalableTarget :: ServiceNamespace -> Text -> ScalableDimension -> RegisterScalableTarget

-- | This parameter is required for services that do not support
--   service-linked roles (such as Amazon EMR), and it must specify the ARN
--   of an IAM role that allows Application Auto Scaling to modify the
--   scalable target on your behalf.
--   
--   If the service supports service-linked roles, Application Auto Scaling
--   uses a service-linked role, which it creates if it does not yet exist.
--   For more information, see <a>Application Auto Scaling IAM roles</a>.
registerScalableTarget_roleARN :: Lens' RegisterScalableTarget (Maybe Text)

-- | The maximum value that you plan to scale out to. When a scaling policy
--   is in effect, Application Auto Scaling can scale out (expand) as
--   needed to the maximum capacity limit in response to changing demand.
--   This property is required when registering a new scalable target.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
registerScalableTarget_maxCapacity :: Lens' RegisterScalableTarget (Maybe Int)

-- | An embedded object that contains attributes and attribute values that
--   are used to suspend and resume automatic scaling. Setting the value of
--   an attribute to <tt>true</tt> suspends the specified scaling
--   activities. Setting it to <tt>false</tt> (default) resumes the
--   specified scaling activities.
--   
--   <b>Suspension Outcomes</b>
--   
--   <ul>
--   <li>For <tt>DynamicScalingInSuspended</tt>, while a suspension is in
--   effect, all scale-in activities that are triggered by a scaling policy
--   are suspended.</li>
--   <li>For <tt>DynamicScalingOutSuspended</tt>, while a suspension is in
--   effect, all scale-out activities that are triggered by a scaling
--   policy are suspended.</li>
--   <li>For <tt>ScheduledScalingSuspended</tt>, while a suspension is in
--   effect, all scaling activities that involve scheduled actions are
--   suspended.</li>
--   </ul>
--   
--   For more information, see <a>Suspending and resuming scaling</a> in
--   the <i>Application Auto Scaling User Guide</i>.
registerScalableTarget_suspendedState :: Lens' RegisterScalableTarget (Maybe SuspendedState)

-- | The minimum value that you plan to scale in to. When a scaling policy
--   is in effect, Application Auto Scaling can scale in (contract) as
--   needed to the minimum capacity limit in response to changing demand.
--   This property is required when registering a new scalable target.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
registerScalableTarget_minCapacity :: Lens' RegisterScalableTarget (Maybe Int)

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
registerScalableTarget_serviceNamespace :: Lens' RegisterScalableTarget ServiceNamespace

-- | The identifier of the resource that is associated with the scalable
--   target. This string consists of the resource type and unique
--   identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
registerScalableTarget_resourceId :: Lens' RegisterScalableTarget Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
registerScalableTarget_scalableDimension :: Lens' RegisterScalableTarget ScalableDimension

-- | <i>See:</i> <a>newRegisterScalableTargetResponse</a> smart
--   constructor.
data RegisterScalableTargetResponse
RegisterScalableTargetResponse' :: Int -> RegisterScalableTargetResponse

-- | The response's http status code.
[$sel:httpStatus:RegisterScalableTargetResponse'] :: RegisterScalableTargetResponse -> Int

-- | Create a value of <a>RegisterScalableTargetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterScalableTargetResponse'</a>,
--   <a>registerScalableTargetResponse_httpStatus</a> - The response's http
--   status code.
newRegisterScalableTargetResponse :: Int -> RegisterScalableTargetResponse

-- | The response's http status code.
registerScalableTargetResponse_httpStatus :: Lens' RegisterScalableTargetResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTargetResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTargetResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTargetResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTargetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTargetResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.RegisterScalableTarget.RegisterScalableTarget


-- | Creates or updates a scheduled action for an Application Auto Scaling
--   scalable target.
--   
--   Each scalable target is identified by a service namespace, resource
--   ID, and scalable dimension. A scheduled action applies to the scalable
--   target identified by those three attributes. You cannot create a
--   scheduled action until you have registered the resource as a scalable
--   target.
--   
--   When start and end times are specified with a recurring schedule using
--   a cron expression or rates, they form the boundaries for when the
--   recurring action starts and stops.
--   
--   To update a scheduled action, specify the parameters that you want to
--   change. If you don't specify start and end times, the old values are
--   deleted.
--   
--   For more information, see <a>Scheduled scaling</a> in the
--   <i>Application Auto Scaling User Guide</i>.
--   
--   If a scalable target is deregistered, the scalable target is no longer
--   available to run scheduled actions. Any scheduled actions that were
--   specified for the scalable target are deleted.
module Network.AWS.ApplicationAutoScaling.PutScheduledAction

-- | <i>See:</i> <a>newPutScheduledAction</a> smart constructor.
data PutScheduledAction
PutScheduledAction' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ScalableTargetAction -> Maybe Text -> ServiceNamespace -> Text -> Text -> ScalableDimension -> PutScheduledAction

-- | The date and time for this scheduled action to start, in UTC.
[$sel:startTime:PutScheduledAction'] :: PutScheduledAction -> Maybe POSIX

-- | The date and time for the recurring schedule to end, in UTC.
[$sel:endTime:PutScheduledAction'] :: PutScheduledAction -> Maybe POSIX

-- | Specifies the time zone used when setting a scheduled action by using
--   an at or cron expression. If a time zone is not provided, UTC is used
--   by default.
--   
--   Valid values are the canonical names of the IANA time zones supported
--   by Joda-Time (such as <tt>Etc/GMT+9</tt> or <tt>Pacific/Tahiti</tt>).
--   For more information, see
--   <a>https://www.joda.org/joda-time/timezones.html</a>.
[$sel:timezone:PutScheduledAction'] :: PutScheduledAction -> Maybe Text

-- | The new minimum and maximum capacity. You can set both values or just
--   one. At the scheduled time, if the current capacity is below the
--   minimum capacity, Application Auto Scaling scales out to the minimum
--   capacity. If the current capacity is above the maximum capacity,
--   Application Auto Scaling scales in to the maximum capacity.
[$sel:scalableTargetAction:PutScheduledAction'] :: PutScheduledAction -> Maybe ScalableTargetAction

-- | The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
[$sel:schedule:PutScheduledAction'] :: PutScheduledAction -> Maybe Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:PutScheduledAction'] :: PutScheduledAction -> ServiceNamespace

-- | The name of the scheduled action. This name must be unique among all
--   other scheduled actions on the specified scalable target.
[$sel:scheduledActionName:PutScheduledAction'] :: PutScheduledAction -> Text

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:PutScheduledAction'] :: PutScheduledAction -> Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:PutScheduledAction'] :: PutScheduledAction -> ScalableDimension

-- | Create a value of <a>PutScheduledAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:PutScheduledAction'</a>,
--   <a>putScheduledAction_startTime</a> - The date and time for this
--   scheduled action to start, in UTC.
--   
--   <a>$sel:endTime:PutScheduledAction'</a>,
--   <a>putScheduledAction_endTime</a> - The date and time for the
--   recurring schedule to end, in UTC.
--   
--   <a>$sel:timezone:PutScheduledAction'</a>,
--   <a>putScheduledAction_timezone</a> - Specifies the time zone used when
--   setting a scheduled action by using an at or cron expression. If a
--   time zone is not provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones supported
--   by Joda-Time (such as <tt>Etc/GMT+9</tt> or <tt>Pacific/Tahiti</tt>).
--   For more information, see
--   <a>https://www.joda.org/joda-time/timezones.html</a>.
--   
--   <a>$sel:scalableTargetAction:PutScheduledAction'</a>,
--   <a>putScheduledAction_scalableTargetAction</a> - The new minimum and
--   maximum capacity. You can set both values or just one. At the
--   scheduled time, if the current capacity is below the minimum capacity,
--   Application Auto Scaling scales out to the minimum capacity. If the
--   current capacity is above the maximum capacity, Application Auto
--   Scaling scales in to the maximum capacity.
--   
--   <a>$sel:schedule:PutScheduledAction'</a>,
--   <a>putScheduledAction_schedule</a> - The schedule for this action. The
--   following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:serviceNamespace:PutScheduledAction'</a>,
--   <a>putScheduledAction_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:scheduledActionName:PutScheduledAction'</a>,
--   <a>putScheduledAction_scheduledActionName</a> - The name of the
--   scheduled action. This name must be unique among all other scheduled
--   actions on the specified scalable target.
--   
--   <a>$sel:resourceId:PutScheduledAction'</a>,
--   <a>putScheduledAction_resourceId</a> - The identifier of the resource
--   associated with the scheduled action. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:PutScheduledAction'</a>,
--   <a>putScheduledAction_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newPutScheduledAction :: ServiceNamespace -> Text -> Text -> ScalableDimension -> PutScheduledAction

-- | The date and time for this scheduled action to start, in UTC.
putScheduledAction_startTime :: Lens' PutScheduledAction (Maybe UTCTime)

-- | The date and time for the recurring schedule to end, in UTC.
putScheduledAction_endTime :: Lens' PutScheduledAction (Maybe UTCTime)

-- | Specifies the time zone used when setting a scheduled action by using
--   an at or cron expression. If a time zone is not provided, UTC is used
--   by default.
--   
--   Valid values are the canonical names of the IANA time zones supported
--   by Joda-Time (such as <tt>Etc/GMT+9</tt> or <tt>Pacific/Tahiti</tt>).
--   For more information, see
--   <a>https://www.joda.org/joda-time/timezones.html</a>.
putScheduledAction_timezone :: Lens' PutScheduledAction (Maybe Text)

-- | The new minimum and maximum capacity. You can set both values or just
--   one. At the scheduled time, if the current capacity is below the
--   minimum capacity, Application Auto Scaling scales out to the minimum
--   capacity. If the current capacity is above the maximum capacity,
--   Application Auto Scaling scales in to the maximum capacity.
putScheduledAction_scalableTargetAction :: Lens' PutScheduledAction (Maybe ScalableTargetAction)

-- | The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
putScheduledAction_schedule :: Lens' PutScheduledAction (Maybe Text)

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
putScheduledAction_serviceNamespace :: Lens' PutScheduledAction ServiceNamespace

-- | The name of the scheduled action. This name must be unique among all
--   other scheduled actions on the specified scalable target.
putScheduledAction_scheduledActionName :: Lens' PutScheduledAction Text

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
putScheduledAction_resourceId :: Lens' PutScheduledAction Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
putScheduledAction_scalableDimension :: Lens' PutScheduledAction ScalableDimension

-- | <i>See:</i> <a>newPutScheduledActionResponse</a> smart constructor.
data PutScheduledActionResponse
PutScheduledActionResponse' :: Int -> PutScheduledActionResponse

-- | The response's http status code.
[$sel:httpStatus:PutScheduledActionResponse'] :: PutScheduledActionResponse -> Int

-- | Create a value of <a>PutScheduledActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutScheduledActionResponse'</a>,
--   <a>putScheduledActionResponse_httpStatus</a> - The response's http
--   status code.
newPutScheduledActionResponse :: Int -> PutScheduledActionResponse

-- | The response's http status code.
putScheduledActionResponse_httpStatus :: Lens' PutScheduledActionResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledActionResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledActionResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledActionResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.PutScheduledAction.PutScheduledAction


-- | Creates or updates a scaling policy for an Application Auto Scaling
--   scalable target.
--   
--   Each scalable target is identified by a service namespace, resource
--   ID, and scalable dimension. A scaling policy applies to the scalable
--   target identified by those three attributes. You cannot create a
--   scaling policy until you have registered the resource as a scalable
--   target.
--   
--   Multiple scaling policies can be in force at the same time for the
--   same scalable target. You can have one or more target tracking scaling
--   policies, one or more step scaling policies, or both. However, there
--   is a chance that multiple policies could conflict, instructing the
--   scalable target to scale out or in at the same time. Application Auto
--   Scaling gives precedence to the policy that provides the largest
--   capacity for both scale out and scale in. For example, if one policy
--   increases capacity by 3, another policy increases capacity by 200
--   percent, and the current capacity is 10, Application Auto Scaling uses
--   the policy with the highest calculated capacity (200% of 10 = 20) and
--   scales out to 30.
--   
--   We recommend caution, however, when using target tracking scaling
--   policies with step scaling policies because conflicts between these
--   policies can cause undesirable behavior. For example, if the step
--   scaling policy initiates a scale-in activity before the target
--   tracking policy is ready to scale in, the scale-in activity will not
--   be blocked. After the scale-in activity completes, the target tracking
--   policy could instruct the scalable target to scale out again.
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step scaling policies</a> in the <i>Application Auto Scaling User
--   Guide</i>.
--   
--   If a scalable target is deregistered, the scalable target is no longer
--   available to execute scaling policies. Any scaling policies that were
--   specified for the scalable target are deleted.
module Network.AWS.ApplicationAutoScaling.PutScalingPolicy

-- | <i>See:</i> <a>newPutScalingPolicy</a> smart constructor.
data PutScalingPolicy
PutScalingPolicy' :: Maybe TargetTrackingScalingPolicyConfiguration -> Maybe PolicyType -> Maybe StepScalingPolicyConfiguration -> Text -> ServiceNamespace -> Text -> ScalableDimension -> PutScalingPolicy

-- | A target tracking scaling policy. Includes support for predefined or
--   customized metrics.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>TargetTrackingScaling</tt>.
[$sel:targetTrackingScalingPolicyConfiguration:PutScalingPolicy'] :: PutScalingPolicy -> Maybe TargetTrackingScalingPolicyConfiguration

-- | The policy type. This parameter is required if you are creating a
--   scaling policy.
--   
--   The following policy types are supported:
--   
--   <tt>TargetTrackingScaling</tt>—Not supported for Amazon EMR
--   
--   <tt>StepScaling</tt>—Not supported for DynamoDB, Amazon Comprehend,
--   Lambda, Amazon Keyspaces (for Apache Cassandra), Amazon MSK, or Amazon
--   ElastiCache for Redis.
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step scaling policies</a> in the <i>Application Auto Scaling User
--   Guide</i>.
[$sel:policyType:PutScalingPolicy'] :: PutScalingPolicy -> Maybe PolicyType

-- | A step scaling policy.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>StepScaling</tt>.
[$sel:stepScalingPolicyConfiguration:PutScalingPolicy'] :: PutScalingPolicy -> Maybe StepScalingPolicyConfiguration

-- | The name of the scaling policy.
[$sel:policyName:PutScalingPolicy'] :: PutScalingPolicy -> Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:PutScalingPolicy'] :: PutScalingPolicy -> ServiceNamespace

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:PutScalingPolicy'] :: PutScalingPolicy -> Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:PutScalingPolicy'] :: PutScalingPolicy -> ScalableDimension

-- | Create a value of <a>PutScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:targetTrackingScalingPolicyConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_targetTrackingScalingPolicyConfiguration</a> - A
--   target tracking scaling policy. Includes support for predefined or
--   customized metrics.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>TargetTrackingScaling</tt>.
--   
--   <a>$sel:policyType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyType</a> - The policy type. This parameter
--   is required if you are creating a scaling policy.
--   
--   The following policy types are supported:
--   
--   <tt>TargetTrackingScaling</tt>—Not supported for Amazon EMR
--   
--   <tt>StepScaling</tt>—Not supported for DynamoDB, Amazon Comprehend,
--   Lambda, Amazon Keyspaces (for Apache Cassandra), Amazon MSK, or Amazon
--   ElastiCache for Redis.
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step scaling policies</a> in the <i>Application Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:stepScalingPolicyConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_stepScalingPolicyConfiguration</a> - A step
--   scaling policy.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>StepScaling</tt>.
--   
--   <a>$sel:policyName:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyName</a> - The name of the scaling policy.
--   
--   <a>$sel:serviceNamespace:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:resourceId:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_resourceId</a> - The identifier of the resource
--   associated with the scaling policy. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newPutScalingPolicy :: Text -> ServiceNamespace -> Text -> ScalableDimension -> PutScalingPolicy

-- | A target tracking scaling policy. Includes support for predefined or
--   customized metrics.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>TargetTrackingScaling</tt>.
putScalingPolicy_targetTrackingScalingPolicyConfiguration :: Lens' PutScalingPolicy (Maybe TargetTrackingScalingPolicyConfiguration)

-- | The policy type. This parameter is required if you are creating a
--   scaling policy.
--   
--   The following policy types are supported:
--   
--   <tt>TargetTrackingScaling</tt>—Not supported for Amazon EMR
--   
--   <tt>StepScaling</tt>—Not supported for DynamoDB, Amazon Comprehend,
--   Lambda, Amazon Keyspaces (for Apache Cassandra), Amazon MSK, or Amazon
--   ElastiCache for Redis.
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step scaling policies</a> in the <i>Application Auto Scaling User
--   Guide</i>.
putScalingPolicy_policyType :: Lens' PutScalingPolicy (Maybe PolicyType)

-- | A step scaling policy.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>StepScaling</tt>.
putScalingPolicy_stepScalingPolicyConfiguration :: Lens' PutScalingPolicy (Maybe StepScalingPolicyConfiguration)

-- | The name of the scaling policy.
putScalingPolicy_policyName :: Lens' PutScalingPolicy Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
putScalingPolicy_serviceNamespace :: Lens' PutScalingPolicy ServiceNamespace

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
putScalingPolicy_resourceId :: Lens' PutScalingPolicy Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
putScalingPolicy_scalableDimension :: Lens' PutScalingPolicy ScalableDimension

-- | <i>See:</i> <a>newPutScalingPolicyResponse</a> smart constructor.
data PutScalingPolicyResponse
PutScalingPolicyResponse' :: Maybe [Alarm] -> Int -> Text -> PutScalingPolicyResponse

-- | The CloudWatch alarms created for the target tracking scaling policy.
[$sel:alarms:PutScalingPolicyResponse'] :: PutScalingPolicyResponse -> Maybe [Alarm]

-- | The response's http status code.
[$sel:httpStatus:PutScalingPolicyResponse'] :: PutScalingPolicyResponse -> Int

-- | The Amazon Resource Name (ARN) of the resulting scaling policy.
[$sel:policyARN:PutScalingPolicyResponse'] :: PutScalingPolicyResponse -> Text

-- | Create a value of <a>PutScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarms:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_alarms</a> - The CloudWatch alarms created
--   for the target tracking scaling policy.
--   
--   <a>$sel:httpStatus:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:policyARN:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_policyARN</a> - The Amazon Resource Name
--   (ARN) of the resulting scaling policy.
newPutScalingPolicyResponse :: Int -> Text -> PutScalingPolicyResponse

-- | The CloudWatch alarms created for the target tracking scaling policy.
putScalingPolicyResponse_alarms :: Lens' PutScalingPolicyResponse (Maybe [Alarm])

-- | The response's http status code.
putScalingPolicyResponse_httpStatus :: Lens' PutScalingPolicyResponse Int

-- | The Amazon Resource Name (ARN) of the resulting scaling policy.
putScalingPolicyResponse_policyARN :: Lens' PutScalingPolicyResponse Text
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.PutScalingPolicy.PutScalingPolicy


-- | Describes the Application Auto Scaling scheduled actions for the
--   specified service namespace.
--   
--   You can filter the results using the <tt>ResourceId</tt>,
--   <tt>ScalableDimension</tt>, and <tt>ScheduledActionNames</tt>
--   parameters.
--   
--   For more information, see <a>Scheduled scaling</a> and <a>Managing
--   scheduled scaling</a> in the <i>Application Auto Scaling User
--   Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.ApplicationAutoScaling.DescribeScheduledActions

-- | <i>See:</i> <a>newDescribeScheduledActions</a> smart constructor.
data DescribeScheduledActions
DescribeScheduledActions' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe ScalableDimension -> Maybe [Text] -> ServiceNamespace -> DescribeScheduledActions

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe Text

-- | The token for the next set of results.
[$sel:nextToken:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe Text

-- | The maximum number of scheduled action results. This value can be
--   between 1 and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
[$sel:maxResults:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe Int

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe ScalableDimension

-- | The names of the scheduled actions to describe.
[$sel:scheduledActionNames:DescribeScheduledActions'] :: DescribeScheduledActions -> Maybe [Text]

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:DescribeScheduledActions'] :: DescribeScheduledActions -> ServiceNamespace

-- | Create a value of <a>DescribeScheduledActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_resourceId</a> - The identifier of the
--   resource associated with the scheduled action. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_nextToken</a> - The token for the next set
--   of results.
--   
--   <a>$sel:maxResults:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_maxResults</a> - The maximum number of
--   scheduled action results. This value can be between 1 and 50. The
--   default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
--   
--   <a>$sel:scalableDimension:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_scalableDimension</a> - The scalable
--   dimension. This string consists of the service namespace, resource
--   type, and scaling property. If you specify a scalable dimension, you
--   must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:scheduledActionNames:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_scheduledActionNames</a> - The names of
--   the scheduled actions to describe.
--   
--   <a>$sel:serviceNamespace:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_serviceNamespace</a> - The namespace of
--   the Amazon Web Services service that provides the resource. For a
--   resource provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
newDescribeScheduledActions :: ServiceNamespace -> DescribeScheduledActions

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
describeScheduledActions_resourceId :: Lens' DescribeScheduledActions (Maybe Text)

-- | The token for the next set of results.
describeScheduledActions_nextToken :: Lens' DescribeScheduledActions (Maybe Text)

-- | The maximum number of scheduled action results. This value can be
--   between 1 and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
describeScheduledActions_maxResults :: Lens' DescribeScheduledActions (Maybe Int)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
describeScheduledActions_scalableDimension :: Lens' DescribeScheduledActions (Maybe ScalableDimension)

-- | The names of the scheduled actions to describe.
describeScheduledActions_scheduledActionNames :: Lens' DescribeScheduledActions (Maybe [Text])

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
describeScheduledActions_serviceNamespace :: Lens' DescribeScheduledActions ServiceNamespace

-- | <i>See:</i> <a>newDescribeScheduledActionsResponse</a> smart
--   constructor.
data DescribeScheduledActionsResponse
DescribeScheduledActionsResponse' :: Maybe Text -> Maybe [ScheduledAction] -> Int -> DescribeScheduledActionsResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
[$sel:nextToken:DescribeScheduledActionsResponse'] :: DescribeScheduledActionsResponse -> Maybe Text

-- | Information about the scheduled actions.
[$sel:scheduledActions:DescribeScheduledActionsResponse'] :: DescribeScheduledActionsResponse -> Maybe [ScheduledAction]

-- | The response's http status code.
[$sel:httpStatus:DescribeScheduledActionsResponse'] :: DescribeScheduledActionsResponse -> Int

-- | Create a value of <a>DescribeScheduledActionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScheduledActions'</a>,
--   <a>describeScheduledActionsResponse_nextToken</a> - The token required
--   to get the next set of results. This value is <tt>null</tt> if there
--   are no more results to return.
--   
--   <a>$sel:scheduledActions:DescribeScheduledActionsResponse'</a>,
--   <a>describeScheduledActionsResponse_scheduledActions</a> - Information
--   about the scheduled actions.
--   
--   <a>$sel:httpStatus:DescribeScheduledActionsResponse'</a>,
--   <a>describeScheduledActionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScheduledActionsResponse :: Int -> DescribeScheduledActionsResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScheduledActionsResponse_nextToken :: Lens' DescribeScheduledActionsResponse (Maybe Text)

-- | Information about the scheduled actions.
describeScheduledActionsResponse_scheduledActions :: Lens' DescribeScheduledActionsResponse (Maybe [ScheduledAction])

-- | The response's http status code.
describeScheduledActionsResponse_httpStatus :: Lens' DescribeScheduledActionsResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.DescribeScheduledActions.DescribeScheduledActions


-- | Describes the Application Auto Scaling scaling policies for the
--   specified service namespace.
--   
--   You can filter the results using <tt>ResourceId</tt>,
--   <tt>ScalableDimension</tt>, and <tt>PolicyNames</tt>.
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step scaling policies</a> in the <i>Application Auto Scaling User
--   Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies

-- | <i>See:</i> <a>newDescribeScalingPolicies</a> smart constructor.
data DescribeScalingPolicies
DescribeScalingPolicies' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe ScalableDimension -> Maybe [Text] -> ServiceNamespace -> DescribeScalingPolicies

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe Text

-- | The token for the next set of results.
[$sel:nextToken:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe Text

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
[$sel:maxResults:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe Int

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe ScalableDimension

-- | The names of the scaling policies to describe.
[$sel:policyNames:DescribeScalingPolicies'] :: DescribeScalingPolicies -> Maybe [Text]

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:DescribeScalingPolicies'] :: DescribeScalingPolicies -> ServiceNamespace

-- | Create a value of <a>DescribeScalingPolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_resourceId</a> - The identifier of the
--   resource associated with the scaling policy. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_nextToken</a> - The token for the next set
--   of results.
--   
--   <a>$sel:maxResults:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_maxResults</a> - The maximum number of
--   scalable targets. This value can be between 1 and 50. The default
--   value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
--   
--   <a>$sel:scalableDimension:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_scalableDimension</a> - The scalable
--   dimension. This string consists of the service namespace, resource
--   type, and scaling property. If you specify a scalable dimension, you
--   must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:policyNames:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_policyNames</a> - The names of the scaling
--   policies to describe.
--   
--   <a>$sel:serviceNamespace:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
newDescribeScalingPolicies :: ServiceNamespace -> DescribeScalingPolicies

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
describeScalingPolicies_resourceId :: Lens' DescribeScalingPolicies (Maybe Text)

-- | The token for the next set of results.
describeScalingPolicies_nextToken :: Lens' DescribeScalingPolicies (Maybe Text)

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
describeScalingPolicies_maxResults :: Lens' DescribeScalingPolicies (Maybe Int)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
describeScalingPolicies_scalableDimension :: Lens' DescribeScalingPolicies (Maybe ScalableDimension)

-- | The names of the scaling policies to describe.
describeScalingPolicies_policyNames :: Lens' DescribeScalingPolicies (Maybe [Text])

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
describeScalingPolicies_serviceNamespace :: Lens' DescribeScalingPolicies ServiceNamespace

-- | <i>See:</i> <a>newDescribeScalingPoliciesResponse</a> smart
--   constructor.
data DescribeScalingPoliciesResponse
DescribeScalingPoliciesResponse' :: Maybe Text -> Maybe [ScalingPolicy] -> Int -> DescribeScalingPoliciesResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
[$sel:nextToken:DescribeScalingPoliciesResponse'] :: DescribeScalingPoliciesResponse -> Maybe Text

-- | Information about the scaling policies.
[$sel:scalingPolicies:DescribeScalingPoliciesResponse'] :: DescribeScalingPoliciesResponse -> Maybe [ScalingPolicy]

-- | The response's http status code.
[$sel:httpStatus:DescribeScalingPoliciesResponse'] :: DescribeScalingPoliciesResponse -> Int

-- | Create a value of <a>DescribeScalingPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPolicies'</a>,
--   <a>describeScalingPoliciesResponse_nextToken</a> - The token required
--   to get the next set of results. This value is <tt>null</tt> if there
--   are no more results to return.
--   
--   <a>$sel:scalingPolicies:DescribeScalingPoliciesResponse'</a>,
--   <a>describeScalingPoliciesResponse_scalingPolicies</a> - Information
--   about the scaling policies.
--   
--   <a>$sel:httpStatus:DescribeScalingPoliciesResponse'</a>,
--   <a>describeScalingPoliciesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalingPoliciesResponse :: Int -> DescribeScalingPoliciesResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalingPoliciesResponse_nextToken :: Lens' DescribeScalingPoliciesResponse (Maybe Text)

-- | Information about the scaling policies.
describeScalingPoliciesResponse_scalingPolicies :: Lens' DescribeScalingPoliciesResponse (Maybe [ScalingPolicy])

-- | The response's http status code.
describeScalingPoliciesResponse_httpStatus :: Lens' DescribeScalingPoliciesResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPoliciesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.DescribeScalingPolicies.DescribeScalingPolicies


-- | Provides descriptive information about the scaling activities in the
--   specified namespace from the previous six weeks.
--   
--   You can filter the results using <tt>ResourceId</tt> and
--   <tt>ScalableDimension</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.ApplicationAutoScaling.DescribeScalingActivities

-- | <i>See:</i> <a>newDescribeScalingActivities</a> smart constructor.
data DescribeScalingActivities
DescribeScalingActivities' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe ScalableDimension -> ServiceNamespace -> DescribeScalingActivities

-- | The identifier of the resource associated with the scaling activity.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe Text

-- | The token for the next set of results.
[$sel:nextToken:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe Text

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
[$sel:maxResults:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe Int

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:DescribeScalingActivities'] :: DescribeScalingActivities -> Maybe ScalableDimension

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:DescribeScalingActivities'] :: DescribeScalingActivities -> ServiceNamespace

-- | Create a value of <a>DescribeScalingActivities</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_resourceId</a> - The identifier of the
--   resource associated with the scaling activity. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_nextToken</a> - The token for the next
--   set of results.
--   
--   <a>$sel:maxResults:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_maxResults</a> - The maximum number of
--   scalable targets. This value can be between 1 and 50. The default
--   value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
--   
--   <a>$sel:scalableDimension:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_scalableDimension</a> - The scalable
--   dimension. This string consists of the service namespace, resource
--   type, and scaling property. If you specify a scalable dimension, you
--   must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:serviceNamespace:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_serviceNamespace</a> - The namespace of
--   the Amazon Web Services service that provides the resource. For a
--   resource provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
newDescribeScalingActivities :: ServiceNamespace -> DescribeScalingActivities

-- | The identifier of the resource associated with the scaling activity.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
describeScalingActivities_resourceId :: Lens' DescribeScalingActivities (Maybe Text)

-- | The token for the next set of results.
describeScalingActivities_nextToken :: Lens' DescribeScalingActivities (Maybe Text)

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
describeScalingActivities_maxResults :: Lens' DescribeScalingActivities (Maybe Int)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
describeScalingActivities_scalableDimension :: Lens' DescribeScalingActivities (Maybe ScalableDimension)

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
describeScalingActivities_serviceNamespace :: Lens' DescribeScalingActivities ServiceNamespace

-- | <i>See:</i> <a>newDescribeScalingActivitiesResponse</a> smart
--   constructor.
data DescribeScalingActivitiesResponse
DescribeScalingActivitiesResponse' :: Maybe Text -> Maybe [ScalingActivity] -> Int -> DescribeScalingActivitiesResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
[$sel:nextToken:DescribeScalingActivitiesResponse'] :: DescribeScalingActivitiesResponse -> Maybe Text

-- | A list of scaling activity objects.
[$sel:scalingActivities:DescribeScalingActivitiesResponse'] :: DescribeScalingActivitiesResponse -> Maybe [ScalingActivity]

-- | The response's http status code.
[$sel:httpStatus:DescribeScalingActivitiesResponse'] :: DescribeScalingActivitiesResponse -> Int

-- | Create a value of <a>DescribeScalingActivitiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingActivities'</a>,
--   <a>describeScalingActivitiesResponse_nextToken</a> - The token
--   required to get the next set of results. This value is <tt>null</tt>
--   if there are no more results to return.
--   
--   <a>$sel:scalingActivities:DescribeScalingActivitiesResponse'</a>,
--   <a>describeScalingActivitiesResponse_scalingActivities</a> - A list of
--   scaling activity objects.
--   
--   <a>$sel:httpStatus:DescribeScalingActivitiesResponse'</a>,
--   <a>describeScalingActivitiesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalingActivitiesResponse :: Int -> DescribeScalingActivitiesResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalingActivitiesResponse_nextToken :: Lens' DescribeScalingActivitiesResponse (Maybe Text)

-- | A list of scaling activity objects.
describeScalingActivitiesResponse_scalingActivities :: Lens' DescribeScalingActivitiesResponse (Maybe [ScalingActivity])

-- | The response's http status code.
describeScalingActivitiesResponse_httpStatus :: Lens' DescribeScalingActivitiesResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivitiesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.DescribeScalingActivities.DescribeScalingActivities


-- | Gets information about the scalable targets in the specified
--   namespace.
--   
--   You can filter the results using <tt>ResourceIds</tt> and
--   <tt>ScalableDimension</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.ApplicationAutoScaling.DescribeScalableTargets

-- | <i>See:</i> <a>newDescribeScalableTargets</a> smart constructor.
data DescribeScalableTargets
DescribeScalableTargets' :: Maybe Text -> Maybe Int -> Maybe ScalableDimension -> Maybe [Text] -> ServiceNamespace -> DescribeScalableTargets

-- | The token for the next set of results.
[$sel:nextToken:DescribeScalableTargets'] :: DescribeScalableTargets -> Maybe Text

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
[$sel:maxResults:DescribeScalableTargets'] :: DescribeScalableTargets -> Maybe Int

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property. If you specify a scalable dimension, you must also specify a
--   resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:DescribeScalableTargets'] :: DescribeScalableTargets -> Maybe ScalableDimension

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceIds:DescribeScalableTargets'] :: DescribeScalableTargets -> Maybe [Text]

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:DescribeScalableTargets'] :: DescribeScalableTargets -> ServiceNamespace

-- | Create a value of <a>DescribeScalableTargets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_nextToken</a> - The token for the next set
--   of results.
--   
--   <a>$sel:maxResults:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_maxResults</a> - The maximum number of
--   scalable targets. This value can be between 1 and 50. The default
--   value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
--   
--   <a>$sel:scalableDimension:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_scalableDimension</a> - The scalable
--   dimension associated with the scalable target. This string consists of
--   the service namespace, resource type, and scaling property. If you
--   specify a scalable dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:resourceIds:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_resourceIds</a> - The identifier of the
--   resource associated with the scalable target. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:serviceNamespace:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
newDescribeScalableTargets :: ServiceNamespace -> DescribeScalableTargets

-- | The token for the next set of results.
describeScalableTargets_nextToken :: Lens' DescribeScalableTargets (Maybe Text)

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
describeScalableTargets_maxResults :: Lens' DescribeScalableTargets (Maybe Int)

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property. If you specify a scalable dimension, you must also specify a
--   resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
describeScalableTargets_scalableDimension :: Lens' DescribeScalableTargets (Maybe ScalableDimension)

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
describeScalableTargets_resourceIds :: Lens' DescribeScalableTargets (Maybe [Text])

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
describeScalableTargets_serviceNamespace :: Lens' DescribeScalableTargets ServiceNamespace

-- | <i>See:</i> <a>newDescribeScalableTargetsResponse</a> smart
--   constructor.
data DescribeScalableTargetsResponse
DescribeScalableTargetsResponse' :: Maybe Text -> Maybe [ScalableTarget] -> Int -> DescribeScalableTargetsResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
[$sel:nextToken:DescribeScalableTargetsResponse'] :: DescribeScalableTargetsResponse -> Maybe Text

-- | The scalable targets that match the request parameters.
[$sel:scalableTargets:DescribeScalableTargetsResponse'] :: DescribeScalableTargetsResponse -> Maybe [ScalableTarget]

-- | The response's http status code.
[$sel:httpStatus:DescribeScalableTargetsResponse'] :: DescribeScalableTargetsResponse -> Int

-- | Create a value of <a>DescribeScalableTargetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalableTargets'</a>,
--   <a>describeScalableTargetsResponse_nextToken</a> - The token required
--   to get the next set of results. This value is <tt>null</tt> if there
--   are no more results to return.
--   
--   <a>$sel:scalableTargets:DescribeScalableTargetsResponse'</a>,
--   <a>describeScalableTargetsResponse_scalableTargets</a> - The scalable
--   targets that match the request parameters.
--   
--   <a>$sel:httpStatus:DescribeScalableTargetsResponse'</a>,
--   <a>describeScalableTargetsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalableTargetsResponse :: Int -> DescribeScalableTargetsResponse

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalableTargetsResponse_nextToken :: Lens' DescribeScalableTargetsResponse (Maybe Text)

-- | The scalable targets that match the request parameters.
describeScalableTargetsResponse_scalableTargets :: Lens' DescribeScalableTargetsResponse (Maybe [ScalableTarget])

-- | The response's http status code.
describeScalableTargetsResponse_httpStatus :: Lens' DescribeScalableTargetsResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargetsResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargetsResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargetsResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargetsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.DescribeScalableTargets.DescribeScalableTargets


-- | Deregisters an Application Auto Scaling scalable target when you have
--   finished using it. To see which resources have been registered, use
--   <a>DescribeScalableTargets</a>.
--   
--   Deregistering a scalable target deletes the scaling policies and the
--   scheduled actions that are associated with it.
module Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget

-- | <i>See:</i> <a>newDeregisterScalableTarget</a> smart constructor.
data DeregisterScalableTarget
DeregisterScalableTarget' :: ServiceNamespace -> Text -> ScalableDimension -> DeregisterScalableTarget

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:DeregisterScalableTarget'] :: DeregisterScalableTarget -> ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:DeregisterScalableTarget'] :: DeregisterScalableTarget -> Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:DeregisterScalableTarget'] :: DeregisterScalableTarget -> ScalableDimension

-- | Create a value of <a>DeregisterScalableTarget</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceNamespace:DeregisterScalableTarget'</a>,
--   <a>deregisterScalableTarget_serviceNamespace</a> - The namespace of
--   the Amazon Web Services service that provides the resource. For a
--   resource provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:resourceId:DeregisterScalableTarget'</a>,
--   <a>deregisterScalableTarget_resourceId</a> - The identifier of the
--   resource associated with the scalable target. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:DeregisterScalableTarget'</a>,
--   <a>deregisterScalableTarget_scalableDimension</a> - The scalable
--   dimension associated with the scalable target. This string consists of
--   the service namespace, resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newDeregisterScalableTarget :: ServiceNamespace -> Text -> ScalableDimension -> DeregisterScalableTarget

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
deregisterScalableTarget_serviceNamespace :: Lens' DeregisterScalableTarget ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
deregisterScalableTarget_resourceId :: Lens' DeregisterScalableTarget Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
deregisterScalableTarget_scalableDimension :: Lens' DeregisterScalableTarget ScalableDimension

-- | <i>See:</i> <a>newDeregisterScalableTargetResponse</a> smart
--   constructor.
data DeregisterScalableTargetResponse
DeregisterScalableTargetResponse' :: Int -> DeregisterScalableTargetResponse

-- | The response's http status code.
[$sel:httpStatus:DeregisterScalableTargetResponse'] :: DeregisterScalableTargetResponse -> Int

-- | Create a value of <a>DeregisterScalableTargetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterScalableTargetResponse'</a>,
--   <a>deregisterScalableTargetResponse_httpStatus</a> - The response's
--   http status code.
newDeregisterScalableTargetResponse :: Int -> DeregisterScalableTargetResponse

-- | The response's http status code.
deregisterScalableTargetResponse_httpStatus :: Lens' DeregisterScalableTargetResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTargetResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTargetResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTargetResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTargetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTargetResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.DeregisterScalableTarget.DeregisterScalableTarget


-- | Deletes the specified scheduled action for an Application Auto Scaling
--   scalable target.
--   
--   For more information, see <a>Delete a scheduled action</a> in the
--   <i>Application Auto Scaling User Guide</i>.
module Network.AWS.ApplicationAutoScaling.DeleteScheduledAction

-- | <i>See:</i> <a>newDeleteScheduledAction</a> smart constructor.
data DeleteScheduledAction
DeleteScheduledAction' :: ServiceNamespace -> Text -> Text -> ScalableDimension -> DeleteScheduledAction

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:DeleteScheduledAction'] :: DeleteScheduledAction -> ServiceNamespace

-- | The name of the scheduled action.
[$sel:scheduledActionName:DeleteScheduledAction'] :: DeleteScheduledAction -> Text

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:DeleteScheduledAction'] :: DeleteScheduledAction -> Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:DeleteScheduledAction'] :: DeleteScheduledAction -> ScalableDimension

-- | Create a value of <a>DeleteScheduledAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceNamespace:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:scheduledActionName:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_scheduledActionName</a> - The name of the
--   scheduled action.
--   
--   <a>$sel:resourceId:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_resourceId</a> - The identifier of the
--   resource associated with the scheduled action. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_scalableDimension</a> - The scalable
--   dimension. This string consists of the service namespace, resource
--   type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newDeleteScheduledAction :: ServiceNamespace -> Text -> Text -> ScalableDimension -> DeleteScheduledAction

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
deleteScheduledAction_serviceNamespace :: Lens' DeleteScheduledAction ServiceNamespace

-- | The name of the scheduled action.
deleteScheduledAction_scheduledActionName :: Lens' DeleteScheduledAction Text

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
deleteScheduledAction_resourceId :: Lens' DeleteScheduledAction Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
deleteScheduledAction_scalableDimension :: Lens' DeleteScheduledAction ScalableDimension

-- | <i>See:</i> <a>newDeleteScheduledActionResponse</a> smart constructor.
data DeleteScheduledActionResponse
DeleteScheduledActionResponse' :: Int -> DeleteScheduledActionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteScheduledActionResponse'] :: DeleteScheduledActionResponse -> Int

-- | Create a value of <a>DeleteScheduledActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteScheduledActionResponse'</a>,
--   <a>deleteScheduledActionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteScheduledActionResponse :: Int -> DeleteScheduledActionResponse

-- | The response's http status code.
deleteScheduledActionResponse_httpStatus :: Lens' DeleteScheduledActionResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledActionResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.DeleteScheduledAction.DeleteScheduledAction


-- | Deletes the specified scaling policy for an Application Auto Scaling
--   scalable target.
--   
--   Deleting a step scaling policy deletes the underlying alarm action,
--   but does not delete the CloudWatch alarm associated with the scaling
--   policy, even if it no longer has an associated action.
--   
--   For more information, see <a>Delete a step scaling policy</a> and
--   <a>Delete a target tracking scaling policy</a> in the <i>Application
--   Auto Scaling User Guide</i>.
module Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy

-- | <i>See:</i> <a>newDeleteScalingPolicy</a> smart constructor.
data DeleteScalingPolicy
DeleteScalingPolicy' :: Text -> ServiceNamespace -> Text -> ScalableDimension -> DeleteScalingPolicy

-- | The name of the scaling policy.
[$sel:policyName:DeleteScalingPolicy'] :: DeleteScalingPolicy -> Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
[$sel:serviceNamespace:DeleteScalingPolicy'] :: DeleteScalingPolicy -> ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
[$sel:resourceId:DeleteScalingPolicy'] :: DeleteScalingPolicy -> Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
[$sel:scalableDimension:DeleteScalingPolicy'] :: DeleteScalingPolicy -> ScalableDimension

-- | Create a value of <a>DeleteScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_policyName</a> - The name of the scaling
--   policy.
--   
--   <a>$sel:serviceNamespace:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:resourceId:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_resourceId</a> - The identifier of the resource
--   associated with the scalable target. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newDeleteScalingPolicy :: Text -> ServiceNamespace -> Text -> ScalableDimension -> DeleteScalingPolicy

-- | The name of the scaling policy.
deleteScalingPolicy_policyName :: Lens' DeleteScalingPolicy Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
deleteScalingPolicy_serviceNamespace :: Lens' DeleteScalingPolicy ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
deleteScalingPolicy_resourceId :: Lens' DeleteScalingPolicy Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
deleteScalingPolicy_scalableDimension :: Lens' DeleteScalingPolicy ScalableDimension

-- | <i>See:</i> <a>newDeleteScalingPolicyResponse</a> smart constructor.
data DeleteScalingPolicyResponse
DeleteScalingPolicyResponse' :: Int -> DeleteScalingPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteScalingPolicyResponse'] :: DeleteScalingPolicyResponse -> Int

-- | Create a value of <a>DeleteScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteScalingPolicyResponse'</a>,
--   <a>deleteScalingPolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteScalingPolicyResponse :: Int -> DeleteScalingPolicyResponse

-- | The response's http status code.
deleteScalingPolicyResponse_httpStatus :: Lens' DeleteScalingPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance GHC.Generics.Generic Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance GHC.Show.Show Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance GHC.Read.Read Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance GHC.Classes.Eq Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance Control.DeepSeq.NFData Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApplicationAutoScaling.DeleteScalingPolicy.DeleteScalingPolicy


module Network.AWS.ApplicationAutoScaling.Lens

-- | This parameter is required for services that do not support
--   service-linked roles (such as Amazon EMR), and it must specify the ARN
--   of an IAM role that allows Application Auto Scaling to modify the
--   scalable target on your behalf.
--   
--   If the service supports service-linked roles, Application Auto Scaling
--   uses a service-linked role, which it creates if it does not yet exist.
--   For more information, see <a>Application Auto Scaling IAM roles</a>.
registerScalableTarget_roleARN :: Lens' RegisterScalableTarget (Maybe Text)

-- | The maximum value that you plan to scale out to. When a scaling policy
--   is in effect, Application Auto Scaling can scale out (expand) as
--   needed to the maximum capacity limit in response to changing demand.
--   This property is required when registering a new scalable target.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
registerScalableTarget_maxCapacity :: Lens' RegisterScalableTarget (Maybe Int)

-- | An embedded object that contains attributes and attribute values that
--   are used to suspend and resume automatic scaling. Setting the value of
--   an attribute to <tt>true</tt> suspends the specified scaling
--   activities. Setting it to <tt>false</tt> (default) resumes the
--   specified scaling activities.
--   
--   <b>Suspension Outcomes</b>
--   
--   <ul>
--   <li>For <tt>DynamicScalingInSuspended</tt>, while a suspension is in
--   effect, all scale-in activities that are triggered by a scaling policy
--   are suspended.</li>
--   <li>For <tt>DynamicScalingOutSuspended</tt>, while a suspension is in
--   effect, all scale-out activities that are triggered by a scaling
--   policy are suspended.</li>
--   <li>For <tt>ScheduledScalingSuspended</tt>, while a suspension is in
--   effect, all scaling activities that involve scheduled actions are
--   suspended.</li>
--   </ul>
--   
--   For more information, see <a>Suspending and resuming scaling</a> in
--   the <i>Application Auto Scaling User Guide</i>.
registerScalableTarget_suspendedState :: Lens' RegisterScalableTarget (Maybe SuspendedState)

-- | The minimum value that you plan to scale in to. When a scaling policy
--   is in effect, Application Auto Scaling can scale in (contract) as
--   needed to the minimum capacity limit in response to changing demand.
--   This property is required when registering a new scalable target.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
registerScalableTarget_minCapacity :: Lens' RegisterScalableTarget (Maybe Int)

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
registerScalableTarget_serviceNamespace :: Lens' RegisterScalableTarget ServiceNamespace

-- | The identifier of the resource that is associated with the scalable
--   target. This string consists of the resource type and unique
--   identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
registerScalableTarget_resourceId :: Lens' RegisterScalableTarget Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
registerScalableTarget_scalableDimension :: Lens' RegisterScalableTarget ScalableDimension

-- | The response's http status code.
registerScalableTargetResponse_httpStatus :: Lens' RegisterScalableTargetResponse Int

-- | A target tracking scaling policy. Includes support for predefined or
--   customized metrics.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>TargetTrackingScaling</tt>.
putScalingPolicy_targetTrackingScalingPolicyConfiguration :: Lens' PutScalingPolicy (Maybe TargetTrackingScalingPolicyConfiguration)

-- | The policy type. This parameter is required if you are creating a
--   scaling policy.
--   
--   The following policy types are supported:
--   
--   <tt>TargetTrackingScaling</tt>—Not supported for Amazon EMR
--   
--   <tt>StepScaling</tt>—Not supported for DynamoDB, Amazon Comprehend,
--   Lambda, Amazon Keyspaces (for Apache Cassandra), Amazon MSK, or Amazon
--   ElastiCache for Redis.
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step scaling policies</a> in the <i>Application Auto Scaling User
--   Guide</i>.
putScalingPolicy_policyType :: Lens' PutScalingPolicy (Maybe PolicyType)

-- | A step scaling policy.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>StepScaling</tt>.
putScalingPolicy_stepScalingPolicyConfiguration :: Lens' PutScalingPolicy (Maybe StepScalingPolicyConfiguration)

-- | The name of the scaling policy.
putScalingPolicy_policyName :: Lens' PutScalingPolicy Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
putScalingPolicy_serviceNamespace :: Lens' PutScalingPolicy ServiceNamespace

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
putScalingPolicy_resourceId :: Lens' PutScalingPolicy Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
putScalingPolicy_scalableDimension :: Lens' PutScalingPolicy ScalableDimension

-- | The CloudWatch alarms created for the target tracking scaling policy.
putScalingPolicyResponse_alarms :: Lens' PutScalingPolicyResponse (Maybe [Alarm])

-- | The response's http status code.
putScalingPolicyResponse_httpStatus :: Lens' PutScalingPolicyResponse Int

-- | The Amazon Resource Name (ARN) of the resulting scaling policy.
putScalingPolicyResponse_policyARN :: Lens' PutScalingPolicyResponse Text

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
describeScheduledActions_resourceId :: Lens' DescribeScheduledActions (Maybe Text)

-- | The token for the next set of results.
describeScheduledActions_nextToken :: Lens' DescribeScheduledActions (Maybe Text)

-- | The maximum number of scheduled action results. This value can be
--   between 1 and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
describeScheduledActions_maxResults :: Lens' DescribeScheduledActions (Maybe Int)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
describeScheduledActions_scalableDimension :: Lens' DescribeScheduledActions (Maybe ScalableDimension)

-- | The names of the scheduled actions to describe.
describeScheduledActions_scheduledActionNames :: Lens' DescribeScheduledActions (Maybe [Text])

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
describeScheduledActions_serviceNamespace :: Lens' DescribeScheduledActions ServiceNamespace

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScheduledActionsResponse_nextToken :: Lens' DescribeScheduledActionsResponse (Maybe Text)

-- | Information about the scheduled actions.
describeScheduledActionsResponse_scheduledActions :: Lens' DescribeScheduledActionsResponse (Maybe [ScheduledAction])

-- | The response's http status code.
describeScheduledActionsResponse_httpStatus :: Lens' DescribeScheduledActionsResponse Int

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
deleteScheduledAction_serviceNamespace :: Lens' DeleteScheduledAction ServiceNamespace

-- | The name of the scheduled action.
deleteScheduledAction_scheduledActionName :: Lens' DeleteScheduledAction Text

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
deleteScheduledAction_resourceId :: Lens' DeleteScheduledAction Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
deleteScheduledAction_scalableDimension :: Lens' DeleteScheduledAction ScalableDimension

-- | The response's http status code.
deleteScheduledActionResponse_httpStatus :: Lens' DeleteScheduledActionResponse Int

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
describeScalingPolicies_resourceId :: Lens' DescribeScalingPolicies (Maybe Text)

-- | The token for the next set of results.
describeScalingPolicies_nextToken :: Lens' DescribeScalingPolicies (Maybe Text)

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
describeScalingPolicies_maxResults :: Lens' DescribeScalingPolicies (Maybe Int)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
describeScalingPolicies_scalableDimension :: Lens' DescribeScalingPolicies (Maybe ScalableDimension)

-- | The names of the scaling policies to describe.
describeScalingPolicies_policyNames :: Lens' DescribeScalingPolicies (Maybe [Text])

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
describeScalingPolicies_serviceNamespace :: Lens' DescribeScalingPolicies ServiceNamespace

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalingPoliciesResponse_nextToken :: Lens' DescribeScalingPoliciesResponse (Maybe Text)

-- | Information about the scaling policies.
describeScalingPoliciesResponse_scalingPolicies :: Lens' DescribeScalingPoliciesResponse (Maybe [ScalingPolicy])

-- | The response's http status code.
describeScalingPoliciesResponse_httpStatus :: Lens' DescribeScalingPoliciesResponse Int

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
deregisterScalableTarget_serviceNamespace :: Lens' DeregisterScalableTarget ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
deregisterScalableTarget_resourceId :: Lens' DeregisterScalableTarget Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
deregisterScalableTarget_scalableDimension :: Lens' DeregisterScalableTarget ScalableDimension

-- | The response's http status code.
deregisterScalableTargetResponse_httpStatus :: Lens' DeregisterScalableTargetResponse Int

-- | The identifier of the resource associated with the scaling activity.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
describeScalingActivities_resourceId :: Lens' DescribeScalingActivities (Maybe Text)

-- | The token for the next set of results.
describeScalingActivities_nextToken :: Lens' DescribeScalingActivities (Maybe Text)

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
describeScalingActivities_maxResults :: Lens' DescribeScalingActivities (Maybe Int)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property. If you specify a scalable
--   dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
describeScalingActivities_scalableDimension :: Lens' DescribeScalingActivities (Maybe ScalableDimension)

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
describeScalingActivities_serviceNamespace :: Lens' DescribeScalingActivities ServiceNamespace

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalingActivitiesResponse_nextToken :: Lens' DescribeScalingActivitiesResponse (Maybe Text)

-- | A list of scaling activity objects.
describeScalingActivitiesResponse_scalingActivities :: Lens' DescribeScalingActivitiesResponse (Maybe [ScalingActivity])

-- | The response's http status code.
describeScalingActivitiesResponse_httpStatus :: Lens' DescribeScalingActivitiesResponse Int

-- | The token for the next set of results.
describeScalableTargets_nextToken :: Lens' DescribeScalableTargets (Maybe Text)

-- | The maximum number of scalable targets. This value can be between 1
--   and 50. The default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
describeScalableTargets_maxResults :: Lens' DescribeScalableTargets (Maybe Int)

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property. If you specify a scalable dimension, you must also specify a
--   resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
describeScalableTargets_scalableDimension :: Lens' DescribeScalableTargets (Maybe ScalableDimension)

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
describeScalableTargets_resourceIds :: Lens' DescribeScalableTargets (Maybe [Text])

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
describeScalableTargets_serviceNamespace :: Lens' DescribeScalableTargets ServiceNamespace

-- | The token required to get the next set of results. This value is
--   <tt>null</tt> if there are no more results to return.
describeScalableTargetsResponse_nextToken :: Lens' DescribeScalableTargetsResponse (Maybe Text)

-- | The scalable targets that match the request parameters.
describeScalableTargetsResponse_scalableTargets :: Lens' DescribeScalableTargetsResponse (Maybe [ScalableTarget])

-- | The response's http status code.
describeScalableTargetsResponse_httpStatus :: Lens' DescribeScalableTargetsResponse Int

-- | The name of the scaling policy.
deleteScalingPolicy_policyName :: Lens' DeleteScalingPolicy Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
deleteScalingPolicy_serviceNamespace :: Lens' DeleteScalingPolicy ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
deleteScalingPolicy_resourceId :: Lens' DeleteScalingPolicy Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
deleteScalingPolicy_scalableDimension :: Lens' DeleteScalingPolicy ScalableDimension

-- | The response's http status code.
deleteScalingPolicyResponse_httpStatus :: Lens' DeleteScalingPolicyResponse Int

-- | The date and time for this scheduled action to start, in UTC.
putScheduledAction_startTime :: Lens' PutScheduledAction (Maybe UTCTime)

-- | The date and time for the recurring schedule to end, in UTC.
putScheduledAction_endTime :: Lens' PutScheduledAction (Maybe UTCTime)

-- | Specifies the time zone used when setting a scheduled action by using
--   an at or cron expression. If a time zone is not provided, UTC is used
--   by default.
--   
--   Valid values are the canonical names of the IANA time zones supported
--   by Joda-Time (such as <tt>Etc/GMT+9</tt> or <tt>Pacific/Tahiti</tt>).
--   For more information, see
--   <a>https://www.joda.org/joda-time/timezones.html</a>.
putScheduledAction_timezone :: Lens' PutScheduledAction (Maybe Text)

-- | The new minimum and maximum capacity. You can set both values or just
--   one. At the scheduled time, if the current capacity is below the
--   minimum capacity, Application Auto Scaling scales out to the minimum
--   capacity. If the current capacity is above the maximum capacity,
--   Application Auto Scaling scales in to the maximum capacity.
putScheduledAction_scalableTargetAction :: Lens' PutScheduledAction (Maybe ScalableTargetAction)

-- | The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
putScheduledAction_schedule :: Lens' PutScheduledAction (Maybe Text)

-- | The namespace of the Amazon Web Services service that provides the
--   resource. For a resource provided by your own application or service,
--   use <tt>custom-resource</tt> instead.
putScheduledAction_serviceNamespace :: Lens' PutScheduledAction ServiceNamespace

-- | The name of the scheduled action. This name must be unique among all
--   other scheduled actions on the specified scalable target.
putScheduledAction_scheduledActionName :: Lens' PutScheduledAction Text

-- | The identifier of the resource associated with the scheduled action.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
putScheduledAction_resourceId :: Lens' PutScheduledAction Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
putScheduledAction_scalableDimension :: Lens' PutScheduledAction ScalableDimension

-- | The response's http status code.
putScheduledActionResponse_httpStatus :: Lens' PutScheduledActionResponse Int

-- | The name of the alarm.
alarm_alarmName :: Lens' Alarm Text

-- | The Amazon Resource Name (ARN) of the alarm.
alarm_alarmARN :: Lens' Alarm Text

-- | The unit of the metric.
customizedMetricSpecification_unit :: Lens' CustomizedMetricSpecification (Maybe Text)

-- | The dimensions of the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
customizedMetricSpecification_dimensions :: Lens' CustomizedMetricSpecification (Maybe [MetricDimension])

-- | The name of the metric.
customizedMetricSpecification_metricName :: Lens' CustomizedMetricSpecification Text

-- | The namespace of the metric.
customizedMetricSpecification_namespace :: Lens' CustomizedMetricSpecification Text

-- | The statistic of the metric.
customizedMetricSpecification_statistic :: Lens' CustomizedMetricSpecification MetricStatistic

-- | The name of the dimension.
metricDimension_name :: Lens' MetricDimension Text

-- | The value of the dimension.
metricDimension_value :: Lens' MetricDimension Text

-- | Identifies the resource associated with the metric type. You can't
--   specify a resource label unless the metric type is
--   <tt>ALBRequestCountPerTarget</tt> and there is a target group attached
--   to the Spot Fleet request or ECS service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
predefinedMetricSpecification_resourceLabel :: Lens' PredefinedMetricSpecification (Maybe Text)

-- | The metric type. The <tt>ALBRequestCountPerTarget</tt> metric type
--   applies only to Spot Fleet requests and ECS services.
predefinedMetricSpecification_predefinedMetricType :: Lens' PredefinedMetricSpecification MetricType

-- | Undocumented member.
scalableTarget_suspendedState :: Lens' ScalableTarget (Maybe SuspendedState)

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalableTarget_serviceNamespace :: Lens' ScalableTarget ServiceNamespace

-- | The identifier of the resource associated with the scalable target.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalableTarget_resourceId :: Lens' ScalableTarget Text

-- | The scalable dimension associated with the scalable target. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalableTarget_scalableDimension :: Lens' ScalableTarget ScalableDimension

-- | The minimum value to scale to in response to a scale-in activity.
scalableTarget_minCapacity :: Lens' ScalableTarget Int

-- | The maximum value to scale to in response to a scale-out activity.
scalableTarget_maxCapacity :: Lens' ScalableTarget Int

-- | The ARN of an IAM role that allows Application Auto Scaling to modify
--   the scalable target on your behalf.
scalableTarget_roleARN :: Lens' ScalableTarget Text

-- | The Unix timestamp for when the scalable target was created.
scalableTarget_creationTime :: Lens' ScalableTarget UTCTime

-- | The maximum capacity.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
scalableTargetAction_maxCapacity :: Lens' ScalableTargetAction (Maybe Int)

-- | The minimum capacity.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
scalableTargetAction_minCapacity :: Lens' ScalableTargetAction (Maybe Int)

-- | A simple message about the current status of the scaling activity.
scalingActivity_statusMessage :: Lens' ScalingActivity (Maybe Text)

-- | The Unix timestamp for when the scaling activity ended.
scalingActivity_endTime :: Lens' ScalingActivity (Maybe UTCTime)

-- | The details about the scaling activity.
scalingActivity_details :: Lens' ScalingActivity (Maybe Text)

-- | The unique identifier of the scaling activity.
scalingActivity_activityId :: Lens' ScalingActivity Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalingActivity_serviceNamespace :: Lens' ScalingActivity ServiceNamespace

-- | The identifier of the resource associated with the scaling activity.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalingActivity_resourceId :: Lens' ScalingActivity Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalingActivity_scalableDimension :: Lens' ScalingActivity ScalableDimension

-- | A simple description of what action the scaling activity intends to
--   accomplish.
scalingActivity_description :: Lens' ScalingActivity Text

-- | A simple description of what caused the scaling activity to happen.
scalingActivity_cause :: Lens' ScalingActivity Text

-- | The Unix timestamp for when the scaling activity began.
scalingActivity_startTime :: Lens' ScalingActivity UTCTime

-- | Indicates the status of the scaling activity.
scalingActivity_statusCode :: Lens' ScalingActivity ScalingActivityStatusCode

-- | A target tracking scaling policy.
scalingPolicy_targetTrackingScalingPolicyConfiguration :: Lens' ScalingPolicy (Maybe TargetTrackingScalingPolicyConfiguration)

-- | A step scaling policy.
scalingPolicy_stepScalingPolicyConfiguration :: Lens' ScalingPolicy (Maybe StepScalingPolicyConfiguration)

-- | The CloudWatch alarms associated with the scaling policy.
scalingPolicy_alarms :: Lens' ScalingPolicy (Maybe [Alarm])

-- | The Amazon Resource Name (ARN) of the scaling policy.
scalingPolicy_policyARN :: Lens' ScalingPolicy Text

-- | The name of the scaling policy.
scalingPolicy_policyName :: Lens' ScalingPolicy Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scalingPolicy_serviceNamespace :: Lens' ScalingPolicy ServiceNamespace

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scalingPolicy_resourceId :: Lens' ScalingPolicy Text

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scalingPolicy_scalableDimension :: Lens' ScalingPolicy ScalableDimension

-- | The scaling policy type.
scalingPolicy_policyType :: Lens' ScalingPolicy PolicyType

-- | The Unix timestamp for when the scaling policy was created.
scalingPolicy_creationTime :: Lens' ScalingPolicy UTCTime

-- | The date and time that the action is scheduled to begin, in UTC.
scheduledAction_startTime :: Lens' ScheduledAction (Maybe UTCTime)

-- | The date and time that the action is scheduled to end, in UTC.
scheduledAction_endTime :: Lens' ScheduledAction (Maybe UTCTime)

-- | The scalable dimension. This string consists of the service namespace,
--   resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
scheduledAction_scalableDimension :: Lens' ScheduledAction (Maybe ScalableDimension)

-- | The time zone used when referring to the date and time of a scheduled
--   action, when the scheduled action uses an at or cron expression.
scheduledAction_timezone :: Lens' ScheduledAction (Maybe Text)

-- | The new minimum and maximum capacity. You can set both values or just
--   one. At the scheduled time, if the current capacity is below the
--   minimum capacity, Application Auto Scaling scales out to the minimum
--   capacity. If the current capacity is above the maximum capacity,
--   Application Auto Scaling scales in to the maximum capacity.
scheduledAction_scalableTargetAction :: Lens' ScheduledAction (Maybe ScalableTargetAction)

-- | The name of the scheduled action.
scheduledAction_scheduledActionName :: Lens' ScheduledAction Text

-- | The Amazon Resource Name (ARN) of the scheduled action.
scheduledAction_scheduledActionARN :: Lens' ScheduledAction Text

-- | The namespace of the Amazon Web Services service that provides the
--   resource, or a <tt>custom-resource</tt>.
scheduledAction_serviceNamespace :: Lens' ScheduledAction ServiceNamespace

-- | The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
scheduledAction_schedule :: Lens' ScheduledAction Text

-- | The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
scheduledAction_resourceId :: Lens' ScheduledAction Text

-- | The date and time that the scheduled action was created.
scheduledAction_creationTime :: Lens' ScheduledAction UTCTime

-- | The upper bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the upper bound is exclusive (the metric must be less than the
--   threshold plus the upper bound). Otherwise, it is inclusive (the
--   metric must be less than or equal to the threshold plus the upper
--   bound). A null value indicates positive infinity.
--   
--   The upper bound must be greater than the lower bound.
stepAdjustment_metricIntervalUpperBound :: Lens' StepAdjustment (Maybe Double)

-- | The lower bound for the difference between the alarm threshold and the
--   CloudWatch metric. If the metric value is above the breach threshold,
--   the lower bound is inclusive (the metric must be greater than or equal
--   to the threshold plus the lower bound). Otherwise, it is exclusive
--   (the metric must be greater than the threshold plus the lower bound).
--   A null value indicates negative infinity.
stepAdjustment_metricIntervalLowerBound :: Lens' StepAdjustment (Maybe Double)

-- | The amount by which to scale, based on the specified adjustment type.
--   A positive value adds to the current capacity while a negative number
--   removes from the current capacity. For exact capacity, you must
--   specify a positive value.
stepAdjustment_scalingAdjustment :: Lens' StepAdjustment Int

-- | A set of adjustments that enable you to scale based on the size of the
--   alarm breach.
--   
--   At least one step adjustment is required if you are adding a new step
--   scaling policy configuration.
stepScalingPolicyConfiguration_stepAdjustments :: Lens' StepScalingPolicyConfiguration (Maybe [StepAdjustment])

-- | The aggregation type for the CloudWatch metrics. Valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
stepScalingPolicyConfiguration_metricAggregationType :: Lens' StepScalingPolicyConfiguration (Maybe MetricAggregationType)

-- | The amount of time, in seconds, to wait for a previous scaling
--   activity to take effect.
--   
--   With scale-out policies, the intention is to continuously (but not
--   excessively) scale out. After Application Auto Scaling successfully
--   scales out using a step scaling policy, it starts to calculate the
--   cooldown time. The scaling policy won't increase the desired capacity
--   again unless either a larger scale out is triggered or the cooldown
--   period ends. While the cooldown period is in effect, capacity added by
--   the initiating scale-out activity is calculated as part of the desired
--   capacity for the next scale-out activity. For example, when an alarm
--   triggers a step scaling policy to increase the capacity by 2, the
--   scaling activity completes successfully, and a cooldown period starts.
--   If the alarm triggers again during the cooldown period but at a more
--   aggressive step adjustment of 3, the previous increase of 2 is
--   considered part of the current capacity. Therefore, only 1 is added to
--   the capacity.
--   
--   With scale-in policies, the intention is to scale in conservatively to
--   protect your application’s availability, so scale-in activities are
--   blocked until the cooldown period has expired. However, if another
--   alarm triggers a scale-out activity during the cooldown period after a
--   scale-in activity, Application Auto Scaling scales out the target
--   immediately. In this case, the cooldown period for the scale-in
--   activity stops and doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
stepScalingPolicyConfiguration_cooldown :: Lens' StepScalingPolicyConfiguration (Maybe Int)

-- | Specifies how the <tt>ScalingAdjustment</tt> value in a
--   <a>StepAdjustment</a> is interpreted (for example, an absolute number
--   or a percentage). The valid values are <tt>ChangeInCapacity</tt>,
--   <tt>ExactCapacity</tt>, and <tt>PercentChangeInCapacity</tt>.
--   
--   <tt>AdjustmentType</tt> is required if you are adding a new step
--   scaling policy configuration.
stepScalingPolicyConfiguration_adjustmentType :: Lens' StepScalingPolicyConfiguration (Maybe AdjustmentType)

-- | The minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Amazon ECS service by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the service
--   has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1.
--   However, because you specified a <tt>MinAdjustmentMagnitude</tt> of 2,
--   Application Auto Scaling scales out the service by 2 tasks.
stepScalingPolicyConfiguration_minAdjustmentMagnitude :: Lens' StepScalingPolicyConfiguration (Maybe Int)

-- | Whether scheduled scaling is suspended. Set the value to <tt>true</tt>
--   if you don't want Application Auto Scaling to add or remove capacity
--   by initiating scheduled actions. The default is <tt>false</tt>.
suspendedState_scheduledScalingSuspended :: Lens' SuspendedState (Maybe Bool)

-- | Whether scale in by a target tracking scaling policy or a step scaling
--   policy is suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to remove capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
suspendedState_dynamicScalingInSuspended :: Lens' SuspendedState (Maybe Bool)

-- | Whether scale out by a target tracking scaling policy or a step
--   scaling policy is suspended. Set the value to <tt>true</tt> if you
--   don't want Application Auto Scaling to add capacity when a scaling
--   policy is triggered. The default is <tt>false</tt>.
suspendedState_dynamicScalingOutSuspended :: Lens' SuspendedState (Maybe Bool)

-- | Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy won't remove capacity from the scalable
--   target. Otherwise, scale in is enabled and the target tracking scaling
--   policy can remove capacity from the scalable target. The default value
--   is <tt>false</tt>.
targetTrackingScalingPolicyConfiguration_disableScaleIn :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Bool)

-- | A predefined metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingScalingPolicyConfiguration_predefinedMetricSpecification :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe PredefinedMetricSpecification)

-- | The amount of time, in seconds, to wait for a previous scale-out
--   activity to take effect.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Application Auto
--   Scaling successfully scales out using a target tracking scaling
--   policy, it starts to calculate the cooldown time. The scaling policy
--   won't increase the desired capacity again unless either a larger scale
--   out is triggered or the cooldown period ends. While the cooldown
--   period is in effect, the capacity added by the initiating scale-out
--   activity is calculated as part of the desired capacity for the next
--   scale-out activity.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
targetTrackingScalingPolicyConfiguration_scaleOutCooldown :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Int)

-- | A customized metric. You can specify either a predefined metric or a
--   customized metric.
targetTrackingScalingPolicyConfiguration_customizedMetricSpecification :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe CustomizedMetricSpecification)

-- | The amount of time, in seconds, after a scale-in activity completes
--   before another scale-in activity can start.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Application Auto Scaling scales out the target
--   immediately. In this case, the scale-in cooldown period stops and
--   doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
targetTrackingScalingPolicyConfiguration_scaleInCooldown :: Lens' TargetTrackingScalingPolicyConfiguration (Maybe Int)

-- | The target value for the metric. Although this property accepts
--   numbers of type Double, it won't accept values that are either too
--   small or too large. Values must be in the range of -2^360 to 2^360.
--   The value must be a valid number based on the choice of metric. For
--   example, if the metric is CPU utilization, then the target value is a
--   percent value that represents how much of the CPU can be used before
--   scaling out.
targetTrackingScalingPolicyConfiguration_targetValue :: Lens' TargetTrackingScalingPolicyConfiguration Double


module Network.AWS.ApplicationAutoScaling.Waiters


-- | Derived from API version <tt>2016-02-06</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   With Application Auto Scaling, you can configure automatic scaling for
--   the following resources:
--   
--   <ul>
--   <li>Amazon AppStream 2.0 fleets</li>
--   <li>Amazon Aurora Replicas</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Amazon DynamoDB tables and global secondary indexes throughput
--   capacity</li>
--   <li>Amazon ECS services</li>
--   <li>Amazon ElastiCache for Redis clusters (replication groups)</li>
--   <li>Amazon EMR clusters</li>
--   <li>Amazon Keyspaces (for Apache Cassandra) tables</li>
--   <li>Lambda function provisioned concurrency</li>
--   <li>Amazon Managed Streaming for Apache Kafka broker storage</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Spot Fleet (Amazon EC2) requests</li>
--   <li>Custom resources provided by your own applications or
--   services</li>
--   </ul>
--   
--   <b>API Summary</b>
--   
--   The Application Auto Scaling service API includes three key sets of
--   actions:
--   
--   <ul>
--   <li>Register and manage scalable targets - Register Amazon Web
--   Services or custom resources as scalable targets (a resource that
--   Application Auto Scaling can scale), set minimum and maximum capacity
--   limits, and retrieve information on existing scalable targets.</li>
--   <li>Configure and manage automatic scaling - Define scaling policies
--   to dynamically scale your resources in response to CloudWatch alarms,
--   schedule one-time or recurring scaling actions, and retrieve your
--   recent scaling activity history.</li>
--   <li>Suspend and resume scaling - Temporarily suspend and later resume
--   automatic scaling by calling the <a>RegisterScalableTarget</a> API
--   action for any Application Auto Scaling scalable target. You can
--   suspend and resume (individually or in combination) scale-out
--   activities that are triggered by a scaling policy, scale-in activities
--   that are triggered by a scaling policy, and scheduled scaling.</li>
--   </ul>
--   
--   To learn more about Application Auto Scaling, including information
--   about granting IAM users required permissions for Application Auto
--   Scaling actions, see the <a>Application Auto Scaling User Guide</a>.
module Network.AWS.ApplicationAutoScaling

-- | API version <tt>2016-02-06</tt> of the Amazon Application Auto Scaling
--   SDK configuration.
defaultService :: Service

-- | The specified object could not be found. For any operation that
--   depends on the existence of a scalable target, this exception is
--   thrown if the scalable target with the specified service namespace,
--   resource ID, and scalable dimension does not exist. For any operation
--   that deletes or deregisters a resource, this exception is thrown if
--   the resource cannot be found.
_ObjectNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service encountered an internal error.
_InternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The next token supplied was invalid.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Failed access to resources caused an exception. This exception is
--   thrown when Application Auto Scaling is unable to retrieve the alarms
--   associated with a scaling policy due to a client error, for example,
--   if the role ARN specified for a scalable target does not have
--   permission to call the CloudWatch <a>DescribeAlarms</a> on your
--   behalf.
_FailedResourceAccessException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception was thrown for a validation issue. Review the available
--   parameters for the API request.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A per-account resource limit is exceeded. For more information, see
--   <a>Application Auto Scaling service quotas</a>.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Concurrent updates caused an exception, for example, if you request an
--   update to an Application Auto Scaling resource that already has a
--   pending update.
_ConcurrentUpdateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newRegisterScalableTarget</a> smart constructor.
data RegisterScalableTarget
RegisterScalableTarget' :: Maybe Text -> Maybe Int -> Maybe SuspendedState -> Maybe Int -> ServiceNamespace -> Text -> ScalableDimension -> RegisterScalableTarget

-- | Create a value of <a>RegisterScalableTarget</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_roleARN</a> - This parameter is required for
--   services that do not support service-linked roles (such as Amazon
--   EMR), and it must specify the ARN of an IAM role that allows
--   Application Auto Scaling to modify the scalable target on your behalf.
--   
--   If the service supports service-linked roles, Application Auto Scaling
--   uses a service-linked role, which it creates if it does not yet exist.
--   For more information, see <a>Application Auto Scaling IAM roles</a>.
--   
--   <a>$sel:maxCapacity:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_maxCapacity</a> - The maximum value that you
--   plan to scale out to. When a scaling policy is in effect, Application
--   Auto Scaling can scale out (expand) as needed to the maximum capacity
--   limit in response to changing demand. This property is required when
--   registering a new scalable target.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:suspendedState:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_suspendedState</a> - An embedded object that
--   contains attributes and attribute values that are used to suspend and
--   resume automatic scaling. Setting the value of an attribute to
--   <tt>true</tt> suspends the specified scaling activities. Setting it to
--   <tt>false</tt> (default) resumes the specified scaling activities.
--   
--   <b>Suspension Outcomes</b>
--   
--   <ul>
--   <li>For <tt>DynamicScalingInSuspended</tt>, while a suspension is in
--   effect, all scale-in activities that are triggered by a scaling policy
--   are suspended.</li>
--   <li>For <tt>DynamicScalingOutSuspended</tt>, while a suspension is in
--   effect, all scale-out activities that are triggered by a scaling
--   policy are suspended.</li>
--   <li>For <tt>ScheduledScalingSuspended</tt>, while a suspension is in
--   effect, all scaling activities that involve scheduled actions are
--   suspended.</li>
--   </ul>
--   
--   For more information, see <a>Suspending and resuming scaling</a> in
--   the <i>Application Auto Scaling User Guide</i>.
--   
--   <a>$sel:minCapacity:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_minCapacity</a> - The minimum value that you
--   plan to scale in to. When a scaling policy is in effect, Application
--   Auto Scaling can scale in (contract) as needed to the minimum capacity
--   limit in response to changing demand. This property is required when
--   registering a new scalable target.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
--   
--   <a>$sel:serviceNamespace:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:resourceId:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_resourceId</a> - The identifier of the
--   resource that is associated with the scalable target. This string
--   consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:RegisterScalableTarget'</a>,
--   <a>registerScalableTarget_scalableDimension</a> - The scalable
--   dimension associated with the scalable target. This string consists of
--   the service namespace, resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newRegisterScalableTarget :: ServiceNamespace -> Text -> ScalableDimension -> RegisterScalableTarget

-- | <i>See:</i> <a>newRegisterScalableTargetResponse</a> smart
--   constructor.
data RegisterScalableTargetResponse
RegisterScalableTargetResponse' :: Int -> RegisterScalableTargetResponse

-- | Create a value of <a>RegisterScalableTargetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RegisterScalableTargetResponse'</a>,
--   <a>registerScalableTargetResponse_httpStatus</a> - The response's http
--   status code.
newRegisterScalableTargetResponse :: Int -> RegisterScalableTargetResponse

-- | <i>See:</i> <a>newPutScalingPolicy</a> smart constructor.
data PutScalingPolicy
PutScalingPolicy' :: Maybe TargetTrackingScalingPolicyConfiguration -> Maybe PolicyType -> Maybe StepScalingPolicyConfiguration -> Text -> ServiceNamespace -> Text -> ScalableDimension -> PutScalingPolicy

-- | Create a value of <a>PutScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:targetTrackingScalingPolicyConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_targetTrackingScalingPolicyConfiguration</a> - A
--   target tracking scaling policy. Includes support for predefined or
--   customized metrics.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>TargetTrackingScaling</tt>.
--   
--   <a>$sel:policyType:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyType</a> - The policy type. This parameter
--   is required if you are creating a scaling policy.
--   
--   The following policy types are supported:
--   
--   <tt>TargetTrackingScaling</tt>—Not supported for Amazon EMR
--   
--   <tt>StepScaling</tt>—Not supported for DynamoDB, Amazon Comprehend,
--   Lambda, Amazon Keyspaces (for Apache Cassandra), Amazon MSK, or Amazon
--   ElastiCache for Redis.
--   
--   For more information, see <a>Target tracking scaling policies</a> and
--   <a>Step scaling policies</a> in the <i>Application Auto Scaling User
--   Guide</i>.
--   
--   <a>$sel:stepScalingPolicyConfiguration:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_stepScalingPolicyConfiguration</a> - A step
--   scaling policy.
--   
--   This parameter is required if you are creating a policy and the policy
--   type is <tt>StepScaling</tt>.
--   
--   <a>$sel:policyName:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_policyName</a> - The name of the scaling policy.
--   
--   <a>$sel:serviceNamespace:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:resourceId:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_resourceId</a> - The identifier of the resource
--   associated with the scaling policy. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:PutScalingPolicy'</a>,
--   <a>putScalingPolicy_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newPutScalingPolicy :: Text -> ServiceNamespace -> Text -> ScalableDimension -> PutScalingPolicy

-- | <i>See:</i> <a>newPutScalingPolicyResponse</a> smart constructor.
data PutScalingPolicyResponse
PutScalingPolicyResponse' :: Maybe [Alarm] -> Int -> Text -> PutScalingPolicyResponse

-- | Create a value of <a>PutScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarms:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_alarms</a> - The CloudWatch alarms created
--   for the target tracking scaling policy.
--   
--   <a>$sel:httpStatus:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:policyARN:PutScalingPolicyResponse'</a>,
--   <a>putScalingPolicyResponse_policyARN</a> - The Amazon Resource Name
--   (ARN) of the resulting scaling policy.
newPutScalingPolicyResponse :: Int -> Text -> PutScalingPolicyResponse

-- | <i>See:</i> <a>newDescribeScheduledActions</a> smart constructor.
data DescribeScheduledActions
DescribeScheduledActions' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe ScalableDimension -> Maybe [Text] -> ServiceNamespace -> DescribeScheduledActions

-- | Create a value of <a>DescribeScheduledActions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_resourceId</a> - The identifier of the
--   resource associated with the scheduled action. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_nextToken</a> - The token for the next set
--   of results.
--   
--   <a>$sel:maxResults:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_maxResults</a> - The maximum number of
--   scheduled action results. This value can be between 1 and 50. The
--   default value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
--   
--   <a>$sel:scalableDimension:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_scalableDimension</a> - The scalable
--   dimension. This string consists of the service namespace, resource
--   type, and scaling property. If you specify a scalable dimension, you
--   must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:scheduledActionNames:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_scheduledActionNames</a> - The names of
--   the scheduled actions to describe.
--   
--   <a>$sel:serviceNamespace:DescribeScheduledActions'</a>,
--   <a>describeScheduledActions_serviceNamespace</a> - The namespace of
--   the Amazon Web Services service that provides the resource. For a
--   resource provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
newDescribeScheduledActions :: ServiceNamespace -> DescribeScheduledActions

-- | <i>See:</i> <a>newDescribeScheduledActionsResponse</a> smart
--   constructor.
data DescribeScheduledActionsResponse
DescribeScheduledActionsResponse' :: Maybe Text -> Maybe [ScheduledAction] -> Int -> DescribeScheduledActionsResponse

-- | Create a value of <a>DescribeScheduledActionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScheduledActions'</a>,
--   <a>describeScheduledActionsResponse_nextToken</a> - The token required
--   to get the next set of results. This value is <tt>null</tt> if there
--   are no more results to return.
--   
--   <a>$sel:scheduledActions:DescribeScheduledActionsResponse'</a>,
--   <a>describeScheduledActionsResponse_scheduledActions</a> - Information
--   about the scheduled actions.
--   
--   <a>$sel:httpStatus:DescribeScheduledActionsResponse'</a>,
--   <a>describeScheduledActionsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScheduledActionsResponse :: Int -> DescribeScheduledActionsResponse

-- | <i>See:</i> <a>newDeleteScheduledAction</a> smart constructor.
data DeleteScheduledAction
DeleteScheduledAction' :: ServiceNamespace -> Text -> Text -> ScalableDimension -> DeleteScheduledAction

-- | Create a value of <a>DeleteScheduledAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceNamespace:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:scheduledActionName:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_scheduledActionName</a> - The name of the
--   scheduled action.
--   
--   <a>$sel:resourceId:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_resourceId</a> - The identifier of the
--   resource associated with the scheduled action. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:DeleteScheduledAction'</a>,
--   <a>deleteScheduledAction_scalableDimension</a> - The scalable
--   dimension. This string consists of the service namespace, resource
--   type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newDeleteScheduledAction :: ServiceNamespace -> Text -> Text -> ScalableDimension -> DeleteScheduledAction

-- | <i>See:</i> <a>newDeleteScheduledActionResponse</a> smart constructor.
data DeleteScheduledActionResponse
DeleteScheduledActionResponse' :: Int -> DeleteScheduledActionResponse

-- | Create a value of <a>DeleteScheduledActionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteScheduledActionResponse'</a>,
--   <a>deleteScheduledActionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteScheduledActionResponse :: Int -> DeleteScheduledActionResponse

-- | <i>See:</i> <a>newDescribeScalingPolicies</a> smart constructor.
data DescribeScalingPolicies
DescribeScalingPolicies' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe ScalableDimension -> Maybe [Text] -> ServiceNamespace -> DescribeScalingPolicies

-- | Create a value of <a>DescribeScalingPolicies</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_resourceId</a> - The identifier of the
--   resource associated with the scaling policy. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_nextToken</a> - The token for the next set
--   of results.
--   
--   <a>$sel:maxResults:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_maxResults</a> - The maximum number of
--   scalable targets. This value can be between 1 and 50. The default
--   value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
--   
--   <a>$sel:scalableDimension:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_scalableDimension</a> - The scalable
--   dimension. This string consists of the service namespace, resource
--   type, and scaling property. If you specify a scalable dimension, you
--   must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:policyNames:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_policyNames</a> - The names of the scaling
--   policies to describe.
--   
--   <a>$sel:serviceNamespace:DescribeScalingPolicies'</a>,
--   <a>describeScalingPolicies_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
newDescribeScalingPolicies :: ServiceNamespace -> DescribeScalingPolicies

-- | <i>See:</i> <a>newDescribeScalingPoliciesResponse</a> smart
--   constructor.
data DescribeScalingPoliciesResponse
DescribeScalingPoliciesResponse' :: Maybe Text -> Maybe [ScalingPolicy] -> Int -> DescribeScalingPoliciesResponse

-- | Create a value of <a>DescribeScalingPoliciesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingPolicies'</a>,
--   <a>describeScalingPoliciesResponse_nextToken</a> - The token required
--   to get the next set of results. This value is <tt>null</tt> if there
--   are no more results to return.
--   
--   <a>$sel:scalingPolicies:DescribeScalingPoliciesResponse'</a>,
--   <a>describeScalingPoliciesResponse_scalingPolicies</a> - Information
--   about the scaling policies.
--   
--   <a>$sel:httpStatus:DescribeScalingPoliciesResponse'</a>,
--   <a>describeScalingPoliciesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalingPoliciesResponse :: Int -> DescribeScalingPoliciesResponse

-- | <i>See:</i> <a>newDeregisterScalableTarget</a> smart constructor.
data DeregisterScalableTarget
DeregisterScalableTarget' :: ServiceNamespace -> Text -> ScalableDimension -> DeregisterScalableTarget

-- | Create a value of <a>DeregisterScalableTarget</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceNamespace:DeregisterScalableTarget'</a>,
--   <a>deregisterScalableTarget_serviceNamespace</a> - The namespace of
--   the Amazon Web Services service that provides the resource. For a
--   resource provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:resourceId:DeregisterScalableTarget'</a>,
--   <a>deregisterScalableTarget_resourceId</a> - The identifier of the
--   resource associated with the scalable target. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:DeregisterScalableTarget'</a>,
--   <a>deregisterScalableTarget_scalableDimension</a> - The scalable
--   dimension associated with the scalable target. This string consists of
--   the service namespace, resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newDeregisterScalableTarget :: ServiceNamespace -> Text -> ScalableDimension -> DeregisterScalableTarget

-- | <i>See:</i> <a>newDeregisterScalableTargetResponse</a> smart
--   constructor.
data DeregisterScalableTargetResponse
DeregisterScalableTargetResponse' :: Int -> DeregisterScalableTargetResponse

-- | Create a value of <a>DeregisterScalableTargetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeregisterScalableTargetResponse'</a>,
--   <a>deregisterScalableTargetResponse_httpStatus</a> - The response's
--   http status code.
newDeregisterScalableTargetResponse :: Int -> DeregisterScalableTargetResponse

-- | <i>See:</i> <a>newDescribeScalingActivities</a> smart constructor.
data DescribeScalingActivities
DescribeScalingActivities' :: Maybe Text -> Maybe Text -> Maybe Int -> Maybe ScalableDimension -> ServiceNamespace -> DescribeScalingActivities

-- | Create a value of <a>DescribeScalingActivities</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_resourceId</a> - The identifier of the
--   resource associated with the scaling activity. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:nextToken:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_nextToken</a> - The token for the next
--   set of results.
--   
--   <a>$sel:maxResults:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_maxResults</a> - The maximum number of
--   scalable targets. This value can be between 1 and 50. The default
--   value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
--   
--   <a>$sel:scalableDimension:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_scalableDimension</a> - The scalable
--   dimension. This string consists of the service namespace, resource
--   type, and scaling property. If you specify a scalable dimension, you
--   must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:serviceNamespace:DescribeScalingActivities'</a>,
--   <a>describeScalingActivities_serviceNamespace</a> - The namespace of
--   the Amazon Web Services service that provides the resource. For a
--   resource provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
newDescribeScalingActivities :: ServiceNamespace -> DescribeScalingActivities

-- | <i>See:</i> <a>newDescribeScalingActivitiesResponse</a> smart
--   constructor.
data DescribeScalingActivitiesResponse
DescribeScalingActivitiesResponse' :: Maybe Text -> Maybe [ScalingActivity] -> Int -> DescribeScalingActivitiesResponse

-- | Create a value of <a>DescribeScalingActivitiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalingActivities'</a>,
--   <a>describeScalingActivitiesResponse_nextToken</a> - The token
--   required to get the next set of results. This value is <tt>null</tt>
--   if there are no more results to return.
--   
--   <a>$sel:scalingActivities:DescribeScalingActivitiesResponse'</a>,
--   <a>describeScalingActivitiesResponse_scalingActivities</a> - A list of
--   scaling activity objects.
--   
--   <a>$sel:httpStatus:DescribeScalingActivitiesResponse'</a>,
--   <a>describeScalingActivitiesResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalingActivitiesResponse :: Int -> DescribeScalingActivitiesResponse

-- | <i>See:</i> <a>newDescribeScalableTargets</a> smart constructor.
data DescribeScalableTargets
DescribeScalableTargets' :: Maybe Text -> Maybe Int -> Maybe ScalableDimension -> Maybe [Text] -> ServiceNamespace -> DescribeScalableTargets

-- | Create a value of <a>DescribeScalableTargets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_nextToken</a> - The token for the next set
--   of results.
--   
--   <a>$sel:maxResults:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_maxResults</a> - The maximum number of
--   scalable targets. This value can be between 1 and 50. The default
--   value is 50.
--   
--   If this parameter is used, the operation returns up to
--   <tt>MaxResults</tt> results at a time, along with a <tt>NextToken</tt>
--   value. To get the next set of results, include the <tt>NextToken</tt>
--   value in a subsequent call. If this parameter is not used, the
--   operation returns up to 50 results and a <tt>NextToken</tt> value, if
--   applicable.
--   
--   <a>$sel:scalableDimension:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_scalableDimension</a> - The scalable
--   dimension associated with the scalable target. This string consists of
--   the service namespace, resource type, and scaling property. If you
--   specify a scalable dimension, you must also specify a resource ID.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:resourceIds:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_resourceIds</a> - The identifier of the
--   resource associated with the scalable target. This string consists of
--   the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:serviceNamespace:DescribeScalableTargets'</a>,
--   <a>describeScalableTargets_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
newDescribeScalableTargets :: ServiceNamespace -> DescribeScalableTargets

-- | <i>See:</i> <a>newDescribeScalableTargetsResponse</a> smart
--   constructor.
data DescribeScalableTargetsResponse
DescribeScalableTargetsResponse' :: Maybe Text -> Maybe [ScalableTarget] -> Int -> DescribeScalableTargetsResponse

-- | Create a value of <a>DescribeScalableTargetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeScalableTargets'</a>,
--   <a>describeScalableTargetsResponse_nextToken</a> - The token required
--   to get the next set of results. This value is <tt>null</tt> if there
--   are no more results to return.
--   
--   <a>$sel:scalableTargets:DescribeScalableTargetsResponse'</a>,
--   <a>describeScalableTargetsResponse_scalableTargets</a> - The scalable
--   targets that match the request parameters.
--   
--   <a>$sel:httpStatus:DescribeScalableTargetsResponse'</a>,
--   <a>describeScalableTargetsResponse_httpStatus</a> - The response's
--   http status code.
newDescribeScalableTargetsResponse :: Int -> DescribeScalableTargetsResponse

-- | <i>See:</i> <a>newDeleteScalingPolicy</a> smart constructor.
data DeleteScalingPolicy
DeleteScalingPolicy' :: Text -> ServiceNamespace -> Text -> ScalableDimension -> DeleteScalingPolicy

-- | Create a value of <a>DeleteScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyName:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_policyName</a> - The name of the scaling
--   policy.
--   
--   <a>$sel:serviceNamespace:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:resourceId:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_resourceId</a> - The identifier of the resource
--   associated with the scalable target. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:DeleteScalingPolicy'</a>,
--   <a>deleteScalingPolicy_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newDeleteScalingPolicy :: Text -> ServiceNamespace -> Text -> ScalableDimension -> DeleteScalingPolicy

-- | <i>See:</i> <a>newDeleteScalingPolicyResponse</a> smart constructor.
data DeleteScalingPolicyResponse
DeleteScalingPolicyResponse' :: Int -> DeleteScalingPolicyResponse

-- | Create a value of <a>DeleteScalingPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteScalingPolicyResponse'</a>,
--   <a>deleteScalingPolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteScalingPolicyResponse :: Int -> DeleteScalingPolicyResponse

-- | <i>See:</i> <a>newPutScheduledAction</a> smart constructor.
data PutScheduledAction
PutScheduledAction' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe ScalableTargetAction -> Maybe Text -> ServiceNamespace -> Text -> Text -> ScalableDimension -> PutScheduledAction

-- | Create a value of <a>PutScheduledAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:PutScheduledAction'</a>,
--   <a>putScheduledAction_startTime</a> - The date and time for this
--   scheduled action to start, in UTC.
--   
--   <a>$sel:endTime:PutScheduledAction'</a>,
--   <a>putScheduledAction_endTime</a> - The date and time for the
--   recurring schedule to end, in UTC.
--   
--   <a>$sel:timezone:PutScheduledAction'</a>,
--   <a>putScheduledAction_timezone</a> - Specifies the time zone used when
--   setting a scheduled action by using an at or cron expression. If a
--   time zone is not provided, UTC is used by default.
--   
--   Valid values are the canonical names of the IANA time zones supported
--   by Joda-Time (such as <tt>Etc/GMT+9</tt> or <tt>Pacific/Tahiti</tt>).
--   For more information, see
--   <a>https://www.joda.org/joda-time/timezones.html</a>.
--   
--   <a>$sel:scalableTargetAction:PutScheduledAction'</a>,
--   <a>putScheduledAction_scalableTargetAction</a> - The new minimum and
--   maximum capacity. You can set both values or just one. At the
--   scheduled time, if the current capacity is below the minimum capacity,
--   Application Auto Scaling scales out to the minimum capacity. If the
--   current capacity is above the maximum capacity, Application Auto
--   Scaling scales in to the maximum capacity.
--   
--   <a>$sel:schedule:PutScheduledAction'</a>,
--   <a>putScheduledAction_schedule</a> - The schedule for this action. The
--   following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:serviceNamespace:PutScheduledAction'</a>,
--   <a>putScheduledAction_serviceNamespace</a> - The namespace of the
--   Amazon Web Services service that provides the resource. For a resource
--   provided by your own application or service, use
--   <tt>custom-resource</tt> instead.
--   
--   <a>$sel:scheduledActionName:PutScheduledAction'</a>,
--   <a>putScheduledAction_scheduledActionName</a> - The name of the
--   scheduled action. This name must be unique among all other scheduled
--   actions on the specified scalable target.
--   
--   <a>$sel:resourceId:PutScheduledAction'</a>,
--   <a>putScheduledAction_resourceId</a> - The identifier of the resource
--   associated with the scheduled action. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:PutScheduledAction'</a>,
--   <a>putScheduledAction_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
newPutScheduledAction :: ServiceNamespace -> Text -> Text -> ScalableDimension -> PutScheduledAction

-- | <i>See:</i> <a>newPutScheduledActionResponse</a> smart constructor.
data PutScheduledActionResponse
PutScheduledActionResponse' :: Int -> PutScheduledActionResponse

-- | Create a value of <a>PutScheduledActionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutScheduledActionResponse'</a>,
--   <a>putScheduledActionResponse_httpStatus</a> - The response's http
--   status code.
newPutScheduledActionResponse :: Int -> PutScheduledActionResponse
newtype AdjustmentType
AdjustmentType' :: Text -> AdjustmentType
[fromAdjustmentType] :: AdjustmentType -> Text
pattern AdjustmentType_ChangeInCapacity :: AdjustmentType
pattern AdjustmentType_ExactCapacity :: AdjustmentType
pattern AdjustmentType_PercentChangeInCapacity :: AdjustmentType
newtype MetricAggregationType
MetricAggregationType' :: Text -> MetricAggregationType
[fromMetricAggregationType] :: MetricAggregationType -> Text
pattern MetricAggregationType_Average :: MetricAggregationType
pattern MetricAggregationType_Maximum :: MetricAggregationType
pattern MetricAggregationType_Minimum :: MetricAggregationType
newtype MetricStatistic
MetricStatistic' :: Text -> MetricStatistic
[fromMetricStatistic] :: MetricStatistic -> Text
pattern MetricStatistic_Average :: MetricStatistic
pattern MetricStatistic_Maximum :: MetricStatistic
pattern MetricStatistic_Minimum :: MetricStatistic
pattern MetricStatistic_SampleCount :: MetricStatistic
pattern MetricStatistic_Sum :: MetricStatistic
newtype MetricType
MetricType' :: Text -> MetricType
[fromMetricType] :: MetricType -> Text
pattern MetricType_ALBRequestCountPerTarget :: MetricType
pattern MetricType_AppStreamAverageCapacityUtilization :: MetricType
pattern MetricType_CassandraReadCapacityUtilization :: MetricType
pattern MetricType_CassandraWriteCapacityUtilization :: MetricType
pattern MetricType_ComprehendInferenceUtilization :: MetricType
pattern MetricType_DynamoDBReadCapacityUtilization :: MetricType
pattern MetricType_DynamoDBWriteCapacityUtilization :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageCPUUtilization :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageNetworkIn :: MetricType
pattern MetricType_EC2SpotFleetRequestAverageNetworkOut :: MetricType
pattern MetricType_ECSServiceAverageCPUUtilization :: MetricType
pattern MetricType_ECSServiceAverageMemoryUtilization :: MetricType
pattern MetricType_ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage :: MetricType
pattern MetricType_ElastiCachePrimaryEngineCPUUtilization :: MetricType
pattern MetricType_ElastiCacheReplicaEngineCPUUtilization :: MetricType
pattern MetricType_KafkaBrokerStorageUtilization :: MetricType
pattern MetricType_LambdaProvisionedConcurrencyUtilization :: MetricType
pattern MetricType_RDSReaderAverageCPUUtilization :: MetricType
pattern MetricType_RDSReaderAverageDatabaseConnections :: MetricType
pattern MetricType_SageMakerVariantInvocationsPerInstance :: MetricType
newtype PolicyType
PolicyType' :: Text -> PolicyType
[fromPolicyType] :: PolicyType -> Text
pattern PolicyType_StepScaling :: PolicyType
pattern PolicyType_TargetTrackingScaling :: PolicyType
newtype ScalableDimension
ScalableDimension' :: Text -> ScalableDimension
[fromScalableDimension] :: ScalableDimension -> Text
pattern ScalableDimension_Appstream_fleet_DesiredCapacity :: ScalableDimension
pattern ScalableDimension_Cassandra_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Cassandra_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Comprehend_document_classifier_endpoint_DesiredInferenceUnits :: ScalableDimension
pattern ScalableDimension_Comprehend_entity_recognizer_endpoint_DesiredInferenceUnits :: ScalableDimension
pattern ScalableDimension_Custom_resource_ResourceType_Property :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_index_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_ReadCapacityUnits :: ScalableDimension
pattern ScalableDimension_Dynamodb_table_WriteCapacityUnits :: ScalableDimension
pattern ScalableDimension_Ec2_spot_fleet_request_TargetCapacity :: ScalableDimension
pattern ScalableDimension_Ecs_service_DesiredCount :: ScalableDimension
pattern ScalableDimension_Elasticache_replication_group_NodeGroups :: ScalableDimension
pattern ScalableDimension_Elasticache_replication_group_Replicas :: ScalableDimension
pattern ScalableDimension_Elasticmapreduce_instancegroup_InstanceCount :: ScalableDimension
pattern ScalableDimension_Kafka_broker_storage_VolumeSize :: ScalableDimension
pattern ScalableDimension_Lambda_function_ProvisionedConcurrency :: ScalableDimension
pattern ScalableDimension_Rds_cluster_ReadReplicaCount :: ScalableDimension
pattern ScalableDimension_Sagemaker_variant_DesiredInstanceCount :: ScalableDimension
newtype ScalingActivityStatusCode
ScalingActivityStatusCode' :: Text -> ScalingActivityStatusCode
[fromScalingActivityStatusCode] :: ScalingActivityStatusCode -> Text
pattern ScalingActivityStatusCode_Failed :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_InProgress :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Overridden :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Pending :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Successful :: ScalingActivityStatusCode
pattern ScalingActivityStatusCode_Unfulfilled :: ScalingActivityStatusCode
newtype ServiceNamespace
ServiceNamespace' :: Text -> ServiceNamespace
[fromServiceNamespace] :: ServiceNamespace -> Text
pattern ServiceNamespace_Appstream :: ServiceNamespace
pattern ServiceNamespace_Cassandra :: ServiceNamespace
pattern ServiceNamespace_Comprehend :: ServiceNamespace
pattern ServiceNamespace_Custom_resource :: ServiceNamespace
pattern ServiceNamespace_Dynamodb :: ServiceNamespace
pattern ServiceNamespace_Ec2 :: ServiceNamespace
pattern ServiceNamespace_Ecs :: ServiceNamespace
pattern ServiceNamespace_Elasticache :: ServiceNamespace
pattern ServiceNamespace_Elasticmapreduce :: ServiceNamespace
pattern ServiceNamespace_Kafka :: ServiceNamespace
pattern ServiceNamespace_Lambda :: ServiceNamespace
pattern ServiceNamespace_Rds :: ServiceNamespace
pattern ServiceNamespace_Sagemaker :: ServiceNamespace

-- | Represents a CloudWatch alarm associated with a scaling policy.
--   
--   <i>See:</i> <a>newAlarm</a> smart constructor.
data Alarm
Alarm' :: Text -> Text -> Alarm

-- | Create a value of <a>Alarm</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:alarmName:Alarm'</a>, <a>alarm_alarmName</a> - The name of the
--   alarm.
--   
--   <a>$sel:alarmARN:Alarm'</a>, <a>alarm_alarmARN</a> - The Amazon
--   Resource Name (ARN) of the alarm.
newAlarm :: Text -> Text -> Alarm

-- | Represents a CloudWatch metric of your choosing for a target tracking
--   scaling policy to use with Application Auto Scaling.
--   
--   For information about the available metrics for a service, see
--   <a>Amazon Web Services Services That Publish CloudWatch Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.
--   
--   To create your customized metric specification:
--   
--   <ul>
--   <li>Add values for each required parameter from CloudWatch. You can
--   use an existing metric, or a new metric that you create. To use your
--   own metric, you must first publish the metric to CloudWatch. For more
--   information, see <a>Publish Custom Metrics</a> in the <i>Amazon
--   CloudWatch User Guide</i>.</li>
--   <li>Choose a metric that changes proportionally with capacity. The
--   value of the metric should increase or decrease in inverse proportion
--   to the number of capacity units. That is, the value of the metric
--   should decrease when capacity increases, and increase when capacity
--   decreases.</li>
--   </ul>
--   
--   For more information about CloudWatch, see <a>Amazon CloudWatch
--   Concepts</a>.
--   
--   <i>See:</i> <a>newCustomizedMetricSpecification</a> smart constructor.
data CustomizedMetricSpecification
CustomizedMetricSpecification' :: Maybe Text -> Maybe [MetricDimension] -> Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | Create a value of <a>CustomizedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unit:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_unit</a> - The unit of the metric.
--   
--   <a>$sel:dimensions:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_dimensions</a> - The dimensions of
--   the metric.
--   
--   Conditional: If you published your metric with dimensions, you must
--   specify the same dimensions in your scaling policy.
--   
--   <a>$sel:metricName:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_metricName</a> - The name of the
--   metric.
--   
--   <a>$sel:namespace:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_namespace</a> - The namespace of the
--   metric.
--   
--   <a>$sel:statistic:CustomizedMetricSpecification'</a>,
--   <a>customizedMetricSpecification_statistic</a> - The statistic of the
--   metric.
newCustomizedMetricSpecification :: Text -> Text -> MetricStatistic -> CustomizedMetricSpecification

-- | Describes the dimension names and values associated with a metric.
--   
--   <i>See:</i> <a>newMetricDimension</a> smart constructor.
data MetricDimension
MetricDimension' :: Text -> Text -> MetricDimension

-- | Create a value of <a>MetricDimension</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:MetricDimension'</a>, <a>metricDimension_name</a> - The
--   name of the dimension.
--   
--   <a>$sel:value:MetricDimension'</a>, <a>metricDimension_value</a> - The
--   value of the dimension.
newMetricDimension :: Text -> Text -> MetricDimension

-- | Represents a predefined metric for a target tracking scaling policy to
--   use with Application Auto Scaling.
--   
--   Only the Amazon Web Services that you're using send metrics to Amazon
--   CloudWatch. To determine whether a desired metric already exists by
--   looking up its namespace and dimension using the CloudWatch metrics
--   dashboard in the console, follow the procedure in <a>Building
--   dashboards with CloudWatch</a> in the <i>Application Auto Scaling User
--   Guide</i>.
--   
--   <i>See:</i> <a>newPredefinedMetricSpecification</a> smart constructor.
data PredefinedMetricSpecification
PredefinedMetricSpecification' :: Maybe Text -> MetricType -> PredefinedMetricSpecification

-- | Create a value of <a>PredefinedMetricSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceLabel:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_resourceLabel</a> - Identifies the
--   resource associated with the metric type. You can't specify a resource
--   label unless the metric type is <tt>ALBRequestCountPerTarget</tt> and
--   there is a target group attached to the Spot Fleet request or ECS
--   service.
--   
--   You create the resource label by appending the final portion of the
--   load balancer ARN and the final portion of the target group ARN into a
--   single value, separated by a forward slash (/). The format of the
--   resource label is:
--   
--   
--   <tt>app/my-alb/778d41231b141a0f/targetgroup/my-alb-target-group/943f017f100becff</tt>.
--   
--   Where:
--   
--   <ul>
--   <li>app/&lt;load-balancer-name&gt;/&lt;load-balancer-id&gt; is the
--   final portion of the load balancer ARN</li>
--   <li>targetgroup/&lt;target-group-name&gt;/&lt;target-group-id&gt; is
--   the final portion of the target group ARN.</li>
--   </ul>
--   
--   To find the ARN for an Application Load Balancer, use the
--   <a>DescribeLoadBalancers</a> API operation. To find the ARN for the
--   target group, use the <a>DescribeTargetGroups</a> API operation.
--   
--   <a>$sel:predefinedMetricType:PredefinedMetricSpecification'</a>,
--   <a>predefinedMetricSpecification_predefinedMetricType</a> - The metric
--   type. The <tt>ALBRequestCountPerTarget</tt> metric type applies only
--   to Spot Fleet requests and ECS services.
newPredefinedMetricSpecification :: MetricType -> PredefinedMetricSpecification

-- | Represents a scalable target.
--   
--   <i>See:</i> <a>newScalableTarget</a> smart constructor.
data ScalableTarget
ScalableTarget' :: Maybe SuspendedState -> ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> Text -> POSIX -> ScalableTarget

-- | Create a value of <a>ScalableTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:suspendedState:ScalableTarget'</a>,
--   <a>scalableTarget_suspendedState</a> - Undocumented member.
--   
--   <a>$sel:serviceNamespace:ScalableTarget'</a>,
--   <a>scalableTarget_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalableTarget'</a>,
--   <a>scalableTarget_resourceId</a> - The identifier of the resource
--   associated with the scalable target. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalableTarget'</a>,
--   <a>scalableTarget_scalableDimension</a> - The scalable dimension
--   associated with the scalable target. This string consists of the
--   service namespace, resource type, and scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:minCapacity:ScalableTarget'</a>,
--   <a>scalableTarget_minCapacity</a> - The minimum value to scale to in
--   response to a scale-in activity.
--   
--   <a>$sel:maxCapacity:ScalableTarget'</a>,
--   <a>scalableTarget_maxCapacity</a> - The maximum value to scale to in
--   response to a scale-out activity.
--   
--   <a>$sel:roleARN:ScalableTarget'</a>, <a>scalableTarget_roleARN</a> -
--   The ARN of an IAM role that allows Application Auto Scaling to modify
--   the scalable target on your behalf.
--   
--   <a>$sel:creationTime:ScalableTarget'</a>,
--   <a>scalableTarget_creationTime</a> - The Unix timestamp for when the
--   scalable target was created.
newScalableTarget :: ServiceNamespace -> Text -> ScalableDimension -> Int -> Int -> Text -> UTCTime -> ScalableTarget

-- | Represents the minimum and maximum capacity for a scheduled action.
--   
--   <i>See:</i> <a>newScalableTargetAction</a> smart constructor.
data ScalableTargetAction
ScalableTargetAction' :: Maybe Int -> Maybe Int -> ScalableTargetAction

-- | Create a value of <a>ScalableTargetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxCapacity:ScalableTargetAction'</a>,
--   <a>scalableTargetAction_maxCapacity</a> - The maximum capacity.
--   
--   Although you can specify a large maximum capacity, note that service
--   quotas may impose lower limits. Each service has its own default
--   quotas for the maximum capacity of the resource. If you want to
--   specify a higher limit, you can request an increase. For more
--   information, consult the documentation for that service. For
--   information about the default quotas for each service, see <a>Service
--   Endpoints and Quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:minCapacity:ScalableTargetAction'</a>,
--   <a>scalableTargetAction_minCapacity</a> - The minimum capacity.
--   
--   For certain resources, the minimum value allowed is 0. This includes
--   Lambda provisioned concurrency, Spot Fleet, ECS services, Aurora DB
--   clusters, EMR clusters, and custom resources. For all other resources,
--   the minimum value allowed is 1.
newScalableTargetAction :: ScalableTargetAction

-- | Represents a scaling activity.
--   
--   <i>See:</i> <a>newScalingActivity</a> smart constructor.
data ScalingActivity
ScalingActivity' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> Text -> Text -> POSIX -> ScalingActivityStatusCode -> ScalingActivity

-- | Create a value of <a>ScalingActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ScalingActivity'</a>,
--   <a>scalingActivity_statusMessage</a> - A simple message about the
--   current status of the scaling activity.
--   
--   <a>$sel:endTime:ScalingActivity'</a>, <a>scalingActivity_endTime</a> -
--   The Unix timestamp for when the scaling activity ended.
--   
--   <a>$sel:details:ScalingActivity'</a>, <a>scalingActivity_details</a> -
--   The details about the scaling activity.
--   
--   <a>$sel:activityId:ScalingActivity'</a>,
--   <a>scalingActivity_activityId</a> - The unique identifier of the
--   scaling activity.
--   
--   <a>$sel:serviceNamespace:ScalingActivity'</a>,
--   <a>scalingActivity_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalingActivity'</a>,
--   <a>scalingActivity_resourceId</a> - The identifier of the resource
--   associated with the scaling activity. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingActivity'</a>,
--   <a>scalingActivity_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:description:ScalingActivity'</a>,
--   <a>scalingActivity_description</a> - A simple description of what
--   action the scaling activity intends to accomplish.
--   
--   <a>$sel:cause:ScalingActivity'</a>, <a>scalingActivity_cause</a> - A
--   simple description of what caused the scaling activity to happen.
--   
--   <a>$sel:startTime:ScalingActivity'</a>,
--   <a>scalingActivity_startTime</a> - The Unix timestamp for when the
--   scaling activity began.
--   
--   <a>$sel:statusCode:ScalingActivity'</a>,
--   <a>scalingActivity_statusCode</a> - Indicates the status of the
--   scaling activity.
newScalingActivity :: Text -> ServiceNamespace -> Text -> ScalableDimension -> Text -> Text -> UTCTime -> ScalingActivityStatusCode -> ScalingActivity

-- | Represents a scaling policy to use with Application Auto Scaling.
--   
--   For more information about configuring scaling policies for a specific
--   service, see <a>Getting started with Application Auto Scaling</a> in
--   the <i>Application Auto Scaling User Guide</i>.
--   
--   <i>See:</i> <a>newScalingPolicy</a> smart constructor.
data ScalingPolicy
ScalingPolicy' :: Maybe TargetTrackingScalingPolicyConfiguration -> Maybe StepScalingPolicyConfiguration -> Maybe [Alarm] -> Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> PolicyType -> POSIX -> ScalingPolicy

-- | Create a value of <a>ScalingPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetTrackingScalingPolicyConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_targetTrackingScalingPolicyConfiguration</a> - A
--   target tracking scaling policy.
--   
--   <a>$sel:stepScalingPolicyConfiguration:ScalingPolicy'</a>,
--   <a>scalingPolicy_stepScalingPolicyConfiguration</a> - A step scaling
--   policy.
--   
--   <a>$sel:alarms:ScalingPolicy'</a>, <a>scalingPolicy_alarms</a> - The
--   CloudWatch alarms associated with the scaling policy.
--   
--   <a>$sel:policyARN:ScalingPolicy'</a>, <a>scalingPolicy_policyARN</a> -
--   The Amazon Resource Name (ARN) of the scaling policy.
--   
--   <a>$sel:policyName:ScalingPolicy'</a>, <a>scalingPolicy_policyName</a>
--   - The name of the scaling policy.
--   
--   <a>$sel:serviceNamespace:ScalingPolicy'</a>,
--   <a>scalingPolicy_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:resourceId:ScalingPolicy'</a>, <a>scalingPolicy_resourceId</a>
--   - The identifier of the resource associated with the scaling policy.
--   This string consists of the resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:scalableDimension:ScalingPolicy'</a>,
--   <a>scalingPolicy_scalableDimension</a> - The scalable dimension. This
--   string consists of the service namespace, resource type, and scaling
--   property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:policyType:ScalingPolicy'</a>, <a>scalingPolicy_policyType</a>
--   - The scaling policy type.
--   
--   <a>$sel:creationTime:ScalingPolicy'</a>,
--   <a>scalingPolicy_creationTime</a> - The Unix timestamp for when the
--   scaling policy was created.
newScalingPolicy :: Text -> Text -> ServiceNamespace -> Text -> ScalableDimension -> PolicyType -> UTCTime -> ScalingPolicy

-- | Represents a scheduled action.
--   
--   <i>See:</i> <a>newScheduledAction</a> smart constructor.
data ScheduledAction
ScheduledAction' :: Maybe POSIX -> Maybe POSIX -> Maybe ScalableDimension -> Maybe Text -> Maybe ScalableTargetAction -> Text -> Text -> ServiceNamespace -> Text -> Text -> POSIX -> ScheduledAction

-- | Create a value of <a>ScheduledAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:ScheduledAction'</a>,
--   <a>scheduledAction_startTime</a> - The date and time that the action
--   is scheduled to begin, in UTC.
--   
--   <a>$sel:endTime:ScheduledAction'</a>, <a>scheduledAction_endTime</a> -
--   The date and time that the action is scheduled to end, in UTC.
--   
--   <a>$sel:scalableDimension:ScheduledAction'</a>,
--   <a>scheduledAction_scalableDimension</a> - The scalable dimension.
--   This string consists of the service namespace, resource type, and
--   scaling property.
--   
--   <ul>
--   <li><tt>ecs:service:DesiredCount</tt> - The desired task count of an
--   ECS service.</li>
--   <li><tt>elasticmapreduce:instancegroup:InstanceCount</tt> - The
--   instance count of an EMR Instance Group.</li>
--   <li><tt>ec2:spot-fleet-request:TargetCapacity</tt> - The target
--   capacity of a Spot Fleet request.</li>
--   <li><tt>appstream:fleet:DesiredCapacity</tt> - The desired capacity of
--   an AppStream 2.0 fleet.</li>
--   <li><tt>dynamodb:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:table:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB table.</li>
--   <li><tt>dynamodb:index:ReadCapacityUnits</tt> - The provisioned read
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>dynamodb:index:WriteCapacityUnits</tt> - The provisioned write
--   capacity for a DynamoDB global secondary index.</li>
--   <li><tt>rds:cluster:ReadReplicaCount</tt> - The count of Aurora
--   Replicas in an Aurora DB cluster. Available for Aurora
--   MySQL-compatible edition and Aurora PostgreSQL-compatible
--   edition.</li>
--   <li><tt>sagemaker:variant:DesiredInstanceCount</tt> - The number of
--   EC2 instances for an Amazon SageMaker model endpoint variant.</li>
--   <li><tt>custom-resource:ResourceType:Property</tt> - The scalable
--   dimension for a custom resource provided by your own application or
--   service.</li>
--   
--   <li><tt>comprehend:document-classifier-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend document
--   classification endpoint.</li>
--   
--   <li><tt>comprehend:entity-recognizer-endpoint:DesiredInferenceUnits</tt>
--   - The number of inference units for an Amazon Comprehend entity
--   recognizer endpoint.</li>
--   <li><tt>lambda:function:ProvisionedConcurrency</tt> - The provisioned
--   concurrency for a Lambda function.</li>
--   <li><tt>cassandra:table:ReadCapacityUnits</tt> - The provisioned read
--   capacity for an Amazon Keyspaces table.</li>
--   <li><tt>cassandra:table:WriteCapacityUnits</tt> - The provisioned
--   write capacity for an Amazon Keyspaces table.</li>
--   <li><tt>kafka:broker-storage:VolumeSize</tt> - The provisioned volume
--   size (in GiB) for brokers in an Amazon MSK cluster.</li>
--   <li><tt>elasticache:replication-group:NodeGroups</tt> - The number of
--   node groups for an Amazon ElastiCache replication group.</li>
--   <li><tt>elasticache:replication-group:Replicas</tt> - The number of
--   replicas per node group for an Amazon ElastiCache replication
--   group.</li>
--   </ul>
--   
--   <a>$sel:timezone:ScheduledAction'</a>, <a>scheduledAction_timezone</a>
--   - The time zone used when referring to the date and time of a
--   scheduled action, when the scheduled action uses an at or cron
--   expression.
--   
--   <a>$sel:scalableTargetAction:ScheduledAction'</a>,
--   <a>scheduledAction_scalableTargetAction</a> - The new minimum and
--   maximum capacity. You can set both values or just one. At the
--   scheduled time, if the current capacity is below the minimum capacity,
--   Application Auto Scaling scales out to the minimum capacity. If the
--   current capacity is above the maximum capacity, Application Auto
--   Scaling scales in to the maximum capacity.
--   
--   <a>$sel:scheduledActionName:ScheduledAction'</a>,
--   <a>scheduledAction_scheduledActionName</a> - The name of the scheduled
--   action.
--   
--   <a>$sel:scheduledActionARN:ScheduledAction'</a>,
--   <a>scheduledAction_scheduledActionARN</a> - The Amazon Resource Name
--   (ARN) of the scheduled action.
--   
--   <a>$sel:serviceNamespace:ScheduledAction'</a>,
--   <a>scheduledAction_serviceNamespace</a> - The namespace of the Amazon
--   Web Services service that provides the resource, or a
--   <tt>custom-resource</tt>.
--   
--   <a>$sel:schedule:ScheduledAction'</a>, <a>scheduledAction_schedule</a>
--   - The schedule for this action. The following formats are supported:
--   
--   <ul>
--   <li>At expressions - "<tt>at(yyyy-mm-ddThh:mm:ss)</tt>"</li>
--   <li>Rate expressions - "<tt>rate(value unit)</tt>"</li>
--   <li>Cron expressions - "<tt>cron(fields)</tt>"</li>
--   </ul>
--   
--   At expressions are useful for one-time schedules. Cron expressions are
--   useful for scheduled actions that run periodically at a specified date
--   and time, and rate expressions are useful for scheduled actions that
--   run at a regular interval.
--   
--   At and cron expressions use Universal Coordinated Time (UTC) by
--   default.
--   
--   The cron format consists of six fields separated by white spaces:
--   [Minutes] [Hours] [Day_of_Month] [Month] [Day_of_Week] [Year].
--   
--   For rate expressions, <i>value</i> is a positive integer and
--   <i>unit</i> is <tt>minute</tt> | <tt>minutes</tt> | <tt>hour</tt> |
--   <tt>hours</tt> | <tt>day</tt> | <tt>days</tt>.
--   
--   For more information and examples, see <a>Example scheduled actions
--   for Application Auto Scaling</a> in the <i>Application Auto Scaling
--   User Guide</i>.
--   
--   <a>$sel:resourceId:ScheduledAction'</a>,
--   <a>scheduledAction_resourceId</a> - The identifier of the resource
--   associated with the scaling policy. This string consists of the
--   resource type and unique identifier.
--   
--   <ul>
--   <li>ECS service - The resource type is <tt>service</tt> and the unique
--   identifier is the cluster name and service name. Example:
--   <tt>service/default/sample-webapp</tt>.</li>
--   <li>Spot Fleet request - The resource type is
--   <tt>spot-fleet-request</tt> and the unique identifier is the Spot
--   Fleet request ID. Example:
--   <tt>spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE</tt>.</li>
--   <li>EMR cluster - The resource type is <tt>instancegroup</tt> and the
--   unique identifier is the cluster ID and instance group ID. Example:
--   <tt>instancegroup/j-2EEZNYKUA1NTV/ig-1791Y4E1L8YI0</tt>.</li>
--   <li>AppStream 2.0 fleet - The resource type is <tt>fleet</tt> and the
--   unique identifier is the fleet name. Example:
--   <tt>fleet/sample-fleet</tt>.</li>
--   <li>DynamoDB table - The resource type is <tt>table</tt> and the
--   unique identifier is the table name. Example:
--   <tt>table/my-table</tt>.</li>
--   <li>DynamoDB global secondary index - The resource type is
--   <tt>index</tt> and the unique identifier is the index name. Example:
--   <tt>table/my-table/index/my-table-index</tt>.</li>
--   <li>Aurora DB cluster - The resource type is <tt>cluster</tt> and the
--   unique identifier is the cluster name. Example:
--   <tt>cluster:my-db-cluster</tt>.</li>
--   <li>Amazon SageMaker endpoint variant - The resource type is
--   <tt>variant</tt> and the unique identifier is the resource ID.
--   Example: <tt>endpoint/my-end-point/variant/KMeansClustering</tt>.</li>
--   <li>Custom resources are not supported with a resource type. This
--   parameter must specify the <tt>OutputValue</tt> from the
--   CloudFormation template stack used to access the resources. The unique
--   identifier is defined by the service provider. More information is
--   available in our <a>GitHub repository</a>.</li>
--   <li>Amazon Comprehend document classification endpoint - The resource
--   type and unique identifier are specified using the endpoint ARN.
--   Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:document-classifier-endpoint/EXAMPLE</tt>.</li>
--   <li>Amazon Comprehend entity recognizer endpoint - The resource type
--   and unique identifier are specified using the endpoint ARN. Example:
--   <tt>arn:aws:comprehend:us-west-2:123456789012:entity-recognizer-endpoint/EXAMPLE</tt>.</li>
--   <li>Lambda provisioned concurrency - The resource type is
--   <tt>function</tt> and the unique identifier is the function name with
--   a function version or alias name suffix that is not <tt>$LATEST</tt>.
--   Example: <tt>function:my-function:prod</tt> or
--   <tt>function:my-function:1</tt>.</li>
--   <li>Amazon Keyspaces table - The resource type is <tt>table</tt> and
--   the unique identifier is the table name. Example:
--   <tt>keyspace/mykeyspace/table/mytable</tt>.</li>
--   <li>Amazon MSK cluster - The resource type and unique identifier are
--   specified using the cluster ARN. Example:
--   <tt>arn:aws:kafka:us-east-1:123456789012:cluster/demo-cluster-1/6357e0b2-0e6a-4b86-a0b4-70df934c2e31-5</tt>.</li>
--   <li>Amazon ElastiCache replication group - The resource type is
--   <tt>replication-group</tt> and the unique identifier is the
--   replication group name. Example:
--   <tt>replication-group/mycluster</tt>.</li>
--   </ul>
--   
--   <a>$sel:creationTime:ScheduledAction'</a>,
--   <a>scheduledAction_creationTime</a> - The date and time that the
--   scheduled action was created.
newScheduledAction :: Text -> Text -> ServiceNamespace -> Text -> Text -> UTCTime -> ScheduledAction

-- | Represents a step adjustment for a
--   <a>StepScalingPolicyConfiguration</a>. Describes an adjustment based
--   on the difference between the value of the aggregated CloudWatch
--   metric and the breach threshold that you've defined for the alarm.
--   
--   For the following examples, suppose that you have an alarm with a
--   breach threshold of 50:
--   
--   <ul>
--   <li>To trigger the adjustment when the metric is greater than or equal
--   to 50 and less than 60, specify a lower bound of 0 and an upper bound
--   of 10.</li>
--   <li>To trigger the adjustment when the metric is greater than 40 and
--   less than or equal to 50, specify a lower bound of -10 and an upper
--   bound of 0.</li>
--   </ul>
--   
--   There are a few rules for the step adjustments for your step policy:
--   
--   <ul>
--   <li>The ranges of your step adjustments can't overlap or have a
--   gap.</li>
--   <li>At most one step adjustment can have a null lower bound. If one
--   step adjustment has a negative lower bound, then there must be a step
--   adjustment with a null lower bound.</li>
--   <li>At most one step adjustment can have a null upper bound. If one
--   step adjustment has a positive upper bound, then there must be a step
--   adjustment with a null upper bound.</li>
--   <li>The upper and lower bound can't be null in the same step
--   adjustment.</li>
--   </ul>
--   
--   <i>See:</i> <a>newStepAdjustment</a> smart constructor.
data StepAdjustment
StepAdjustment' :: Maybe Double -> Maybe Double -> Int -> StepAdjustment

-- | Create a value of <a>StepAdjustment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:metricIntervalUpperBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalUpperBound</a> - The upper bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the upper bound is
--   exclusive (the metric must be less than the threshold plus the upper
--   bound). Otherwise, it is inclusive (the metric must be less than or
--   equal to the threshold plus the upper bound). A null value indicates
--   positive infinity.
--   
--   The upper bound must be greater than the lower bound.
--   
--   <a>$sel:metricIntervalLowerBound:StepAdjustment'</a>,
--   <a>stepAdjustment_metricIntervalLowerBound</a> - The lower bound for
--   the difference between the alarm threshold and the CloudWatch metric.
--   If the metric value is above the breach threshold, the lower bound is
--   inclusive (the metric must be greater than or equal to the threshold
--   plus the lower bound). Otherwise, it is exclusive (the metric must be
--   greater than the threshold plus the lower bound). A null value
--   indicates negative infinity.
--   
--   <a>$sel:scalingAdjustment:StepAdjustment'</a>,
--   <a>stepAdjustment_scalingAdjustment</a> - The amount by which to
--   scale, based on the specified adjustment type. A positive value adds
--   to the current capacity while a negative number removes from the
--   current capacity. For exact capacity, you must specify a positive
--   value.
newStepAdjustment :: Int -> StepAdjustment

-- | Represents a step scaling policy configuration to use with Application
--   Auto Scaling.
--   
--   <i>See:</i> <a>newStepScalingPolicyConfiguration</a> smart
--   constructor.
data StepScalingPolicyConfiguration
StepScalingPolicyConfiguration' :: Maybe [StepAdjustment] -> Maybe MetricAggregationType -> Maybe Int -> Maybe AdjustmentType -> Maybe Int -> StepScalingPolicyConfiguration

-- | Create a value of <a>StepScalingPolicyConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stepAdjustments:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_stepAdjustments</a> - A set of
--   adjustments that enable you to scale based on the size of the alarm
--   breach.
--   
--   At least one step adjustment is required if you are adding a new step
--   scaling policy configuration.
--   
--   <a>$sel:metricAggregationType:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_metricAggregationType</a> - The
--   aggregation type for the CloudWatch metrics. Valid values are
--   <tt>Minimum</tt>, <tt>Maximum</tt>, and <tt>Average</tt>. If the
--   aggregation type is null, the value is treated as <tt>Average</tt>.
--   
--   <a>$sel:cooldown:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_cooldown</a> - The amount of time,
--   in seconds, to wait for a previous scaling activity to take effect.
--   
--   With scale-out policies, the intention is to continuously (but not
--   excessively) scale out. After Application Auto Scaling successfully
--   scales out using a step scaling policy, it starts to calculate the
--   cooldown time. The scaling policy won't increase the desired capacity
--   again unless either a larger scale out is triggered or the cooldown
--   period ends. While the cooldown period is in effect, capacity added by
--   the initiating scale-out activity is calculated as part of the desired
--   capacity for the next scale-out activity. For example, when an alarm
--   triggers a step scaling policy to increase the capacity by 2, the
--   scaling activity completes successfully, and a cooldown period starts.
--   If the alarm triggers again during the cooldown period but at a more
--   aggressive step adjustment of 3, the previous increase of 2 is
--   considered part of the current capacity. Therefore, only 1 is added to
--   the capacity.
--   
--   With scale-in policies, the intention is to scale in conservatively to
--   protect your application’s availability, so scale-in activities are
--   blocked until the cooldown period has expired. However, if another
--   alarm triggers a scale-out activity during the cooldown period after a
--   scale-in activity, Application Auto Scaling scales out the target
--   immediately. In this case, the cooldown period for the scale-in
--   activity stops and doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   <a>$sel:adjustmentType:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_adjustmentType</a> - Specifies how
--   the <tt>ScalingAdjustment</tt> value in a <a>StepAdjustment</a> is
--   interpreted (for example, an absolute number or a percentage). The
--   valid values are <tt>ChangeInCapacity</tt>, <tt>ExactCapacity</tt>,
--   and <tt>PercentChangeInCapacity</tt>.
--   
--   <tt>AdjustmentType</tt> is required if you are adding a new step
--   scaling policy configuration.
--   
--   <a>$sel:minAdjustmentMagnitude:StepScalingPolicyConfiguration'</a>,
--   <a>stepScalingPolicyConfiguration_minAdjustmentMagnitude</a> - The
--   minimum value to scale by when the adjustment type is
--   <tt>PercentChangeInCapacity</tt>. For example, suppose that you create
--   a step scaling policy to scale out an Amazon ECS service by 25 percent
--   and you specify a <tt>MinAdjustmentMagnitude</tt> of 2. If the service
--   has 4 tasks and the scaling policy is performed, 25 percent of 4 is 1.
--   However, because you specified a <tt>MinAdjustmentMagnitude</tt> of 2,
--   Application Auto Scaling scales out the service by 2 tasks.
newStepScalingPolicyConfiguration :: StepScalingPolicyConfiguration

-- | Specifies whether the scaling activities for a scalable target are in
--   a suspended state.
--   
--   <i>See:</i> <a>newSuspendedState</a> smart constructor.
data SuspendedState
SuspendedState' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> SuspendedState

-- | Create a value of <a>SuspendedState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduledScalingSuspended:SuspendedState'</a>,
--   <a>suspendedState_scheduledScalingSuspended</a> - Whether scheduled
--   scaling is suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to add or remove capacity by initiating
--   scheduled actions. The default is <tt>false</tt>.
--   
--   <a>$sel:dynamicScalingInSuspended:SuspendedState'</a>,
--   <a>suspendedState_dynamicScalingInSuspended</a> - Whether scale in by
--   a target tracking scaling policy or a step scaling policy is
--   suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to remove capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
--   
--   <a>$sel:dynamicScalingOutSuspended:SuspendedState'</a>,
--   <a>suspendedState_dynamicScalingOutSuspended</a> - Whether scale out
--   by a target tracking scaling policy or a step scaling policy is
--   suspended. Set the value to <tt>true</tt> if you don't want
--   Application Auto Scaling to add capacity when a scaling policy is
--   triggered. The default is <tt>false</tt>.
newSuspendedState :: SuspendedState

-- | Represents a target tracking scaling policy configuration to use with
--   Application Auto Scaling.
--   
--   <i>See:</i> <a>newTargetTrackingScalingPolicyConfiguration</a> smart
--   constructor.
data TargetTrackingScalingPolicyConfiguration
TargetTrackingScalingPolicyConfiguration' :: Maybe Bool -> Maybe PredefinedMetricSpecification -> Maybe Int -> Maybe CustomizedMetricSpecification -> Maybe Int -> Double -> TargetTrackingScalingPolicyConfiguration

-- | Create a value of <a>TargetTrackingScalingPolicyConfiguration</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:disableScaleIn:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_disableScaleIn</a> -
--   Indicates whether scale in by the target tracking scaling policy is
--   disabled. If the value is <tt>true</tt>, scale in is disabled and the
--   target tracking scaling policy won't remove capacity from the scalable
--   target. Otherwise, scale in is enabled and the target tracking scaling
--   policy can remove capacity from the scalable target. The default value
--   is <tt>false</tt>.
--   
--   
--   <a>$sel:predefinedMetricSpecification:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_predefinedMetricSpecification</a>
--   - A predefined metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   
--   <a>$sel:scaleOutCooldown:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_scaleOutCooldown</a> - The
--   amount of time, in seconds, to wait for a previous scale-out activity
--   to take effect.
--   
--   With the <i>scale-out cooldown period</i>, the intention is to
--   continuously (but not excessively) scale out. After Application Auto
--   Scaling successfully scales out using a target tracking scaling
--   policy, it starts to calculate the cooldown time. The scaling policy
--   won't increase the desired capacity again unless either a larger scale
--   out is triggered or the cooldown period ends. While the cooldown
--   period is in effect, the capacity added by the initiating scale-out
--   activity is calculated as part of the desired capacity for the next
--   scale-out activity.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   
--   <a>$sel:customizedMetricSpecification:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_customizedMetricSpecification</a>
--   - A customized metric. You can specify either a predefined metric or a
--   customized metric.
--   
--   <a>$sel:scaleInCooldown:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_scaleInCooldown</a> - The
--   amount of time, in seconds, after a scale-in activity completes before
--   another scale-in activity can start.
--   
--   With the <i>scale-in cooldown period</i>, the intention is to scale in
--   conservatively to protect your application’s availability, so scale-in
--   activities are blocked until the cooldown period has expired. However,
--   if another alarm triggers a scale-out activity during the scale-in
--   cooldown period, Application Auto Scaling scales out the target
--   immediately. In this case, the scale-in cooldown period stops and
--   doesn't complete.
--   
--   Application Auto Scaling provides a default value of 600 for Amazon
--   ElastiCache replication groups and a default value of 300 for the
--   following scalable targets:
--   
--   <ul>
--   <li>ECS services</li>
--   <li>Spot Fleet requests</li>
--   <li>EMR clusters</li>
--   <li>AppStream 2.0 fleets</li>
--   <li>Aurora DB clusters</li>
--   <li>Amazon SageMaker endpoint variants</li>
--   <li>Custom resources</li>
--   </ul>
--   
--   For all other scalable targets, the default value is 0:
--   
--   <ul>
--   <li>DynamoDB tables</li>
--   <li>DynamoDB global secondary indexes</li>
--   <li>Amazon Comprehend document classification and entity recognizer
--   endpoints</li>
--   <li>Lambda provisioned concurrency</li>
--   <li>Amazon Keyspaces tables</li>
--   <li>Amazon MSK broker storage</li>
--   </ul>
--   
--   <a>$sel:targetValue:TargetTrackingScalingPolicyConfiguration'</a>,
--   <a>targetTrackingScalingPolicyConfiguration_targetValue</a> - The
--   target value for the metric. Although this property accepts numbers of
--   type Double, it won't accept values that are either too small or too
--   large. Values must be in the range of -2^360 to 2^360. The value must
--   be a valid number based on the choice of metric. For example, if the
--   metric is CPU utilization, then the target value is a percent value
--   that represents how much of the CPU can be used before scaling out.
newTargetTrackingScalingPolicyConfiguration :: Double -> TargetTrackingScalingPolicyConfiguration
