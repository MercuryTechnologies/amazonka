-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-codecommitZSamazonka-codecommit
@version 2.0


module Amazonka.CodeCommit.Types.ApprovalRuleEventMetadata

-- | Returns information about an event for an approval rule.
--   
--   <i>See:</i> <a>newApprovalRuleEventMetadata</a> smart constructor.
data ApprovalRuleEventMetadata
ApprovalRuleEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> ApprovalRuleEventMetadata

-- | The name of the approval rule.
[$sel:approvalRuleName:ApprovalRuleEventMetadata'] :: ApprovalRuleEventMetadata -> Maybe Text

-- | The system-generated ID of the approval rule.
[$sel:approvalRuleId:ApprovalRuleEventMetadata'] :: ApprovalRuleEventMetadata -> Maybe Text

-- | The content of the approval rule.
[$sel:approvalRuleContent:ApprovalRuleEventMetadata'] :: ApprovalRuleEventMetadata -> Maybe Text

-- | Create a value of <a>ApprovalRuleEventMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleName:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleName</a> - The name of the
--   approval rule.
--   
--   <a>$sel:approvalRuleId:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleId</a> - The system-generated
--   ID of the approval rule.
--   
--   <a>$sel:approvalRuleContent:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleContent</a> - The content of
--   the approval rule.
newApprovalRuleEventMetadata :: ApprovalRuleEventMetadata

-- | The name of the approval rule.
approvalRuleEventMetadata_approvalRuleName :: Lens' ApprovalRuleEventMetadata (Maybe Text)

-- | The system-generated ID of the approval rule.
approvalRuleEventMetadata_approvalRuleId :: Lens' ApprovalRuleEventMetadata (Maybe Text)

-- | The content of the approval rule.
approvalRuleEventMetadata_approvalRuleContent :: Lens' ApprovalRuleEventMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ApprovalRuleEventMetadata.ApprovalRuleEventMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.ApprovalRuleEventMetadata.ApprovalRuleEventMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.ApprovalRuleEventMetadata.ApprovalRuleEventMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ApprovalRuleEventMetadata.ApprovalRuleEventMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ApprovalRuleEventMetadata.ApprovalRuleEventMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ApprovalRuleEventMetadata.ApprovalRuleEventMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ApprovalRuleEventMetadata.ApprovalRuleEventMetadata


module Amazonka.CodeCommit.Types.ApprovalRuleTemplate

-- | Returns information about an approval rule template.
--   
--   <i>See:</i> <a>newApprovalRuleTemplate</a> smart constructor.
data ApprovalRuleTemplate
ApprovalRuleTemplate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ApprovalRuleTemplate

-- | The SHA-256 hash signature for the content of the approval rule
--   template.
[$sel:ruleContentSha256:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The system-generated ID of the approval rule template.
[$sel:approvalRuleTemplateId:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The date the approval rule template was most recently changed, in
--   timestamp format.
[$sel:lastModifiedDate:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe POSIX

-- | The description of the approval rule template.
[$sel:approvalRuleTemplateDescription:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The content of the approval rule template.
[$sel:approvalRuleTemplateContent:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule template.
[$sel:lastModifiedUser:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The date the approval rule template was created, in timestamp format.
[$sel:creationDate:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe POSIX

-- | The name of the approval rule template.
[$sel:approvalRuleTemplateName:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | Create a value of <a>ApprovalRuleTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleContentSha256:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_ruleContentSha256</a> - The SHA-256 hash
--   signature for the content of the approval rule template.
--   
--   <a>$sel:approvalRuleTemplateId:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateId</a> - The
--   system-generated ID of the approval rule template.
--   
--   <a>$sel:lastModifiedDate:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_lastModifiedDate</a> - The date the approval
--   rule template was most recently changed, in timestamp format.
--   
--   <a>$sel:approvalRuleTemplateDescription:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateDescription</a> - The
--   description of the approval rule template.
--   
--   <a>$sel:approvalRuleTemplateContent:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateContent</a> - The content
--   of the approval rule template.
--   
--   <a>$sel:lastModifiedUser:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_lastModifiedUser</a> - The Amazon Resource
--   Name (ARN) of the user who made the most recent changes to the
--   approval rule template.
--   
--   <a>$sel:creationDate:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_creationDate</a> - The date the approval rule
--   template was created, in timestamp format.
--   
--   <a>$sel:approvalRuleTemplateName:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateName</a> - The name of the
--   approval rule template.
newApprovalRuleTemplate :: ApprovalRuleTemplate

-- | The SHA-256 hash signature for the content of the approval rule
--   template.
approvalRuleTemplate_ruleContentSha256 :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The system-generated ID of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateId :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The date the approval rule template was most recently changed, in
--   timestamp format.
approvalRuleTemplate_lastModifiedDate :: Lens' ApprovalRuleTemplate (Maybe UTCTime)

-- | The description of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateDescription :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The content of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateContent :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule template.
approvalRuleTemplate_lastModifiedUser :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The date the approval rule template was created, in timestamp format.
approvalRuleTemplate_creationDate :: Lens' ApprovalRuleTemplate (Maybe UTCTime)

-- | The name of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateName :: Lens' ApprovalRuleTemplate (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ApprovalRuleTemplate.ApprovalRuleTemplate
instance GHC.Show.Show Amazonka.CodeCommit.Types.ApprovalRuleTemplate.ApprovalRuleTemplate
instance GHC.Read.Read Amazonka.CodeCommit.Types.ApprovalRuleTemplate.ApprovalRuleTemplate
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ApprovalRuleTemplate.ApprovalRuleTemplate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ApprovalRuleTemplate.ApprovalRuleTemplate
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ApprovalRuleTemplate.ApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ApprovalRuleTemplate.ApprovalRuleTemplate


module Amazonka.CodeCommit.Types.ApprovalState
newtype ApprovalState
ApprovalState' :: Text -> ApprovalState
[fromApprovalState] :: ApprovalState -> Text
pattern ApprovalState_APPROVE :: ApprovalState
pattern ApprovalState_REVOKE :: ApprovalState
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance GHC.Read.Read Amazonka.CodeCommit.Types.ApprovalState.ApprovalState
instance GHC.Show.Show Amazonka.CodeCommit.Types.ApprovalState.ApprovalState


module Amazonka.CodeCommit.Types.Approval

-- | Returns information about a specific approval on a pull request.
--   
--   <i>See:</i> <a>newApproval</a> smart constructor.
data Approval
Approval' :: Maybe ApprovalState -> Maybe Text -> Approval

-- | The state of the approval, APPROVE or REVOKE. REVOKE states are not
--   stored.
[$sel:approvalState:Approval'] :: Approval -> Maybe ApprovalState

-- | The Amazon Resource Name (ARN) of the user.
[$sel:userArn:Approval'] :: Approval -> Maybe Text

-- | Create a value of <a>Approval</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalState:Approval'</a>, <a>approval_approvalState</a> -
--   The state of the approval, APPROVE or REVOKE. REVOKE states are not
--   stored.
--   
--   <a>$sel:userArn:Approval'</a>, <a>approval_userArn</a> - The Amazon
--   Resource Name (ARN) of the user.
newApproval :: Approval

-- | The state of the approval, APPROVE or REVOKE. REVOKE states are not
--   stored.
approval_approvalState :: Lens' Approval (Maybe ApprovalState)

-- | The Amazon Resource Name (ARN) of the user.
approval_userArn :: Lens' Approval (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Approval.Approval
instance GHC.Show.Show Amazonka.CodeCommit.Types.Approval.Approval
instance GHC.Read.Read Amazonka.CodeCommit.Types.Approval.Approval
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Approval.Approval
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.Approval.Approval
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Approval.Approval
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Approval.Approval


module Amazonka.CodeCommit.Types.ApprovalStateChangedEventMetadata

-- | Returns information about a change in the approval state for a pull
--   request.
--   
--   <i>See:</i> <a>newApprovalStateChangedEventMetadata</a> smart
--   constructor.
data ApprovalStateChangedEventMetadata
ApprovalStateChangedEventMetadata' :: Maybe ApprovalState -> Maybe Text -> ApprovalStateChangedEventMetadata

-- | The approval status for the pull request.
[$sel:approvalStatus:ApprovalStateChangedEventMetadata'] :: ApprovalStateChangedEventMetadata -> Maybe ApprovalState

-- | The revision ID of the pull request when the approval state changed.
[$sel:revisionId:ApprovalStateChangedEventMetadata'] :: ApprovalStateChangedEventMetadata -> Maybe Text

-- | Create a value of <a>ApprovalStateChangedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalStatus:ApprovalStateChangedEventMetadata'</a>,
--   <a>approvalStateChangedEventMetadata_approvalStatus</a> - The approval
--   status for the pull request.
--   
--   <a>$sel:revisionId:ApprovalStateChangedEventMetadata'</a>,
--   <a>approvalStateChangedEventMetadata_revisionId</a> - The revision ID
--   of the pull request when the approval state changed.
newApprovalStateChangedEventMetadata :: ApprovalStateChangedEventMetadata

-- | The approval status for the pull request.
approvalStateChangedEventMetadata_approvalStatus :: Lens' ApprovalStateChangedEventMetadata (Maybe ApprovalState)

-- | The revision ID of the pull request when the approval state changed.
approvalStateChangedEventMetadata_revisionId :: Lens' ApprovalStateChangedEventMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ApprovalStateChangedEventMetadata.ApprovalStateChangedEventMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.ApprovalStateChangedEventMetadata.ApprovalStateChangedEventMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.ApprovalStateChangedEventMetadata.ApprovalStateChangedEventMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ApprovalStateChangedEventMetadata.ApprovalStateChangedEventMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ApprovalStateChangedEventMetadata.ApprovalStateChangedEventMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ApprovalStateChangedEventMetadata.ApprovalStateChangedEventMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ApprovalStateChangedEventMetadata.ApprovalStateChangedEventMetadata


module Amazonka.CodeCommit.Types.BatchAssociateApprovalRuleTemplateWithRepositoriesError

-- | Returns information about errors in a
--   BatchAssociateApprovalRuleTemplateWithRepositories operation.
--   
--   <i>See:</i>
--   <a>newBatchAssociateApprovalRuleTemplateWithRepositoriesError</a>
--   smart constructor.
data BatchAssociateApprovalRuleTemplateWithRepositoriesError
BatchAssociateApprovalRuleTemplateWithRepositoriesError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchAssociateApprovalRuleTemplateWithRepositoriesError

-- | An error code that specifies whether the repository name was not valid
--   or not found.
[$sel:errorCode:BatchAssociateApprovalRuleTemplateWithRepositoriesError'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesError -> Maybe Text

-- | The name of the repository where the association was not made.
[$sel:repositoryName:BatchAssociateApprovalRuleTemplateWithRepositoriesError'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesError -> Maybe Text

-- | An error message that provides details about why the repository name
--   was not found or not valid.
[$sel:errorMessage:BatchAssociateApprovalRuleTemplateWithRepositoriesError'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesError -> Maybe Text

-- | Create a value of
--   <a>BatchAssociateApprovalRuleTemplateWithRepositoriesError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:errorCode:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_errorCode</a>
--   - An error code that specifies whether the repository name was not
--   valid or not found.
--   
--   
--   <a>$sel:repositoryName:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_repositoryName</a>
--   - The name of the repository where the association was not made.
--   
--   
--   <a>$sel:errorMessage:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_errorMessage</a>
--   - An error message that provides details about why the repository name
--   was not found or not valid.
newBatchAssociateApprovalRuleTemplateWithRepositoriesError :: BatchAssociateApprovalRuleTemplateWithRepositoriesError

-- | An error code that specifies whether the repository name was not valid
--   or not found.
batchAssociateApprovalRuleTemplateWithRepositoriesError_errorCode :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)

-- | The name of the repository where the association was not made.
batchAssociateApprovalRuleTemplateWithRepositoriesError_repositoryName :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)

-- | An error message that provides details about why the repository name
--   was not found or not valid.
batchAssociateApprovalRuleTemplateWithRepositoriesError_errorMessage :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.BatchAssociateApprovalRuleTemplateWithRepositoriesError.BatchAssociateApprovalRuleTemplateWithRepositoriesError
instance GHC.Show.Show Amazonka.CodeCommit.Types.BatchAssociateApprovalRuleTemplateWithRepositoriesError.BatchAssociateApprovalRuleTemplateWithRepositoriesError
instance GHC.Read.Read Amazonka.CodeCommit.Types.BatchAssociateApprovalRuleTemplateWithRepositoriesError.BatchAssociateApprovalRuleTemplateWithRepositoriesError
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.BatchAssociateApprovalRuleTemplateWithRepositoriesError.BatchAssociateApprovalRuleTemplateWithRepositoriesError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.BatchAssociateApprovalRuleTemplateWithRepositoriesError.BatchAssociateApprovalRuleTemplateWithRepositoriesError
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.BatchAssociateApprovalRuleTemplateWithRepositoriesError.BatchAssociateApprovalRuleTemplateWithRepositoriesError
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.BatchAssociateApprovalRuleTemplateWithRepositoriesError.BatchAssociateApprovalRuleTemplateWithRepositoriesError


module Amazonka.CodeCommit.Types.BatchDescribeMergeConflictsError

-- | Returns information about errors in a BatchDescribeMergeConflicts
--   operation.
--   
--   <i>See:</i> <a>newBatchDescribeMergeConflictsError</a> smart
--   constructor.
data BatchDescribeMergeConflictsError
BatchDescribeMergeConflictsError' :: Text -> Text -> Text -> BatchDescribeMergeConflictsError

-- | The path to the file.
[$sel:filePath:BatchDescribeMergeConflictsError'] :: BatchDescribeMergeConflictsError -> Text

-- | The name of the exception.
[$sel:exceptionName:BatchDescribeMergeConflictsError'] :: BatchDescribeMergeConflictsError -> Text

-- | The message provided by the exception.
[$sel:message:BatchDescribeMergeConflictsError'] :: BatchDescribeMergeConflictsError -> Text

-- | Create a value of <a>BatchDescribeMergeConflictsError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_filePath</a> - The path to the
--   file.
--   
--   <a>$sel:exceptionName:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_exceptionName</a> - The name of
--   the exception.
--   
--   <a>$sel:message:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_message</a> - The message provided
--   by the exception.
newBatchDescribeMergeConflictsError :: Text -> Text -> Text -> BatchDescribeMergeConflictsError

-- | The path to the file.
batchDescribeMergeConflictsError_filePath :: Lens' BatchDescribeMergeConflictsError Text

-- | The name of the exception.
batchDescribeMergeConflictsError_exceptionName :: Lens' BatchDescribeMergeConflictsError Text

-- | The message provided by the exception.
batchDescribeMergeConflictsError_message :: Lens' BatchDescribeMergeConflictsError Text
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.BatchDescribeMergeConflictsError.BatchDescribeMergeConflictsError
instance GHC.Show.Show Amazonka.CodeCommit.Types.BatchDescribeMergeConflictsError.BatchDescribeMergeConflictsError
instance GHC.Read.Read Amazonka.CodeCommit.Types.BatchDescribeMergeConflictsError.BatchDescribeMergeConflictsError
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.BatchDescribeMergeConflictsError.BatchDescribeMergeConflictsError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.BatchDescribeMergeConflictsError.BatchDescribeMergeConflictsError
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.BatchDescribeMergeConflictsError.BatchDescribeMergeConflictsError
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.BatchDescribeMergeConflictsError.BatchDescribeMergeConflictsError


module Amazonka.CodeCommit.Types.BatchDisassociateApprovalRuleTemplateFromRepositoriesError

-- | Returns information about errors in a
--   BatchDisassociateApprovalRuleTemplateFromRepositories operation.
--   
--   <i>See:</i>
--   <a>newBatchDisassociateApprovalRuleTemplateFromRepositoriesError</a>
--   smart constructor.
data BatchDisassociateApprovalRuleTemplateFromRepositoriesError
BatchDisassociateApprovalRuleTemplateFromRepositoriesError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchDisassociateApprovalRuleTemplateFromRepositoriesError

-- | An error code that specifies whether the repository name was not valid
--   or not found.
[$sel:errorCode:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError -> Maybe Text

-- | The name of the repository where the association with the template was
--   not able to be removed.
[$sel:repositoryName:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError -> Maybe Text

-- | An error message that provides details about why the repository name
--   was either not found or not valid.
[$sel:errorMessage:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError -> Maybe Text

-- | Create a value of
--   <a>BatchDisassociateApprovalRuleTemplateFromRepositoriesError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:errorCode:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorCode</a>
--   - An error code that specifies whether the repository name was not
--   valid or not found.
--   
--   
--   <a>$sel:repositoryName:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_repositoryName</a>
--   - The name of the repository where the association with the template
--   was not able to be removed.
--   
--   
--   <a>$sel:errorMessage:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorMessage</a>
--   - An error message that provides details about why the repository name
--   was either not found or not valid.
newBatchDisassociateApprovalRuleTemplateFromRepositoriesError :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError

-- | An error code that specifies whether the repository name was not valid
--   or not found.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorCode :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)

-- | The name of the repository where the association with the template was
--   not able to be removed.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_repositoryName :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)

-- | An error message that provides details about why the repository name
--   was either not found or not valid.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorMessage :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.BatchDisassociateApprovalRuleTemplateFromRepositoriesError
instance GHC.Show.Show Amazonka.CodeCommit.Types.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.BatchDisassociateApprovalRuleTemplateFromRepositoriesError
instance GHC.Read.Read Amazonka.CodeCommit.Types.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.BatchDisassociateApprovalRuleTemplateFromRepositoriesError
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.BatchDisassociateApprovalRuleTemplateFromRepositoriesError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.BatchDisassociateApprovalRuleTemplateFromRepositoriesError
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.BatchDisassociateApprovalRuleTemplateFromRepositoriesError
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.BatchDisassociateApprovalRuleTemplateFromRepositoriesError.BatchDisassociateApprovalRuleTemplateFromRepositoriesError


module Amazonka.CodeCommit.Types.BatchGetCommitsError

-- | Returns information about errors in a BatchGetCommits operation.
--   
--   <i>See:</i> <a>newBatchGetCommitsError</a> smart constructor.
data BatchGetCommitsError
BatchGetCommitsError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchGetCommitsError

-- | A commit ID that either could not be found or was not in a valid
--   format.
[$sel:commitId:BatchGetCommitsError'] :: BatchGetCommitsError -> Maybe Text

-- | An error code that specifies whether the commit ID was not valid or
--   not found.
[$sel:errorCode:BatchGetCommitsError'] :: BatchGetCommitsError -> Maybe Text

-- | An error message that provides detail about why the commit ID either
--   was not found or was not valid.
[$sel:errorMessage:BatchGetCommitsError'] :: BatchGetCommitsError -> Maybe Text

-- | Create a value of <a>BatchGetCommitsError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_commitId</a> - A commit ID that either could
--   not be found or was not in a valid format.
--   
--   <a>$sel:errorCode:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_errorCode</a> - An error code that specifies
--   whether the commit ID was not valid or not found.
--   
--   <a>$sel:errorMessage:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_errorMessage</a> - An error message that
--   provides detail about why the commit ID either was not found or was
--   not valid.
newBatchGetCommitsError :: BatchGetCommitsError

-- | A commit ID that either could not be found or was not in a valid
--   format.
batchGetCommitsError_commitId :: Lens' BatchGetCommitsError (Maybe Text)

-- | An error code that specifies whether the commit ID was not valid or
--   not found.
batchGetCommitsError_errorCode :: Lens' BatchGetCommitsError (Maybe Text)

-- | An error message that provides detail about why the commit ID either
--   was not found or was not valid.
batchGetCommitsError_errorMessage :: Lens' BatchGetCommitsError (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.BatchGetCommitsError.BatchGetCommitsError
instance GHC.Show.Show Amazonka.CodeCommit.Types.BatchGetCommitsError.BatchGetCommitsError
instance GHC.Read.Read Amazonka.CodeCommit.Types.BatchGetCommitsError.BatchGetCommitsError
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.BatchGetCommitsError.BatchGetCommitsError
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.BatchGetCommitsError.BatchGetCommitsError
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.BatchGetCommitsError.BatchGetCommitsError
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.BatchGetCommitsError.BatchGetCommitsError


module Amazonka.CodeCommit.Types.BlobMetadata

-- | Returns information about a specific Git blob object.
--   
--   <i>See:</i> <a>newBlobMetadata</a> smart constructor.
data BlobMetadata
BlobMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> BlobMetadata

-- | The path to the blob and associated file name, if any.
[$sel:path:BlobMetadata'] :: BlobMetadata -> Maybe Text

-- | The file mode permissions of the blob. File mode permission codes
--   include:
--   
--   <ul>
--   <li><tt>100644</tt> indicates read/write</li>
--   <li><tt>100755</tt> indicates read/write/execute</li>
--   <li><tt>160000</tt> indicates a submodule</li>
--   <li><tt>120000</tt> indicates a symlink</li>
--   </ul>
[$sel:mode:BlobMetadata'] :: BlobMetadata -> Maybe Text

-- | The full ID of the blob.
[$sel:blobId:BlobMetadata'] :: BlobMetadata -> Maybe Text

-- | Create a value of <a>BlobMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:BlobMetadata'</a>, <a>blobMetadata_path</a> - The path to
--   the blob and associated file name, if any.
--   
--   <a>$sel:mode:BlobMetadata'</a>, <a>blobMetadata_mode</a> - The file
--   mode permissions of the blob. File mode permission codes include:
--   
--   <ul>
--   <li><tt>100644</tt> indicates read/write</li>
--   <li><tt>100755</tt> indicates read/write/execute</li>
--   <li><tt>160000</tt> indicates a submodule</li>
--   <li><tt>120000</tt> indicates a symlink</li>
--   </ul>
--   
--   <a>$sel:blobId:BlobMetadata'</a>, <a>blobMetadata_blobId</a> - The
--   full ID of the blob.
newBlobMetadata :: BlobMetadata

-- | The path to the blob and associated file name, if any.
blobMetadata_path :: Lens' BlobMetadata (Maybe Text)

-- | The file mode permissions of the blob. File mode permission codes
--   include:
--   
--   <ul>
--   <li><tt>100644</tt> indicates read/write</li>
--   <li><tt>100755</tt> indicates read/write/execute</li>
--   <li><tt>160000</tt> indicates a submodule</li>
--   <li><tt>120000</tt> indicates a symlink</li>
--   </ul>
blobMetadata_mode :: Lens' BlobMetadata (Maybe Text)

-- | The full ID of the blob.
blobMetadata_blobId :: Lens' BlobMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.BlobMetadata.BlobMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.BlobMetadata.BlobMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.BlobMetadata.BlobMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.BlobMetadata.BlobMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.BlobMetadata.BlobMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.BlobMetadata.BlobMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.BlobMetadata.BlobMetadata


module Amazonka.CodeCommit.Types.BranchInfo

-- | Returns information about a branch.
--   
--   <i>See:</i> <a>newBranchInfo</a> smart constructor.
data BranchInfo
BranchInfo' :: Maybe Text -> Maybe Text -> BranchInfo

-- | The ID of the last commit made to the branch.
[$sel:commitId:BranchInfo'] :: BranchInfo -> Maybe Text

-- | The name of the branch.
[$sel:branchName:BranchInfo'] :: BranchInfo -> Maybe Text

-- | Create a value of <a>BranchInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:BranchInfo'</a>, <a>branchInfo_commitId</a> - The ID
--   of the last commit made to the branch.
--   
--   <a>$sel:branchName:BranchInfo'</a>, <a>branchInfo_branchName</a> - The
--   name of the branch.
newBranchInfo :: BranchInfo

-- | The ID of the last commit made to the branch.
branchInfo_commitId :: Lens' BranchInfo (Maybe Text)

-- | The name of the branch.
branchInfo_branchName :: Lens' BranchInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.BranchInfo.BranchInfo
instance GHC.Show.Show Amazonka.CodeCommit.Types.BranchInfo.BranchInfo
instance GHC.Read.Read Amazonka.CodeCommit.Types.BranchInfo.BranchInfo
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.BranchInfo.BranchInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.BranchInfo.BranchInfo
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.BranchInfo.BranchInfo
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.BranchInfo.BranchInfo


module Amazonka.CodeCommit.Types.ChangeTypeEnum
newtype ChangeTypeEnum
ChangeTypeEnum' :: Text -> ChangeTypeEnum
[fromChangeTypeEnum] :: ChangeTypeEnum -> Text
pattern ChangeTypeEnum_A :: ChangeTypeEnum
pattern ChangeTypeEnum_D :: ChangeTypeEnum
pattern ChangeTypeEnum_M :: ChangeTypeEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.ChangeTypeEnum.ChangeTypeEnum


module Amazonka.CodeCommit.Types.Comment

-- | Returns information about a specific comment.
--   
--   <i>See:</i> <a>newComment</a> smart constructor.
data Comment
Comment' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Int) -> Comment

-- | The date and time the comment was most recently modified, in timestamp
--   format.
[$sel:lastModifiedDate:Comment'] :: Comment -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the person who posted the comment.
[$sel:authorArn:Comment'] :: Comment -> Maybe Text

-- | The content of the comment.
[$sel:content:Comment'] :: Comment -> Maybe Text

-- | The emoji reactions to a comment, if any, submitted by the user whose
--   credentials are associated with the call to the API.
[$sel:callerReactions:Comment'] :: Comment -> Maybe [Text]

-- | The date and time the comment was created, in timestamp format.
[$sel:creationDate:Comment'] :: Comment -> Maybe POSIX

-- | A Boolean value indicating whether the comment has been deleted.
[$sel:deleted:Comment'] :: Comment -> Maybe Bool

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
[$sel:clientRequestToken:Comment'] :: Comment -> Maybe Text

-- | The system-generated comment ID.
[$sel:commentId:Comment'] :: Comment -> Maybe Text

-- | The ID of the comment for which this comment is a reply, if any.
[$sel:inReplyTo:Comment'] :: Comment -> Maybe Text

-- | A string to integer map that represents the number of individual users
--   who have responded to a comment with the specified reactions.
[$sel:reactionCounts:Comment'] :: Comment -> Maybe (HashMap Text Int)

-- | Create a value of <a>Comment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Comment'</a>, <a>comment_lastModifiedDate</a>
--   - The date and time the comment was most recently modified, in
--   timestamp format.
--   
--   <a>$sel:authorArn:Comment'</a>, <a>comment_authorArn</a> - The Amazon
--   Resource Name (ARN) of the person who posted the comment.
--   
--   <a>$sel:content:Comment'</a>, <a>comment_content</a> - The content of
--   the comment.
--   
--   <a>$sel:callerReactions:Comment'</a>, <a>comment_callerReactions</a> -
--   The emoji reactions to a comment, if any, submitted by the user whose
--   credentials are associated with the call to the API.
--   
--   <a>$sel:creationDate:Comment'</a>, <a>comment_creationDate</a> - The
--   date and time the comment was created, in timestamp format.
--   
--   <a>$sel:deleted:Comment'</a>, <a>comment_deleted</a> - A Boolean value
--   indicating whether the comment has been deleted.
--   
--   <a>$sel:clientRequestToken:Comment'</a>,
--   <a>comment_clientRequestToken</a> - A unique, client-generated
--   idempotency token that, when provided in a request, ensures the
--   request cannot be repeated with a changed parameter. If a request is
--   received with the same parameters and a token is included, the request
--   returns information about the initial request that used that token.
--   
--   <a>$sel:commentId:Comment'</a>, <a>comment_commentId</a> - The
--   system-generated comment ID.
--   
--   <a>$sel:inReplyTo:Comment'</a>, <a>comment_inReplyTo</a> - The ID of
--   the comment for which this comment is a reply, if any.
--   
--   <a>$sel:reactionCounts:Comment'</a>, <a>comment_reactionCounts</a> - A
--   string to integer map that represents the number of individual users
--   who have responded to a comment with the specified reactions.
newComment :: Comment

-- | The date and time the comment was most recently modified, in timestamp
--   format.
comment_lastModifiedDate :: Lens' Comment (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the person who posted the comment.
comment_authorArn :: Lens' Comment (Maybe Text)

-- | The content of the comment.
comment_content :: Lens' Comment (Maybe Text)

-- | The emoji reactions to a comment, if any, submitted by the user whose
--   credentials are associated with the call to the API.
comment_callerReactions :: Lens' Comment (Maybe [Text])

-- | The date and time the comment was created, in timestamp format.
comment_creationDate :: Lens' Comment (Maybe UTCTime)

-- | A Boolean value indicating whether the comment has been deleted.
comment_deleted :: Lens' Comment (Maybe Bool)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
comment_clientRequestToken :: Lens' Comment (Maybe Text)

-- | The system-generated comment ID.
comment_commentId :: Lens' Comment (Maybe Text)

-- | The ID of the comment for which this comment is a reply, if any.
comment_inReplyTo :: Lens' Comment (Maybe Text)

-- | A string to integer map that represents the number of individual users
--   who have responded to a comment with the specified reactions.
comment_reactionCounts :: Lens' Comment (Maybe (HashMap Text Int))
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Comment.Comment
instance GHC.Show.Show Amazonka.CodeCommit.Types.Comment.Comment
instance GHC.Read.Read Amazonka.CodeCommit.Types.Comment.Comment
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Comment.Comment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.Comment.Comment
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Comment.Comment
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Comment.Comment


module Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum
newtype ConflictDetailLevelTypeEnum
ConflictDetailLevelTypeEnum' :: Text -> ConflictDetailLevelTypeEnum
[fromConflictDetailLevelTypeEnum] :: ConflictDetailLevelTypeEnum -> Text
pattern ConflictDetailLevelTypeEnum_FILE_LEVEL :: ConflictDetailLevelTypeEnum
pattern ConflictDetailLevelTypeEnum_LINE_LEVEL :: ConflictDetailLevelTypeEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.ConflictDetailLevelTypeEnum.ConflictDetailLevelTypeEnum


module Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum
newtype ConflictResolutionStrategyTypeEnum
ConflictResolutionStrategyTypeEnum' :: Text -> ConflictResolutionStrategyTypeEnum
[fromConflictResolutionStrategyTypeEnum] :: ConflictResolutionStrategyTypeEnum -> Text
pattern ConflictResolutionStrategyTypeEnum_ACCEPT_DESTINATION :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_ACCEPT_SOURCE :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_AUTOMERGE :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_NONE :: ConflictResolutionStrategyTypeEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.ConflictResolutionStrategyTypeEnum.ConflictResolutionStrategyTypeEnum


module Amazonka.CodeCommit.Types.DeleteFileEntry

-- | A file that is deleted as part of a commit.
--   
--   <i>See:</i> <a>newDeleteFileEntry</a> smart constructor.
data DeleteFileEntry
DeleteFileEntry' :: Text -> DeleteFileEntry

-- | The full path of the file to be deleted, including the name of the
--   file.
[$sel:filePath:DeleteFileEntry'] :: DeleteFileEntry -> Text

-- | Create a value of <a>DeleteFileEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:DeleteFileEntry'</a>, <a>deleteFileEntry_filePath</a>
--   - The full path of the file to be deleted, including the name of the
--   file.
newDeleteFileEntry :: Text -> DeleteFileEntry

-- | The full path of the file to be deleted, including the name of the
--   file.
deleteFileEntry_filePath :: Lens' DeleteFileEntry Text
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.DeleteFileEntry.DeleteFileEntry
instance GHC.Show.Show Amazonka.CodeCommit.Types.DeleteFileEntry.DeleteFileEntry
instance GHC.Read.Read Amazonka.CodeCommit.Types.DeleteFileEntry.DeleteFileEntry
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.DeleteFileEntry.DeleteFileEntry
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.DeleteFileEntry.DeleteFileEntry
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.DeleteFileEntry.DeleteFileEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.DeleteFileEntry.DeleteFileEntry


module Amazonka.CodeCommit.Types.Difference

-- | Returns information about a set of differences for a commit specifier.
--   
--   <i>See:</i> <a>newDifference</a> smart constructor.
data Difference
Difference' :: Maybe BlobMetadata -> Maybe BlobMetadata -> Maybe ChangeTypeEnum -> Difference

-- | Information about an <tt>afterBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
[$sel:afterBlob:Difference'] :: Difference -> Maybe BlobMetadata

-- | Information about a <tt>beforeBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
[$sel:beforeBlob:Difference'] :: Difference -> Maybe BlobMetadata

-- | Whether the change type of the difference is an addition (A), deletion
--   (D), or modification (M).
[$sel:changeType:Difference'] :: Difference -> Maybe ChangeTypeEnum

-- | Create a value of <a>Difference</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:afterBlob:Difference'</a>, <a>difference_afterBlob</a> -
--   Information about an <tt>afterBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
--   
--   <a>$sel:beforeBlob:Difference'</a>, <a>difference_beforeBlob</a> -
--   Information about a <tt>beforeBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
--   
--   <a>$sel:changeType:Difference'</a>, <a>difference_changeType</a> -
--   Whether the change type of the difference is an addition (A), deletion
--   (D), or modification (M).
newDifference :: Difference

-- | Information about an <tt>afterBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
difference_afterBlob :: Lens' Difference (Maybe BlobMetadata)

-- | Information about a <tt>beforeBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
difference_beforeBlob :: Lens' Difference (Maybe BlobMetadata)

-- | Whether the change type of the difference is an addition (A), deletion
--   (D), or modification (M).
difference_changeType :: Lens' Difference (Maybe ChangeTypeEnum)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Difference.Difference
instance GHC.Show.Show Amazonka.CodeCommit.Types.Difference.Difference
instance GHC.Read.Read Amazonka.CodeCommit.Types.Difference.Difference
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Difference.Difference
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.Difference.Difference
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Difference.Difference
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Difference.Difference


module Amazonka.CodeCommit.Types.Evaluation

-- | Returns information about the approval rules applied to a pull request
--   and whether conditions have been met.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Bool -> Evaluation

-- | The names of the approval rules that have had their conditions met.
[$sel:approvalRulesSatisfied:Evaluation'] :: Evaluation -> Maybe [Text]

-- | The names of the approval rules that have not had their conditions
--   met.
[$sel:approvalRulesNotSatisfied:Evaluation'] :: Evaluation -> Maybe [Text]

-- | Whether the state of the pull request is approved.
[$sel:approved:Evaluation'] :: Evaluation -> Maybe Bool

-- | Whether the approval rule requirements for the pull request have been
--   overridden and no longer need to be met.
[$sel:overridden:Evaluation'] :: Evaluation -> Maybe Bool

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRulesSatisfied:Evaluation'</a>,
--   <a>evaluation_approvalRulesSatisfied</a> - The names of the approval
--   rules that have had their conditions met.
--   
--   <a>$sel:approvalRulesNotSatisfied:Evaluation'</a>,
--   <a>evaluation_approvalRulesNotSatisfied</a> - The names of the
--   approval rules that have not had their conditions met.
--   
--   <a>$sel:approved:Evaluation'</a>, <a>evaluation_approved</a> - Whether
--   the state of the pull request is approved.
--   
--   <a>$sel:overridden:Evaluation'</a>, <a>evaluation_overridden</a> -
--   Whether the approval rule requirements for the pull request have been
--   overridden and no longer need to be met.
newEvaluation :: Evaluation

-- | The names of the approval rules that have had their conditions met.
evaluation_approvalRulesSatisfied :: Lens' Evaluation (Maybe [Text])

-- | The names of the approval rules that have not had their conditions
--   met.
evaluation_approvalRulesNotSatisfied :: Lens' Evaluation (Maybe [Text])

-- | Whether the state of the pull request is approved.
evaluation_approved :: Lens' Evaluation (Maybe Bool)

-- | Whether the approval rule requirements for the pull request have been
--   overridden and no longer need to be met.
evaluation_overridden :: Lens' Evaluation (Maybe Bool)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Evaluation.Evaluation
instance GHC.Show.Show Amazonka.CodeCommit.Types.Evaluation.Evaluation
instance GHC.Read.Read Amazonka.CodeCommit.Types.Evaluation.Evaluation
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Evaluation.Evaluation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.Evaluation.Evaluation
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Evaluation.Evaluation
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Evaluation.Evaluation


module Amazonka.CodeCommit.Types.FileModeTypeEnum
newtype FileModeTypeEnum
FileModeTypeEnum' :: Text -> FileModeTypeEnum
[fromFileModeTypeEnum] :: FileModeTypeEnum -> Text
pattern FileModeTypeEnum_EXECUTABLE :: FileModeTypeEnum
pattern FileModeTypeEnum_NORMAL :: FileModeTypeEnum
pattern FileModeTypeEnum_SYMLINK :: FileModeTypeEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.FileModeTypeEnum.FileModeTypeEnum


module Amazonka.CodeCommit.Types.FileMetadata

-- | A file to be added, updated, or deleted as part of a commit.
--   
--   <i>See:</i> <a>newFileMetadata</a> smart constructor.
data FileMetadata
FileMetadata' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> FileMetadata

-- | The full path to the file to be added or updated, including the name
--   of the file.
[$sel:absolutePath:FileMetadata'] :: FileMetadata -> Maybe Text

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
[$sel:fileMode:FileMetadata'] :: FileMetadata -> Maybe FileModeTypeEnum

-- | The blob ID that contains the file information.
[$sel:blobId:FileMetadata'] :: FileMetadata -> Maybe Text

-- | Create a value of <a>FileMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:FileMetadata'</a>,
--   <a>fileMetadata_absolutePath</a> - The full path to the file to be
--   added or updated, including the name of the file.
--   
--   <a>$sel:fileMode:FileMetadata'</a>, <a>fileMetadata_fileMode</a> - The
--   extrapolated file mode permissions for the file. Valid values include
--   EXECUTABLE and NORMAL.
--   
--   <a>$sel:blobId:FileMetadata'</a>, <a>fileMetadata_blobId</a> - The
--   blob ID that contains the file information.
newFileMetadata :: FileMetadata

-- | The full path to the file to be added or updated, including the name
--   of the file.
fileMetadata_absolutePath :: Lens' FileMetadata (Maybe Text)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
fileMetadata_fileMode :: Lens' FileMetadata (Maybe FileModeTypeEnum)

-- | The blob ID that contains the file information.
fileMetadata_blobId :: Lens' FileMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.FileMetadata.FileMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.FileMetadata.FileMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.FileMetadata.FileMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.FileMetadata.FileMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.FileMetadata.FileMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.FileMetadata.FileMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.FileMetadata.FileMetadata


module Amazonka.CodeCommit.Types.File

-- | Returns information about a file in a repository.
--   
--   <i>See:</i> <a>newFile</a> smart constructor.
data File
File' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> Maybe Text -> File

-- | The fully qualified path to the file in the repository.
[$sel:absolutePath:File'] :: File -> Maybe Text

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
[$sel:fileMode:File'] :: File -> Maybe FileModeTypeEnum

-- | The blob ID that contains the file information.
[$sel:blobId:File'] :: File -> Maybe Text

-- | The relative path of the file from the folder where the query
--   originated.
[$sel:relativePath:File'] :: File -> Maybe Text

-- | Create a value of <a>File</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:File'</a>, <a>file_absolutePath</a> - The fully
--   qualified path to the file in the repository.
--   
--   <a>$sel:fileMode:File'</a>, <a>file_fileMode</a> - The extrapolated
--   file mode permissions for the file. Valid values include EXECUTABLE
--   and NORMAL.
--   
--   <a>$sel:blobId:File'</a>, <a>file_blobId</a> - The blob ID that
--   contains the file information.
--   
--   <a>$sel:relativePath:File'</a>, <a>file_relativePath</a> - The
--   relative path of the file from the folder where the query originated.
newFile :: File

-- | The fully qualified path to the file in the repository.
file_absolutePath :: Lens' File (Maybe Text)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
file_fileMode :: Lens' File (Maybe FileModeTypeEnum)

-- | The blob ID that contains the file information.
file_blobId :: Lens' File (Maybe Text)

-- | The relative path of the file from the folder where the query
--   originated.
file_relativePath :: Lens' File (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.File.File
instance GHC.Show.Show Amazonka.CodeCommit.Types.File.File
instance GHC.Read.Read Amazonka.CodeCommit.Types.File.File
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.File.File
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.File.File
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.File.File
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.File.File


module Amazonka.CodeCommit.Types.FileModes

-- | Information about file modes in a merge or pull request.
--   
--   <i>See:</i> <a>newFileModes</a> smart constructor.
data FileModes
FileModes' :: Maybe FileModeTypeEnum -> Maybe FileModeTypeEnum -> Maybe FileModeTypeEnum -> FileModes

-- | The file mode of a file in the destination of a merge or pull request.
[$sel:destination:FileModes'] :: FileModes -> Maybe FileModeTypeEnum

-- | The file mode of a file in the base of a merge or pull request.
[$sel:base:FileModes'] :: FileModes -> Maybe FileModeTypeEnum

-- | The file mode of a file in the source of a merge or pull request.
[$sel:source:FileModes'] :: FileModes -> Maybe FileModeTypeEnum

-- | Create a value of <a>FileModes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:FileModes'</a>, <a>fileModes_destination</a> - The
--   file mode of a file in the destination of a merge or pull request.
--   
--   <a>$sel:base:FileModes'</a>, <a>fileModes_base</a> - The file mode of
--   a file in the base of a merge or pull request.
--   
--   <a>$sel:source:FileModes'</a>, <a>fileModes_source</a> - The file mode
--   of a file in the source of a merge or pull request.
newFileModes :: FileModes

-- | The file mode of a file in the destination of a merge or pull request.
fileModes_destination :: Lens' FileModes (Maybe FileModeTypeEnum)

-- | The file mode of a file in the base of a merge or pull request.
fileModes_base :: Lens' FileModes (Maybe FileModeTypeEnum)

-- | The file mode of a file in the source of a merge or pull request.
fileModes_source :: Lens' FileModes (Maybe FileModeTypeEnum)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.FileModes.FileModes
instance GHC.Show.Show Amazonka.CodeCommit.Types.FileModes.FileModes
instance GHC.Read.Read Amazonka.CodeCommit.Types.FileModes.FileModes
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.FileModes.FileModes
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.FileModes.FileModes
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.FileModes.FileModes
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.FileModes.FileModes


module Amazonka.CodeCommit.Types.FileSizes

-- | Information about the size of files in a merge or pull request.
--   
--   <i>See:</i> <a>newFileSizes</a> smart constructor.
data FileSizes
FileSizes' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> FileSizes

-- | The size of a file in the destination of a merge or pull request.
[$sel:destination:FileSizes'] :: FileSizes -> Maybe Integer

-- | The size of a file in the base of a merge or pull request.
[$sel:base:FileSizes'] :: FileSizes -> Maybe Integer

-- | The size of a file in the source of a merge or pull request.
[$sel:source:FileSizes'] :: FileSizes -> Maybe Integer

-- | Create a value of <a>FileSizes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:FileSizes'</a>, <a>fileSizes_destination</a> - The
--   size of a file in the destination of a merge or pull request.
--   
--   <a>$sel:base:FileSizes'</a>, <a>fileSizes_base</a> - The size of a
--   file in the base of a merge or pull request.
--   
--   <a>$sel:source:FileSizes'</a>, <a>fileSizes_source</a> - The size of a
--   file in the source of a merge or pull request.
newFileSizes :: FileSizes

-- | The size of a file in the destination of a merge or pull request.
fileSizes_destination :: Lens' FileSizes (Maybe Integer)

-- | The size of a file in the base of a merge or pull request.
fileSizes_base :: Lens' FileSizes (Maybe Integer)

-- | The size of a file in the source of a merge or pull request.
fileSizes_source :: Lens' FileSizes (Maybe Integer)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.FileSizes.FileSizes
instance GHC.Show.Show Amazonka.CodeCommit.Types.FileSizes.FileSizes
instance GHC.Read.Read Amazonka.CodeCommit.Types.FileSizes.FileSizes
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.FileSizes.FileSizes
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.FileSizes.FileSizes
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.FileSizes.FileSizes
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.FileSizes.FileSizes


module Amazonka.CodeCommit.Types.Folder

-- | Returns information about a folder in a repository.
--   
--   <i>See:</i> <a>newFolder</a> smart constructor.
data Folder
Folder' :: Maybe Text -> Maybe Text -> Maybe Text -> Folder

-- | The fully qualified path of the folder in the repository.
[$sel:absolutePath:Folder'] :: Folder -> Maybe Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
[$sel:treeId:Folder'] :: Folder -> Maybe Text

-- | The relative path of the specified folder from the folder where the
--   query originated.
[$sel:relativePath:Folder'] :: Folder -> Maybe Text

-- | Create a value of <a>Folder</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:Folder'</a>, <a>folder_absolutePath</a> - The
--   fully qualified path of the folder in the repository.
--   
--   <a>$sel:treeId:Folder'</a>, <a>folder_treeId</a> - The full SHA-1
--   pointer of the tree information for the commit that contains the
--   folder.
--   
--   <a>$sel:relativePath:Folder'</a>, <a>folder_relativePath</a> - The
--   relative path of the specified folder from the folder where the query
--   originated.
newFolder :: Folder

-- | The fully qualified path of the folder in the repository.
folder_absolutePath :: Lens' Folder (Maybe Text)

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
folder_treeId :: Lens' Folder (Maybe Text)

-- | The relative path of the specified folder from the folder where the
--   query originated.
folder_relativePath :: Lens' Folder (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Folder.Folder
instance GHC.Show.Show Amazonka.CodeCommit.Types.Folder.Folder
instance GHC.Read.Read Amazonka.CodeCommit.Types.Folder.Folder
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Folder.Folder
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.Folder.Folder
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Folder.Folder
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Folder.Folder


module Amazonka.CodeCommit.Types.IsBinaryFile

-- | Information about whether a file is binary or textual in a merge or
--   pull request operation.
--   
--   <i>See:</i> <a>newIsBinaryFile</a> smart constructor.
data IsBinaryFile
IsBinaryFile' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> IsBinaryFile

-- | The binary or non-binary status of a file in the destination of a
--   merge or pull request.
[$sel:destination:IsBinaryFile'] :: IsBinaryFile -> Maybe Bool

-- | The binary or non-binary status of a file in the base of a merge or
--   pull request.
[$sel:base:IsBinaryFile'] :: IsBinaryFile -> Maybe Bool

-- | The binary or non-binary status of file in the source of a merge or
--   pull request.
[$sel:source:IsBinaryFile'] :: IsBinaryFile -> Maybe Bool

-- | Create a value of <a>IsBinaryFile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:IsBinaryFile'</a>, <a>isBinaryFile_destination</a>
--   - The binary or non-binary status of a file in the destination of a
--   merge or pull request.
--   
--   <a>$sel:base:IsBinaryFile'</a>, <a>isBinaryFile_base</a> - The binary
--   or non-binary status of a file in the base of a merge or pull request.
--   
--   <a>$sel:source:IsBinaryFile'</a>, <a>isBinaryFile_source</a> - The
--   binary or non-binary status of file in the source of a merge or pull
--   request.
newIsBinaryFile :: IsBinaryFile

-- | The binary or non-binary status of a file in the destination of a
--   merge or pull request.
isBinaryFile_destination :: Lens' IsBinaryFile (Maybe Bool)

-- | The binary or non-binary status of a file in the base of a merge or
--   pull request.
isBinaryFile_base :: Lens' IsBinaryFile (Maybe Bool)

-- | The binary or non-binary status of file in the source of a merge or
--   pull request.
isBinaryFile_source :: Lens' IsBinaryFile (Maybe Bool)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.IsBinaryFile.IsBinaryFile
instance GHC.Show.Show Amazonka.CodeCommit.Types.IsBinaryFile.IsBinaryFile
instance GHC.Read.Read Amazonka.CodeCommit.Types.IsBinaryFile.IsBinaryFile
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.IsBinaryFile.IsBinaryFile
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.IsBinaryFile.IsBinaryFile
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.IsBinaryFile.IsBinaryFile
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.IsBinaryFile.IsBinaryFile


module Amazonka.CodeCommit.Types.MergeHunkDetail

-- | Information about the details of a merge hunk that contains a conflict
--   in a merge or pull request operation.
--   
--   <i>See:</i> <a>newMergeHunkDetail</a> smart constructor.
data MergeHunkDetail
MergeHunkDetail' :: Maybe Int -> Maybe Int -> Maybe Text -> MergeHunkDetail

-- | The start position of the hunk in the merge result.
[$sel:startLine:MergeHunkDetail'] :: MergeHunkDetail -> Maybe Int

-- | The end position of the hunk in the merge result.
[$sel:endLine:MergeHunkDetail'] :: MergeHunkDetail -> Maybe Int

-- | The base-64 encoded content of the hunk merged region that might
--   contain a conflict.
[$sel:hunkContent:MergeHunkDetail'] :: MergeHunkDetail -> Maybe Text

-- | Create a value of <a>MergeHunkDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startLine:MergeHunkDetail'</a>,
--   <a>mergeHunkDetail_startLine</a> - The start position of the hunk in
--   the merge result.
--   
--   <a>$sel:endLine:MergeHunkDetail'</a>, <a>mergeHunkDetail_endLine</a> -
--   The end position of the hunk in the merge result.
--   
--   <a>$sel:hunkContent:MergeHunkDetail'</a>,
--   <a>mergeHunkDetail_hunkContent</a> - The base-64 encoded content of
--   the hunk merged region that might contain a conflict.
newMergeHunkDetail :: MergeHunkDetail

-- | The start position of the hunk in the merge result.
mergeHunkDetail_startLine :: Lens' MergeHunkDetail (Maybe Int)

-- | The end position of the hunk in the merge result.
mergeHunkDetail_endLine :: Lens' MergeHunkDetail (Maybe Int)

-- | The base-64 encoded content of the hunk merged region that might
--   contain a conflict.
mergeHunkDetail_hunkContent :: Lens' MergeHunkDetail (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.MergeHunkDetail.MergeHunkDetail
instance GHC.Show.Show Amazonka.CodeCommit.Types.MergeHunkDetail.MergeHunkDetail
instance GHC.Read.Read Amazonka.CodeCommit.Types.MergeHunkDetail.MergeHunkDetail
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.MergeHunkDetail.MergeHunkDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.MergeHunkDetail.MergeHunkDetail
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.MergeHunkDetail.MergeHunkDetail
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.MergeHunkDetail.MergeHunkDetail


module Amazonka.CodeCommit.Types.MergeHunk

-- | Information about merge hunks in a merge or pull request operation.
--   
--   <i>See:</i> <a>newMergeHunk</a> smart constructor.
data MergeHunk
MergeHunk' :: Maybe MergeHunkDetail -> Maybe MergeHunkDetail -> Maybe Bool -> Maybe MergeHunkDetail -> MergeHunk

-- | Information about the merge hunk in the destination of a merge or pull
--   request.
[$sel:destination:MergeHunk'] :: MergeHunk -> Maybe MergeHunkDetail

-- | Information about the merge hunk in the base of a merge or pull
--   request.
[$sel:base:MergeHunk'] :: MergeHunk -> Maybe MergeHunkDetail

-- | A Boolean value indicating whether a combination of hunks contains a
--   conflict. Conflicts occur when the same file or the same lines in a
--   file were modified in both the source and destination of a merge or
--   pull request. Valid values include true, false, and null. True when
--   the hunk represents a conflict and one or more files contains a line
--   conflict. File mode conflicts in a merge do not set this to true.
[$sel:isConflict:MergeHunk'] :: MergeHunk -> Maybe Bool

-- | Information about the merge hunk in the source of a merge or pull
--   request.
[$sel:source:MergeHunk'] :: MergeHunk -> Maybe MergeHunkDetail

-- | Create a value of <a>MergeHunk</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:MergeHunk'</a>, <a>mergeHunk_destination</a> -
--   Information about the merge hunk in the destination of a merge or pull
--   request.
--   
--   <a>$sel:base:MergeHunk'</a>, <a>mergeHunk_base</a> - Information about
--   the merge hunk in the base of a merge or pull request.
--   
--   <a>$sel:isConflict:MergeHunk'</a>, <a>mergeHunk_isConflict</a> - A
--   Boolean value indicating whether a combination of hunks contains a
--   conflict. Conflicts occur when the same file or the same lines in a
--   file were modified in both the source and destination of a merge or
--   pull request. Valid values include true, false, and null. True when
--   the hunk represents a conflict and one or more files contains a line
--   conflict. File mode conflicts in a merge do not set this to true.
--   
--   <a>$sel:source:MergeHunk'</a>, <a>mergeHunk_source</a> - Information
--   about the merge hunk in the source of a merge or pull request.
newMergeHunk :: MergeHunk

-- | Information about the merge hunk in the destination of a merge or pull
--   request.
mergeHunk_destination :: Lens' MergeHunk (Maybe MergeHunkDetail)

-- | Information about the merge hunk in the base of a merge or pull
--   request.
mergeHunk_base :: Lens' MergeHunk (Maybe MergeHunkDetail)

-- | A Boolean value indicating whether a combination of hunks contains a
--   conflict. Conflicts occur when the same file or the same lines in a
--   file were modified in both the source and destination of a merge or
--   pull request. Valid values include true, false, and null. True when
--   the hunk represents a conflict and one or more files contains a line
--   conflict. File mode conflicts in a merge do not set this to true.
mergeHunk_isConflict :: Lens' MergeHunk (Maybe Bool)

-- | Information about the merge hunk in the source of a merge or pull
--   request.
mergeHunk_source :: Lens' MergeHunk (Maybe MergeHunkDetail)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.MergeHunk.MergeHunk
instance GHC.Show.Show Amazonka.CodeCommit.Types.MergeHunk.MergeHunk
instance GHC.Read.Read Amazonka.CodeCommit.Types.MergeHunk.MergeHunk
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.MergeHunk.MergeHunk
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.MergeHunk.MergeHunk
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.MergeHunk.MergeHunk
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.MergeHunk.MergeHunk


module Amazonka.CodeCommit.Types.MergeOperations

-- | Information about the file operation conflicts in a merge operation.
--   
--   <i>See:</i> <a>newMergeOperations</a> smart constructor.
data MergeOperations
MergeOperations' :: Maybe ChangeTypeEnum -> Maybe ChangeTypeEnum -> MergeOperations

-- | The operation on a file in the destination of a merge or pull request.
[$sel:destination:MergeOperations'] :: MergeOperations -> Maybe ChangeTypeEnum

-- | The operation (add, modify, or delete) on a file in the source of a
--   merge or pull request.
[$sel:source:MergeOperations'] :: MergeOperations -> Maybe ChangeTypeEnum

-- | Create a value of <a>MergeOperations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:MergeOperations'</a>,
--   <a>mergeOperations_destination</a> - The operation on a file in the
--   destination of a merge or pull request.
--   
--   <a>$sel:source:MergeOperations'</a>, <a>mergeOperations_source</a> -
--   The operation (add, modify, or delete) on a file in the source of a
--   merge or pull request.
newMergeOperations :: MergeOperations

-- | The operation on a file in the destination of a merge or pull request.
mergeOperations_destination :: Lens' MergeOperations (Maybe ChangeTypeEnum)

-- | The operation (add, modify, or delete) on a file in the source of a
--   merge or pull request.
mergeOperations_source :: Lens' MergeOperations (Maybe ChangeTypeEnum)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.MergeOperations.MergeOperations
instance GHC.Show.Show Amazonka.CodeCommit.Types.MergeOperations.MergeOperations
instance GHC.Read.Read Amazonka.CodeCommit.Types.MergeOperations.MergeOperations
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.MergeOperations.MergeOperations
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.MergeOperations.MergeOperations
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.MergeOperations.MergeOperations
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.MergeOperations.MergeOperations


module Amazonka.CodeCommit.Types.MergeOptionTypeEnum
newtype MergeOptionTypeEnum
MergeOptionTypeEnum' :: Text -> MergeOptionTypeEnum
[fromMergeOptionTypeEnum] :: MergeOptionTypeEnum -> Text
pattern MergeOptionTypeEnum_FAST_FORWARD_MERGE :: MergeOptionTypeEnum
pattern MergeOptionTypeEnum_SQUASH_MERGE :: MergeOptionTypeEnum
pattern MergeOptionTypeEnum_THREE_WAY_MERGE :: MergeOptionTypeEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.MergeOptionTypeEnum.MergeOptionTypeEnum


module Amazonka.CodeCommit.Types.MergeMetadata

-- | Returns information about a merge or potential merge between a source
--   reference and a destination reference in a pull request.
--   
--   <i>See:</i> <a>newMergeMetadata</a> smart constructor.
data MergeMetadata
MergeMetadata' :: Maybe Text -> Maybe MergeOptionTypeEnum -> Maybe Bool -> Maybe Text -> MergeMetadata

-- | The Amazon Resource Name (ARN) of the user who merged the branches.
[$sel:mergedBy:MergeMetadata'] :: MergeMetadata -> Maybe Text

-- | The merge strategy used in the merge.
[$sel:mergeOption:MergeMetadata'] :: MergeMetadata -> Maybe MergeOptionTypeEnum

-- | A Boolean value indicating whether the merge has been made.
[$sel:isMerged:MergeMetadata'] :: MergeMetadata -> Maybe Bool

-- | The commit ID for the merge commit, if any.
[$sel:mergeCommitId:MergeMetadata'] :: MergeMetadata -> Maybe Text

-- | Create a value of <a>MergeMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mergedBy:MergeMetadata'</a>, <a>mergeMetadata_mergedBy</a> -
--   The Amazon Resource Name (ARN) of the user who merged the branches.
--   
--   <a>$sel:mergeOption:MergeMetadata'</a>,
--   <a>mergeMetadata_mergeOption</a> - The merge strategy used in the
--   merge.
--   
--   <a>$sel:isMerged:MergeMetadata'</a>, <a>mergeMetadata_isMerged</a> - A
--   Boolean value indicating whether the merge has been made.
--   
--   <a>$sel:mergeCommitId:MergeMetadata'</a>,
--   <a>mergeMetadata_mergeCommitId</a> - The commit ID for the merge
--   commit, if any.
newMergeMetadata :: MergeMetadata

-- | The Amazon Resource Name (ARN) of the user who merged the branches.
mergeMetadata_mergedBy :: Lens' MergeMetadata (Maybe Text)

-- | The merge strategy used in the merge.
mergeMetadata_mergeOption :: Lens' MergeMetadata (Maybe MergeOptionTypeEnum)

-- | A Boolean value indicating whether the merge has been made.
mergeMetadata_isMerged :: Lens' MergeMetadata (Maybe Bool)

-- | The commit ID for the merge commit, if any.
mergeMetadata_mergeCommitId :: Lens' MergeMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.MergeMetadata.MergeMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.MergeMetadata.MergeMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.MergeMetadata.MergeMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.MergeMetadata.MergeMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.MergeMetadata.MergeMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.MergeMetadata.MergeMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.MergeMetadata.MergeMetadata


module Amazonka.CodeCommit.Types.ObjectTypeEnum
newtype ObjectTypeEnum
ObjectTypeEnum' :: Text -> ObjectTypeEnum
[fromObjectTypeEnum] :: ObjectTypeEnum -> Text
pattern ObjectTypeEnum_DIRECTORY :: ObjectTypeEnum
pattern ObjectTypeEnum_FILE :: ObjectTypeEnum
pattern ObjectTypeEnum_GIT_LINK :: ObjectTypeEnum
pattern ObjectTypeEnum_SYMBOLIC_LINK :: ObjectTypeEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.ObjectTypeEnum.ObjectTypeEnum


module Amazonka.CodeCommit.Types.ObjectTypes

-- | Information about the type of an object in a merge operation.
--   
--   <i>See:</i> <a>newObjectTypes</a> smart constructor.
data ObjectTypes
ObjectTypes' :: Maybe ObjectTypeEnum -> Maybe ObjectTypeEnum -> Maybe ObjectTypeEnum -> ObjectTypes

-- | The type of the object in the destination branch.
[$sel:destination:ObjectTypes'] :: ObjectTypes -> Maybe ObjectTypeEnum

-- | The type of the object in the base commit of the merge.
[$sel:base:ObjectTypes'] :: ObjectTypes -> Maybe ObjectTypeEnum

-- | The type of the object in the source branch.
[$sel:source:ObjectTypes'] :: ObjectTypes -> Maybe ObjectTypeEnum

-- | Create a value of <a>ObjectTypes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:ObjectTypes'</a>, <a>objectTypes_destination</a> -
--   The type of the object in the destination branch.
--   
--   <a>$sel:base:ObjectTypes'</a>, <a>objectTypes_base</a> - The type of
--   the object in the base commit of the merge.
--   
--   <a>$sel:source:ObjectTypes'</a>, <a>objectTypes_source</a> - The type
--   of the object in the source branch.
newObjectTypes :: ObjectTypes

-- | The type of the object in the destination branch.
objectTypes_destination :: Lens' ObjectTypes (Maybe ObjectTypeEnum)

-- | The type of the object in the base commit of the merge.
objectTypes_base :: Lens' ObjectTypes (Maybe ObjectTypeEnum)

-- | The type of the object in the source branch.
objectTypes_source :: Lens' ObjectTypes (Maybe ObjectTypeEnum)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ObjectTypes.ObjectTypes
instance GHC.Show.Show Amazonka.CodeCommit.Types.ObjectTypes.ObjectTypes
instance GHC.Read.Read Amazonka.CodeCommit.Types.ObjectTypes.ObjectTypes
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ObjectTypes.ObjectTypes
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ObjectTypes.ObjectTypes
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ObjectTypes.ObjectTypes
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ObjectTypes.ObjectTypes


module Amazonka.CodeCommit.Types.ConflictMetadata

-- | Information about the metadata for a conflict in a merge operation.
--   
--   <i>See:</i> <a>newConflictMetadata</a> smart constructor.
data ConflictMetadata
ConflictMetadata' :: Maybe Int -> Maybe Bool -> Maybe FileSizes -> Maybe Text -> Maybe IsBinaryFile -> Maybe Bool -> Maybe Bool -> Maybe MergeOperations -> Maybe ObjectTypes -> Maybe FileModes -> ConflictMetadata

-- | The number of conflicts, including both hunk conflicts and metadata
--   conflicts.
[$sel:numberOfConflicts:ConflictMetadata'] :: ConflictMetadata -> Maybe Int

-- | A boolean value indicating whether there are conflicts in the content
--   of a file.
[$sel:contentConflict:ConflictMetadata'] :: ConflictMetadata -> Maybe Bool

-- | The file sizes of the file in the source, destination, and base of the
--   merge.
[$sel:fileSizes:ConflictMetadata'] :: ConflictMetadata -> Maybe FileSizes

-- | The path of the file that contains conflicts.
[$sel:filePath:ConflictMetadata'] :: ConflictMetadata -> Maybe Text

-- | A boolean value (true or false) indicating whether the file is binary
--   or textual in the source, destination, and base of the merge.
[$sel:isBinaryFile:ConflictMetadata'] :: ConflictMetadata -> Maybe IsBinaryFile

-- | A boolean value indicating whether there are conflicts in the file
--   mode of a file.
[$sel:fileModeConflict:ConflictMetadata'] :: ConflictMetadata -> Maybe Bool

-- | A boolean value (true or false) indicating whether there are conflicts
--   between the branches in the object type of a file, folder, or
--   submodule.
[$sel:objectTypeConflict:ConflictMetadata'] :: ConflictMetadata -> Maybe Bool

-- | Whether an add, modify, or delete operation caused the conflict
--   between the source and destination of the merge.
[$sel:mergeOperations:ConflictMetadata'] :: ConflictMetadata -> Maybe MergeOperations

-- | Information about any object type conflicts in a merge operation.
[$sel:objectTypes:ConflictMetadata'] :: ConflictMetadata -> Maybe ObjectTypes

-- | The file modes of the file in the source, destination, and base of the
--   merge.
[$sel:fileModes:ConflictMetadata'] :: ConflictMetadata -> Maybe FileModes

-- | Create a value of <a>ConflictMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConflicts:ConflictMetadata'</a>,
--   <a>conflictMetadata_numberOfConflicts</a> - The number of conflicts,
--   including both hunk conflicts and metadata conflicts.
--   
--   <a>$sel:contentConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_contentConflict</a> - A boolean value indicating
--   whether there are conflicts in the content of a file.
--   
--   <a>$sel:fileSizes:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileSizes</a> - The file sizes of the file in the
--   source, destination, and base of the merge.
--   
--   <a>$sel:filePath:ConflictMetadata'</a>,
--   <a>conflictMetadata_filePath</a> - The path of the file that contains
--   conflicts.
--   
--   <a>$sel:isBinaryFile:ConflictMetadata'</a>,
--   <a>conflictMetadata_isBinaryFile</a> - A boolean value (true or false)
--   indicating whether the file is binary or textual in the source,
--   destination, and base of the merge.
--   
--   <a>$sel:fileModeConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileModeConflict</a> - A boolean value indicating
--   whether there are conflicts in the file mode of a file.
--   
--   <a>$sel:objectTypeConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_objectTypeConflict</a> - A boolean value (true or
--   false) indicating whether there are conflicts between the branches in
--   the object type of a file, folder, or submodule.
--   
--   <a>$sel:mergeOperations:ConflictMetadata'</a>,
--   <a>conflictMetadata_mergeOperations</a> - Whether an add, modify, or
--   delete operation caused the conflict between the source and
--   destination of the merge.
--   
--   <a>$sel:objectTypes:ConflictMetadata'</a>,
--   <a>conflictMetadata_objectTypes</a> - Information about any object
--   type conflicts in a merge operation.
--   
--   <a>$sel:fileModes:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileModes</a> - The file modes of the file in the
--   source, destination, and base of the merge.
newConflictMetadata :: ConflictMetadata

-- | The number of conflicts, including both hunk conflicts and metadata
--   conflicts.
conflictMetadata_numberOfConflicts :: Lens' ConflictMetadata (Maybe Int)

-- | A boolean value indicating whether there are conflicts in the content
--   of a file.
conflictMetadata_contentConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | The file sizes of the file in the source, destination, and base of the
--   merge.
conflictMetadata_fileSizes :: Lens' ConflictMetadata (Maybe FileSizes)

-- | The path of the file that contains conflicts.
conflictMetadata_filePath :: Lens' ConflictMetadata (Maybe Text)

-- | A boolean value (true or false) indicating whether the file is binary
--   or textual in the source, destination, and base of the merge.
conflictMetadata_isBinaryFile :: Lens' ConflictMetadata (Maybe IsBinaryFile)

-- | A boolean value indicating whether there are conflicts in the file
--   mode of a file.
conflictMetadata_fileModeConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | A boolean value (true or false) indicating whether there are conflicts
--   between the branches in the object type of a file, folder, or
--   submodule.
conflictMetadata_objectTypeConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | Whether an add, modify, or delete operation caused the conflict
--   between the source and destination of the merge.
conflictMetadata_mergeOperations :: Lens' ConflictMetadata (Maybe MergeOperations)

-- | Information about any object type conflicts in a merge operation.
conflictMetadata_objectTypes :: Lens' ConflictMetadata (Maybe ObjectTypes)

-- | The file modes of the file in the source, destination, and base of the
--   merge.
conflictMetadata_fileModes :: Lens' ConflictMetadata (Maybe FileModes)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ConflictMetadata.ConflictMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.ConflictMetadata.ConflictMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.ConflictMetadata.ConflictMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ConflictMetadata.ConflictMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ConflictMetadata.ConflictMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ConflictMetadata.ConflictMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ConflictMetadata.ConflictMetadata


module Amazonka.CodeCommit.Types.Conflict

-- | Information about conflicts in a merge operation.
--   
--   <i>See:</i> <a>newConflict</a> smart constructor.
data Conflict
Conflict' :: Maybe [MergeHunk] -> Maybe ConflictMetadata -> Conflict

-- | A list of hunks that contain the differences between files or lines
--   causing the conflict.
[$sel:mergeHunks:Conflict'] :: Conflict -> Maybe [MergeHunk]

-- | Metadata about a conflict in a merge operation.
[$sel:conflictMetadata:Conflict'] :: Conflict -> Maybe ConflictMetadata

-- | Create a value of <a>Conflict</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mergeHunks:Conflict'</a>, <a>conflict_mergeHunks</a> - A list
--   of hunks that contain the differences between files or lines causing
--   the conflict.
--   
--   <a>$sel:conflictMetadata:Conflict'</a>,
--   <a>conflict_conflictMetadata</a> - Metadata about a conflict in a
--   merge operation.
newConflict :: Conflict

-- | A list of hunks that contain the differences between files or lines
--   causing the conflict.
conflict_mergeHunks :: Lens' Conflict (Maybe [MergeHunk])

-- | Metadata about a conflict in a merge operation.
conflict_conflictMetadata :: Lens' Conflict (Maybe ConflictMetadata)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Conflict.Conflict
instance GHC.Show.Show Amazonka.CodeCommit.Types.Conflict.Conflict
instance GHC.Read.Read Amazonka.CodeCommit.Types.Conflict.Conflict
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Conflict.Conflict
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.Conflict.Conflict
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Conflict.Conflict
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Conflict.Conflict


module Amazonka.CodeCommit.Types.OrderEnum
newtype OrderEnum
OrderEnum' :: Text -> OrderEnum
[fromOrderEnum] :: OrderEnum -> Text
pattern OrderEnum_Ascending :: OrderEnum
pattern OrderEnum_Descending :: OrderEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.OrderEnum.OrderEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.OrderEnum.OrderEnum


module Amazonka.CodeCommit.Types.OriginApprovalRuleTemplate

-- | Returns information about the template that created the approval rule
--   for a pull request.
--   
--   <i>See:</i> <a>newOriginApprovalRuleTemplate</a> smart constructor.
data OriginApprovalRuleTemplate
OriginApprovalRuleTemplate' :: Maybe Text -> Maybe Text -> OriginApprovalRuleTemplate

-- | The ID of the template that created the approval rule.
[$sel:approvalRuleTemplateId:OriginApprovalRuleTemplate'] :: OriginApprovalRuleTemplate -> Maybe Text

-- | The name of the template that created the approval rule.
[$sel:approvalRuleTemplateName:OriginApprovalRuleTemplate'] :: OriginApprovalRuleTemplate -> Maybe Text

-- | Create a value of <a>OriginApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleTemplateId:OriginApprovalRuleTemplate'</a>,
--   <a>originApprovalRuleTemplate_approvalRuleTemplateId</a> - The ID of
--   the template that created the approval rule.
--   
--   <a>$sel:approvalRuleTemplateName:OriginApprovalRuleTemplate'</a>,
--   <a>originApprovalRuleTemplate_approvalRuleTemplateName</a> - The name
--   of the template that created the approval rule.
newOriginApprovalRuleTemplate :: OriginApprovalRuleTemplate

-- | The ID of the template that created the approval rule.
originApprovalRuleTemplate_approvalRuleTemplateId :: Lens' OriginApprovalRuleTemplate (Maybe Text)

-- | The name of the template that created the approval rule.
originApprovalRuleTemplate_approvalRuleTemplateName :: Lens' OriginApprovalRuleTemplate (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.OriginApprovalRuleTemplate.OriginApprovalRuleTemplate
instance GHC.Show.Show Amazonka.CodeCommit.Types.OriginApprovalRuleTemplate.OriginApprovalRuleTemplate
instance GHC.Read.Read Amazonka.CodeCommit.Types.OriginApprovalRuleTemplate.OriginApprovalRuleTemplate
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.OriginApprovalRuleTemplate.OriginApprovalRuleTemplate
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.OriginApprovalRuleTemplate.OriginApprovalRuleTemplate
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.OriginApprovalRuleTemplate.OriginApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.OriginApprovalRuleTemplate.OriginApprovalRuleTemplate


module Amazonka.CodeCommit.Types.ApprovalRule

-- | Returns information about an approval rule.
--   
--   <i>See:</i> <a>newApprovalRule</a> smart constructor.
data ApprovalRule
ApprovalRule' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe OriginApprovalRuleTemplate -> Maybe POSIX -> Maybe Text -> ApprovalRule

-- | The SHA-256 hash signature for the content of the approval rule.
[$sel:ruleContentSha256:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | The date the approval rule was most recently changed, in timestamp
--   format.
[$sel:lastModifiedDate:ApprovalRule'] :: ApprovalRule -> Maybe POSIX

-- | The name of the approval rule.
[$sel:approvalRuleName:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | The system-generated ID of the approval rule.
[$sel:approvalRuleId:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule.
[$sel:lastModifiedUser:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | The approval rule template used to create the rule.
[$sel:originApprovalRuleTemplate:ApprovalRule'] :: ApprovalRule -> Maybe OriginApprovalRuleTemplate

-- | The date the approval rule was created, in timestamp format.
[$sel:creationDate:ApprovalRule'] :: ApprovalRule -> Maybe POSIX

-- | The content of the approval rule.
[$sel:approvalRuleContent:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | Create a value of <a>ApprovalRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleContentSha256:ApprovalRule'</a>,
--   <a>approvalRule_ruleContentSha256</a> - The SHA-256 hash signature for
--   the content of the approval rule.
--   
--   <a>$sel:lastModifiedDate:ApprovalRule'</a>,
--   <a>approvalRule_lastModifiedDate</a> - The date the approval rule was
--   most recently changed, in timestamp format.
--   
--   <a>$sel:approvalRuleName:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleName</a> - The name of the approval rule.
--   
--   <a>$sel:approvalRuleId:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleId</a> - The system-generated ID of the
--   approval rule.
--   
--   <a>$sel:lastModifiedUser:ApprovalRule'</a>,
--   <a>approvalRule_lastModifiedUser</a> - The Amazon Resource Name (ARN)
--   of the user who made the most recent changes to the approval rule.
--   
--   <a>$sel:originApprovalRuleTemplate:ApprovalRule'</a>,
--   <a>approvalRule_originApprovalRuleTemplate</a> - The approval rule
--   template used to create the rule.
--   
--   <a>$sel:creationDate:ApprovalRule'</a>,
--   <a>approvalRule_creationDate</a> - The date the approval rule was
--   created, in timestamp format.
--   
--   <a>$sel:approvalRuleContent:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleContent</a> - The content of the approval
--   rule.
newApprovalRule :: ApprovalRule

-- | The SHA-256 hash signature for the content of the approval rule.
approvalRule_ruleContentSha256 :: Lens' ApprovalRule (Maybe Text)

-- | The date the approval rule was most recently changed, in timestamp
--   format.
approvalRule_lastModifiedDate :: Lens' ApprovalRule (Maybe UTCTime)

-- | The name of the approval rule.
approvalRule_approvalRuleName :: Lens' ApprovalRule (Maybe Text)

-- | The system-generated ID of the approval rule.
approvalRule_approvalRuleId :: Lens' ApprovalRule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule.
approvalRule_lastModifiedUser :: Lens' ApprovalRule (Maybe Text)

-- | The approval rule template used to create the rule.
approvalRule_originApprovalRuleTemplate :: Lens' ApprovalRule (Maybe OriginApprovalRuleTemplate)

-- | The date the approval rule was created, in timestamp format.
approvalRule_creationDate :: Lens' ApprovalRule (Maybe UTCTime)

-- | The content of the approval rule.
approvalRule_approvalRuleContent :: Lens' ApprovalRule (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ApprovalRule.ApprovalRule
instance GHC.Show.Show Amazonka.CodeCommit.Types.ApprovalRule.ApprovalRule
instance GHC.Read.Read Amazonka.CodeCommit.Types.ApprovalRule.ApprovalRule
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ApprovalRule.ApprovalRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ApprovalRule.ApprovalRule
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ApprovalRule.ApprovalRule
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ApprovalRule.ApprovalRule


module Amazonka.CodeCommit.Types.OverrideStatus
newtype OverrideStatus
OverrideStatus' :: Text -> OverrideStatus
[fromOverrideStatus] :: OverrideStatus -> Text
pattern OverrideStatus_OVERRIDE :: OverrideStatus
pattern OverrideStatus_REVOKE :: OverrideStatus
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance GHC.Read.Read Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus
instance GHC.Show.Show Amazonka.CodeCommit.Types.OverrideStatus.OverrideStatus


module Amazonka.CodeCommit.Types.ApprovalRuleOverriddenEventMetadata

-- | Returns information about an override event for approval rules for a
--   pull request.
--   
--   <i>See:</i> <a>newApprovalRuleOverriddenEventMetadata</a> smart
--   constructor.
data ApprovalRuleOverriddenEventMetadata
ApprovalRuleOverriddenEventMetadata' :: Maybe OverrideStatus -> Maybe Text -> ApprovalRuleOverriddenEventMetadata

-- | The status of the override event.
[$sel:overrideStatus:ApprovalRuleOverriddenEventMetadata'] :: ApprovalRuleOverriddenEventMetadata -> Maybe OverrideStatus

-- | The revision ID of the pull request when the override event occurred.
[$sel:revisionId:ApprovalRuleOverriddenEventMetadata'] :: ApprovalRuleOverriddenEventMetadata -> Maybe Text

-- | Create a value of <a>ApprovalRuleOverriddenEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overrideStatus:ApprovalRuleOverriddenEventMetadata'</a>,
--   <a>approvalRuleOverriddenEventMetadata_overrideStatus</a> - The status
--   of the override event.
--   
--   <a>$sel:revisionId:ApprovalRuleOverriddenEventMetadata'</a>,
--   <a>approvalRuleOverriddenEventMetadata_revisionId</a> - The revision
--   ID of the pull request when the override event occurred.
newApprovalRuleOverriddenEventMetadata :: ApprovalRuleOverriddenEventMetadata

-- | The status of the override event.
approvalRuleOverriddenEventMetadata_overrideStatus :: Lens' ApprovalRuleOverriddenEventMetadata (Maybe OverrideStatus)

-- | The revision ID of the pull request when the override event occurred.
approvalRuleOverriddenEventMetadata_revisionId :: Lens' ApprovalRuleOverriddenEventMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ApprovalRuleOverriddenEventMetadata.ApprovalRuleOverriddenEventMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.ApprovalRuleOverriddenEventMetadata.ApprovalRuleOverriddenEventMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.ApprovalRuleOverriddenEventMetadata.ApprovalRuleOverriddenEventMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ApprovalRuleOverriddenEventMetadata.ApprovalRuleOverriddenEventMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ApprovalRuleOverriddenEventMetadata.ApprovalRuleOverriddenEventMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ApprovalRuleOverriddenEventMetadata.ApprovalRuleOverriddenEventMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ApprovalRuleOverriddenEventMetadata.ApprovalRuleOverriddenEventMetadata


module Amazonka.CodeCommit.Types.PullRequestCreatedEventMetadata

-- | Metadata about the pull request that is used when comparing the pull
--   request source with its destination.
--   
--   <i>See:</i> <a>newPullRequestCreatedEventMetadata</a> smart
--   constructor.
data PullRequestCreatedEventMetadata
PullRequestCreatedEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestCreatedEventMetadata

-- | The commit ID of the tip of the branch specified as the destination
--   branch when the pull request was created.
[$sel:destinationCommitId:PullRequestCreatedEventMetadata'] :: PullRequestCreatedEventMetadata -> Maybe Text

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
[$sel:mergeBase:PullRequestCreatedEventMetadata'] :: PullRequestCreatedEventMetadata -> Maybe Text

-- | The name of the repository where the pull request was created.
[$sel:repositoryName:PullRequestCreatedEventMetadata'] :: PullRequestCreatedEventMetadata -> Maybe Text

-- | The commit ID on the source branch used when the pull request was
--   created.
[$sel:sourceCommitId:PullRequestCreatedEventMetadata'] :: PullRequestCreatedEventMetadata -> Maybe Text

-- | Create a value of <a>PullRequestCreatedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationCommitId:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_destinationCommitId</a> - The
--   commit ID of the tip of the branch specified as the destination branch
--   when the pull request was created.
--   
--   <a>$sel:mergeBase:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_mergeBase</a> - The commit ID of
--   the most recent commit that the source branch and the destination
--   branch have in common.
--   
--   <a>$sel:repositoryName:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_repositoryName</a> - The name of
--   the repository where the pull request was created.
--   
--   <a>$sel:sourceCommitId:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_sourceCommitId</a> - The commit ID
--   on the source branch used when the pull request was created.
newPullRequestCreatedEventMetadata :: PullRequestCreatedEventMetadata

-- | The commit ID of the tip of the branch specified as the destination
--   branch when the pull request was created.
pullRequestCreatedEventMetadata_destinationCommitId :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestCreatedEventMetadata_mergeBase :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The name of the repository where the pull request was created.
pullRequestCreatedEventMetadata_repositoryName :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The commit ID on the source branch used when the pull request was
--   created.
pullRequestCreatedEventMetadata_sourceCommitId :: Lens' PullRequestCreatedEventMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequestCreatedEventMetadata.PullRequestCreatedEventMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequestCreatedEventMetadata.PullRequestCreatedEventMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequestCreatedEventMetadata.PullRequestCreatedEventMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequestCreatedEventMetadata.PullRequestCreatedEventMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequestCreatedEventMetadata.PullRequestCreatedEventMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequestCreatedEventMetadata.PullRequestCreatedEventMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequestCreatedEventMetadata.PullRequestCreatedEventMetadata


module Amazonka.CodeCommit.Types.PullRequestEventType
newtype PullRequestEventType
PullRequestEventType' :: Text -> PullRequestEventType
[fromPullRequestEventType] :: PullRequestEventType -> Text
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_CREATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_DELETED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_OVERRIDDEN :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_UPDATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_STATE_CHANGED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_CREATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_MERGE_STATE_CHANGED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_SOURCE_REFERENCE_UPDATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_STATUS_CHANGED :: PullRequestEventType
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequestEventType.PullRequestEventType


module Amazonka.CodeCommit.Types.PullRequestMergedStateChangedEventMetadata

-- | Returns information about the change in the merge state for a pull
--   request event.
--   
--   <i>See:</i> <a>newPullRequestMergedStateChangedEventMetadata</a> smart
--   constructor.
data PullRequestMergedStateChangedEventMetadata
PullRequestMergedStateChangedEventMetadata' :: Maybe Text -> Maybe MergeMetadata -> Maybe Text -> PullRequestMergedStateChangedEventMetadata

-- | The name of the branch that the pull request is merged into.
[$sel:destinationReference:PullRequestMergedStateChangedEventMetadata'] :: PullRequestMergedStateChangedEventMetadata -> Maybe Text

-- | Information about the merge state change event.
[$sel:mergeMetadata:PullRequestMergedStateChangedEventMetadata'] :: PullRequestMergedStateChangedEventMetadata -> Maybe MergeMetadata

-- | The name of the repository where the pull request was created.
[$sel:repositoryName:PullRequestMergedStateChangedEventMetadata'] :: PullRequestMergedStateChangedEventMetadata -> Maybe Text

-- | Create a value of <a>PullRequestMergedStateChangedEventMetadata</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:destinationReference:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_destinationReference</a>
--   - The name of the branch that the pull request is merged into.
--   
--   <a>$sel:mergeMetadata:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_mergeMetadata</a> -
--   Information about the merge state change event.
--   
--   
--   <a>$sel:repositoryName:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_repositoryName</a> - The
--   name of the repository where the pull request was created.
newPullRequestMergedStateChangedEventMetadata :: PullRequestMergedStateChangedEventMetadata

-- | The name of the branch that the pull request is merged into.
pullRequestMergedStateChangedEventMetadata_destinationReference :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe Text)

-- | Information about the merge state change event.
pullRequestMergedStateChangedEventMetadata_mergeMetadata :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe MergeMetadata)

-- | The name of the repository where the pull request was created.
pullRequestMergedStateChangedEventMetadata_repositoryName :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequestMergedStateChangedEventMetadata.PullRequestMergedStateChangedEventMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequestMergedStateChangedEventMetadata.PullRequestMergedStateChangedEventMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequestMergedStateChangedEventMetadata.PullRequestMergedStateChangedEventMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequestMergedStateChangedEventMetadata.PullRequestMergedStateChangedEventMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequestMergedStateChangedEventMetadata.PullRequestMergedStateChangedEventMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequestMergedStateChangedEventMetadata.PullRequestMergedStateChangedEventMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequestMergedStateChangedEventMetadata.PullRequestMergedStateChangedEventMetadata


module Amazonka.CodeCommit.Types.PullRequestSourceReferenceUpdatedEventMetadata

-- | Information about an update to the source branch of a pull request.
--   
--   <i>See:</i> <a>newPullRequestSourceReferenceUpdatedEventMetadata</a>
--   smart constructor.
data PullRequestSourceReferenceUpdatedEventMetadata
PullRequestSourceReferenceUpdatedEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestSourceReferenceUpdatedEventMetadata

-- | The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the pull request was updated.
[$sel:afterCommitId:PullRequestSourceReferenceUpdatedEventMetadata'] :: PullRequestSourceReferenceUpdatedEventMetadata -> Maybe Text

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was updated.
[$sel:beforeCommitId:PullRequestSourceReferenceUpdatedEventMetadata'] :: PullRequestSourceReferenceUpdatedEventMetadata -> Maybe Text

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
[$sel:mergeBase:PullRequestSourceReferenceUpdatedEventMetadata'] :: PullRequestSourceReferenceUpdatedEventMetadata -> Maybe Text

-- | The name of the repository where the pull request was updated.
[$sel:repositoryName:PullRequestSourceReferenceUpdatedEventMetadata'] :: PullRequestSourceReferenceUpdatedEventMetadata -> Maybe Text

-- | Create a value of
--   <a>PullRequestSourceReferenceUpdatedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:afterCommitId:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_afterCommitId</a> -
--   The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the pull request was updated.
--   
--   
--   <a>$sel:beforeCommitId:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_beforeCommitId</a> -
--   The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was updated.
--   
--   <a>$sel:mergeBase:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_mergeBase</a> - The
--   commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
--   
--   
--   <a>$sel:repositoryName:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_repositoryName</a> -
--   The name of the repository where the pull request was updated.
newPullRequestSourceReferenceUpdatedEventMetadata :: PullRequestSourceReferenceUpdatedEventMetadata

-- | The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_afterCommitId :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_beforeCommitId :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestSourceReferenceUpdatedEventMetadata_mergeBase :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The name of the repository where the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_repositoryName :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequestSourceReferenceUpdatedEventMetadata.PullRequestSourceReferenceUpdatedEventMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequestSourceReferenceUpdatedEventMetadata.PullRequestSourceReferenceUpdatedEventMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequestSourceReferenceUpdatedEventMetadata.PullRequestSourceReferenceUpdatedEventMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequestSourceReferenceUpdatedEventMetadata.PullRequestSourceReferenceUpdatedEventMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequestSourceReferenceUpdatedEventMetadata.PullRequestSourceReferenceUpdatedEventMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequestSourceReferenceUpdatedEventMetadata.PullRequestSourceReferenceUpdatedEventMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequestSourceReferenceUpdatedEventMetadata.PullRequestSourceReferenceUpdatedEventMetadata


module Amazonka.CodeCommit.Types.PullRequestStatusEnum
newtype PullRequestStatusEnum
PullRequestStatusEnum' :: Text -> PullRequestStatusEnum
[fromPullRequestStatusEnum] :: PullRequestStatusEnum -> Text
pattern PullRequestStatusEnum_CLOSED :: PullRequestStatusEnum
pattern PullRequestStatusEnum_OPEN :: PullRequestStatusEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequestStatusEnum.PullRequestStatusEnum


module Amazonka.CodeCommit.Types.PullRequestStatusChangedEventMetadata

-- | Information about a change to the status of a pull request.
--   
--   <i>See:</i> <a>newPullRequestStatusChangedEventMetadata</a> smart
--   constructor.
data PullRequestStatusChangedEventMetadata
PullRequestStatusChangedEventMetadata' :: Maybe PullRequestStatusEnum -> PullRequestStatusChangedEventMetadata

-- | The changed status of the pull request.
[$sel:pullRequestStatus:PullRequestStatusChangedEventMetadata'] :: PullRequestStatusChangedEventMetadata -> Maybe PullRequestStatusEnum

-- | Create a value of <a>PullRequestStatusChangedEventMetadata</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestStatus:PullRequestStatusChangedEventMetadata'</a>,
--   <a>pullRequestStatusChangedEventMetadata_pullRequestStatus</a> - The
--   changed status of the pull request.
newPullRequestStatusChangedEventMetadata :: PullRequestStatusChangedEventMetadata

-- | The changed status of the pull request.
pullRequestStatusChangedEventMetadata_pullRequestStatus :: Lens' PullRequestStatusChangedEventMetadata (Maybe PullRequestStatusEnum)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequestStatusChangedEventMetadata.PullRequestStatusChangedEventMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequestStatusChangedEventMetadata.PullRequestStatusChangedEventMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequestStatusChangedEventMetadata.PullRequestStatusChangedEventMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequestStatusChangedEventMetadata.PullRequestStatusChangedEventMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequestStatusChangedEventMetadata.PullRequestStatusChangedEventMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequestStatusChangedEventMetadata.PullRequestStatusChangedEventMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequestStatusChangedEventMetadata.PullRequestStatusChangedEventMetadata


module Amazonka.CodeCommit.Types.PullRequestEvent

-- | Returns information about a pull request event.
--   
--   <i>See:</i> <a>newPullRequestEvent</a> smart constructor.
data PullRequestEvent
PullRequestEvent' :: Maybe PullRequestMergedStateChangedEventMetadata -> Maybe PullRequestCreatedEventMetadata -> Maybe ApprovalRuleEventMetadata -> Maybe PullRequestEventType -> Maybe PullRequestStatusChangedEventMetadata -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ApprovalStateChangedEventMetadata -> Maybe PullRequestSourceReferenceUpdatedEventMetadata -> Maybe ApprovalRuleOverriddenEventMetadata -> PullRequestEvent

-- | Information about the change in mergability state for the pull request
--   event.
[$sel:pullRequestMergedStateChangedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestMergedStateChangedEventMetadata

-- | Information about the source and destination branches for the pull
--   request.
[$sel:pullRequestCreatedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestCreatedEventMetadata

-- | Information about a pull request event.
[$sel:approvalRuleEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe ApprovalRuleEventMetadata

-- | The type of the pull request event (for example, a status change event
--   (PULL_REQUEST_STATUS_CHANGED) or update event
--   (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
[$sel:pullRequestEventType:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestEventType

-- | Information about the change in status for the pull request event.
[$sel:pullRequestStatusChangedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestStatusChangedEventMetadata

-- | The Amazon Resource Name (ARN) of the user whose actions resulted in
--   the event. Examples include updating the pull request with more
--   commits or changing the status of a pull request.
[$sel:actorArn:PullRequestEvent'] :: PullRequestEvent -> Maybe Text

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:PullRequestEvent'] :: PullRequestEvent -> Maybe Text

-- | The day and time of the pull request event, in timestamp format.
[$sel:eventDate:PullRequestEvent'] :: PullRequestEvent -> Maybe POSIX

-- | Information about an approval state change for a pull request.
[$sel:approvalStateChangedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe ApprovalStateChangedEventMetadata

-- | Information about the updated source branch for the pull request
--   event.
[$sel:pullRequestSourceReferenceUpdatedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestSourceReferenceUpdatedEventMetadata

-- | Information about an approval rule override event for a pull request.
[$sel:approvalRuleOverriddenEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe ApprovalRuleOverriddenEventMetadata

-- | Create a value of <a>PullRequestEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:pullRequestMergedStateChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestMergedStateChangedEventMetadata</a> -
--   Information about the change in mergability state for the pull request
--   event.
--   
--   <a>$sel:pullRequestCreatedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestCreatedEventMetadata</a> - Information
--   about the source and destination branches for the pull request.
--   
--   <a>$sel:approvalRuleEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalRuleEventMetadata</a> - Information about
--   a pull request event.
--   
--   <a>$sel:pullRequestEventType:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestEventType</a> - The type of the pull
--   request event (for example, a status change event
--   (PULL_REQUEST_STATUS_CHANGED) or update event
--   (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
--   
--   <a>$sel:pullRequestStatusChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestStatusChangedEventMetadata</a> -
--   Information about the change in status for the pull request event.
--   
--   <a>$sel:actorArn:PullRequestEvent'</a>,
--   <a>pullRequestEvent_actorArn</a> - The Amazon Resource Name (ARN) of
--   the user whose actions resulted in the event. Examples include
--   updating the pull request with more commits or changing the status of
--   a pull request.
--   
--   <a>$sel:pullRequestId:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestId</a> - The system-generated ID of the
--   pull request.
--   
--   <a>$sel:eventDate:PullRequestEvent'</a>,
--   <a>pullRequestEvent_eventDate</a> - The day and time of the pull
--   request event, in timestamp format.
--   
--   <a>$sel:approvalStateChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalStateChangedEventMetadata</a> -
--   Information about an approval state change for a pull request.
--   
--   
--   <a>$sel:pullRequestSourceReferenceUpdatedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestSourceReferenceUpdatedEventMetadata</a>
--   - Information about the updated source branch for the pull request
--   event.
--   
--   <a>$sel:approvalRuleOverriddenEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalRuleOverriddenEventMetadata</a> -
--   Information about an approval rule override event for a pull request.
newPullRequestEvent :: PullRequestEvent

-- | Information about the change in mergability state for the pull request
--   event.
pullRequestEvent_pullRequestMergedStateChangedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestMergedStateChangedEventMetadata)

-- | Information about the source and destination branches for the pull
--   request.
pullRequestEvent_pullRequestCreatedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestCreatedEventMetadata)

-- | Information about a pull request event.
pullRequestEvent_approvalRuleEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalRuleEventMetadata)

-- | The type of the pull request event (for example, a status change event
--   (PULL_REQUEST_STATUS_CHANGED) or update event
--   (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
pullRequestEvent_pullRequestEventType :: Lens' PullRequestEvent (Maybe PullRequestEventType)

-- | Information about the change in status for the pull request event.
pullRequestEvent_pullRequestStatusChangedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestStatusChangedEventMetadata)

-- | The Amazon Resource Name (ARN) of the user whose actions resulted in
--   the event. Examples include updating the pull request with more
--   commits or changing the status of a pull request.
pullRequestEvent_actorArn :: Lens' PullRequestEvent (Maybe Text)

-- | The system-generated ID of the pull request.
pullRequestEvent_pullRequestId :: Lens' PullRequestEvent (Maybe Text)

-- | The day and time of the pull request event, in timestamp format.
pullRequestEvent_eventDate :: Lens' PullRequestEvent (Maybe UTCTime)

-- | Information about an approval state change for a pull request.
pullRequestEvent_approvalStateChangedEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalStateChangedEventMetadata)

-- | Information about the updated source branch for the pull request
--   event.
pullRequestEvent_pullRequestSourceReferenceUpdatedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestSourceReferenceUpdatedEventMetadata)

-- | Information about an approval rule override event for a pull request.
pullRequestEvent_approvalRuleOverriddenEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalRuleOverriddenEventMetadata)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequestEvent.PullRequestEvent
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequestEvent.PullRequestEvent
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequestEvent.PullRequestEvent
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequestEvent.PullRequestEvent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequestEvent.PullRequestEvent
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequestEvent.PullRequestEvent
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequestEvent.PullRequestEvent


module Amazonka.CodeCommit.Types.PullRequestTarget

-- | Returns information about a pull request target.
--   
--   <i>See:</i> <a>newPullRequestTarget</a> smart constructor.
data PullRequestTarget
PullRequestTarget' :: Maybe Text -> Maybe Text -> Maybe MergeMetadata -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestTarget

-- | The full commit ID of the tip of the source branch used to create the
--   pull request. If the pull request branch is updated by a push while
--   the pull request is open, the commit ID changes to reflect the new tip
--   of the branch.
[$sel:sourceCommit:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
[$sel:destinationReference:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | Returns metadata about the state of the merge, including whether the
--   merge has been made.
[$sel:mergeMetadata:PullRequestTarget'] :: PullRequestTarget -> Maybe MergeMetadata

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
[$sel:mergeBase:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | The full commit ID that is the tip of the destination branch. This is
--   the commit where the pull request was or will be merged.
[$sel:destinationCommit:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | The name of the repository that contains the pull request source and
--   destination branches.
[$sel:repositoryName:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
[$sel:sourceReference:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | Create a value of <a>PullRequestTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCommit:PullRequestTarget'</a>,
--   <a>pullRequestTarget_sourceCommit</a> - The full commit ID of the tip
--   of the source branch used to create the pull request. If the pull
--   request branch is updated by a push while the pull request is open,
--   the commit ID changes to reflect the new tip of the branch.
--   
--   <a>$sel:destinationReference:PullRequestTarget'</a>,
--   <a>pullRequestTarget_destinationReference</a> - The branch of the
--   repository where the pull request changes are merged. Also known as
--   the destination branch.
--   
--   <a>$sel:mergeMetadata:PullRequestTarget'</a>,
--   <a>pullRequestTarget_mergeMetadata</a> - Returns metadata about the
--   state of the merge, including whether the merge has been made.
--   
--   <a>$sel:mergeBase:PullRequestTarget'</a>,
--   <a>pullRequestTarget_mergeBase</a> - The commit ID of the most recent
--   commit that the source branch and the destination branch have in
--   common.
--   
--   <a>$sel:destinationCommit:PullRequestTarget'</a>,
--   <a>pullRequestTarget_destinationCommit</a> - The full commit ID that
--   is the tip of the destination branch. This is the commit where the
--   pull request was or will be merged.
--   
--   <a>$sel:repositoryName:PullRequestTarget'</a>,
--   <a>pullRequestTarget_repositoryName</a> - The name of the repository
--   that contains the pull request source and destination branches.
--   
--   <a>$sel:sourceReference:PullRequestTarget'</a>,
--   <a>pullRequestTarget_sourceReference</a> - The branch of the
--   repository that contains the changes for the pull request. Also known
--   as the source branch.
newPullRequestTarget :: PullRequestTarget

-- | The full commit ID of the tip of the source branch used to create the
--   pull request. If the pull request branch is updated by a push while
--   the pull request is open, the commit ID changes to reflect the new tip
--   of the branch.
pullRequestTarget_sourceCommit :: Lens' PullRequestTarget (Maybe Text)

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
pullRequestTarget_destinationReference :: Lens' PullRequestTarget (Maybe Text)

-- | Returns metadata about the state of the merge, including whether the
--   merge has been made.
pullRequestTarget_mergeMetadata :: Lens' PullRequestTarget (Maybe MergeMetadata)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestTarget_mergeBase :: Lens' PullRequestTarget (Maybe Text)

-- | The full commit ID that is the tip of the destination branch. This is
--   the commit where the pull request was or will be merged.
pullRequestTarget_destinationCommit :: Lens' PullRequestTarget (Maybe Text)

-- | The name of the repository that contains the pull request source and
--   destination branches.
pullRequestTarget_repositoryName :: Lens' PullRequestTarget (Maybe Text)

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
pullRequestTarget_sourceReference :: Lens' PullRequestTarget (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequestTarget.PullRequestTarget
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequestTarget.PullRequestTarget
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequestTarget.PullRequestTarget
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequestTarget.PullRequestTarget
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequestTarget.PullRequestTarget
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequestTarget.PullRequestTarget
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequestTarget.PullRequestTarget


module Amazonka.CodeCommit.Types.PullRequest

-- | Returns information about a pull request.
--   
--   <i>See:</i> <a>newPullRequest</a> smart constructor.
data PullRequest
PullRequest' :: Maybe [ApprovalRule] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe PullRequestStatusEnum -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [PullRequestTarget] -> Maybe Text -> PullRequest

-- | The approval rules applied to the pull request.
[$sel:approvalRules:PullRequest'] :: PullRequest -> Maybe [ApprovalRule]

-- | The Amazon Resource Name (ARN) of the user who created the pull
--   request.
[$sel:authorArn:PullRequest'] :: PullRequest -> Maybe Text

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:PullRequest'] :: PullRequest -> Maybe Text

-- | The date and time the pull request was originally created, in
--   timestamp format.
[$sel:creationDate:PullRequest'] :: PullRequest -> Maybe POSIX

-- | The status of the pull request. Pull request status can only change
--   from <tt>OPEN</tt> to <tt>CLOSED</tt>.
[$sel:pullRequestStatus:PullRequest'] :: PullRequest -> Maybe PullRequestStatusEnum

-- | The user-defined title of the pull request. This title is displayed in
--   the list of pull requests to other repository users.
[$sel:title:PullRequest'] :: PullRequest -> Maybe Text

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
[$sel:clientRequestToken:PullRequest'] :: PullRequest -> Maybe Text

-- | The day and time of the last user or system activity on the pull
--   request, in timestamp format.
[$sel:lastActivityDate:PullRequest'] :: PullRequest -> Maybe POSIX

-- | The system-generated revision ID for the pull request.
[$sel:revisionId:PullRequest'] :: PullRequest -> Maybe Text

-- | The targets of the pull request, including the source branch and
--   destination branch for the pull request.
[$sel:pullRequestTargets:PullRequest'] :: PullRequest -> Maybe [PullRequestTarget]

-- | The user-defined description of the pull request. This description can
--   be used to clarify what should be reviewed and other details of the
--   request.
[$sel:description:PullRequest'] :: PullRequest -> Maybe Text

-- | Create a value of <a>PullRequest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRules:PullRequest'</a>,
--   <a>pullRequest_approvalRules</a> - The approval rules applied to the
--   pull request.
--   
--   <a>$sel:authorArn:PullRequest'</a>, <a>pullRequest_authorArn</a> - The
--   Amazon Resource Name (ARN) of the user who created the pull request.
--   
--   <a>$sel:pullRequestId:PullRequest'</a>,
--   <a>pullRequest_pullRequestId</a> - The system-generated ID of the pull
--   request.
--   
--   <a>$sel:creationDate:PullRequest'</a>, <a>pullRequest_creationDate</a>
--   - The date and time the pull request was originally created, in
--   timestamp format.
--   
--   <a>$sel:pullRequestStatus:PullRequest'</a>,
--   <a>pullRequest_pullRequestStatus</a> - The status of the pull request.
--   Pull request status can only change from <tt>OPEN</tt> to
--   <tt>CLOSED</tt>.
--   
--   <a>$sel:title:PullRequest'</a>, <a>pullRequest_title</a> - The
--   user-defined title of the pull request. This title is displayed in the
--   list of pull requests to other repository users.
--   
--   <a>$sel:clientRequestToken:PullRequest'</a>,
--   <a>pullRequest_clientRequestToken</a> - A unique, client-generated
--   idempotency token that, when provided in a request, ensures the
--   request cannot be repeated with a changed parameter. If a request is
--   received with the same parameters and a token is included, the request
--   returns information about the initial request that used that token.
--   
--   <a>$sel:lastActivityDate:PullRequest'</a>,
--   <a>pullRequest_lastActivityDate</a> - The day and time of the last
--   user or system activity on the pull request, in timestamp format.
--   
--   <a>$sel:revisionId:PullRequest'</a>, <a>pullRequest_revisionId</a> -
--   The system-generated revision ID for the pull request.
--   
--   <a>$sel:pullRequestTargets:PullRequest'</a>,
--   <a>pullRequest_pullRequestTargets</a> - The targets of the pull
--   request, including the source branch and destination branch for the
--   pull request.
--   
--   <a>$sel:description:PullRequest'</a>, <a>pullRequest_description</a> -
--   The user-defined description of the pull request. This description can
--   be used to clarify what should be reviewed and other details of the
--   request.
newPullRequest :: PullRequest

-- | The approval rules applied to the pull request.
pullRequest_approvalRules :: Lens' PullRequest (Maybe [ApprovalRule])

-- | The Amazon Resource Name (ARN) of the user who created the pull
--   request.
pullRequest_authorArn :: Lens' PullRequest (Maybe Text)

-- | The system-generated ID of the pull request.
pullRequest_pullRequestId :: Lens' PullRequest (Maybe Text)

-- | The date and time the pull request was originally created, in
--   timestamp format.
pullRequest_creationDate :: Lens' PullRequest (Maybe UTCTime)

-- | The status of the pull request. Pull request status can only change
--   from <tt>OPEN</tt> to <tt>CLOSED</tt>.
pullRequest_pullRequestStatus :: Lens' PullRequest (Maybe PullRequestStatusEnum)

-- | The user-defined title of the pull request. This title is displayed in
--   the list of pull requests to other repository users.
pullRequest_title :: Lens' PullRequest (Maybe Text)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
pullRequest_clientRequestToken :: Lens' PullRequest (Maybe Text)

-- | The day and time of the last user or system activity on the pull
--   request, in timestamp format.
pullRequest_lastActivityDate :: Lens' PullRequest (Maybe UTCTime)

-- | The system-generated revision ID for the pull request.
pullRequest_revisionId :: Lens' PullRequest (Maybe Text)

-- | The targets of the pull request, including the source branch and
--   destination branch for the pull request.
pullRequest_pullRequestTargets :: Lens' PullRequest (Maybe [PullRequestTarget])

-- | The user-defined description of the pull request. This description can
--   be used to clarify what should be reviewed and other details of the
--   request.
pullRequest_description :: Lens' PullRequest (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PullRequest.PullRequest
instance GHC.Show.Show Amazonka.CodeCommit.Types.PullRequest.PullRequest
instance GHC.Read.Read Amazonka.CodeCommit.Types.PullRequest.PullRequest
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PullRequest.PullRequest
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.PullRequest.PullRequest
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PullRequest.PullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PullRequest.PullRequest


module Amazonka.CodeCommit.Types.ReactionValueFormats

-- | Information about the values for reactions to a comment. AWS
--   CodeCommit supports a limited set of reactions.
--   
--   <i>See:</i> <a>newReactionValueFormats</a> smart constructor.
data ReactionValueFormats
ReactionValueFormats' :: Maybe Text -> Maybe Text -> Maybe Text -> ReactionValueFormats

-- | The Emoji Version 1.0 graphic of the reaction. These graphics are
--   interpreted slightly differently on different operating systems.
[$sel:emoji:ReactionValueFormats'] :: ReactionValueFormats -> Maybe Text

-- | The emoji short code for the reaction. Short codes are interpreted
--   slightly differently on different operating systems.
[$sel:shortCode:ReactionValueFormats'] :: ReactionValueFormats -> Maybe Text

-- | The Unicode codepoint for the reaction.
[$sel:unicode:ReactionValueFormats'] :: ReactionValueFormats -> Maybe Text

-- | Create a value of <a>ReactionValueFormats</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emoji:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_emoji</a> - The Emoji Version 1.0 graphic of
--   the reaction. These graphics are interpreted slightly differently on
--   different operating systems.
--   
--   <a>$sel:shortCode:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_shortCode</a> - The emoji short code for the
--   reaction. Short codes are interpreted slightly differently on
--   different operating systems.
--   
--   <a>$sel:unicode:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_unicode</a> - The Unicode codepoint for the
--   reaction.
newReactionValueFormats :: ReactionValueFormats

-- | The Emoji Version 1.0 graphic of the reaction. These graphics are
--   interpreted slightly differently on different operating systems.
reactionValueFormats_emoji :: Lens' ReactionValueFormats (Maybe Text)

-- | The emoji short code for the reaction. Short codes are interpreted
--   slightly differently on different operating systems.
reactionValueFormats_shortCode :: Lens' ReactionValueFormats (Maybe Text)

-- | The Unicode codepoint for the reaction.
reactionValueFormats_unicode :: Lens' ReactionValueFormats (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ReactionValueFormats.ReactionValueFormats
instance GHC.Show.Show Amazonka.CodeCommit.Types.ReactionValueFormats.ReactionValueFormats
instance GHC.Read.Read Amazonka.CodeCommit.Types.ReactionValueFormats.ReactionValueFormats
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ReactionValueFormats.ReactionValueFormats
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ReactionValueFormats.ReactionValueFormats
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ReactionValueFormats.ReactionValueFormats
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ReactionValueFormats.ReactionValueFormats


module Amazonka.CodeCommit.Types.ReactionForComment

-- | Information about the reaction values provided by users on a comment.
--   
--   <i>See:</i> <a>newReactionForComment</a> smart constructor.
data ReactionForComment
ReactionForComment' :: Maybe [Text] -> Maybe Int -> Maybe ReactionValueFormats -> ReactionForComment

-- | The Amazon Resource Names (ARNs) of users who have provided reactions
--   to the comment.
[$sel:reactionUsers:ReactionForComment'] :: ReactionForComment -> Maybe [Text]

-- | A numerical count of users who reacted with the specified emoji whose
--   identities have been subsequently deleted from IAM. While these IAM
--   users or roles no longer exist, the reactions might still appear in
--   total reaction counts.
[$sel:reactionsFromDeletedUsersCount:ReactionForComment'] :: ReactionForComment -> Maybe Int

-- | The reaction for a specified comment.
[$sel:reaction:ReactionForComment'] :: ReactionForComment -> Maybe ReactionValueFormats

-- | Create a value of <a>ReactionForComment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reactionUsers:ReactionForComment'</a>,
--   <a>reactionForComment_reactionUsers</a> - The Amazon Resource Names
--   (ARNs) of users who have provided reactions to the comment.
--   
--   <a>$sel:reactionsFromDeletedUsersCount:ReactionForComment'</a>,
--   <a>reactionForComment_reactionsFromDeletedUsersCount</a> - A numerical
--   count of users who reacted with the specified emoji whose identities
--   have been subsequently deleted from IAM. While these IAM users or
--   roles no longer exist, the reactions might still appear in total
--   reaction counts.
--   
--   <a>$sel:reaction:ReactionForComment'</a>,
--   <a>reactionForComment_reaction</a> - The reaction for a specified
--   comment.
newReactionForComment :: ReactionForComment

-- | The Amazon Resource Names (ARNs) of users who have provided reactions
--   to the comment.
reactionForComment_reactionUsers :: Lens' ReactionForComment (Maybe [Text])

-- | A numerical count of users who reacted with the specified emoji whose
--   identities have been subsequently deleted from IAM. While these IAM
--   users or roles no longer exist, the reactions might still appear in
--   total reaction counts.
reactionForComment_reactionsFromDeletedUsersCount :: Lens' ReactionForComment (Maybe Int)

-- | The reaction for a specified comment.
reactionForComment_reaction :: Lens' ReactionForComment (Maybe ReactionValueFormats)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ReactionForComment.ReactionForComment
instance GHC.Show.Show Amazonka.CodeCommit.Types.ReactionForComment.ReactionForComment
instance GHC.Read.Read Amazonka.CodeCommit.Types.ReactionForComment.ReactionForComment
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ReactionForComment.ReactionForComment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ReactionForComment.ReactionForComment
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ReactionForComment.ReactionForComment
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ReactionForComment.ReactionForComment


module Amazonka.CodeCommit.Types.RelativeFileVersionEnum
newtype RelativeFileVersionEnum
RelativeFileVersionEnum' :: Text -> RelativeFileVersionEnum
[fromRelativeFileVersionEnum] :: RelativeFileVersionEnum -> Text
pattern RelativeFileVersionEnum_AFTER :: RelativeFileVersionEnum
pattern RelativeFileVersionEnum_BEFORE :: RelativeFileVersionEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.RelativeFileVersionEnum.RelativeFileVersionEnum


module Amazonka.CodeCommit.Types.Location

-- | Returns information about the location of a change or comment in the
--   comparison between two commits or a pull request.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe RelativeFileVersionEnum -> Maybe Text -> Maybe Integer -> Location

-- | In a comparison of commits or a pull request, whether the change is in
--   the before or after of that comparison.
[$sel:relativeFileVersion:Location'] :: Location -> Maybe RelativeFileVersionEnum

-- | The name of the file being compared, including its extension and
--   subdirectory, if any.
[$sel:filePath:Location'] :: Location -> Maybe Text

-- | The position of a change in a compared file, in line number format.
[$sel:filePosition:Location'] :: Location -> Maybe Integer

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:relativeFileVersion:Location'</a>,
--   <a>location_relativeFileVersion</a> - In a comparison of commits or a
--   pull request, whether the change is in the before or after of that
--   comparison.
--   
--   <a>$sel:filePath:Location'</a>, <a>location_filePath</a> - The name of
--   the file being compared, including its extension and subdirectory, if
--   any.
--   
--   <a>$sel:filePosition:Location'</a>, <a>location_filePosition</a> - The
--   position of a change in a compared file, in line number format.
newLocation :: Location

-- | In a comparison of commits or a pull request, whether the change is in
--   the before or after of that comparison.
location_relativeFileVersion :: Lens' Location (Maybe RelativeFileVersionEnum)

-- | The name of the file being compared, including its extension and
--   subdirectory, if any.
location_filePath :: Lens' Location (Maybe Text)

-- | The position of a change in a compared file, in line number format.
location_filePosition :: Lens' Location (Maybe Integer)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Location.Location
instance GHC.Show.Show Amazonka.CodeCommit.Types.Location.Location
instance GHC.Read.Read Amazonka.CodeCommit.Types.Location.Location
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Location.Location
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.Location.Location
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Location.Location
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Location.Location
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.Location.Location


module Amazonka.CodeCommit.Types.CommentsForPullRequest

-- | Returns information about comments on a pull request.
--   
--   <i>See:</i> <a>newCommentsForPullRequest</a> smart constructor.
data CommentsForPullRequest
CommentsForPullRequest' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Comment] -> CommentsForPullRequest

-- | The full blob ID of the file on which you want to comment on the
--   destination commit.
[$sel:beforeBlobId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | Location information about the comment on the pull request, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE (destination branch) or AFTER (source
--   branch).
[$sel:location:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Location

-- | The full commit ID of the commit that was the tip of the source branch
--   at the time the comment was made.
[$sel:afterCommitId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | The full blob ID of the file on which you want to comment on the
--   source commit.
[$sel:afterBlobId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | The full commit ID of the commit that was the tip of the destination
--   branch when the pull request was created. This commit is superceded by
--   the after commit in the source branch when and if you merge the source
--   branch into the destination branch.
[$sel:beforeCommitId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | The name of the repository that contains the pull request.
[$sel:repositoryName:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | An array of comment objects. Each comment object contains information
--   about a comment on the pull request.
[$sel:comments:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe [Comment]

-- | Create a value of <a>CommentsForPullRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_beforeBlobId</a> - The full blob ID of the
--   file on which you want to comment on the destination commit.
--   
--   <a>$sel:location:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_location</a> - Location information about
--   the comment on the pull request, including the file name, line number,
--   and whether the version of the file where the comment was made is
--   BEFORE (destination branch) or AFTER (source branch).
--   
--   <a>$sel:afterCommitId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_afterCommitId</a> - The full commit ID of
--   the commit that was the tip of the source branch at the time the
--   comment was made.
--   
--   <a>$sel:pullRequestId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_pullRequestId</a> - The system-generated ID
--   of the pull request.
--   
--   <a>$sel:afterBlobId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_afterBlobId</a> - The full blob ID of the
--   file on which you want to comment on the source commit.
--   
--   <a>$sel:beforeCommitId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_beforeCommitId</a> - The full commit ID of
--   the commit that was the tip of the destination branch when the pull
--   request was created. This commit is superceded by the after commit in
--   the source branch when and if you merge the source branch into the
--   destination branch.
--   
--   <a>$sel:repositoryName:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_repositoryName</a> - The name of the
--   repository that contains the pull request.
--   
--   <a>$sel:comments:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_comments</a> - An array of comment objects.
--   Each comment object contains information about a comment on the pull
--   request.
newCommentsForPullRequest :: CommentsForPullRequest

-- | The full blob ID of the file on which you want to comment on the
--   destination commit.
commentsForPullRequest_beforeBlobId :: Lens' CommentsForPullRequest (Maybe Text)

-- | Location information about the comment on the pull request, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE (destination branch) or AFTER (source
--   branch).
commentsForPullRequest_location :: Lens' CommentsForPullRequest (Maybe Location)

-- | The full commit ID of the commit that was the tip of the source branch
--   at the time the comment was made.
commentsForPullRequest_afterCommitId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The system-generated ID of the pull request.
commentsForPullRequest_pullRequestId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The full blob ID of the file on which you want to comment on the
--   source commit.
commentsForPullRequest_afterBlobId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The full commit ID of the commit that was the tip of the destination
--   branch when the pull request was created. This commit is superceded by
--   the after commit in the source branch when and if you merge the source
--   branch into the destination branch.
commentsForPullRequest_beforeCommitId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The name of the repository that contains the pull request.
commentsForPullRequest_repositoryName :: Lens' CommentsForPullRequest (Maybe Text)

-- | An array of comment objects. Each comment object contains information
--   about a comment on the pull request.
commentsForPullRequest_comments :: Lens' CommentsForPullRequest (Maybe [Comment])
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.CommentsForPullRequest.CommentsForPullRequest
instance GHC.Show.Show Amazonka.CodeCommit.Types.CommentsForPullRequest.CommentsForPullRequest
instance GHC.Read.Read Amazonka.CodeCommit.Types.CommentsForPullRequest.CommentsForPullRequest
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.CommentsForPullRequest.CommentsForPullRequest
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.CommentsForPullRequest.CommentsForPullRequest
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.CommentsForPullRequest.CommentsForPullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.CommentsForPullRequest.CommentsForPullRequest


module Amazonka.CodeCommit.Types.CommentsForComparedCommit

-- | Returns information about comments on the comparison between two
--   commits.
--   
--   <i>See:</i> <a>newCommentsForComparedCommit</a> smart constructor.
data CommentsForComparedCommit
CommentsForComparedCommit' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Comment] -> CommentsForComparedCommit

-- | The full blob ID of the commit used to establish the before of the
--   comparison.
[$sel:beforeBlobId:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | Location information about the comment on the comparison, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE or AFTER.
[$sel:location:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Location

-- | The full commit ID of the commit used to establish the after of the
--   comparison.
[$sel:afterCommitId:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | The full blob ID of the commit used to establish the after of the
--   comparison.
[$sel:afterBlobId:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | The full commit ID of the commit used to establish the before of the
--   comparison.
[$sel:beforeCommitId:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | The name of the repository that contains the compared commits.
[$sel:repositoryName:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | An array of comment objects. Each comment object contains information
--   about a comment on the comparison between commits.
[$sel:comments:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe [Comment]

-- | Create a value of <a>CommentsForComparedCommit</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_beforeBlobId</a> - The full blob ID of
--   the commit used to establish the before of the comparison.
--   
--   <a>$sel:location:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_location</a> - Location information about
--   the comment on the comparison, including the file name, line number,
--   and whether the version of the file where the comment was made is
--   BEFORE or AFTER.
--   
--   <a>$sel:afterCommitId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_afterCommitId</a> - The full commit ID of
--   the commit used to establish the after of the comparison.
--   
--   <a>$sel:afterBlobId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_afterBlobId</a> - The full blob ID of the
--   commit used to establish the after of the comparison.
--   
--   <a>$sel:beforeCommitId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_beforeCommitId</a> - The full commit ID
--   of the commit used to establish the before of the comparison.
--   
--   <a>$sel:repositoryName:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_repositoryName</a> - The name of the
--   repository that contains the compared commits.
--   
--   <a>$sel:comments:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_comments</a> - An array of comment
--   objects. Each comment object contains information about a comment on
--   the comparison between commits.
newCommentsForComparedCommit :: CommentsForComparedCommit

-- | The full blob ID of the commit used to establish the before of the
--   comparison.
commentsForComparedCommit_beforeBlobId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | Location information about the comment on the comparison, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE or AFTER.
commentsForComparedCommit_location :: Lens' CommentsForComparedCommit (Maybe Location)

-- | The full commit ID of the commit used to establish the after of the
--   comparison.
commentsForComparedCommit_afterCommitId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The full blob ID of the commit used to establish the after of the
--   comparison.
commentsForComparedCommit_afterBlobId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The full commit ID of the commit used to establish the before of the
--   comparison.
commentsForComparedCommit_beforeCommitId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The name of the repository that contains the compared commits.
commentsForComparedCommit_repositoryName :: Lens' CommentsForComparedCommit (Maybe Text)

-- | An array of comment objects. Each comment object contains information
--   about a comment on the comparison between commits.
commentsForComparedCommit_comments :: Lens' CommentsForComparedCommit (Maybe [Comment])
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.CommentsForComparedCommit.CommentsForComparedCommit
instance GHC.Show.Show Amazonka.CodeCommit.Types.CommentsForComparedCommit.CommentsForComparedCommit
instance GHC.Read.Read Amazonka.CodeCommit.Types.CommentsForComparedCommit.CommentsForComparedCommit
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.CommentsForComparedCommit.CommentsForComparedCommit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.CommentsForComparedCommit.CommentsForComparedCommit
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.CommentsForComparedCommit.CommentsForComparedCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.CommentsForComparedCommit.CommentsForComparedCommit


module Amazonka.CodeCommit.Types.ReplacementTypeEnum
newtype ReplacementTypeEnum
ReplacementTypeEnum' :: Text -> ReplacementTypeEnum
[fromReplacementTypeEnum] :: ReplacementTypeEnum -> Text
pattern ReplacementTypeEnum_KEEP_BASE :: ReplacementTypeEnum
pattern ReplacementTypeEnum_KEEP_DESTINATION :: ReplacementTypeEnum
pattern ReplacementTypeEnum_KEEP_SOURCE :: ReplacementTypeEnum
pattern ReplacementTypeEnum_USE_NEW_CONTENT :: ReplacementTypeEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.ReplacementTypeEnum.ReplacementTypeEnum


module Amazonka.CodeCommit.Types.ReplaceContentEntry

-- | Information about a replacement content entry in the conflict of a
--   merge or pull request operation.
--   
--   <i>See:</i> <a>newReplaceContentEntry</a> smart constructor.
data ReplaceContentEntry
ReplaceContentEntry' :: Maybe FileModeTypeEnum -> Maybe Base64 -> Text -> ReplacementTypeEnum -> ReplaceContentEntry

-- | The file mode to apply during conflict resoltion.
[$sel:fileMode:ReplaceContentEntry'] :: ReplaceContentEntry -> Maybe FileModeTypeEnum

-- | The base-64 encoded content to use when the replacement type is
--   USE_NEW_CONTENT.
[$sel:content:ReplaceContentEntry'] :: ReplaceContentEntry -> Maybe Base64

-- | The path of the conflicting file.
[$sel:filePath:ReplaceContentEntry'] :: ReplaceContentEntry -> Text

-- | The replacement type to use when determining how to resolve the
--   conflict.
[$sel:replacementType:ReplaceContentEntry'] :: ReplaceContentEntry -> ReplacementTypeEnum

-- | Create a value of <a>ReplaceContentEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileMode:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_fileMode</a> - The file mode to apply during
--   conflict resoltion.
--   
--   <a>$sel:content:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_content</a> - The base-64 encoded content to
--   use when the replacement type is USE_NEW_CONTENT.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:filePath:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_filePath</a> - The path of the conflicting
--   file.
--   
--   <a>$sel:replacementType:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_replacementType</a> - The replacement type to
--   use when determining how to resolve the conflict.
newReplaceContentEntry :: Text -> ReplacementTypeEnum -> ReplaceContentEntry

-- | The file mode to apply during conflict resoltion.
replaceContentEntry_fileMode :: Lens' ReplaceContentEntry (Maybe FileModeTypeEnum)

-- | The base-64 encoded content to use when the replacement type is
--   USE_NEW_CONTENT.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
replaceContentEntry_content :: Lens' ReplaceContentEntry (Maybe ByteString)

-- | The path of the conflicting file.
replaceContentEntry_filePath :: Lens' ReplaceContentEntry Text

-- | The replacement type to use when determining how to resolve the
--   conflict.
replaceContentEntry_replacementType :: Lens' ReplaceContentEntry ReplacementTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ReplaceContentEntry.ReplaceContentEntry
instance GHC.Show.Show Amazonka.CodeCommit.Types.ReplaceContentEntry.ReplaceContentEntry
instance GHC.Read.Read Amazonka.CodeCommit.Types.ReplaceContentEntry.ReplaceContentEntry
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ReplaceContentEntry.ReplaceContentEntry
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ReplaceContentEntry.ReplaceContentEntry
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ReplaceContentEntry.ReplaceContentEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.ReplaceContentEntry.ReplaceContentEntry


module Amazonka.CodeCommit.Types.RepositoryMetadata

-- | Information about a repository.
--   
--   <i>See:</i> <a>newRepositoryMetadata</a> smart constructor.
data RepositoryMetadata
RepositoryMetadata' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> RepositoryMetadata

-- | A comment or description about the repository.
[$sel:repositoryDescription:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The date and time the repository was last modified, in timestamp
--   format.
[$sel:lastModifiedDate:RepositoryMetadata'] :: RepositoryMetadata -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the repository.
[$sel:arn:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The URL to use for cloning the repository over HTTPS.
[$sel:cloneUrlHttp:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The ID of the AWS account associated with the repository.
[$sel:accountId:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The repository's default branch name.
[$sel:defaultBranch:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The ID of the repository.
[$sel:repositoryId:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The repository's name.
[$sel:repositoryName:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The date and time the repository was created, in timestamp format.
[$sel:creationDate:RepositoryMetadata'] :: RepositoryMetadata -> Maybe POSIX

-- | The URL to use for cloning the repository over SSH.
[$sel:cloneUrlSsh:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | Create a value of <a>RepositoryMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryDescription:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryDescription</a> - A comment or
--   description about the repository.
--   
--   <a>$sel:lastModifiedDate:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_lastModifiedDate</a> - The date and time the
--   repository was last modified, in timestamp format.
--   
--   <a>$sel:arn:RepositoryMetadata'</a>, <a>repositoryMetadata_arn</a> -
--   The Amazon Resource Name (ARN) of the repository.
--   
--   <a>$sel:cloneUrlHttp:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_cloneUrlHttp</a> - The URL to use for cloning
--   the repository over HTTPS.
--   
--   <a>$sel:accountId:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_accountId</a> - The ID of the AWS account
--   associated with the repository.
--   
--   <a>$sel:defaultBranch:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_defaultBranch</a> - The repository's default
--   branch name.
--   
--   <a>$sel:repositoryId:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryId</a> - The ID of the repository.
--   
--   <a>$sel:repositoryName:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryName</a> - The repository's name.
--   
--   <a>$sel:creationDate:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_creationDate</a> - The date and time the
--   repository was created, in timestamp format.
--   
--   <a>$sel:cloneUrlSsh:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_cloneUrlSsh</a> - The URL to use for cloning the
--   repository over SSH.
newRepositoryMetadata :: RepositoryMetadata

-- | A comment or description about the repository.
repositoryMetadata_repositoryDescription :: Lens' RepositoryMetadata (Maybe Text)

-- | The date and time the repository was last modified, in timestamp
--   format.
repositoryMetadata_lastModifiedDate :: Lens' RepositoryMetadata (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the repository.
repositoryMetadata_arn :: Lens' RepositoryMetadata (Maybe Text)

-- | The URL to use for cloning the repository over HTTPS.
repositoryMetadata_cloneUrlHttp :: Lens' RepositoryMetadata (Maybe Text)

-- | The ID of the AWS account associated with the repository.
repositoryMetadata_accountId :: Lens' RepositoryMetadata (Maybe Text)

-- | The repository's default branch name.
repositoryMetadata_defaultBranch :: Lens' RepositoryMetadata (Maybe Text)

-- | The ID of the repository.
repositoryMetadata_repositoryId :: Lens' RepositoryMetadata (Maybe Text)

-- | The repository's name.
repositoryMetadata_repositoryName :: Lens' RepositoryMetadata (Maybe Text)

-- | The date and time the repository was created, in timestamp format.
repositoryMetadata_creationDate :: Lens' RepositoryMetadata (Maybe UTCTime)

-- | The URL to use for cloning the repository over SSH.
repositoryMetadata_cloneUrlSsh :: Lens' RepositoryMetadata (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.RepositoryMetadata.RepositoryMetadata
instance GHC.Show.Show Amazonka.CodeCommit.Types.RepositoryMetadata.RepositoryMetadata
instance GHC.Read.Read Amazonka.CodeCommit.Types.RepositoryMetadata.RepositoryMetadata
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.RepositoryMetadata.RepositoryMetadata
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.RepositoryMetadata.RepositoryMetadata
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.RepositoryMetadata.RepositoryMetadata
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.RepositoryMetadata.RepositoryMetadata


module Amazonka.CodeCommit.Types.RepositoryNameIdPair

-- | Information about a repository name and ID.
--   
--   <i>See:</i> <a>newRepositoryNameIdPair</a> smart constructor.
data RepositoryNameIdPair
RepositoryNameIdPair' :: Maybe Text -> Maybe Text -> RepositoryNameIdPair

-- | The ID associated with the repository.
[$sel:repositoryId:RepositoryNameIdPair'] :: RepositoryNameIdPair -> Maybe Text

-- | The name associated with the repository.
[$sel:repositoryName:RepositoryNameIdPair'] :: RepositoryNameIdPair -> Maybe Text

-- | Create a value of <a>RepositoryNameIdPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryId:RepositoryNameIdPair'</a>,
--   <a>repositoryNameIdPair_repositoryId</a> - The ID associated with the
--   repository.
--   
--   <a>$sel:repositoryName:RepositoryNameIdPair'</a>,
--   <a>repositoryNameIdPair_repositoryName</a> - The name associated with
--   the repository.
newRepositoryNameIdPair :: RepositoryNameIdPair

-- | The ID associated with the repository.
repositoryNameIdPair_repositoryId :: Lens' RepositoryNameIdPair (Maybe Text)

-- | The name associated with the repository.
repositoryNameIdPair_repositoryName :: Lens' RepositoryNameIdPair (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.RepositoryNameIdPair.RepositoryNameIdPair
instance GHC.Show.Show Amazonka.CodeCommit.Types.RepositoryNameIdPair.RepositoryNameIdPair
instance GHC.Read.Read Amazonka.CodeCommit.Types.RepositoryNameIdPair.RepositoryNameIdPair
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.RepositoryNameIdPair.RepositoryNameIdPair
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.RepositoryNameIdPair.RepositoryNameIdPair
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.RepositoryNameIdPair.RepositoryNameIdPair
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.RepositoryNameIdPair.RepositoryNameIdPair


module Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum
newtype RepositoryTriggerEventEnum
RepositoryTriggerEventEnum' :: Text -> RepositoryTriggerEventEnum
[fromRepositoryTriggerEventEnum] :: RepositoryTriggerEventEnum -> Text
pattern RepositoryTriggerEventEnum_All :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_CreateReference :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_DeleteReference :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_UpdateReference :: RepositoryTriggerEventEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.RepositoryTriggerEventEnum.RepositoryTriggerEventEnum


module Amazonka.CodeCommit.Types.RepositoryTrigger

-- | Information about a trigger for a repository.
--   
--   <i>See:</i> <a>newRepositoryTrigger</a> smart constructor.
data RepositoryTrigger
RepositoryTrigger' :: Maybe [Text] -> Maybe Text -> Text -> Text -> [RepositoryTriggerEventEnum] -> RepositoryTrigger

-- | The branches to be included in the trigger configuration. If you
--   specify an empty array, the trigger applies to all branches.
--   
--   Although no content is required in the array, you must include the
--   array itself.
[$sel:branches:RepositoryTrigger'] :: RepositoryTrigger -> Maybe [Text]

-- | Any custom data associated with the trigger to be included in the
--   information sent to the target of the trigger.
[$sel:customData:RepositoryTrigger'] :: RepositoryTrigger -> Maybe Text

-- | The name of the trigger.
[$sel:name:RepositoryTrigger'] :: RepositoryTrigger -> Text

-- | The ARN of the resource that is the target for a trigger (for example,
--   the ARN of a topic in Amazon SNS).
[$sel:destinationArn:RepositoryTrigger'] :: RepositoryTrigger -> Text

-- | The repository events that cause the trigger to run actions in another
--   service, such as sending a notification through Amazon SNS.
--   
--   The valid value "all" cannot be used with any other values.
[$sel:events:RepositoryTrigger'] :: RepositoryTrigger -> [RepositoryTriggerEventEnum]

-- | Create a value of <a>RepositoryTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branches:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_branches</a> - The branches to be included in the
--   trigger configuration. If you specify an empty array, the trigger
--   applies to all branches.
--   
--   Although no content is required in the array, you must include the
--   array itself.
--   
--   <a>$sel:customData:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_customData</a> - Any custom data associated with
--   the trigger to be included in the information sent to the target of
--   the trigger.
--   
--   <a>$sel:name:RepositoryTrigger'</a>, <a>repositoryTrigger_name</a> -
--   The name of the trigger.
--   
--   <a>$sel:destinationArn:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_destinationArn</a> - The ARN of the resource that
--   is the target for a trigger (for example, the ARN of a topic in Amazon
--   SNS).
--   
--   <a>$sel:events:RepositoryTrigger'</a>, <a>repositoryTrigger_events</a>
--   - The repository events that cause the trigger to run actions in
--   another service, such as sending a notification through Amazon SNS.
--   
--   The valid value "all" cannot be used with any other values.
newRepositoryTrigger :: Text -> Text -> RepositoryTrigger

-- | The branches to be included in the trigger configuration. If you
--   specify an empty array, the trigger applies to all branches.
--   
--   Although no content is required in the array, you must include the
--   array itself.
repositoryTrigger_branches :: Lens' RepositoryTrigger (Maybe [Text])

-- | Any custom data associated with the trigger to be included in the
--   information sent to the target of the trigger.
repositoryTrigger_customData :: Lens' RepositoryTrigger (Maybe Text)

-- | The name of the trigger.
repositoryTrigger_name :: Lens' RepositoryTrigger Text

-- | The ARN of the resource that is the target for a trigger (for example,
--   the ARN of a topic in Amazon SNS).
repositoryTrigger_destinationArn :: Lens' RepositoryTrigger Text

-- | The repository events that cause the trigger to run actions in another
--   service, such as sending a notification through Amazon SNS.
--   
--   The valid value "all" cannot be used with any other values.
repositoryTrigger_events :: Lens' RepositoryTrigger [RepositoryTriggerEventEnum]
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.RepositoryTrigger.RepositoryTrigger
instance GHC.Show.Show Amazonka.CodeCommit.Types.RepositoryTrigger.RepositoryTrigger
instance GHC.Read.Read Amazonka.CodeCommit.Types.RepositoryTrigger.RepositoryTrigger
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.RepositoryTrigger.RepositoryTrigger
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.RepositoryTrigger.RepositoryTrigger
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.RepositoryTrigger.RepositoryTrigger
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.RepositoryTrigger.RepositoryTrigger
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.RepositoryTrigger.RepositoryTrigger


module Amazonka.CodeCommit.Types.RepositoryTriggerExecutionFailure

-- | A trigger failed to run.
--   
--   <i>See:</i> <a>newRepositoryTriggerExecutionFailure</a> smart
--   constructor.
data RepositoryTriggerExecutionFailure
RepositoryTriggerExecutionFailure' :: Maybe Text -> Maybe Text -> RepositoryTriggerExecutionFailure

-- | Message information about the trigger that did not run.
[$sel:failureMessage:RepositoryTriggerExecutionFailure'] :: RepositoryTriggerExecutionFailure -> Maybe Text

-- | The name of the trigger that did not run.
[$sel:trigger:RepositoryTriggerExecutionFailure'] :: RepositoryTriggerExecutionFailure -> Maybe Text

-- | Create a value of <a>RepositoryTriggerExecutionFailure</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:RepositoryTriggerExecutionFailure'</a>,
--   <a>repositoryTriggerExecutionFailure_failureMessage</a> - Message
--   information about the trigger that did not run.
--   
--   <a>$sel:trigger:RepositoryTriggerExecutionFailure'</a>,
--   <a>repositoryTriggerExecutionFailure_trigger</a> - The name of the
--   trigger that did not run.
newRepositoryTriggerExecutionFailure :: RepositoryTriggerExecutionFailure

-- | Message information about the trigger that did not run.
repositoryTriggerExecutionFailure_failureMessage :: Lens' RepositoryTriggerExecutionFailure (Maybe Text)

-- | The name of the trigger that did not run.
repositoryTriggerExecutionFailure_trigger :: Lens' RepositoryTriggerExecutionFailure (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.RepositoryTriggerExecutionFailure.RepositoryTriggerExecutionFailure
instance GHC.Show.Show Amazonka.CodeCommit.Types.RepositoryTriggerExecutionFailure.RepositoryTriggerExecutionFailure
instance GHC.Read.Read Amazonka.CodeCommit.Types.RepositoryTriggerExecutionFailure.RepositoryTriggerExecutionFailure
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.RepositoryTriggerExecutionFailure.RepositoryTriggerExecutionFailure
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.RepositoryTriggerExecutionFailure.RepositoryTriggerExecutionFailure
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.RepositoryTriggerExecutionFailure.RepositoryTriggerExecutionFailure
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.RepositoryTriggerExecutionFailure.RepositoryTriggerExecutionFailure


module Amazonka.CodeCommit.Types.SetFileModeEntry

-- | Information about the file mode changes.
--   
--   <i>See:</i> <a>newSetFileModeEntry</a> smart constructor.
data SetFileModeEntry
SetFileModeEntry' :: Text -> FileModeTypeEnum -> SetFileModeEntry

-- | The full path to the file, including the name of the file.
[$sel:filePath:SetFileModeEntry'] :: SetFileModeEntry -> Text

-- | The file mode for the file.
[$sel:fileMode:SetFileModeEntry'] :: SetFileModeEntry -> FileModeTypeEnum

-- | Create a value of <a>SetFileModeEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:SetFileModeEntry'</a>,
--   <a>setFileModeEntry_filePath</a> - The full path to the file,
--   including the name of the file.
--   
--   <a>$sel:fileMode:SetFileModeEntry'</a>,
--   <a>setFileModeEntry_fileMode</a> - The file mode for the file.
newSetFileModeEntry :: Text -> FileModeTypeEnum -> SetFileModeEntry

-- | The full path to the file, including the name of the file.
setFileModeEntry_filePath :: Lens' SetFileModeEntry Text

-- | The file mode for the file.
setFileModeEntry_fileMode :: Lens' SetFileModeEntry FileModeTypeEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.SetFileModeEntry.SetFileModeEntry
instance GHC.Show.Show Amazonka.CodeCommit.Types.SetFileModeEntry.SetFileModeEntry
instance GHC.Read.Read Amazonka.CodeCommit.Types.SetFileModeEntry.SetFileModeEntry
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.SetFileModeEntry.SetFileModeEntry
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.SetFileModeEntry.SetFileModeEntry
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.SetFileModeEntry.SetFileModeEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.SetFileModeEntry.SetFileModeEntry


module Amazonka.CodeCommit.Types.ConflictResolution

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
--   
--   <i>See:</i> <a>newConflictResolution</a> smart constructor.
data ConflictResolution
ConflictResolution' :: Maybe [SetFileModeEntry] -> Maybe [DeleteFileEntry] -> Maybe [ReplaceContentEntry] -> ConflictResolution

-- | File modes that are set as part of the merge conflict resolution.
[$sel:setFileModes:ConflictResolution'] :: ConflictResolution -> Maybe [SetFileModeEntry]

-- | Files to be deleted as part of the merge conflict resolution.
[$sel:deleteFiles:ConflictResolution'] :: ConflictResolution -> Maybe [DeleteFileEntry]

-- | Files to have content replaced as part of the merge conflict
--   resolution.
[$sel:replaceContents:ConflictResolution'] :: ConflictResolution -> Maybe [ReplaceContentEntry]

-- | Create a value of <a>ConflictResolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:setFileModes:ConflictResolution'</a>,
--   <a>conflictResolution_setFileModes</a> - File modes that are set as
--   part of the merge conflict resolution.
--   
--   <a>$sel:deleteFiles:ConflictResolution'</a>,
--   <a>conflictResolution_deleteFiles</a> - Files to be deleted as part of
--   the merge conflict resolution.
--   
--   <a>$sel:replaceContents:ConflictResolution'</a>,
--   <a>conflictResolution_replaceContents</a> - Files to have content
--   replaced as part of the merge conflict resolution.
newConflictResolution :: ConflictResolution

-- | File modes that are set as part of the merge conflict resolution.
conflictResolution_setFileModes :: Lens' ConflictResolution (Maybe [SetFileModeEntry])

-- | Files to be deleted as part of the merge conflict resolution.
conflictResolution_deleteFiles :: Lens' ConflictResolution (Maybe [DeleteFileEntry])

-- | Files to have content replaced as part of the merge conflict
--   resolution.
conflictResolution_replaceContents :: Lens' ConflictResolution (Maybe [ReplaceContentEntry])
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.ConflictResolution.ConflictResolution
instance GHC.Show.Show Amazonka.CodeCommit.Types.ConflictResolution.ConflictResolution
instance GHC.Read.Read Amazonka.CodeCommit.Types.ConflictResolution.ConflictResolution
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.ConflictResolution.ConflictResolution
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.ConflictResolution.ConflictResolution
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.ConflictResolution.ConflictResolution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.ConflictResolution.ConflictResolution


module Amazonka.CodeCommit.Types.SortByEnum
newtype SortByEnum
SortByEnum' :: Text -> SortByEnum
[fromSortByEnum] :: SortByEnum -> Text
pattern SortByEnum_LastModifiedDate :: SortByEnum
pattern SortByEnum_RepositoryName :: SortByEnum
instance Amazonka.Data.XML.ToXML Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Amazonka.Data.XML.FromXML Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Amazonka.Data.Log.ToLog Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Amazonka.Data.Text.ToText Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Amazonka.Data.Text.FromText Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance GHC.Classes.Ord Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance GHC.Read.Read Amazonka.CodeCommit.Types.SortByEnum.SortByEnum
instance GHC.Show.Show Amazonka.CodeCommit.Types.SortByEnum.SortByEnum


module Amazonka.CodeCommit.Types.SourceFileSpecifier

-- | Information about a source file that is part of changes made in a
--   commit.
--   
--   <i>See:</i> <a>newSourceFileSpecifier</a> smart constructor.
data SourceFileSpecifier
SourceFileSpecifier' :: Maybe Bool -> Text -> SourceFileSpecifier

-- | Whether to remove the source file from the parent commit.
[$sel:isMove:SourceFileSpecifier'] :: SourceFileSpecifier -> Maybe Bool

-- | The full path to the file, including the name of the file.
[$sel:filePath:SourceFileSpecifier'] :: SourceFileSpecifier -> Text

-- | Create a value of <a>SourceFileSpecifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isMove:SourceFileSpecifier'</a>,
--   <a>sourceFileSpecifier_isMove</a> - Whether to remove the source file
--   from the parent commit.
--   
--   <a>$sel:filePath:SourceFileSpecifier'</a>,
--   <a>sourceFileSpecifier_filePath</a> - The full path to the file,
--   including the name of the file.
newSourceFileSpecifier :: Text -> SourceFileSpecifier

-- | Whether to remove the source file from the parent commit.
sourceFileSpecifier_isMove :: Lens' SourceFileSpecifier (Maybe Bool)

-- | The full path to the file, including the name of the file.
sourceFileSpecifier_filePath :: Lens' SourceFileSpecifier Text
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.SourceFileSpecifier.SourceFileSpecifier
instance GHC.Show.Show Amazonka.CodeCommit.Types.SourceFileSpecifier.SourceFileSpecifier
instance GHC.Read.Read Amazonka.CodeCommit.Types.SourceFileSpecifier.SourceFileSpecifier
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.SourceFileSpecifier.SourceFileSpecifier
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.SourceFileSpecifier.SourceFileSpecifier
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.SourceFileSpecifier.SourceFileSpecifier
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.SourceFileSpecifier.SourceFileSpecifier


module Amazonka.CodeCommit.Types.PutFileEntry

-- | Information about a file added or updated as part of a commit.
--   
--   <i>See:</i> <a>newPutFileEntry</a> smart constructor.
data PutFileEntry
PutFileEntry' :: Maybe Base64 -> Maybe FileModeTypeEnum -> Maybe SourceFileSpecifier -> Text -> PutFileEntry

-- | The content of the file, if a source file is not specified.
[$sel:fileContent:PutFileEntry'] :: PutFileEntry -> Maybe Base64

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
[$sel:fileMode:PutFileEntry'] :: PutFileEntry -> Maybe FileModeTypeEnum

-- | The name and full path of the file that contains the changes you want
--   to make as part of the commit, if you are not providing the file
--   content directly.
[$sel:sourceFile:PutFileEntry'] :: PutFileEntry -> Maybe SourceFileSpecifier

-- | The full path to the file in the repository, including the name of the
--   file.
[$sel:filePath:PutFileEntry'] :: PutFileEntry -> Text

-- | Create a value of <a>PutFileEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileContent:PutFileEntry'</a>, <a>putFileEntry_fileContent</a>
--   - The content of the file, if a source file is not specified.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:fileMode:PutFileEntry'</a>, <a>putFileEntry_fileMode</a> - The
--   extrapolated file mode permissions for the file. Valid values include
--   EXECUTABLE and NORMAL.
--   
--   <a>$sel:sourceFile:PutFileEntry'</a>, <a>putFileEntry_sourceFile</a> -
--   The name and full path of the file that contains the changes you want
--   to make as part of the commit, if you are not providing the file
--   content directly.
--   
--   <a>$sel:filePath:PutFileEntry'</a>, <a>putFileEntry_filePath</a> - The
--   full path to the file in the repository, including the name of the
--   file.
newPutFileEntry :: Text -> PutFileEntry

-- | The content of the file, if a source file is not specified.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
putFileEntry_fileContent :: Lens' PutFileEntry (Maybe ByteString)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
putFileEntry_fileMode :: Lens' PutFileEntry (Maybe FileModeTypeEnum)

-- | The name and full path of the file that contains the changes you want
--   to make as part of the commit, if you are not providing the file
--   content directly.
putFileEntry_sourceFile :: Lens' PutFileEntry (Maybe SourceFileSpecifier)

-- | The full path to the file in the repository, including the name of the
--   file.
putFileEntry_filePath :: Lens' PutFileEntry Text
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.PutFileEntry.PutFileEntry
instance GHC.Show.Show Amazonka.CodeCommit.Types.PutFileEntry.PutFileEntry
instance GHC.Read.Read Amazonka.CodeCommit.Types.PutFileEntry.PutFileEntry
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.PutFileEntry.PutFileEntry
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.PutFileEntry.PutFileEntry
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.PutFileEntry.PutFileEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.PutFileEntry.PutFileEntry


module Amazonka.CodeCommit.Types.SubModule

-- | Returns information about a submodule reference in a repository
--   folder.
--   
--   <i>See:</i> <a>newSubModule</a> smart constructor.
data SubModule
SubModule' :: Maybe Text -> Maybe Text -> Maybe Text -> SubModule

-- | The commit ID that contains the reference to the submodule.
[$sel:commitId:SubModule'] :: SubModule -> Maybe Text

-- | The fully qualified path to the folder that contains the reference to
--   the submodule.
[$sel:absolutePath:SubModule'] :: SubModule -> Maybe Text

-- | The relative path of the submodule from the folder where the query
--   originated.
[$sel:relativePath:SubModule'] :: SubModule -> Maybe Text

-- | Create a value of <a>SubModule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:SubModule'</a>, <a>subModule_commitId</a> - The
--   commit ID that contains the reference to the submodule.
--   
--   <a>$sel:absolutePath:SubModule'</a>, <a>subModule_absolutePath</a> -
--   The fully qualified path to the folder that contains the reference to
--   the submodule.
--   
--   <a>$sel:relativePath:SubModule'</a>, <a>subModule_relativePath</a> -
--   The relative path of the submodule from the folder where the query
--   originated.
newSubModule :: SubModule

-- | The commit ID that contains the reference to the submodule.
subModule_commitId :: Lens' SubModule (Maybe Text)

-- | The fully qualified path to the folder that contains the reference to
--   the submodule.
subModule_absolutePath :: Lens' SubModule (Maybe Text)

-- | The relative path of the submodule from the folder where the query
--   originated.
subModule_relativePath :: Lens' SubModule (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.SubModule.SubModule
instance GHC.Show.Show Amazonka.CodeCommit.Types.SubModule.SubModule
instance GHC.Read.Read Amazonka.CodeCommit.Types.SubModule.SubModule
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.SubModule.SubModule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.SubModule.SubModule
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.SubModule.SubModule
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.SubModule.SubModule


module Amazonka.CodeCommit.Types.SymbolicLink

-- | Returns information about a symbolic link in a repository folder.
--   
--   <i>See:</i> <a>newSymbolicLink</a> smart constructor.
data SymbolicLink
SymbolicLink' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> Maybe Text -> SymbolicLink

-- | The fully qualified path to the folder that contains the symbolic
--   link.
[$sel:absolutePath:SymbolicLink'] :: SymbolicLink -> Maybe Text

-- | The file mode permissions of the blob that cotains information about
--   the symbolic link.
[$sel:fileMode:SymbolicLink'] :: SymbolicLink -> Maybe FileModeTypeEnum

-- | The blob ID that contains the information about the symbolic link.
[$sel:blobId:SymbolicLink'] :: SymbolicLink -> Maybe Text

-- | The relative path of the symbolic link from the folder where the query
--   originated.
[$sel:relativePath:SymbolicLink'] :: SymbolicLink -> Maybe Text

-- | Create a value of <a>SymbolicLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:SymbolicLink'</a>,
--   <a>symbolicLink_absolutePath</a> - The fully qualified path to the
--   folder that contains the symbolic link.
--   
--   <a>$sel:fileMode:SymbolicLink'</a>, <a>symbolicLink_fileMode</a> - The
--   file mode permissions of the blob that cotains information about the
--   symbolic link.
--   
--   <a>$sel:blobId:SymbolicLink'</a>, <a>symbolicLink_blobId</a> - The
--   blob ID that contains the information about the symbolic link.
--   
--   <a>$sel:relativePath:SymbolicLink'</a>,
--   <a>symbolicLink_relativePath</a> - The relative path of the symbolic
--   link from the folder where the query originated.
newSymbolicLink :: SymbolicLink

-- | The fully qualified path to the folder that contains the symbolic
--   link.
symbolicLink_absolutePath :: Lens' SymbolicLink (Maybe Text)

-- | The file mode permissions of the blob that cotains information about
--   the symbolic link.
symbolicLink_fileMode :: Lens' SymbolicLink (Maybe FileModeTypeEnum)

-- | The blob ID that contains the information about the symbolic link.
symbolicLink_blobId :: Lens' SymbolicLink (Maybe Text)

-- | The relative path of the symbolic link from the folder where the query
--   originated.
symbolicLink_relativePath :: Lens' SymbolicLink (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.SymbolicLink.SymbolicLink
instance GHC.Show.Show Amazonka.CodeCommit.Types.SymbolicLink.SymbolicLink
instance GHC.Read.Read Amazonka.CodeCommit.Types.SymbolicLink.SymbolicLink
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.SymbolicLink.SymbolicLink
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.SymbolicLink.SymbolicLink
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.SymbolicLink.SymbolicLink
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.SymbolicLink.SymbolicLink


module Amazonka.CodeCommit.Types.Target

-- | Returns information about a target for a pull request.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe Text -> Text -> Text -> Target

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
[$sel:destinationReference:Target'] :: Target -> Maybe Text

-- | The name of the repository that contains the pull request.
[$sel:repositoryName:Target'] :: Target -> Text

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
[$sel:sourceReference:Target'] :: Target -> Text

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationReference:Target'</a>,
--   <a>target_destinationReference</a> - The branch of the repository
--   where the pull request changes are merged. Also known as the
--   destination branch.
--   
--   <a>$sel:repositoryName:Target'</a>, <a>target_repositoryName</a> - The
--   name of the repository that contains the pull request.
--   
--   <a>$sel:sourceReference:Target'</a>, <a>target_sourceReference</a> -
--   The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
newTarget :: Text -> Text -> Target

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
target_destinationReference :: Lens' Target (Maybe Text)

-- | The name of the repository that contains the pull request.
target_repositoryName :: Lens' Target Text

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
target_sourceReference :: Lens' Target Text
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Target.Target
instance GHC.Show.Show Amazonka.CodeCommit.Types.Target.Target
instance GHC.Read.Read Amazonka.CodeCommit.Types.Target.Target
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Target.Target
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Target.Target
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Target.Target
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.Types.Target.Target


module Amazonka.CodeCommit.Types.UserInfo

-- | Information about the user who made a specified commit.
--   
--   <i>See:</i> <a>newUserInfo</a> smart constructor.
data UserInfo
UserInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> UserInfo

-- | The email address associated with the user who made the commit, if
--   any.
[$sel:email:UserInfo'] :: UserInfo -> Maybe Text

-- | The date when the specified commit was commited, in timestamp format
--   with GMT offset.
[$sel:date:UserInfo'] :: UserInfo -> Maybe Text

-- | The name of the user who made the specified commit.
[$sel:name:UserInfo'] :: UserInfo -> Maybe Text

-- | Create a value of <a>UserInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:UserInfo'</a>, <a>userInfo_email</a> - The email address
--   associated with the user who made the commit, if any.
--   
--   <a>$sel:date:UserInfo'</a>, <a>userInfo_date</a> - The date when the
--   specified commit was commited, in timestamp format with GMT offset.
--   
--   <a>$sel:name:UserInfo'</a>, <a>userInfo_name</a> - The name of the
--   user who made the specified commit.
newUserInfo :: UserInfo

-- | The email address associated with the user who made the commit, if
--   any.
userInfo_email :: Lens' UserInfo (Maybe Text)

-- | The date when the specified commit was commited, in timestamp format
--   with GMT offset.
userInfo_date :: Lens' UserInfo (Maybe Text)

-- | The name of the user who made the specified commit.
userInfo_name :: Lens' UserInfo (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.UserInfo.UserInfo
instance GHC.Show.Show Amazonka.CodeCommit.Types.UserInfo.UserInfo
instance GHC.Read.Read Amazonka.CodeCommit.Types.UserInfo.UserInfo
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.UserInfo.UserInfo
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.UserInfo.UserInfo
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.UserInfo.UserInfo
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.UserInfo.UserInfo


module Amazonka.CodeCommit.Types.Commit

-- | Returns information about a specific commit.
--   
--   <i>See:</i> <a>newCommit</a> smart constructor.
data Commit
Commit' :: Maybe Text -> Maybe UserInfo -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe UserInfo -> Maybe Text -> Commit

-- | The full SHA ID of the specified commit.
[$sel:commitId:Commit'] :: Commit -> Maybe Text

-- | Information about the person who committed the specified commit, also
--   known as the committer. Information includes the date in timestamp
--   format with GMT offset, the name of the committer, and the email
--   address for the committer, as configured in Git.
--   
--   For more information about the difference between an author and a
--   committer in Git, see <a>Viewing the Commit History</a> in Pro Git by
--   Scott Chacon and Ben Straub.
[$sel:committer:Commit'] :: Commit -> Maybe UserInfo

-- | Tree information for the specified commit.
[$sel:treeId:Commit'] :: Commit -> Maybe Text

-- | Any other data associated with the specified commit.
[$sel:additionalData:Commit'] :: Commit -> Maybe Text

-- | A list of parent commits for the specified commit. Each parent commit
--   ID is the full commit ID.
[$sel:parents:Commit'] :: Commit -> Maybe [Text]

-- | Information about the author of the specified commit. Information
--   includes the date in timestamp format with GMT offset, the name of the
--   author, and the email address for the author, as configured in Git.
[$sel:author:Commit'] :: Commit -> Maybe UserInfo

-- | The commit message associated with the specified commit.
[$sel:message:Commit'] :: Commit -> Maybe Text

-- | Create a value of <a>Commit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:Commit'</a>, <a>commit_commitId</a> - The full SHA ID
--   of the specified commit.
--   
--   <a>$sel:committer:Commit'</a>, <a>commit_committer</a> - Information
--   about the person who committed the specified commit, also known as the
--   committer. Information includes the date in timestamp format with GMT
--   offset, the name of the committer, and the email address for the
--   committer, as configured in Git.
--   
--   For more information about the difference between an author and a
--   committer in Git, see <a>Viewing the Commit History</a> in Pro Git by
--   Scott Chacon and Ben Straub.
--   
--   <a>$sel:treeId:Commit'</a>, <a>commit_treeId</a> - Tree information
--   for the specified commit.
--   
--   <a>$sel:additionalData:Commit'</a>, <a>commit_additionalData</a> - Any
--   other data associated with the specified commit.
--   
--   <a>$sel:parents:Commit'</a>, <a>commit_parents</a> - A list of parent
--   commits for the specified commit. Each parent commit ID is the full
--   commit ID.
--   
--   <a>$sel:author:Commit'</a>, <a>commit_author</a> - Information about
--   the author of the specified commit. Information includes the date in
--   timestamp format with GMT offset, the name of the author, and the
--   email address for the author, as configured in Git.
--   
--   <a>$sel:message:Commit'</a>, <a>commit_message</a> - The commit
--   message associated with the specified commit.
newCommit :: Commit

-- | The full SHA ID of the specified commit.
commit_commitId :: Lens' Commit (Maybe Text)

-- | Information about the person who committed the specified commit, also
--   known as the committer. Information includes the date in timestamp
--   format with GMT offset, the name of the committer, and the email
--   address for the committer, as configured in Git.
--   
--   For more information about the difference between an author and a
--   committer in Git, see <a>Viewing the Commit History</a> in Pro Git by
--   Scott Chacon and Ben Straub.
commit_committer :: Lens' Commit (Maybe UserInfo)

-- | Tree information for the specified commit.
commit_treeId :: Lens' Commit (Maybe Text)

-- | Any other data associated with the specified commit.
commit_additionalData :: Lens' Commit (Maybe Text)

-- | A list of parent commits for the specified commit. Each parent commit
--   ID is the full commit ID.
commit_parents :: Lens' Commit (Maybe [Text])

-- | Information about the author of the specified commit. Information
--   includes the date in timestamp format with GMT offset, the name of the
--   author, and the email address for the author, as configured in Git.
commit_author :: Lens' Commit (Maybe UserInfo)

-- | The commit message associated with the specified commit.
commit_message :: Lens' Commit (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeCommit.Types.Commit.Commit
instance GHC.Show.Show Amazonka.CodeCommit.Types.Commit.Commit
instance GHC.Read.Read Amazonka.CodeCommit.Types.Commit.Commit
instance GHC.Classes.Eq Amazonka.CodeCommit.Types.Commit.Commit
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeCommit.Types.Commit.Commit
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.Types.Commit.Commit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.Types.Commit.Commit


module Amazonka.CodeCommit.Types

-- | API version <tt>2015-04-13</tt> of the Amazon CodeCommit SDK
--   configuration.
defaultService :: Service

-- | The value of the reaction is not valid. For more information, see the
--   <a>AWS CodeCommit User Guide</a>.
_InvalidReactionValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The AWS Region for the trigger target does not match the AWS Region
--   for the repository. Triggers must be created in the same Region as the
--   target for the trigger.
_InvalidRepositoryTriggerRegionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified continuation token is not valid.
_InvalidContinuationTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request cannot be merged automatically into the destination
--   branch. You must manually merge the branches and resolve any
--   conflicts.
_ManualMergeRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An array of target objects is required. It cannot be empty or null.
_TargetsRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified tag is not valid. Key names cannot be prefixed with
--   aws:.
_InvalidSystemTagUsageException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because no files have been specified as
--   added, updated, or changed (PutFile or DeleteFile) for the commit.
_FileEntryRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | No encryption key was found.
_EncryptionKeyNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The divergence between the tips of the provided commit specifiers is
--   too great to determine whether there might be any merge conflicts.
--   Locally compare the specifiers using <tt>git diff</tt> or a diff tool.
_TipsDivergenceExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more branch names specified for the trigger is not valid.
_InvalidRepositoryTriggerBranchNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request status cannot be updated because it is already
--   closed.
_PullRequestAlreadyClosedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The custom data provided for the trigger is not valid.
_InvalidRepositoryTriggerCustomDataException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A file cannot be added to the repository because the specified path
--   name has the same name as a file that already exists in this
--   repository. Either provide a different name for the file, or specify a
--   different path for the file.
_DirectoryNameConflictsWithFileNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified reference does not exist. You must provide a full commit
--   ID.
_ReferenceDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An approval rule with that name already exists. Approval rule names
--   must be unique within the scope of a pull request.
_ApprovalRuleNameAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon Resource Name (ARN) does not exist in the AWS
--   account.
_ActorDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A pull request ID is required, but none was provided.
_PullRequestIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request has already had its approval rules set to override.
_OverrideAlreadySetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The SHA-256 hash signature for the rule content is not valid.
_InvalidRuleContentSha256Exception :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified email address either contains one or more characters
--   that are not allowed, or it exceeds the maximum number of characters
--   allowed for an email address.
_InvalidEmailException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit message is too long. Provide a shorter string.
_CommitMessageLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified blob does not exist.
_BlobIdDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of allowed repository names was exceeded.
--   Currently, this number is 100.
_MaximumRepositoryNamesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A list of tag keys is required. The list cannot be empty or null.
_TagKeysListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because one or more files specified in
--   the commit reference both a file and a folder.
_PutFileEntryConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified folder does not exist. Either the folder name is not
--   correct, or you did not enter the full path to the folder.
_FolderDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified repository description is not valid.
_InvalidRepositoryDescriptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified repository name already exists.
_RepositoryNameExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A reference name is required, but none was provided.
_ReferenceNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of triggers allowed for the repository was exceeded.
_MaximumRepositoryTriggersExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified approval rule does not exist.
_ApprovalRuleDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified reference name is not valid.
_InvalidBranchNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A branch name is required, but was not specified.
_BranchNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A merge option or stategy is required, and none was provided.
_MergeOptionRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The location of the file is not valid. Make sure that you include the
--   file name and extension.
_InvalidFileLocationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The before commit ID and the after commit ID are the same, which is
--   not valid. The before commit ID and the after commit ID must be
--   different commit IDs.
_BeforeCommitIdAndAfterCommitIdAreSameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The list of triggers for the repository is required, but was not
--   specified.
_RepositoryTriggersListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client request token is not valid. Either the token is not in a
--   valid format, or the token has been used in a previous request and
--   cannot be reused.
_IdempotencyParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The encryption key is not available.
_EncryptionKeyUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Either the enum is not in a valid format, or the specified file
--   version enum is not valid in respect to the current file version.
_InvalidRelativeFileVersionEnumException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) for the trigger is not valid for the
--   specified destination. The most common reason for this error is that
--   the ARN does not meet the requirements for the service type.
_InvalidRepositoryTriggerDestinationArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of reactions has been exceeded. Reactions are limited to
--   one reaction per user for each individual comment ID.
_ReactionLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A blob ID is required, but was not specified.
_BlobIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one repository name object is required, but was not
--   specified.
_RepositoryNamesRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A replacement type is required.
_ReplacementTypeRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) is not valid. Make sure that you have
--   provided the full ARN for the user who initiated the change for the
--   pull request, and then try again.
_InvalidActorArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The comment ID is not in a valid format. Make sure that you have
--   provided the full comment ID.
_InvalidCommentIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because a specified file path points to a
--   submodule. Verify that the destination files have valid file paths
--   that do not point to a submodule.
_FilePathConflictsWithSubmodulePathException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request description is not valid. Descriptions cannot be more
--   than 1,000 characters.
_InvalidDescriptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An approval rule name is required, but was not specified.
_ApprovalRuleNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified blob is not valid.
_InvalidBlobIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request ID could not be found. Make sure that you have
--   specified the correct repository name and pull request ID, and then
--   try again.
_PullRequestDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because no changes will be made to the
--   repository as a result of this commit. A commit must contain at least
--   one change.
_NoChangeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified sort order is not valid.
_InvalidOrderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The name for the approval rule is not valid.
_InvalidApprovalRuleNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified branch does not exist.
_BranchDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified branch is the default branch for the repository, and
--   cannot be deleted. To delete this branch, you must first set another
--   branch as the default branch.
_DefaultBranchCannotBeDeletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because at least one of the overall
--   changes in the commit results in a folder whose contents exceed the
--   limit of 6 MB. Either reduce the number and size of your changes, or
--   split the changes across multiple folders.
_FolderContentSizeLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified deletion parameter is not valid.
_InvalidDeletionParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) of the user or identity is not valid.
_InvalidReactionUserArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The map of tags is not valid.
_InvalidTagsMapException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified path is not valid.
_InvalidPathException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The folderPath for a location cannot be null.
_PathRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified target branch is not valid.
_InvalidTargetBranchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A name for the trigger is required, but was not specified.
_RepositoryTriggerNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified file mode permission is not valid. For a list of valid
--   file mode permissions, see PutFile.
_InvalidFileModeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of approval rule templates has been exceeded for
--   this AWS Region.
_NumberOfRuleTemplatesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because no file mode has been specified.
--   A file mode is required to update mode permissions for a file.
_FileModeRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request status is not valid. The only valid values are
--   <tt>OPEN</tt> and <tt>CLOSED</tt>.
_InvalidPullRequestStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content for the approval rule template is empty. You must provide
--   some content for an approval rule template. The content cannot be
--   null.
_ApprovalRuleTemplateContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An approval state is required, but was not specified.
_ApprovalStateRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The merge cannot be completed because the target branch has been
--   modified. Another user might have modified the target branch while the
--   merge was in progress. Wait a few minutes, and then try again.
_ConcurrentReferenceUpdateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A parent commit ID is required. To view the full commit ID of a branch
--   in a repository, use GetBranch or a Git command (for example, git pull
--   or git log).
_ParentCommitIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The source commit specifier is not valid. You must provide a valid
--   branch name, tag, or full commit ID.
_InvalidSourceCommitSpecifierException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified repository does not exist.
_RepositoryDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content for the approval rule is not valid.
_InvalidApprovalRuleContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of branches for the trigger was exceeded.
_MaximumBranchesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The title of the pull request is not valid. Pull request titles cannot
--   exceed 100 characters in length.
_InvalidTitleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The comment is too large. Comments are limited to 1,000 characters.
_CommentContentSizeLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request cannot be merged because one or more approval rules
--   applied to the pull request have conditions that have not been met.
_PullRequestApprovalRulesNotSatisfiedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The parent commit ID is not valid. The commit ID cannot be empty, and
--   must match the head commit ID for the branch of the repository where
--   you want to add or update a file.
_InvalidParentCommitIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request event type is not valid.
_InvalidPullRequestEventTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The file cannot be added because it is empty. Empty files cannot be
--   added to the repository with this API.
_FileContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The source branch and destination branch for the pull request are the
--   same. You must specify different branches for the source and
--   destination.
_SourceAndDestinationAreSameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | USE_NEW_CONTENT was specified, but no replacement content has been
--   provided.
_ReplacementContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because one of the changes specifies
--   copying or moving a .gitkeep file.
_RestrictedSourceFileException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified path does not exist.
_PathDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value for the resource ARN is not valid. For more information
--   about resources in AWS CodeCommit, see <a>CodeCommit Resources and
--   Operations</a> in the AWS CodeCommit User Guide.
_InvalidResourceArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of tags for an AWS CodeCommit resource has been
--   exceeded.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An encryption integrity check failed.
_EncryptionIntegrityChecksFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because one or more changes in this
--   commit duplicate actions in the same file path. For example, you
--   cannot make the same delete request to the same file in the same file
--   path twice, or make a delete request and a move request to the same
--   file as part of the same commit.
_SamePathRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because no source files or file content
--   have been specified for the commit.
_SourceFileOrContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified value for the number of merge hunks to return is not
--   valid.
_InvalidMaxMergeHunksException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval rule cannot be modified for the pull request because it
--   was created by an approval rule template and applied to the pull
--   request automatically.
_CannotModifyApprovalRuleFromTemplateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Automerge was specified for resolving the conflict, but the
--   replacement type is not valid or content is missing.
_InvalidReplacementContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The file could not be added because the provided parent commit ID is
--   not the current tip of the specified branch. To view the full commit
--   ID of the current head of the branch, use GetBranch.
_ParentCommitIdOutdatedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one event for the trigger is required, but was not specified.
_RepositoryTriggerEventsListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The comment is empty. You must provide some content for a comment. The
--   content cannot be null.
_CommentContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A reaction value is required.
_ReactionValueRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The targets for the pull request is not valid or not in a valid
--   format. Targets are a list of target objects. Each target object must
--   contain the full values for the repository name, source branch, and
--   destination branch for a pull request.
_InvalidTargetsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An encryption key could not be accessed.
_EncryptionKeyAccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Cannot create the branch with the specified name because the commit
--   conflicts with an existing branch with the same name. Branch names
--   must be unique.
_BranchNameExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified commit is not valid.
_InvalidCommitException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A pull request target is required. It cannot be empty or null. A pull
--   request target must contain the full values for the repository name,
--   source branch, and destination branch for the pull request.
_TargetRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified conflict detail level is not valid.
_InvalidConflictDetailLevelException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The destination commit specifier is not valid. You must provide a
--   valid branch name, tag, or full commit ID.
_InvalidDestinationCommitSpecifierException :: AsError a => Getting (First ServiceError) a ServiceError

-- | No comment exists with the provided ID. Verify that you have used the
--   correct ID, and then try again.
_CommentDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified reference is not a supported type.
_ReferenceTypeNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A file cannot be added to the repository because the specified file
--   name has the same name as a directory in this repository. Either
--   provide another name for the file, or add the file in a directory that
--   does not match the file name.
_FileNameConflictsWithDirectoryNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user name is not valid because it has exceeded the character limit
--   for author names.
_NameLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified sort by value is not valid.
_InvalidSortByException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The encryption key is disabled.
_EncryptionKeyDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A commit was not specified.
_CommitRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot create the pull request because the repository has too many
--   open pull requests. The maximum number of open pull requests for a
--   repository is 1,000. Close one or more open pull requests, and then
--   try again.
_MaximumOpenPullRequestsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot create an approval rule template with that name because a
--   template with that name already exists in this AWS Region for your AWS
--   account. Approval rule template names must be unique.
_ApprovalRuleTemplateNameAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target for the pull request is not valid. A target must contain
--   the full values for the repository name, source branch, and
--   destination branch for the pull request.
_InvalidTargetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request ID is not valid. Make sure that you have provided the
--   full ID and that the pull request is in the specified repository, and
--   then try again.
_InvalidPullRequestIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot modify or delete this comment. Only comment authors can
--   modify or delete their comments.
_CommentNotCreatedByCallerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request status update is not valid. The only valid update is
--   from <tt>OPEN</tt> to <tt>CLOSED</tt>.
_InvalidPullRequestStatusUpdateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified reference name format is not valid. Reference names must
--   conform to the Git references format (for example, refs/heads/master).
--   For more information, see <a>Git Internals - Git References</a> or
--   consult your Git documentation.
_InvalidReferenceNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of approval rule templates for a repository has
--   been exceeded. You cannot associate more than 25 approval rule
--   templates with a repository.
_MaximumRuleTemplatesAssociatedWithRepositoryException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The file was not added or updated because the content of the file is
--   exactly the same as the content of that file in the repository and
--   branch that you specified.
_SameFileContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval rule template is associated with one or more
--   repositories. You cannot delete a template that is associated with a
--   repository. Remove all associations, and then try again.
_ApprovalRuleTemplateInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of approvals required for the approval rule exceeds the
--   maximum number allowed.
_MaximumNumberOfApprovalsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A commit ID was not specified.
_CommitIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified file does not exist. Verify that you have used the
--   correct file name, full path, and extension.
_FileDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified commit ID is not valid.
_InvalidCommitIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The list of tags is not valid.
_InvalidTagKeysListException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because both a source file and file
--   content have been specified for the same file. You cannot provide
--   both. Either specify a source file or provide the file content
--   directly.
_FileContentAndSourceFileSpecifiedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tip of the source branch in the destination repository does not
--   match the tip of the source branch specified in your request. The pull
--   request might have been updated. Make sure that you have the latest
--   changes.
_TipOfSourceReferenceIsDifferentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A destination ARN for the target service for the trigger is required,
--   but was not specified.
_RepositoryTriggerDestinationArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified conflict resolution strategy is not valid.
_InvalidConflictResolutionStrategyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client request token is not valid.
_InvalidClientRequestTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | More than one conflict resolution entries exists for the conflict. A
--   conflict can have only one conflict resolution entry.
_MultipleConflictResolutionEntriesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified commit does not exist or no commit was specified, and
--   the specified repository has no default branch.
_CommitDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one branch name is required, but was not specified in the
--   trigger configuration.
_RepositoryTriggerBranchNameListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A client request token is required. A client request token is an
--   unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
_ClientRequestTokenRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified approval rule template does not exist. Verify that the
--   name is correct and that you are signed in to the AWS Region where the
--   template was created, and then try again.
_ApprovalRuleTemplateDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag policy is not valid.
_TagPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified merge option is not valid for this operation. Not all
--   merge strategies are supported for all operations.
_InvalidMergeOptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval rule cannot be deleted from the pull request because it
--   was created by an approval rule template and applied to the pull
--   request automatically.
_CannotDeleteApprovalRuleFromTemplateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The comment ID is missing or null. A comment ID is required.
_CommentIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified number of maximum results is not valid.
_InvalidMaxResultsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified file exceeds the file size limit for AWS CodeCommit. For
--   more information about limits in AWS CodeCommit, see <a>AWS CodeCommit
--   User Guide</a>.
_FileTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An approval rule template name is required, but was not specified.
_ApprovalRuleTemplateNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of specified files to change as part of this commit exceeds
--   the maximum number of files that can be changed in a single commit.
--   Consider using a Git client for these changes.
_MaximumFileEntriesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified commit ID does not exist.
_CommitIdDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Automerge was specified for resolving the conflict, but the specified
--   replacement type is not valid.
_InvalidReplacementTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The revision ID is not valid. Use GetPullRequest to determine the
--   value.
_InvalidRevisionIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The revision ID provided in the request does not match the current
--   revision ID. Use GetPullRequest to retrieve the current revision ID.
_RevisionNotCurrentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The name of the approval rule template is not valid. Template names
--   must be between 1 and 100 valid characters in length. For more
--   information about limits in AWS CodeCommit, see <a>AWS CodeCommit User
--   Guide</a>.
_InvalidApprovalRuleTemplateNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval cannot be applied because the user approving the pull
--   request matches the user who created the pull request. You cannot
--   approve a pull request that you created.
_PullRequestCannotBeApprovedByAuthorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot include more than one repository in a pull request. Make
--   sure you have specified only one repository name in your request, and
--   then try again.
_MultipleRepositoriesInPullRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A revision ID is required, but was not provided.
_RevisionIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The file cannot be added because it is too large. The maximum file
--   size is 6 MB, and the combined file content change size is 7 MB.
--   Consider making these changes using a Git client.
_FileContentSizeLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The name of the trigger is not valid.
_InvalidRepositoryTriggerNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A repository name is required, but was not specified.
_RepositoryNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A repository resource limit was exceeded.
_RepositoryLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A map of tags is required.
_TagsMapRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more events specified for the trigger is not valid. Check to
--   make sure that all events specified match the requirements for allowed
--   events.
_InvalidRepositoryTriggerEventsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval rule cannot be added. The pull request has the maximum
--   number of approval rules associated with it.
_NumberOfRulesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified branch name is not valid because it is a tag name. Enter
--   the name of a branch in the repository. For a list of valid branch
--   names, use ListBranches.
_BranchNameIsTagNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified repository name is not valid.
--   
--   This exception occurs only when a specified repository name is not
--   valid. Other exceptions occur when a required repository parameter is
--   missing, or when a specified repository does not exist.
_InvalidRepositoryNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A list of commit IDs is required, but was either not specified or the
--   list was empty.
_CommitIdsListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of allowed commit IDs in a batch request is 100.
--   Verify that your batch requests contains no more than 100 commit IDs,
--   and then try again.
_CommitIdsLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) is not valid. Make sure that you have
--   provided the full ARN for the author of the pull request, and then try
--   again.
_InvalidAuthorArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of items to compare between the source or destination
--   branches and the merge base has exceeded the maximum allowed.
_MaximumItemsToCompareExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An override status is required, but no value was provided. Valid
--   values include OVERRIDE and REVOKE.
_OverrideStatusRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content for the approval rule is empty. You must provide some
--   content for an approval rule. The content cannot be null.
_ApprovalRuleContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of allowed conflict resolution entries was exceeded.
_MaximumConflictResolutionEntriesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A pull request status is required, but none was provided.
_PullRequestStatusRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified conflict resolution list is not valid.
_InvalidConflictResolutionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content of the approval rule template is not valid.
_InvalidApprovalRuleTemplateContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The state for the approval is not valid. Valid values include APPROVE
--   and REVOKE.
_InvalidApprovalStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The repository does not contain any pull requests with that pull
--   request ID. Use GetPullRequest to verify the correct repository name
--   for the pull request ID.
_RepositoryNotAssociatedWithPullRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of files to load exceeds the allowed limit.
_MaximumFileContentToLoadExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A pull request title is required. It cannot be empty or null.
_TitleRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The override status is not valid. Valid statuses are OVERRIDE and
--   REVOKE.
_InvalidOverrideStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The position is not valid. Make sure that the line number exists in
--   the version of the file you want to comment on.
_InvalidFilePositionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This comment has already been deleted. You cannot edit or delete a
--   deleted comment.
_CommentDeletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The parent commit ID is not valid because it does not exist. The
--   specified parent commit ID does not exist in the specified branch of
--   the repository.
_ParentCommitDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The description for the approval rule template is not valid because it
--   exceeds the maximum characters allowed for a description. For more
--   information about limits in AWS CodeCommit, see <a>AWS CodeCommit User
--   Guide</a>.
_InvalidApprovalRuleTemplateDescriptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is
--   required. For a list of valid resources in AWS CodeCommit, see
--   <a>CodeCommit Resources and Operations</a> in the AWS CodeCommit User
--   Guide.
_ResourceArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified value for the number of conflict files to return is not
--   valid.
_InvalidMaxConflictFilesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon Resource Name (ARN) does not exist in the AWS
--   account.
_AuthorDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ApprovalState
ApprovalState' :: Text -> ApprovalState
[fromApprovalState] :: ApprovalState -> Text
pattern ApprovalState_APPROVE :: ApprovalState
pattern ApprovalState_REVOKE :: ApprovalState
newtype ChangeTypeEnum
ChangeTypeEnum' :: Text -> ChangeTypeEnum
[fromChangeTypeEnum] :: ChangeTypeEnum -> Text
pattern ChangeTypeEnum_A :: ChangeTypeEnum
pattern ChangeTypeEnum_D :: ChangeTypeEnum
pattern ChangeTypeEnum_M :: ChangeTypeEnum
newtype ConflictDetailLevelTypeEnum
ConflictDetailLevelTypeEnum' :: Text -> ConflictDetailLevelTypeEnum
[fromConflictDetailLevelTypeEnum] :: ConflictDetailLevelTypeEnum -> Text
pattern ConflictDetailLevelTypeEnum_FILE_LEVEL :: ConflictDetailLevelTypeEnum
pattern ConflictDetailLevelTypeEnum_LINE_LEVEL :: ConflictDetailLevelTypeEnum
newtype ConflictResolutionStrategyTypeEnum
ConflictResolutionStrategyTypeEnum' :: Text -> ConflictResolutionStrategyTypeEnum
[fromConflictResolutionStrategyTypeEnum] :: ConflictResolutionStrategyTypeEnum -> Text
pattern ConflictResolutionStrategyTypeEnum_ACCEPT_DESTINATION :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_ACCEPT_SOURCE :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_AUTOMERGE :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_NONE :: ConflictResolutionStrategyTypeEnum
newtype FileModeTypeEnum
FileModeTypeEnum' :: Text -> FileModeTypeEnum
[fromFileModeTypeEnum] :: FileModeTypeEnum -> Text
pattern FileModeTypeEnum_EXECUTABLE :: FileModeTypeEnum
pattern FileModeTypeEnum_NORMAL :: FileModeTypeEnum
pattern FileModeTypeEnum_SYMLINK :: FileModeTypeEnum
newtype MergeOptionTypeEnum
MergeOptionTypeEnum' :: Text -> MergeOptionTypeEnum
[fromMergeOptionTypeEnum] :: MergeOptionTypeEnum -> Text
pattern MergeOptionTypeEnum_FAST_FORWARD_MERGE :: MergeOptionTypeEnum
pattern MergeOptionTypeEnum_SQUASH_MERGE :: MergeOptionTypeEnum
pattern MergeOptionTypeEnum_THREE_WAY_MERGE :: MergeOptionTypeEnum
newtype ObjectTypeEnum
ObjectTypeEnum' :: Text -> ObjectTypeEnum
[fromObjectTypeEnum] :: ObjectTypeEnum -> Text
pattern ObjectTypeEnum_DIRECTORY :: ObjectTypeEnum
pattern ObjectTypeEnum_FILE :: ObjectTypeEnum
pattern ObjectTypeEnum_GIT_LINK :: ObjectTypeEnum
pattern ObjectTypeEnum_SYMBOLIC_LINK :: ObjectTypeEnum
newtype OrderEnum
OrderEnum' :: Text -> OrderEnum
[fromOrderEnum] :: OrderEnum -> Text
pattern OrderEnum_Ascending :: OrderEnum
pattern OrderEnum_Descending :: OrderEnum
newtype OverrideStatus
OverrideStatus' :: Text -> OverrideStatus
[fromOverrideStatus] :: OverrideStatus -> Text
pattern OverrideStatus_OVERRIDE :: OverrideStatus
pattern OverrideStatus_REVOKE :: OverrideStatus
newtype PullRequestEventType
PullRequestEventType' :: Text -> PullRequestEventType
[fromPullRequestEventType] :: PullRequestEventType -> Text
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_CREATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_DELETED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_OVERRIDDEN :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_UPDATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_STATE_CHANGED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_CREATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_MERGE_STATE_CHANGED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_SOURCE_REFERENCE_UPDATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_STATUS_CHANGED :: PullRequestEventType
newtype PullRequestStatusEnum
PullRequestStatusEnum' :: Text -> PullRequestStatusEnum
[fromPullRequestStatusEnum] :: PullRequestStatusEnum -> Text
pattern PullRequestStatusEnum_CLOSED :: PullRequestStatusEnum
pattern PullRequestStatusEnum_OPEN :: PullRequestStatusEnum
newtype RelativeFileVersionEnum
RelativeFileVersionEnum' :: Text -> RelativeFileVersionEnum
[fromRelativeFileVersionEnum] :: RelativeFileVersionEnum -> Text
pattern RelativeFileVersionEnum_AFTER :: RelativeFileVersionEnum
pattern RelativeFileVersionEnum_BEFORE :: RelativeFileVersionEnum
newtype ReplacementTypeEnum
ReplacementTypeEnum' :: Text -> ReplacementTypeEnum
[fromReplacementTypeEnum] :: ReplacementTypeEnum -> Text
pattern ReplacementTypeEnum_KEEP_BASE :: ReplacementTypeEnum
pattern ReplacementTypeEnum_KEEP_DESTINATION :: ReplacementTypeEnum
pattern ReplacementTypeEnum_KEEP_SOURCE :: ReplacementTypeEnum
pattern ReplacementTypeEnum_USE_NEW_CONTENT :: ReplacementTypeEnum
newtype RepositoryTriggerEventEnum
RepositoryTriggerEventEnum' :: Text -> RepositoryTriggerEventEnum
[fromRepositoryTriggerEventEnum] :: RepositoryTriggerEventEnum -> Text
pattern RepositoryTriggerEventEnum_All :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_CreateReference :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_DeleteReference :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_UpdateReference :: RepositoryTriggerEventEnum
newtype SortByEnum
SortByEnum' :: Text -> SortByEnum
[fromSortByEnum] :: SortByEnum -> Text
pattern SortByEnum_LastModifiedDate :: SortByEnum
pattern SortByEnum_RepositoryName :: SortByEnum

-- | Returns information about a specific approval on a pull request.
--   
--   <i>See:</i> <a>newApproval</a> smart constructor.
data Approval
Approval' :: Maybe ApprovalState -> Maybe Text -> Approval

-- | The state of the approval, APPROVE or REVOKE. REVOKE states are not
--   stored.
[$sel:approvalState:Approval'] :: Approval -> Maybe ApprovalState

-- | The Amazon Resource Name (ARN) of the user.
[$sel:userArn:Approval'] :: Approval -> Maybe Text

-- | Create a value of <a>Approval</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalState:Approval'</a>, <a>approval_approvalState</a> -
--   The state of the approval, APPROVE or REVOKE. REVOKE states are not
--   stored.
--   
--   <a>$sel:userArn:Approval'</a>, <a>approval_userArn</a> - The Amazon
--   Resource Name (ARN) of the user.
newApproval :: Approval

-- | The state of the approval, APPROVE or REVOKE. REVOKE states are not
--   stored.
approval_approvalState :: Lens' Approval (Maybe ApprovalState)

-- | The Amazon Resource Name (ARN) of the user.
approval_userArn :: Lens' Approval (Maybe Text)

-- | Returns information about an approval rule.
--   
--   <i>See:</i> <a>newApprovalRule</a> smart constructor.
data ApprovalRule
ApprovalRule' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe OriginApprovalRuleTemplate -> Maybe POSIX -> Maybe Text -> ApprovalRule

-- | The SHA-256 hash signature for the content of the approval rule.
[$sel:ruleContentSha256:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | The date the approval rule was most recently changed, in timestamp
--   format.
[$sel:lastModifiedDate:ApprovalRule'] :: ApprovalRule -> Maybe POSIX

-- | The name of the approval rule.
[$sel:approvalRuleName:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | The system-generated ID of the approval rule.
[$sel:approvalRuleId:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule.
[$sel:lastModifiedUser:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | The approval rule template used to create the rule.
[$sel:originApprovalRuleTemplate:ApprovalRule'] :: ApprovalRule -> Maybe OriginApprovalRuleTemplate

-- | The date the approval rule was created, in timestamp format.
[$sel:creationDate:ApprovalRule'] :: ApprovalRule -> Maybe POSIX

-- | The content of the approval rule.
[$sel:approvalRuleContent:ApprovalRule'] :: ApprovalRule -> Maybe Text

-- | Create a value of <a>ApprovalRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleContentSha256:ApprovalRule'</a>,
--   <a>approvalRule_ruleContentSha256</a> - The SHA-256 hash signature for
--   the content of the approval rule.
--   
--   <a>$sel:lastModifiedDate:ApprovalRule'</a>,
--   <a>approvalRule_lastModifiedDate</a> - The date the approval rule was
--   most recently changed, in timestamp format.
--   
--   <a>$sel:approvalRuleName:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleName</a> - The name of the approval rule.
--   
--   <a>$sel:approvalRuleId:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleId</a> - The system-generated ID of the
--   approval rule.
--   
--   <a>$sel:lastModifiedUser:ApprovalRule'</a>,
--   <a>approvalRule_lastModifiedUser</a> - The Amazon Resource Name (ARN)
--   of the user who made the most recent changes to the approval rule.
--   
--   <a>$sel:originApprovalRuleTemplate:ApprovalRule'</a>,
--   <a>approvalRule_originApprovalRuleTemplate</a> - The approval rule
--   template used to create the rule.
--   
--   <a>$sel:creationDate:ApprovalRule'</a>,
--   <a>approvalRule_creationDate</a> - The date the approval rule was
--   created, in timestamp format.
--   
--   <a>$sel:approvalRuleContent:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleContent</a> - The content of the approval
--   rule.
newApprovalRule :: ApprovalRule

-- | The SHA-256 hash signature for the content of the approval rule.
approvalRule_ruleContentSha256 :: Lens' ApprovalRule (Maybe Text)

-- | The date the approval rule was most recently changed, in timestamp
--   format.
approvalRule_lastModifiedDate :: Lens' ApprovalRule (Maybe UTCTime)

-- | The name of the approval rule.
approvalRule_approvalRuleName :: Lens' ApprovalRule (Maybe Text)

-- | The system-generated ID of the approval rule.
approvalRule_approvalRuleId :: Lens' ApprovalRule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule.
approvalRule_lastModifiedUser :: Lens' ApprovalRule (Maybe Text)

-- | The approval rule template used to create the rule.
approvalRule_originApprovalRuleTemplate :: Lens' ApprovalRule (Maybe OriginApprovalRuleTemplate)

-- | The date the approval rule was created, in timestamp format.
approvalRule_creationDate :: Lens' ApprovalRule (Maybe UTCTime)

-- | The content of the approval rule.
approvalRule_approvalRuleContent :: Lens' ApprovalRule (Maybe Text)

-- | Returns information about an event for an approval rule.
--   
--   <i>See:</i> <a>newApprovalRuleEventMetadata</a> smart constructor.
data ApprovalRuleEventMetadata
ApprovalRuleEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> ApprovalRuleEventMetadata

-- | The name of the approval rule.
[$sel:approvalRuleName:ApprovalRuleEventMetadata'] :: ApprovalRuleEventMetadata -> Maybe Text

-- | The system-generated ID of the approval rule.
[$sel:approvalRuleId:ApprovalRuleEventMetadata'] :: ApprovalRuleEventMetadata -> Maybe Text

-- | The content of the approval rule.
[$sel:approvalRuleContent:ApprovalRuleEventMetadata'] :: ApprovalRuleEventMetadata -> Maybe Text

-- | Create a value of <a>ApprovalRuleEventMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleName:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleName</a> - The name of the
--   approval rule.
--   
--   <a>$sel:approvalRuleId:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleId</a> - The system-generated
--   ID of the approval rule.
--   
--   <a>$sel:approvalRuleContent:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleContent</a> - The content of
--   the approval rule.
newApprovalRuleEventMetadata :: ApprovalRuleEventMetadata

-- | The name of the approval rule.
approvalRuleEventMetadata_approvalRuleName :: Lens' ApprovalRuleEventMetadata (Maybe Text)

-- | The system-generated ID of the approval rule.
approvalRuleEventMetadata_approvalRuleId :: Lens' ApprovalRuleEventMetadata (Maybe Text)

-- | The content of the approval rule.
approvalRuleEventMetadata_approvalRuleContent :: Lens' ApprovalRuleEventMetadata (Maybe Text)

-- | Returns information about an override event for approval rules for a
--   pull request.
--   
--   <i>See:</i> <a>newApprovalRuleOverriddenEventMetadata</a> smart
--   constructor.
data ApprovalRuleOverriddenEventMetadata
ApprovalRuleOverriddenEventMetadata' :: Maybe OverrideStatus -> Maybe Text -> ApprovalRuleOverriddenEventMetadata

-- | The status of the override event.
[$sel:overrideStatus:ApprovalRuleOverriddenEventMetadata'] :: ApprovalRuleOverriddenEventMetadata -> Maybe OverrideStatus

-- | The revision ID of the pull request when the override event occurred.
[$sel:revisionId:ApprovalRuleOverriddenEventMetadata'] :: ApprovalRuleOverriddenEventMetadata -> Maybe Text

-- | Create a value of <a>ApprovalRuleOverriddenEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overrideStatus:ApprovalRuleOverriddenEventMetadata'</a>,
--   <a>approvalRuleOverriddenEventMetadata_overrideStatus</a> - The status
--   of the override event.
--   
--   <a>$sel:revisionId:ApprovalRuleOverriddenEventMetadata'</a>,
--   <a>approvalRuleOverriddenEventMetadata_revisionId</a> - The revision
--   ID of the pull request when the override event occurred.
newApprovalRuleOverriddenEventMetadata :: ApprovalRuleOverriddenEventMetadata

-- | The status of the override event.
approvalRuleOverriddenEventMetadata_overrideStatus :: Lens' ApprovalRuleOverriddenEventMetadata (Maybe OverrideStatus)

-- | The revision ID of the pull request when the override event occurred.
approvalRuleOverriddenEventMetadata_revisionId :: Lens' ApprovalRuleOverriddenEventMetadata (Maybe Text)

-- | Returns information about an approval rule template.
--   
--   <i>See:</i> <a>newApprovalRuleTemplate</a> smart constructor.
data ApprovalRuleTemplate
ApprovalRuleTemplate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ApprovalRuleTemplate

-- | The SHA-256 hash signature for the content of the approval rule
--   template.
[$sel:ruleContentSha256:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The system-generated ID of the approval rule template.
[$sel:approvalRuleTemplateId:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The date the approval rule template was most recently changed, in
--   timestamp format.
[$sel:lastModifiedDate:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe POSIX

-- | The description of the approval rule template.
[$sel:approvalRuleTemplateDescription:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The content of the approval rule template.
[$sel:approvalRuleTemplateContent:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule template.
[$sel:lastModifiedUser:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | The date the approval rule template was created, in timestamp format.
[$sel:creationDate:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe POSIX

-- | The name of the approval rule template.
[$sel:approvalRuleTemplateName:ApprovalRuleTemplate'] :: ApprovalRuleTemplate -> Maybe Text

-- | Create a value of <a>ApprovalRuleTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleContentSha256:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_ruleContentSha256</a> - The SHA-256 hash
--   signature for the content of the approval rule template.
--   
--   <a>$sel:approvalRuleTemplateId:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateId</a> - The
--   system-generated ID of the approval rule template.
--   
--   <a>$sel:lastModifiedDate:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_lastModifiedDate</a> - The date the approval
--   rule template was most recently changed, in timestamp format.
--   
--   <a>$sel:approvalRuleTemplateDescription:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateDescription</a> - The
--   description of the approval rule template.
--   
--   <a>$sel:approvalRuleTemplateContent:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateContent</a> - The content
--   of the approval rule template.
--   
--   <a>$sel:lastModifiedUser:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_lastModifiedUser</a> - The Amazon Resource
--   Name (ARN) of the user who made the most recent changes to the
--   approval rule template.
--   
--   <a>$sel:creationDate:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_creationDate</a> - The date the approval rule
--   template was created, in timestamp format.
--   
--   <a>$sel:approvalRuleTemplateName:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateName</a> - The name of the
--   approval rule template.
newApprovalRuleTemplate :: ApprovalRuleTemplate

-- | The SHA-256 hash signature for the content of the approval rule
--   template.
approvalRuleTemplate_ruleContentSha256 :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The system-generated ID of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateId :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The date the approval rule template was most recently changed, in
--   timestamp format.
approvalRuleTemplate_lastModifiedDate :: Lens' ApprovalRuleTemplate (Maybe UTCTime)

-- | The description of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateDescription :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The content of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateContent :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule template.
approvalRuleTemplate_lastModifiedUser :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The date the approval rule template was created, in timestamp format.
approvalRuleTemplate_creationDate :: Lens' ApprovalRuleTemplate (Maybe UTCTime)

-- | The name of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateName :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | Returns information about a change in the approval state for a pull
--   request.
--   
--   <i>See:</i> <a>newApprovalStateChangedEventMetadata</a> smart
--   constructor.
data ApprovalStateChangedEventMetadata
ApprovalStateChangedEventMetadata' :: Maybe ApprovalState -> Maybe Text -> ApprovalStateChangedEventMetadata

-- | The approval status for the pull request.
[$sel:approvalStatus:ApprovalStateChangedEventMetadata'] :: ApprovalStateChangedEventMetadata -> Maybe ApprovalState

-- | The revision ID of the pull request when the approval state changed.
[$sel:revisionId:ApprovalStateChangedEventMetadata'] :: ApprovalStateChangedEventMetadata -> Maybe Text

-- | Create a value of <a>ApprovalStateChangedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalStatus:ApprovalStateChangedEventMetadata'</a>,
--   <a>approvalStateChangedEventMetadata_approvalStatus</a> - The approval
--   status for the pull request.
--   
--   <a>$sel:revisionId:ApprovalStateChangedEventMetadata'</a>,
--   <a>approvalStateChangedEventMetadata_revisionId</a> - The revision ID
--   of the pull request when the approval state changed.
newApprovalStateChangedEventMetadata :: ApprovalStateChangedEventMetadata

-- | The approval status for the pull request.
approvalStateChangedEventMetadata_approvalStatus :: Lens' ApprovalStateChangedEventMetadata (Maybe ApprovalState)

-- | The revision ID of the pull request when the approval state changed.
approvalStateChangedEventMetadata_revisionId :: Lens' ApprovalStateChangedEventMetadata (Maybe Text)

-- | Returns information about errors in a
--   BatchAssociateApprovalRuleTemplateWithRepositories operation.
--   
--   <i>See:</i>
--   <a>newBatchAssociateApprovalRuleTemplateWithRepositoriesError</a>
--   smart constructor.
data BatchAssociateApprovalRuleTemplateWithRepositoriesError
BatchAssociateApprovalRuleTemplateWithRepositoriesError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchAssociateApprovalRuleTemplateWithRepositoriesError

-- | An error code that specifies whether the repository name was not valid
--   or not found.
[$sel:errorCode:BatchAssociateApprovalRuleTemplateWithRepositoriesError'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesError -> Maybe Text

-- | The name of the repository where the association was not made.
[$sel:repositoryName:BatchAssociateApprovalRuleTemplateWithRepositoriesError'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesError -> Maybe Text

-- | An error message that provides details about why the repository name
--   was not found or not valid.
[$sel:errorMessage:BatchAssociateApprovalRuleTemplateWithRepositoriesError'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesError -> Maybe Text

-- | Create a value of
--   <a>BatchAssociateApprovalRuleTemplateWithRepositoriesError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:errorCode:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_errorCode</a>
--   - An error code that specifies whether the repository name was not
--   valid or not found.
--   
--   
--   <a>$sel:repositoryName:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_repositoryName</a>
--   - The name of the repository where the association was not made.
--   
--   
--   <a>$sel:errorMessage:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_errorMessage</a>
--   - An error message that provides details about why the repository name
--   was not found or not valid.
newBatchAssociateApprovalRuleTemplateWithRepositoriesError :: BatchAssociateApprovalRuleTemplateWithRepositoriesError

-- | An error code that specifies whether the repository name was not valid
--   or not found.
batchAssociateApprovalRuleTemplateWithRepositoriesError_errorCode :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)

-- | The name of the repository where the association was not made.
batchAssociateApprovalRuleTemplateWithRepositoriesError_repositoryName :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)

-- | An error message that provides details about why the repository name
--   was not found or not valid.
batchAssociateApprovalRuleTemplateWithRepositoriesError_errorMessage :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)

-- | Returns information about errors in a BatchDescribeMergeConflicts
--   operation.
--   
--   <i>See:</i> <a>newBatchDescribeMergeConflictsError</a> smart
--   constructor.
data BatchDescribeMergeConflictsError
BatchDescribeMergeConflictsError' :: Text -> Text -> Text -> BatchDescribeMergeConflictsError

-- | The path to the file.
[$sel:filePath:BatchDescribeMergeConflictsError'] :: BatchDescribeMergeConflictsError -> Text

-- | The name of the exception.
[$sel:exceptionName:BatchDescribeMergeConflictsError'] :: BatchDescribeMergeConflictsError -> Text

-- | The message provided by the exception.
[$sel:message:BatchDescribeMergeConflictsError'] :: BatchDescribeMergeConflictsError -> Text

-- | Create a value of <a>BatchDescribeMergeConflictsError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_filePath</a> - The path to the
--   file.
--   
--   <a>$sel:exceptionName:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_exceptionName</a> - The name of
--   the exception.
--   
--   <a>$sel:message:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_message</a> - The message provided
--   by the exception.
newBatchDescribeMergeConflictsError :: Text -> Text -> Text -> BatchDescribeMergeConflictsError

-- | The path to the file.
batchDescribeMergeConflictsError_filePath :: Lens' BatchDescribeMergeConflictsError Text

-- | The name of the exception.
batchDescribeMergeConflictsError_exceptionName :: Lens' BatchDescribeMergeConflictsError Text

-- | The message provided by the exception.
batchDescribeMergeConflictsError_message :: Lens' BatchDescribeMergeConflictsError Text

-- | Returns information about errors in a
--   BatchDisassociateApprovalRuleTemplateFromRepositories operation.
--   
--   <i>See:</i>
--   <a>newBatchDisassociateApprovalRuleTemplateFromRepositoriesError</a>
--   smart constructor.
data BatchDisassociateApprovalRuleTemplateFromRepositoriesError
BatchDisassociateApprovalRuleTemplateFromRepositoriesError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchDisassociateApprovalRuleTemplateFromRepositoriesError

-- | An error code that specifies whether the repository name was not valid
--   or not found.
[$sel:errorCode:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError -> Maybe Text

-- | The name of the repository where the association with the template was
--   not able to be removed.
[$sel:repositoryName:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError -> Maybe Text

-- | An error message that provides details about why the repository name
--   was either not found or not valid.
[$sel:errorMessage:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError -> Maybe Text

-- | Create a value of
--   <a>BatchDisassociateApprovalRuleTemplateFromRepositoriesError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:errorCode:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorCode</a>
--   - An error code that specifies whether the repository name was not
--   valid or not found.
--   
--   
--   <a>$sel:repositoryName:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_repositoryName</a>
--   - The name of the repository where the association with the template
--   was not able to be removed.
--   
--   
--   <a>$sel:errorMessage:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorMessage</a>
--   - An error message that provides details about why the repository name
--   was either not found or not valid.
newBatchDisassociateApprovalRuleTemplateFromRepositoriesError :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError

-- | An error code that specifies whether the repository name was not valid
--   or not found.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorCode :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)

-- | The name of the repository where the association with the template was
--   not able to be removed.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_repositoryName :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)

-- | An error message that provides details about why the repository name
--   was either not found or not valid.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorMessage :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)

-- | Returns information about errors in a BatchGetCommits operation.
--   
--   <i>See:</i> <a>newBatchGetCommitsError</a> smart constructor.
data BatchGetCommitsError
BatchGetCommitsError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchGetCommitsError

-- | A commit ID that either could not be found or was not in a valid
--   format.
[$sel:commitId:BatchGetCommitsError'] :: BatchGetCommitsError -> Maybe Text

-- | An error code that specifies whether the commit ID was not valid or
--   not found.
[$sel:errorCode:BatchGetCommitsError'] :: BatchGetCommitsError -> Maybe Text

-- | An error message that provides detail about why the commit ID either
--   was not found or was not valid.
[$sel:errorMessage:BatchGetCommitsError'] :: BatchGetCommitsError -> Maybe Text

-- | Create a value of <a>BatchGetCommitsError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_commitId</a> - A commit ID that either could
--   not be found or was not in a valid format.
--   
--   <a>$sel:errorCode:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_errorCode</a> - An error code that specifies
--   whether the commit ID was not valid or not found.
--   
--   <a>$sel:errorMessage:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_errorMessage</a> - An error message that
--   provides detail about why the commit ID either was not found or was
--   not valid.
newBatchGetCommitsError :: BatchGetCommitsError

-- | A commit ID that either could not be found or was not in a valid
--   format.
batchGetCommitsError_commitId :: Lens' BatchGetCommitsError (Maybe Text)

-- | An error code that specifies whether the commit ID was not valid or
--   not found.
batchGetCommitsError_errorCode :: Lens' BatchGetCommitsError (Maybe Text)

-- | An error message that provides detail about why the commit ID either
--   was not found or was not valid.
batchGetCommitsError_errorMessage :: Lens' BatchGetCommitsError (Maybe Text)

-- | Returns information about a specific Git blob object.
--   
--   <i>See:</i> <a>newBlobMetadata</a> smart constructor.
data BlobMetadata
BlobMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> BlobMetadata

-- | The path to the blob and associated file name, if any.
[$sel:path:BlobMetadata'] :: BlobMetadata -> Maybe Text

-- | The file mode permissions of the blob. File mode permission codes
--   include:
--   
--   <ul>
--   <li><tt>100644</tt> indicates read/write</li>
--   <li><tt>100755</tt> indicates read/write/execute</li>
--   <li><tt>160000</tt> indicates a submodule</li>
--   <li><tt>120000</tt> indicates a symlink</li>
--   </ul>
[$sel:mode:BlobMetadata'] :: BlobMetadata -> Maybe Text

-- | The full ID of the blob.
[$sel:blobId:BlobMetadata'] :: BlobMetadata -> Maybe Text

-- | Create a value of <a>BlobMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:BlobMetadata'</a>, <a>blobMetadata_path</a> - The path to
--   the blob and associated file name, if any.
--   
--   <a>$sel:mode:BlobMetadata'</a>, <a>blobMetadata_mode</a> - The file
--   mode permissions of the blob. File mode permission codes include:
--   
--   <ul>
--   <li><tt>100644</tt> indicates read/write</li>
--   <li><tt>100755</tt> indicates read/write/execute</li>
--   <li><tt>160000</tt> indicates a submodule</li>
--   <li><tt>120000</tt> indicates a symlink</li>
--   </ul>
--   
--   <a>$sel:blobId:BlobMetadata'</a>, <a>blobMetadata_blobId</a> - The
--   full ID of the blob.
newBlobMetadata :: BlobMetadata

-- | The path to the blob and associated file name, if any.
blobMetadata_path :: Lens' BlobMetadata (Maybe Text)

-- | The file mode permissions of the blob. File mode permission codes
--   include:
--   
--   <ul>
--   <li><tt>100644</tt> indicates read/write</li>
--   <li><tt>100755</tt> indicates read/write/execute</li>
--   <li><tt>160000</tt> indicates a submodule</li>
--   <li><tt>120000</tt> indicates a symlink</li>
--   </ul>
blobMetadata_mode :: Lens' BlobMetadata (Maybe Text)

-- | The full ID of the blob.
blobMetadata_blobId :: Lens' BlobMetadata (Maybe Text)

-- | Returns information about a branch.
--   
--   <i>See:</i> <a>newBranchInfo</a> smart constructor.
data BranchInfo
BranchInfo' :: Maybe Text -> Maybe Text -> BranchInfo

-- | The ID of the last commit made to the branch.
[$sel:commitId:BranchInfo'] :: BranchInfo -> Maybe Text

-- | The name of the branch.
[$sel:branchName:BranchInfo'] :: BranchInfo -> Maybe Text

-- | Create a value of <a>BranchInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:BranchInfo'</a>, <a>branchInfo_commitId</a> - The ID
--   of the last commit made to the branch.
--   
--   <a>$sel:branchName:BranchInfo'</a>, <a>branchInfo_branchName</a> - The
--   name of the branch.
newBranchInfo :: BranchInfo

-- | The ID of the last commit made to the branch.
branchInfo_commitId :: Lens' BranchInfo (Maybe Text)

-- | The name of the branch.
branchInfo_branchName :: Lens' BranchInfo (Maybe Text)

-- | Returns information about a specific comment.
--   
--   <i>See:</i> <a>newComment</a> smart constructor.
data Comment
Comment' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Int) -> Comment

-- | The date and time the comment was most recently modified, in timestamp
--   format.
[$sel:lastModifiedDate:Comment'] :: Comment -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the person who posted the comment.
[$sel:authorArn:Comment'] :: Comment -> Maybe Text

-- | The content of the comment.
[$sel:content:Comment'] :: Comment -> Maybe Text

-- | The emoji reactions to a comment, if any, submitted by the user whose
--   credentials are associated with the call to the API.
[$sel:callerReactions:Comment'] :: Comment -> Maybe [Text]

-- | The date and time the comment was created, in timestamp format.
[$sel:creationDate:Comment'] :: Comment -> Maybe POSIX

-- | A Boolean value indicating whether the comment has been deleted.
[$sel:deleted:Comment'] :: Comment -> Maybe Bool

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
[$sel:clientRequestToken:Comment'] :: Comment -> Maybe Text

-- | The system-generated comment ID.
[$sel:commentId:Comment'] :: Comment -> Maybe Text

-- | The ID of the comment for which this comment is a reply, if any.
[$sel:inReplyTo:Comment'] :: Comment -> Maybe Text

-- | A string to integer map that represents the number of individual users
--   who have responded to a comment with the specified reactions.
[$sel:reactionCounts:Comment'] :: Comment -> Maybe (HashMap Text Int)

-- | Create a value of <a>Comment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Comment'</a>, <a>comment_lastModifiedDate</a>
--   - The date and time the comment was most recently modified, in
--   timestamp format.
--   
--   <a>$sel:authorArn:Comment'</a>, <a>comment_authorArn</a> - The Amazon
--   Resource Name (ARN) of the person who posted the comment.
--   
--   <a>$sel:content:Comment'</a>, <a>comment_content</a> - The content of
--   the comment.
--   
--   <a>$sel:callerReactions:Comment'</a>, <a>comment_callerReactions</a> -
--   The emoji reactions to a comment, if any, submitted by the user whose
--   credentials are associated with the call to the API.
--   
--   <a>$sel:creationDate:Comment'</a>, <a>comment_creationDate</a> - The
--   date and time the comment was created, in timestamp format.
--   
--   <a>$sel:deleted:Comment'</a>, <a>comment_deleted</a> - A Boolean value
--   indicating whether the comment has been deleted.
--   
--   <a>$sel:clientRequestToken:Comment'</a>,
--   <a>comment_clientRequestToken</a> - A unique, client-generated
--   idempotency token that, when provided in a request, ensures the
--   request cannot be repeated with a changed parameter. If a request is
--   received with the same parameters and a token is included, the request
--   returns information about the initial request that used that token.
--   
--   <a>$sel:commentId:Comment'</a>, <a>comment_commentId</a> - The
--   system-generated comment ID.
--   
--   <a>$sel:inReplyTo:Comment'</a>, <a>comment_inReplyTo</a> - The ID of
--   the comment for which this comment is a reply, if any.
--   
--   <a>$sel:reactionCounts:Comment'</a>, <a>comment_reactionCounts</a> - A
--   string to integer map that represents the number of individual users
--   who have responded to a comment with the specified reactions.
newComment :: Comment

-- | The date and time the comment was most recently modified, in timestamp
--   format.
comment_lastModifiedDate :: Lens' Comment (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the person who posted the comment.
comment_authorArn :: Lens' Comment (Maybe Text)

-- | The content of the comment.
comment_content :: Lens' Comment (Maybe Text)

-- | The emoji reactions to a comment, if any, submitted by the user whose
--   credentials are associated with the call to the API.
comment_callerReactions :: Lens' Comment (Maybe [Text])

-- | The date and time the comment was created, in timestamp format.
comment_creationDate :: Lens' Comment (Maybe UTCTime)

-- | A Boolean value indicating whether the comment has been deleted.
comment_deleted :: Lens' Comment (Maybe Bool)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
comment_clientRequestToken :: Lens' Comment (Maybe Text)

-- | The system-generated comment ID.
comment_commentId :: Lens' Comment (Maybe Text)

-- | The ID of the comment for which this comment is a reply, if any.
comment_inReplyTo :: Lens' Comment (Maybe Text)

-- | A string to integer map that represents the number of individual users
--   who have responded to a comment with the specified reactions.
comment_reactionCounts :: Lens' Comment (Maybe (HashMap Text Int))

-- | Returns information about comments on the comparison between two
--   commits.
--   
--   <i>See:</i> <a>newCommentsForComparedCommit</a> smart constructor.
data CommentsForComparedCommit
CommentsForComparedCommit' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Comment] -> CommentsForComparedCommit

-- | The full blob ID of the commit used to establish the before of the
--   comparison.
[$sel:beforeBlobId:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | Location information about the comment on the comparison, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE or AFTER.
[$sel:location:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Location

-- | The full commit ID of the commit used to establish the after of the
--   comparison.
[$sel:afterCommitId:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | The full blob ID of the commit used to establish the after of the
--   comparison.
[$sel:afterBlobId:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | The full commit ID of the commit used to establish the before of the
--   comparison.
[$sel:beforeCommitId:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | The name of the repository that contains the compared commits.
[$sel:repositoryName:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe Text

-- | An array of comment objects. Each comment object contains information
--   about a comment on the comparison between commits.
[$sel:comments:CommentsForComparedCommit'] :: CommentsForComparedCommit -> Maybe [Comment]

-- | Create a value of <a>CommentsForComparedCommit</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_beforeBlobId</a> - The full blob ID of
--   the commit used to establish the before of the comparison.
--   
--   <a>$sel:location:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_location</a> - Location information about
--   the comment on the comparison, including the file name, line number,
--   and whether the version of the file where the comment was made is
--   BEFORE or AFTER.
--   
--   <a>$sel:afterCommitId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_afterCommitId</a> - The full commit ID of
--   the commit used to establish the after of the comparison.
--   
--   <a>$sel:afterBlobId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_afterBlobId</a> - The full blob ID of the
--   commit used to establish the after of the comparison.
--   
--   <a>$sel:beforeCommitId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_beforeCommitId</a> - The full commit ID
--   of the commit used to establish the before of the comparison.
--   
--   <a>$sel:repositoryName:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_repositoryName</a> - The name of the
--   repository that contains the compared commits.
--   
--   <a>$sel:comments:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_comments</a> - An array of comment
--   objects. Each comment object contains information about a comment on
--   the comparison between commits.
newCommentsForComparedCommit :: CommentsForComparedCommit

-- | The full blob ID of the commit used to establish the before of the
--   comparison.
commentsForComparedCommit_beforeBlobId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | Location information about the comment on the comparison, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE or AFTER.
commentsForComparedCommit_location :: Lens' CommentsForComparedCommit (Maybe Location)

-- | The full commit ID of the commit used to establish the after of the
--   comparison.
commentsForComparedCommit_afterCommitId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The full blob ID of the commit used to establish the after of the
--   comparison.
commentsForComparedCommit_afterBlobId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The full commit ID of the commit used to establish the before of the
--   comparison.
commentsForComparedCommit_beforeCommitId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The name of the repository that contains the compared commits.
commentsForComparedCommit_repositoryName :: Lens' CommentsForComparedCommit (Maybe Text)

-- | An array of comment objects. Each comment object contains information
--   about a comment on the comparison between commits.
commentsForComparedCommit_comments :: Lens' CommentsForComparedCommit (Maybe [Comment])

-- | Returns information about comments on a pull request.
--   
--   <i>See:</i> <a>newCommentsForPullRequest</a> smart constructor.
data CommentsForPullRequest
CommentsForPullRequest' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Comment] -> CommentsForPullRequest

-- | The full blob ID of the file on which you want to comment on the
--   destination commit.
[$sel:beforeBlobId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | Location information about the comment on the pull request, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE (destination branch) or AFTER (source
--   branch).
[$sel:location:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Location

-- | The full commit ID of the commit that was the tip of the source branch
--   at the time the comment was made.
[$sel:afterCommitId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | The full blob ID of the file on which you want to comment on the
--   source commit.
[$sel:afterBlobId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | The full commit ID of the commit that was the tip of the destination
--   branch when the pull request was created. This commit is superceded by
--   the after commit in the source branch when and if you merge the source
--   branch into the destination branch.
[$sel:beforeCommitId:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | The name of the repository that contains the pull request.
[$sel:repositoryName:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe Text

-- | An array of comment objects. Each comment object contains information
--   about a comment on the pull request.
[$sel:comments:CommentsForPullRequest'] :: CommentsForPullRequest -> Maybe [Comment]

-- | Create a value of <a>CommentsForPullRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_beforeBlobId</a> - The full blob ID of the
--   file on which you want to comment on the destination commit.
--   
--   <a>$sel:location:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_location</a> - Location information about
--   the comment on the pull request, including the file name, line number,
--   and whether the version of the file where the comment was made is
--   BEFORE (destination branch) or AFTER (source branch).
--   
--   <a>$sel:afterCommitId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_afterCommitId</a> - The full commit ID of
--   the commit that was the tip of the source branch at the time the
--   comment was made.
--   
--   <a>$sel:pullRequestId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_pullRequestId</a> - The system-generated ID
--   of the pull request.
--   
--   <a>$sel:afterBlobId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_afterBlobId</a> - The full blob ID of the
--   file on which you want to comment on the source commit.
--   
--   <a>$sel:beforeCommitId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_beforeCommitId</a> - The full commit ID of
--   the commit that was the tip of the destination branch when the pull
--   request was created. This commit is superceded by the after commit in
--   the source branch when and if you merge the source branch into the
--   destination branch.
--   
--   <a>$sel:repositoryName:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_repositoryName</a> - The name of the
--   repository that contains the pull request.
--   
--   <a>$sel:comments:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_comments</a> - An array of comment objects.
--   Each comment object contains information about a comment on the pull
--   request.
newCommentsForPullRequest :: CommentsForPullRequest

-- | The full blob ID of the file on which you want to comment on the
--   destination commit.
commentsForPullRequest_beforeBlobId :: Lens' CommentsForPullRequest (Maybe Text)

-- | Location information about the comment on the pull request, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE (destination branch) or AFTER (source
--   branch).
commentsForPullRequest_location :: Lens' CommentsForPullRequest (Maybe Location)

-- | The full commit ID of the commit that was the tip of the source branch
--   at the time the comment was made.
commentsForPullRequest_afterCommitId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The system-generated ID of the pull request.
commentsForPullRequest_pullRequestId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The full blob ID of the file on which you want to comment on the
--   source commit.
commentsForPullRequest_afterBlobId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The full commit ID of the commit that was the tip of the destination
--   branch when the pull request was created. This commit is superceded by
--   the after commit in the source branch when and if you merge the source
--   branch into the destination branch.
commentsForPullRequest_beforeCommitId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The name of the repository that contains the pull request.
commentsForPullRequest_repositoryName :: Lens' CommentsForPullRequest (Maybe Text)

-- | An array of comment objects. Each comment object contains information
--   about a comment on the pull request.
commentsForPullRequest_comments :: Lens' CommentsForPullRequest (Maybe [Comment])

-- | Returns information about a specific commit.
--   
--   <i>See:</i> <a>newCommit</a> smart constructor.
data Commit
Commit' :: Maybe Text -> Maybe UserInfo -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe UserInfo -> Maybe Text -> Commit

-- | The full SHA ID of the specified commit.
[$sel:commitId:Commit'] :: Commit -> Maybe Text

-- | Information about the person who committed the specified commit, also
--   known as the committer. Information includes the date in timestamp
--   format with GMT offset, the name of the committer, and the email
--   address for the committer, as configured in Git.
--   
--   For more information about the difference between an author and a
--   committer in Git, see <a>Viewing the Commit History</a> in Pro Git by
--   Scott Chacon and Ben Straub.
[$sel:committer:Commit'] :: Commit -> Maybe UserInfo

-- | Tree information for the specified commit.
[$sel:treeId:Commit'] :: Commit -> Maybe Text

-- | Any other data associated with the specified commit.
[$sel:additionalData:Commit'] :: Commit -> Maybe Text

-- | A list of parent commits for the specified commit. Each parent commit
--   ID is the full commit ID.
[$sel:parents:Commit'] :: Commit -> Maybe [Text]

-- | Information about the author of the specified commit. Information
--   includes the date in timestamp format with GMT offset, the name of the
--   author, and the email address for the author, as configured in Git.
[$sel:author:Commit'] :: Commit -> Maybe UserInfo

-- | The commit message associated with the specified commit.
[$sel:message:Commit'] :: Commit -> Maybe Text

-- | Create a value of <a>Commit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:Commit'</a>, <a>commit_commitId</a> - The full SHA ID
--   of the specified commit.
--   
--   <a>$sel:committer:Commit'</a>, <a>commit_committer</a> - Information
--   about the person who committed the specified commit, also known as the
--   committer. Information includes the date in timestamp format with GMT
--   offset, the name of the committer, and the email address for the
--   committer, as configured in Git.
--   
--   For more information about the difference between an author and a
--   committer in Git, see <a>Viewing the Commit History</a> in Pro Git by
--   Scott Chacon and Ben Straub.
--   
--   <a>$sel:treeId:Commit'</a>, <a>commit_treeId</a> - Tree information
--   for the specified commit.
--   
--   <a>$sel:additionalData:Commit'</a>, <a>commit_additionalData</a> - Any
--   other data associated with the specified commit.
--   
--   <a>$sel:parents:Commit'</a>, <a>commit_parents</a> - A list of parent
--   commits for the specified commit. Each parent commit ID is the full
--   commit ID.
--   
--   <a>$sel:author:Commit'</a>, <a>commit_author</a> - Information about
--   the author of the specified commit. Information includes the date in
--   timestamp format with GMT offset, the name of the author, and the
--   email address for the author, as configured in Git.
--   
--   <a>$sel:message:Commit'</a>, <a>commit_message</a> - The commit
--   message associated with the specified commit.
newCommit :: Commit

-- | The full SHA ID of the specified commit.
commit_commitId :: Lens' Commit (Maybe Text)

-- | Information about the person who committed the specified commit, also
--   known as the committer. Information includes the date in timestamp
--   format with GMT offset, the name of the committer, and the email
--   address for the committer, as configured in Git.
--   
--   For more information about the difference between an author and a
--   committer in Git, see <a>Viewing the Commit History</a> in Pro Git by
--   Scott Chacon and Ben Straub.
commit_committer :: Lens' Commit (Maybe UserInfo)

-- | Tree information for the specified commit.
commit_treeId :: Lens' Commit (Maybe Text)

-- | Any other data associated with the specified commit.
commit_additionalData :: Lens' Commit (Maybe Text)

-- | A list of parent commits for the specified commit. Each parent commit
--   ID is the full commit ID.
commit_parents :: Lens' Commit (Maybe [Text])

-- | Information about the author of the specified commit. Information
--   includes the date in timestamp format with GMT offset, the name of the
--   author, and the email address for the author, as configured in Git.
commit_author :: Lens' Commit (Maybe UserInfo)

-- | The commit message associated with the specified commit.
commit_message :: Lens' Commit (Maybe Text)

-- | Information about conflicts in a merge operation.
--   
--   <i>See:</i> <a>newConflict</a> smart constructor.
data Conflict
Conflict' :: Maybe [MergeHunk] -> Maybe ConflictMetadata -> Conflict

-- | A list of hunks that contain the differences between files or lines
--   causing the conflict.
[$sel:mergeHunks:Conflict'] :: Conflict -> Maybe [MergeHunk]

-- | Metadata about a conflict in a merge operation.
[$sel:conflictMetadata:Conflict'] :: Conflict -> Maybe ConflictMetadata

-- | Create a value of <a>Conflict</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mergeHunks:Conflict'</a>, <a>conflict_mergeHunks</a> - A list
--   of hunks that contain the differences between files or lines causing
--   the conflict.
--   
--   <a>$sel:conflictMetadata:Conflict'</a>,
--   <a>conflict_conflictMetadata</a> - Metadata about a conflict in a
--   merge operation.
newConflict :: Conflict

-- | A list of hunks that contain the differences between files or lines
--   causing the conflict.
conflict_mergeHunks :: Lens' Conflict (Maybe [MergeHunk])

-- | Metadata about a conflict in a merge operation.
conflict_conflictMetadata :: Lens' Conflict (Maybe ConflictMetadata)

-- | Information about the metadata for a conflict in a merge operation.
--   
--   <i>See:</i> <a>newConflictMetadata</a> smart constructor.
data ConflictMetadata
ConflictMetadata' :: Maybe Int -> Maybe Bool -> Maybe FileSizes -> Maybe Text -> Maybe IsBinaryFile -> Maybe Bool -> Maybe Bool -> Maybe MergeOperations -> Maybe ObjectTypes -> Maybe FileModes -> ConflictMetadata

-- | The number of conflicts, including both hunk conflicts and metadata
--   conflicts.
[$sel:numberOfConflicts:ConflictMetadata'] :: ConflictMetadata -> Maybe Int

-- | A boolean value indicating whether there are conflicts in the content
--   of a file.
[$sel:contentConflict:ConflictMetadata'] :: ConflictMetadata -> Maybe Bool

-- | The file sizes of the file in the source, destination, and base of the
--   merge.
[$sel:fileSizes:ConflictMetadata'] :: ConflictMetadata -> Maybe FileSizes

-- | The path of the file that contains conflicts.
[$sel:filePath:ConflictMetadata'] :: ConflictMetadata -> Maybe Text

-- | A boolean value (true or false) indicating whether the file is binary
--   or textual in the source, destination, and base of the merge.
[$sel:isBinaryFile:ConflictMetadata'] :: ConflictMetadata -> Maybe IsBinaryFile

-- | A boolean value indicating whether there are conflicts in the file
--   mode of a file.
[$sel:fileModeConflict:ConflictMetadata'] :: ConflictMetadata -> Maybe Bool

-- | A boolean value (true or false) indicating whether there are conflicts
--   between the branches in the object type of a file, folder, or
--   submodule.
[$sel:objectTypeConflict:ConflictMetadata'] :: ConflictMetadata -> Maybe Bool

-- | Whether an add, modify, or delete operation caused the conflict
--   between the source and destination of the merge.
[$sel:mergeOperations:ConflictMetadata'] :: ConflictMetadata -> Maybe MergeOperations

-- | Information about any object type conflicts in a merge operation.
[$sel:objectTypes:ConflictMetadata'] :: ConflictMetadata -> Maybe ObjectTypes

-- | The file modes of the file in the source, destination, and base of the
--   merge.
[$sel:fileModes:ConflictMetadata'] :: ConflictMetadata -> Maybe FileModes

-- | Create a value of <a>ConflictMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConflicts:ConflictMetadata'</a>,
--   <a>conflictMetadata_numberOfConflicts</a> - The number of conflicts,
--   including both hunk conflicts and metadata conflicts.
--   
--   <a>$sel:contentConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_contentConflict</a> - A boolean value indicating
--   whether there are conflicts in the content of a file.
--   
--   <a>$sel:fileSizes:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileSizes</a> - The file sizes of the file in the
--   source, destination, and base of the merge.
--   
--   <a>$sel:filePath:ConflictMetadata'</a>,
--   <a>conflictMetadata_filePath</a> - The path of the file that contains
--   conflicts.
--   
--   <a>$sel:isBinaryFile:ConflictMetadata'</a>,
--   <a>conflictMetadata_isBinaryFile</a> - A boolean value (true or false)
--   indicating whether the file is binary or textual in the source,
--   destination, and base of the merge.
--   
--   <a>$sel:fileModeConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileModeConflict</a> - A boolean value indicating
--   whether there are conflicts in the file mode of a file.
--   
--   <a>$sel:objectTypeConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_objectTypeConflict</a> - A boolean value (true or
--   false) indicating whether there are conflicts between the branches in
--   the object type of a file, folder, or submodule.
--   
--   <a>$sel:mergeOperations:ConflictMetadata'</a>,
--   <a>conflictMetadata_mergeOperations</a> - Whether an add, modify, or
--   delete operation caused the conflict between the source and
--   destination of the merge.
--   
--   <a>$sel:objectTypes:ConflictMetadata'</a>,
--   <a>conflictMetadata_objectTypes</a> - Information about any object
--   type conflicts in a merge operation.
--   
--   <a>$sel:fileModes:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileModes</a> - The file modes of the file in the
--   source, destination, and base of the merge.
newConflictMetadata :: ConflictMetadata

-- | The number of conflicts, including both hunk conflicts and metadata
--   conflicts.
conflictMetadata_numberOfConflicts :: Lens' ConflictMetadata (Maybe Int)

-- | A boolean value indicating whether there are conflicts in the content
--   of a file.
conflictMetadata_contentConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | The file sizes of the file in the source, destination, and base of the
--   merge.
conflictMetadata_fileSizes :: Lens' ConflictMetadata (Maybe FileSizes)

-- | The path of the file that contains conflicts.
conflictMetadata_filePath :: Lens' ConflictMetadata (Maybe Text)

-- | A boolean value (true or false) indicating whether the file is binary
--   or textual in the source, destination, and base of the merge.
conflictMetadata_isBinaryFile :: Lens' ConflictMetadata (Maybe IsBinaryFile)

-- | A boolean value indicating whether there are conflicts in the file
--   mode of a file.
conflictMetadata_fileModeConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | A boolean value (true or false) indicating whether there are conflicts
--   between the branches in the object type of a file, folder, or
--   submodule.
conflictMetadata_objectTypeConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | Whether an add, modify, or delete operation caused the conflict
--   between the source and destination of the merge.
conflictMetadata_mergeOperations :: Lens' ConflictMetadata (Maybe MergeOperations)

-- | Information about any object type conflicts in a merge operation.
conflictMetadata_objectTypes :: Lens' ConflictMetadata (Maybe ObjectTypes)

-- | The file modes of the file in the source, destination, and base of the
--   merge.
conflictMetadata_fileModes :: Lens' ConflictMetadata (Maybe FileModes)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
--   
--   <i>See:</i> <a>newConflictResolution</a> smart constructor.
data ConflictResolution
ConflictResolution' :: Maybe [SetFileModeEntry] -> Maybe [DeleteFileEntry] -> Maybe [ReplaceContentEntry] -> ConflictResolution

-- | File modes that are set as part of the merge conflict resolution.
[$sel:setFileModes:ConflictResolution'] :: ConflictResolution -> Maybe [SetFileModeEntry]

-- | Files to be deleted as part of the merge conflict resolution.
[$sel:deleteFiles:ConflictResolution'] :: ConflictResolution -> Maybe [DeleteFileEntry]

-- | Files to have content replaced as part of the merge conflict
--   resolution.
[$sel:replaceContents:ConflictResolution'] :: ConflictResolution -> Maybe [ReplaceContentEntry]

-- | Create a value of <a>ConflictResolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:setFileModes:ConflictResolution'</a>,
--   <a>conflictResolution_setFileModes</a> - File modes that are set as
--   part of the merge conflict resolution.
--   
--   <a>$sel:deleteFiles:ConflictResolution'</a>,
--   <a>conflictResolution_deleteFiles</a> - Files to be deleted as part of
--   the merge conflict resolution.
--   
--   <a>$sel:replaceContents:ConflictResolution'</a>,
--   <a>conflictResolution_replaceContents</a> - Files to have content
--   replaced as part of the merge conflict resolution.
newConflictResolution :: ConflictResolution

-- | File modes that are set as part of the merge conflict resolution.
conflictResolution_setFileModes :: Lens' ConflictResolution (Maybe [SetFileModeEntry])

-- | Files to be deleted as part of the merge conflict resolution.
conflictResolution_deleteFiles :: Lens' ConflictResolution (Maybe [DeleteFileEntry])

-- | Files to have content replaced as part of the merge conflict
--   resolution.
conflictResolution_replaceContents :: Lens' ConflictResolution (Maybe [ReplaceContentEntry])

-- | A file that is deleted as part of a commit.
--   
--   <i>See:</i> <a>newDeleteFileEntry</a> smart constructor.
data DeleteFileEntry
DeleteFileEntry' :: Text -> DeleteFileEntry

-- | The full path of the file to be deleted, including the name of the
--   file.
[$sel:filePath:DeleteFileEntry'] :: DeleteFileEntry -> Text

-- | Create a value of <a>DeleteFileEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:DeleteFileEntry'</a>, <a>deleteFileEntry_filePath</a>
--   - The full path of the file to be deleted, including the name of the
--   file.
newDeleteFileEntry :: Text -> DeleteFileEntry

-- | The full path of the file to be deleted, including the name of the
--   file.
deleteFileEntry_filePath :: Lens' DeleteFileEntry Text

-- | Returns information about a set of differences for a commit specifier.
--   
--   <i>See:</i> <a>newDifference</a> smart constructor.
data Difference
Difference' :: Maybe BlobMetadata -> Maybe BlobMetadata -> Maybe ChangeTypeEnum -> Difference

-- | Information about an <tt>afterBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
[$sel:afterBlob:Difference'] :: Difference -> Maybe BlobMetadata

-- | Information about a <tt>beforeBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
[$sel:beforeBlob:Difference'] :: Difference -> Maybe BlobMetadata

-- | Whether the change type of the difference is an addition (A), deletion
--   (D), or modification (M).
[$sel:changeType:Difference'] :: Difference -> Maybe ChangeTypeEnum

-- | Create a value of <a>Difference</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:afterBlob:Difference'</a>, <a>difference_afterBlob</a> -
--   Information about an <tt>afterBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
--   
--   <a>$sel:beforeBlob:Difference'</a>, <a>difference_beforeBlob</a> -
--   Information about a <tt>beforeBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
--   
--   <a>$sel:changeType:Difference'</a>, <a>difference_changeType</a> -
--   Whether the change type of the difference is an addition (A), deletion
--   (D), or modification (M).
newDifference :: Difference

-- | Information about an <tt>afterBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
difference_afterBlob :: Lens' Difference (Maybe BlobMetadata)

-- | Information about a <tt>beforeBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
difference_beforeBlob :: Lens' Difference (Maybe BlobMetadata)

-- | Whether the change type of the difference is an addition (A), deletion
--   (D), or modification (M).
difference_changeType :: Lens' Difference (Maybe ChangeTypeEnum)

-- | Returns information about the approval rules applied to a pull request
--   and whether conditions have been met.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Bool -> Evaluation

-- | The names of the approval rules that have had their conditions met.
[$sel:approvalRulesSatisfied:Evaluation'] :: Evaluation -> Maybe [Text]

-- | The names of the approval rules that have not had their conditions
--   met.
[$sel:approvalRulesNotSatisfied:Evaluation'] :: Evaluation -> Maybe [Text]

-- | Whether the state of the pull request is approved.
[$sel:approved:Evaluation'] :: Evaluation -> Maybe Bool

-- | Whether the approval rule requirements for the pull request have been
--   overridden and no longer need to be met.
[$sel:overridden:Evaluation'] :: Evaluation -> Maybe Bool

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRulesSatisfied:Evaluation'</a>,
--   <a>evaluation_approvalRulesSatisfied</a> - The names of the approval
--   rules that have had their conditions met.
--   
--   <a>$sel:approvalRulesNotSatisfied:Evaluation'</a>,
--   <a>evaluation_approvalRulesNotSatisfied</a> - The names of the
--   approval rules that have not had their conditions met.
--   
--   <a>$sel:approved:Evaluation'</a>, <a>evaluation_approved</a> - Whether
--   the state of the pull request is approved.
--   
--   <a>$sel:overridden:Evaluation'</a>, <a>evaluation_overridden</a> -
--   Whether the approval rule requirements for the pull request have been
--   overridden and no longer need to be met.
newEvaluation :: Evaluation

-- | The names of the approval rules that have had their conditions met.
evaluation_approvalRulesSatisfied :: Lens' Evaluation (Maybe [Text])

-- | The names of the approval rules that have not had their conditions
--   met.
evaluation_approvalRulesNotSatisfied :: Lens' Evaluation (Maybe [Text])

-- | Whether the state of the pull request is approved.
evaluation_approved :: Lens' Evaluation (Maybe Bool)

-- | Whether the approval rule requirements for the pull request have been
--   overridden and no longer need to be met.
evaluation_overridden :: Lens' Evaluation (Maybe Bool)

-- | Returns information about a file in a repository.
--   
--   <i>See:</i> <a>newFile</a> smart constructor.
data File
File' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> Maybe Text -> File

-- | The fully qualified path to the file in the repository.
[$sel:absolutePath:File'] :: File -> Maybe Text

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
[$sel:fileMode:File'] :: File -> Maybe FileModeTypeEnum

-- | The blob ID that contains the file information.
[$sel:blobId:File'] :: File -> Maybe Text

-- | The relative path of the file from the folder where the query
--   originated.
[$sel:relativePath:File'] :: File -> Maybe Text

-- | Create a value of <a>File</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:File'</a>, <a>file_absolutePath</a> - The fully
--   qualified path to the file in the repository.
--   
--   <a>$sel:fileMode:File'</a>, <a>file_fileMode</a> - The extrapolated
--   file mode permissions for the file. Valid values include EXECUTABLE
--   and NORMAL.
--   
--   <a>$sel:blobId:File'</a>, <a>file_blobId</a> - The blob ID that
--   contains the file information.
--   
--   <a>$sel:relativePath:File'</a>, <a>file_relativePath</a> - The
--   relative path of the file from the folder where the query originated.
newFile :: File

-- | The fully qualified path to the file in the repository.
file_absolutePath :: Lens' File (Maybe Text)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
file_fileMode :: Lens' File (Maybe FileModeTypeEnum)

-- | The blob ID that contains the file information.
file_blobId :: Lens' File (Maybe Text)

-- | The relative path of the file from the folder where the query
--   originated.
file_relativePath :: Lens' File (Maybe Text)

-- | A file to be added, updated, or deleted as part of a commit.
--   
--   <i>See:</i> <a>newFileMetadata</a> smart constructor.
data FileMetadata
FileMetadata' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> FileMetadata

-- | The full path to the file to be added or updated, including the name
--   of the file.
[$sel:absolutePath:FileMetadata'] :: FileMetadata -> Maybe Text

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
[$sel:fileMode:FileMetadata'] :: FileMetadata -> Maybe FileModeTypeEnum

-- | The blob ID that contains the file information.
[$sel:blobId:FileMetadata'] :: FileMetadata -> Maybe Text

-- | Create a value of <a>FileMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:FileMetadata'</a>,
--   <a>fileMetadata_absolutePath</a> - The full path to the file to be
--   added or updated, including the name of the file.
--   
--   <a>$sel:fileMode:FileMetadata'</a>, <a>fileMetadata_fileMode</a> - The
--   extrapolated file mode permissions for the file. Valid values include
--   EXECUTABLE and NORMAL.
--   
--   <a>$sel:blobId:FileMetadata'</a>, <a>fileMetadata_blobId</a> - The
--   blob ID that contains the file information.
newFileMetadata :: FileMetadata

-- | The full path to the file to be added or updated, including the name
--   of the file.
fileMetadata_absolutePath :: Lens' FileMetadata (Maybe Text)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
fileMetadata_fileMode :: Lens' FileMetadata (Maybe FileModeTypeEnum)

-- | The blob ID that contains the file information.
fileMetadata_blobId :: Lens' FileMetadata (Maybe Text)

-- | Information about file modes in a merge or pull request.
--   
--   <i>See:</i> <a>newFileModes</a> smart constructor.
data FileModes
FileModes' :: Maybe FileModeTypeEnum -> Maybe FileModeTypeEnum -> Maybe FileModeTypeEnum -> FileModes

-- | The file mode of a file in the destination of a merge or pull request.
[$sel:destination:FileModes'] :: FileModes -> Maybe FileModeTypeEnum

-- | The file mode of a file in the base of a merge or pull request.
[$sel:base:FileModes'] :: FileModes -> Maybe FileModeTypeEnum

-- | The file mode of a file in the source of a merge or pull request.
[$sel:source:FileModes'] :: FileModes -> Maybe FileModeTypeEnum

-- | Create a value of <a>FileModes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:FileModes'</a>, <a>fileModes_destination</a> - The
--   file mode of a file in the destination of a merge or pull request.
--   
--   <a>$sel:base:FileModes'</a>, <a>fileModes_base</a> - The file mode of
--   a file in the base of a merge or pull request.
--   
--   <a>$sel:source:FileModes'</a>, <a>fileModes_source</a> - The file mode
--   of a file in the source of a merge or pull request.
newFileModes :: FileModes

-- | The file mode of a file in the destination of a merge or pull request.
fileModes_destination :: Lens' FileModes (Maybe FileModeTypeEnum)

-- | The file mode of a file in the base of a merge or pull request.
fileModes_base :: Lens' FileModes (Maybe FileModeTypeEnum)

-- | The file mode of a file in the source of a merge or pull request.
fileModes_source :: Lens' FileModes (Maybe FileModeTypeEnum)

-- | Information about the size of files in a merge or pull request.
--   
--   <i>See:</i> <a>newFileSizes</a> smart constructor.
data FileSizes
FileSizes' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> FileSizes

-- | The size of a file in the destination of a merge or pull request.
[$sel:destination:FileSizes'] :: FileSizes -> Maybe Integer

-- | The size of a file in the base of a merge or pull request.
[$sel:base:FileSizes'] :: FileSizes -> Maybe Integer

-- | The size of a file in the source of a merge or pull request.
[$sel:source:FileSizes'] :: FileSizes -> Maybe Integer

-- | Create a value of <a>FileSizes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:FileSizes'</a>, <a>fileSizes_destination</a> - The
--   size of a file in the destination of a merge or pull request.
--   
--   <a>$sel:base:FileSizes'</a>, <a>fileSizes_base</a> - The size of a
--   file in the base of a merge or pull request.
--   
--   <a>$sel:source:FileSizes'</a>, <a>fileSizes_source</a> - The size of a
--   file in the source of a merge or pull request.
newFileSizes :: FileSizes

-- | The size of a file in the destination of a merge or pull request.
fileSizes_destination :: Lens' FileSizes (Maybe Integer)

-- | The size of a file in the base of a merge or pull request.
fileSizes_base :: Lens' FileSizes (Maybe Integer)

-- | The size of a file in the source of a merge or pull request.
fileSizes_source :: Lens' FileSizes (Maybe Integer)

-- | Returns information about a folder in a repository.
--   
--   <i>See:</i> <a>newFolder</a> smart constructor.
data Folder
Folder' :: Maybe Text -> Maybe Text -> Maybe Text -> Folder

-- | The fully qualified path of the folder in the repository.
[$sel:absolutePath:Folder'] :: Folder -> Maybe Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
[$sel:treeId:Folder'] :: Folder -> Maybe Text

-- | The relative path of the specified folder from the folder where the
--   query originated.
[$sel:relativePath:Folder'] :: Folder -> Maybe Text

-- | Create a value of <a>Folder</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:Folder'</a>, <a>folder_absolutePath</a> - The
--   fully qualified path of the folder in the repository.
--   
--   <a>$sel:treeId:Folder'</a>, <a>folder_treeId</a> - The full SHA-1
--   pointer of the tree information for the commit that contains the
--   folder.
--   
--   <a>$sel:relativePath:Folder'</a>, <a>folder_relativePath</a> - The
--   relative path of the specified folder from the folder where the query
--   originated.
newFolder :: Folder

-- | The fully qualified path of the folder in the repository.
folder_absolutePath :: Lens' Folder (Maybe Text)

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
folder_treeId :: Lens' Folder (Maybe Text)

-- | The relative path of the specified folder from the folder where the
--   query originated.
folder_relativePath :: Lens' Folder (Maybe Text)

-- | Information about whether a file is binary or textual in a merge or
--   pull request operation.
--   
--   <i>See:</i> <a>newIsBinaryFile</a> smart constructor.
data IsBinaryFile
IsBinaryFile' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> IsBinaryFile

-- | The binary or non-binary status of a file in the destination of a
--   merge or pull request.
[$sel:destination:IsBinaryFile'] :: IsBinaryFile -> Maybe Bool

-- | The binary or non-binary status of a file in the base of a merge or
--   pull request.
[$sel:base:IsBinaryFile'] :: IsBinaryFile -> Maybe Bool

-- | The binary or non-binary status of file in the source of a merge or
--   pull request.
[$sel:source:IsBinaryFile'] :: IsBinaryFile -> Maybe Bool

-- | Create a value of <a>IsBinaryFile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:IsBinaryFile'</a>, <a>isBinaryFile_destination</a>
--   - The binary or non-binary status of a file in the destination of a
--   merge or pull request.
--   
--   <a>$sel:base:IsBinaryFile'</a>, <a>isBinaryFile_base</a> - The binary
--   or non-binary status of a file in the base of a merge or pull request.
--   
--   <a>$sel:source:IsBinaryFile'</a>, <a>isBinaryFile_source</a> - The
--   binary or non-binary status of file in the source of a merge or pull
--   request.
newIsBinaryFile :: IsBinaryFile

-- | The binary or non-binary status of a file in the destination of a
--   merge or pull request.
isBinaryFile_destination :: Lens' IsBinaryFile (Maybe Bool)

-- | The binary or non-binary status of a file in the base of a merge or
--   pull request.
isBinaryFile_base :: Lens' IsBinaryFile (Maybe Bool)

-- | The binary or non-binary status of file in the source of a merge or
--   pull request.
isBinaryFile_source :: Lens' IsBinaryFile (Maybe Bool)

-- | Returns information about the location of a change or comment in the
--   comparison between two commits or a pull request.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe RelativeFileVersionEnum -> Maybe Text -> Maybe Integer -> Location

-- | In a comparison of commits or a pull request, whether the change is in
--   the before or after of that comparison.
[$sel:relativeFileVersion:Location'] :: Location -> Maybe RelativeFileVersionEnum

-- | The name of the file being compared, including its extension and
--   subdirectory, if any.
[$sel:filePath:Location'] :: Location -> Maybe Text

-- | The position of a change in a compared file, in line number format.
[$sel:filePosition:Location'] :: Location -> Maybe Integer

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:relativeFileVersion:Location'</a>,
--   <a>location_relativeFileVersion</a> - In a comparison of commits or a
--   pull request, whether the change is in the before or after of that
--   comparison.
--   
--   <a>$sel:filePath:Location'</a>, <a>location_filePath</a> - The name of
--   the file being compared, including its extension and subdirectory, if
--   any.
--   
--   <a>$sel:filePosition:Location'</a>, <a>location_filePosition</a> - The
--   position of a change in a compared file, in line number format.
newLocation :: Location

-- | In a comparison of commits or a pull request, whether the change is in
--   the before or after of that comparison.
location_relativeFileVersion :: Lens' Location (Maybe RelativeFileVersionEnum)

-- | The name of the file being compared, including its extension and
--   subdirectory, if any.
location_filePath :: Lens' Location (Maybe Text)

-- | The position of a change in a compared file, in line number format.
location_filePosition :: Lens' Location (Maybe Integer)

-- | Information about merge hunks in a merge or pull request operation.
--   
--   <i>See:</i> <a>newMergeHunk</a> smart constructor.
data MergeHunk
MergeHunk' :: Maybe MergeHunkDetail -> Maybe MergeHunkDetail -> Maybe Bool -> Maybe MergeHunkDetail -> MergeHunk

-- | Information about the merge hunk in the destination of a merge or pull
--   request.
[$sel:destination:MergeHunk'] :: MergeHunk -> Maybe MergeHunkDetail

-- | Information about the merge hunk in the base of a merge or pull
--   request.
[$sel:base:MergeHunk'] :: MergeHunk -> Maybe MergeHunkDetail

-- | A Boolean value indicating whether a combination of hunks contains a
--   conflict. Conflicts occur when the same file or the same lines in a
--   file were modified in both the source and destination of a merge or
--   pull request. Valid values include true, false, and null. True when
--   the hunk represents a conflict and one or more files contains a line
--   conflict. File mode conflicts in a merge do not set this to true.
[$sel:isConflict:MergeHunk'] :: MergeHunk -> Maybe Bool

-- | Information about the merge hunk in the source of a merge or pull
--   request.
[$sel:source:MergeHunk'] :: MergeHunk -> Maybe MergeHunkDetail

-- | Create a value of <a>MergeHunk</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:MergeHunk'</a>, <a>mergeHunk_destination</a> -
--   Information about the merge hunk in the destination of a merge or pull
--   request.
--   
--   <a>$sel:base:MergeHunk'</a>, <a>mergeHunk_base</a> - Information about
--   the merge hunk in the base of a merge or pull request.
--   
--   <a>$sel:isConflict:MergeHunk'</a>, <a>mergeHunk_isConflict</a> - A
--   Boolean value indicating whether a combination of hunks contains a
--   conflict. Conflicts occur when the same file or the same lines in a
--   file were modified in both the source and destination of a merge or
--   pull request. Valid values include true, false, and null. True when
--   the hunk represents a conflict and one or more files contains a line
--   conflict. File mode conflicts in a merge do not set this to true.
--   
--   <a>$sel:source:MergeHunk'</a>, <a>mergeHunk_source</a> - Information
--   about the merge hunk in the source of a merge or pull request.
newMergeHunk :: MergeHunk

-- | Information about the merge hunk in the destination of a merge or pull
--   request.
mergeHunk_destination :: Lens' MergeHunk (Maybe MergeHunkDetail)

-- | Information about the merge hunk in the base of a merge or pull
--   request.
mergeHunk_base :: Lens' MergeHunk (Maybe MergeHunkDetail)

-- | A Boolean value indicating whether a combination of hunks contains a
--   conflict. Conflicts occur when the same file or the same lines in a
--   file were modified in both the source and destination of a merge or
--   pull request. Valid values include true, false, and null. True when
--   the hunk represents a conflict and one or more files contains a line
--   conflict. File mode conflicts in a merge do not set this to true.
mergeHunk_isConflict :: Lens' MergeHunk (Maybe Bool)

-- | Information about the merge hunk in the source of a merge or pull
--   request.
mergeHunk_source :: Lens' MergeHunk (Maybe MergeHunkDetail)

-- | Information about the details of a merge hunk that contains a conflict
--   in a merge or pull request operation.
--   
--   <i>See:</i> <a>newMergeHunkDetail</a> smart constructor.
data MergeHunkDetail
MergeHunkDetail' :: Maybe Int -> Maybe Int -> Maybe Text -> MergeHunkDetail

-- | The start position of the hunk in the merge result.
[$sel:startLine:MergeHunkDetail'] :: MergeHunkDetail -> Maybe Int

-- | The end position of the hunk in the merge result.
[$sel:endLine:MergeHunkDetail'] :: MergeHunkDetail -> Maybe Int

-- | The base-64 encoded content of the hunk merged region that might
--   contain a conflict.
[$sel:hunkContent:MergeHunkDetail'] :: MergeHunkDetail -> Maybe Text

-- | Create a value of <a>MergeHunkDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startLine:MergeHunkDetail'</a>,
--   <a>mergeHunkDetail_startLine</a> - The start position of the hunk in
--   the merge result.
--   
--   <a>$sel:endLine:MergeHunkDetail'</a>, <a>mergeHunkDetail_endLine</a> -
--   The end position of the hunk in the merge result.
--   
--   <a>$sel:hunkContent:MergeHunkDetail'</a>,
--   <a>mergeHunkDetail_hunkContent</a> - The base-64 encoded content of
--   the hunk merged region that might contain a conflict.
newMergeHunkDetail :: MergeHunkDetail

-- | The start position of the hunk in the merge result.
mergeHunkDetail_startLine :: Lens' MergeHunkDetail (Maybe Int)

-- | The end position of the hunk in the merge result.
mergeHunkDetail_endLine :: Lens' MergeHunkDetail (Maybe Int)

-- | The base-64 encoded content of the hunk merged region that might
--   contain a conflict.
mergeHunkDetail_hunkContent :: Lens' MergeHunkDetail (Maybe Text)

-- | Returns information about a merge or potential merge between a source
--   reference and a destination reference in a pull request.
--   
--   <i>See:</i> <a>newMergeMetadata</a> smart constructor.
data MergeMetadata
MergeMetadata' :: Maybe Text -> Maybe MergeOptionTypeEnum -> Maybe Bool -> Maybe Text -> MergeMetadata

-- | The Amazon Resource Name (ARN) of the user who merged the branches.
[$sel:mergedBy:MergeMetadata'] :: MergeMetadata -> Maybe Text

-- | The merge strategy used in the merge.
[$sel:mergeOption:MergeMetadata'] :: MergeMetadata -> Maybe MergeOptionTypeEnum

-- | A Boolean value indicating whether the merge has been made.
[$sel:isMerged:MergeMetadata'] :: MergeMetadata -> Maybe Bool

-- | The commit ID for the merge commit, if any.
[$sel:mergeCommitId:MergeMetadata'] :: MergeMetadata -> Maybe Text

-- | Create a value of <a>MergeMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mergedBy:MergeMetadata'</a>, <a>mergeMetadata_mergedBy</a> -
--   The Amazon Resource Name (ARN) of the user who merged the branches.
--   
--   <a>$sel:mergeOption:MergeMetadata'</a>,
--   <a>mergeMetadata_mergeOption</a> - The merge strategy used in the
--   merge.
--   
--   <a>$sel:isMerged:MergeMetadata'</a>, <a>mergeMetadata_isMerged</a> - A
--   Boolean value indicating whether the merge has been made.
--   
--   <a>$sel:mergeCommitId:MergeMetadata'</a>,
--   <a>mergeMetadata_mergeCommitId</a> - The commit ID for the merge
--   commit, if any.
newMergeMetadata :: MergeMetadata

-- | The Amazon Resource Name (ARN) of the user who merged the branches.
mergeMetadata_mergedBy :: Lens' MergeMetadata (Maybe Text)

-- | The merge strategy used in the merge.
mergeMetadata_mergeOption :: Lens' MergeMetadata (Maybe MergeOptionTypeEnum)

-- | A Boolean value indicating whether the merge has been made.
mergeMetadata_isMerged :: Lens' MergeMetadata (Maybe Bool)

-- | The commit ID for the merge commit, if any.
mergeMetadata_mergeCommitId :: Lens' MergeMetadata (Maybe Text)

-- | Information about the file operation conflicts in a merge operation.
--   
--   <i>See:</i> <a>newMergeOperations</a> smart constructor.
data MergeOperations
MergeOperations' :: Maybe ChangeTypeEnum -> Maybe ChangeTypeEnum -> MergeOperations

-- | The operation on a file in the destination of a merge or pull request.
[$sel:destination:MergeOperations'] :: MergeOperations -> Maybe ChangeTypeEnum

-- | The operation (add, modify, or delete) on a file in the source of a
--   merge or pull request.
[$sel:source:MergeOperations'] :: MergeOperations -> Maybe ChangeTypeEnum

-- | Create a value of <a>MergeOperations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:MergeOperations'</a>,
--   <a>mergeOperations_destination</a> - The operation on a file in the
--   destination of a merge or pull request.
--   
--   <a>$sel:source:MergeOperations'</a>, <a>mergeOperations_source</a> -
--   The operation (add, modify, or delete) on a file in the source of a
--   merge or pull request.
newMergeOperations :: MergeOperations

-- | The operation on a file in the destination of a merge or pull request.
mergeOperations_destination :: Lens' MergeOperations (Maybe ChangeTypeEnum)

-- | The operation (add, modify, or delete) on a file in the source of a
--   merge or pull request.
mergeOperations_source :: Lens' MergeOperations (Maybe ChangeTypeEnum)

-- | Information about the type of an object in a merge operation.
--   
--   <i>See:</i> <a>newObjectTypes</a> smart constructor.
data ObjectTypes
ObjectTypes' :: Maybe ObjectTypeEnum -> Maybe ObjectTypeEnum -> Maybe ObjectTypeEnum -> ObjectTypes

-- | The type of the object in the destination branch.
[$sel:destination:ObjectTypes'] :: ObjectTypes -> Maybe ObjectTypeEnum

-- | The type of the object in the base commit of the merge.
[$sel:base:ObjectTypes'] :: ObjectTypes -> Maybe ObjectTypeEnum

-- | The type of the object in the source branch.
[$sel:source:ObjectTypes'] :: ObjectTypes -> Maybe ObjectTypeEnum

-- | Create a value of <a>ObjectTypes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:ObjectTypes'</a>, <a>objectTypes_destination</a> -
--   The type of the object in the destination branch.
--   
--   <a>$sel:base:ObjectTypes'</a>, <a>objectTypes_base</a> - The type of
--   the object in the base commit of the merge.
--   
--   <a>$sel:source:ObjectTypes'</a>, <a>objectTypes_source</a> - The type
--   of the object in the source branch.
newObjectTypes :: ObjectTypes

-- | The type of the object in the destination branch.
objectTypes_destination :: Lens' ObjectTypes (Maybe ObjectTypeEnum)

-- | The type of the object in the base commit of the merge.
objectTypes_base :: Lens' ObjectTypes (Maybe ObjectTypeEnum)

-- | The type of the object in the source branch.
objectTypes_source :: Lens' ObjectTypes (Maybe ObjectTypeEnum)

-- | Returns information about the template that created the approval rule
--   for a pull request.
--   
--   <i>See:</i> <a>newOriginApprovalRuleTemplate</a> smart constructor.
data OriginApprovalRuleTemplate
OriginApprovalRuleTemplate' :: Maybe Text -> Maybe Text -> OriginApprovalRuleTemplate

-- | The ID of the template that created the approval rule.
[$sel:approvalRuleTemplateId:OriginApprovalRuleTemplate'] :: OriginApprovalRuleTemplate -> Maybe Text

-- | The name of the template that created the approval rule.
[$sel:approvalRuleTemplateName:OriginApprovalRuleTemplate'] :: OriginApprovalRuleTemplate -> Maybe Text

-- | Create a value of <a>OriginApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleTemplateId:OriginApprovalRuleTemplate'</a>,
--   <a>originApprovalRuleTemplate_approvalRuleTemplateId</a> - The ID of
--   the template that created the approval rule.
--   
--   <a>$sel:approvalRuleTemplateName:OriginApprovalRuleTemplate'</a>,
--   <a>originApprovalRuleTemplate_approvalRuleTemplateName</a> - The name
--   of the template that created the approval rule.
newOriginApprovalRuleTemplate :: OriginApprovalRuleTemplate

-- | The ID of the template that created the approval rule.
originApprovalRuleTemplate_approvalRuleTemplateId :: Lens' OriginApprovalRuleTemplate (Maybe Text)

-- | The name of the template that created the approval rule.
originApprovalRuleTemplate_approvalRuleTemplateName :: Lens' OriginApprovalRuleTemplate (Maybe Text)

-- | Returns information about a pull request.
--   
--   <i>See:</i> <a>newPullRequest</a> smart constructor.
data PullRequest
PullRequest' :: Maybe [ApprovalRule] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe PullRequestStatusEnum -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [PullRequestTarget] -> Maybe Text -> PullRequest

-- | The approval rules applied to the pull request.
[$sel:approvalRules:PullRequest'] :: PullRequest -> Maybe [ApprovalRule]

-- | The Amazon Resource Name (ARN) of the user who created the pull
--   request.
[$sel:authorArn:PullRequest'] :: PullRequest -> Maybe Text

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:PullRequest'] :: PullRequest -> Maybe Text

-- | The date and time the pull request was originally created, in
--   timestamp format.
[$sel:creationDate:PullRequest'] :: PullRequest -> Maybe POSIX

-- | The status of the pull request. Pull request status can only change
--   from <tt>OPEN</tt> to <tt>CLOSED</tt>.
[$sel:pullRequestStatus:PullRequest'] :: PullRequest -> Maybe PullRequestStatusEnum

-- | The user-defined title of the pull request. This title is displayed in
--   the list of pull requests to other repository users.
[$sel:title:PullRequest'] :: PullRequest -> Maybe Text

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
[$sel:clientRequestToken:PullRequest'] :: PullRequest -> Maybe Text

-- | The day and time of the last user or system activity on the pull
--   request, in timestamp format.
[$sel:lastActivityDate:PullRequest'] :: PullRequest -> Maybe POSIX

-- | The system-generated revision ID for the pull request.
[$sel:revisionId:PullRequest'] :: PullRequest -> Maybe Text

-- | The targets of the pull request, including the source branch and
--   destination branch for the pull request.
[$sel:pullRequestTargets:PullRequest'] :: PullRequest -> Maybe [PullRequestTarget]

-- | The user-defined description of the pull request. This description can
--   be used to clarify what should be reviewed and other details of the
--   request.
[$sel:description:PullRequest'] :: PullRequest -> Maybe Text

-- | Create a value of <a>PullRequest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRules:PullRequest'</a>,
--   <a>pullRequest_approvalRules</a> - The approval rules applied to the
--   pull request.
--   
--   <a>$sel:authorArn:PullRequest'</a>, <a>pullRequest_authorArn</a> - The
--   Amazon Resource Name (ARN) of the user who created the pull request.
--   
--   <a>$sel:pullRequestId:PullRequest'</a>,
--   <a>pullRequest_pullRequestId</a> - The system-generated ID of the pull
--   request.
--   
--   <a>$sel:creationDate:PullRequest'</a>, <a>pullRequest_creationDate</a>
--   - The date and time the pull request was originally created, in
--   timestamp format.
--   
--   <a>$sel:pullRequestStatus:PullRequest'</a>,
--   <a>pullRequest_pullRequestStatus</a> - The status of the pull request.
--   Pull request status can only change from <tt>OPEN</tt> to
--   <tt>CLOSED</tt>.
--   
--   <a>$sel:title:PullRequest'</a>, <a>pullRequest_title</a> - The
--   user-defined title of the pull request. This title is displayed in the
--   list of pull requests to other repository users.
--   
--   <a>$sel:clientRequestToken:PullRequest'</a>,
--   <a>pullRequest_clientRequestToken</a> - A unique, client-generated
--   idempotency token that, when provided in a request, ensures the
--   request cannot be repeated with a changed parameter. If a request is
--   received with the same parameters and a token is included, the request
--   returns information about the initial request that used that token.
--   
--   <a>$sel:lastActivityDate:PullRequest'</a>,
--   <a>pullRequest_lastActivityDate</a> - The day and time of the last
--   user or system activity on the pull request, in timestamp format.
--   
--   <a>$sel:revisionId:PullRequest'</a>, <a>pullRequest_revisionId</a> -
--   The system-generated revision ID for the pull request.
--   
--   <a>$sel:pullRequestTargets:PullRequest'</a>,
--   <a>pullRequest_pullRequestTargets</a> - The targets of the pull
--   request, including the source branch and destination branch for the
--   pull request.
--   
--   <a>$sel:description:PullRequest'</a>, <a>pullRequest_description</a> -
--   The user-defined description of the pull request. This description can
--   be used to clarify what should be reviewed and other details of the
--   request.
newPullRequest :: PullRequest

-- | The approval rules applied to the pull request.
pullRequest_approvalRules :: Lens' PullRequest (Maybe [ApprovalRule])

-- | The Amazon Resource Name (ARN) of the user who created the pull
--   request.
pullRequest_authorArn :: Lens' PullRequest (Maybe Text)

-- | The system-generated ID of the pull request.
pullRequest_pullRequestId :: Lens' PullRequest (Maybe Text)

-- | The date and time the pull request was originally created, in
--   timestamp format.
pullRequest_creationDate :: Lens' PullRequest (Maybe UTCTime)

-- | The status of the pull request. Pull request status can only change
--   from <tt>OPEN</tt> to <tt>CLOSED</tt>.
pullRequest_pullRequestStatus :: Lens' PullRequest (Maybe PullRequestStatusEnum)

-- | The user-defined title of the pull request. This title is displayed in
--   the list of pull requests to other repository users.
pullRequest_title :: Lens' PullRequest (Maybe Text)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
pullRequest_clientRequestToken :: Lens' PullRequest (Maybe Text)

-- | The day and time of the last user or system activity on the pull
--   request, in timestamp format.
pullRequest_lastActivityDate :: Lens' PullRequest (Maybe UTCTime)

-- | The system-generated revision ID for the pull request.
pullRequest_revisionId :: Lens' PullRequest (Maybe Text)

-- | The targets of the pull request, including the source branch and
--   destination branch for the pull request.
pullRequest_pullRequestTargets :: Lens' PullRequest (Maybe [PullRequestTarget])

-- | The user-defined description of the pull request. This description can
--   be used to clarify what should be reviewed and other details of the
--   request.
pullRequest_description :: Lens' PullRequest (Maybe Text)

-- | Metadata about the pull request that is used when comparing the pull
--   request source with its destination.
--   
--   <i>See:</i> <a>newPullRequestCreatedEventMetadata</a> smart
--   constructor.
data PullRequestCreatedEventMetadata
PullRequestCreatedEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestCreatedEventMetadata

-- | The commit ID of the tip of the branch specified as the destination
--   branch when the pull request was created.
[$sel:destinationCommitId:PullRequestCreatedEventMetadata'] :: PullRequestCreatedEventMetadata -> Maybe Text

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
[$sel:mergeBase:PullRequestCreatedEventMetadata'] :: PullRequestCreatedEventMetadata -> Maybe Text

-- | The name of the repository where the pull request was created.
[$sel:repositoryName:PullRequestCreatedEventMetadata'] :: PullRequestCreatedEventMetadata -> Maybe Text

-- | The commit ID on the source branch used when the pull request was
--   created.
[$sel:sourceCommitId:PullRequestCreatedEventMetadata'] :: PullRequestCreatedEventMetadata -> Maybe Text

-- | Create a value of <a>PullRequestCreatedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationCommitId:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_destinationCommitId</a> - The
--   commit ID of the tip of the branch specified as the destination branch
--   when the pull request was created.
--   
--   <a>$sel:mergeBase:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_mergeBase</a> - The commit ID of
--   the most recent commit that the source branch and the destination
--   branch have in common.
--   
--   <a>$sel:repositoryName:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_repositoryName</a> - The name of
--   the repository where the pull request was created.
--   
--   <a>$sel:sourceCommitId:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_sourceCommitId</a> - The commit ID
--   on the source branch used when the pull request was created.
newPullRequestCreatedEventMetadata :: PullRequestCreatedEventMetadata

-- | The commit ID of the tip of the branch specified as the destination
--   branch when the pull request was created.
pullRequestCreatedEventMetadata_destinationCommitId :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestCreatedEventMetadata_mergeBase :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The name of the repository where the pull request was created.
pullRequestCreatedEventMetadata_repositoryName :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The commit ID on the source branch used when the pull request was
--   created.
pullRequestCreatedEventMetadata_sourceCommitId :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | Returns information about a pull request event.
--   
--   <i>See:</i> <a>newPullRequestEvent</a> smart constructor.
data PullRequestEvent
PullRequestEvent' :: Maybe PullRequestMergedStateChangedEventMetadata -> Maybe PullRequestCreatedEventMetadata -> Maybe ApprovalRuleEventMetadata -> Maybe PullRequestEventType -> Maybe PullRequestStatusChangedEventMetadata -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ApprovalStateChangedEventMetadata -> Maybe PullRequestSourceReferenceUpdatedEventMetadata -> Maybe ApprovalRuleOverriddenEventMetadata -> PullRequestEvent

-- | Information about the change in mergability state for the pull request
--   event.
[$sel:pullRequestMergedStateChangedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestMergedStateChangedEventMetadata

-- | Information about the source and destination branches for the pull
--   request.
[$sel:pullRequestCreatedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestCreatedEventMetadata

-- | Information about a pull request event.
[$sel:approvalRuleEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe ApprovalRuleEventMetadata

-- | The type of the pull request event (for example, a status change event
--   (PULL_REQUEST_STATUS_CHANGED) or update event
--   (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
[$sel:pullRequestEventType:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestEventType

-- | Information about the change in status for the pull request event.
[$sel:pullRequestStatusChangedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestStatusChangedEventMetadata

-- | The Amazon Resource Name (ARN) of the user whose actions resulted in
--   the event. Examples include updating the pull request with more
--   commits or changing the status of a pull request.
[$sel:actorArn:PullRequestEvent'] :: PullRequestEvent -> Maybe Text

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:PullRequestEvent'] :: PullRequestEvent -> Maybe Text

-- | The day and time of the pull request event, in timestamp format.
[$sel:eventDate:PullRequestEvent'] :: PullRequestEvent -> Maybe POSIX

-- | Information about an approval state change for a pull request.
[$sel:approvalStateChangedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe ApprovalStateChangedEventMetadata

-- | Information about the updated source branch for the pull request
--   event.
[$sel:pullRequestSourceReferenceUpdatedEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe PullRequestSourceReferenceUpdatedEventMetadata

-- | Information about an approval rule override event for a pull request.
[$sel:approvalRuleOverriddenEventMetadata:PullRequestEvent'] :: PullRequestEvent -> Maybe ApprovalRuleOverriddenEventMetadata

-- | Create a value of <a>PullRequestEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:pullRequestMergedStateChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestMergedStateChangedEventMetadata</a> -
--   Information about the change in mergability state for the pull request
--   event.
--   
--   <a>$sel:pullRequestCreatedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestCreatedEventMetadata</a> - Information
--   about the source and destination branches for the pull request.
--   
--   <a>$sel:approvalRuleEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalRuleEventMetadata</a> - Information about
--   a pull request event.
--   
--   <a>$sel:pullRequestEventType:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestEventType</a> - The type of the pull
--   request event (for example, a status change event
--   (PULL_REQUEST_STATUS_CHANGED) or update event
--   (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
--   
--   <a>$sel:pullRequestStatusChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestStatusChangedEventMetadata</a> -
--   Information about the change in status for the pull request event.
--   
--   <a>$sel:actorArn:PullRequestEvent'</a>,
--   <a>pullRequestEvent_actorArn</a> - The Amazon Resource Name (ARN) of
--   the user whose actions resulted in the event. Examples include
--   updating the pull request with more commits or changing the status of
--   a pull request.
--   
--   <a>$sel:pullRequestId:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestId</a> - The system-generated ID of the
--   pull request.
--   
--   <a>$sel:eventDate:PullRequestEvent'</a>,
--   <a>pullRequestEvent_eventDate</a> - The day and time of the pull
--   request event, in timestamp format.
--   
--   <a>$sel:approvalStateChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalStateChangedEventMetadata</a> -
--   Information about an approval state change for a pull request.
--   
--   
--   <a>$sel:pullRequestSourceReferenceUpdatedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestSourceReferenceUpdatedEventMetadata</a>
--   - Information about the updated source branch for the pull request
--   event.
--   
--   <a>$sel:approvalRuleOverriddenEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalRuleOverriddenEventMetadata</a> -
--   Information about an approval rule override event for a pull request.
newPullRequestEvent :: PullRequestEvent

-- | Information about the change in mergability state for the pull request
--   event.
pullRequestEvent_pullRequestMergedStateChangedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestMergedStateChangedEventMetadata)

-- | Information about the source and destination branches for the pull
--   request.
pullRequestEvent_pullRequestCreatedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestCreatedEventMetadata)

-- | Information about a pull request event.
pullRequestEvent_approvalRuleEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalRuleEventMetadata)

-- | The type of the pull request event (for example, a status change event
--   (PULL_REQUEST_STATUS_CHANGED) or update event
--   (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
pullRequestEvent_pullRequestEventType :: Lens' PullRequestEvent (Maybe PullRequestEventType)

-- | Information about the change in status for the pull request event.
pullRequestEvent_pullRequestStatusChangedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestStatusChangedEventMetadata)

-- | The Amazon Resource Name (ARN) of the user whose actions resulted in
--   the event. Examples include updating the pull request with more
--   commits or changing the status of a pull request.
pullRequestEvent_actorArn :: Lens' PullRequestEvent (Maybe Text)

-- | The system-generated ID of the pull request.
pullRequestEvent_pullRequestId :: Lens' PullRequestEvent (Maybe Text)

-- | The day and time of the pull request event, in timestamp format.
pullRequestEvent_eventDate :: Lens' PullRequestEvent (Maybe UTCTime)

-- | Information about an approval state change for a pull request.
pullRequestEvent_approvalStateChangedEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalStateChangedEventMetadata)

-- | Information about the updated source branch for the pull request
--   event.
pullRequestEvent_pullRequestSourceReferenceUpdatedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestSourceReferenceUpdatedEventMetadata)

-- | Information about an approval rule override event for a pull request.
pullRequestEvent_approvalRuleOverriddenEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalRuleOverriddenEventMetadata)

-- | Returns information about the change in the merge state for a pull
--   request event.
--   
--   <i>See:</i> <a>newPullRequestMergedStateChangedEventMetadata</a> smart
--   constructor.
data PullRequestMergedStateChangedEventMetadata
PullRequestMergedStateChangedEventMetadata' :: Maybe Text -> Maybe MergeMetadata -> Maybe Text -> PullRequestMergedStateChangedEventMetadata

-- | The name of the branch that the pull request is merged into.
[$sel:destinationReference:PullRequestMergedStateChangedEventMetadata'] :: PullRequestMergedStateChangedEventMetadata -> Maybe Text

-- | Information about the merge state change event.
[$sel:mergeMetadata:PullRequestMergedStateChangedEventMetadata'] :: PullRequestMergedStateChangedEventMetadata -> Maybe MergeMetadata

-- | The name of the repository where the pull request was created.
[$sel:repositoryName:PullRequestMergedStateChangedEventMetadata'] :: PullRequestMergedStateChangedEventMetadata -> Maybe Text

-- | Create a value of <a>PullRequestMergedStateChangedEventMetadata</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:destinationReference:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_destinationReference</a>
--   - The name of the branch that the pull request is merged into.
--   
--   <a>$sel:mergeMetadata:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_mergeMetadata</a> -
--   Information about the merge state change event.
--   
--   
--   <a>$sel:repositoryName:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_repositoryName</a> - The
--   name of the repository where the pull request was created.
newPullRequestMergedStateChangedEventMetadata :: PullRequestMergedStateChangedEventMetadata

-- | The name of the branch that the pull request is merged into.
pullRequestMergedStateChangedEventMetadata_destinationReference :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe Text)

-- | Information about the merge state change event.
pullRequestMergedStateChangedEventMetadata_mergeMetadata :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe MergeMetadata)

-- | The name of the repository where the pull request was created.
pullRequestMergedStateChangedEventMetadata_repositoryName :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe Text)

-- | Information about an update to the source branch of a pull request.
--   
--   <i>See:</i> <a>newPullRequestSourceReferenceUpdatedEventMetadata</a>
--   smart constructor.
data PullRequestSourceReferenceUpdatedEventMetadata
PullRequestSourceReferenceUpdatedEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestSourceReferenceUpdatedEventMetadata

-- | The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the pull request was updated.
[$sel:afterCommitId:PullRequestSourceReferenceUpdatedEventMetadata'] :: PullRequestSourceReferenceUpdatedEventMetadata -> Maybe Text

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was updated.
[$sel:beforeCommitId:PullRequestSourceReferenceUpdatedEventMetadata'] :: PullRequestSourceReferenceUpdatedEventMetadata -> Maybe Text

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
[$sel:mergeBase:PullRequestSourceReferenceUpdatedEventMetadata'] :: PullRequestSourceReferenceUpdatedEventMetadata -> Maybe Text

-- | The name of the repository where the pull request was updated.
[$sel:repositoryName:PullRequestSourceReferenceUpdatedEventMetadata'] :: PullRequestSourceReferenceUpdatedEventMetadata -> Maybe Text

-- | Create a value of
--   <a>PullRequestSourceReferenceUpdatedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:afterCommitId:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_afterCommitId</a> -
--   The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the pull request was updated.
--   
--   
--   <a>$sel:beforeCommitId:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_beforeCommitId</a> -
--   The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was updated.
--   
--   <a>$sel:mergeBase:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_mergeBase</a> - The
--   commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
--   
--   
--   <a>$sel:repositoryName:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_repositoryName</a> -
--   The name of the repository where the pull request was updated.
newPullRequestSourceReferenceUpdatedEventMetadata :: PullRequestSourceReferenceUpdatedEventMetadata

-- | The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_afterCommitId :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_beforeCommitId :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestSourceReferenceUpdatedEventMetadata_mergeBase :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The name of the repository where the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_repositoryName :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | Information about a change to the status of a pull request.
--   
--   <i>See:</i> <a>newPullRequestStatusChangedEventMetadata</a> smart
--   constructor.
data PullRequestStatusChangedEventMetadata
PullRequestStatusChangedEventMetadata' :: Maybe PullRequestStatusEnum -> PullRequestStatusChangedEventMetadata

-- | The changed status of the pull request.
[$sel:pullRequestStatus:PullRequestStatusChangedEventMetadata'] :: PullRequestStatusChangedEventMetadata -> Maybe PullRequestStatusEnum

-- | Create a value of <a>PullRequestStatusChangedEventMetadata</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestStatus:PullRequestStatusChangedEventMetadata'</a>,
--   <a>pullRequestStatusChangedEventMetadata_pullRequestStatus</a> - The
--   changed status of the pull request.
newPullRequestStatusChangedEventMetadata :: PullRequestStatusChangedEventMetadata

-- | The changed status of the pull request.
pullRequestStatusChangedEventMetadata_pullRequestStatus :: Lens' PullRequestStatusChangedEventMetadata (Maybe PullRequestStatusEnum)

-- | Returns information about a pull request target.
--   
--   <i>See:</i> <a>newPullRequestTarget</a> smart constructor.
data PullRequestTarget
PullRequestTarget' :: Maybe Text -> Maybe Text -> Maybe MergeMetadata -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestTarget

-- | The full commit ID of the tip of the source branch used to create the
--   pull request. If the pull request branch is updated by a push while
--   the pull request is open, the commit ID changes to reflect the new tip
--   of the branch.
[$sel:sourceCommit:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
[$sel:destinationReference:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | Returns metadata about the state of the merge, including whether the
--   merge has been made.
[$sel:mergeMetadata:PullRequestTarget'] :: PullRequestTarget -> Maybe MergeMetadata

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
[$sel:mergeBase:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | The full commit ID that is the tip of the destination branch. This is
--   the commit where the pull request was or will be merged.
[$sel:destinationCommit:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | The name of the repository that contains the pull request source and
--   destination branches.
[$sel:repositoryName:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
[$sel:sourceReference:PullRequestTarget'] :: PullRequestTarget -> Maybe Text

-- | Create a value of <a>PullRequestTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCommit:PullRequestTarget'</a>,
--   <a>pullRequestTarget_sourceCommit</a> - The full commit ID of the tip
--   of the source branch used to create the pull request. If the pull
--   request branch is updated by a push while the pull request is open,
--   the commit ID changes to reflect the new tip of the branch.
--   
--   <a>$sel:destinationReference:PullRequestTarget'</a>,
--   <a>pullRequestTarget_destinationReference</a> - The branch of the
--   repository where the pull request changes are merged. Also known as
--   the destination branch.
--   
--   <a>$sel:mergeMetadata:PullRequestTarget'</a>,
--   <a>pullRequestTarget_mergeMetadata</a> - Returns metadata about the
--   state of the merge, including whether the merge has been made.
--   
--   <a>$sel:mergeBase:PullRequestTarget'</a>,
--   <a>pullRequestTarget_mergeBase</a> - The commit ID of the most recent
--   commit that the source branch and the destination branch have in
--   common.
--   
--   <a>$sel:destinationCommit:PullRequestTarget'</a>,
--   <a>pullRequestTarget_destinationCommit</a> - The full commit ID that
--   is the tip of the destination branch. This is the commit where the
--   pull request was or will be merged.
--   
--   <a>$sel:repositoryName:PullRequestTarget'</a>,
--   <a>pullRequestTarget_repositoryName</a> - The name of the repository
--   that contains the pull request source and destination branches.
--   
--   <a>$sel:sourceReference:PullRequestTarget'</a>,
--   <a>pullRequestTarget_sourceReference</a> - The branch of the
--   repository that contains the changes for the pull request. Also known
--   as the source branch.
newPullRequestTarget :: PullRequestTarget

-- | The full commit ID of the tip of the source branch used to create the
--   pull request. If the pull request branch is updated by a push while
--   the pull request is open, the commit ID changes to reflect the new tip
--   of the branch.
pullRequestTarget_sourceCommit :: Lens' PullRequestTarget (Maybe Text)

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
pullRequestTarget_destinationReference :: Lens' PullRequestTarget (Maybe Text)

-- | Returns metadata about the state of the merge, including whether the
--   merge has been made.
pullRequestTarget_mergeMetadata :: Lens' PullRequestTarget (Maybe MergeMetadata)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestTarget_mergeBase :: Lens' PullRequestTarget (Maybe Text)

-- | The full commit ID that is the tip of the destination branch. This is
--   the commit where the pull request was or will be merged.
pullRequestTarget_destinationCommit :: Lens' PullRequestTarget (Maybe Text)

-- | The name of the repository that contains the pull request source and
--   destination branches.
pullRequestTarget_repositoryName :: Lens' PullRequestTarget (Maybe Text)

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
pullRequestTarget_sourceReference :: Lens' PullRequestTarget (Maybe Text)

-- | Information about a file added or updated as part of a commit.
--   
--   <i>See:</i> <a>newPutFileEntry</a> smart constructor.
data PutFileEntry
PutFileEntry' :: Maybe Base64 -> Maybe FileModeTypeEnum -> Maybe SourceFileSpecifier -> Text -> PutFileEntry

-- | The content of the file, if a source file is not specified.
[$sel:fileContent:PutFileEntry'] :: PutFileEntry -> Maybe Base64

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
[$sel:fileMode:PutFileEntry'] :: PutFileEntry -> Maybe FileModeTypeEnum

-- | The name and full path of the file that contains the changes you want
--   to make as part of the commit, if you are not providing the file
--   content directly.
[$sel:sourceFile:PutFileEntry'] :: PutFileEntry -> Maybe SourceFileSpecifier

-- | The full path to the file in the repository, including the name of the
--   file.
[$sel:filePath:PutFileEntry'] :: PutFileEntry -> Text

-- | Create a value of <a>PutFileEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileContent:PutFileEntry'</a>, <a>putFileEntry_fileContent</a>
--   - The content of the file, if a source file is not specified.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:fileMode:PutFileEntry'</a>, <a>putFileEntry_fileMode</a> - The
--   extrapolated file mode permissions for the file. Valid values include
--   EXECUTABLE and NORMAL.
--   
--   <a>$sel:sourceFile:PutFileEntry'</a>, <a>putFileEntry_sourceFile</a> -
--   The name and full path of the file that contains the changes you want
--   to make as part of the commit, if you are not providing the file
--   content directly.
--   
--   <a>$sel:filePath:PutFileEntry'</a>, <a>putFileEntry_filePath</a> - The
--   full path to the file in the repository, including the name of the
--   file.
newPutFileEntry :: Text -> PutFileEntry

-- | The content of the file, if a source file is not specified.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
putFileEntry_fileContent :: Lens' PutFileEntry (Maybe ByteString)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
putFileEntry_fileMode :: Lens' PutFileEntry (Maybe FileModeTypeEnum)

-- | The name and full path of the file that contains the changes you want
--   to make as part of the commit, if you are not providing the file
--   content directly.
putFileEntry_sourceFile :: Lens' PutFileEntry (Maybe SourceFileSpecifier)

-- | The full path to the file in the repository, including the name of the
--   file.
putFileEntry_filePath :: Lens' PutFileEntry Text

-- | Information about the reaction values provided by users on a comment.
--   
--   <i>See:</i> <a>newReactionForComment</a> smart constructor.
data ReactionForComment
ReactionForComment' :: Maybe [Text] -> Maybe Int -> Maybe ReactionValueFormats -> ReactionForComment

-- | The Amazon Resource Names (ARNs) of users who have provided reactions
--   to the comment.
[$sel:reactionUsers:ReactionForComment'] :: ReactionForComment -> Maybe [Text]

-- | A numerical count of users who reacted with the specified emoji whose
--   identities have been subsequently deleted from IAM. While these IAM
--   users or roles no longer exist, the reactions might still appear in
--   total reaction counts.
[$sel:reactionsFromDeletedUsersCount:ReactionForComment'] :: ReactionForComment -> Maybe Int

-- | The reaction for a specified comment.
[$sel:reaction:ReactionForComment'] :: ReactionForComment -> Maybe ReactionValueFormats

-- | Create a value of <a>ReactionForComment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reactionUsers:ReactionForComment'</a>,
--   <a>reactionForComment_reactionUsers</a> - The Amazon Resource Names
--   (ARNs) of users who have provided reactions to the comment.
--   
--   <a>$sel:reactionsFromDeletedUsersCount:ReactionForComment'</a>,
--   <a>reactionForComment_reactionsFromDeletedUsersCount</a> - A numerical
--   count of users who reacted with the specified emoji whose identities
--   have been subsequently deleted from IAM. While these IAM users or
--   roles no longer exist, the reactions might still appear in total
--   reaction counts.
--   
--   <a>$sel:reaction:ReactionForComment'</a>,
--   <a>reactionForComment_reaction</a> - The reaction for a specified
--   comment.
newReactionForComment :: ReactionForComment

-- | The Amazon Resource Names (ARNs) of users who have provided reactions
--   to the comment.
reactionForComment_reactionUsers :: Lens' ReactionForComment (Maybe [Text])

-- | A numerical count of users who reacted with the specified emoji whose
--   identities have been subsequently deleted from IAM. While these IAM
--   users or roles no longer exist, the reactions might still appear in
--   total reaction counts.
reactionForComment_reactionsFromDeletedUsersCount :: Lens' ReactionForComment (Maybe Int)

-- | The reaction for a specified comment.
reactionForComment_reaction :: Lens' ReactionForComment (Maybe ReactionValueFormats)

-- | Information about the values for reactions to a comment. AWS
--   CodeCommit supports a limited set of reactions.
--   
--   <i>See:</i> <a>newReactionValueFormats</a> smart constructor.
data ReactionValueFormats
ReactionValueFormats' :: Maybe Text -> Maybe Text -> Maybe Text -> ReactionValueFormats

-- | The Emoji Version 1.0 graphic of the reaction. These graphics are
--   interpreted slightly differently on different operating systems.
[$sel:emoji:ReactionValueFormats'] :: ReactionValueFormats -> Maybe Text

-- | The emoji short code for the reaction. Short codes are interpreted
--   slightly differently on different operating systems.
[$sel:shortCode:ReactionValueFormats'] :: ReactionValueFormats -> Maybe Text

-- | The Unicode codepoint for the reaction.
[$sel:unicode:ReactionValueFormats'] :: ReactionValueFormats -> Maybe Text

-- | Create a value of <a>ReactionValueFormats</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emoji:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_emoji</a> - The Emoji Version 1.0 graphic of
--   the reaction. These graphics are interpreted slightly differently on
--   different operating systems.
--   
--   <a>$sel:shortCode:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_shortCode</a> - The emoji short code for the
--   reaction. Short codes are interpreted slightly differently on
--   different operating systems.
--   
--   <a>$sel:unicode:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_unicode</a> - The Unicode codepoint for the
--   reaction.
newReactionValueFormats :: ReactionValueFormats

-- | The Emoji Version 1.0 graphic of the reaction. These graphics are
--   interpreted slightly differently on different operating systems.
reactionValueFormats_emoji :: Lens' ReactionValueFormats (Maybe Text)

-- | The emoji short code for the reaction. Short codes are interpreted
--   slightly differently on different operating systems.
reactionValueFormats_shortCode :: Lens' ReactionValueFormats (Maybe Text)

-- | The Unicode codepoint for the reaction.
reactionValueFormats_unicode :: Lens' ReactionValueFormats (Maybe Text)

-- | Information about a replacement content entry in the conflict of a
--   merge or pull request operation.
--   
--   <i>See:</i> <a>newReplaceContentEntry</a> smart constructor.
data ReplaceContentEntry
ReplaceContentEntry' :: Maybe FileModeTypeEnum -> Maybe Base64 -> Text -> ReplacementTypeEnum -> ReplaceContentEntry

-- | The file mode to apply during conflict resoltion.
[$sel:fileMode:ReplaceContentEntry'] :: ReplaceContentEntry -> Maybe FileModeTypeEnum

-- | The base-64 encoded content to use when the replacement type is
--   USE_NEW_CONTENT.
[$sel:content:ReplaceContentEntry'] :: ReplaceContentEntry -> Maybe Base64

-- | The path of the conflicting file.
[$sel:filePath:ReplaceContentEntry'] :: ReplaceContentEntry -> Text

-- | The replacement type to use when determining how to resolve the
--   conflict.
[$sel:replacementType:ReplaceContentEntry'] :: ReplaceContentEntry -> ReplacementTypeEnum

-- | Create a value of <a>ReplaceContentEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileMode:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_fileMode</a> - The file mode to apply during
--   conflict resoltion.
--   
--   <a>$sel:content:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_content</a> - The base-64 encoded content to
--   use when the replacement type is USE_NEW_CONTENT.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:filePath:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_filePath</a> - The path of the conflicting
--   file.
--   
--   <a>$sel:replacementType:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_replacementType</a> - The replacement type to
--   use when determining how to resolve the conflict.
newReplaceContentEntry :: Text -> ReplacementTypeEnum -> ReplaceContentEntry

-- | The file mode to apply during conflict resoltion.
replaceContentEntry_fileMode :: Lens' ReplaceContentEntry (Maybe FileModeTypeEnum)

-- | The base-64 encoded content to use when the replacement type is
--   USE_NEW_CONTENT.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
replaceContentEntry_content :: Lens' ReplaceContentEntry (Maybe ByteString)

-- | The path of the conflicting file.
replaceContentEntry_filePath :: Lens' ReplaceContentEntry Text

-- | The replacement type to use when determining how to resolve the
--   conflict.
replaceContentEntry_replacementType :: Lens' ReplaceContentEntry ReplacementTypeEnum

-- | Information about a repository.
--   
--   <i>See:</i> <a>newRepositoryMetadata</a> smart constructor.
data RepositoryMetadata
RepositoryMetadata' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> RepositoryMetadata

-- | A comment or description about the repository.
[$sel:repositoryDescription:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The date and time the repository was last modified, in timestamp
--   format.
[$sel:lastModifiedDate:RepositoryMetadata'] :: RepositoryMetadata -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the repository.
[$sel:arn:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The URL to use for cloning the repository over HTTPS.
[$sel:cloneUrlHttp:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The ID of the AWS account associated with the repository.
[$sel:accountId:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The repository's default branch name.
[$sel:defaultBranch:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The ID of the repository.
[$sel:repositoryId:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The repository's name.
[$sel:repositoryName:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | The date and time the repository was created, in timestamp format.
[$sel:creationDate:RepositoryMetadata'] :: RepositoryMetadata -> Maybe POSIX

-- | The URL to use for cloning the repository over SSH.
[$sel:cloneUrlSsh:RepositoryMetadata'] :: RepositoryMetadata -> Maybe Text

-- | Create a value of <a>RepositoryMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryDescription:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryDescription</a> - A comment or
--   description about the repository.
--   
--   <a>$sel:lastModifiedDate:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_lastModifiedDate</a> - The date and time the
--   repository was last modified, in timestamp format.
--   
--   <a>$sel:arn:RepositoryMetadata'</a>, <a>repositoryMetadata_arn</a> -
--   The Amazon Resource Name (ARN) of the repository.
--   
--   <a>$sel:cloneUrlHttp:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_cloneUrlHttp</a> - The URL to use for cloning
--   the repository over HTTPS.
--   
--   <a>$sel:accountId:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_accountId</a> - The ID of the AWS account
--   associated with the repository.
--   
--   <a>$sel:defaultBranch:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_defaultBranch</a> - The repository's default
--   branch name.
--   
--   <a>$sel:repositoryId:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryId</a> - The ID of the repository.
--   
--   <a>$sel:repositoryName:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryName</a> - The repository's name.
--   
--   <a>$sel:creationDate:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_creationDate</a> - The date and time the
--   repository was created, in timestamp format.
--   
--   <a>$sel:cloneUrlSsh:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_cloneUrlSsh</a> - The URL to use for cloning the
--   repository over SSH.
newRepositoryMetadata :: RepositoryMetadata

-- | A comment or description about the repository.
repositoryMetadata_repositoryDescription :: Lens' RepositoryMetadata (Maybe Text)

-- | The date and time the repository was last modified, in timestamp
--   format.
repositoryMetadata_lastModifiedDate :: Lens' RepositoryMetadata (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the repository.
repositoryMetadata_arn :: Lens' RepositoryMetadata (Maybe Text)

-- | The URL to use for cloning the repository over HTTPS.
repositoryMetadata_cloneUrlHttp :: Lens' RepositoryMetadata (Maybe Text)

-- | The ID of the AWS account associated with the repository.
repositoryMetadata_accountId :: Lens' RepositoryMetadata (Maybe Text)

-- | The repository's default branch name.
repositoryMetadata_defaultBranch :: Lens' RepositoryMetadata (Maybe Text)

-- | The ID of the repository.
repositoryMetadata_repositoryId :: Lens' RepositoryMetadata (Maybe Text)

-- | The repository's name.
repositoryMetadata_repositoryName :: Lens' RepositoryMetadata (Maybe Text)

-- | The date and time the repository was created, in timestamp format.
repositoryMetadata_creationDate :: Lens' RepositoryMetadata (Maybe UTCTime)

-- | The URL to use for cloning the repository over SSH.
repositoryMetadata_cloneUrlSsh :: Lens' RepositoryMetadata (Maybe Text)

-- | Information about a repository name and ID.
--   
--   <i>See:</i> <a>newRepositoryNameIdPair</a> smart constructor.
data RepositoryNameIdPair
RepositoryNameIdPair' :: Maybe Text -> Maybe Text -> RepositoryNameIdPair

-- | The ID associated with the repository.
[$sel:repositoryId:RepositoryNameIdPair'] :: RepositoryNameIdPair -> Maybe Text

-- | The name associated with the repository.
[$sel:repositoryName:RepositoryNameIdPair'] :: RepositoryNameIdPair -> Maybe Text

-- | Create a value of <a>RepositoryNameIdPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryId:RepositoryNameIdPair'</a>,
--   <a>repositoryNameIdPair_repositoryId</a> - The ID associated with the
--   repository.
--   
--   <a>$sel:repositoryName:RepositoryNameIdPair'</a>,
--   <a>repositoryNameIdPair_repositoryName</a> - The name associated with
--   the repository.
newRepositoryNameIdPair :: RepositoryNameIdPair

-- | The ID associated with the repository.
repositoryNameIdPair_repositoryId :: Lens' RepositoryNameIdPair (Maybe Text)

-- | The name associated with the repository.
repositoryNameIdPair_repositoryName :: Lens' RepositoryNameIdPair (Maybe Text)

-- | Information about a trigger for a repository.
--   
--   <i>See:</i> <a>newRepositoryTrigger</a> smart constructor.
data RepositoryTrigger
RepositoryTrigger' :: Maybe [Text] -> Maybe Text -> Text -> Text -> [RepositoryTriggerEventEnum] -> RepositoryTrigger

-- | The branches to be included in the trigger configuration. If you
--   specify an empty array, the trigger applies to all branches.
--   
--   Although no content is required in the array, you must include the
--   array itself.
[$sel:branches:RepositoryTrigger'] :: RepositoryTrigger -> Maybe [Text]

-- | Any custom data associated with the trigger to be included in the
--   information sent to the target of the trigger.
[$sel:customData:RepositoryTrigger'] :: RepositoryTrigger -> Maybe Text

-- | The name of the trigger.
[$sel:name:RepositoryTrigger'] :: RepositoryTrigger -> Text

-- | The ARN of the resource that is the target for a trigger (for example,
--   the ARN of a topic in Amazon SNS).
[$sel:destinationArn:RepositoryTrigger'] :: RepositoryTrigger -> Text

-- | The repository events that cause the trigger to run actions in another
--   service, such as sending a notification through Amazon SNS.
--   
--   The valid value "all" cannot be used with any other values.
[$sel:events:RepositoryTrigger'] :: RepositoryTrigger -> [RepositoryTriggerEventEnum]

-- | Create a value of <a>RepositoryTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branches:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_branches</a> - The branches to be included in the
--   trigger configuration. If you specify an empty array, the trigger
--   applies to all branches.
--   
--   Although no content is required in the array, you must include the
--   array itself.
--   
--   <a>$sel:customData:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_customData</a> - Any custom data associated with
--   the trigger to be included in the information sent to the target of
--   the trigger.
--   
--   <a>$sel:name:RepositoryTrigger'</a>, <a>repositoryTrigger_name</a> -
--   The name of the trigger.
--   
--   <a>$sel:destinationArn:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_destinationArn</a> - The ARN of the resource that
--   is the target for a trigger (for example, the ARN of a topic in Amazon
--   SNS).
--   
--   <a>$sel:events:RepositoryTrigger'</a>, <a>repositoryTrigger_events</a>
--   - The repository events that cause the trigger to run actions in
--   another service, such as sending a notification through Amazon SNS.
--   
--   The valid value "all" cannot be used with any other values.
newRepositoryTrigger :: Text -> Text -> RepositoryTrigger

-- | The branches to be included in the trigger configuration. If you
--   specify an empty array, the trigger applies to all branches.
--   
--   Although no content is required in the array, you must include the
--   array itself.
repositoryTrigger_branches :: Lens' RepositoryTrigger (Maybe [Text])

-- | Any custom data associated with the trigger to be included in the
--   information sent to the target of the trigger.
repositoryTrigger_customData :: Lens' RepositoryTrigger (Maybe Text)

-- | The name of the trigger.
repositoryTrigger_name :: Lens' RepositoryTrigger Text

-- | The ARN of the resource that is the target for a trigger (for example,
--   the ARN of a topic in Amazon SNS).
repositoryTrigger_destinationArn :: Lens' RepositoryTrigger Text

-- | The repository events that cause the trigger to run actions in another
--   service, such as sending a notification through Amazon SNS.
--   
--   The valid value "all" cannot be used with any other values.
repositoryTrigger_events :: Lens' RepositoryTrigger [RepositoryTriggerEventEnum]

-- | A trigger failed to run.
--   
--   <i>See:</i> <a>newRepositoryTriggerExecutionFailure</a> smart
--   constructor.
data RepositoryTriggerExecutionFailure
RepositoryTriggerExecutionFailure' :: Maybe Text -> Maybe Text -> RepositoryTriggerExecutionFailure

-- | Message information about the trigger that did not run.
[$sel:failureMessage:RepositoryTriggerExecutionFailure'] :: RepositoryTriggerExecutionFailure -> Maybe Text

-- | The name of the trigger that did not run.
[$sel:trigger:RepositoryTriggerExecutionFailure'] :: RepositoryTriggerExecutionFailure -> Maybe Text

-- | Create a value of <a>RepositoryTriggerExecutionFailure</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:RepositoryTriggerExecutionFailure'</a>,
--   <a>repositoryTriggerExecutionFailure_failureMessage</a> - Message
--   information about the trigger that did not run.
--   
--   <a>$sel:trigger:RepositoryTriggerExecutionFailure'</a>,
--   <a>repositoryTriggerExecutionFailure_trigger</a> - The name of the
--   trigger that did not run.
newRepositoryTriggerExecutionFailure :: RepositoryTriggerExecutionFailure

-- | Message information about the trigger that did not run.
repositoryTriggerExecutionFailure_failureMessage :: Lens' RepositoryTriggerExecutionFailure (Maybe Text)

-- | The name of the trigger that did not run.
repositoryTriggerExecutionFailure_trigger :: Lens' RepositoryTriggerExecutionFailure (Maybe Text)

-- | Information about the file mode changes.
--   
--   <i>See:</i> <a>newSetFileModeEntry</a> smart constructor.
data SetFileModeEntry
SetFileModeEntry' :: Text -> FileModeTypeEnum -> SetFileModeEntry

-- | The full path to the file, including the name of the file.
[$sel:filePath:SetFileModeEntry'] :: SetFileModeEntry -> Text

-- | The file mode for the file.
[$sel:fileMode:SetFileModeEntry'] :: SetFileModeEntry -> FileModeTypeEnum

-- | Create a value of <a>SetFileModeEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:SetFileModeEntry'</a>,
--   <a>setFileModeEntry_filePath</a> - The full path to the file,
--   including the name of the file.
--   
--   <a>$sel:fileMode:SetFileModeEntry'</a>,
--   <a>setFileModeEntry_fileMode</a> - The file mode for the file.
newSetFileModeEntry :: Text -> FileModeTypeEnum -> SetFileModeEntry

-- | The full path to the file, including the name of the file.
setFileModeEntry_filePath :: Lens' SetFileModeEntry Text

-- | The file mode for the file.
setFileModeEntry_fileMode :: Lens' SetFileModeEntry FileModeTypeEnum

-- | Information about a source file that is part of changes made in a
--   commit.
--   
--   <i>See:</i> <a>newSourceFileSpecifier</a> smart constructor.
data SourceFileSpecifier
SourceFileSpecifier' :: Maybe Bool -> Text -> SourceFileSpecifier

-- | Whether to remove the source file from the parent commit.
[$sel:isMove:SourceFileSpecifier'] :: SourceFileSpecifier -> Maybe Bool

-- | The full path to the file, including the name of the file.
[$sel:filePath:SourceFileSpecifier'] :: SourceFileSpecifier -> Text

-- | Create a value of <a>SourceFileSpecifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isMove:SourceFileSpecifier'</a>,
--   <a>sourceFileSpecifier_isMove</a> - Whether to remove the source file
--   from the parent commit.
--   
--   <a>$sel:filePath:SourceFileSpecifier'</a>,
--   <a>sourceFileSpecifier_filePath</a> - The full path to the file,
--   including the name of the file.
newSourceFileSpecifier :: Text -> SourceFileSpecifier

-- | Whether to remove the source file from the parent commit.
sourceFileSpecifier_isMove :: Lens' SourceFileSpecifier (Maybe Bool)

-- | The full path to the file, including the name of the file.
sourceFileSpecifier_filePath :: Lens' SourceFileSpecifier Text

-- | Returns information about a submodule reference in a repository
--   folder.
--   
--   <i>See:</i> <a>newSubModule</a> smart constructor.
data SubModule
SubModule' :: Maybe Text -> Maybe Text -> Maybe Text -> SubModule

-- | The commit ID that contains the reference to the submodule.
[$sel:commitId:SubModule'] :: SubModule -> Maybe Text

-- | The fully qualified path to the folder that contains the reference to
--   the submodule.
[$sel:absolutePath:SubModule'] :: SubModule -> Maybe Text

-- | The relative path of the submodule from the folder where the query
--   originated.
[$sel:relativePath:SubModule'] :: SubModule -> Maybe Text

-- | Create a value of <a>SubModule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:SubModule'</a>, <a>subModule_commitId</a> - The
--   commit ID that contains the reference to the submodule.
--   
--   <a>$sel:absolutePath:SubModule'</a>, <a>subModule_absolutePath</a> -
--   The fully qualified path to the folder that contains the reference to
--   the submodule.
--   
--   <a>$sel:relativePath:SubModule'</a>, <a>subModule_relativePath</a> -
--   The relative path of the submodule from the folder where the query
--   originated.
newSubModule :: SubModule

-- | The commit ID that contains the reference to the submodule.
subModule_commitId :: Lens' SubModule (Maybe Text)

-- | The fully qualified path to the folder that contains the reference to
--   the submodule.
subModule_absolutePath :: Lens' SubModule (Maybe Text)

-- | The relative path of the submodule from the folder where the query
--   originated.
subModule_relativePath :: Lens' SubModule (Maybe Text)

-- | Returns information about a symbolic link in a repository folder.
--   
--   <i>See:</i> <a>newSymbolicLink</a> smart constructor.
data SymbolicLink
SymbolicLink' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> Maybe Text -> SymbolicLink

-- | The fully qualified path to the folder that contains the symbolic
--   link.
[$sel:absolutePath:SymbolicLink'] :: SymbolicLink -> Maybe Text

-- | The file mode permissions of the blob that cotains information about
--   the symbolic link.
[$sel:fileMode:SymbolicLink'] :: SymbolicLink -> Maybe FileModeTypeEnum

-- | The blob ID that contains the information about the symbolic link.
[$sel:blobId:SymbolicLink'] :: SymbolicLink -> Maybe Text

-- | The relative path of the symbolic link from the folder where the query
--   originated.
[$sel:relativePath:SymbolicLink'] :: SymbolicLink -> Maybe Text

-- | Create a value of <a>SymbolicLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:SymbolicLink'</a>,
--   <a>symbolicLink_absolutePath</a> - The fully qualified path to the
--   folder that contains the symbolic link.
--   
--   <a>$sel:fileMode:SymbolicLink'</a>, <a>symbolicLink_fileMode</a> - The
--   file mode permissions of the blob that cotains information about the
--   symbolic link.
--   
--   <a>$sel:blobId:SymbolicLink'</a>, <a>symbolicLink_blobId</a> - The
--   blob ID that contains the information about the symbolic link.
--   
--   <a>$sel:relativePath:SymbolicLink'</a>,
--   <a>symbolicLink_relativePath</a> - The relative path of the symbolic
--   link from the folder where the query originated.
newSymbolicLink :: SymbolicLink

-- | The fully qualified path to the folder that contains the symbolic
--   link.
symbolicLink_absolutePath :: Lens' SymbolicLink (Maybe Text)

-- | The file mode permissions of the blob that cotains information about
--   the symbolic link.
symbolicLink_fileMode :: Lens' SymbolicLink (Maybe FileModeTypeEnum)

-- | The blob ID that contains the information about the symbolic link.
symbolicLink_blobId :: Lens' SymbolicLink (Maybe Text)

-- | The relative path of the symbolic link from the folder where the query
--   originated.
symbolicLink_relativePath :: Lens' SymbolicLink (Maybe Text)

-- | Returns information about a target for a pull request.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe Text -> Text -> Text -> Target

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
[$sel:destinationReference:Target'] :: Target -> Maybe Text

-- | The name of the repository that contains the pull request.
[$sel:repositoryName:Target'] :: Target -> Text

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
[$sel:sourceReference:Target'] :: Target -> Text

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationReference:Target'</a>,
--   <a>target_destinationReference</a> - The branch of the repository
--   where the pull request changes are merged. Also known as the
--   destination branch.
--   
--   <a>$sel:repositoryName:Target'</a>, <a>target_repositoryName</a> - The
--   name of the repository that contains the pull request.
--   
--   <a>$sel:sourceReference:Target'</a>, <a>target_sourceReference</a> -
--   The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
newTarget :: Text -> Text -> Target

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
target_destinationReference :: Lens' Target (Maybe Text)

-- | The name of the repository that contains the pull request.
target_repositoryName :: Lens' Target Text

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
target_sourceReference :: Lens' Target Text

-- | Information about the user who made a specified commit.
--   
--   <i>See:</i> <a>newUserInfo</a> smart constructor.
data UserInfo
UserInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> UserInfo

-- | The email address associated with the user who made the commit, if
--   any.
[$sel:email:UserInfo'] :: UserInfo -> Maybe Text

-- | The date when the specified commit was commited, in timestamp format
--   with GMT offset.
[$sel:date:UserInfo'] :: UserInfo -> Maybe Text

-- | The name of the user who made the specified commit.
[$sel:name:UserInfo'] :: UserInfo -> Maybe Text

-- | Create a value of <a>UserInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:UserInfo'</a>, <a>userInfo_email</a> - The email address
--   associated with the user who made the commit, if any.
--   
--   <a>$sel:date:UserInfo'</a>, <a>userInfo_date</a> - The date when the
--   specified commit was commited, in timestamp format with GMT offset.
--   
--   <a>$sel:name:UserInfo'</a>, <a>userInfo_name</a> - The name of the
--   user who made the specified commit.
newUserInfo :: UserInfo

-- | The email address associated with the user who made the commit, if
--   any.
userInfo_email :: Lens' UserInfo (Maybe Text)

-- | The date when the specified commit was commited, in timestamp format
--   with GMT offset.
userInfo_date :: Lens' UserInfo (Maybe Text)

-- | The name of the user who made the specified commit.
userInfo_name :: Lens' UserInfo (Maybe Text)


-- | Tests the functionality of repository triggers by sending information
--   to the trigger target. If real data is available in the repository,
--   the test sends data from the last commit. If no data is available,
--   sample data is generated.
module Amazonka.CodeCommit.TestRepositoryTriggers

-- | Represents the input of a test repository triggers operation.
--   
--   <i>See:</i> <a>newTestRepositoryTriggers</a> smart constructor.
data TestRepositoryTriggers
TestRepositoryTriggers' :: Text -> [RepositoryTrigger] -> TestRepositoryTriggers

-- | The name of the repository in which to test the triggers.
[$sel:repositoryName:TestRepositoryTriggers'] :: TestRepositoryTriggers -> Text

-- | The list of triggers to test.
[$sel:triggers:TestRepositoryTriggers'] :: TestRepositoryTriggers -> [RepositoryTrigger]

-- | Create a value of <a>TestRepositoryTriggers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:TestRepositoryTriggers'</a>,
--   <a>testRepositoryTriggers_repositoryName</a> - The name of the
--   repository in which to test the triggers.
--   
--   <a>$sel:triggers:TestRepositoryTriggers'</a>,
--   <a>testRepositoryTriggers_triggers</a> - The list of triggers to test.
newTestRepositoryTriggers :: Text -> TestRepositoryTriggers

-- | The name of the repository in which to test the triggers.
testRepositoryTriggers_repositoryName :: Lens' TestRepositoryTriggers Text

-- | The list of triggers to test.
testRepositoryTriggers_triggers :: Lens' TestRepositoryTriggers [RepositoryTrigger]

-- | Represents the output of a test repository triggers operation.
--   
--   <i>See:</i> <a>newTestRepositoryTriggersResponse</a> smart
--   constructor.
data TestRepositoryTriggersResponse
TestRepositoryTriggersResponse' :: Maybe [RepositoryTriggerExecutionFailure] -> Maybe [Text] -> Int -> TestRepositoryTriggersResponse

-- | The list of triggers that were not tested. This list provides the
--   names of the triggers that could not be tested, separated by commas.
[$sel:failedExecutions:TestRepositoryTriggersResponse'] :: TestRepositoryTriggersResponse -> Maybe [RepositoryTriggerExecutionFailure]

-- | The list of triggers that were successfully tested. This list provides
--   the names of the triggers that were successfully tested, separated by
--   commas.
[$sel:successfulExecutions:TestRepositoryTriggersResponse'] :: TestRepositoryTriggersResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:TestRepositoryTriggersResponse'] :: TestRepositoryTriggersResponse -> Int

-- | Create a value of <a>TestRepositoryTriggersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedExecutions:TestRepositoryTriggersResponse'</a>,
--   <a>testRepositoryTriggersResponse_failedExecutions</a> - The list of
--   triggers that were not tested. This list provides the names of the
--   triggers that could not be tested, separated by commas.
--   
--   <a>$sel:successfulExecutions:TestRepositoryTriggersResponse'</a>,
--   <a>testRepositoryTriggersResponse_successfulExecutions</a> - The list
--   of triggers that were successfully tested. This list provides the
--   names of the triggers that were successfully tested, separated by
--   commas.
--   
--   <a>$sel:httpStatus:TestRepositoryTriggersResponse'</a>,
--   <a>testRepositoryTriggersResponse_httpStatus</a> - The response's http
--   status code.
newTestRepositoryTriggersResponse :: Int -> TestRepositoryTriggersResponse

-- | The list of triggers that were not tested. This list provides the
--   names of the triggers that could not be tested, separated by commas.
testRepositoryTriggersResponse_failedExecutions :: Lens' TestRepositoryTriggersResponse (Maybe [RepositoryTriggerExecutionFailure])

-- | The list of triggers that were successfully tested. This list provides
--   the names of the triggers that were successfully tested, separated by
--   commas.
testRepositoryTriggersResponse_successfulExecutions :: Lens' TestRepositoryTriggersResponse (Maybe [Text])

-- | The response's http status code.
testRepositoryTriggersResponse_httpStatus :: Lens' TestRepositoryTriggersResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance GHC.Show.Show Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance GHC.Read.Read Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance GHC.Classes.Eq Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance GHC.Generics.Generic Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggersResponse
instance GHC.Show.Show Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggersResponse
instance GHC.Read.Read Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggersResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggersResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance Control.DeepSeq.NFData Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggersResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance Control.DeepSeq.NFData Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.TestRepositoryTriggers.TestRepositoryTriggers


-- | Adds or updates tags for a resource in AWS CodeCommit. For a list of
--   valid resources in AWS CodeCommit, see <a>CodeCommit Resources and
--   Operations</a> in the <i>AWS CodeCommit User Guide</i>.
module Amazonka.CodeCommit.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The key-value pair to use when tagging this repository.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The key-value
--   pair to use when tagging this repository.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The key-value pair to use when tagging this repository.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.TagResource.TagResource
instance GHC.Show.Show Amazonka.CodeCommit.TagResource.TagResource
instance GHC.Read.Read Amazonka.CodeCommit.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.CodeCommit.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.CodeCommit.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.CodeCommit.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.CodeCommit.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.CodeCommit.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.CodeCommit.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.TagResource.TagResource


-- | Replaces all triggers for a repository. Used to create or delete
--   triggers.
module Amazonka.CodeCommit.PutRepositoryTriggers

-- | Represents the input of a put repository triggers operation.
--   
--   <i>See:</i> <a>newPutRepositoryTriggers</a> smart constructor.
data PutRepositoryTriggers
PutRepositoryTriggers' :: Text -> [RepositoryTrigger] -> PutRepositoryTriggers

-- | The name of the repository where you want to create or update the
--   trigger.
[$sel:repositoryName:PutRepositoryTriggers'] :: PutRepositoryTriggers -> Text

-- | The JSON block of configuration information for each trigger.
[$sel:triggers:PutRepositoryTriggers'] :: PutRepositoryTriggers -> [RepositoryTrigger]

-- | Create a value of <a>PutRepositoryTriggers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:PutRepositoryTriggers'</a>,
--   <a>putRepositoryTriggers_repositoryName</a> - The name of the
--   repository where you want to create or update the trigger.
--   
--   <a>$sel:triggers:PutRepositoryTriggers'</a>,
--   <a>putRepositoryTriggers_triggers</a> - The JSON block of
--   configuration information for each trigger.
newPutRepositoryTriggers :: Text -> PutRepositoryTriggers

-- | The name of the repository where you want to create or update the
--   trigger.
putRepositoryTriggers_repositoryName :: Lens' PutRepositoryTriggers Text

-- | The JSON block of configuration information for each trigger.
putRepositoryTriggers_triggers :: Lens' PutRepositoryTriggers [RepositoryTrigger]

-- | Represents the output of a put repository triggers operation.
--   
--   <i>See:</i> <a>newPutRepositoryTriggersResponse</a> smart constructor.
data PutRepositoryTriggersResponse
PutRepositoryTriggersResponse' :: Maybe Text -> Int -> PutRepositoryTriggersResponse

-- | The system-generated unique ID for the create or update operation.
[$sel:configurationId:PutRepositoryTriggersResponse'] :: PutRepositoryTriggersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutRepositoryTriggersResponse'] :: PutRepositoryTriggersResponse -> Int

-- | Create a value of <a>PutRepositoryTriggersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationId:PutRepositoryTriggersResponse'</a>,
--   <a>putRepositoryTriggersResponse_configurationId</a> - The
--   system-generated unique ID for the create or update operation.
--   
--   <a>$sel:httpStatus:PutRepositoryTriggersResponse'</a>,
--   <a>putRepositoryTriggersResponse_httpStatus</a> - The response's http
--   status code.
newPutRepositoryTriggersResponse :: Int -> PutRepositoryTriggersResponse

-- | The system-generated unique ID for the create or update operation.
putRepositoryTriggersResponse_configurationId :: Lens' PutRepositoryTriggersResponse (Maybe Text)

-- | The response's http status code.
putRepositoryTriggersResponse_httpStatus :: Lens' PutRepositoryTriggersResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance GHC.Show.Show Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance GHC.Read.Read Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance GHC.Classes.Eq Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance GHC.Generics.Generic Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggersResponse
instance GHC.Show.Show Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggersResponse
instance GHC.Read.Read Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggersResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggersResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggersResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.PutRepositoryTriggers.PutRepositoryTriggers


-- | Adds or updates a file in a branch in an AWS CodeCommit repository,
--   and generates a commit for the addition in the specified branch.
module Amazonka.CodeCommit.PutFile

-- | <i>See:</i> <a>newPutFile</a> smart constructor.
data PutFile
PutFile' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Base64 -> Text -> PutFile

-- | An email address for the person adding or updating the file.
[$sel:email:PutFile'] :: PutFile -> Maybe Text

-- | The file mode permissions of the blob. Valid file mode permissions are
--   listed here.
[$sel:fileMode:PutFile'] :: PutFile -> Maybe FileModeTypeEnum

-- | The full commit ID of the head commit in the branch where you want to
--   add or update the file. If this is an empty repository, no commit ID
--   is required. If this is not an empty repository, a commit ID is
--   required.
--   
--   The commit ID must match the ID of the head commit at the time of the
--   operation. Otherwise, an error occurs, and the file is not added or
--   updated.
[$sel:parentCommitId:PutFile'] :: PutFile -> Maybe Text

-- | The name of the person adding or updating the file. Although it is
--   optional, a name makes the commit history for your repository more
--   useful.
[$sel:name:PutFile'] :: PutFile -> Maybe Text

-- | A message about why this file was added or updated. Although it is
--   optional, a message makes the commit history for your repository more
--   useful.
[$sel:commitMessage:PutFile'] :: PutFile -> Maybe Text

-- | The name of the repository where you want to add or update the file.
[$sel:repositoryName:PutFile'] :: PutFile -> Text

-- | The name of the branch where you want to add or update the file. If
--   this is an empty repository, this branch is created.
[$sel:branchName:PutFile'] :: PutFile -> Text

-- | The content of the file, in binary object format.
[$sel:fileContent:PutFile'] :: PutFile -> Base64

-- | The name of the file you want to add or update, including the relative
--   path to the file in the repository.
--   
--   If the path does not currently exist in the repository, the path is
--   created as part of adding the file.
[$sel:filePath:PutFile'] :: PutFile -> Text

-- | Create a value of <a>PutFile</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:PutFile'</a>, <a>putFile_email</a> - An email address
--   for the person adding or updating the file.
--   
--   <a>$sel:fileMode:PutFile'</a>, <a>putFile_fileMode</a> - The file mode
--   permissions of the blob. Valid file mode permissions are listed here.
--   
--   <a>$sel:parentCommitId:PutFile'</a>, <a>putFile_parentCommitId</a> -
--   The full commit ID of the head commit in the branch where you want to
--   add or update the file. If this is an empty repository, no commit ID
--   is required. If this is not an empty repository, a commit ID is
--   required.
--   
--   The commit ID must match the ID of the head commit at the time of the
--   operation. Otherwise, an error occurs, and the file is not added or
--   updated.
--   
--   <a>$sel:name:PutFile'</a>, <a>putFile_name</a> - The name of the
--   person adding or updating the file. Although it is optional, a name
--   makes the commit history for your repository more useful.
--   
--   <a>$sel:commitMessage:PutFile'</a>, <a>putFile_commitMessage</a> - A
--   message about why this file was added or updated. Although it is
--   optional, a message makes the commit history for your repository more
--   useful.
--   
--   <a>$sel:repositoryName:PutFile'</a>, <a>putFile_repositoryName</a> -
--   The name of the repository where you want to add or update the file.
--   
--   <a>$sel:branchName:PutFile'</a>, <a>putFile_branchName</a> - The name
--   of the branch where you want to add or update the file. If this is an
--   empty repository, this branch is created.
--   
--   <a>$sel:fileContent:PutFile'</a>, <a>putFile_fileContent</a> - The
--   content of the file, in binary object format.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:filePath:PutFile'</a>, <a>putFile_filePath</a> - The name of
--   the file you want to add or update, including the relative path to the
--   file in the repository.
--   
--   If the path does not currently exist in the repository, the path is
--   created as part of adding the file.
newPutFile :: Text -> Text -> ByteString -> Text -> PutFile

-- | An email address for the person adding or updating the file.
putFile_email :: Lens' PutFile (Maybe Text)

-- | The file mode permissions of the blob. Valid file mode permissions are
--   listed here.
putFile_fileMode :: Lens' PutFile (Maybe FileModeTypeEnum)

-- | The full commit ID of the head commit in the branch where you want to
--   add or update the file. If this is an empty repository, no commit ID
--   is required. If this is not an empty repository, a commit ID is
--   required.
--   
--   The commit ID must match the ID of the head commit at the time of the
--   operation. Otherwise, an error occurs, and the file is not added or
--   updated.
putFile_parentCommitId :: Lens' PutFile (Maybe Text)

-- | The name of the person adding or updating the file. Although it is
--   optional, a name makes the commit history for your repository more
--   useful.
putFile_name :: Lens' PutFile (Maybe Text)

-- | A message about why this file was added or updated. Although it is
--   optional, a message makes the commit history for your repository more
--   useful.
putFile_commitMessage :: Lens' PutFile (Maybe Text)

-- | The name of the repository where you want to add or update the file.
putFile_repositoryName :: Lens' PutFile Text

-- | The name of the branch where you want to add or update the file. If
--   this is an empty repository, this branch is created.
putFile_branchName :: Lens' PutFile Text

-- | The content of the file, in binary object format.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
putFile_fileContent :: Lens' PutFile ByteString

-- | The name of the file you want to add or update, including the relative
--   path to the file in the repository.
--   
--   If the path does not currently exist in the repository, the path is
--   created as part of adding the file.
putFile_filePath :: Lens' PutFile Text

-- | <i>See:</i> <a>newPutFileResponse</a> smart constructor.
data PutFileResponse
PutFileResponse' :: Int -> Text -> Text -> Text -> PutFileResponse

-- | The response's http status code.
[$sel:httpStatus:PutFileResponse'] :: PutFileResponse -> Int

-- | The full SHA ID of the commit that contains this file change.
[$sel:commitId:PutFileResponse'] :: PutFileResponse -> Text

-- | The ID of the blob, which is its SHA-1 pointer.
[$sel:blobId:PutFileResponse'] :: PutFileResponse -> Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains this file change.
[$sel:treeId:PutFileResponse'] :: PutFileResponse -> Text

-- | Create a value of <a>PutFileResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutFileResponse'</a>,
--   <a>putFileResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:commitId:PutFileResponse'</a>, <a>putFileResponse_commitId</a>
--   - The full SHA ID of the commit that contains this file change.
--   
--   <a>$sel:blobId:PutFileResponse'</a>, <a>putFileResponse_blobId</a> -
--   The ID of the blob, which is its SHA-1 pointer.
--   
--   <a>$sel:treeId:PutFileResponse'</a>, <a>putFileResponse_treeId</a> -
--   The full SHA-1 pointer of the tree information for the commit that
--   contains this file change.
newPutFileResponse :: Int -> Text -> Text -> Text -> PutFileResponse

-- | The response's http status code.
putFileResponse_httpStatus :: Lens' PutFileResponse Int

-- | The full SHA ID of the commit that contains this file change.
putFileResponse_commitId :: Lens' PutFileResponse Text

-- | The ID of the blob, which is its SHA-1 pointer.
putFileResponse_blobId :: Lens' PutFileResponse Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains this file change.
putFileResponse_treeId :: Lens' PutFileResponse Text
instance GHC.Generics.Generic Amazonka.CodeCommit.PutFile.PutFile
instance GHC.Show.Show Amazonka.CodeCommit.PutFile.PutFile
instance GHC.Read.Read Amazonka.CodeCommit.PutFile.PutFile
instance GHC.Classes.Eq Amazonka.CodeCommit.PutFile.PutFile
instance GHC.Generics.Generic Amazonka.CodeCommit.PutFile.PutFileResponse
instance GHC.Show.Show Amazonka.CodeCommit.PutFile.PutFileResponse
instance GHC.Read.Read Amazonka.CodeCommit.PutFile.PutFileResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.PutFile.PutFileResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.PutFile.PutFile
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PutFile.PutFileResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.PutFile.PutFile
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PutFile.PutFile
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.PutFile.PutFile
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.PutFile.PutFile
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.PutFile.PutFile
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.PutFile.PutFile


-- | Adds or updates a reaction to a specified comment for the user whose
--   identity is used to make the request. You can only add or update a
--   reaction for yourself. You cannot add, modify, or delete a reaction
--   for another user.
module Amazonka.CodeCommit.PutCommentReaction

-- | <i>See:</i> <a>newPutCommentReaction</a> smart constructor.
data PutCommentReaction
PutCommentReaction' :: Text -> Text -> PutCommentReaction

-- | The ID of the comment to which you want to add or update a reaction.
[$sel:commentId:PutCommentReaction'] :: PutCommentReaction -> Text

-- | The emoji reaction you want to add or update. To remove a reaction,
--   provide a value of blank or null. You can also provide the value of
--   none. For information about emoji reaction values supported in AWS
--   CodeCommit, see the <a>AWS CodeCommit User Guide</a>.
[$sel:reactionValue:PutCommentReaction'] :: PutCommentReaction -> Text

-- | Create a value of <a>PutCommentReaction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commentId:PutCommentReaction'</a>,
--   <a>putCommentReaction_commentId</a> - The ID of the comment to which
--   you want to add or update a reaction.
--   
--   <a>$sel:reactionValue:PutCommentReaction'</a>,
--   <a>putCommentReaction_reactionValue</a> - The emoji reaction you want
--   to add or update. To remove a reaction, provide a value of blank or
--   null. You can also provide the value of none. For information about
--   emoji reaction values supported in AWS CodeCommit, see the <a>AWS
--   CodeCommit User Guide</a>.
newPutCommentReaction :: Text -> Text -> PutCommentReaction

-- | The ID of the comment to which you want to add or update a reaction.
putCommentReaction_commentId :: Lens' PutCommentReaction Text

-- | The emoji reaction you want to add or update. To remove a reaction,
--   provide a value of blank or null. You can also provide the value of
--   none. For information about emoji reaction values supported in AWS
--   CodeCommit, see the <a>AWS CodeCommit User Guide</a>.
putCommentReaction_reactionValue :: Lens' PutCommentReaction Text

-- | <i>See:</i> <a>newPutCommentReactionResponse</a> smart constructor.
data PutCommentReactionResponse
PutCommentReactionResponse' :: PutCommentReactionResponse

-- | Create a value of <a>PutCommentReactionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutCommentReactionResponse :: PutCommentReactionResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance GHC.Show.Show Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance GHC.Read.Read Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance GHC.Classes.Eq Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance GHC.Generics.Generic Amazonka.CodeCommit.PutCommentReaction.PutCommentReactionResponse
instance GHC.Show.Show Amazonka.CodeCommit.PutCommentReaction.PutCommentReactionResponse
instance GHC.Read.Read Amazonka.CodeCommit.PutCommentReaction.PutCommentReactionResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.PutCommentReaction.PutCommentReactionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PutCommentReaction.PutCommentReactionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.PutCommentReaction.PutCommentReaction


-- | Posts a comment in reply to an existing comment on a comparison
--   between commits or a pull request.
module Amazonka.CodeCommit.PostCommentReply

-- | <i>See:</i> <a>newPostCommentReply</a> smart constructor.
data PostCommentReply
PostCommentReply' :: Maybe Text -> Text -> Text -> PostCommentReply

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
[$sel:clientRequestToken:PostCommentReply'] :: PostCommentReply -> Maybe Text

-- | The system-generated ID of the comment to which you want to reply. To
--   get this ID, use GetCommentsForComparedCommit or
--   GetCommentsForPullRequest.
[$sel:inReplyTo:PostCommentReply'] :: PostCommentReply -> Text

-- | The contents of your reply to a comment.
[$sel:content:PostCommentReply'] :: PostCommentReply -> Text

-- | Create a value of <a>PostCommentReply</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:PostCommentReply'</a>,
--   <a>postCommentReply_clientRequestToken</a> - A unique,
--   client-generated idempotency token that, when provided in a request,
--   ensures the request cannot be repeated with a changed parameter. If a
--   request is received with the same parameters and a token is included,
--   the request returns information about the initial request that used
--   that token.
--   
--   <a>$sel:inReplyTo:PostCommentReply'</a>,
--   <a>postCommentReply_inReplyTo</a> - The system-generated ID of the
--   comment to which you want to reply. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
--   
--   <a>$sel:content:PostCommentReply'</a>, <a>postCommentReply_content</a>
--   - The contents of your reply to a comment.
newPostCommentReply :: Text -> Text -> PostCommentReply

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
postCommentReply_clientRequestToken :: Lens' PostCommentReply (Maybe Text)

-- | The system-generated ID of the comment to which you want to reply. To
--   get this ID, use GetCommentsForComparedCommit or
--   GetCommentsForPullRequest.
postCommentReply_inReplyTo :: Lens' PostCommentReply Text

-- | The contents of your reply to a comment.
postCommentReply_content :: Lens' PostCommentReply Text

-- | <i>See:</i> <a>newPostCommentReplyResponse</a> smart constructor.
data PostCommentReplyResponse
PostCommentReplyResponse' :: Maybe Comment -> Int -> PostCommentReplyResponse

-- | Information about the reply to a comment.
[$sel:comment:PostCommentReplyResponse'] :: PostCommentReplyResponse -> Maybe Comment

-- | The response's http status code.
[$sel:httpStatus:PostCommentReplyResponse'] :: PostCommentReplyResponse -> Int

-- | Create a value of <a>PostCommentReplyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:PostCommentReplyResponse'</a>,
--   <a>postCommentReplyResponse_comment</a> - Information about the reply
--   to a comment.
--   
--   <a>$sel:httpStatus:PostCommentReplyResponse'</a>,
--   <a>postCommentReplyResponse_httpStatus</a> - The response's http
--   status code.
newPostCommentReplyResponse :: Int -> PostCommentReplyResponse

-- | Information about the reply to a comment.
postCommentReplyResponse_comment :: Lens' PostCommentReplyResponse (Maybe Comment)

-- | The response's http status code.
postCommentReplyResponse_httpStatus :: Lens' PostCommentReplyResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance GHC.Show.Show Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance GHC.Read.Read Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance GHC.Classes.Eq Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance GHC.Generics.Generic Amazonka.CodeCommit.PostCommentReply.PostCommentReplyResponse
instance GHC.Show.Show Amazonka.CodeCommit.PostCommentReply.PostCommentReplyResponse
instance GHC.Read.Read Amazonka.CodeCommit.PostCommentReply.PostCommentReplyResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.PostCommentReply.PostCommentReplyResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PostCommentReply.PostCommentReplyResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.PostCommentReply.PostCommentReply
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.PostCommentReply.PostCommentReply


-- | Posts a comment on a pull request.
module Amazonka.CodeCommit.PostCommentForPullRequest

-- | <i>See:</i> <a>newPostCommentForPullRequest</a> smart constructor.
data PostCommentForPullRequest
PostCommentForPullRequest' :: Maybe Location -> Maybe Text -> Text -> Text -> Text -> Text -> Text -> PostCommentForPullRequest

-- | The location of the change where you want to post your comment. If no
--   location is provided, the comment is posted as a general comment on
--   the pull request difference between the before commit ID and the after
--   commit ID.
[$sel:location:PostCommentForPullRequest'] :: PostCommentForPullRequest -> Maybe Location

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
[$sel:clientRequestToken:PostCommentForPullRequest'] :: PostCommentForPullRequest -> Maybe Text

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:PostCommentForPullRequest'] :: PostCommentForPullRequest -> Text

-- | The name of the repository where you want to post a comment on a pull
--   request.
[$sel:repositoryName:PostCommentForPullRequest'] :: PostCommentForPullRequest -> Text

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was created.
[$sel:beforeCommitId:PostCommentForPullRequest'] :: PostCommentForPullRequest -> Text

-- | The full commit ID of the commit in the source branch that is the
--   current tip of the branch for the pull request when you post the
--   comment.
[$sel:afterCommitId:PostCommentForPullRequest'] :: PostCommentForPullRequest -> Text

-- | The content of your comment on the change.
[$sel:content:PostCommentForPullRequest'] :: PostCommentForPullRequest -> Text

-- | Create a value of <a>PostCommentForPullRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_location</a> - The location of the change
--   where you want to post your comment. If no location is provided, the
--   comment is posted as a general comment on the pull request difference
--   between the before commit ID and the after commit ID.
--   
--   <a>$sel:clientRequestToken:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_clientRequestToken</a> - A unique,
--   client-generated idempotency token that, when provided in a request,
--   ensures the request cannot be repeated with a changed parameter. If a
--   request is received with the same parameters and a token is included,
--   the request returns information about the initial request that used
--   that token.
--   
--   <a>$sel:pullRequestId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:repositoryName:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_repositoryName</a> - The name of the
--   repository where you want to post a comment on a pull request.
--   
--   <a>$sel:beforeCommitId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_beforeCommitId</a> - The full commit ID
--   of the commit in the destination branch that was the tip of the branch
--   at the time the pull request was created.
--   
--   <a>$sel:afterCommitId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_afterCommitId</a> - The full commit ID of
--   the commit in the source branch that is the current tip of the branch
--   for the pull request when you post the comment.
--   
--   <a>$sel:content:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_content</a> - The content of your comment
--   on the change.
newPostCommentForPullRequest :: Text -> Text -> Text -> Text -> Text -> PostCommentForPullRequest

-- | The location of the change where you want to post your comment. If no
--   location is provided, the comment is posted as a general comment on
--   the pull request difference between the before commit ID and the after
--   commit ID.
postCommentForPullRequest_location :: Lens' PostCommentForPullRequest (Maybe Location)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
postCommentForPullRequest_clientRequestToken :: Lens' PostCommentForPullRequest (Maybe Text)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
postCommentForPullRequest_pullRequestId :: Lens' PostCommentForPullRequest Text

-- | The name of the repository where you want to post a comment on a pull
--   request.
postCommentForPullRequest_repositoryName :: Lens' PostCommentForPullRequest Text

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was created.
postCommentForPullRequest_beforeCommitId :: Lens' PostCommentForPullRequest Text

-- | The full commit ID of the commit in the source branch that is the
--   current tip of the branch for the pull request when you post the
--   comment.
postCommentForPullRequest_afterCommitId :: Lens' PostCommentForPullRequest Text

-- | The content of your comment on the change.
postCommentForPullRequest_content :: Lens' PostCommentForPullRequest Text

-- | <i>See:</i> <a>newPostCommentForPullRequestResponse</a> smart
--   constructor.
data PostCommentForPullRequestResponse
PostCommentForPullRequestResponse' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Comment -> Int -> PostCommentForPullRequestResponse

-- | In the directionality of the pull request, the blob ID of the before
--   blob.
[$sel:beforeBlobId:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Maybe Text

-- | The location of the change where you posted your comment.
[$sel:location:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Maybe Location

-- | The full commit ID of the commit in the destination branch where the
--   pull request is merged.
[$sel:afterCommitId:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Maybe Text

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Maybe Text

-- | In the directionality of the pull request, the blob ID of the after
--   blob.
[$sel:afterBlobId:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Maybe Text

-- | The full commit ID of the commit in the source branch used to create
--   the pull request, or in the case of an updated pull request, the full
--   commit ID of the commit used to update the pull request.
[$sel:beforeCommitId:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Maybe Text

-- | The name of the repository where you posted a comment on a pull
--   request.
[$sel:repositoryName:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Maybe Text

-- | The content of the comment you posted.
[$sel:comment:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Maybe Comment

-- | The response's http status code.
[$sel:httpStatus:PostCommentForPullRequestResponse'] :: PostCommentForPullRequestResponse -> Int

-- | Create a value of <a>PostCommentForPullRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:PostCommentForPullRequestResponse'</a>,
--   <a>postCommentForPullRequestResponse_beforeBlobId</a> - In the
--   directionality of the pull request, the blob ID of the before blob.
--   
--   <a>$sel:location:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_location</a> - The location of
--   the change where you posted your comment.
--   
--   <a>$sel:afterCommitId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_afterCommitId</a> - The full
--   commit ID of the commit in the destination branch where the pull
--   request is merged.
--   
--   <a>$sel:pullRequestId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_pullRequestId</a> - The
--   system-generated ID of the pull request.
--   
--   <a>$sel:afterBlobId:PostCommentForPullRequestResponse'</a>,
--   <a>postCommentForPullRequestResponse_afterBlobId</a> - In the
--   directionality of the pull request, the blob ID of the after blob.
--   
--   <a>$sel:beforeCommitId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_beforeCommitId</a> - The full
--   commit ID of the commit in the source branch used to create the pull
--   request, or in the case of an updated pull request, the full commit ID
--   of the commit used to update the pull request.
--   
--   <a>$sel:repositoryName:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_repositoryName</a> - The name of
--   the repository where you posted a comment on a pull request.
--   
--   <a>$sel:comment:PostCommentForPullRequestResponse'</a>,
--   <a>postCommentForPullRequestResponse_comment</a> - The content of the
--   comment you posted.
--   
--   <a>$sel:httpStatus:PostCommentForPullRequestResponse'</a>,
--   <a>postCommentForPullRequestResponse_httpStatus</a> - The response's
--   http status code.
newPostCommentForPullRequestResponse :: Int -> PostCommentForPullRequestResponse

-- | In the directionality of the pull request, the blob ID of the before
--   blob.
postCommentForPullRequestResponse_beforeBlobId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The location of the change where you posted your comment.
postCommentForPullRequestResponse_location :: Lens' PostCommentForPullRequestResponse (Maybe Location)

-- | The full commit ID of the commit in the destination branch where the
--   pull request is merged.
postCommentForPullRequestResponse_afterCommitId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The system-generated ID of the pull request.
postCommentForPullRequestResponse_pullRequestId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | In the directionality of the pull request, the blob ID of the after
--   blob.
postCommentForPullRequestResponse_afterBlobId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The full commit ID of the commit in the source branch used to create
--   the pull request, or in the case of an updated pull request, the full
--   commit ID of the commit used to update the pull request.
postCommentForPullRequestResponse_beforeCommitId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The name of the repository where you posted a comment on a pull
--   request.
postCommentForPullRequestResponse_repositoryName :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The content of the comment you posted.
postCommentForPullRequestResponse_comment :: Lens' PostCommentForPullRequestResponse (Maybe Comment)

-- | The response's http status code.
postCommentForPullRequestResponse_httpStatus :: Lens' PostCommentForPullRequestResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance GHC.Show.Show Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance GHC.Read.Read Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance GHC.Classes.Eq Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequestResponse
instance GHC.Show.Show Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequestResponse
instance GHC.Read.Read Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequestResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequestResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequestResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.PostCommentForPullRequest.PostCommentForPullRequest


-- | Posts a comment on the comparison between two commits.
module Amazonka.CodeCommit.PostCommentForComparedCommit

-- | <i>See:</i> <a>newPostCommentForComparedCommit</a> smart constructor.
data PostCommentForComparedCommit
PostCommentForComparedCommit' :: Maybe Location -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> PostCommentForComparedCommit

-- | The location of the comparison where you want to comment.
[$sel:location:PostCommentForComparedCommit'] :: PostCommentForComparedCommit -> Maybe Location

-- | To establish the directionality of the comparison, the full commit ID
--   of the before commit. Required for commenting on any commit unless
--   that commit is the initial commit.
[$sel:beforeCommitId:PostCommentForComparedCommit'] :: PostCommentForComparedCommit -> Maybe Text

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
[$sel:clientRequestToken:PostCommentForComparedCommit'] :: PostCommentForComparedCommit -> Maybe Text

-- | The name of the repository where you want to post a comment on the
--   comparison between commits.
[$sel:repositoryName:PostCommentForComparedCommit'] :: PostCommentForComparedCommit -> Text

-- | To establish the directionality of the comparison, the full commit ID
--   of the after commit.
[$sel:afterCommitId:PostCommentForComparedCommit'] :: PostCommentForComparedCommit -> Text

-- | The content of the comment you want to make.
[$sel:content:PostCommentForComparedCommit'] :: PostCommentForComparedCommit -> Text

-- | Create a value of <a>PostCommentForComparedCommit</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_location</a> - The location of the
--   comparison where you want to comment.
--   
--   <a>$sel:beforeCommitId:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_beforeCommitId</a> - To establish the
--   directionality of the comparison, the full commit ID of the before
--   commit. Required for commenting on any commit unless that commit is
--   the initial commit.
--   
--   <a>$sel:clientRequestToken:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_clientRequestToken</a> - A unique,
--   client-generated idempotency token that, when provided in a request,
--   ensures the request cannot be repeated with a changed parameter. If a
--   request is received with the same parameters and a token is included,
--   the request returns information about the initial request that used
--   that token.
--   
--   <a>$sel:repositoryName:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_repositoryName</a> - The name of the
--   repository where you want to post a comment on the comparison between
--   commits.
--   
--   <a>$sel:afterCommitId:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_afterCommitId</a> - To establish the
--   directionality of the comparison, the full commit ID of the after
--   commit.
--   
--   <a>$sel:content:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_content</a> - The content of the
--   comment you want to make.
newPostCommentForComparedCommit :: Text -> Text -> Text -> PostCommentForComparedCommit

-- | The location of the comparison where you want to comment.
postCommentForComparedCommit_location :: Lens' PostCommentForComparedCommit (Maybe Location)

-- | To establish the directionality of the comparison, the full commit ID
--   of the before commit. Required for commenting on any commit unless
--   that commit is the initial commit.
postCommentForComparedCommit_beforeCommitId :: Lens' PostCommentForComparedCommit (Maybe Text)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
postCommentForComparedCommit_clientRequestToken :: Lens' PostCommentForComparedCommit (Maybe Text)

-- | The name of the repository where you want to post a comment on the
--   comparison between commits.
postCommentForComparedCommit_repositoryName :: Lens' PostCommentForComparedCommit Text

-- | To establish the directionality of the comparison, the full commit ID
--   of the after commit.
postCommentForComparedCommit_afterCommitId :: Lens' PostCommentForComparedCommit Text

-- | The content of the comment you want to make.
postCommentForComparedCommit_content :: Lens' PostCommentForComparedCommit Text

-- | <i>See:</i> <a>newPostCommentForComparedCommitResponse</a> smart
--   constructor.
data PostCommentForComparedCommitResponse
PostCommentForComparedCommitResponse' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Comment -> Int -> PostCommentForComparedCommitResponse

-- | In the directionality you established, the blob ID of the before blob.
[$sel:beforeBlobId:PostCommentForComparedCommitResponse'] :: PostCommentForComparedCommitResponse -> Maybe Text

-- | The location of the comment in the comparison between the two commits.
[$sel:location:PostCommentForComparedCommitResponse'] :: PostCommentForComparedCommitResponse -> Maybe Location

-- | In the directionality you established, the full commit ID of the after
--   commit.
[$sel:afterCommitId:PostCommentForComparedCommitResponse'] :: PostCommentForComparedCommitResponse -> Maybe Text

-- | In the directionality you established, the blob ID of the after blob.
[$sel:afterBlobId:PostCommentForComparedCommitResponse'] :: PostCommentForComparedCommitResponse -> Maybe Text

-- | In the directionality you established, the full commit ID of the
--   before commit.
[$sel:beforeCommitId:PostCommentForComparedCommitResponse'] :: PostCommentForComparedCommitResponse -> Maybe Text

-- | The name of the repository where you posted a comment on the
--   comparison between commits.
[$sel:repositoryName:PostCommentForComparedCommitResponse'] :: PostCommentForComparedCommitResponse -> Maybe Text

-- | The content of the comment you posted.
[$sel:comment:PostCommentForComparedCommitResponse'] :: PostCommentForComparedCommitResponse -> Maybe Comment

-- | The response's http status code.
[$sel:httpStatus:PostCommentForComparedCommitResponse'] :: PostCommentForComparedCommitResponse -> Int

-- | Create a value of <a>PostCommentForComparedCommitResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:PostCommentForComparedCommitResponse'</a>,
--   <a>postCommentForComparedCommitResponse_beforeBlobId</a> - In the
--   directionality you established, the blob ID of the before blob.
--   
--   <a>$sel:location:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommitResponse_location</a> - The location of
--   the comment in the comparison between the two commits.
--   
--   <a>$sel:afterCommitId:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommitResponse_afterCommitId</a> - In the
--   directionality you established, the full commit ID of the after
--   commit.
--   
--   <a>$sel:afterBlobId:PostCommentForComparedCommitResponse'</a>,
--   <a>postCommentForComparedCommitResponse_afterBlobId</a> - In the
--   directionality you established, the blob ID of the after blob.
--   
--   <a>$sel:beforeCommitId:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommitResponse_beforeCommitId</a> - In the
--   directionality you established, the full commit ID of the before
--   commit.
--   
--   <a>$sel:repositoryName:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommitResponse_repositoryName</a> - The name
--   of the repository where you posted a comment on the comparison between
--   commits.
--   
--   <a>$sel:comment:PostCommentForComparedCommitResponse'</a>,
--   <a>postCommentForComparedCommitResponse_comment</a> - The content of
--   the comment you posted.
--   
--   <a>$sel:httpStatus:PostCommentForComparedCommitResponse'</a>,
--   <a>postCommentForComparedCommitResponse_httpStatus</a> - The
--   response's http status code.
newPostCommentForComparedCommitResponse :: Int -> PostCommentForComparedCommitResponse

-- | In the directionality you established, the blob ID of the before blob.
postCommentForComparedCommitResponse_beforeBlobId :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | The location of the comment in the comparison between the two commits.
postCommentForComparedCommitResponse_location :: Lens' PostCommentForComparedCommitResponse (Maybe Location)

-- | In the directionality you established, the full commit ID of the after
--   commit.
postCommentForComparedCommitResponse_afterCommitId :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | In the directionality you established, the blob ID of the after blob.
postCommentForComparedCommitResponse_afterBlobId :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | In the directionality you established, the full commit ID of the
--   before commit.
postCommentForComparedCommitResponse_beforeCommitId :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | The name of the repository where you posted a comment on the
--   comparison between commits.
postCommentForComparedCommitResponse_repositoryName :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | The content of the comment you posted.
postCommentForComparedCommitResponse_comment :: Lens' PostCommentForComparedCommitResponse (Maybe Comment)

-- | The response's http status code.
postCommentForComparedCommitResponse_httpStatus :: Lens' PostCommentForComparedCommitResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance GHC.Show.Show Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance GHC.Read.Read Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance GHC.Classes.Eq Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance GHC.Generics.Generic Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommitResponse
instance GHC.Show.Show Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommitResponse
instance GHC.Read.Read Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommitResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommitResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommitResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.PostCommentForComparedCommit.PostCommentForComparedCommit


-- | Sets aside (overrides) all approval rule requirements for a specified
--   pull request.
module Amazonka.CodeCommit.OverridePullRequestApprovalRules

-- | <i>See:</i> <a>newOverridePullRequestApprovalRules</a> smart
--   constructor.
data OverridePullRequestApprovalRules
OverridePullRequestApprovalRules' :: Text -> Text -> OverrideStatus -> OverridePullRequestApprovalRules

-- | The system-generated ID of the pull request for which you want to
--   override all approval rule requirements. To get this information, use
--   GetPullRequest.
[$sel:pullRequestId:OverridePullRequestApprovalRules'] :: OverridePullRequestApprovalRules -> Text

-- | The system-generated ID of the most recent revision of the pull
--   request. You cannot override approval rules for anything but the most
--   recent revision of a pull request. To get the revision ID, use
--   GetPullRequest.
[$sel:revisionId:OverridePullRequestApprovalRules'] :: OverridePullRequestApprovalRules -> Text

-- | Whether you want to set aside approval rule requirements for the pull
--   request (OVERRIDE) or revoke a previous override and apply approval
--   rule requirements (REVOKE). REVOKE status is not stored.
[$sel:overrideStatus:OverridePullRequestApprovalRules'] :: OverridePullRequestApprovalRules -> OverrideStatus

-- | Create a value of <a>OverridePullRequestApprovalRules</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:OverridePullRequestApprovalRules'</a>,
--   <a>overridePullRequestApprovalRules_pullRequestId</a> - The
--   system-generated ID of the pull request for which you want to override
--   all approval rule requirements. To get this information, use
--   GetPullRequest.
--   
--   <a>$sel:revisionId:OverridePullRequestApprovalRules'</a>,
--   <a>overridePullRequestApprovalRules_revisionId</a> - The
--   system-generated ID of the most recent revision of the pull request.
--   You cannot override approval rules for anything but the most recent
--   revision of a pull request. To get the revision ID, use
--   GetPullRequest.
--   
--   <a>$sel:overrideStatus:OverridePullRequestApprovalRules'</a>,
--   <a>overridePullRequestApprovalRules_overrideStatus</a> - Whether you
--   want to set aside approval rule requirements for the pull request
--   (OVERRIDE) or revoke a previous override and apply approval rule
--   requirements (REVOKE). REVOKE status is not stored.
newOverridePullRequestApprovalRules :: Text -> Text -> OverrideStatus -> OverridePullRequestApprovalRules

-- | The system-generated ID of the pull request for which you want to
--   override all approval rule requirements. To get this information, use
--   GetPullRequest.
overridePullRequestApprovalRules_pullRequestId :: Lens' OverridePullRequestApprovalRules Text

-- | The system-generated ID of the most recent revision of the pull
--   request. You cannot override approval rules for anything but the most
--   recent revision of a pull request. To get the revision ID, use
--   GetPullRequest.
overridePullRequestApprovalRules_revisionId :: Lens' OverridePullRequestApprovalRules Text

-- | Whether you want to set aside approval rule requirements for the pull
--   request (OVERRIDE) or revoke a previous override and apply approval
--   rule requirements (REVOKE). REVOKE status is not stored.
overridePullRequestApprovalRules_overrideStatus :: Lens' OverridePullRequestApprovalRules OverrideStatus

-- | <i>See:</i> <a>newOverridePullRequestApprovalRulesResponse</a> smart
--   constructor.
data OverridePullRequestApprovalRulesResponse
OverridePullRequestApprovalRulesResponse' :: OverridePullRequestApprovalRulesResponse

-- | Create a value of <a>OverridePullRequestApprovalRulesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newOverridePullRequestApprovalRulesResponse :: OverridePullRequestApprovalRulesResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance GHC.Show.Show Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance GHC.Read.Read Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance GHC.Classes.Eq Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance GHC.Generics.Generic Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRulesResponse
instance GHC.Show.Show Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRulesResponse
instance GHC.Read.Read Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRulesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRulesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance Control.DeepSeq.NFData Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRulesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance Control.DeepSeq.NFData Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.OverridePullRequestApprovalRules.OverridePullRequestApprovalRules


-- | Attempts to merge the source commit of a pull request into the
--   specified destination branch for that pull request at the specified
--   commit using the three-way merge strategy. If the merge is successful,
--   it closes the pull request.
module Amazonka.CodeCommit.MergePullRequestByThreeWay

-- | <i>See:</i> <a>newMergePullRequestByThreeWay</a> smart constructor.
data MergePullRequestByThreeWay
MergePullRequestByThreeWay' :: Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Maybe Text -> Text -> Text -> MergePullRequestByThreeWay

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
[$sel:email:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Maybe Text

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
[$sel:authorName:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Maybe Text

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Maybe ConflictDetailLevelTypeEnum

-- | The commit message to include in the commit information for the merge.
[$sel:commitMessage:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Maybe Text

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
[$sel:conflictResolution:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Maybe ConflictResolution

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Maybe ConflictResolutionStrategyTypeEnum

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
[$sel:keepEmptyFolders:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Maybe Bool

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
[$sel:sourceCommitId:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Maybe Text

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Text

-- | The name of the repository where the pull request was created.
[$sel:repositoryName:MergePullRequestByThreeWay'] :: MergePullRequestByThreeWay -> Text

-- | Create a value of <a>MergePullRequestByThreeWay</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_email</a> - The email address of the
--   person merging the branches. This information is used in the commit
--   information for the merge.
--   
--   <a>$sel:authorName:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_authorName</a> - The name of the author
--   who created the commit. This information is used as both the author
--   and committer for the commit.
--   
--   <a>$sel:conflictDetailLevel:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_commitMessage</a> - The commit message
--   to include in the commit information for the merge.
--   
--   <a>$sel:conflictResolution:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_conflictResolution</a> - If AUTOMERGE is
--   the conflict resolution strategy, a list of inputs to use when
--   resolving conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_conflictResolutionStrategy</a> -
--   Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
--   
--   <a>$sel:keepEmptyFolders:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_keepEmptyFolders</a> - If the commit
--   contains deletions, whether to keep a folder or folder structure if
--   the changes leave the folders empty. If true, a .gitkeep file is
--   created for empty folders. The default is false.
--   
--   <a>$sel:sourceCommitId:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_sourceCommitId</a> - The full commit ID
--   of the original or updated commit in the pull request source branch.
--   Pass this value if you want an exception thrown if the current commit
--   ID of the tip of the source branch does not match this commit ID.
--   
--   <a>$sel:pullRequestId:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:repositoryName:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_repositoryName</a> - The name of the
--   repository where the pull request was created.
newMergePullRequestByThreeWay :: Text -> Text -> MergePullRequestByThreeWay

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
mergePullRequestByThreeWay_email :: Lens' MergePullRequestByThreeWay (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
mergePullRequestByThreeWay_authorName :: Lens' MergePullRequestByThreeWay (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
mergePullRequestByThreeWay_conflictDetailLevel :: Lens' MergePullRequestByThreeWay (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message to include in the commit information for the merge.
mergePullRequestByThreeWay_commitMessage :: Lens' MergePullRequestByThreeWay (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
mergePullRequestByThreeWay_conflictResolution :: Lens' MergePullRequestByThreeWay (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
mergePullRequestByThreeWay_conflictResolutionStrategy :: Lens' MergePullRequestByThreeWay (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
mergePullRequestByThreeWay_keepEmptyFolders :: Lens' MergePullRequestByThreeWay (Maybe Bool)

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
mergePullRequestByThreeWay_sourceCommitId :: Lens' MergePullRequestByThreeWay (Maybe Text)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
mergePullRequestByThreeWay_pullRequestId :: Lens' MergePullRequestByThreeWay Text

-- | The name of the repository where the pull request was created.
mergePullRequestByThreeWay_repositoryName :: Lens' MergePullRequestByThreeWay Text

-- | <i>See:</i> <a>newMergePullRequestByThreeWayResponse</a> smart
--   constructor.
data MergePullRequestByThreeWayResponse
MergePullRequestByThreeWayResponse' :: Maybe PullRequest -> Int -> MergePullRequestByThreeWayResponse
[$sel:pullRequest:MergePullRequestByThreeWayResponse'] :: MergePullRequestByThreeWayResponse -> Maybe PullRequest

-- | The response's http status code.
[$sel:httpStatus:MergePullRequestByThreeWayResponse'] :: MergePullRequestByThreeWayResponse -> Int

-- | Create a value of <a>MergePullRequestByThreeWayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequest:MergePullRequestByThreeWayResponse'</a>,
--   <a>mergePullRequestByThreeWayResponse_pullRequest</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:MergePullRequestByThreeWayResponse'</a>,
--   <a>mergePullRequestByThreeWayResponse_httpStatus</a> - The response's
--   http status code.
newMergePullRequestByThreeWayResponse :: Int -> MergePullRequestByThreeWayResponse

-- | Undocumented member.
mergePullRequestByThreeWayResponse_pullRequest :: Lens' MergePullRequestByThreeWayResponse (Maybe PullRequest)

-- | The response's http status code.
mergePullRequestByThreeWayResponse_httpStatus :: Lens' MergePullRequestByThreeWayResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance GHC.Show.Show Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance GHC.Read.Read Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance GHC.Classes.Eq Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance GHC.Generics.Generic Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWayResponse
instance GHC.Show.Show Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWayResponse
instance GHC.Read.Read Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWayResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWayResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWayResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.MergePullRequestByThreeWay.MergePullRequestByThreeWay


-- | Attempts to merge the source commit of a pull request into the
--   specified destination branch for that pull request at the specified
--   commit using the squash merge strategy. If the merge is successful, it
--   closes the pull request.
module Amazonka.CodeCommit.MergePullRequestBySquash

-- | <i>See:</i> <a>newMergePullRequestBySquash</a> smart constructor.
data MergePullRequestBySquash
MergePullRequestBySquash' :: Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Maybe Text -> Text -> Text -> MergePullRequestBySquash

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
[$sel:email:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Maybe Text

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
[$sel:authorName:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Maybe Text

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Maybe ConflictDetailLevelTypeEnum

-- | The commit message to include in the commit information for the merge.
[$sel:commitMessage:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Maybe Text

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
[$sel:conflictResolution:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Maybe ConflictResolution

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Maybe ConflictResolutionStrategyTypeEnum

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
[$sel:keepEmptyFolders:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Maybe Bool

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
[$sel:sourceCommitId:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Maybe Text

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Text

-- | The name of the repository where the pull request was created.
[$sel:repositoryName:MergePullRequestBySquash'] :: MergePullRequestBySquash -> Text

-- | Create a value of <a>MergePullRequestBySquash</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_email</a> - The email address of the
--   person merging the branches. This information is used in the commit
--   information for the merge.
--   
--   <a>$sel:authorName:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_authorName</a> - The name of the author
--   who created the commit. This information is used as both the author
--   and committer for the commit.
--   
--   <a>$sel:conflictDetailLevel:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_commitMessage</a> - The commit message to
--   include in the commit information for the merge.
--   
--   <a>$sel:conflictResolution:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_conflictResolution</a> - If AUTOMERGE is
--   the conflict resolution strategy, a list of inputs to use when
--   resolving conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_conflictResolutionStrategy</a> - Specifies
--   which branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:keepEmptyFolders:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_keepEmptyFolders</a> - If the commit
--   contains deletions, whether to keep a folder or folder structure if
--   the changes leave the folders empty. If true, a .gitkeep file is
--   created for empty folders. The default is false.
--   
--   <a>$sel:sourceCommitId:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_sourceCommitId</a> - The full commit ID of
--   the original or updated commit in the pull request source branch. Pass
--   this value if you want an exception thrown if the current commit ID of
--   the tip of the source branch does not match this commit ID.
--   
--   <a>$sel:pullRequestId:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:repositoryName:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_repositoryName</a> - The name of the
--   repository where the pull request was created.
newMergePullRequestBySquash :: Text -> Text -> MergePullRequestBySquash

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
mergePullRequestBySquash_email :: Lens' MergePullRequestBySquash (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
mergePullRequestBySquash_authorName :: Lens' MergePullRequestBySquash (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
mergePullRequestBySquash_conflictDetailLevel :: Lens' MergePullRequestBySquash (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message to include in the commit information for the merge.
mergePullRequestBySquash_commitMessage :: Lens' MergePullRequestBySquash (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
mergePullRequestBySquash_conflictResolution :: Lens' MergePullRequestBySquash (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
mergePullRequestBySquash_conflictResolutionStrategy :: Lens' MergePullRequestBySquash (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
mergePullRequestBySquash_keepEmptyFolders :: Lens' MergePullRequestBySquash (Maybe Bool)

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
mergePullRequestBySquash_sourceCommitId :: Lens' MergePullRequestBySquash (Maybe Text)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
mergePullRequestBySquash_pullRequestId :: Lens' MergePullRequestBySquash Text

-- | The name of the repository where the pull request was created.
mergePullRequestBySquash_repositoryName :: Lens' MergePullRequestBySquash Text

-- | <i>See:</i> <a>newMergePullRequestBySquashResponse</a> smart
--   constructor.
data MergePullRequestBySquashResponse
MergePullRequestBySquashResponse' :: Maybe PullRequest -> Int -> MergePullRequestBySquashResponse
[$sel:pullRequest:MergePullRequestBySquashResponse'] :: MergePullRequestBySquashResponse -> Maybe PullRequest

-- | The response's http status code.
[$sel:httpStatus:MergePullRequestBySquashResponse'] :: MergePullRequestBySquashResponse -> Int

-- | Create a value of <a>MergePullRequestBySquashResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequest:MergePullRequestBySquashResponse'</a>,
--   <a>mergePullRequestBySquashResponse_pullRequest</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:MergePullRequestBySquashResponse'</a>,
--   <a>mergePullRequestBySquashResponse_httpStatus</a> - The response's
--   http status code.
newMergePullRequestBySquashResponse :: Int -> MergePullRequestBySquashResponse

-- | Undocumented member.
mergePullRequestBySquashResponse_pullRequest :: Lens' MergePullRequestBySquashResponse (Maybe PullRequest)

-- | The response's http status code.
mergePullRequestBySquashResponse_httpStatus :: Lens' MergePullRequestBySquashResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance GHC.Show.Show Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance GHC.Read.Read Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance GHC.Classes.Eq Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance GHC.Generics.Generic Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquashResponse
instance GHC.Show.Show Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquashResponse
instance GHC.Read.Read Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquashResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquashResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquashResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.MergePullRequestBySquash.MergePullRequestBySquash


-- | Attempts to merge the source commit of a pull request into the
--   specified destination branch for that pull request at the specified
--   commit using the fast-forward merge strategy. If the merge is
--   successful, it closes the pull request.
module Amazonka.CodeCommit.MergePullRequestByFastForward

-- | <i>See:</i> <a>newMergePullRequestByFastForward</a> smart constructor.
data MergePullRequestByFastForward
MergePullRequestByFastForward' :: Maybe Text -> Text -> Text -> MergePullRequestByFastForward

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
[$sel:sourceCommitId:MergePullRequestByFastForward'] :: MergePullRequestByFastForward -> Maybe Text

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:MergePullRequestByFastForward'] :: MergePullRequestByFastForward -> Text

-- | The name of the repository where the pull request was created.
[$sel:repositoryName:MergePullRequestByFastForward'] :: MergePullRequestByFastForward -> Text

-- | Create a value of <a>MergePullRequestByFastForward</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCommitId:MergePullRequestByFastForward'</a>,
--   <a>mergePullRequestByFastForward_sourceCommitId</a> - The full commit
--   ID of the original or updated commit in the pull request source
--   branch. Pass this value if you want an exception thrown if the current
--   commit ID of the tip of the source branch does not match this commit
--   ID.
--   
--   <a>$sel:pullRequestId:MergePullRequestByFastForward'</a>,
--   <a>mergePullRequestByFastForward_pullRequestId</a> - The
--   system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
--   
--   <a>$sel:repositoryName:MergePullRequestByFastForward'</a>,
--   <a>mergePullRequestByFastForward_repositoryName</a> - The name of the
--   repository where the pull request was created.
newMergePullRequestByFastForward :: Text -> Text -> MergePullRequestByFastForward

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
mergePullRequestByFastForward_sourceCommitId :: Lens' MergePullRequestByFastForward (Maybe Text)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
mergePullRequestByFastForward_pullRequestId :: Lens' MergePullRequestByFastForward Text

-- | The name of the repository where the pull request was created.
mergePullRequestByFastForward_repositoryName :: Lens' MergePullRequestByFastForward Text

-- | <i>See:</i> <a>newMergePullRequestByFastForwardResponse</a> smart
--   constructor.
data MergePullRequestByFastForwardResponse
MergePullRequestByFastForwardResponse' :: Maybe PullRequest -> Int -> MergePullRequestByFastForwardResponse

-- | Information about the specified pull request, including the merge.
[$sel:pullRequest:MergePullRequestByFastForwardResponse'] :: MergePullRequestByFastForwardResponse -> Maybe PullRequest

-- | The response's http status code.
[$sel:httpStatus:MergePullRequestByFastForwardResponse'] :: MergePullRequestByFastForwardResponse -> Int

-- | Create a value of <a>MergePullRequestByFastForwardResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequest:MergePullRequestByFastForwardResponse'</a>,
--   <a>mergePullRequestByFastForwardResponse_pullRequest</a> - Information
--   about the specified pull request, including the merge.
--   
--   <a>$sel:httpStatus:MergePullRequestByFastForwardResponse'</a>,
--   <a>mergePullRequestByFastForwardResponse_httpStatus</a> - The
--   response's http status code.
newMergePullRequestByFastForwardResponse :: Int -> MergePullRequestByFastForwardResponse

-- | Information about the specified pull request, including the merge.
mergePullRequestByFastForwardResponse_pullRequest :: Lens' MergePullRequestByFastForwardResponse (Maybe PullRequest)

-- | The response's http status code.
mergePullRequestByFastForwardResponse_httpStatus :: Lens' MergePullRequestByFastForwardResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance GHC.Show.Show Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance GHC.Read.Read Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance GHC.Classes.Eq Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance GHC.Generics.Generic Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForwardResponse
instance GHC.Show.Show Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForwardResponse
instance GHC.Read.Read Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForwardResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForwardResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForwardResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.MergePullRequestByFastForward.MergePullRequestByFastForward


-- | Merges two specified branches using the three-way merge strategy.
module Amazonka.CodeCommit.MergeBranchesByThreeWay

-- | <i>See:</i> <a>newMergeBranchesByThreeWay</a> smart constructor.
data MergeBranchesByThreeWay
MergeBranchesByThreeWay' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Text -> Text -> Text -> MergeBranchesByThreeWay

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
[$sel:email:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Maybe Text

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
[$sel:authorName:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Maybe Text

-- | The branch where the merge is applied.
[$sel:targetBranch:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Maybe Text

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Maybe ConflictDetailLevelTypeEnum

-- | The commit message to include in the commit information for the merge.
[$sel:commitMessage:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Maybe Text

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
[$sel:conflictResolution:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Maybe ConflictResolution

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Maybe ConflictResolutionStrategyTypeEnum

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
[$sel:keepEmptyFolders:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Maybe Bool

-- | The name of the repository where you want to merge two branches.
[$sel:repositoryName:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:MergeBranchesByThreeWay'] :: MergeBranchesByThreeWay -> Text

-- | Create a value of <a>MergeBranchesByThreeWay</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_email</a> - The email address of the person
--   merging the branches. This information is used in the commit
--   information for the merge.
--   
--   <a>$sel:authorName:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_authorName</a> - The name of the author who
--   created the commit. This information is used as both the author and
--   committer for the commit.
--   
--   <a>$sel:targetBranch:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_targetBranch</a> - The branch where the
--   merge is applied.
--   
--   <a>$sel:conflictDetailLevel:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_commitMessage</a> - The commit message to
--   include in the commit information for the merge.
--   
--   <a>$sel:conflictResolution:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_conflictResolution</a> - If AUTOMERGE is
--   the conflict resolution strategy, a list of inputs to use when
--   resolving conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_conflictResolutionStrategy</a> - Specifies
--   which branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:keepEmptyFolders:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_keepEmptyFolders</a> - If the commit
--   contains deletions, whether to keep a folder or folder structure if
--   the changes leave the folders empty. If true, a .gitkeep file is
--   created for empty folders. The default is false.
--   
--   <a>$sel:repositoryName:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_repositoryName</a> - The name of the
--   repository where you want to merge two branches.
--   
--   <a>$sel:sourceCommitSpecifier:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_sourceCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_destinationCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
newMergeBranchesByThreeWay :: Text -> Text -> Text -> MergeBranchesByThreeWay

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
mergeBranchesByThreeWay_email :: Lens' MergeBranchesByThreeWay (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
mergeBranchesByThreeWay_authorName :: Lens' MergeBranchesByThreeWay (Maybe Text)

-- | The branch where the merge is applied.
mergeBranchesByThreeWay_targetBranch :: Lens' MergeBranchesByThreeWay (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
mergeBranchesByThreeWay_conflictDetailLevel :: Lens' MergeBranchesByThreeWay (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message to include in the commit information for the merge.
mergeBranchesByThreeWay_commitMessage :: Lens' MergeBranchesByThreeWay (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
mergeBranchesByThreeWay_conflictResolution :: Lens' MergeBranchesByThreeWay (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
mergeBranchesByThreeWay_conflictResolutionStrategy :: Lens' MergeBranchesByThreeWay (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
mergeBranchesByThreeWay_keepEmptyFolders :: Lens' MergeBranchesByThreeWay (Maybe Bool)

-- | The name of the repository where you want to merge two branches.
mergeBranchesByThreeWay_repositoryName :: Lens' MergeBranchesByThreeWay Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesByThreeWay_sourceCommitSpecifier :: Lens' MergeBranchesByThreeWay Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesByThreeWay_destinationCommitSpecifier :: Lens' MergeBranchesByThreeWay Text

-- | <i>See:</i> <a>newMergeBranchesByThreeWayResponse</a> smart
--   constructor.
data MergeBranchesByThreeWayResponse
MergeBranchesByThreeWayResponse' :: Maybe Text -> Maybe Text -> Int -> MergeBranchesByThreeWayResponse

-- | The commit ID of the merge in the destination or target branch.
[$sel:commitId:MergeBranchesByThreeWayResponse'] :: MergeBranchesByThreeWayResponse -> Maybe Text

-- | The tree ID of the merge in the destination or target branch.
[$sel:treeId:MergeBranchesByThreeWayResponse'] :: MergeBranchesByThreeWayResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:MergeBranchesByThreeWayResponse'] :: MergeBranchesByThreeWayResponse -> Int

-- | Create a value of <a>MergeBranchesByThreeWayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:MergeBranchesByThreeWayResponse'</a>,
--   <a>mergeBranchesByThreeWayResponse_commitId</a> - The commit ID of the
--   merge in the destination or target branch.
--   
--   <a>$sel:treeId:MergeBranchesByThreeWayResponse'</a>,
--   <a>mergeBranchesByThreeWayResponse_treeId</a> - The tree ID of the
--   merge in the destination or target branch.
--   
--   <a>$sel:httpStatus:MergeBranchesByThreeWayResponse'</a>,
--   <a>mergeBranchesByThreeWayResponse_httpStatus</a> - The response's
--   http status code.
newMergeBranchesByThreeWayResponse :: Int -> MergeBranchesByThreeWayResponse

-- | The commit ID of the merge in the destination or target branch.
mergeBranchesByThreeWayResponse_commitId :: Lens' MergeBranchesByThreeWayResponse (Maybe Text)

-- | The tree ID of the merge in the destination or target branch.
mergeBranchesByThreeWayResponse_treeId :: Lens' MergeBranchesByThreeWayResponse (Maybe Text)

-- | The response's http status code.
mergeBranchesByThreeWayResponse_httpStatus :: Lens' MergeBranchesByThreeWayResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance GHC.Show.Show Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance GHC.Read.Read Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance GHC.Classes.Eq Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance GHC.Generics.Generic Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWayResponse
instance GHC.Show.Show Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWayResponse
instance GHC.Read.Read Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWayResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWayResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWayResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.MergeBranchesByThreeWay.MergeBranchesByThreeWay


-- | Merges two branches using the squash merge strategy.
module Amazonka.CodeCommit.MergeBranchesBySquash

-- | <i>See:</i> <a>newMergeBranchesBySquash</a> smart constructor.
data MergeBranchesBySquash
MergeBranchesBySquash' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Text -> Text -> Text -> MergeBranchesBySquash

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
[$sel:email:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Maybe Text

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
[$sel:authorName:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Maybe Text

-- | The branch where the merge is applied.
[$sel:targetBranch:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Maybe Text

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Maybe ConflictDetailLevelTypeEnum

-- | The commit message for the merge.
[$sel:commitMessage:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Maybe Text

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
[$sel:conflictResolution:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Maybe ConflictResolution

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Maybe ConflictResolutionStrategyTypeEnum

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If this is specified
--   as true, a .gitkeep file is created for empty folders. The default is
--   false.
[$sel:keepEmptyFolders:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Maybe Bool

-- | The name of the repository where you want to merge two branches.
[$sel:repositoryName:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:MergeBranchesBySquash'] :: MergeBranchesBySquash -> Text

-- | Create a value of <a>MergeBranchesBySquash</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_email</a> - The email address of the person
--   merging the branches. This information is used in the commit
--   information for the merge.
--   
--   <a>$sel:authorName:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_authorName</a> - The name of the author who
--   created the commit. This information is used as both the author and
--   committer for the commit.
--   
--   <a>$sel:targetBranch:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_targetBranch</a> - The branch where the merge
--   is applied.
--   
--   <a>$sel:conflictDetailLevel:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_commitMessage</a> - The commit message for
--   the merge.
--   
--   <a>$sel:conflictResolution:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_conflictResolution</a> - If AUTOMERGE is the
--   conflict resolution strategy, a list of inputs to use when resolving
--   conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_conflictResolutionStrategy</a> - Specifies
--   which branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:keepEmptyFolders:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_keepEmptyFolders</a> - If the commit contains
--   deletions, whether to keep a folder or folder structure if the changes
--   leave the folders empty. If this is specified as true, a .gitkeep file
--   is created for empty folders. The default is false.
--   
--   <a>$sel:repositoryName:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_repositoryName</a> - The name of the
--   repository where you want to merge two branches.
--   
--   <a>$sel:sourceCommitSpecifier:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_sourceCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_destinationCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
newMergeBranchesBySquash :: Text -> Text -> Text -> MergeBranchesBySquash

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
mergeBranchesBySquash_email :: Lens' MergeBranchesBySquash (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
mergeBranchesBySquash_authorName :: Lens' MergeBranchesBySquash (Maybe Text)

-- | The branch where the merge is applied.
mergeBranchesBySquash_targetBranch :: Lens' MergeBranchesBySquash (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
mergeBranchesBySquash_conflictDetailLevel :: Lens' MergeBranchesBySquash (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message for the merge.
mergeBranchesBySquash_commitMessage :: Lens' MergeBranchesBySquash (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
mergeBranchesBySquash_conflictResolution :: Lens' MergeBranchesBySquash (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
mergeBranchesBySquash_conflictResolutionStrategy :: Lens' MergeBranchesBySquash (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If this is specified
--   as true, a .gitkeep file is created for empty folders. The default is
--   false.
mergeBranchesBySquash_keepEmptyFolders :: Lens' MergeBranchesBySquash (Maybe Bool)

-- | The name of the repository where you want to merge two branches.
mergeBranchesBySquash_repositoryName :: Lens' MergeBranchesBySquash Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesBySquash_sourceCommitSpecifier :: Lens' MergeBranchesBySquash Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesBySquash_destinationCommitSpecifier :: Lens' MergeBranchesBySquash Text

-- | <i>See:</i> <a>newMergeBranchesBySquashResponse</a> smart constructor.
data MergeBranchesBySquashResponse
MergeBranchesBySquashResponse' :: Maybe Text -> Maybe Text -> Int -> MergeBranchesBySquashResponse

-- | The commit ID of the merge in the destination or target branch.
[$sel:commitId:MergeBranchesBySquashResponse'] :: MergeBranchesBySquashResponse -> Maybe Text

-- | The tree ID of the merge in the destination or target branch.
[$sel:treeId:MergeBranchesBySquashResponse'] :: MergeBranchesBySquashResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:MergeBranchesBySquashResponse'] :: MergeBranchesBySquashResponse -> Int

-- | Create a value of <a>MergeBranchesBySquashResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:MergeBranchesBySquashResponse'</a>,
--   <a>mergeBranchesBySquashResponse_commitId</a> - The commit ID of the
--   merge in the destination or target branch.
--   
--   <a>$sel:treeId:MergeBranchesBySquashResponse'</a>,
--   <a>mergeBranchesBySquashResponse_treeId</a> - The tree ID of the merge
--   in the destination or target branch.
--   
--   <a>$sel:httpStatus:MergeBranchesBySquashResponse'</a>,
--   <a>mergeBranchesBySquashResponse_httpStatus</a> - The response's http
--   status code.
newMergeBranchesBySquashResponse :: Int -> MergeBranchesBySquashResponse

-- | The commit ID of the merge in the destination or target branch.
mergeBranchesBySquashResponse_commitId :: Lens' MergeBranchesBySquashResponse (Maybe Text)

-- | The tree ID of the merge in the destination or target branch.
mergeBranchesBySquashResponse_treeId :: Lens' MergeBranchesBySquashResponse (Maybe Text)

-- | The response's http status code.
mergeBranchesBySquashResponse_httpStatus :: Lens' MergeBranchesBySquashResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance GHC.Show.Show Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance GHC.Read.Read Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance GHC.Classes.Eq Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance GHC.Generics.Generic Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquashResponse
instance GHC.Show.Show Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquashResponse
instance GHC.Read.Read Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquashResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquashResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquashResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.MergeBranchesBySquash.MergeBranchesBySquash


-- | Merges two branches using the fast-forward merge strategy.
module Amazonka.CodeCommit.MergeBranchesByFastForward

-- | <i>See:</i> <a>newMergeBranchesByFastForward</a> smart constructor.
data MergeBranchesByFastForward
MergeBranchesByFastForward' :: Maybe Text -> Text -> Text -> Text -> MergeBranchesByFastForward

-- | The branch where the merge is applied.
[$sel:targetBranch:MergeBranchesByFastForward'] :: MergeBranchesByFastForward -> Maybe Text

-- | The name of the repository where you want to merge two branches.
[$sel:repositoryName:MergeBranchesByFastForward'] :: MergeBranchesByFastForward -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:MergeBranchesByFastForward'] :: MergeBranchesByFastForward -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:MergeBranchesByFastForward'] :: MergeBranchesByFastForward -> Text

-- | Create a value of <a>MergeBranchesByFastForward</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetBranch:MergeBranchesByFastForward'</a>,
--   <a>mergeBranchesByFastForward_targetBranch</a> - The branch where the
--   merge is applied.
--   
--   <a>$sel:repositoryName:MergeBranchesByFastForward'</a>,
--   <a>mergeBranchesByFastForward_repositoryName</a> - The name of the
--   repository where you want to merge two branches.
--   
--   <a>$sel:sourceCommitSpecifier:MergeBranchesByFastForward'</a>,
--   <a>mergeBranchesByFastForward_sourceCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:MergeBranchesByFastForward'</a>,
--   <a>mergeBranchesByFastForward_destinationCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
newMergeBranchesByFastForward :: Text -> Text -> Text -> MergeBranchesByFastForward

-- | The branch where the merge is applied.
mergeBranchesByFastForward_targetBranch :: Lens' MergeBranchesByFastForward (Maybe Text)

-- | The name of the repository where you want to merge two branches.
mergeBranchesByFastForward_repositoryName :: Lens' MergeBranchesByFastForward Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesByFastForward_sourceCommitSpecifier :: Lens' MergeBranchesByFastForward Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesByFastForward_destinationCommitSpecifier :: Lens' MergeBranchesByFastForward Text

-- | <i>See:</i> <a>newMergeBranchesByFastForwardResponse</a> smart
--   constructor.
data MergeBranchesByFastForwardResponse
MergeBranchesByFastForwardResponse' :: Maybe Text -> Maybe Text -> Int -> MergeBranchesByFastForwardResponse

-- | The commit ID of the merge in the destination or target branch.
[$sel:commitId:MergeBranchesByFastForwardResponse'] :: MergeBranchesByFastForwardResponse -> Maybe Text

-- | The tree ID of the merge in the destination or target branch.
[$sel:treeId:MergeBranchesByFastForwardResponse'] :: MergeBranchesByFastForwardResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:MergeBranchesByFastForwardResponse'] :: MergeBranchesByFastForwardResponse -> Int

-- | Create a value of <a>MergeBranchesByFastForwardResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:MergeBranchesByFastForwardResponse'</a>,
--   <a>mergeBranchesByFastForwardResponse_commitId</a> - The commit ID of
--   the merge in the destination or target branch.
--   
--   <a>$sel:treeId:MergeBranchesByFastForwardResponse'</a>,
--   <a>mergeBranchesByFastForwardResponse_treeId</a> - The tree ID of the
--   merge in the destination or target branch.
--   
--   <a>$sel:httpStatus:MergeBranchesByFastForwardResponse'</a>,
--   <a>mergeBranchesByFastForwardResponse_httpStatus</a> - The response's
--   http status code.
newMergeBranchesByFastForwardResponse :: Int -> MergeBranchesByFastForwardResponse

-- | The commit ID of the merge in the destination or target branch.
mergeBranchesByFastForwardResponse_commitId :: Lens' MergeBranchesByFastForwardResponse (Maybe Text)

-- | The tree ID of the merge in the destination or target branch.
mergeBranchesByFastForwardResponse_treeId :: Lens' MergeBranchesByFastForwardResponse (Maybe Text)

-- | The response's http status code.
mergeBranchesByFastForwardResponse_httpStatus :: Lens' MergeBranchesByFastForwardResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance GHC.Show.Show Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance GHC.Read.Read Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance GHC.Classes.Eq Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance GHC.Generics.Generic Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForwardResponse
instance GHC.Show.Show Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForwardResponse
instance GHC.Read.Read Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForwardResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForwardResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForwardResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance Control.DeepSeq.NFData Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.MergeBranchesByFastForward.MergeBranchesByFastForward


-- | Gets information about AWS tags for a specified Amazon Resource Name
--   (ARN) in AWS CodeCommit. For a list of valid resources in AWS
--   CodeCommit, see <a>CodeCommit Resources and Operations</a> in the
--   <i>AWS CodeCommit User Guide</i>.
module Amazonka.CodeCommit.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Text -> ListTagsForResource

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:ListTagsForResource'] :: ListTagsForResource -> Maybe Text

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get information about tags, if any.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - An enumeration token that, when
--   provided in a request, returns the next batch of the results.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource for which you want to get information about
--   tags, if any.
newListTagsForResource :: Text -> ListTagsForResource

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get information about tags, if any.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
[$sel:nextToken:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe Text

-- | A list of tag key and value pairs associated with the specified
--   resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - An enumeration token
--   that allows the operation to batch the next results of the operation.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tag key and value
--   pairs associated with the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A list of tag key and value pairs associated with the specified
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.CodeCommit.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.CodeCommit.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.CodeCommit.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.ListTagsForResource.ListTagsForResource


-- | Lists all repositories associated with the specified approval rule
--   template.
module Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate

-- | <i>See:</i> <a>newListRepositoriesForApprovalRuleTemplate</a> smart
--   constructor.
data ListRepositoriesForApprovalRuleTemplate
ListRepositoriesForApprovalRuleTemplate' :: Maybe Text -> Maybe Int -> Text -> ListRepositoriesForApprovalRuleTemplate

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:ListRepositoriesForApprovalRuleTemplate'] :: ListRepositoriesForApprovalRuleTemplate -> Maybe Text

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
[$sel:maxResults:ListRepositoriesForApprovalRuleTemplate'] :: ListRepositoriesForApprovalRuleTemplate -> Maybe Int

-- | The name of the approval rule template for which you want to list
--   repositories that are associated with that template.
[$sel:approvalRuleTemplateName:ListRepositoriesForApprovalRuleTemplate'] :: ListRepositoriesForApprovalRuleTemplate -> Text

-- | Create a value of <a>ListRepositoriesForApprovalRuleTemplate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRepositoriesForApprovalRuleTemplate'</a>,
--   <a>listRepositoriesForApprovalRuleTemplate_nextToken</a> - An
--   enumeration token that, when provided in a request, returns the next
--   batch of the results.
--   
--   <a>$sel:maxResults:ListRepositoriesForApprovalRuleTemplate'</a>,
--   <a>listRepositoriesForApprovalRuleTemplate_maxResults</a> - A
--   non-zero, non-negative integer used to limit the number of returned
--   results.
--   
--   
--   <a>$sel:approvalRuleTemplateName:ListRepositoriesForApprovalRuleTemplate'</a>,
--   <a>listRepositoriesForApprovalRuleTemplate_approvalRuleTemplateName</a>
--   - The name of the approval rule template for which you want to list
--   repositories that are associated with that template.
newListRepositoriesForApprovalRuleTemplate :: Text -> ListRepositoriesForApprovalRuleTemplate

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listRepositoriesForApprovalRuleTemplate_nextToken :: Lens' ListRepositoriesForApprovalRuleTemplate (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
listRepositoriesForApprovalRuleTemplate_maxResults :: Lens' ListRepositoriesForApprovalRuleTemplate (Maybe Int)

-- | The name of the approval rule template for which you want to list
--   repositories that are associated with that template.
listRepositoriesForApprovalRuleTemplate_approvalRuleTemplateName :: Lens' ListRepositoriesForApprovalRuleTemplate Text

-- | <i>See:</i> <a>newListRepositoriesForApprovalRuleTemplateResponse</a>
--   smart constructor.
data ListRepositoriesForApprovalRuleTemplateResponse
ListRepositoriesForApprovalRuleTemplateResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListRepositoriesForApprovalRuleTemplateResponse

-- | A list of repository names that are associated with the specified
--   approval rule template.
[$sel:repositoryNames:ListRepositoriesForApprovalRuleTemplateResponse'] :: ListRepositoriesForApprovalRuleTemplateResponse -> Maybe [Text]

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
[$sel:nextToken:ListRepositoriesForApprovalRuleTemplateResponse'] :: ListRepositoriesForApprovalRuleTemplateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRepositoriesForApprovalRuleTemplateResponse'] :: ListRepositoriesForApprovalRuleTemplateResponse -> Int

-- | Create a value of
--   <a>ListRepositoriesForApprovalRuleTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:repositoryNames:ListRepositoriesForApprovalRuleTemplateResponse'</a>,
--   <a>listRepositoriesForApprovalRuleTemplateResponse_repositoryNames</a>
--   - A list of repository names that are associated with the specified
--   approval rule template.
--   
--   <a>$sel:nextToken:ListRepositoriesForApprovalRuleTemplate'</a>,
--   <a>listRepositoriesForApprovalRuleTemplateResponse_nextToken</a> - An
--   enumeration token that allows the operation to batch the next results
--   of the operation.
--   
--   
--   <a>$sel:httpStatus:ListRepositoriesForApprovalRuleTemplateResponse'</a>,
--   <a>listRepositoriesForApprovalRuleTemplateResponse_httpStatus</a> -
--   The response's http status code.
newListRepositoriesForApprovalRuleTemplateResponse :: Int -> ListRepositoriesForApprovalRuleTemplateResponse

-- | A list of repository names that are associated with the specified
--   approval rule template.
listRepositoriesForApprovalRuleTemplateResponse_repositoryNames :: Lens' ListRepositoriesForApprovalRuleTemplateResponse (Maybe [Text])

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listRepositoriesForApprovalRuleTemplateResponse_nextToken :: Lens' ListRepositoriesForApprovalRuleTemplateResponse (Maybe Text)

-- | The response's http status code.
listRepositoriesForApprovalRuleTemplateResponse_httpStatus :: Lens' ListRepositoriesForApprovalRuleTemplateResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance GHC.Show.Show Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance GHC.Read.Read Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance GHC.Classes.Eq Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplateResponse
instance GHC.Show.Show Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplateResponse
instance GHC.Read.Read Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplateResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.ListRepositoriesForApprovalRuleTemplate.ListRepositoriesForApprovalRuleTemplate


-- | Gets information about one or more repositories.
--   
--   This operation returns paginated results.
module Amazonka.CodeCommit.ListRepositories

-- | Represents the input of a list repositories operation.
--   
--   <i>See:</i> <a>newListRepositories</a> smart constructor.
data ListRepositories
ListRepositories' :: Maybe Text -> Maybe OrderEnum -> Maybe SortByEnum -> ListRepositories

-- | An enumeration token that allows the operation to batch the results of
--   the operation. Batch sizes are 1,000 for list repository operations.
--   When the client sends the token back to AWS CodeCommit, another page
--   of 1,000 records is retrieved.
[$sel:nextToken:ListRepositories'] :: ListRepositories -> Maybe Text

-- | The order in which to sort the results of a list repositories
--   operation.
[$sel:order:ListRepositories'] :: ListRepositories -> Maybe OrderEnum

-- | The criteria used to sort the results of a list repositories
--   operation.
[$sel:sortBy:ListRepositories'] :: ListRepositories -> Maybe SortByEnum

-- | Create a value of <a>ListRepositories</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRepositories'</a>,
--   <a>listRepositories_nextToken</a> - An enumeration token that allows
--   the operation to batch the results of the operation. Batch sizes are
--   1,000 for list repository operations. When the client sends the token
--   back to AWS CodeCommit, another page of 1,000 records is retrieved.
--   
--   <a>$sel:order:ListRepositories'</a>, <a>listRepositories_order</a> -
--   The order in which to sort the results of a list repositories
--   operation.
--   
--   <a>$sel:sortBy:ListRepositories'</a>, <a>listRepositories_sortBy</a> -
--   The criteria used to sort the results of a list repositories
--   operation.
newListRepositories :: ListRepositories

-- | An enumeration token that allows the operation to batch the results of
--   the operation. Batch sizes are 1,000 for list repository operations.
--   When the client sends the token back to AWS CodeCommit, another page
--   of 1,000 records is retrieved.
listRepositories_nextToken :: Lens' ListRepositories (Maybe Text)

-- | The order in which to sort the results of a list repositories
--   operation.
listRepositories_order :: Lens' ListRepositories (Maybe OrderEnum)

-- | The criteria used to sort the results of a list repositories
--   operation.
listRepositories_sortBy :: Lens' ListRepositories (Maybe SortByEnum)

-- | Represents the output of a list repositories operation.
--   
--   <i>See:</i> <a>newListRepositoriesResponse</a> smart constructor.
data ListRepositoriesResponse
ListRepositoriesResponse' :: Maybe [RepositoryNameIdPair] -> Maybe Text -> Int -> ListRepositoriesResponse

-- | Lists the repositories called by the list repositories operation.
[$sel:repositories:ListRepositoriesResponse'] :: ListRepositoriesResponse -> Maybe [RepositoryNameIdPair]

-- | An enumeration token that allows the operation to batch the results of
--   the operation. Batch sizes are 1,000 for list repository operations.
--   When the client sends the token back to AWS CodeCommit, another page
--   of 1,000 records is retrieved.
[$sel:nextToken:ListRepositoriesResponse'] :: ListRepositoriesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListRepositoriesResponse'] :: ListRepositoriesResponse -> Int

-- | Create a value of <a>ListRepositoriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositories:ListRepositoriesResponse'</a>,
--   <a>listRepositoriesResponse_repositories</a> - Lists the repositories
--   called by the list repositories operation.
--   
--   <a>$sel:nextToken:ListRepositories'</a>,
--   <a>listRepositoriesResponse_nextToken</a> - An enumeration token that
--   allows the operation to batch the results of the operation. Batch
--   sizes are 1,000 for list repository operations. When the client sends
--   the token back to AWS CodeCommit, another page of 1,000 records is
--   retrieved.
--   
--   <a>$sel:httpStatus:ListRepositoriesResponse'</a>,
--   <a>listRepositoriesResponse_httpStatus</a> - The response's http
--   status code.
newListRepositoriesResponse :: Int -> ListRepositoriesResponse

-- | Lists the repositories called by the list repositories operation.
listRepositoriesResponse_repositories :: Lens' ListRepositoriesResponse (Maybe [RepositoryNameIdPair])

-- | An enumeration token that allows the operation to batch the results of
--   the operation. Batch sizes are 1,000 for list repository operations.
--   When the client sends the token back to AWS CodeCommit, another page
--   of 1,000 records is retrieved.
listRepositoriesResponse_nextToken :: Lens' ListRepositoriesResponse (Maybe Text)

-- | The response's http status code.
listRepositoriesResponse_httpStatus :: Lens' ListRepositoriesResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.ListRepositories.ListRepositories
instance GHC.Show.Show Amazonka.CodeCommit.ListRepositories.ListRepositories
instance GHC.Read.Read Amazonka.CodeCommit.ListRepositories.ListRepositories
instance GHC.Classes.Eq Amazonka.CodeCommit.ListRepositories.ListRepositories
instance GHC.Generics.Generic Amazonka.CodeCommit.ListRepositories.ListRepositoriesResponse
instance GHC.Show.Show Amazonka.CodeCommit.ListRepositories.ListRepositoriesResponse
instance GHC.Read.Read Amazonka.CodeCommit.ListRepositories.ListRepositoriesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.ListRepositories.ListRepositoriesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.ListRepositories.ListRepositories
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListRepositories.ListRepositoriesResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeCommit.ListRepositories.ListRepositories
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.ListRepositories.ListRepositories
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListRepositories.ListRepositories
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.ListRepositories.ListRepositories
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.ListRepositories.ListRepositories
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.ListRepositories.ListRepositories
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.ListRepositories.ListRepositories


-- | Returns a list of pull requests for a specified repository. The return
--   list can be refined by pull request status or pull request author ARN.
--   
--   This operation returns paginated results.
module Amazonka.CodeCommit.ListPullRequests

-- | <i>See:</i> <a>newListPullRequests</a> smart constructor.
data ListPullRequests
ListPullRequests' :: Maybe Text -> Maybe Text -> Maybe PullRequestStatusEnum -> Maybe Int -> Text -> ListPullRequests

-- | Optional. The Amazon Resource Name (ARN) of the user who created the
--   pull request. If used, this filters the results to pull requests
--   created by that user.
[$sel:authorArn:ListPullRequests'] :: ListPullRequests -> Maybe Text

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:ListPullRequests'] :: ListPullRequests -> Maybe Text

-- | Optional. The status of the pull request. If used, this refines the
--   results to the pull requests that match the specified status.
[$sel:pullRequestStatus:ListPullRequests'] :: ListPullRequests -> Maybe PullRequestStatusEnum

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
[$sel:maxResults:ListPullRequests'] :: ListPullRequests -> Maybe Int

-- | The name of the repository for which you want to list pull requests.
[$sel:repositoryName:ListPullRequests'] :: ListPullRequests -> Text

-- | Create a value of <a>ListPullRequests</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorArn:ListPullRequests'</a>,
--   <a>listPullRequests_authorArn</a> - Optional. The Amazon Resource Name
--   (ARN) of the user who created the pull request. If used, this filters
--   the results to pull requests created by that user.
--   
--   <a>$sel:nextToken:ListPullRequests'</a>,
--   <a>listPullRequests_nextToken</a> - An enumeration token that, when
--   provided in a request, returns the next batch of the results.
--   
--   <a>$sel:pullRequestStatus:ListPullRequests'</a>,
--   <a>listPullRequests_pullRequestStatus</a> - Optional. The status of
--   the pull request. If used, this refines the results to the pull
--   requests that match the specified status.
--   
--   <a>$sel:maxResults:ListPullRequests'</a>,
--   <a>listPullRequests_maxResults</a> - A non-zero, non-negative integer
--   used to limit the number of returned results.
--   
--   <a>$sel:repositoryName:ListPullRequests'</a>,
--   <a>listPullRequests_repositoryName</a> - The name of the repository
--   for which you want to list pull requests.
newListPullRequests :: Text -> ListPullRequests

-- | Optional. The Amazon Resource Name (ARN) of the user who created the
--   pull request. If used, this filters the results to pull requests
--   created by that user.
listPullRequests_authorArn :: Lens' ListPullRequests (Maybe Text)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listPullRequests_nextToken :: Lens' ListPullRequests (Maybe Text)

-- | Optional. The status of the pull request. If used, this refines the
--   results to the pull requests that match the specified status.
listPullRequests_pullRequestStatus :: Lens' ListPullRequests (Maybe PullRequestStatusEnum)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
listPullRequests_maxResults :: Lens' ListPullRequests (Maybe Int)

-- | The name of the repository for which you want to list pull requests.
listPullRequests_repositoryName :: Lens' ListPullRequests Text

-- | <i>See:</i> <a>newListPullRequestsResponse</a> smart constructor.
data ListPullRequestsResponse
ListPullRequestsResponse' :: Maybe Text -> Int -> [Text] -> ListPullRequestsResponse

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
[$sel:nextToken:ListPullRequestsResponse'] :: ListPullRequestsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPullRequestsResponse'] :: ListPullRequestsResponse -> Int

-- | The system-generated IDs of the pull requests.
[$sel:pullRequestIds:ListPullRequestsResponse'] :: ListPullRequestsResponse -> [Text]

-- | Create a value of <a>ListPullRequestsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPullRequests'</a>,
--   <a>listPullRequestsResponse_nextToken</a> - An enumeration token that
--   allows the operation to batch the next results of the operation.
--   
--   <a>$sel:httpStatus:ListPullRequestsResponse'</a>,
--   <a>listPullRequestsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:pullRequestIds:ListPullRequestsResponse'</a>,
--   <a>listPullRequestsResponse_pullRequestIds</a> - The system-generated
--   IDs of the pull requests.
newListPullRequestsResponse :: Int -> ListPullRequestsResponse

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listPullRequestsResponse_nextToken :: Lens' ListPullRequestsResponse (Maybe Text)

-- | The response's http status code.
listPullRequestsResponse_httpStatus :: Lens' ListPullRequestsResponse Int

-- | The system-generated IDs of the pull requests.
listPullRequestsResponse_pullRequestIds :: Lens' ListPullRequestsResponse [Text]
instance GHC.Generics.Generic Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance GHC.Show.Show Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance GHC.Read.Read Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance GHC.Classes.Eq Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance GHC.Generics.Generic Amazonka.CodeCommit.ListPullRequests.ListPullRequestsResponse
instance GHC.Show.Show Amazonka.CodeCommit.ListPullRequests.ListPullRequestsResponse
instance GHC.Read.Read Amazonka.CodeCommit.ListPullRequests.ListPullRequestsResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.ListPullRequests.ListPullRequestsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListPullRequests.ListPullRequestsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.ListPullRequests.ListPullRequests
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.ListPullRequests.ListPullRequests


-- | Gets information about one or more branches in a repository.
--   
--   This operation returns paginated results.
module Amazonka.CodeCommit.ListBranches

-- | Represents the input of a list branches operation.
--   
--   <i>See:</i> <a>newListBranches</a> smart constructor.
data ListBranches
ListBranches' :: Maybe Text -> Text -> ListBranches

-- | An enumeration token that allows the operation to batch the results.
[$sel:nextToken:ListBranches'] :: ListBranches -> Maybe Text

-- | The name of the repository that contains the branches.
[$sel:repositoryName:ListBranches'] :: ListBranches -> Text

-- | Create a value of <a>ListBranches</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBranches'</a>, <a>listBranches_nextToken</a> -
--   An enumeration token that allows the operation to batch the results.
--   
--   <a>$sel:repositoryName:ListBranches'</a>,
--   <a>listBranches_repositoryName</a> - The name of the repository that
--   contains the branches.
newListBranches :: Text -> ListBranches

-- | An enumeration token that allows the operation to batch the results.
listBranches_nextToken :: Lens' ListBranches (Maybe Text)

-- | The name of the repository that contains the branches.
listBranches_repositoryName :: Lens' ListBranches Text

-- | Represents the output of a list branches operation.
--   
--   <i>See:</i> <a>newListBranchesResponse</a> smart constructor.
data ListBranchesResponse
ListBranchesResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListBranchesResponse

-- | The list of branch names.
[$sel:branches:ListBranchesResponse'] :: ListBranchesResponse -> Maybe [Text]

-- | An enumeration token that returns the batch of the results.
[$sel:nextToken:ListBranchesResponse'] :: ListBranchesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListBranchesResponse'] :: ListBranchesResponse -> Int

-- | Create a value of <a>ListBranchesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branches:ListBranchesResponse'</a>,
--   <a>listBranchesResponse_branches</a> - The list of branch names.
--   
--   <a>$sel:nextToken:ListBranches'</a>,
--   <a>listBranchesResponse_nextToken</a> - An enumeration token that
--   returns the batch of the results.
--   
--   <a>$sel:httpStatus:ListBranchesResponse'</a>,
--   <a>listBranchesResponse_httpStatus</a> - The response's http status
--   code.
newListBranchesResponse :: Int -> ListBranchesResponse

-- | The list of branch names.
listBranchesResponse_branches :: Lens' ListBranchesResponse (Maybe [Text])

-- | An enumeration token that returns the batch of the results.
listBranchesResponse_nextToken :: Lens' ListBranchesResponse (Maybe Text)

-- | The response's http status code.
listBranchesResponse_httpStatus :: Lens' ListBranchesResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.ListBranches.ListBranches
instance GHC.Show.Show Amazonka.CodeCommit.ListBranches.ListBranches
instance GHC.Read.Read Amazonka.CodeCommit.ListBranches.ListBranches
instance GHC.Classes.Eq Amazonka.CodeCommit.ListBranches.ListBranches
instance GHC.Generics.Generic Amazonka.CodeCommit.ListBranches.ListBranchesResponse
instance GHC.Show.Show Amazonka.CodeCommit.ListBranches.ListBranchesResponse
instance GHC.Read.Read Amazonka.CodeCommit.ListBranches.ListBranchesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.ListBranches.ListBranchesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.ListBranches.ListBranches
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListBranches.ListBranchesResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeCommit.ListBranches.ListBranches
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.ListBranches.ListBranches
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListBranches.ListBranches
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.ListBranches.ListBranches
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.ListBranches.ListBranches
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.ListBranches.ListBranches
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.ListBranches.ListBranches


-- | Lists all approval rule templates that are associated with a specified
--   repository.
module Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository

-- | <i>See:</i> <a>newListAssociatedApprovalRuleTemplatesForRepository</a>
--   smart constructor.
data ListAssociatedApprovalRuleTemplatesForRepository
ListAssociatedApprovalRuleTemplatesForRepository' :: Maybe Text -> Maybe Int -> Text -> ListAssociatedApprovalRuleTemplatesForRepository

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:ListAssociatedApprovalRuleTemplatesForRepository'] :: ListAssociatedApprovalRuleTemplatesForRepository -> Maybe Text

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
[$sel:maxResults:ListAssociatedApprovalRuleTemplatesForRepository'] :: ListAssociatedApprovalRuleTemplatesForRepository -> Maybe Int

-- | The name of the repository for which you want to list all associated
--   approval rule templates.
[$sel:repositoryName:ListAssociatedApprovalRuleTemplatesForRepository'] :: ListAssociatedApprovalRuleTemplatesForRepository -> Text

-- | Create a value of
--   <a>ListAssociatedApprovalRuleTemplatesForRepository</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nextToken:ListAssociatedApprovalRuleTemplatesForRepository'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepository_nextToken</a> - An
--   enumeration token that, when provided in a request, returns the next
--   batch of the results.
--   
--   
--   <a>$sel:maxResults:ListAssociatedApprovalRuleTemplatesForRepository'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepository_maxResults</a> - A
--   non-zero, non-negative integer used to limit the number of returned
--   results.
--   
--   
--   <a>$sel:repositoryName:ListAssociatedApprovalRuleTemplatesForRepository'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepository_repositoryName</a>
--   - The name of the repository for which you want to list all associated
--   approval rule templates.
newListAssociatedApprovalRuleTemplatesForRepository :: Text -> ListAssociatedApprovalRuleTemplatesForRepository

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listAssociatedApprovalRuleTemplatesForRepository_nextToken :: Lens' ListAssociatedApprovalRuleTemplatesForRepository (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
listAssociatedApprovalRuleTemplatesForRepository_maxResults :: Lens' ListAssociatedApprovalRuleTemplatesForRepository (Maybe Int)

-- | The name of the repository for which you want to list all associated
--   approval rule templates.
listAssociatedApprovalRuleTemplatesForRepository_repositoryName :: Lens' ListAssociatedApprovalRuleTemplatesForRepository Text

-- | <i>See:</i>
--   <a>newListAssociatedApprovalRuleTemplatesForRepositoryResponse</a>
--   smart constructor.
data ListAssociatedApprovalRuleTemplatesForRepositoryResponse
ListAssociatedApprovalRuleTemplatesForRepositoryResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListAssociatedApprovalRuleTemplatesForRepositoryResponse

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
[$sel:nextToken:ListAssociatedApprovalRuleTemplatesForRepositoryResponse'] :: ListAssociatedApprovalRuleTemplatesForRepositoryResponse -> Maybe Text

-- | The names of all approval rule templates associated with the
--   repository.
[$sel:approvalRuleTemplateNames:ListAssociatedApprovalRuleTemplatesForRepositoryResponse'] :: ListAssociatedApprovalRuleTemplatesForRepositoryResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListAssociatedApprovalRuleTemplatesForRepositoryResponse'] :: ListAssociatedApprovalRuleTemplatesForRepositoryResponse -> Int

-- | Create a value of
--   <a>ListAssociatedApprovalRuleTemplatesForRepositoryResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nextToken:ListAssociatedApprovalRuleTemplatesForRepository'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepositoryResponse_nextToken</a>
--   - An enumeration token that allows the operation to batch the next
--   results of the operation.
--   
--   
--   <a>$sel:approvalRuleTemplateNames:ListAssociatedApprovalRuleTemplatesForRepositoryResponse'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepositoryResponse_approvalRuleTemplateNames</a>
--   - The names of all approval rule templates associated with the
--   repository.
--   
--   
--   <a>$sel:httpStatus:ListAssociatedApprovalRuleTemplatesForRepositoryResponse'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepositoryResponse_httpStatus</a>
--   - The response's http status code.
newListAssociatedApprovalRuleTemplatesForRepositoryResponse :: Int -> ListAssociatedApprovalRuleTemplatesForRepositoryResponse

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listAssociatedApprovalRuleTemplatesForRepositoryResponse_nextToken :: Lens' ListAssociatedApprovalRuleTemplatesForRepositoryResponse (Maybe Text)

-- | The names of all approval rule templates associated with the
--   repository.
listAssociatedApprovalRuleTemplatesForRepositoryResponse_approvalRuleTemplateNames :: Lens' ListAssociatedApprovalRuleTemplatesForRepositoryResponse (Maybe [Text])

-- | The response's http status code.
listAssociatedApprovalRuleTemplatesForRepositoryResponse_httpStatus :: Lens' ListAssociatedApprovalRuleTemplatesForRepositoryResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance GHC.Show.Show Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance GHC.Read.Read Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance GHC.Classes.Eq Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance GHC.Generics.Generic Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepositoryResponse
instance GHC.Show.Show Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepositoryResponse
instance GHC.Read.Read Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.ListAssociatedApprovalRuleTemplatesForRepository.ListAssociatedApprovalRuleTemplatesForRepository


-- | Lists all approval rule templates in the specified AWS Region in your
--   AWS account. If an AWS Region is not specified, the AWS Region where
--   you are signed in is used.
module Amazonka.CodeCommit.ListApprovalRuleTemplates

-- | <i>See:</i> <a>newListApprovalRuleTemplates</a> smart constructor.
data ListApprovalRuleTemplates
ListApprovalRuleTemplates' :: Maybe Text -> Maybe Int -> ListApprovalRuleTemplates

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:ListApprovalRuleTemplates'] :: ListApprovalRuleTemplates -> Maybe Text

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
[$sel:maxResults:ListApprovalRuleTemplates'] :: ListApprovalRuleTemplates -> Maybe Int

-- | Create a value of <a>ListApprovalRuleTemplates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApprovalRuleTemplates'</a>,
--   <a>listApprovalRuleTemplates_nextToken</a> - An enumeration token
--   that, when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:maxResults:ListApprovalRuleTemplates'</a>,
--   <a>listApprovalRuleTemplates_maxResults</a> - A non-zero, non-negative
--   integer used to limit the number of returned results.
newListApprovalRuleTemplates :: ListApprovalRuleTemplates

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listApprovalRuleTemplates_nextToken :: Lens' ListApprovalRuleTemplates (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
listApprovalRuleTemplates_maxResults :: Lens' ListApprovalRuleTemplates (Maybe Int)

-- | <i>See:</i> <a>newListApprovalRuleTemplatesResponse</a> smart
--   constructor.
data ListApprovalRuleTemplatesResponse
ListApprovalRuleTemplatesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListApprovalRuleTemplatesResponse

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
[$sel:nextToken:ListApprovalRuleTemplatesResponse'] :: ListApprovalRuleTemplatesResponse -> Maybe Text

-- | The names of all the approval rule templates found in the AWS Region
--   for your AWS account.
[$sel:approvalRuleTemplateNames:ListApprovalRuleTemplatesResponse'] :: ListApprovalRuleTemplatesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListApprovalRuleTemplatesResponse'] :: ListApprovalRuleTemplatesResponse -> Int

-- | Create a value of <a>ListApprovalRuleTemplatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApprovalRuleTemplates'</a>,
--   <a>listApprovalRuleTemplatesResponse_nextToken</a> - An enumeration
--   token that allows the operation to batch the next results of the
--   operation.
--   
--   
--   <a>$sel:approvalRuleTemplateNames:ListApprovalRuleTemplatesResponse'</a>,
--   <a>listApprovalRuleTemplatesResponse_approvalRuleTemplateNames</a> -
--   The names of all the approval rule templates found in the AWS Region
--   for your AWS account.
--   
--   <a>$sel:httpStatus:ListApprovalRuleTemplatesResponse'</a>,
--   <a>listApprovalRuleTemplatesResponse_httpStatus</a> - The response's
--   http status code.
newListApprovalRuleTemplatesResponse :: Int -> ListApprovalRuleTemplatesResponse

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listApprovalRuleTemplatesResponse_nextToken :: Lens' ListApprovalRuleTemplatesResponse (Maybe Text)

-- | The names of all the approval rule templates found in the AWS Region
--   for your AWS account.
listApprovalRuleTemplatesResponse_approvalRuleTemplateNames :: Lens' ListApprovalRuleTemplatesResponse (Maybe [Text])

-- | The response's http status code.
listApprovalRuleTemplatesResponse_httpStatus :: Lens' ListApprovalRuleTemplatesResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance GHC.Show.Show Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance GHC.Read.Read Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance GHC.Classes.Eq Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance GHC.Generics.Generic Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplatesResponse
instance GHC.Show.Show Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplatesResponse
instance GHC.Read.Read Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplatesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplatesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplatesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance Control.DeepSeq.NFData Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.ListApprovalRuleTemplates.ListApprovalRuleTemplates


-- | Gets information about triggers configured for a repository.
module Amazonka.CodeCommit.GetRepositoryTriggers

-- | Represents the input of a get repository triggers operation.
--   
--   <i>See:</i> <a>newGetRepositoryTriggers</a> smart constructor.
data GetRepositoryTriggers
GetRepositoryTriggers' :: Text -> GetRepositoryTriggers

-- | The name of the repository for which the trigger is configured.
[$sel:repositoryName:GetRepositoryTriggers'] :: GetRepositoryTriggers -> Text

-- | Create a value of <a>GetRepositoryTriggers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:GetRepositoryTriggers'</a>,
--   <a>getRepositoryTriggers_repositoryName</a> - The name of the
--   repository for which the trigger is configured.
newGetRepositoryTriggers :: Text -> GetRepositoryTriggers

-- | The name of the repository for which the trigger is configured.
getRepositoryTriggers_repositoryName :: Lens' GetRepositoryTriggers Text

-- | Represents the output of a get repository triggers operation.
--   
--   <i>See:</i> <a>newGetRepositoryTriggersResponse</a> smart constructor.
data GetRepositoryTriggersResponse
GetRepositoryTriggersResponse' :: Maybe Text -> Maybe [RepositoryTrigger] -> Int -> GetRepositoryTriggersResponse

-- | The system-generated unique ID for the trigger.
[$sel:configurationId:GetRepositoryTriggersResponse'] :: GetRepositoryTriggersResponse -> Maybe Text

-- | The JSON block of configuration information for each trigger.
[$sel:triggers:GetRepositoryTriggersResponse'] :: GetRepositoryTriggersResponse -> Maybe [RepositoryTrigger]

-- | The response's http status code.
[$sel:httpStatus:GetRepositoryTriggersResponse'] :: GetRepositoryTriggersResponse -> Int

-- | Create a value of <a>GetRepositoryTriggersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationId:GetRepositoryTriggersResponse'</a>,
--   <a>getRepositoryTriggersResponse_configurationId</a> - The
--   system-generated unique ID for the trigger.
--   
--   <a>$sel:triggers:GetRepositoryTriggersResponse'</a>,
--   <a>getRepositoryTriggersResponse_triggers</a> - The JSON block of
--   configuration information for each trigger.
--   
--   <a>$sel:httpStatus:GetRepositoryTriggersResponse'</a>,
--   <a>getRepositoryTriggersResponse_httpStatus</a> - The response's http
--   status code.
newGetRepositoryTriggersResponse :: Int -> GetRepositoryTriggersResponse

-- | The system-generated unique ID for the trigger.
getRepositoryTriggersResponse_configurationId :: Lens' GetRepositoryTriggersResponse (Maybe Text)

-- | The JSON block of configuration information for each trigger.
getRepositoryTriggersResponse_triggers :: Lens' GetRepositoryTriggersResponse (Maybe [RepositoryTrigger])

-- | The response's http status code.
getRepositoryTriggersResponse_httpStatus :: Lens' GetRepositoryTriggersResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance GHC.Show.Show Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance GHC.Read.Read Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance GHC.Classes.Eq Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance GHC.Generics.Generic Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggersResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggersResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggersResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggersResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggersResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetRepositoryTriggers.GetRepositoryTriggers


-- | Returns information about a repository.
--   
--   The description field for a repository accepts all HTML characters and
--   all valid Unicode characters. Applications that do not HTML-encode the
--   description and display it in a webpage can expose users to
--   potentially malicious code. Make sure that you HTML-encode the
--   description field in any application that uses this API to display the
--   repository description on a webpage.
module Amazonka.CodeCommit.GetRepository

-- | Represents the input of a get repository operation.
--   
--   <i>See:</i> <a>newGetRepository</a> smart constructor.
data GetRepository
GetRepository' :: Text -> GetRepository

-- | The name of the repository to get information about.
[$sel:repositoryName:GetRepository'] :: GetRepository -> Text

-- | Create a value of <a>GetRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:GetRepository'</a>,
--   <a>getRepository_repositoryName</a> - The name of the repository to
--   get information about.
newGetRepository :: Text -> GetRepository

-- | The name of the repository to get information about.
getRepository_repositoryName :: Lens' GetRepository Text

-- | Represents the output of a get repository operation.
--   
--   <i>See:</i> <a>newGetRepositoryResponse</a> smart constructor.
data GetRepositoryResponse
GetRepositoryResponse' :: Maybe RepositoryMetadata -> Int -> GetRepositoryResponse

-- | Information about the repository.
[$sel:repositoryMetadata:GetRepositoryResponse'] :: GetRepositoryResponse -> Maybe RepositoryMetadata

-- | The response's http status code.
[$sel:httpStatus:GetRepositoryResponse'] :: GetRepositoryResponse -> Int

-- | Create a value of <a>GetRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryMetadata:GetRepositoryResponse'</a>,
--   <a>getRepositoryResponse_repositoryMetadata</a> - Information about
--   the repository.
--   
--   <a>$sel:httpStatus:GetRepositoryResponse'</a>,
--   <a>getRepositoryResponse_httpStatus</a> - The response's http status
--   code.
newGetRepositoryResponse :: Int -> GetRepositoryResponse

-- | Information about the repository.
getRepositoryResponse_repositoryMetadata :: Lens' GetRepositoryResponse (Maybe RepositoryMetadata)

-- | The response's http status code.
getRepositoryResponse_httpStatus :: Lens' GetRepositoryResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetRepository.GetRepository
instance GHC.Show.Show Amazonka.CodeCommit.GetRepository.GetRepository
instance GHC.Read.Read Amazonka.CodeCommit.GetRepository.GetRepository
instance GHC.Classes.Eq Amazonka.CodeCommit.GetRepository.GetRepository
instance GHC.Generics.Generic Amazonka.CodeCommit.GetRepository.GetRepositoryResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetRepository.GetRepositoryResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetRepository.GetRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetRepository.GetRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetRepository.GetRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetRepository.GetRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetRepository.GetRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetRepository.GetRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetRepository.GetRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetRepository.GetRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetRepository.GetRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetRepository.GetRepository


-- | Returns information about whether approval rules have been set aside
--   (overridden) for a pull request, and if so, the Amazon Resource Name
--   (ARN) of the user or identity that overrode the rules and their
--   requirements for the pull request.
module Amazonka.CodeCommit.GetPullRequestOverrideState

-- | <i>See:</i> <a>newGetPullRequestOverrideState</a> smart constructor.
data GetPullRequestOverrideState
GetPullRequestOverrideState' :: Text -> Text -> GetPullRequestOverrideState

-- | The ID of the pull request for which you want to get information about
--   whether approval rules have been set aside (overridden).
[$sel:pullRequestId:GetPullRequestOverrideState'] :: GetPullRequestOverrideState -> Text

-- | The system-generated ID of the revision for the pull request. To
--   retrieve the most recent revision ID, use GetPullRequest.
[$sel:revisionId:GetPullRequestOverrideState'] :: GetPullRequestOverrideState -> Text

-- | Create a value of <a>GetPullRequestOverrideState</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:GetPullRequestOverrideState'</a>,
--   <a>getPullRequestOverrideState_pullRequestId</a> - The ID of the pull
--   request for which you want to get information about whether approval
--   rules have been set aside (overridden).
--   
--   <a>$sel:revisionId:GetPullRequestOverrideState'</a>,
--   <a>getPullRequestOverrideState_revisionId</a> - The system-generated
--   ID of the revision for the pull request. To retrieve the most recent
--   revision ID, use GetPullRequest.
newGetPullRequestOverrideState :: Text -> Text -> GetPullRequestOverrideState

-- | The ID of the pull request for which you want to get information about
--   whether approval rules have been set aside (overridden).
getPullRequestOverrideState_pullRequestId :: Lens' GetPullRequestOverrideState Text

-- | The system-generated ID of the revision for the pull request. To
--   retrieve the most recent revision ID, use GetPullRequest.
getPullRequestOverrideState_revisionId :: Lens' GetPullRequestOverrideState Text

-- | <i>See:</i> <a>newGetPullRequestOverrideStateResponse</a> smart
--   constructor.
data GetPullRequestOverrideStateResponse
GetPullRequestOverrideStateResponse' :: Maybe Bool -> Maybe Text -> Int -> GetPullRequestOverrideStateResponse

-- | A Boolean value that indicates whether a pull request has had its
--   rules set aside (TRUE) or whether all approval rules still apply
--   (FALSE).
[$sel:overridden:GetPullRequestOverrideStateResponse'] :: GetPullRequestOverrideStateResponse -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the user or identity that overrode
--   the rules and their requirements for the pull request.
[$sel:overrider:GetPullRequestOverrideStateResponse'] :: GetPullRequestOverrideStateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPullRequestOverrideStateResponse'] :: GetPullRequestOverrideStateResponse -> Int

-- | Create a value of <a>GetPullRequestOverrideStateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overridden:GetPullRequestOverrideStateResponse'</a>,
--   <a>getPullRequestOverrideStateResponse_overridden</a> - A Boolean
--   value that indicates whether a pull request has had its rules set
--   aside (TRUE) or whether all approval rules still apply (FALSE).
--   
--   <a>$sel:overrider:GetPullRequestOverrideStateResponse'</a>,
--   <a>getPullRequestOverrideStateResponse_overrider</a> - The Amazon
--   Resource Name (ARN) of the user or identity that overrode the rules
--   and their requirements for the pull request.
--   
--   <a>$sel:httpStatus:GetPullRequestOverrideStateResponse'</a>,
--   <a>getPullRequestOverrideStateResponse_httpStatus</a> - The response's
--   http status code.
newGetPullRequestOverrideStateResponse :: Int -> GetPullRequestOverrideStateResponse

-- | A Boolean value that indicates whether a pull request has had its
--   rules set aside (TRUE) or whether all approval rules still apply
--   (FALSE).
getPullRequestOverrideStateResponse_overridden :: Lens' GetPullRequestOverrideStateResponse (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the user or identity that overrode
--   the rules and their requirements for the pull request.
getPullRequestOverrideStateResponse_overrider :: Lens' GetPullRequestOverrideStateResponse (Maybe Text)

-- | The response's http status code.
getPullRequestOverrideStateResponse_httpStatus :: Lens' GetPullRequestOverrideStateResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance GHC.Show.Show Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance GHC.Read.Read Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance GHC.Classes.Eq Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance GHC.Generics.Generic Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideStateResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideStateResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideStateResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideStateResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideStateResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetPullRequestOverrideState.GetPullRequestOverrideState


-- | Gets information about the approval states for a specified pull
--   request. Approval states only apply to pull requests that have one or
--   more approval rules applied to them.
module Amazonka.CodeCommit.GetPullRequestApprovalStates

-- | <i>See:</i> <a>newGetPullRequestApprovalStates</a> smart constructor.
data GetPullRequestApprovalStates
GetPullRequestApprovalStates' :: Text -> Text -> GetPullRequestApprovalStates

-- | The system-generated ID for the pull request.
[$sel:pullRequestId:GetPullRequestApprovalStates'] :: GetPullRequestApprovalStates -> Text

-- | The system-generated ID for the pull request revision.
[$sel:revisionId:GetPullRequestApprovalStates'] :: GetPullRequestApprovalStates -> Text

-- | Create a value of <a>GetPullRequestApprovalStates</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:GetPullRequestApprovalStates'</a>,
--   <a>getPullRequestApprovalStates_pullRequestId</a> - The
--   system-generated ID for the pull request.
--   
--   <a>$sel:revisionId:GetPullRequestApprovalStates'</a>,
--   <a>getPullRequestApprovalStates_revisionId</a> - The system-generated
--   ID for the pull request revision.
newGetPullRequestApprovalStates :: Text -> Text -> GetPullRequestApprovalStates

-- | The system-generated ID for the pull request.
getPullRequestApprovalStates_pullRequestId :: Lens' GetPullRequestApprovalStates Text

-- | The system-generated ID for the pull request revision.
getPullRequestApprovalStates_revisionId :: Lens' GetPullRequestApprovalStates Text

-- | <i>See:</i> <a>newGetPullRequestApprovalStatesResponse</a> smart
--   constructor.
data GetPullRequestApprovalStatesResponse
GetPullRequestApprovalStatesResponse' :: Maybe [Approval] -> Int -> GetPullRequestApprovalStatesResponse

-- | Information about users who have approved the pull request.
[$sel:approvals:GetPullRequestApprovalStatesResponse'] :: GetPullRequestApprovalStatesResponse -> Maybe [Approval]

-- | The response's http status code.
[$sel:httpStatus:GetPullRequestApprovalStatesResponse'] :: GetPullRequestApprovalStatesResponse -> Int

-- | Create a value of <a>GetPullRequestApprovalStatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvals:GetPullRequestApprovalStatesResponse'</a>,
--   <a>getPullRequestApprovalStatesResponse_approvals</a> - Information
--   about users who have approved the pull request.
--   
--   <a>$sel:httpStatus:GetPullRequestApprovalStatesResponse'</a>,
--   <a>getPullRequestApprovalStatesResponse_httpStatus</a> - The
--   response's http status code.
newGetPullRequestApprovalStatesResponse :: Int -> GetPullRequestApprovalStatesResponse

-- | Information about users who have approved the pull request.
getPullRequestApprovalStatesResponse_approvals :: Lens' GetPullRequestApprovalStatesResponse (Maybe [Approval])

-- | The response's http status code.
getPullRequestApprovalStatesResponse_httpStatus :: Lens' GetPullRequestApprovalStatesResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance GHC.Show.Show Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance GHC.Read.Read Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance GHC.Classes.Eq Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance GHC.Generics.Generic Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStatesResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStatesResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStatesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStatesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStatesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetPullRequestApprovalStates.GetPullRequestApprovalStates


-- | Gets information about a pull request in a specified repository.
module Amazonka.CodeCommit.GetPullRequest

-- | <i>See:</i> <a>newGetPullRequest</a> smart constructor.
data GetPullRequest
GetPullRequest' :: Text -> GetPullRequest

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:GetPullRequest'] :: GetPullRequest -> Text

-- | Create a value of <a>GetPullRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:GetPullRequest'</a>,
--   <a>getPullRequest_pullRequestId</a> - The system-generated ID of the
--   pull request. To get this ID, use ListPullRequests.
newGetPullRequest :: Text -> GetPullRequest

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
getPullRequest_pullRequestId :: Lens' GetPullRequest Text

-- | <i>See:</i> <a>newGetPullRequestResponse</a> smart constructor.
data GetPullRequestResponse
GetPullRequestResponse' :: Int -> PullRequest -> GetPullRequestResponse

-- | The response's http status code.
[$sel:httpStatus:GetPullRequestResponse'] :: GetPullRequestResponse -> Int

-- | Information about the specified pull request.
[$sel:pullRequest:GetPullRequestResponse'] :: GetPullRequestResponse -> PullRequest

-- | Create a value of <a>GetPullRequestResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetPullRequestResponse'</a>,
--   <a>getPullRequestResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:pullRequest:GetPullRequestResponse'</a>,
--   <a>getPullRequestResponse_pullRequest</a> - Information about the
--   specified pull request.
newGetPullRequestResponse :: Int -> PullRequest -> GetPullRequestResponse

-- | The response's http status code.
getPullRequestResponse_httpStatus :: Lens' GetPullRequestResponse Int

-- | Information about the specified pull request.
getPullRequestResponse_pullRequest :: Lens' GetPullRequestResponse PullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance GHC.Show.Show Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance GHC.Read.Read Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance GHC.Classes.Eq Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.GetPullRequest.GetPullRequestResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetPullRequest.GetPullRequestResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetPullRequest.GetPullRequestResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetPullRequest.GetPullRequestResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetPullRequest.GetPullRequestResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetPullRequest.GetPullRequest
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetPullRequest.GetPullRequest


-- | Returns information about the merge options available for merging two
--   specified branches. For details about why a merge option is not
--   available, use GetMergeConflicts or DescribeMergeConflicts.
module Amazonka.CodeCommit.GetMergeOptions

-- | <i>See:</i> <a>newGetMergeOptions</a> smart constructor.
data GetMergeOptions
GetMergeOptions' :: Maybe ConflictDetailLevelTypeEnum -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> GetMergeOptions

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:GetMergeOptions'] :: GetMergeOptions -> Maybe ConflictDetailLevelTypeEnum

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:GetMergeOptions'] :: GetMergeOptions -> Maybe ConflictResolutionStrategyTypeEnum

-- | The name of the repository that contains the commits about which you
--   want to get merge options.
[$sel:repositoryName:GetMergeOptions'] :: GetMergeOptions -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:GetMergeOptions'] :: GetMergeOptions -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:GetMergeOptions'] :: GetMergeOptions -> Text

-- | Create a value of <a>GetMergeOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conflictDetailLevel:GetMergeOptions'</a>,
--   <a>getMergeOptions_conflictDetailLevel</a> - The level of conflict
--   detail to use. If unspecified, the default FILE_LEVEL is used, which
--   returns a not-mergeable result if the same file has differences in
--   both branches. If LINE_LEVEL is specified, a conflict is considered
--   not mergeable if the same file in both branches has differences on the
--   same line.
--   
--   <a>$sel:conflictResolutionStrategy:GetMergeOptions'</a>,
--   <a>getMergeOptions_conflictResolutionStrategy</a> - Specifies which
--   branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:repositoryName:GetMergeOptions'</a>,
--   <a>getMergeOptions_repositoryName</a> - The name of the repository
--   that contains the commits about which you want to get merge options.
--   
--   <a>$sel:sourceCommitSpecifier:GetMergeOptions'</a>,
--   <a>getMergeOptions_sourceCommitSpecifier</a> - The branch, tag, HEAD,
--   or other fully qualified reference used to identify a commit (for
--   example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:GetMergeOptions'</a>,
--   <a>getMergeOptions_destinationCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
newGetMergeOptions :: Text -> Text -> Text -> GetMergeOptions

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
getMergeOptions_conflictDetailLevel :: Lens' GetMergeOptions (Maybe ConflictDetailLevelTypeEnum)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
getMergeOptions_conflictResolutionStrategy :: Lens' GetMergeOptions (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository that contains the commits about which you
--   want to get merge options.
getMergeOptions_repositoryName :: Lens' GetMergeOptions Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeOptions_sourceCommitSpecifier :: Lens' GetMergeOptions Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeOptions_destinationCommitSpecifier :: Lens' GetMergeOptions Text

-- | <i>See:</i> <a>newGetMergeOptionsResponse</a> smart constructor.
data GetMergeOptionsResponse
GetMergeOptionsResponse' :: Int -> [MergeOptionTypeEnum] -> Text -> Text -> Text -> GetMergeOptionsResponse

-- | The response's http status code.
[$sel:httpStatus:GetMergeOptionsResponse'] :: GetMergeOptionsResponse -> Int

-- | The merge option or strategy used to merge the code.
[$sel:mergeOptions:GetMergeOptionsResponse'] :: GetMergeOptionsResponse -> [MergeOptionTypeEnum]

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
[$sel:sourceCommitId:GetMergeOptionsResponse'] :: GetMergeOptionsResponse -> Text

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
[$sel:destinationCommitId:GetMergeOptionsResponse'] :: GetMergeOptionsResponse -> Text

-- | The commit ID of the merge base.
[$sel:baseCommitId:GetMergeOptionsResponse'] :: GetMergeOptionsResponse -> Text

-- | Create a value of <a>GetMergeOptionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mergeOptions:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_mergeOptions</a> - The merge option or
--   strategy used to merge the code.
--   
--   <a>$sel:sourceCommitId:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_sourceCommitId</a> - The commit ID of the
--   source commit specifier that was used in the merge evaluation.
--   
--   <a>$sel:destinationCommitId:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_destinationCommitId</a> - The commit ID of
--   the destination commit specifier that was used in the merge
--   evaluation.
--   
--   <a>$sel:baseCommitId:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_baseCommitId</a> - The commit ID of the
--   merge base.
newGetMergeOptionsResponse :: Int -> Text -> Text -> Text -> GetMergeOptionsResponse

-- | The response's http status code.
getMergeOptionsResponse_httpStatus :: Lens' GetMergeOptionsResponse Int

-- | The merge option or strategy used to merge the code.
getMergeOptionsResponse_mergeOptions :: Lens' GetMergeOptionsResponse [MergeOptionTypeEnum]

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
getMergeOptionsResponse_sourceCommitId :: Lens' GetMergeOptionsResponse Text

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
getMergeOptionsResponse_destinationCommitId :: Lens' GetMergeOptionsResponse Text

-- | The commit ID of the merge base.
getMergeOptionsResponse_baseCommitId :: Lens' GetMergeOptionsResponse Text
instance GHC.Generics.Generic Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance GHC.Show.Show Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance GHC.Read.Read Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance GHC.Classes.Eq Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance GHC.Generics.Generic Amazonka.CodeCommit.GetMergeOptions.GetMergeOptionsResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetMergeOptions.GetMergeOptionsResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetMergeOptions.GetMergeOptionsResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetMergeOptions.GetMergeOptionsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetMergeOptions.GetMergeOptionsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetMergeOptions.GetMergeOptions


-- | Returns information about merge conflicts between the before and after
--   commit IDs for a pull request in a repository.
module Amazonka.CodeCommit.GetMergeConflicts

-- | <i>See:</i> <a>newGetMergeConflicts</a> smart constructor.
data GetMergeConflicts
GetMergeConflicts' :: Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe Int -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> MergeOptionTypeEnum -> GetMergeConflicts

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:GetMergeConflicts'] :: GetMergeConflicts -> Maybe ConflictDetailLevelTypeEnum

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:GetMergeConflicts'] :: GetMergeConflicts -> Maybe Text

-- | The maximum number of files to include in the output.
[$sel:maxConflictFiles:GetMergeConflicts'] :: GetMergeConflicts -> Maybe Int

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:GetMergeConflicts'] :: GetMergeConflicts -> Maybe ConflictResolutionStrategyTypeEnum

-- | The name of the repository where the pull request was created.
[$sel:repositoryName:GetMergeConflicts'] :: GetMergeConflicts -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:GetMergeConflicts'] :: GetMergeConflicts -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:GetMergeConflicts'] :: GetMergeConflicts -> Text

-- | The merge option or strategy you want to use to merge the code.
[$sel:mergeOption:GetMergeConflicts'] :: GetMergeConflicts -> MergeOptionTypeEnum

-- | Create a value of <a>GetMergeConflicts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conflictDetailLevel:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_conflictDetailLevel</a> - The level of conflict
--   detail to use. If unspecified, the default FILE_LEVEL is used, which
--   returns a not-mergeable result if the same file has differences in
--   both branches. If LINE_LEVEL is specified, a conflict is considered
--   not mergeable if the same file in both branches has differences on the
--   same line.
--   
--   <a>$sel:nextToken:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_nextToken</a> - An enumeration token that, when
--   provided in a request, returns the next batch of the results.
--   
--   <a>$sel:maxConflictFiles:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_maxConflictFiles</a> - The maximum number of
--   files to include in the output.
--   
--   <a>$sel:conflictResolutionStrategy:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_conflictResolutionStrategy</a> - Specifies which
--   branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:repositoryName:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_repositoryName</a> - The name of the repository
--   where the pull request was created.
--   
--   <a>$sel:destinationCommitSpecifier:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_destinationCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
--   
--   <a>$sel:sourceCommitSpecifier:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_sourceCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
--   
--   <a>$sel:mergeOption:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_mergeOption</a> - The merge option or strategy
--   you want to use to merge the code.
newGetMergeConflicts :: Text -> Text -> Text -> MergeOptionTypeEnum -> GetMergeConflicts

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
getMergeConflicts_conflictDetailLevel :: Lens' GetMergeConflicts (Maybe ConflictDetailLevelTypeEnum)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
getMergeConflicts_nextToken :: Lens' GetMergeConflicts (Maybe Text)

-- | The maximum number of files to include in the output.
getMergeConflicts_maxConflictFiles :: Lens' GetMergeConflicts (Maybe Int)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
getMergeConflicts_conflictResolutionStrategy :: Lens' GetMergeConflicts (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository where the pull request was created.
getMergeConflicts_repositoryName :: Lens' GetMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeConflicts_destinationCommitSpecifier :: Lens' GetMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeConflicts_sourceCommitSpecifier :: Lens' GetMergeConflicts Text

-- | The merge option or strategy you want to use to merge the code.
getMergeConflicts_mergeOption :: Lens' GetMergeConflicts MergeOptionTypeEnum

-- | <i>See:</i> <a>newGetMergeConflictsResponse</a> smart constructor.
data GetMergeConflictsResponse
GetMergeConflictsResponse' :: Maybe Text -> Maybe Text -> Int -> Bool -> Text -> Text -> [ConflictMetadata] -> GetMergeConflictsResponse

-- | The commit ID of the merge base.
[$sel:baseCommitId:GetMergeConflictsResponse'] :: GetMergeConflictsResponse -> Maybe Text

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
[$sel:nextToken:GetMergeConflictsResponse'] :: GetMergeConflictsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMergeConflictsResponse'] :: GetMergeConflictsResponse -> Int

-- | A Boolean value that indicates whether the code is mergeable by the
--   specified merge option.
[$sel:mergeable:GetMergeConflictsResponse'] :: GetMergeConflictsResponse -> Bool

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
[$sel:destinationCommitId:GetMergeConflictsResponse'] :: GetMergeConflictsResponse -> Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
[$sel:sourceCommitId:GetMergeConflictsResponse'] :: GetMergeConflictsResponse -> Text

-- | A list of metadata for any conflicting files. If the specified merge
--   strategy is FAST_FORWARD_MERGE, this list is always empty.
[$sel:conflictMetadataList:GetMergeConflictsResponse'] :: GetMergeConflictsResponse -> [ConflictMetadata]

-- | Create a value of <a>GetMergeConflictsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseCommitId:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_baseCommitId</a> - The commit ID of the
--   merge base.
--   
--   <a>$sel:nextToken:GetMergeConflicts'</a>,
--   <a>getMergeConflictsResponse_nextToken</a> - An enumeration token that
--   can be used in a request to return the next batch of the results.
--   
--   <a>$sel:httpStatus:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:mergeable:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_mergeable</a> - A Boolean value that
--   indicates whether the code is mergeable by the specified merge option.
--   
--   <a>$sel:destinationCommitId:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_destinationCommitId</a> - The commit ID
--   of the destination commit specifier that was used in the merge
--   evaluation.
--   
--   <a>$sel:sourceCommitId:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_sourceCommitId</a> - The commit ID of the
--   source commit specifier that was used in the merge evaluation.
--   
--   <a>$sel:conflictMetadataList:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_conflictMetadataList</a> - A list of
--   metadata for any conflicting files. If the specified merge strategy is
--   FAST_FORWARD_MERGE, this list is always empty.
newGetMergeConflictsResponse :: Int -> Bool -> Text -> Text -> GetMergeConflictsResponse

-- | The commit ID of the merge base.
getMergeConflictsResponse_baseCommitId :: Lens' GetMergeConflictsResponse (Maybe Text)

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getMergeConflictsResponse_nextToken :: Lens' GetMergeConflictsResponse (Maybe Text)

-- | The response's http status code.
getMergeConflictsResponse_httpStatus :: Lens' GetMergeConflictsResponse Int

-- | A Boolean value that indicates whether the code is mergeable by the
--   specified merge option.
getMergeConflictsResponse_mergeable :: Lens' GetMergeConflictsResponse Bool

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
getMergeConflictsResponse_destinationCommitId :: Lens' GetMergeConflictsResponse Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
getMergeConflictsResponse_sourceCommitId :: Lens' GetMergeConflictsResponse Text

-- | A list of metadata for any conflicting files. If the specified merge
--   strategy is FAST_FORWARD_MERGE, this list is always empty.
getMergeConflictsResponse_conflictMetadataList :: Lens' GetMergeConflictsResponse [ConflictMetadata]
instance GHC.Generics.Generic Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance GHC.Show.Show Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance GHC.Read.Read Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance GHC.Classes.Eq Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance GHC.Generics.Generic Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflictsResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflictsResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflictsResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflictsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflictsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetMergeConflicts.GetMergeConflicts


-- | Returns information about a specified merge commit.
module Amazonka.CodeCommit.GetMergeCommit

-- | <i>See:</i> <a>newGetMergeCommit</a> smart constructor.
data GetMergeCommit
GetMergeCommit' :: Maybe ConflictDetailLevelTypeEnum -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> GetMergeCommit

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:GetMergeCommit'] :: GetMergeCommit -> Maybe ConflictDetailLevelTypeEnum

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:GetMergeCommit'] :: GetMergeCommit -> Maybe ConflictResolutionStrategyTypeEnum

-- | The name of the repository that contains the merge commit about which
--   you want to get information.
[$sel:repositoryName:GetMergeCommit'] :: GetMergeCommit -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:GetMergeCommit'] :: GetMergeCommit -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:GetMergeCommit'] :: GetMergeCommit -> Text

-- | Create a value of <a>GetMergeCommit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conflictDetailLevel:GetMergeCommit'</a>,
--   <a>getMergeCommit_conflictDetailLevel</a> - The level of conflict
--   detail to use. If unspecified, the default FILE_LEVEL is used, which
--   returns a not-mergeable result if the same file has differences in
--   both branches. If LINE_LEVEL is specified, a conflict is considered
--   not mergeable if the same file in both branches has differences on the
--   same line.
--   
--   <a>$sel:conflictResolutionStrategy:GetMergeCommit'</a>,
--   <a>getMergeCommit_conflictResolutionStrategy</a> - Specifies which
--   branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:repositoryName:GetMergeCommit'</a>,
--   <a>getMergeCommit_repositoryName</a> - The name of the repository that
--   contains the merge commit about which you want to get information.
--   
--   <a>$sel:sourceCommitSpecifier:GetMergeCommit'</a>,
--   <a>getMergeCommit_sourceCommitSpecifier</a> - The branch, tag, HEAD,
--   or other fully qualified reference used to identify a commit (for
--   example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:GetMergeCommit'</a>,
--   <a>getMergeCommit_destinationCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
newGetMergeCommit :: Text -> Text -> Text -> GetMergeCommit

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
getMergeCommit_conflictDetailLevel :: Lens' GetMergeCommit (Maybe ConflictDetailLevelTypeEnum)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
getMergeCommit_conflictResolutionStrategy :: Lens' GetMergeCommit (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository that contains the merge commit about which
--   you want to get information.
getMergeCommit_repositoryName :: Lens' GetMergeCommit Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeCommit_sourceCommitSpecifier :: Lens' GetMergeCommit Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeCommit_destinationCommitSpecifier :: Lens' GetMergeCommit Text

-- | <i>See:</i> <a>newGetMergeCommitResponse</a> smart constructor.
data GetMergeCommitResponse
GetMergeCommitResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetMergeCommitResponse

-- | The commit ID for the merge commit created when the source branch was
--   merged into the destination branch. If the fast-forward merge strategy
--   was used, there is no merge commit.
[$sel:mergedCommitId:GetMergeCommitResponse'] :: GetMergeCommitResponse -> Maybe Text

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
[$sel:destinationCommitId:GetMergeCommitResponse'] :: GetMergeCommitResponse -> Maybe Text

-- | The commit ID of the merge base.
[$sel:baseCommitId:GetMergeCommitResponse'] :: GetMergeCommitResponse -> Maybe Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
[$sel:sourceCommitId:GetMergeCommitResponse'] :: GetMergeCommitResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetMergeCommitResponse'] :: GetMergeCommitResponse -> Int

-- | Create a value of <a>GetMergeCommitResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mergedCommitId:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_mergedCommitId</a> - The commit ID for the
--   merge commit created when the source branch was merged into the
--   destination branch. If the fast-forward merge strategy was used, there
--   is no merge commit.
--   
--   <a>$sel:destinationCommitId:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_destinationCommitId</a> - The commit ID of
--   the destination commit specifier that was used in the merge
--   evaluation.
--   
--   <a>$sel:baseCommitId:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_baseCommitId</a> - The commit ID of the
--   merge base.
--   
--   <a>$sel:sourceCommitId:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_sourceCommitId</a> - The commit ID of the
--   source commit specifier that was used in the merge evaluation.
--   
--   <a>$sel:httpStatus:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_httpStatus</a> - The response's http status
--   code.
newGetMergeCommitResponse :: Int -> GetMergeCommitResponse

-- | The commit ID for the merge commit created when the source branch was
--   merged into the destination branch. If the fast-forward merge strategy
--   was used, there is no merge commit.
getMergeCommitResponse_mergedCommitId :: Lens' GetMergeCommitResponse (Maybe Text)

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
getMergeCommitResponse_destinationCommitId :: Lens' GetMergeCommitResponse (Maybe Text)

-- | The commit ID of the merge base.
getMergeCommitResponse_baseCommitId :: Lens' GetMergeCommitResponse (Maybe Text)

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
getMergeCommitResponse_sourceCommitId :: Lens' GetMergeCommitResponse (Maybe Text)

-- | The response's http status code.
getMergeCommitResponse_httpStatus :: Lens' GetMergeCommitResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance GHC.Show.Show Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance GHC.Read.Read Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance GHC.Classes.Eq Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance GHC.Generics.Generic Amazonka.CodeCommit.GetMergeCommit.GetMergeCommitResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetMergeCommit.GetMergeCommitResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetMergeCommit.GetMergeCommitResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetMergeCommit.GetMergeCommitResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetMergeCommit.GetMergeCommitResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetMergeCommit.GetMergeCommit


-- | Returns the contents of a specified folder in a repository.
module Amazonka.CodeCommit.GetFolder

-- | <i>See:</i> <a>newGetFolder</a> smart constructor.
data GetFolder
GetFolder' :: Maybe Text -> Text -> Text -> GetFolder

-- | A fully qualified reference used to identify a commit that contains
--   the version of the folder's content to return. A fully qualified
--   reference can be a commit ID, branch name, tag, or reference such as
--   HEAD. If no specifier is provided, the folder content is returned as
--   it exists in the HEAD commit.
[$sel:commitSpecifier:GetFolder'] :: GetFolder -> Maybe Text

-- | The name of the repository.
[$sel:repositoryName:GetFolder'] :: GetFolder -> Text

-- | The fully qualified path to the folder whose contents are returned,
--   including the folder name. For example, /examples is a fully-qualified
--   path to a folder named examples that was created off of the root
--   directory (/) of a repository.
[$sel:folderPath:GetFolder'] :: GetFolder -> Text

-- | Create a value of <a>GetFolder</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitSpecifier:GetFolder'</a>,
--   <a>getFolder_commitSpecifier</a> - A fully qualified reference used to
--   identify a commit that contains the version of the folder's content to
--   return. A fully qualified reference can be a commit ID, branch name,
--   tag, or reference such as HEAD. If no specifier is provided, the
--   folder content is returned as it exists in the HEAD commit.
--   
--   <a>$sel:repositoryName:GetFolder'</a>, <a>getFolder_repositoryName</a>
--   - The name of the repository.
--   
--   <a>$sel:folderPath:GetFolder'</a>, <a>getFolder_folderPath</a> - The
--   fully qualified path to the folder whose contents are returned,
--   including the folder name. For example, /examples is a fully-qualified
--   path to a folder named examples that was created off of the root
--   directory (/) of a repository.
newGetFolder :: Text -> Text -> GetFolder

-- | A fully qualified reference used to identify a commit that contains
--   the version of the folder's content to return. A fully qualified
--   reference can be a commit ID, branch name, tag, or reference such as
--   HEAD. If no specifier is provided, the folder content is returned as
--   it exists in the HEAD commit.
getFolder_commitSpecifier :: Lens' GetFolder (Maybe Text)

-- | The name of the repository.
getFolder_repositoryName :: Lens' GetFolder Text

-- | The fully qualified path to the folder whose contents are returned,
--   including the folder name. For example, /examples is a fully-qualified
--   path to a folder named examples that was created off of the root
--   directory (/) of a repository.
getFolder_folderPath :: Lens' GetFolder Text

-- | <i>See:</i> <a>newGetFolderResponse</a> smart constructor.
data GetFolderResponse
GetFolderResponse' :: Maybe [SubModule] -> Maybe Text -> Maybe [Folder] -> Maybe [SymbolicLink] -> Maybe [File] -> Int -> Text -> Text -> GetFolderResponse

-- | The list of submodules in the specified folder, if any.
[$sel:subModules:GetFolderResponse'] :: GetFolderResponse -> Maybe [SubModule]

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
[$sel:treeId:GetFolderResponse'] :: GetFolderResponse -> Maybe Text

-- | The list of folders that exist under the specified folder, if any.
[$sel:subFolders:GetFolderResponse'] :: GetFolderResponse -> Maybe [Folder]

-- | The list of symbolic links to other files and folders in the specified
--   folder, if any.
[$sel:symbolicLinks:GetFolderResponse'] :: GetFolderResponse -> Maybe [SymbolicLink]

-- | The list of files in the specified folder, if any.
[$sel:files:GetFolderResponse'] :: GetFolderResponse -> Maybe [File]

-- | The response's http status code.
[$sel:httpStatus:GetFolderResponse'] :: GetFolderResponse -> Int

-- | The full commit ID used as a reference for the returned version of the
--   folder content.
[$sel:commitId:GetFolderResponse'] :: GetFolderResponse -> Text

-- | The fully qualified path of the folder whose contents are returned.
[$sel:folderPath:GetFolderResponse'] :: GetFolderResponse -> Text

-- | Create a value of <a>GetFolderResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subModules:GetFolderResponse'</a>,
--   <a>getFolderResponse_subModules</a> - The list of submodules in the
--   specified folder, if any.
--   
--   <a>$sel:treeId:GetFolderResponse'</a>, <a>getFolderResponse_treeId</a>
--   - The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
--   
--   <a>$sel:subFolders:GetFolderResponse'</a>,
--   <a>getFolderResponse_subFolders</a> - The list of folders that exist
--   under the specified folder, if any.
--   
--   <a>$sel:symbolicLinks:GetFolderResponse'</a>,
--   <a>getFolderResponse_symbolicLinks</a> - The list of symbolic links to
--   other files and folders in the specified folder, if any.
--   
--   <a>$sel:files:GetFolderResponse'</a>, <a>getFolderResponse_files</a> -
--   The list of files in the specified folder, if any.
--   
--   <a>$sel:httpStatus:GetFolderResponse'</a>,
--   <a>getFolderResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:commitId:GetFolderResponse'</a>,
--   <a>getFolderResponse_commitId</a> - The full commit ID used as a
--   reference for the returned version of the folder content.
--   
--   <a>$sel:folderPath:GetFolder'</a>, <a>getFolderResponse_folderPath</a>
--   - The fully qualified path of the folder whose contents are returned.
newGetFolderResponse :: Int -> Text -> Text -> GetFolderResponse

-- | The list of submodules in the specified folder, if any.
getFolderResponse_subModules :: Lens' GetFolderResponse (Maybe [SubModule])

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
getFolderResponse_treeId :: Lens' GetFolderResponse (Maybe Text)

-- | The list of folders that exist under the specified folder, if any.
getFolderResponse_subFolders :: Lens' GetFolderResponse (Maybe [Folder])

-- | The list of symbolic links to other files and folders in the specified
--   folder, if any.
getFolderResponse_symbolicLinks :: Lens' GetFolderResponse (Maybe [SymbolicLink])

-- | The list of files in the specified folder, if any.
getFolderResponse_files :: Lens' GetFolderResponse (Maybe [File])

-- | The response's http status code.
getFolderResponse_httpStatus :: Lens' GetFolderResponse Int

-- | The full commit ID used as a reference for the returned version of the
--   folder content.
getFolderResponse_commitId :: Lens' GetFolderResponse Text

-- | The fully qualified path of the folder whose contents are returned.
getFolderResponse_folderPath :: Lens' GetFolderResponse Text
instance GHC.Generics.Generic Amazonka.CodeCommit.GetFolder.GetFolder
instance GHC.Show.Show Amazonka.CodeCommit.GetFolder.GetFolder
instance GHC.Read.Read Amazonka.CodeCommit.GetFolder.GetFolder
instance GHC.Classes.Eq Amazonka.CodeCommit.GetFolder.GetFolder
instance GHC.Generics.Generic Amazonka.CodeCommit.GetFolder.GetFolderResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetFolder.GetFolderResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetFolder.GetFolderResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetFolder.GetFolderResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetFolder.GetFolder
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetFolder.GetFolderResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetFolder.GetFolder
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetFolder.GetFolder
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetFolder.GetFolder
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetFolder.GetFolder
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetFolder.GetFolder
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetFolder.GetFolder


-- | Returns the base-64 encoded contents of a specified file and its
--   metadata.
module Amazonka.CodeCommit.GetFile

-- | <i>See:</i> <a>newGetFile</a> smart constructor.
data GetFile
GetFile' :: Maybe Text -> Text -> Text -> GetFile

-- | The fully quaified reference that identifies the commit that contains
--   the file. For example, you can specify a full commit ID, a tag, a
--   branch name, or a reference such as refs/heads/master. If none is
--   provided, the head commit is used.
[$sel:commitSpecifier:GetFile'] :: GetFile -> Maybe Text

-- | The name of the repository that contains the file.
[$sel:repositoryName:GetFile'] :: GetFile -> Text

-- | The fully qualified path to the file, including the full name and
--   extension of the file. For example, /examples/file.md is the fully
--   qualified path to a file named file.md in a folder named examples.
[$sel:filePath:GetFile'] :: GetFile -> Text

-- | Create a value of <a>GetFile</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitSpecifier:GetFile'</a>, <a>getFile_commitSpecifier</a> -
--   The fully quaified reference that identifies the commit that contains
--   the file. For example, you can specify a full commit ID, a tag, a
--   branch name, or a reference such as refs/heads/master. If none is
--   provided, the head commit is used.
--   
--   <a>$sel:repositoryName:GetFile'</a>, <a>getFile_repositoryName</a> -
--   The name of the repository that contains the file.
--   
--   <a>$sel:filePath:GetFile'</a>, <a>getFile_filePath</a> - The fully
--   qualified path to the file, including the full name and extension of
--   the file. For example, /examples/file.md is the fully qualified path
--   to a file named file.md in a folder named examples.
newGetFile :: Text -> Text -> GetFile

-- | The fully quaified reference that identifies the commit that contains
--   the file. For example, you can specify a full commit ID, a tag, a
--   branch name, or a reference such as refs/heads/master. If none is
--   provided, the head commit is used.
getFile_commitSpecifier :: Lens' GetFile (Maybe Text)

-- | The name of the repository that contains the file.
getFile_repositoryName :: Lens' GetFile Text

-- | The fully qualified path to the file, including the full name and
--   extension of the file. For example, /examples/file.md is the fully
--   qualified path to a file named file.md in a folder named examples.
getFile_filePath :: Lens' GetFile Text

-- | <i>See:</i> <a>newGetFileResponse</a> smart constructor.
data GetFileResponse
GetFileResponse' :: Int -> Text -> Text -> Text -> FileModeTypeEnum -> Integer -> Base64 -> GetFileResponse

-- | The response's http status code.
[$sel:httpStatus:GetFileResponse'] :: GetFileResponse -> Int

-- | The full commit ID of the commit that contains the content returned by
--   GetFile.
[$sel:commitId:GetFileResponse'] :: GetFileResponse -> Text

-- | The blob ID of the object that represents the file content.
[$sel:blobId:GetFileResponse'] :: GetFileResponse -> Text

-- | The fully qualified path to the specified file. Returns the name and
--   extension of the file.
[$sel:filePath:GetFileResponse'] :: GetFileResponse -> Text

-- | The extrapolated file mode permissions of the blob. Valid values
--   include strings such as EXECUTABLE and not numeric values.
--   
--   The file mode permissions returned by this API are not the standard
--   file mode permission values, such as 100644, but rather extrapolated
--   values. See the supported return values.
[$sel:fileMode:GetFileResponse'] :: GetFileResponse -> FileModeTypeEnum

-- | The size of the contents of the file, in bytes.
[$sel:fileSize:GetFileResponse'] :: GetFileResponse -> Integer

-- | The base-64 encoded binary data object that represents the content of
--   the file.
[$sel:fileContent:GetFileResponse'] :: GetFileResponse -> Base64

-- | Create a value of <a>GetFileResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetFileResponse'</a>,
--   <a>getFileResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:commitId:GetFileResponse'</a>, <a>getFileResponse_commitId</a>
--   - The full commit ID of the commit that contains the content returned
--   by GetFile.
--   
--   <a>$sel:blobId:GetFileResponse'</a>, <a>getFileResponse_blobId</a> -
--   The blob ID of the object that represents the file content.
--   
--   <a>$sel:filePath:GetFile'</a>, <a>getFileResponse_filePath</a> - The
--   fully qualified path to the specified file. Returns the name and
--   extension of the file.
--   
--   <a>$sel:fileMode:GetFileResponse'</a>, <a>getFileResponse_fileMode</a>
--   - The extrapolated file mode permissions of the blob. Valid values
--   include strings such as EXECUTABLE and not numeric values.
--   
--   The file mode permissions returned by this API are not the standard
--   file mode permission values, such as 100644, but rather extrapolated
--   values. See the supported return values.
--   
--   <a>$sel:fileSize:GetFileResponse'</a>, <a>getFileResponse_fileSize</a>
--   - The size of the contents of the file, in bytes.
--   
--   <a>$sel:fileContent:GetFileResponse'</a>,
--   <a>getFileResponse_fileContent</a> - The base-64 encoded binary data
--   object that represents the content of the file.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newGetFileResponse :: Int -> Text -> Text -> Text -> FileModeTypeEnum -> Integer -> ByteString -> GetFileResponse

-- | The response's http status code.
getFileResponse_httpStatus :: Lens' GetFileResponse Int

-- | The full commit ID of the commit that contains the content returned by
--   GetFile.
getFileResponse_commitId :: Lens' GetFileResponse Text

-- | The blob ID of the object that represents the file content.
getFileResponse_blobId :: Lens' GetFileResponse Text

-- | The fully qualified path to the specified file. Returns the name and
--   extension of the file.
getFileResponse_filePath :: Lens' GetFileResponse Text

-- | The extrapolated file mode permissions of the blob. Valid values
--   include strings such as EXECUTABLE and not numeric values.
--   
--   The file mode permissions returned by this API are not the standard
--   file mode permission values, such as 100644, but rather extrapolated
--   values. See the supported return values.
getFileResponse_fileMode :: Lens' GetFileResponse FileModeTypeEnum

-- | The size of the contents of the file, in bytes.
getFileResponse_fileSize :: Lens' GetFileResponse Integer

-- | The base-64 encoded binary data object that represents the content of
--   the file.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
getFileResponse_fileContent :: Lens' GetFileResponse ByteString
instance GHC.Generics.Generic Amazonka.CodeCommit.GetFile.GetFile
instance GHC.Show.Show Amazonka.CodeCommit.GetFile.GetFile
instance GHC.Read.Read Amazonka.CodeCommit.GetFile.GetFile
instance GHC.Classes.Eq Amazonka.CodeCommit.GetFile.GetFile
instance GHC.Generics.Generic Amazonka.CodeCommit.GetFile.GetFileResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetFile.GetFileResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetFile.GetFileResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetFile.GetFileResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetFile.GetFile
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetFile.GetFileResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetFile.GetFile
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetFile.GetFile
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetFile.GetFile
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetFile.GetFile
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetFile.GetFile
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetFile.GetFile


-- | Returns information about the differences in a valid commit specifier
--   (such as a branch, tag, HEAD, commit ID, or other fully qualified
--   reference). Results can be limited to a specified path.
--   
--   This operation returns paginated results.
module Amazonka.CodeCommit.GetDifferences

-- | <i>See:</i> <a>newGetDifferences</a> smart constructor.
data GetDifferences
GetDifferences' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Text -> Text -> GetDifferences

-- | The file path in which to check differences. Limits the results to
--   this path. Can also be used to specify the changed name of a directory
--   or folder, if it has changed. If not specified, differences are shown
--   for all paths.
[$sel:afterPath:GetDifferences'] :: GetDifferences -> Maybe Text

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:GetDifferences'] :: GetDifferences -> Maybe Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, the full commit ID). Optional. If not
--   specified, all changes before the <tt>afterCommitSpecifier</tt> value
--   are shown. If you do not use <tt>beforeCommitSpecifier</tt> in your
--   request, consider limiting the results with <tt>maxResults</tt>.
[$sel:beforeCommitSpecifier:GetDifferences'] :: GetDifferences -> Maybe Text

-- | The file path in which to check for differences. Limits the results to
--   this path. Can also be used to specify the previous name of a
--   directory or folder. If <tt>beforePath</tt> and <tt>afterPath</tt> are
--   not specified, differences are shown for all paths.
[$sel:beforePath:GetDifferences'] :: GetDifferences -> Maybe Text

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
[$sel:maxResults:GetDifferences'] :: GetDifferences -> Maybe Int

-- | The name of the repository where you want to get differences.
[$sel:repositoryName:GetDifferences'] :: GetDifferences -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit.
[$sel:afterCommitSpecifier:GetDifferences'] :: GetDifferences -> Text

-- | Create a value of <a>GetDifferences</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:afterPath:GetDifferences'</a>, <a>getDifferences_afterPath</a>
--   - The file path in which to check differences. Limits the results to
--   this path. Can also be used to specify the changed name of a directory
--   or folder, if it has changed. If not specified, differences are shown
--   for all paths.
--   
--   <a>$sel:nextToken:GetDifferences'</a>, <a>getDifferences_nextToken</a>
--   - An enumeration token that, when provided in a request, returns the
--   next batch of the results.
--   
--   <a>$sel:beforeCommitSpecifier:GetDifferences'</a>,
--   <a>getDifferences_beforeCommitSpecifier</a> - The branch, tag, HEAD,
--   or other fully qualified reference used to identify a commit (for
--   example, the full commit ID). Optional. If not specified, all changes
--   before the <tt>afterCommitSpecifier</tt> value are shown. If you do
--   not use <tt>beforeCommitSpecifier</tt> in your request, consider
--   limiting the results with <tt>maxResults</tt>.
--   
--   <a>$sel:beforePath:GetDifferences'</a>,
--   <a>getDifferences_beforePath</a> - The file path in which to check for
--   differences. Limits the results to this path. Can also be used to
--   specify the previous name of a directory or folder. If
--   <tt>beforePath</tt> and <tt>afterPath</tt> are not specified,
--   differences are shown for all paths.
--   
--   <a>$sel:maxResults:GetDifferences'</a>,
--   <a>getDifferences_maxResults</a> - A non-zero, non-negative integer
--   used to limit the number of returned results.
--   
--   <a>$sel:repositoryName:GetDifferences'</a>,
--   <a>getDifferences_repositoryName</a> - The name of the repository
--   where you want to get differences.
--   
--   <a>$sel:afterCommitSpecifier:GetDifferences'</a>,
--   <a>getDifferences_afterCommitSpecifier</a> - The branch, tag, HEAD, or
--   other fully qualified reference used to identify a commit.
newGetDifferences :: Text -> Text -> GetDifferences

-- | The file path in which to check differences. Limits the results to
--   this path. Can also be used to specify the changed name of a directory
--   or folder, if it has changed. If not specified, differences are shown
--   for all paths.
getDifferences_afterPath :: Lens' GetDifferences (Maybe Text)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
getDifferences_nextToken :: Lens' GetDifferences (Maybe Text)

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, the full commit ID). Optional. If not
--   specified, all changes before the <tt>afterCommitSpecifier</tt> value
--   are shown. If you do not use <tt>beforeCommitSpecifier</tt> in your
--   request, consider limiting the results with <tt>maxResults</tt>.
getDifferences_beforeCommitSpecifier :: Lens' GetDifferences (Maybe Text)

-- | The file path in which to check for differences. Limits the results to
--   this path. Can also be used to specify the previous name of a
--   directory or folder. If <tt>beforePath</tt> and <tt>afterPath</tt> are
--   not specified, differences are shown for all paths.
getDifferences_beforePath :: Lens' GetDifferences (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
getDifferences_maxResults :: Lens' GetDifferences (Maybe Int)

-- | The name of the repository where you want to get differences.
getDifferences_repositoryName :: Lens' GetDifferences Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit.
getDifferences_afterCommitSpecifier :: Lens' GetDifferences Text

-- | <i>See:</i> <a>newGetDifferencesResponse</a> smart constructor.
data GetDifferencesResponse
GetDifferencesResponse' :: Maybe Text -> Maybe [Difference] -> Int -> GetDifferencesResponse

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
[$sel:nextToken:GetDifferencesResponse'] :: GetDifferencesResponse -> Maybe Text

-- | A data type object that contains information about the differences,
--   including whether the difference is added, modified, or deleted (A, D,
--   M).
[$sel:differences:GetDifferencesResponse'] :: GetDifferencesResponse -> Maybe [Difference]

-- | The response's http status code.
[$sel:httpStatus:GetDifferencesResponse'] :: GetDifferencesResponse -> Int

-- | Create a value of <a>GetDifferencesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDifferences'</a>,
--   <a>getDifferencesResponse_nextToken</a> - An enumeration token that
--   can be used in a request to return the next batch of the results.
--   
--   <a>$sel:differences:GetDifferencesResponse'</a>,
--   <a>getDifferencesResponse_differences</a> - A data type object that
--   contains information about the differences, including whether the
--   difference is added, modified, or deleted (A, D, M).
--   
--   <a>$sel:httpStatus:GetDifferencesResponse'</a>,
--   <a>getDifferencesResponse_httpStatus</a> - The response's http status
--   code.
newGetDifferencesResponse :: Int -> GetDifferencesResponse

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getDifferencesResponse_nextToken :: Lens' GetDifferencesResponse (Maybe Text)

-- | A data type object that contains information about the differences,
--   including whether the difference is added, modified, or deleted (A, D,
--   M).
getDifferencesResponse_differences :: Lens' GetDifferencesResponse (Maybe [Difference])

-- | The response's http status code.
getDifferencesResponse_httpStatus :: Lens' GetDifferencesResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetDifferences.GetDifferences
instance GHC.Show.Show Amazonka.CodeCommit.GetDifferences.GetDifferences
instance GHC.Read.Read Amazonka.CodeCommit.GetDifferences.GetDifferences
instance GHC.Classes.Eq Amazonka.CodeCommit.GetDifferences.GetDifferences
instance GHC.Generics.Generic Amazonka.CodeCommit.GetDifferences.GetDifferencesResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetDifferences.GetDifferencesResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetDifferences.GetDifferencesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetDifferences.GetDifferencesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetDifferences.GetDifferences
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetDifferences.GetDifferencesResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeCommit.GetDifferences.GetDifferences
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetDifferences.GetDifferences
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetDifferences.GetDifferences
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetDifferences.GetDifferences
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetDifferences.GetDifferences
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetDifferences.GetDifferences
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetDifferences.GetDifferences


-- | Returns information about a commit, including commit message and
--   committer information.
module Amazonka.CodeCommit.GetCommit

-- | Represents the input of a get commit operation.
--   
--   <i>See:</i> <a>newGetCommit</a> smart constructor.
data GetCommit
GetCommit' :: Text -> Text -> GetCommit

-- | The name of the repository to which the commit was made.
[$sel:repositoryName:GetCommit'] :: GetCommit -> Text

-- | The commit ID. Commit IDs are the full SHA ID of the commit.
[$sel:commitId:GetCommit'] :: GetCommit -> Text

-- | Create a value of <a>GetCommit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:GetCommit'</a>, <a>getCommit_repositoryName</a>
--   - The name of the repository to which the commit was made.
--   
--   <a>$sel:commitId:GetCommit'</a>, <a>getCommit_commitId</a> - The
--   commit ID. Commit IDs are the full SHA ID of the commit.
newGetCommit :: Text -> Text -> GetCommit

-- | The name of the repository to which the commit was made.
getCommit_repositoryName :: Lens' GetCommit Text

-- | The commit ID. Commit IDs are the full SHA ID of the commit.
getCommit_commitId :: Lens' GetCommit Text

-- | Represents the output of a get commit operation.
--   
--   <i>See:</i> <a>newGetCommitResponse</a> smart constructor.
data GetCommitResponse
GetCommitResponse' :: Int -> Commit -> GetCommitResponse

-- | The response's http status code.
[$sel:httpStatus:GetCommitResponse'] :: GetCommitResponse -> Int

-- | A commit data type object that contains information about the
--   specified commit.
[$sel:commit:GetCommitResponse'] :: GetCommitResponse -> Commit

-- | Create a value of <a>GetCommitResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetCommitResponse'</a>,
--   <a>getCommitResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:commit:GetCommitResponse'</a>, <a>getCommitResponse_commit</a>
--   - A commit data type object that contains information about the
--   specified commit.
newGetCommitResponse :: Int -> Commit -> GetCommitResponse

-- | The response's http status code.
getCommitResponse_httpStatus :: Lens' GetCommitResponse Int

-- | A commit data type object that contains information about the
--   specified commit.
getCommitResponse_commit :: Lens' GetCommitResponse Commit
instance GHC.Generics.Generic Amazonka.CodeCommit.GetCommit.GetCommit
instance GHC.Show.Show Amazonka.CodeCommit.GetCommit.GetCommit
instance GHC.Read.Read Amazonka.CodeCommit.GetCommit.GetCommit
instance GHC.Classes.Eq Amazonka.CodeCommit.GetCommit.GetCommit
instance GHC.Generics.Generic Amazonka.CodeCommit.GetCommit.GetCommitResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetCommit.GetCommitResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetCommit.GetCommitResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetCommit.GetCommitResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetCommit.GetCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetCommit.GetCommitResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetCommit.GetCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetCommit.GetCommit
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetCommit.GetCommit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetCommit.GetCommit
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetCommit.GetCommit
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetCommit.GetCommit


-- | Returns comments made on a pull request.
--   
--   Reaction counts might include numbers from user identities who were
--   deleted after the reaction was made. For a count of reactions from
--   active identities, use GetCommentReactions.
--   
--   This operation returns paginated results.
module Amazonka.CodeCommit.GetCommentsForPullRequest

-- | <i>See:</i> <a>newGetCommentsForPullRequest</a> smart constructor.
data GetCommentsForPullRequest
GetCommentsForPullRequest' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Text -> GetCommentsForPullRequest

-- | The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the comment was made.
[$sel:afterCommitId:GetCommentsForPullRequest'] :: GetCommentsForPullRequest -> Maybe Text

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:GetCommentsForPullRequest'] :: GetCommentsForPullRequest -> Maybe Text

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was created.
[$sel:beforeCommitId:GetCommentsForPullRequest'] :: GetCommentsForPullRequest -> Maybe Text

-- | The name of the repository that contains the pull request.
[$sel:repositoryName:GetCommentsForPullRequest'] :: GetCommentsForPullRequest -> Maybe Text

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 comments. You can return up to 500
--   comments with a single request.
[$sel:maxResults:GetCommentsForPullRequest'] :: GetCommentsForPullRequest -> Maybe Int

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:GetCommentsForPullRequest'] :: GetCommentsForPullRequest -> Text

-- | Create a value of <a>GetCommentsForPullRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:afterCommitId:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_afterCommitId</a> - The full commit ID of
--   the commit in the source branch that was the tip of the branch at the
--   time the comment was made.
--   
--   <a>$sel:nextToken:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_nextToken</a> - An enumeration token
--   that, when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:beforeCommitId:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_beforeCommitId</a> - The full commit ID
--   of the commit in the destination branch that was the tip of the branch
--   at the time the pull request was created.
--   
--   <a>$sel:repositoryName:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_repositoryName</a> - The name of the
--   repository that contains the pull request.
--   
--   <a>$sel:maxResults:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_maxResults</a> - A non-zero, non-negative
--   integer used to limit the number of returned results. The default is
--   100 comments. You can return up to 500 comments with a single request.
--   
--   <a>$sel:pullRequestId:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
newGetCommentsForPullRequest :: Text -> GetCommentsForPullRequest

-- | The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the comment was made.
getCommentsForPullRequest_afterCommitId :: Lens' GetCommentsForPullRequest (Maybe Text)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
getCommentsForPullRequest_nextToken :: Lens' GetCommentsForPullRequest (Maybe Text)

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was created.
getCommentsForPullRequest_beforeCommitId :: Lens' GetCommentsForPullRequest (Maybe Text)

-- | The name of the repository that contains the pull request.
getCommentsForPullRequest_repositoryName :: Lens' GetCommentsForPullRequest (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 comments. You can return up to 500
--   comments with a single request.
getCommentsForPullRequest_maxResults :: Lens' GetCommentsForPullRequest (Maybe Int)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
getCommentsForPullRequest_pullRequestId :: Lens' GetCommentsForPullRequest Text

-- | <i>See:</i> <a>newGetCommentsForPullRequestResponse</a> smart
--   constructor.
data GetCommentsForPullRequestResponse
GetCommentsForPullRequestResponse' :: Maybe [CommentsForPullRequest] -> Maybe Text -> Int -> GetCommentsForPullRequestResponse

-- | An array of comment objects on the pull request.
[$sel:commentsForPullRequestData:GetCommentsForPullRequestResponse'] :: GetCommentsForPullRequestResponse -> Maybe [CommentsForPullRequest]

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
[$sel:nextToken:GetCommentsForPullRequestResponse'] :: GetCommentsForPullRequestResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCommentsForPullRequestResponse'] :: GetCommentsForPullRequestResponse -> Int

-- | Create a value of <a>GetCommentsForPullRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:commentsForPullRequestData:GetCommentsForPullRequestResponse'</a>,
--   <a>getCommentsForPullRequestResponse_commentsForPullRequestData</a> -
--   An array of comment objects on the pull request.
--   
--   <a>$sel:nextToken:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequestResponse_nextToken</a> - An enumeration
--   token that can be used in a request to return the next batch of the
--   results.
--   
--   <a>$sel:httpStatus:GetCommentsForPullRequestResponse'</a>,
--   <a>getCommentsForPullRequestResponse_httpStatus</a> - The response's
--   http status code.
newGetCommentsForPullRequestResponse :: Int -> GetCommentsForPullRequestResponse

-- | An array of comment objects on the pull request.
getCommentsForPullRequestResponse_commentsForPullRequestData :: Lens' GetCommentsForPullRequestResponse (Maybe [CommentsForPullRequest])

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getCommentsForPullRequestResponse_nextToken :: Lens' GetCommentsForPullRequestResponse (Maybe Text)

-- | The response's http status code.
getCommentsForPullRequestResponse_httpStatus :: Lens' GetCommentsForPullRequestResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance GHC.Show.Show Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance GHC.Read.Read Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance GHC.Classes.Eq Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequestResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequestResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequestResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequestResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequestResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetCommentsForPullRequest.GetCommentsForPullRequest


-- | Returns information about comments made on the comparison between two
--   commits.
--   
--   Reaction counts might include numbers from user identities who were
--   deleted after the reaction was made. For a count of reactions from
--   active identities, use GetCommentReactions.
--   
--   This operation returns paginated results.
module Amazonka.CodeCommit.GetCommentsForComparedCommit

-- | <i>See:</i> <a>newGetCommentsForComparedCommit</a> smart constructor.
data GetCommentsForComparedCommit
GetCommentsForComparedCommit' :: Maybe Text -> Maybe Text -> Maybe Int -> Text -> Text -> GetCommentsForComparedCommit

-- | An enumeration token that when provided in a request, returns the next
--   batch of the results.
[$sel:nextToken:GetCommentsForComparedCommit'] :: GetCommentsForComparedCommit -> Maybe Text

-- | To establish the directionality of the comparison, the full commit ID
--   of the before commit.
[$sel:beforeCommitId:GetCommentsForComparedCommit'] :: GetCommentsForComparedCommit -> Maybe Text

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 comments, but you can configure up to 500.
[$sel:maxResults:GetCommentsForComparedCommit'] :: GetCommentsForComparedCommit -> Maybe Int

-- | The name of the repository where you want to compare commits.
[$sel:repositoryName:GetCommentsForComparedCommit'] :: GetCommentsForComparedCommit -> Text

-- | To establish the directionality of the comparison, the full commit ID
--   of the after commit.
[$sel:afterCommitId:GetCommentsForComparedCommit'] :: GetCommentsForComparedCommit -> Text

-- | Create a value of <a>GetCommentsForComparedCommit</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_nextToken</a> - An enumeration token
--   that when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:beforeCommitId:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_beforeCommitId</a> - To establish the
--   directionality of the comparison, the full commit ID of the before
--   commit.
--   
--   <a>$sel:maxResults:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_maxResults</a> - A non-zero,
--   non-negative integer used to limit the number of returned results. The
--   default is 100 comments, but you can configure up to 500.
--   
--   <a>$sel:repositoryName:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_repositoryName</a> - The name of the
--   repository where you want to compare commits.
--   
--   <a>$sel:afterCommitId:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_afterCommitId</a> - To establish the
--   directionality of the comparison, the full commit ID of the after
--   commit.
newGetCommentsForComparedCommit :: Text -> Text -> GetCommentsForComparedCommit

-- | An enumeration token that when provided in a request, returns the next
--   batch of the results.
getCommentsForComparedCommit_nextToken :: Lens' GetCommentsForComparedCommit (Maybe Text)

-- | To establish the directionality of the comparison, the full commit ID
--   of the before commit.
getCommentsForComparedCommit_beforeCommitId :: Lens' GetCommentsForComparedCommit (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 comments, but you can configure up to 500.
getCommentsForComparedCommit_maxResults :: Lens' GetCommentsForComparedCommit (Maybe Int)

-- | The name of the repository where you want to compare commits.
getCommentsForComparedCommit_repositoryName :: Lens' GetCommentsForComparedCommit Text

-- | To establish the directionality of the comparison, the full commit ID
--   of the after commit.
getCommentsForComparedCommit_afterCommitId :: Lens' GetCommentsForComparedCommit Text

-- | <i>See:</i> <a>newGetCommentsForComparedCommitResponse</a> smart
--   constructor.
data GetCommentsForComparedCommitResponse
GetCommentsForComparedCommitResponse' :: Maybe [CommentsForComparedCommit] -> Maybe Text -> Int -> GetCommentsForComparedCommitResponse

-- | A list of comment objects on the compared commit.
[$sel:commentsForComparedCommitData:GetCommentsForComparedCommitResponse'] :: GetCommentsForComparedCommitResponse -> Maybe [CommentsForComparedCommit]

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
[$sel:nextToken:GetCommentsForComparedCommitResponse'] :: GetCommentsForComparedCommitResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCommentsForComparedCommitResponse'] :: GetCommentsForComparedCommitResponse -> Int

-- | Create a value of <a>GetCommentsForComparedCommitResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:commentsForComparedCommitData:GetCommentsForComparedCommitResponse'</a>,
--   <a>getCommentsForComparedCommitResponse_commentsForComparedCommitData</a>
--   - A list of comment objects on the compared commit.
--   
--   <a>$sel:nextToken:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommitResponse_nextToken</a> - An enumeration
--   token that can be used in a request to return the next batch of the
--   results.
--   
--   <a>$sel:httpStatus:GetCommentsForComparedCommitResponse'</a>,
--   <a>getCommentsForComparedCommitResponse_httpStatus</a> - The
--   response's http status code.
newGetCommentsForComparedCommitResponse :: Int -> GetCommentsForComparedCommitResponse

-- | A list of comment objects on the compared commit.
getCommentsForComparedCommitResponse_commentsForComparedCommitData :: Lens' GetCommentsForComparedCommitResponse (Maybe [CommentsForComparedCommit])

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getCommentsForComparedCommitResponse_nextToken :: Lens' GetCommentsForComparedCommitResponse (Maybe Text)

-- | The response's http status code.
getCommentsForComparedCommitResponse_httpStatus :: Lens' GetCommentsForComparedCommitResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance GHC.Show.Show Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance GHC.Read.Read Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance GHC.Classes.Eq Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance GHC.Generics.Generic Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommitResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommitResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommitResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommitResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommitResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetCommentsForComparedCommit.GetCommentsForComparedCommit


-- | Returns information about reactions to a specified comment ID.
--   Reactions from users who have been deleted will not be included in the
--   count.
module Amazonka.CodeCommit.GetCommentReactions

-- | <i>See:</i> <a>newGetCommentReactions</a> smart constructor.
data GetCommentReactions
GetCommentReactions' :: Maybe Text -> Maybe Text -> Maybe Int -> Text -> GetCommentReactions

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:GetCommentReactions'] :: GetCommentReactions -> Maybe Text

-- | Optional. The Amazon Resource Name (ARN) of the user or identity for
--   which you want to get reaction information.
[$sel:reactionUserArn:GetCommentReactions'] :: GetCommentReactions -> Maybe Text

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is the same as the allowed maximum, 1,000.
[$sel:maxResults:GetCommentReactions'] :: GetCommentReactions -> Maybe Int

-- | The ID of the comment for which you want to get reactions information.
[$sel:commentId:GetCommentReactions'] :: GetCommentReactions -> Text

-- | Create a value of <a>GetCommentReactions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCommentReactions'</a>,
--   <a>getCommentReactions_nextToken</a> - An enumeration token that, when
--   provided in a request, returns the next batch of the results.
--   
--   <a>$sel:reactionUserArn:GetCommentReactions'</a>,
--   <a>getCommentReactions_reactionUserArn</a> - Optional. The Amazon
--   Resource Name (ARN) of the user or identity for which you want to get
--   reaction information.
--   
--   <a>$sel:maxResults:GetCommentReactions'</a>,
--   <a>getCommentReactions_maxResults</a> - A non-zero, non-negative
--   integer used to limit the number of returned results. The default is
--   the same as the allowed maximum, 1,000.
--   
--   <a>$sel:commentId:GetCommentReactions'</a>,
--   <a>getCommentReactions_commentId</a> - The ID of the comment for which
--   you want to get reactions information.
newGetCommentReactions :: Text -> GetCommentReactions

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
getCommentReactions_nextToken :: Lens' GetCommentReactions (Maybe Text)

-- | Optional. The Amazon Resource Name (ARN) of the user or identity for
--   which you want to get reaction information.
getCommentReactions_reactionUserArn :: Lens' GetCommentReactions (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is the same as the allowed maximum, 1,000.
getCommentReactions_maxResults :: Lens' GetCommentReactions (Maybe Int)

-- | The ID of the comment for which you want to get reactions information.
getCommentReactions_commentId :: Lens' GetCommentReactions Text

-- | <i>See:</i> <a>newGetCommentReactionsResponse</a> smart constructor.
data GetCommentReactionsResponse
GetCommentReactionsResponse' :: Maybe Text -> Int -> [ReactionForComment] -> GetCommentReactionsResponse

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
[$sel:nextToken:GetCommentReactionsResponse'] :: GetCommentReactionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetCommentReactionsResponse'] :: GetCommentReactionsResponse -> Int

-- | An array of reactions to the specified comment.
[$sel:reactionsForComment:GetCommentReactionsResponse'] :: GetCommentReactionsResponse -> [ReactionForComment]

-- | Create a value of <a>GetCommentReactionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCommentReactions'</a>,
--   <a>getCommentReactionsResponse_nextToken</a> - An enumeration token
--   that can be used in a request to return the next batch of the results.
--   
--   <a>$sel:httpStatus:GetCommentReactionsResponse'</a>,
--   <a>getCommentReactionsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:reactionsForComment:GetCommentReactionsResponse'</a>,
--   <a>getCommentReactionsResponse_reactionsForComment</a> - An array of
--   reactions to the specified comment.
newGetCommentReactionsResponse :: Int -> GetCommentReactionsResponse

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getCommentReactionsResponse_nextToken :: Lens' GetCommentReactionsResponse (Maybe Text)

-- | The response's http status code.
getCommentReactionsResponse_httpStatus :: Lens' GetCommentReactionsResponse Int

-- | An array of reactions to the specified comment.
getCommentReactionsResponse_reactionsForComment :: Lens' GetCommentReactionsResponse [ReactionForComment]
instance GHC.Generics.Generic Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance GHC.Show.Show Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance GHC.Read.Read Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance GHC.Classes.Eq Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance GHC.Generics.Generic Amazonka.CodeCommit.GetCommentReactions.GetCommentReactionsResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetCommentReactions.GetCommentReactionsResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetCommentReactions.GetCommentReactionsResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetCommentReactions.GetCommentReactionsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetCommentReactions.GetCommentReactionsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetCommentReactions.GetCommentReactions


-- | Returns the content of a comment made on a change, file, or commit in
--   a repository.
--   
--   Reaction counts might include numbers from user identities who were
--   deleted after the reaction was made. For a count of reactions from
--   active identities, use GetCommentReactions.
module Amazonka.CodeCommit.GetComment

-- | <i>See:</i> <a>newGetComment</a> smart constructor.
data GetComment
GetComment' :: Text -> GetComment

-- | The unique, system-generated ID of the comment. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
[$sel:commentId:GetComment'] :: GetComment -> Text

-- | Create a value of <a>GetComment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commentId:GetComment'</a>, <a>getComment_commentId</a> - The
--   unique, system-generated ID of the comment. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
newGetComment :: Text -> GetComment

-- | The unique, system-generated ID of the comment. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
getComment_commentId :: Lens' GetComment Text

-- | <i>See:</i> <a>newGetCommentResponse</a> smart constructor.
data GetCommentResponse
GetCommentResponse' :: Maybe Comment -> Int -> GetCommentResponse

-- | The contents of the comment.
[$sel:comment:GetCommentResponse'] :: GetCommentResponse -> Maybe Comment

-- | The response's http status code.
[$sel:httpStatus:GetCommentResponse'] :: GetCommentResponse -> Int

-- | Create a value of <a>GetCommentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:GetCommentResponse'</a>,
--   <a>getCommentResponse_comment</a> - The contents of the comment.
--   
--   <a>$sel:httpStatus:GetCommentResponse'</a>,
--   <a>getCommentResponse_httpStatus</a> - The response's http status
--   code.
newGetCommentResponse :: Int -> GetCommentResponse

-- | The contents of the comment.
getCommentResponse_comment :: Lens' GetCommentResponse (Maybe Comment)

-- | The response's http status code.
getCommentResponse_httpStatus :: Lens' GetCommentResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetComment.GetComment
instance GHC.Show.Show Amazonka.CodeCommit.GetComment.GetComment
instance GHC.Read.Read Amazonka.CodeCommit.GetComment.GetComment
instance GHC.Classes.Eq Amazonka.CodeCommit.GetComment.GetComment
instance GHC.Generics.Generic Amazonka.CodeCommit.GetComment.GetCommentResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetComment.GetCommentResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetComment.GetCommentResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetComment.GetCommentResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetComment.GetComment
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetComment.GetCommentResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetComment.GetComment
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetComment.GetComment
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetComment.GetComment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetComment.GetComment
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetComment.GetComment
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetComment.GetComment


-- | Returns information about a repository branch, including its name and
--   the last commit ID.
module Amazonka.CodeCommit.GetBranch

-- | Represents the input of a get branch operation.
--   
--   <i>See:</i> <a>newGetBranch</a> smart constructor.
data GetBranch
GetBranch' :: Maybe Text -> Maybe Text -> GetBranch

-- | The name of the branch for which you want to retrieve information.
[$sel:branchName:GetBranch'] :: GetBranch -> Maybe Text

-- | The name of the repository that contains the branch for which you want
--   to retrieve information.
[$sel:repositoryName:GetBranch'] :: GetBranch -> Maybe Text

-- | Create a value of <a>GetBranch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchName:GetBranch'</a>, <a>getBranch_branchName</a> - The
--   name of the branch for which you want to retrieve information.
--   
--   <a>$sel:repositoryName:GetBranch'</a>, <a>getBranch_repositoryName</a>
--   - The name of the repository that contains the branch for which you
--   want to retrieve information.
newGetBranch :: GetBranch

-- | The name of the branch for which you want to retrieve information.
getBranch_branchName :: Lens' GetBranch (Maybe Text)

-- | The name of the repository that contains the branch for which you want
--   to retrieve information.
getBranch_repositoryName :: Lens' GetBranch (Maybe Text)

-- | Represents the output of a get branch operation.
--   
--   <i>See:</i> <a>newGetBranchResponse</a> smart constructor.
data GetBranchResponse
GetBranchResponse' :: Maybe BranchInfo -> Int -> GetBranchResponse

-- | The name of the branch.
[$sel:branch:GetBranchResponse'] :: GetBranchResponse -> Maybe BranchInfo

-- | The response's http status code.
[$sel:httpStatus:GetBranchResponse'] :: GetBranchResponse -> Int

-- | Create a value of <a>GetBranchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branch:GetBranchResponse'</a>, <a>getBranchResponse_branch</a>
--   - The name of the branch.
--   
--   <a>$sel:httpStatus:GetBranchResponse'</a>,
--   <a>getBranchResponse_httpStatus</a> - The response's http status code.
newGetBranchResponse :: Int -> GetBranchResponse

-- | The name of the branch.
getBranchResponse_branch :: Lens' GetBranchResponse (Maybe BranchInfo)

-- | The response's http status code.
getBranchResponse_httpStatus :: Lens' GetBranchResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.GetBranch.GetBranch
instance GHC.Show.Show Amazonka.CodeCommit.GetBranch.GetBranch
instance GHC.Read.Read Amazonka.CodeCommit.GetBranch.GetBranch
instance GHC.Classes.Eq Amazonka.CodeCommit.GetBranch.GetBranch
instance GHC.Generics.Generic Amazonka.CodeCommit.GetBranch.GetBranchResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetBranch.GetBranchResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetBranch.GetBranchResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetBranch.GetBranchResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetBranch.GetBranch
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetBranch.GetBranchResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetBranch.GetBranch
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetBranch.GetBranch
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetBranch.GetBranch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetBranch.GetBranch
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetBranch.GetBranch
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetBranch.GetBranch


-- | Returns the base-64 encoded content of an individual blob in a
--   repository.
module Amazonka.CodeCommit.GetBlob

-- | Represents the input of a get blob operation.
--   
--   <i>See:</i> <a>newGetBlob</a> smart constructor.
data GetBlob
GetBlob' :: Text -> Text -> GetBlob

-- | The name of the repository that contains the blob.
[$sel:repositoryName:GetBlob'] :: GetBlob -> Text

-- | The ID of the blob, which is its SHA-1 pointer.
[$sel:blobId:GetBlob'] :: GetBlob -> Text

-- | Create a value of <a>GetBlob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:GetBlob'</a>, <a>getBlob_repositoryName</a> -
--   The name of the repository that contains the blob.
--   
--   <a>$sel:blobId:GetBlob'</a>, <a>getBlob_blobId</a> - The ID of the
--   blob, which is its SHA-1 pointer.
newGetBlob :: Text -> Text -> GetBlob

-- | The name of the repository that contains the blob.
getBlob_repositoryName :: Lens' GetBlob Text

-- | The ID of the blob, which is its SHA-1 pointer.
getBlob_blobId :: Lens' GetBlob Text

-- | Represents the output of a get blob operation.
--   
--   <i>See:</i> <a>newGetBlobResponse</a> smart constructor.
data GetBlobResponse
GetBlobResponse' :: Int -> Base64 -> GetBlobResponse

-- | The response's http status code.
[$sel:httpStatus:GetBlobResponse'] :: GetBlobResponse -> Int

-- | The content of the blob, usually a file.
[$sel:content:GetBlobResponse'] :: GetBlobResponse -> Base64

-- | Create a value of <a>GetBlobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetBlobResponse'</a>,
--   <a>getBlobResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:content:GetBlobResponse'</a>, <a>getBlobResponse_content</a> -
--   The content of the blob, usually a file.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newGetBlobResponse :: Int -> ByteString -> GetBlobResponse

-- | The response's http status code.
getBlobResponse_httpStatus :: Lens' GetBlobResponse Int

-- | The content of the blob, usually a file.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
getBlobResponse_content :: Lens' GetBlobResponse ByteString
instance GHC.Generics.Generic Amazonka.CodeCommit.GetBlob.GetBlob
instance GHC.Show.Show Amazonka.CodeCommit.GetBlob.GetBlob
instance GHC.Read.Read Amazonka.CodeCommit.GetBlob.GetBlob
instance GHC.Classes.Eq Amazonka.CodeCommit.GetBlob.GetBlob
instance GHC.Generics.Generic Amazonka.CodeCommit.GetBlob.GetBlobResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetBlob.GetBlobResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetBlob.GetBlobResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetBlob.GetBlobResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetBlob.GetBlob
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetBlob.GetBlobResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetBlob.GetBlob
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetBlob.GetBlob
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetBlob.GetBlob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetBlob.GetBlob
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetBlob.GetBlob
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetBlob.GetBlob


-- | Returns information about a specified approval rule template.
module Amazonka.CodeCommit.GetApprovalRuleTemplate

-- | <i>See:</i> <a>newGetApprovalRuleTemplate</a> smart constructor.
data GetApprovalRuleTemplate
GetApprovalRuleTemplate' :: Text -> GetApprovalRuleTemplate

-- | The name of the approval rule template for which you want to get
--   information.
[$sel:approvalRuleTemplateName:GetApprovalRuleTemplate'] :: GetApprovalRuleTemplate -> Text

-- | Create a value of <a>GetApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleTemplateName:GetApprovalRuleTemplate'</a>,
--   <a>getApprovalRuleTemplate_approvalRuleTemplateName</a> - The name of
--   the approval rule template for which you want to get information.
newGetApprovalRuleTemplate :: Text -> GetApprovalRuleTemplate

-- | The name of the approval rule template for which you want to get
--   information.
getApprovalRuleTemplate_approvalRuleTemplateName :: Lens' GetApprovalRuleTemplate Text

-- | <i>See:</i> <a>newGetApprovalRuleTemplateResponse</a> smart
--   constructor.
data GetApprovalRuleTemplateResponse
GetApprovalRuleTemplateResponse' :: Int -> ApprovalRuleTemplate -> GetApprovalRuleTemplateResponse

-- | The response's http status code.
[$sel:httpStatus:GetApprovalRuleTemplateResponse'] :: GetApprovalRuleTemplateResponse -> Int

-- | The content and structure of the approval rule template.
[$sel:approvalRuleTemplate:GetApprovalRuleTemplateResponse'] :: GetApprovalRuleTemplateResponse -> ApprovalRuleTemplate

-- | Create a value of <a>GetApprovalRuleTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetApprovalRuleTemplateResponse'</a>,
--   <a>getApprovalRuleTemplateResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:approvalRuleTemplate:GetApprovalRuleTemplateResponse'</a>,
--   <a>getApprovalRuleTemplateResponse_approvalRuleTemplate</a> - The
--   content and structure of the approval rule template.
newGetApprovalRuleTemplateResponse :: Int -> ApprovalRuleTemplate -> GetApprovalRuleTemplateResponse

-- | The response's http status code.
getApprovalRuleTemplateResponse_httpStatus :: Lens' GetApprovalRuleTemplateResponse Int

-- | The content and structure of the approval rule template.
getApprovalRuleTemplateResponse_approvalRuleTemplate :: Lens' GetApprovalRuleTemplateResponse ApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance GHC.Show.Show Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance GHC.Read.Read Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance GHC.Classes.Eq Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplateResponse
instance GHC.Show.Show Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplateResponse
instance GHC.Read.Read Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplateResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.GetApprovalRuleTemplate.GetApprovalRuleTemplate


-- | Evaluates whether a pull request has met all the conditions specified
--   in its associated approval rules.
module Amazonka.CodeCommit.EvaluatePullRequestApprovalRules

-- | <i>See:</i> <a>newEvaluatePullRequestApprovalRules</a> smart
--   constructor.
data EvaluatePullRequestApprovalRules
EvaluatePullRequestApprovalRules' :: Text -> Text -> EvaluatePullRequestApprovalRules

-- | The system-generated ID of the pull request you want to evaluate.
[$sel:pullRequestId:EvaluatePullRequestApprovalRules'] :: EvaluatePullRequestApprovalRules -> Text

-- | The system-generated ID for the pull request revision. To retrieve the
--   most recent revision ID for a pull request, use GetPullRequest.
[$sel:revisionId:EvaluatePullRequestApprovalRules'] :: EvaluatePullRequestApprovalRules -> Text

-- | Create a value of <a>EvaluatePullRequestApprovalRules</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:EvaluatePullRequestApprovalRules'</a>,
--   <a>evaluatePullRequestApprovalRules_pullRequestId</a> - The
--   system-generated ID of the pull request you want to evaluate.
--   
--   <a>$sel:revisionId:EvaluatePullRequestApprovalRules'</a>,
--   <a>evaluatePullRequestApprovalRules_revisionId</a> - The
--   system-generated ID for the pull request revision. To retrieve the
--   most recent revision ID for a pull request, use GetPullRequest.
newEvaluatePullRequestApprovalRules :: Text -> Text -> EvaluatePullRequestApprovalRules

-- | The system-generated ID of the pull request you want to evaluate.
evaluatePullRequestApprovalRules_pullRequestId :: Lens' EvaluatePullRequestApprovalRules Text

-- | The system-generated ID for the pull request revision. To retrieve the
--   most recent revision ID for a pull request, use GetPullRequest.
evaluatePullRequestApprovalRules_revisionId :: Lens' EvaluatePullRequestApprovalRules Text

-- | <i>See:</i> <a>newEvaluatePullRequestApprovalRulesResponse</a> smart
--   constructor.
data EvaluatePullRequestApprovalRulesResponse
EvaluatePullRequestApprovalRulesResponse' :: Int -> Evaluation -> EvaluatePullRequestApprovalRulesResponse

-- | The response's http status code.
[$sel:httpStatus:EvaluatePullRequestApprovalRulesResponse'] :: EvaluatePullRequestApprovalRulesResponse -> Int

-- | The result of the evaluation, including the names of the rules whose
--   conditions have been met (if any), the names of the rules whose
--   conditions have not been met (if any), whether the pull request is in
--   the approved state, and whether the pull request approval rule has
--   been set aside by an override.
[$sel:evaluation:EvaluatePullRequestApprovalRulesResponse'] :: EvaluatePullRequestApprovalRulesResponse -> Evaluation

-- | Create a value of <a>EvaluatePullRequestApprovalRulesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EvaluatePullRequestApprovalRulesResponse'</a>,
--   <a>evaluatePullRequestApprovalRulesResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:evaluation:EvaluatePullRequestApprovalRulesResponse'</a>,
--   <a>evaluatePullRequestApprovalRulesResponse_evaluation</a> - The
--   result of the evaluation, including the names of the rules whose
--   conditions have been met (if any), the names of the rules whose
--   conditions have not been met (if any), whether the pull request is in
--   the approved state, and whether the pull request approval rule has
--   been set aside by an override.
newEvaluatePullRequestApprovalRulesResponse :: Int -> Evaluation -> EvaluatePullRequestApprovalRulesResponse

-- | The response's http status code.
evaluatePullRequestApprovalRulesResponse_httpStatus :: Lens' EvaluatePullRequestApprovalRulesResponse Int

-- | The result of the evaluation, including the names of the rules whose
--   conditions have been met (if any), the names of the rules whose
--   conditions have not been met (if any), whether the pull request is in
--   the approved state, and whether the pull request approval rule has
--   been set aside by an override.
evaluatePullRequestApprovalRulesResponse_evaluation :: Lens' EvaluatePullRequestApprovalRulesResponse Evaluation
instance GHC.Generics.Generic Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance GHC.Show.Show Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance GHC.Read.Read Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance GHC.Classes.Eq Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance GHC.Generics.Generic Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRulesResponse
instance GHC.Show.Show Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRulesResponse
instance GHC.Read.Read Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRulesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRulesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance Control.DeepSeq.NFData Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRulesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance Control.DeepSeq.NFData Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.EvaluatePullRequestApprovalRules.EvaluatePullRequestApprovalRules


-- | Removes the association between a template and a repository so that
--   approval rules based on the template are not automatically created
--   when pull requests are created in the specified repository. This does
--   not delete any approval rules previously created for pull requests
--   through the template association.
module Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository

-- | <i>See:</i> <a>newDisassociateApprovalRuleTemplateFromRepository</a>
--   smart constructor.
data DisassociateApprovalRuleTemplateFromRepository
DisassociateApprovalRuleTemplateFromRepository' :: Text -> Text -> DisassociateApprovalRuleTemplateFromRepository

-- | The name of the approval rule template to disassociate from a
--   specified repository.
[$sel:approvalRuleTemplateName:DisassociateApprovalRuleTemplateFromRepository'] :: DisassociateApprovalRuleTemplateFromRepository -> Text

-- | The name of the repository you want to disassociate from the template.
[$sel:repositoryName:DisassociateApprovalRuleTemplateFromRepository'] :: DisassociateApprovalRuleTemplateFromRepository -> Text

-- | Create a value of
--   <a>DisassociateApprovalRuleTemplateFromRepository</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:DisassociateApprovalRuleTemplateFromRepository'</a>,
--   <a>disassociateApprovalRuleTemplateFromRepository_approvalRuleTemplateName</a>
--   - The name of the approval rule template to disassociate from a
--   specified repository.
--   
--   
--   <a>$sel:repositoryName:DisassociateApprovalRuleTemplateFromRepository'</a>,
--   <a>disassociateApprovalRuleTemplateFromRepository_repositoryName</a> -
--   The name of the repository you want to disassociate from the template.
newDisassociateApprovalRuleTemplateFromRepository :: Text -> Text -> DisassociateApprovalRuleTemplateFromRepository

-- | The name of the approval rule template to disassociate from a
--   specified repository.
disassociateApprovalRuleTemplateFromRepository_approvalRuleTemplateName :: Lens' DisassociateApprovalRuleTemplateFromRepository Text

-- | The name of the repository you want to disassociate from the template.
disassociateApprovalRuleTemplateFromRepository_repositoryName :: Lens' DisassociateApprovalRuleTemplateFromRepository Text

-- | <i>See:</i>
--   <a>newDisassociateApprovalRuleTemplateFromRepositoryResponse</a> smart
--   constructor.
data DisassociateApprovalRuleTemplateFromRepositoryResponse
DisassociateApprovalRuleTemplateFromRepositoryResponse' :: DisassociateApprovalRuleTemplateFromRepositoryResponse

-- | Create a value of
--   <a>DisassociateApprovalRuleTemplateFromRepositoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateApprovalRuleTemplateFromRepositoryResponse :: DisassociateApprovalRuleTemplateFromRepositoryResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance GHC.Show.Show Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance GHC.Read.Read Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance GHC.Classes.Eq Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance GHC.Generics.Generic Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepositoryResponse
instance GHC.Show.Show Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepositoryResponse
instance GHC.Read.Read Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DisassociateApprovalRuleTemplateFromRepository.DisassociateApprovalRuleTemplateFromRepository


-- | Returns information about one or more pull request events.
--   
--   This operation returns paginated results.
module Amazonka.CodeCommit.DescribePullRequestEvents

-- | <i>See:</i> <a>newDescribePullRequestEvents</a> smart constructor.
data DescribePullRequestEvents
DescribePullRequestEvents' :: Maybe PullRequestEventType -> Maybe Text -> Maybe Text -> Maybe Int -> Text -> DescribePullRequestEvents

-- | Optional. The pull request event type about which you want to return
--   information.
[$sel:pullRequestEventType:DescribePullRequestEvents'] :: DescribePullRequestEvents -> Maybe PullRequestEventType

-- | The Amazon Resource Name (ARN) of the user whose actions resulted in
--   the event. Examples include updating the pull request with more
--   commits or changing the status of a pull request.
[$sel:actorArn:DescribePullRequestEvents'] :: DescribePullRequestEvents -> Maybe Text

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:DescribePullRequestEvents'] :: DescribePullRequestEvents -> Maybe Text

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 events, which is also the maximum number
--   of events that can be returned in a result.
[$sel:maxResults:DescribePullRequestEvents'] :: DescribePullRequestEvents -> Maybe Int

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:DescribePullRequestEvents'] :: DescribePullRequestEvents -> Text

-- | Create a value of <a>DescribePullRequestEvents</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestEventType:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_pullRequestEventType</a> - Optional. The
--   pull request event type about which you want to return information.
--   
--   <a>$sel:actorArn:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_actorArn</a> - The Amazon Resource Name
--   (ARN) of the user whose actions resulted in the event. Examples
--   include updating the pull request with more commits or changing the
--   status of a pull request.
--   
--   <a>$sel:nextToken:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_nextToken</a> - An enumeration token
--   that, when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:maxResults:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_maxResults</a> - A non-zero, non-negative
--   integer used to limit the number of returned results. The default is
--   100 events, which is also the maximum number of events that can be
--   returned in a result.
--   
--   <a>$sel:pullRequestId:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
newDescribePullRequestEvents :: Text -> DescribePullRequestEvents

-- | Optional. The pull request event type about which you want to return
--   information.
describePullRequestEvents_pullRequestEventType :: Lens' DescribePullRequestEvents (Maybe PullRequestEventType)

-- | The Amazon Resource Name (ARN) of the user whose actions resulted in
--   the event. Examples include updating the pull request with more
--   commits or changing the status of a pull request.
describePullRequestEvents_actorArn :: Lens' DescribePullRequestEvents (Maybe Text)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
describePullRequestEvents_nextToken :: Lens' DescribePullRequestEvents (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 events, which is also the maximum number
--   of events that can be returned in a result.
describePullRequestEvents_maxResults :: Lens' DescribePullRequestEvents (Maybe Int)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
describePullRequestEvents_pullRequestId :: Lens' DescribePullRequestEvents Text

-- | <i>See:</i> <a>newDescribePullRequestEventsResponse</a> smart
--   constructor.
data DescribePullRequestEventsResponse
DescribePullRequestEventsResponse' :: Maybe Text -> Int -> [PullRequestEvent] -> DescribePullRequestEventsResponse

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
[$sel:nextToken:DescribePullRequestEventsResponse'] :: DescribePullRequestEventsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribePullRequestEventsResponse'] :: DescribePullRequestEventsResponse -> Int

-- | Information about the pull request events.
[$sel:pullRequestEvents:DescribePullRequestEventsResponse'] :: DescribePullRequestEventsResponse -> [PullRequestEvent]

-- | Create a value of <a>DescribePullRequestEventsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEventsResponse_nextToken</a> - An enumeration
--   token that can be used in a request to return the next batch of the
--   results.
--   
--   <a>$sel:httpStatus:DescribePullRequestEventsResponse'</a>,
--   <a>describePullRequestEventsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:pullRequestEvents:DescribePullRequestEventsResponse'</a>,
--   <a>describePullRequestEventsResponse_pullRequestEvents</a> -
--   Information about the pull request events.
newDescribePullRequestEventsResponse :: Int -> DescribePullRequestEventsResponse

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
describePullRequestEventsResponse_nextToken :: Lens' DescribePullRequestEventsResponse (Maybe Text)

-- | The response's http status code.
describePullRequestEventsResponse_httpStatus :: Lens' DescribePullRequestEventsResponse Int

-- | Information about the pull request events.
describePullRequestEventsResponse_pullRequestEvents :: Lens' DescribePullRequestEventsResponse [PullRequestEvent]
instance GHC.Generics.Generic Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance GHC.Show.Show Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance GHC.Read.Read Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance GHC.Classes.Eq Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance GHC.Generics.Generic Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEventsResponse
instance GHC.Show.Show Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEventsResponse
instance GHC.Read.Read Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEventsResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEventsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEventsResponse
instance Amazonka.Pager.AWSPager Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DescribePullRequestEvents.DescribePullRequestEvents


-- | Returns information about one or more merge conflicts in the attempted
--   merge of two commit specifiers using the squash or three-way merge
--   strategy. If the merge option for the attempted merge is specified as
--   FAST_FORWARD_MERGE, an exception is thrown.
module Amazonka.CodeCommit.DescribeMergeConflicts

-- | <i>See:</i> <a>newDescribeMergeConflicts</a> smart constructor.
data DescribeMergeConflicts
DescribeMergeConflicts' :: Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe Int -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> MergeOptionTypeEnum -> Text -> DescribeMergeConflicts

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:DescribeMergeConflicts'] :: DescribeMergeConflicts -> Maybe ConflictDetailLevelTypeEnum

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:DescribeMergeConflicts'] :: DescribeMergeConflicts -> Maybe Text

-- | The maximum number of merge hunks to include in the output.
[$sel:maxMergeHunks:DescribeMergeConflicts'] :: DescribeMergeConflicts -> Maybe Int

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:DescribeMergeConflicts'] :: DescribeMergeConflicts -> Maybe ConflictResolutionStrategyTypeEnum

-- | The name of the repository where you want to get information about a
--   merge conflict.
[$sel:repositoryName:DescribeMergeConflicts'] :: DescribeMergeConflicts -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:DescribeMergeConflicts'] :: DescribeMergeConflicts -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:DescribeMergeConflicts'] :: DescribeMergeConflicts -> Text

-- | The merge option or strategy you want to use to merge the code.
[$sel:mergeOption:DescribeMergeConflicts'] :: DescribeMergeConflicts -> MergeOptionTypeEnum

-- | The path of the target files used to describe the conflicts.
[$sel:filePath:DescribeMergeConflicts'] :: DescribeMergeConflicts -> Text

-- | Create a value of <a>DescribeMergeConflicts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conflictDetailLevel:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:nextToken:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_nextToken</a> - An enumeration token that,
--   when provided in a request, returns the next batch of the results.
--   
--   <a>$sel:maxMergeHunks:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_maxMergeHunks</a> - The maximum number of
--   merge hunks to include in the output.
--   
--   <a>$sel:conflictResolutionStrategy:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_conflictResolutionStrategy</a> - Specifies
--   which branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:repositoryName:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_repositoryName</a> - The name of the
--   repository where you want to get information about a merge conflict.
--   
--   <a>$sel:destinationCommitSpecifier:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_destinationCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:sourceCommitSpecifier:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_sourceCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
--   
--   <a>$sel:mergeOption:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_mergeOption</a> - The merge option or
--   strategy you want to use to merge the code.
--   
--   <a>$sel:filePath:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_filePath</a> - The path of the target files
--   used to describe the conflicts.
newDescribeMergeConflicts :: Text -> Text -> Text -> MergeOptionTypeEnum -> Text -> DescribeMergeConflicts

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
describeMergeConflicts_conflictDetailLevel :: Lens' DescribeMergeConflicts (Maybe ConflictDetailLevelTypeEnum)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
describeMergeConflicts_nextToken :: Lens' DescribeMergeConflicts (Maybe Text)

-- | The maximum number of merge hunks to include in the output.
describeMergeConflicts_maxMergeHunks :: Lens' DescribeMergeConflicts (Maybe Int)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
describeMergeConflicts_conflictResolutionStrategy :: Lens' DescribeMergeConflicts (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository where you want to get information about a
--   merge conflict.
describeMergeConflicts_repositoryName :: Lens' DescribeMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
describeMergeConflicts_destinationCommitSpecifier :: Lens' DescribeMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
describeMergeConflicts_sourceCommitSpecifier :: Lens' DescribeMergeConflicts Text

-- | The merge option or strategy you want to use to merge the code.
describeMergeConflicts_mergeOption :: Lens' DescribeMergeConflicts MergeOptionTypeEnum

-- | The path of the target files used to describe the conflicts.
describeMergeConflicts_filePath :: Lens' DescribeMergeConflicts Text

-- | <i>See:</i> <a>newDescribeMergeConflictsResponse</a> smart
--   constructor.
data DescribeMergeConflictsResponse
DescribeMergeConflictsResponse' :: Maybe Text -> Maybe Text -> Int -> ConflictMetadata -> [MergeHunk] -> Text -> Text -> DescribeMergeConflictsResponse

-- | The commit ID of the merge base.
[$sel:baseCommitId:DescribeMergeConflictsResponse'] :: DescribeMergeConflictsResponse -> Maybe Text

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
[$sel:nextToken:DescribeMergeConflictsResponse'] :: DescribeMergeConflictsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeMergeConflictsResponse'] :: DescribeMergeConflictsResponse -> Int

-- | Contains metadata about the conflicts found in the merge.
[$sel:conflictMetadata:DescribeMergeConflictsResponse'] :: DescribeMergeConflictsResponse -> ConflictMetadata

-- | A list of merge hunks of the differences between the files or lines.
[$sel:mergeHunks:DescribeMergeConflictsResponse'] :: DescribeMergeConflictsResponse -> [MergeHunk]

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
[$sel:destinationCommitId:DescribeMergeConflictsResponse'] :: DescribeMergeConflictsResponse -> Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
[$sel:sourceCommitId:DescribeMergeConflictsResponse'] :: DescribeMergeConflictsResponse -> Text

-- | Create a value of <a>DescribeMergeConflictsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseCommitId:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_baseCommitId</a> - The commit ID of
--   the merge base.
--   
--   <a>$sel:nextToken:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflictsResponse_nextToken</a> - An enumeration token
--   that can be used in a request to return the next batch of the results.
--   
--   <a>$sel:httpStatus:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:conflictMetadata:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_conflictMetadata</a> - Contains
--   metadata about the conflicts found in the merge.
--   
--   <a>$sel:mergeHunks:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_mergeHunks</a> - A list of merge
--   hunks of the differences between the files or lines.
--   
--   <a>$sel:destinationCommitId:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_destinationCommitId</a> - The commit
--   ID of the destination commit specifier that was used in the merge
--   evaluation.
--   
--   <a>$sel:sourceCommitId:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_sourceCommitId</a> - The commit ID
--   of the source commit specifier that was used in the merge evaluation.
newDescribeMergeConflictsResponse :: Int -> ConflictMetadata -> Text -> Text -> DescribeMergeConflictsResponse

-- | The commit ID of the merge base.
describeMergeConflictsResponse_baseCommitId :: Lens' DescribeMergeConflictsResponse (Maybe Text)

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
describeMergeConflictsResponse_nextToken :: Lens' DescribeMergeConflictsResponse (Maybe Text)

-- | The response's http status code.
describeMergeConflictsResponse_httpStatus :: Lens' DescribeMergeConflictsResponse Int

-- | Contains metadata about the conflicts found in the merge.
describeMergeConflictsResponse_conflictMetadata :: Lens' DescribeMergeConflictsResponse ConflictMetadata

-- | A list of merge hunks of the differences between the files or lines.
describeMergeConflictsResponse_mergeHunks :: Lens' DescribeMergeConflictsResponse [MergeHunk]

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
describeMergeConflictsResponse_destinationCommitId :: Lens' DescribeMergeConflictsResponse Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
describeMergeConflictsResponse_sourceCommitId :: Lens' DescribeMergeConflictsResponse Text
instance GHC.Generics.Generic Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance GHC.Show.Show Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance GHC.Read.Read Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance GHC.Classes.Eq Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance GHC.Generics.Generic Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflictsResponse
instance GHC.Show.Show Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflictsResponse
instance GHC.Read.Read Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflictsResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflictsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflictsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DescribeMergeConflicts.DescribeMergeConflicts


-- | Deletes a repository. If a specified repository was already deleted, a
--   null repository ID is returned.
--   
--   Deleting a repository also deletes all associated objects and
--   metadata. After a repository is deleted, all future push calls to the
--   deleted repository fail.
module Amazonka.CodeCommit.DeleteRepository

-- | Represents the input of a delete repository operation.
--   
--   <i>See:</i> <a>newDeleteRepository</a> smart constructor.
data DeleteRepository
DeleteRepository' :: Text -> DeleteRepository

-- | The name of the repository to delete.
[$sel:repositoryName:DeleteRepository'] :: DeleteRepository -> Text

-- | Create a value of <a>DeleteRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:DeleteRepository'</a>,
--   <a>deleteRepository_repositoryName</a> - The name of the repository to
--   delete.
newDeleteRepository :: Text -> DeleteRepository

-- | The name of the repository to delete.
deleteRepository_repositoryName :: Lens' DeleteRepository Text

-- | Represents the output of a delete repository operation.
--   
--   <i>See:</i> <a>newDeleteRepositoryResponse</a> smart constructor.
data DeleteRepositoryResponse
DeleteRepositoryResponse' :: Maybe Text -> Int -> DeleteRepositoryResponse

-- | The ID of the repository that was deleted.
[$sel:repositoryId:DeleteRepositoryResponse'] :: DeleteRepositoryResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteRepositoryResponse'] :: DeleteRepositoryResponse -> Int

-- | Create a value of <a>DeleteRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryId:DeleteRepositoryResponse'</a>,
--   <a>deleteRepositoryResponse_repositoryId</a> - The ID of the
--   repository that was deleted.
--   
--   <a>$sel:httpStatus:DeleteRepositoryResponse'</a>,
--   <a>deleteRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRepositoryResponse :: Int -> DeleteRepositoryResponse

-- | The ID of the repository that was deleted.
deleteRepositoryResponse_repositoryId :: Lens' DeleteRepositoryResponse (Maybe Text)

-- | The response's http status code.
deleteRepositoryResponse_httpStatus :: Lens' DeleteRepositoryResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance GHC.Show.Show Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance GHC.Read.Read Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteRepository.DeleteRepositoryResponse
instance GHC.Show.Show Amazonka.CodeCommit.DeleteRepository.DeleteRepositoryResponse
instance GHC.Read.Read Amazonka.CodeCommit.DeleteRepository.DeleteRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteRepository.DeleteRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteRepository.DeleteRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DeleteRepository.DeleteRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DeleteRepository.DeleteRepository


-- | Deletes an approval rule from a specified pull request. Approval rules
--   can be deleted from a pull request only if the pull request is open,
--   and if the approval rule was created specifically for a pull request
--   and not generated from an approval rule template associated with the
--   repository where the pull request was created. You cannot delete an
--   approval rule from a merged or closed pull request.
module Amazonka.CodeCommit.DeletePullRequestApprovalRule

-- | <i>See:</i> <a>newDeletePullRequestApprovalRule</a> smart constructor.
data DeletePullRequestApprovalRule
DeletePullRequestApprovalRule' :: Text -> Text -> DeletePullRequestApprovalRule

-- | The system-generated ID of the pull request that contains the approval
--   rule you want to delete.
[$sel:pullRequestId:DeletePullRequestApprovalRule'] :: DeletePullRequestApprovalRule -> Text

-- | The name of the approval rule you want to delete.
[$sel:approvalRuleName:DeletePullRequestApprovalRule'] :: DeletePullRequestApprovalRule -> Text

-- | Create a value of <a>DeletePullRequestApprovalRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:DeletePullRequestApprovalRule'</a>,
--   <a>deletePullRequestApprovalRule_pullRequestId</a> - The
--   system-generated ID of the pull request that contains the approval
--   rule you want to delete.
--   
--   <a>$sel:approvalRuleName:DeletePullRequestApprovalRule'</a>,
--   <a>deletePullRequestApprovalRule_approvalRuleName</a> - The name of
--   the approval rule you want to delete.
newDeletePullRequestApprovalRule :: Text -> Text -> DeletePullRequestApprovalRule

-- | The system-generated ID of the pull request that contains the approval
--   rule you want to delete.
deletePullRequestApprovalRule_pullRequestId :: Lens' DeletePullRequestApprovalRule Text

-- | The name of the approval rule you want to delete.
deletePullRequestApprovalRule_approvalRuleName :: Lens' DeletePullRequestApprovalRule Text

-- | <i>See:</i> <a>newDeletePullRequestApprovalRuleResponse</a> smart
--   constructor.
data DeletePullRequestApprovalRuleResponse
DeletePullRequestApprovalRuleResponse' :: Int -> Text -> DeletePullRequestApprovalRuleResponse

-- | The response's http status code.
[$sel:httpStatus:DeletePullRequestApprovalRuleResponse'] :: DeletePullRequestApprovalRuleResponse -> Int

-- | The ID of the deleted approval rule.
--   
--   If the approval rule was deleted in an earlier API call, the response
--   is 200 OK without content.
[$sel:approvalRuleId:DeletePullRequestApprovalRuleResponse'] :: DeletePullRequestApprovalRuleResponse -> Text

-- | Create a value of <a>DeletePullRequestApprovalRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePullRequestApprovalRuleResponse'</a>,
--   <a>deletePullRequestApprovalRuleResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:approvalRuleId:DeletePullRequestApprovalRuleResponse'</a>,
--   <a>deletePullRequestApprovalRuleResponse_approvalRuleId</a> - The ID
--   of the deleted approval rule.
--   
--   If the approval rule was deleted in an earlier API call, the response
--   is 200 OK without content.
newDeletePullRequestApprovalRuleResponse :: Int -> Text -> DeletePullRequestApprovalRuleResponse

-- | The response's http status code.
deletePullRequestApprovalRuleResponse_httpStatus :: Lens' DeletePullRequestApprovalRuleResponse Int

-- | The ID of the deleted approval rule.
--   
--   If the approval rule was deleted in an earlier API call, the response
--   is 200 OK without content.
deletePullRequestApprovalRuleResponse_approvalRuleId :: Lens' DeletePullRequestApprovalRuleResponse Text
instance GHC.Generics.Generic Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance GHC.Show.Show Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance GHC.Read.Read Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance GHC.Classes.Eq Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance GHC.Generics.Generic Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRuleResponse
instance GHC.Show.Show Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRuleResponse
instance GHC.Read.Read Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRuleResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DeletePullRequestApprovalRule.DeletePullRequestApprovalRule


-- | Deletes a specified file from a specified branch. A commit is created
--   on the branch that contains the revision. The file still exists in the
--   commits earlier to the commit that contains the deletion.
module Amazonka.CodeCommit.DeleteFile

-- | <i>See:</i> <a>newDeleteFile</a> smart constructor.
data DeleteFile
DeleteFile' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> Text -> Text -> DeleteFile

-- | The email address for the commit that deletes the file. If no email
--   address is specified, the email address is left blank.
[$sel:email:DeleteFile'] :: DeleteFile -> Maybe Text

-- | The name of the author of the commit that deletes the file. If no name
--   is specified, the user's ARN is used as the author name and committer
--   name.
[$sel:name:DeleteFile'] :: DeleteFile -> Maybe Text

-- | The commit message you want to include as part of deleting the file.
--   Commit messages are limited to 256 KB. If no message is specified, a
--   default message is used.
[$sel:commitMessage:DeleteFile'] :: DeleteFile -> Maybe Text

-- | If a file is the only object in the folder or directory, specifies
--   whether to delete the folder or directory that contains the file. By
--   default, empty folders are deleted. This includes empty folders that
--   are part of the directory structure. For example, if the path to a
--   file is dir1/dir2/dir3/dir4, and dir2 and dir3 are empty, deleting the
--   last file in dir4 also deletes the empty folders dir4, dir3, and dir2.
[$sel:keepEmptyFolders:DeleteFile'] :: DeleteFile -> Maybe Bool

-- | The name of the repository that contains the file to delete.
[$sel:repositoryName:DeleteFile'] :: DeleteFile -> Text

-- | The name of the branch where the commit that deletes the file is made.
[$sel:branchName:DeleteFile'] :: DeleteFile -> Text

-- | The fully qualified path to the file that to be deleted, including the
--   full name and extension of that file. For example, /examples/file.md
--   is a fully qualified path to a file named file.md in a folder named
--   examples.
[$sel:filePath:DeleteFile'] :: DeleteFile -> Text

-- | The ID of the commit that is the tip of the branch where you want to
--   create the commit that deletes the file. This must be the HEAD commit
--   for the branch. The commit that deletes the file is created from this
--   commit ID.
[$sel:parentCommitId:DeleteFile'] :: DeleteFile -> Text

-- | Create a value of <a>DeleteFile</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:DeleteFile'</a>, <a>deleteFile_email</a> - The email
--   address for the commit that deletes the file. If no email address is
--   specified, the email address is left blank.
--   
--   <a>$sel:name:DeleteFile'</a>, <a>deleteFile_name</a> - The name of the
--   author of the commit that deletes the file. If no name is specified,
--   the user's ARN is used as the author name and committer name.
--   
--   <a>$sel:commitMessage:DeleteFile'</a>, <a>deleteFile_commitMessage</a>
--   - The commit message you want to include as part of deleting the file.
--   Commit messages are limited to 256 KB. If no message is specified, a
--   default message is used.
--   
--   <a>$sel:keepEmptyFolders:DeleteFile'</a>,
--   <a>deleteFile_keepEmptyFolders</a> - If a file is the only object in
--   the folder or directory, specifies whether to delete the folder or
--   directory that contains the file. By default, empty folders are
--   deleted. This includes empty folders that are part of the directory
--   structure. For example, if the path to a file is dir1/dir2/dir3/dir4,
--   and dir2 and dir3 are empty, deleting the last file in dir4 also
--   deletes the empty folders dir4, dir3, and dir2.
--   
--   <a>$sel:repositoryName:DeleteFile'</a>,
--   <a>deleteFile_repositoryName</a> - The name of the repository that
--   contains the file to delete.
--   
--   <a>$sel:branchName:DeleteFile'</a>, <a>deleteFile_branchName</a> - The
--   name of the branch where the commit that deletes the file is made.
--   
--   <a>$sel:filePath:DeleteFile'</a>, <a>deleteFile_filePath</a> - The
--   fully qualified path to the file that to be deleted, including the
--   full name and extension of that file. For example, /examples/file.md
--   is a fully qualified path to a file named file.md in a folder named
--   examples.
--   
--   <a>$sel:parentCommitId:DeleteFile'</a>,
--   <a>deleteFile_parentCommitId</a> - The ID of the commit that is the
--   tip of the branch where you want to create the commit that deletes the
--   file. This must be the HEAD commit for the branch. The commit that
--   deletes the file is created from this commit ID.
newDeleteFile :: Text -> Text -> Text -> Text -> DeleteFile

-- | The email address for the commit that deletes the file. If no email
--   address is specified, the email address is left blank.
deleteFile_email :: Lens' DeleteFile (Maybe Text)

-- | The name of the author of the commit that deletes the file. If no name
--   is specified, the user's ARN is used as the author name and committer
--   name.
deleteFile_name :: Lens' DeleteFile (Maybe Text)

-- | The commit message you want to include as part of deleting the file.
--   Commit messages are limited to 256 KB. If no message is specified, a
--   default message is used.
deleteFile_commitMessage :: Lens' DeleteFile (Maybe Text)

-- | If a file is the only object in the folder or directory, specifies
--   whether to delete the folder or directory that contains the file. By
--   default, empty folders are deleted. This includes empty folders that
--   are part of the directory structure. For example, if the path to a
--   file is dir1/dir2/dir3/dir4, and dir2 and dir3 are empty, deleting the
--   last file in dir4 also deletes the empty folders dir4, dir3, and dir2.
deleteFile_keepEmptyFolders :: Lens' DeleteFile (Maybe Bool)

-- | The name of the repository that contains the file to delete.
deleteFile_repositoryName :: Lens' DeleteFile Text

-- | The name of the branch where the commit that deletes the file is made.
deleteFile_branchName :: Lens' DeleteFile Text

-- | The fully qualified path to the file that to be deleted, including the
--   full name and extension of that file. For example, /examples/file.md
--   is a fully qualified path to a file named file.md in a folder named
--   examples.
deleteFile_filePath :: Lens' DeleteFile Text

-- | The ID of the commit that is the tip of the branch where you want to
--   create the commit that deletes the file. This must be the HEAD commit
--   for the branch. The commit that deletes the file is created from this
--   commit ID.
deleteFile_parentCommitId :: Lens' DeleteFile Text

-- | <i>See:</i> <a>newDeleteFileResponse</a> smart constructor.
data DeleteFileResponse
DeleteFileResponse' :: Int -> Text -> Text -> Text -> Text -> DeleteFileResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteFileResponse'] :: DeleteFileResponse -> Int

-- | The full commit ID of the commit that contains the change that deletes
--   the file.
[$sel:commitId:DeleteFileResponse'] :: DeleteFileResponse -> Text

-- | The blob ID removed from the tree as part of deleting the file.
[$sel:blobId:DeleteFileResponse'] :: DeleteFileResponse -> Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the delete file change.
[$sel:treeId:DeleteFileResponse'] :: DeleteFileResponse -> Text

-- | The fully qualified path to the file to be deleted, including the full
--   name and extension of that file.
[$sel:filePath:DeleteFileResponse'] :: DeleteFileResponse -> Text

-- | Create a value of <a>DeleteFileResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFileResponse'</a>,
--   <a>deleteFileResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:commitId:DeleteFileResponse'</a>,
--   <a>deleteFileResponse_commitId</a> - The full commit ID of the commit
--   that contains the change that deletes the file.
--   
--   <a>$sel:blobId:DeleteFileResponse'</a>,
--   <a>deleteFileResponse_blobId</a> - The blob ID removed from the tree
--   as part of deleting the file.
--   
--   <a>$sel:treeId:DeleteFileResponse'</a>,
--   <a>deleteFileResponse_treeId</a> - The full SHA-1 pointer of the tree
--   information for the commit that contains the delete file change.
--   
--   <a>$sel:filePath:DeleteFile'</a>, <a>deleteFileResponse_filePath</a> -
--   The fully qualified path to the file to be deleted, including the full
--   name and extension of that file.
newDeleteFileResponse :: Int -> Text -> Text -> Text -> Text -> DeleteFileResponse

-- | The response's http status code.
deleteFileResponse_httpStatus :: Lens' DeleteFileResponse Int

-- | The full commit ID of the commit that contains the change that deletes
--   the file.
deleteFileResponse_commitId :: Lens' DeleteFileResponse Text

-- | The blob ID removed from the tree as part of deleting the file.
deleteFileResponse_blobId :: Lens' DeleteFileResponse Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the delete file change.
deleteFileResponse_treeId :: Lens' DeleteFileResponse Text

-- | The fully qualified path to the file to be deleted, including the full
--   name and extension of that file.
deleteFileResponse_filePath :: Lens' DeleteFileResponse Text
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteFile.DeleteFile
instance GHC.Show.Show Amazonka.CodeCommit.DeleteFile.DeleteFile
instance GHC.Read.Read Amazonka.CodeCommit.DeleteFile.DeleteFile
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteFile.DeleteFile
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteFile.DeleteFileResponse
instance GHC.Show.Show Amazonka.CodeCommit.DeleteFile.DeleteFileResponse
instance GHC.Read.Read Amazonka.CodeCommit.DeleteFile.DeleteFileResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteFile.DeleteFileResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DeleteFile.DeleteFile
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteFile.DeleteFileResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DeleteFile.DeleteFile
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteFile.DeleteFile
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DeleteFile.DeleteFile
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DeleteFile.DeleteFile
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DeleteFile.DeleteFile
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DeleteFile.DeleteFile


-- | Deletes the content of a comment made on a change, file, or commit in
--   a repository.
module Amazonka.CodeCommit.DeleteCommentContent

-- | <i>See:</i> <a>newDeleteCommentContent</a> smart constructor.
data DeleteCommentContent
DeleteCommentContent' :: Text -> DeleteCommentContent

-- | The unique, system-generated ID of the comment. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
[$sel:commentId:DeleteCommentContent'] :: DeleteCommentContent -> Text

-- | Create a value of <a>DeleteCommentContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commentId:DeleteCommentContent'</a>,
--   <a>deleteCommentContent_commentId</a> - The unique, system-generated
--   ID of the comment. To get this ID, use GetCommentsForComparedCommit or
--   GetCommentsForPullRequest.
newDeleteCommentContent :: Text -> DeleteCommentContent

-- | The unique, system-generated ID of the comment. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
deleteCommentContent_commentId :: Lens' DeleteCommentContent Text

-- | <i>See:</i> <a>newDeleteCommentContentResponse</a> smart constructor.
data DeleteCommentContentResponse
DeleteCommentContentResponse' :: Maybe Comment -> Int -> DeleteCommentContentResponse

-- | Information about the comment you just deleted.
[$sel:comment:DeleteCommentContentResponse'] :: DeleteCommentContentResponse -> Maybe Comment

-- | The response's http status code.
[$sel:httpStatus:DeleteCommentContentResponse'] :: DeleteCommentContentResponse -> Int

-- | Create a value of <a>DeleteCommentContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:DeleteCommentContentResponse'</a>,
--   <a>deleteCommentContentResponse_comment</a> - Information about the
--   comment you just deleted.
--   
--   <a>$sel:httpStatus:DeleteCommentContentResponse'</a>,
--   <a>deleteCommentContentResponse_httpStatus</a> - The response's http
--   status code.
newDeleteCommentContentResponse :: Int -> DeleteCommentContentResponse

-- | Information about the comment you just deleted.
deleteCommentContentResponse_comment :: Lens' DeleteCommentContentResponse (Maybe Comment)

-- | The response's http status code.
deleteCommentContentResponse_httpStatus :: Lens' DeleteCommentContentResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance GHC.Show.Show Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance GHC.Read.Read Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContentResponse
instance GHC.Show.Show Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContentResponse
instance GHC.Read.Read Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContentResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContentResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContentResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DeleteCommentContent.DeleteCommentContent


-- | Deletes a branch from a repository, unless that branch is the default
--   branch for the repository.
module Amazonka.CodeCommit.DeleteBranch

-- | Represents the input of a delete branch operation.
--   
--   <i>See:</i> <a>newDeleteBranch</a> smart constructor.
data DeleteBranch
DeleteBranch' :: Text -> Text -> DeleteBranch

-- | The name of the repository that contains the branch to be deleted.
[$sel:repositoryName:DeleteBranch'] :: DeleteBranch -> Text

-- | The name of the branch to delete.
[$sel:branchName:DeleteBranch'] :: DeleteBranch -> Text

-- | Create a value of <a>DeleteBranch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:DeleteBranch'</a>,
--   <a>deleteBranch_repositoryName</a> - The name of the repository that
--   contains the branch to be deleted.
--   
--   <a>$sel:branchName:DeleteBranch'</a>, <a>deleteBranch_branchName</a> -
--   The name of the branch to delete.
newDeleteBranch :: Text -> Text -> DeleteBranch

-- | The name of the repository that contains the branch to be deleted.
deleteBranch_repositoryName :: Lens' DeleteBranch Text

-- | The name of the branch to delete.
deleteBranch_branchName :: Lens' DeleteBranch Text

-- | Represents the output of a delete branch operation.
--   
--   <i>See:</i> <a>newDeleteBranchResponse</a> smart constructor.
data DeleteBranchResponse
DeleteBranchResponse' :: Maybe BranchInfo -> Int -> DeleteBranchResponse

-- | Information about the branch deleted by the operation, including the
--   branch name and the commit ID that was the tip of the branch.
[$sel:deletedBranch:DeleteBranchResponse'] :: DeleteBranchResponse -> Maybe BranchInfo

-- | The response's http status code.
[$sel:httpStatus:DeleteBranchResponse'] :: DeleteBranchResponse -> Int

-- | Create a value of <a>DeleteBranchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deletedBranch:DeleteBranchResponse'</a>,
--   <a>deleteBranchResponse_deletedBranch</a> - Information about the
--   branch deleted by the operation, including the branch name and the
--   commit ID that was the tip of the branch.
--   
--   <a>$sel:httpStatus:DeleteBranchResponse'</a>,
--   <a>deleteBranchResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBranchResponse :: Int -> DeleteBranchResponse

-- | Information about the branch deleted by the operation, including the
--   branch name and the commit ID that was the tip of the branch.
deleteBranchResponse_deletedBranch :: Lens' DeleteBranchResponse (Maybe BranchInfo)

-- | The response's http status code.
deleteBranchResponse_httpStatus :: Lens' DeleteBranchResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance GHC.Show.Show Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance GHC.Read.Read Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteBranch.DeleteBranchResponse
instance GHC.Show.Show Amazonka.CodeCommit.DeleteBranch.DeleteBranchResponse
instance GHC.Read.Read Amazonka.CodeCommit.DeleteBranch.DeleteBranchResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteBranch.DeleteBranchResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteBranch.DeleteBranchResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DeleteBranch.DeleteBranch
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DeleteBranch.DeleteBranch


-- | Deletes a specified approval rule template. Deleting a template does
--   not remove approval rules on pull requests already created with the
--   template.
module Amazonka.CodeCommit.DeleteApprovalRuleTemplate

-- | <i>See:</i> <a>newDeleteApprovalRuleTemplate</a> smart constructor.
data DeleteApprovalRuleTemplate
DeleteApprovalRuleTemplate' :: Text -> DeleteApprovalRuleTemplate

-- | The name of the approval rule template to delete.
[$sel:approvalRuleTemplateName:DeleteApprovalRuleTemplate'] :: DeleteApprovalRuleTemplate -> Text

-- | Create a value of <a>DeleteApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleTemplateName:DeleteApprovalRuleTemplate'</a>,
--   <a>deleteApprovalRuleTemplate_approvalRuleTemplateName</a> - The name
--   of the approval rule template to delete.
newDeleteApprovalRuleTemplate :: Text -> DeleteApprovalRuleTemplate

-- | The name of the approval rule template to delete.
deleteApprovalRuleTemplate_approvalRuleTemplateName :: Lens' DeleteApprovalRuleTemplate Text

-- | <i>See:</i> <a>newDeleteApprovalRuleTemplateResponse</a> smart
--   constructor.
data DeleteApprovalRuleTemplateResponse
DeleteApprovalRuleTemplateResponse' :: Int -> Text -> DeleteApprovalRuleTemplateResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApprovalRuleTemplateResponse'] :: DeleteApprovalRuleTemplateResponse -> Int

-- | The system-generated ID of the deleted approval rule template. If the
--   template has been previously deleted, the only response is a 200 OK.
[$sel:approvalRuleTemplateId:DeleteApprovalRuleTemplateResponse'] :: DeleteApprovalRuleTemplateResponse -> Text

-- | Create a value of <a>DeleteApprovalRuleTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApprovalRuleTemplateResponse'</a>,
--   <a>deleteApprovalRuleTemplateResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:approvalRuleTemplateId:DeleteApprovalRuleTemplateResponse'</a>,
--   <a>deleteApprovalRuleTemplateResponse_approvalRuleTemplateId</a> - The
--   system-generated ID of the deleted approval rule template. If the
--   template has been previously deleted, the only response is a 200 OK.
newDeleteApprovalRuleTemplateResponse :: Int -> Text -> DeleteApprovalRuleTemplateResponse

-- | The response's http status code.
deleteApprovalRuleTemplateResponse_httpStatus :: Lens' DeleteApprovalRuleTemplateResponse Int

-- | The system-generated ID of the deleted approval rule template. If the
--   template has been previously deleted, the only response is a 200 OK.
deleteApprovalRuleTemplateResponse_approvalRuleTemplateId :: Lens' DeleteApprovalRuleTemplateResponse Text
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance GHC.Show.Show Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance GHC.Read.Read Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplateResponse
instance GHC.Show.Show Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplateResponse
instance GHC.Read.Read Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplateResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.DeleteApprovalRuleTemplate.DeleteApprovalRuleTemplate


-- | Creates an unreferenced commit that represents the result of merging
--   two branches using a specified merge strategy. This can help you
--   determine the outcome of a potential merge. This API cannot be used
--   with the fast-forward merge strategy because that strategy does not
--   create a merge commit.
--   
--   This unreferenced merge commit can only be accessed using the
--   GetCommit API or through git commands such as git fetch. To retrieve
--   this commit, you must specify its commit ID or otherwise reference it.
module Amazonka.CodeCommit.CreateUnreferencedMergeCommit

-- | <i>See:</i> <a>newCreateUnreferencedMergeCommit</a> smart constructor.
data CreateUnreferencedMergeCommit
CreateUnreferencedMergeCommit' :: Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Text -> Text -> Text -> MergeOptionTypeEnum -> CreateUnreferencedMergeCommit

-- | The email address for the person who created the unreferenced commit.
[$sel:email:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Maybe Text

-- | The name of the author who created the unreferenced commit. This
--   information is used as both the author and committer for the commit.
[$sel:authorName:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Maybe Text

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Maybe ConflictDetailLevelTypeEnum

-- | The commit message for the unreferenced commit.
[$sel:commitMessage:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Maybe Text

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
[$sel:conflictResolution:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Maybe ConflictResolution

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Maybe ConflictResolutionStrategyTypeEnum

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If this is specified
--   as true, a .gitkeep file is created for empty folders. The default is
--   false.
[$sel:keepEmptyFolders:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Maybe Bool

-- | The name of the repository where you want to create the unreferenced
--   merge commit.
[$sel:repositoryName:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> Text

-- | The merge option or strategy you want to use to merge the code.
[$sel:mergeOption:CreateUnreferencedMergeCommit'] :: CreateUnreferencedMergeCommit -> MergeOptionTypeEnum

-- | Create a value of <a>CreateUnreferencedMergeCommit</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_email</a> - The email address for the
--   person who created the unreferenced commit.
--   
--   <a>$sel:authorName:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_authorName</a> - The name of the
--   author who created the unreferenced commit. This information is used
--   as both the author and committer for the commit.
--   
--   <a>$sel:conflictDetailLevel:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_conflictDetailLevel</a> - The level
--   of conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_commitMessage</a> - The commit
--   message for the unreferenced commit.
--   
--   <a>$sel:conflictResolution:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_conflictResolution</a> - If AUTOMERGE
--   is the conflict resolution strategy, a list of inputs to use when
--   resolving conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_conflictResolutionStrategy</a> -
--   Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
--   
--   <a>$sel:keepEmptyFolders:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_keepEmptyFolders</a> - If the commit
--   contains deletions, whether to keep a folder or folder structure if
--   the changes leave the folders empty. If this is specified as true, a
--   .gitkeep file is created for empty folders. The default is false.
--   
--   <a>$sel:repositoryName:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_repositoryName</a> - The name of the
--   repository where you want to create the unreferenced merge commit.
--   
--   <a>$sel:sourceCommitSpecifier:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_sourceCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_destinationCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:mergeOption:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_mergeOption</a> - The merge option or
--   strategy you want to use to merge the code.
newCreateUnreferencedMergeCommit :: Text -> Text -> Text -> MergeOptionTypeEnum -> CreateUnreferencedMergeCommit

-- | The email address for the person who created the unreferenced commit.
createUnreferencedMergeCommit_email :: Lens' CreateUnreferencedMergeCommit (Maybe Text)

-- | The name of the author who created the unreferenced commit. This
--   information is used as both the author and committer for the commit.
createUnreferencedMergeCommit_authorName :: Lens' CreateUnreferencedMergeCommit (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
createUnreferencedMergeCommit_conflictDetailLevel :: Lens' CreateUnreferencedMergeCommit (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message for the unreferenced commit.
createUnreferencedMergeCommit_commitMessage :: Lens' CreateUnreferencedMergeCommit (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
createUnreferencedMergeCommit_conflictResolution :: Lens' CreateUnreferencedMergeCommit (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
createUnreferencedMergeCommit_conflictResolutionStrategy :: Lens' CreateUnreferencedMergeCommit (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If this is specified
--   as true, a .gitkeep file is created for empty folders. The default is
--   false.
createUnreferencedMergeCommit_keepEmptyFolders :: Lens' CreateUnreferencedMergeCommit (Maybe Bool)

-- | The name of the repository where you want to create the unreferenced
--   merge commit.
createUnreferencedMergeCommit_repositoryName :: Lens' CreateUnreferencedMergeCommit Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
createUnreferencedMergeCommit_sourceCommitSpecifier :: Lens' CreateUnreferencedMergeCommit Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
createUnreferencedMergeCommit_destinationCommitSpecifier :: Lens' CreateUnreferencedMergeCommit Text

-- | The merge option or strategy you want to use to merge the code.
createUnreferencedMergeCommit_mergeOption :: Lens' CreateUnreferencedMergeCommit MergeOptionTypeEnum

-- | <i>See:</i> <a>newCreateUnreferencedMergeCommitResponse</a> smart
--   constructor.
data CreateUnreferencedMergeCommitResponse
CreateUnreferencedMergeCommitResponse' :: Maybe Text -> Maybe Text -> Int -> CreateUnreferencedMergeCommitResponse

-- | The full commit ID of the commit that contains your merge results.
[$sel:commitId:CreateUnreferencedMergeCommitResponse'] :: CreateUnreferencedMergeCommitResponse -> Maybe Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the merge results.
[$sel:treeId:CreateUnreferencedMergeCommitResponse'] :: CreateUnreferencedMergeCommitResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateUnreferencedMergeCommitResponse'] :: CreateUnreferencedMergeCommitResponse -> Int

-- | Create a value of <a>CreateUnreferencedMergeCommitResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:CreateUnreferencedMergeCommitResponse'</a>,
--   <a>createUnreferencedMergeCommitResponse_commitId</a> - The full
--   commit ID of the commit that contains your merge results.
--   
--   <a>$sel:treeId:CreateUnreferencedMergeCommitResponse'</a>,
--   <a>createUnreferencedMergeCommitResponse_treeId</a> - The full SHA-1
--   pointer of the tree information for the commit that contains the merge
--   results.
--   
--   <a>$sel:httpStatus:CreateUnreferencedMergeCommitResponse'</a>,
--   <a>createUnreferencedMergeCommitResponse_httpStatus</a> - The
--   response's http status code.
newCreateUnreferencedMergeCommitResponse :: Int -> CreateUnreferencedMergeCommitResponse

-- | The full commit ID of the commit that contains your merge results.
createUnreferencedMergeCommitResponse_commitId :: Lens' CreateUnreferencedMergeCommitResponse (Maybe Text)

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the merge results.
createUnreferencedMergeCommitResponse_treeId :: Lens' CreateUnreferencedMergeCommitResponse (Maybe Text)

-- | The response's http status code.
createUnreferencedMergeCommitResponse_httpStatus :: Lens' CreateUnreferencedMergeCommitResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance GHC.Show.Show Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance GHC.Read.Read Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommitResponse
instance GHC.Show.Show Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommitResponse
instance GHC.Read.Read Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommitResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommitResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommitResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.CreateUnreferencedMergeCommit.CreateUnreferencedMergeCommit


-- | Creates a new, empty repository.
module Amazonka.CodeCommit.CreateRepository

-- | Represents the input of a create repository operation.
--   
--   <i>See:</i> <a>newCreateRepository</a> smart constructor.
data CreateRepository
CreateRepository' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateRepository

-- | A comment or description about the new repository.
--   
--   The description field for a repository accepts all HTML characters and
--   all valid Unicode characters. Applications that do not HTML-encode the
--   description and display it in a webpage can expose users to
--   potentially malicious code. Make sure that you HTML-encode the
--   description field in any application that uses this API to display the
--   repository description on a webpage.
[$sel:repositoryDescription:CreateRepository'] :: CreateRepository -> Maybe Text

-- | One or more tag key-value pairs to use when tagging this repository.
[$sel:tags:CreateRepository'] :: CreateRepository -> Maybe (HashMap Text Text)

-- | The name of the new repository to be created.
--   
--   The repository name must be unique across the calling AWS account.
--   Repository names are limited to 100 alphanumeric, dash, and underscore
--   characters, and cannot include certain characters. For more
--   information about the limits on repository names, see <a>Limits</a> in
--   the <i>AWS CodeCommit User Guide</i>. The suffix .git is prohibited.
[$sel:repositoryName:CreateRepository'] :: CreateRepository -> Text

-- | Create a value of <a>CreateRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryDescription:CreateRepository'</a>,
--   <a>createRepository_repositoryDescription</a> - A comment or
--   description about the new repository.
--   
--   The description field for a repository accepts all HTML characters and
--   all valid Unicode characters. Applications that do not HTML-encode the
--   description and display it in a webpage can expose users to
--   potentially malicious code. Make sure that you HTML-encode the
--   description field in any application that uses this API to display the
--   repository description on a webpage.
--   
--   <a>$sel:tags:CreateRepository'</a>, <a>createRepository_tags</a> - One
--   or more tag key-value pairs to use when tagging this repository.
--   
--   <a>$sel:repositoryName:CreateRepository'</a>,
--   <a>createRepository_repositoryName</a> - The name of the new
--   repository to be created.
--   
--   The repository name must be unique across the calling AWS account.
--   Repository names are limited to 100 alphanumeric, dash, and underscore
--   characters, and cannot include certain characters. For more
--   information about the limits on repository names, see <a>Limits</a> in
--   the <i>AWS CodeCommit User Guide</i>. The suffix .git is prohibited.
newCreateRepository :: Text -> CreateRepository

-- | A comment or description about the new repository.
--   
--   The description field for a repository accepts all HTML characters and
--   all valid Unicode characters. Applications that do not HTML-encode the
--   description and display it in a webpage can expose users to
--   potentially malicious code. Make sure that you HTML-encode the
--   description field in any application that uses this API to display the
--   repository description on a webpage.
createRepository_repositoryDescription :: Lens' CreateRepository (Maybe Text)

-- | One or more tag key-value pairs to use when tagging this repository.
createRepository_tags :: Lens' CreateRepository (Maybe (HashMap Text Text))

-- | The name of the new repository to be created.
--   
--   The repository name must be unique across the calling AWS account.
--   Repository names are limited to 100 alphanumeric, dash, and underscore
--   characters, and cannot include certain characters. For more
--   information about the limits on repository names, see <a>Limits</a> in
--   the <i>AWS CodeCommit User Guide</i>. The suffix .git is prohibited.
createRepository_repositoryName :: Lens' CreateRepository Text

-- | Represents the output of a create repository operation.
--   
--   <i>See:</i> <a>newCreateRepositoryResponse</a> smart constructor.
data CreateRepositoryResponse
CreateRepositoryResponse' :: Maybe RepositoryMetadata -> Int -> CreateRepositoryResponse

-- | Information about the newly created repository.
[$sel:repositoryMetadata:CreateRepositoryResponse'] :: CreateRepositoryResponse -> Maybe RepositoryMetadata

-- | The response's http status code.
[$sel:httpStatus:CreateRepositoryResponse'] :: CreateRepositoryResponse -> Int

-- | Create a value of <a>CreateRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryMetadata:CreateRepositoryResponse'</a>,
--   <a>createRepositoryResponse_repositoryMetadata</a> - Information about
--   the newly created repository.
--   
--   <a>$sel:httpStatus:CreateRepositoryResponse'</a>,
--   <a>createRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newCreateRepositoryResponse :: Int -> CreateRepositoryResponse

-- | Information about the newly created repository.
createRepositoryResponse_repositoryMetadata :: Lens' CreateRepositoryResponse (Maybe RepositoryMetadata)

-- | The response's http status code.
createRepositoryResponse_httpStatus :: Lens' CreateRepositoryResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateRepository.CreateRepository
instance GHC.Show.Show Amazonka.CodeCommit.CreateRepository.CreateRepository
instance GHC.Read.Read Amazonka.CodeCommit.CreateRepository.CreateRepository
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateRepository.CreateRepository
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateRepository.CreateRepositoryResponse
instance GHC.Show.Show Amazonka.CodeCommit.CreateRepository.CreateRepositoryResponse
instance GHC.Read.Read Amazonka.CodeCommit.CreateRepository.CreateRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateRepository.CreateRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.CreateRepository.CreateRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateRepository.CreateRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.CreateRepository.CreateRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateRepository.CreateRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.CreateRepository.CreateRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.CreateRepository.CreateRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.CreateRepository.CreateRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.CreateRepository.CreateRepository


-- | Creates an approval rule for a pull request.
module Amazonka.CodeCommit.CreatePullRequestApprovalRule

-- | <i>See:</i> <a>newCreatePullRequestApprovalRule</a> smart constructor.
data CreatePullRequestApprovalRule
CreatePullRequestApprovalRule' :: Text -> Text -> Text -> CreatePullRequestApprovalRule

-- | The system-generated ID of the pull request for which you want to
--   create the approval rule.
[$sel:pullRequestId:CreatePullRequestApprovalRule'] :: CreatePullRequestApprovalRule -> Text

-- | The name for the approval rule.
[$sel:approvalRuleName:CreatePullRequestApprovalRule'] :: CreatePullRequestApprovalRule -> Text

-- | The content of the approval rule, including the number of approvals
--   needed and the structure of an approval pool defined for approvals, if
--   any. For more information about approval pools, see the AWS CodeCommit
--   User Guide.
--   
--   When you create the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following would
--   be counted as approvals coming from that user:<ul><li>An IAM user in
--   the account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
[$sel:approvalRuleContent:CreatePullRequestApprovalRule'] :: CreatePullRequestApprovalRule -> Text

-- | Create a value of <a>CreatePullRequestApprovalRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:CreatePullRequestApprovalRule'</a>,
--   <a>createPullRequestApprovalRule_pullRequestId</a> - The
--   system-generated ID of the pull request for which you want to create
--   the approval rule.
--   
--   <a>$sel:approvalRuleName:CreatePullRequestApprovalRule'</a>,
--   <a>createPullRequestApprovalRule_approvalRuleName</a> - The name for
--   the approval rule.
--   
--   <a>$sel:approvalRuleContent:CreatePullRequestApprovalRule'</a>,
--   <a>createPullRequestApprovalRule_approvalRuleContent</a> - The content
--   of the approval rule, including the number of approvals needed and the
--   structure of an approval pool defined for approvals, if any. For more
--   information about approval pools, see the AWS CodeCommit User Guide.
--   
--   When you create the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following would
--   be counted as approvals coming from that user:<ul><li>An IAM user in
--   the account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newCreatePullRequestApprovalRule :: Text -> Text -> Text -> CreatePullRequestApprovalRule

-- | The system-generated ID of the pull request for which you want to
--   create the approval rule.
createPullRequestApprovalRule_pullRequestId :: Lens' CreatePullRequestApprovalRule Text

-- | The name for the approval rule.
createPullRequestApprovalRule_approvalRuleName :: Lens' CreatePullRequestApprovalRule Text

-- | The content of the approval rule, including the number of approvals
--   needed and the structure of an approval pool defined for approvals, if
--   any. For more information about approval pools, see the AWS CodeCommit
--   User Guide.
--   
--   When you create the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following would
--   be counted as approvals coming from that user:<ul><li>An IAM user in
--   the account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
createPullRequestApprovalRule_approvalRuleContent :: Lens' CreatePullRequestApprovalRule Text

-- | <i>See:</i> <a>newCreatePullRequestApprovalRuleResponse</a> smart
--   constructor.
data CreatePullRequestApprovalRuleResponse
CreatePullRequestApprovalRuleResponse' :: Int -> ApprovalRule -> CreatePullRequestApprovalRuleResponse

-- | The response's http status code.
[$sel:httpStatus:CreatePullRequestApprovalRuleResponse'] :: CreatePullRequestApprovalRuleResponse -> Int

-- | Information about the created approval rule.
[$sel:approvalRule:CreatePullRequestApprovalRuleResponse'] :: CreatePullRequestApprovalRuleResponse -> ApprovalRule

-- | Create a value of <a>CreatePullRequestApprovalRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePullRequestApprovalRuleResponse'</a>,
--   <a>createPullRequestApprovalRuleResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:approvalRule:CreatePullRequestApprovalRuleResponse'</a>,
--   <a>createPullRequestApprovalRuleResponse_approvalRule</a> -
--   Information about the created approval rule.
newCreatePullRequestApprovalRuleResponse :: Int -> ApprovalRule -> CreatePullRequestApprovalRuleResponse

-- | The response's http status code.
createPullRequestApprovalRuleResponse_httpStatus :: Lens' CreatePullRequestApprovalRuleResponse Int

-- | Information about the created approval rule.
createPullRequestApprovalRuleResponse_approvalRule :: Lens' CreatePullRequestApprovalRuleResponse ApprovalRule
instance GHC.Generics.Generic Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance GHC.Show.Show Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance GHC.Read.Read Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance GHC.Classes.Eq Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance GHC.Generics.Generic Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRuleResponse
instance GHC.Show.Show Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRuleResponse
instance GHC.Read.Read Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRuleResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRuleResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRuleResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.CreatePullRequestApprovalRule.CreatePullRequestApprovalRule


-- | Creates a pull request in the specified repository.
module Amazonka.CodeCommit.CreatePullRequest

-- | <i>See:</i> <a>newCreatePullRequest</a> smart constructor.
data CreatePullRequest
CreatePullRequest' :: Maybe Text -> Maybe Text -> Text -> [Target] -> CreatePullRequest

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
--   
--   The AWS SDKs prepopulate client request tokens. If you are using an
--   AWS SDK, an idempotency token is created for you.
[$sel:clientRequestToken:CreatePullRequest'] :: CreatePullRequest -> Maybe Text

-- | A description of the pull request.
[$sel:description:CreatePullRequest'] :: CreatePullRequest -> Maybe Text

-- | The title of the pull request. This title is used to identify the pull
--   request to other users in the repository.
[$sel:title:CreatePullRequest'] :: CreatePullRequest -> Text

-- | The targets for the pull request, including the source of the code to
--   be reviewed (the source branch) and the destination where the creator
--   of the pull request intends the code to be merged after the pull
--   request is closed (the destination branch).
[$sel:targets:CreatePullRequest'] :: CreatePullRequest -> [Target]

-- | Create a value of <a>CreatePullRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:CreatePullRequest'</a>,
--   <a>createPullRequest_clientRequestToken</a> - A unique,
--   client-generated idempotency token that, when provided in a request,
--   ensures the request cannot be repeated with a changed parameter. If a
--   request is received with the same parameters and a token is included,
--   the request returns information about the initial request that used
--   that token.
--   
--   The AWS SDKs prepopulate client request tokens. If you are using an
--   AWS SDK, an idempotency token is created for you.
--   
--   <a>$sel:description:CreatePullRequest'</a>,
--   <a>createPullRequest_description</a> - A description of the pull
--   request.
--   
--   <a>$sel:title:CreatePullRequest'</a>, <a>createPullRequest_title</a> -
--   The title of the pull request. This title is used to identify the pull
--   request to other users in the repository.
--   
--   <a>$sel:targets:CreatePullRequest'</a>,
--   <a>createPullRequest_targets</a> - The targets for the pull request,
--   including the source of the code to be reviewed (the source branch)
--   and the destination where the creator of the pull request intends the
--   code to be merged after the pull request is closed (the destination
--   branch).
newCreatePullRequest :: Text -> CreatePullRequest

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
--   
--   The AWS SDKs prepopulate client request tokens. If you are using an
--   AWS SDK, an idempotency token is created for you.
createPullRequest_clientRequestToken :: Lens' CreatePullRequest (Maybe Text)

-- | A description of the pull request.
createPullRequest_description :: Lens' CreatePullRequest (Maybe Text)

-- | The title of the pull request. This title is used to identify the pull
--   request to other users in the repository.
createPullRequest_title :: Lens' CreatePullRequest Text

-- | The targets for the pull request, including the source of the code to
--   be reviewed (the source branch) and the destination where the creator
--   of the pull request intends the code to be merged after the pull
--   request is closed (the destination branch).
createPullRequest_targets :: Lens' CreatePullRequest [Target]

-- | <i>See:</i> <a>newCreatePullRequestResponse</a> smart constructor.
data CreatePullRequestResponse
CreatePullRequestResponse' :: Int -> PullRequest -> CreatePullRequestResponse

-- | The response's http status code.
[$sel:httpStatus:CreatePullRequestResponse'] :: CreatePullRequestResponse -> Int

-- | Information about the newly created pull request.
[$sel:pullRequest:CreatePullRequestResponse'] :: CreatePullRequestResponse -> PullRequest

-- | Create a value of <a>CreatePullRequestResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePullRequestResponse'</a>,
--   <a>createPullRequestResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:pullRequest:CreatePullRequestResponse'</a>,
--   <a>createPullRequestResponse_pullRequest</a> - Information about the
--   newly created pull request.
newCreatePullRequestResponse :: Int -> PullRequest -> CreatePullRequestResponse

-- | The response's http status code.
createPullRequestResponse_httpStatus :: Lens' CreatePullRequestResponse Int

-- | Information about the newly created pull request.
createPullRequestResponse_pullRequest :: Lens' CreatePullRequestResponse PullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance GHC.Show.Show Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance GHC.Read.Read Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance GHC.Classes.Eq Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.CreatePullRequest.CreatePullRequestResponse
instance GHC.Show.Show Amazonka.CodeCommit.CreatePullRequest.CreatePullRequestResponse
instance GHC.Read.Read Amazonka.CodeCommit.CreatePullRequest.CreatePullRequestResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.CreatePullRequest.CreatePullRequestResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreatePullRequest.CreatePullRequestResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.CreatePullRequest.CreatePullRequest


-- | Creates a commit for a repository on the tip of a specified branch.
module Amazonka.CodeCommit.CreateCommit

-- | <i>See:</i> <a>newCreateCommit</a> smart constructor.
data CreateCommit
CreateCommit' :: Maybe [SetFileModeEntry] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [DeleteFileEntry] -> Maybe [PutFileEntry] -> Maybe Text -> Maybe Bool -> Text -> Text -> CreateCommit

-- | The file modes to update for files in this commit.
[$sel:setFileModes:CreateCommit'] :: CreateCommit -> Maybe [SetFileModeEntry]

-- | The email address of the person who created the commit.
[$sel:email:CreateCommit'] :: CreateCommit -> Maybe Text

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
[$sel:authorName:CreateCommit'] :: CreateCommit -> Maybe Text

-- | The ID of the commit that is the parent of the commit you create. Not
--   required if this is an empty repository.
[$sel:parentCommitId:CreateCommit'] :: CreateCommit -> Maybe Text

-- | The files to delete in this commit. These files still exist in earlier
--   commits.
[$sel:deleteFiles:CreateCommit'] :: CreateCommit -> Maybe [DeleteFileEntry]

-- | The files to add or update in this commit.
[$sel:putFiles:CreateCommit'] :: CreateCommit -> Maybe [PutFileEntry]

-- | The commit message you want to include in the commit. Commit messages
--   are limited to 256 KB. If no message is specified, a default message
--   is used.
[$sel:commitMessage:CreateCommit'] :: CreateCommit -> Maybe Text

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a ..gitkeep
--   file is created for empty folders. The default is false.
[$sel:keepEmptyFolders:CreateCommit'] :: CreateCommit -> Maybe Bool

-- | The name of the repository where you create the commit.
[$sel:repositoryName:CreateCommit'] :: CreateCommit -> Text

-- | The name of the branch where you create the commit.
[$sel:branchName:CreateCommit'] :: CreateCommit -> Text

-- | Create a value of <a>CreateCommit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:setFileModes:CreateCommit'</a>,
--   <a>createCommit_setFileModes</a> - The file modes to update for files
--   in this commit.
--   
--   <a>$sel:email:CreateCommit'</a>, <a>createCommit_email</a> - The email
--   address of the person who created the commit.
--   
--   <a>$sel:authorName:CreateCommit'</a>, <a>createCommit_authorName</a> -
--   The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
--   
--   <a>$sel:parentCommitId:CreateCommit'</a>,
--   <a>createCommit_parentCommitId</a> - The ID of the commit that is the
--   parent of the commit you create. Not required if this is an empty
--   repository.
--   
--   <a>$sel:deleteFiles:CreateCommit'</a>, <a>createCommit_deleteFiles</a>
--   - The files to delete in this commit. These files still exist in
--   earlier commits.
--   
--   <a>$sel:putFiles:CreateCommit'</a>, <a>createCommit_putFiles</a> - The
--   files to add or update in this commit.
--   
--   <a>$sel:commitMessage:CreateCommit'</a>,
--   <a>createCommit_commitMessage</a> - The commit message you want to
--   include in the commit. Commit messages are limited to 256 KB. If no
--   message is specified, a default message is used.
--   
--   <a>$sel:keepEmptyFolders:CreateCommit'</a>,
--   <a>createCommit_keepEmptyFolders</a> - If the commit contains
--   deletions, whether to keep a folder or folder structure if the changes
--   leave the folders empty. If true, a ..gitkeep file is created for
--   empty folders. The default is false.
--   
--   <a>$sel:repositoryName:CreateCommit'</a>,
--   <a>createCommit_repositoryName</a> - The name of the repository where
--   you create the commit.
--   
--   <a>$sel:branchName:CreateCommit'</a>, <a>createCommit_branchName</a> -
--   The name of the branch where you create the commit.
newCreateCommit :: Text -> Text -> CreateCommit

-- | The file modes to update for files in this commit.
createCommit_setFileModes :: Lens' CreateCommit (Maybe [SetFileModeEntry])

-- | The email address of the person who created the commit.
createCommit_email :: Lens' CreateCommit (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
createCommit_authorName :: Lens' CreateCommit (Maybe Text)

-- | The ID of the commit that is the parent of the commit you create. Not
--   required if this is an empty repository.
createCommit_parentCommitId :: Lens' CreateCommit (Maybe Text)

-- | The files to delete in this commit. These files still exist in earlier
--   commits.
createCommit_deleteFiles :: Lens' CreateCommit (Maybe [DeleteFileEntry])

-- | The files to add or update in this commit.
createCommit_putFiles :: Lens' CreateCommit (Maybe [PutFileEntry])

-- | The commit message you want to include in the commit. Commit messages
--   are limited to 256 KB. If no message is specified, a default message
--   is used.
createCommit_commitMessage :: Lens' CreateCommit (Maybe Text)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a ..gitkeep
--   file is created for empty folders. The default is false.
createCommit_keepEmptyFolders :: Lens' CreateCommit (Maybe Bool)

-- | The name of the repository where you create the commit.
createCommit_repositoryName :: Lens' CreateCommit Text

-- | The name of the branch where you create the commit.
createCommit_branchName :: Lens' CreateCommit Text

-- | <i>See:</i> <a>newCreateCommitResponse</a> smart constructor.
data CreateCommitResponse
CreateCommitResponse' :: Maybe Text -> Maybe Text -> Maybe [FileMetadata] -> Maybe [FileMetadata] -> Maybe [FileMetadata] -> Int -> CreateCommitResponse

-- | The full commit ID of the commit that contains your committed file
--   changes.
[$sel:commitId:CreateCommitResponse'] :: CreateCommitResponse -> Maybe Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the commited file changes.
[$sel:treeId:CreateCommitResponse'] :: CreateCommitResponse -> Maybe Text

-- | The files added as part of the committed file changes.
[$sel:filesAdded:CreateCommitResponse'] :: CreateCommitResponse -> Maybe [FileMetadata]

-- | The files updated as part of the commited file changes.
[$sel:filesUpdated:CreateCommitResponse'] :: CreateCommitResponse -> Maybe [FileMetadata]

-- | The files deleted as part of the committed file changes.
[$sel:filesDeleted:CreateCommitResponse'] :: CreateCommitResponse -> Maybe [FileMetadata]

-- | The response's http status code.
[$sel:httpStatus:CreateCommitResponse'] :: CreateCommitResponse -> Int

-- | Create a value of <a>CreateCommitResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:CreateCommitResponse'</a>,
--   <a>createCommitResponse_commitId</a> - The full commit ID of the
--   commit that contains your committed file changes.
--   
--   <a>$sel:treeId:CreateCommitResponse'</a>,
--   <a>createCommitResponse_treeId</a> - The full SHA-1 pointer of the
--   tree information for the commit that contains the commited file
--   changes.
--   
--   <a>$sel:filesAdded:CreateCommitResponse'</a>,
--   <a>createCommitResponse_filesAdded</a> - The files added as part of
--   the committed file changes.
--   
--   <a>$sel:filesUpdated:CreateCommitResponse'</a>,
--   <a>createCommitResponse_filesUpdated</a> - The files updated as part
--   of the commited file changes.
--   
--   <a>$sel:filesDeleted:CreateCommitResponse'</a>,
--   <a>createCommitResponse_filesDeleted</a> - The files deleted as part
--   of the committed file changes.
--   
--   <a>$sel:httpStatus:CreateCommitResponse'</a>,
--   <a>createCommitResponse_httpStatus</a> - The response's http status
--   code.
newCreateCommitResponse :: Int -> CreateCommitResponse

-- | The full commit ID of the commit that contains your committed file
--   changes.
createCommitResponse_commitId :: Lens' CreateCommitResponse (Maybe Text)

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the commited file changes.
createCommitResponse_treeId :: Lens' CreateCommitResponse (Maybe Text)

-- | The files added as part of the committed file changes.
createCommitResponse_filesAdded :: Lens' CreateCommitResponse (Maybe [FileMetadata])

-- | The files updated as part of the commited file changes.
createCommitResponse_filesUpdated :: Lens' CreateCommitResponse (Maybe [FileMetadata])

-- | The files deleted as part of the committed file changes.
createCommitResponse_filesDeleted :: Lens' CreateCommitResponse (Maybe [FileMetadata])

-- | The response's http status code.
createCommitResponse_httpStatus :: Lens' CreateCommitResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateCommit.CreateCommit
instance GHC.Show.Show Amazonka.CodeCommit.CreateCommit.CreateCommit
instance GHC.Read.Read Amazonka.CodeCommit.CreateCommit.CreateCommit
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateCommit.CreateCommit
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateCommit.CreateCommitResponse
instance GHC.Show.Show Amazonka.CodeCommit.CreateCommit.CreateCommitResponse
instance GHC.Read.Read Amazonka.CodeCommit.CreateCommit.CreateCommitResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateCommit.CreateCommitResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.CreateCommit.CreateCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateCommit.CreateCommitResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.CreateCommit.CreateCommit
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateCommit.CreateCommit
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.CreateCommit.CreateCommit
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.CreateCommit.CreateCommit
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.CreateCommit.CreateCommit
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.CreateCommit.CreateCommit


-- | Creates a branch in a repository and points the branch to a commit.
--   
--   Calling the create branch operation does not set a repository's
--   default branch. To do this, call the update default branch operation.
module Amazonka.CodeCommit.CreateBranch

-- | Represents the input of a create branch operation.
--   
--   <i>See:</i> <a>newCreateBranch</a> smart constructor.
data CreateBranch
CreateBranch' :: Text -> Text -> Text -> CreateBranch

-- | The name of the repository in which you want to create the new branch.
[$sel:repositoryName:CreateBranch'] :: CreateBranch -> Text

-- | The name of the new branch to create.
[$sel:branchName:CreateBranch'] :: CreateBranch -> Text

-- | The ID of the commit to point the new branch to.
[$sel:commitId:CreateBranch'] :: CreateBranch -> Text

-- | Create a value of <a>CreateBranch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:CreateBranch'</a>,
--   <a>createBranch_repositoryName</a> - The name of the repository in
--   which you want to create the new branch.
--   
--   <a>$sel:branchName:CreateBranch'</a>, <a>createBranch_branchName</a> -
--   The name of the new branch to create.
--   
--   <a>$sel:commitId:CreateBranch'</a>, <a>createBranch_commitId</a> - The
--   ID of the commit to point the new branch to.
newCreateBranch :: Text -> Text -> Text -> CreateBranch

-- | The name of the repository in which you want to create the new branch.
createBranch_repositoryName :: Lens' CreateBranch Text

-- | The name of the new branch to create.
createBranch_branchName :: Lens' CreateBranch Text

-- | The ID of the commit to point the new branch to.
createBranch_commitId :: Lens' CreateBranch Text

-- | <i>See:</i> <a>newCreateBranchResponse</a> smart constructor.
data CreateBranchResponse
CreateBranchResponse' :: CreateBranchResponse

-- | Create a value of <a>CreateBranchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateBranchResponse :: CreateBranchResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateBranch.CreateBranch
instance GHC.Show.Show Amazonka.CodeCommit.CreateBranch.CreateBranch
instance GHC.Read.Read Amazonka.CodeCommit.CreateBranch.CreateBranch
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateBranch.CreateBranch
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateBranch.CreateBranchResponse
instance GHC.Show.Show Amazonka.CodeCommit.CreateBranch.CreateBranchResponse
instance GHC.Read.Read Amazonka.CodeCommit.CreateBranch.CreateBranchResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateBranch.CreateBranchResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.CreateBranch.CreateBranch
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateBranch.CreateBranchResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.CreateBranch.CreateBranch
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateBranch.CreateBranch
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.CreateBranch.CreateBranch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.CreateBranch.CreateBranch
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.CreateBranch.CreateBranch
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.CreateBranch.CreateBranch


-- | Creates a template for approval rules that can then be associated with
--   one or more repositories in your AWS account. When you associate a
--   template with a repository, AWS CodeCommit creates an approval rule
--   that matches the conditions of the template for all pull requests that
--   meet the conditions of the template. For more information, see
--   AssociateApprovalRuleTemplateWithRepository.
module Amazonka.CodeCommit.CreateApprovalRuleTemplate

-- | <i>See:</i> <a>newCreateApprovalRuleTemplate</a> smart constructor.
data CreateApprovalRuleTemplate
CreateApprovalRuleTemplate' :: Maybe Text -> Text -> Text -> CreateApprovalRuleTemplate

-- | The description of the approval rule template. Consider providing a
--   description that explains what this template does and when it might be
--   appropriate to associate it with repositories.
[$sel:approvalRuleTemplateDescription:CreateApprovalRuleTemplate'] :: CreateApprovalRuleTemplate -> Maybe Text

-- | The name of the approval rule template. Provide descriptive names,
--   because this name is applied to the approval rules created
--   automatically in associated repositories.
[$sel:approvalRuleTemplateName:CreateApprovalRuleTemplate'] :: CreateApprovalRuleTemplate -> Text

-- | The content of the approval rule that is created on pull requests in
--   associated repositories. If you specify one or more destination
--   references (branches), approval rules are created in an associated
--   repository only if their destination references (branches) match those
--   specified in the template.
--   
--   When you create the content of the approval rule template, you can
--   specify approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
[$sel:approvalRuleTemplateContent:CreateApprovalRuleTemplate'] :: CreateApprovalRuleTemplate -> Text

-- | Create a value of <a>CreateApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateDescription:CreateApprovalRuleTemplate'</a>,
--   <a>createApprovalRuleTemplate_approvalRuleTemplateDescription</a> -
--   The description of the approval rule template. Consider providing a
--   description that explains what this template does and when it might be
--   appropriate to associate it with repositories.
--   
--   <a>$sel:approvalRuleTemplateName:CreateApprovalRuleTemplate'</a>,
--   <a>createApprovalRuleTemplate_approvalRuleTemplateName</a> - The name
--   of the approval rule template. Provide descriptive names, because this
--   name is applied to the approval rules created automatically in
--   associated repositories.
--   
--   <a>$sel:approvalRuleTemplateContent:CreateApprovalRuleTemplate'</a>,
--   <a>createApprovalRuleTemplate_approvalRuleTemplateContent</a> - The
--   content of the approval rule that is created on pull requests in
--   associated repositories. If you specify one or more destination
--   references (branches), approval rules are created in an associated
--   repository only if their destination references (branches) match those
--   specified in the template.
--   
--   When you create the content of the approval rule template, you can
--   specify approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newCreateApprovalRuleTemplate :: Text -> Text -> CreateApprovalRuleTemplate

-- | The description of the approval rule template. Consider providing a
--   description that explains what this template does and when it might be
--   appropriate to associate it with repositories.
createApprovalRuleTemplate_approvalRuleTemplateDescription :: Lens' CreateApprovalRuleTemplate (Maybe Text)

-- | The name of the approval rule template. Provide descriptive names,
--   because this name is applied to the approval rules created
--   automatically in associated repositories.
createApprovalRuleTemplate_approvalRuleTemplateName :: Lens' CreateApprovalRuleTemplate Text

-- | The content of the approval rule that is created on pull requests in
--   associated repositories. If you specify one or more destination
--   references (branches), approval rules are created in an associated
--   repository only if their destination references (branches) match those
--   specified in the template.
--   
--   When you create the content of the approval rule template, you can
--   specify approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
createApprovalRuleTemplate_approvalRuleTemplateContent :: Lens' CreateApprovalRuleTemplate Text

-- | <i>See:</i> <a>newCreateApprovalRuleTemplateResponse</a> smart
--   constructor.
data CreateApprovalRuleTemplateResponse
CreateApprovalRuleTemplateResponse' :: Int -> ApprovalRuleTemplate -> CreateApprovalRuleTemplateResponse

-- | The response's http status code.
[$sel:httpStatus:CreateApprovalRuleTemplateResponse'] :: CreateApprovalRuleTemplateResponse -> Int

-- | The content and structure of the created approval rule template.
[$sel:approvalRuleTemplate:CreateApprovalRuleTemplateResponse'] :: CreateApprovalRuleTemplateResponse -> ApprovalRuleTemplate

-- | Create a value of <a>CreateApprovalRuleTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateApprovalRuleTemplateResponse'</a>,
--   <a>createApprovalRuleTemplateResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:approvalRuleTemplate:CreateApprovalRuleTemplateResponse'</a>,
--   <a>createApprovalRuleTemplateResponse_approvalRuleTemplate</a> - The
--   content and structure of the created approval rule template.
newCreateApprovalRuleTemplateResponse :: Int -> ApprovalRuleTemplate -> CreateApprovalRuleTemplateResponse

-- | The response's http status code.
createApprovalRuleTemplateResponse_httpStatus :: Lens' CreateApprovalRuleTemplateResponse Int

-- | The content and structure of the created approval rule template.
createApprovalRuleTemplateResponse_approvalRuleTemplate :: Lens' CreateApprovalRuleTemplateResponse ApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance GHC.Show.Show Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance GHC.Read.Read Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplateResponse
instance GHC.Show.Show Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplateResponse
instance GHC.Read.Read Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplateResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplateResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplateResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance Control.DeepSeq.NFData Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.CreateApprovalRuleTemplate.CreateApprovalRuleTemplate


-- | Returns information about one or more repositories.
--   
--   The description field for a repository accepts all HTML characters and
--   all valid Unicode characters. Applications that do not HTML-encode the
--   description and display it in a webpage can expose users to
--   potentially malicious code. Make sure that you HTML-encode the
--   description field in any application that uses this API to display the
--   repository description on a webpage.
module Amazonka.CodeCommit.BatchGetRepositories

-- | Represents the input of a batch get repositories operation.
--   
--   <i>See:</i> <a>newBatchGetRepositories</a> smart constructor.
data BatchGetRepositories
BatchGetRepositories' :: [Text] -> BatchGetRepositories

-- | The names of the repositories to get information about.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
[$sel:repositoryNames:BatchGetRepositories'] :: BatchGetRepositories -> [Text]

-- | Create a value of <a>BatchGetRepositories</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryNames:BatchGetRepositories'</a>,
--   <a>batchGetRepositories_repositoryNames</a> - The names of the
--   repositories to get information about.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
newBatchGetRepositories :: BatchGetRepositories

-- | The names of the repositories to get information about.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
batchGetRepositories_repositoryNames :: Lens' BatchGetRepositories [Text]

-- | Represents the output of a batch get repositories operation.
--   
--   <i>See:</i> <a>newBatchGetRepositoriesResponse</a> smart constructor.
data BatchGetRepositoriesResponse
BatchGetRepositoriesResponse' :: Maybe [RepositoryMetadata] -> Maybe [Text] -> Int -> BatchGetRepositoriesResponse

-- | A list of repositories returned by the batch get repositories
--   operation.
[$sel:repositories:BatchGetRepositoriesResponse'] :: BatchGetRepositoriesResponse -> Maybe [RepositoryMetadata]

-- | Returns a list of repository names for which information could not be
--   found.
[$sel:repositoriesNotFound:BatchGetRepositoriesResponse'] :: BatchGetRepositoriesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:BatchGetRepositoriesResponse'] :: BatchGetRepositoriesResponse -> Int

-- | Create a value of <a>BatchGetRepositoriesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositories:BatchGetRepositoriesResponse'</a>,
--   <a>batchGetRepositoriesResponse_repositories</a> - A list of
--   repositories returned by the batch get repositories operation.
--   
--   <a>$sel:repositoriesNotFound:BatchGetRepositoriesResponse'</a>,
--   <a>batchGetRepositoriesResponse_repositoriesNotFound</a> - Returns a
--   list of repository names for which information could not be found.
--   
--   <a>$sel:httpStatus:BatchGetRepositoriesResponse'</a>,
--   <a>batchGetRepositoriesResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetRepositoriesResponse :: Int -> BatchGetRepositoriesResponse

-- | A list of repositories returned by the batch get repositories
--   operation.
batchGetRepositoriesResponse_repositories :: Lens' BatchGetRepositoriesResponse (Maybe [RepositoryMetadata])

-- | Returns a list of repository names for which information could not be
--   found.
batchGetRepositoriesResponse_repositoriesNotFound :: Lens' BatchGetRepositoriesResponse (Maybe [Text])

-- | The response's http status code.
batchGetRepositoriesResponse_httpStatus :: Lens' BatchGetRepositoriesResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance GHC.Show.Show Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance GHC.Read.Read Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositoriesResponse
instance GHC.Show.Show Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositoriesResponse
instance GHC.Read.Read Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositoriesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositoriesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositoriesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.BatchGetRepositories.BatchGetRepositories


-- | Returns information about the contents of one or more commits in a
--   repository.
module Amazonka.CodeCommit.BatchGetCommits

-- | <i>See:</i> <a>newBatchGetCommits</a> smart constructor.
data BatchGetCommits
BatchGetCommits' :: [Text] -> Text -> BatchGetCommits

-- | The full commit IDs of the commits to get information about.
--   
--   You must supply the full SHA IDs of each commit. You cannot use
--   shortened SHA IDs.
[$sel:commitIds:BatchGetCommits'] :: BatchGetCommits -> [Text]

-- | The name of the repository that contains the commits.
[$sel:repositoryName:BatchGetCommits'] :: BatchGetCommits -> Text

-- | Create a value of <a>BatchGetCommits</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitIds:BatchGetCommits'</a>,
--   <a>batchGetCommits_commitIds</a> - The full commit IDs of the commits
--   to get information about.
--   
--   You must supply the full SHA IDs of each commit. You cannot use
--   shortened SHA IDs.
--   
--   <a>$sel:repositoryName:BatchGetCommits'</a>,
--   <a>batchGetCommits_repositoryName</a> - The name of the repository
--   that contains the commits.
newBatchGetCommits :: Text -> BatchGetCommits

-- | The full commit IDs of the commits to get information about.
--   
--   You must supply the full SHA IDs of each commit. You cannot use
--   shortened SHA IDs.
batchGetCommits_commitIds :: Lens' BatchGetCommits [Text]

-- | The name of the repository that contains the commits.
batchGetCommits_repositoryName :: Lens' BatchGetCommits Text

-- | <i>See:</i> <a>newBatchGetCommitsResponse</a> smart constructor.
data BatchGetCommitsResponse
BatchGetCommitsResponse' :: Maybe [Commit] -> Maybe [BatchGetCommitsError] -> Int -> BatchGetCommitsResponse

-- | An array of commit data type objects, each of which contains
--   information about a specified commit.
[$sel:commits:BatchGetCommitsResponse'] :: BatchGetCommitsResponse -> Maybe [Commit]

-- | Returns any commit IDs for which information could not be found. For
--   example, if one of the commit IDs was a shortened SHA ID or that
--   commit was not found in the specified repository, the ID returns an
--   error object with more information.
[$sel:errors:BatchGetCommitsResponse'] :: BatchGetCommitsResponse -> Maybe [BatchGetCommitsError]

-- | The response's http status code.
[$sel:httpStatus:BatchGetCommitsResponse'] :: BatchGetCommitsResponse -> Int

-- | Create a value of <a>BatchGetCommitsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commits:BatchGetCommitsResponse'</a>,
--   <a>batchGetCommitsResponse_commits</a> - An array of commit data type
--   objects, each of which contains information about a specified commit.
--   
--   <a>$sel:errors:BatchGetCommitsResponse'</a>,
--   <a>batchGetCommitsResponse_errors</a> - Returns any commit IDs for
--   which information could not be found. For example, if one of the
--   commit IDs was a shortened SHA ID or that commit was not found in the
--   specified repository, the ID returns an error object with more
--   information.
--   
--   <a>$sel:httpStatus:BatchGetCommitsResponse'</a>,
--   <a>batchGetCommitsResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetCommitsResponse :: Int -> BatchGetCommitsResponse

-- | An array of commit data type objects, each of which contains
--   information about a specified commit.
batchGetCommitsResponse_commits :: Lens' BatchGetCommitsResponse (Maybe [Commit])

-- | Returns any commit IDs for which information could not be found. For
--   example, if one of the commit IDs was a shortened SHA ID or that
--   commit was not found in the specified repository, the ID returns an
--   error object with more information.
batchGetCommitsResponse_errors :: Lens' BatchGetCommitsResponse (Maybe [BatchGetCommitsError])

-- | The response's http status code.
batchGetCommitsResponse_httpStatus :: Lens' BatchGetCommitsResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance GHC.Show.Show Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance GHC.Read.Read Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchGetCommits.BatchGetCommitsResponse
instance GHC.Show.Show Amazonka.CodeCommit.BatchGetCommits.BatchGetCommitsResponse
instance GHC.Read.Read Amazonka.CodeCommit.BatchGetCommits.BatchGetCommitsResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchGetCommits.BatchGetCommitsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchGetCommits.BatchGetCommitsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.BatchGetCommits.BatchGetCommits


-- | Removes the association between an approval rule template and one or
--   more specified repositories.
module Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories

-- | <i>See:</i>
--   <a>newBatchDisassociateApprovalRuleTemplateFromRepositories</a> smart
--   constructor.
data BatchDisassociateApprovalRuleTemplateFromRepositories
BatchDisassociateApprovalRuleTemplateFromRepositories' :: Text -> [Text] -> BatchDisassociateApprovalRuleTemplateFromRepositories

-- | The name of the template that you want to disassociate from one or
--   more repositories.
[$sel:approvalRuleTemplateName:BatchDisassociateApprovalRuleTemplateFromRepositories'] :: BatchDisassociateApprovalRuleTemplateFromRepositories -> Text

-- | The repository names that you want to disassociate from the approval
--   rule template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
[$sel:repositoryNames:BatchDisassociateApprovalRuleTemplateFromRepositories'] :: BatchDisassociateApprovalRuleTemplateFromRepositories -> [Text]

-- | Create a value of
--   <a>BatchDisassociateApprovalRuleTemplateFromRepositories</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:BatchDisassociateApprovalRuleTemplateFromRepositories'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositories_approvalRuleTemplateName</a>
--   - The name of the template that you want to disassociate from one or
--   more repositories.
--   
--   
--   <a>$sel:repositoryNames:BatchDisassociateApprovalRuleTemplateFromRepositories'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositories_repositoryNames</a>
--   - The repository names that you want to disassociate from the approval
--   rule template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
newBatchDisassociateApprovalRuleTemplateFromRepositories :: Text -> BatchDisassociateApprovalRuleTemplateFromRepositories

-- | The name of the template that you want to disassociate from one or
--   more repositories.
batchDisassociateApprovalRuleTemplateFromRepositories_approvalRuleTemplateName :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositories Text

-- | The repository names that you want to disassociate from the approval
--   rule template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
batchDisassociateApprovalRuleTemplateFromRepositories_repositoryNames :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositories [Text]

-- | <i>See:</i>
--   <a>newBatchDisassociateApprovalRuleTemplateFromRepositoriesResponse</a>
--   smart constructor.
data BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse
BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse' :: Int -> [Text] -> [BatchDisassociateApprovalRuleTemplateFromRepositoriesError] -> BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse

-- | The response's http status code.
[$sel:httpStatus:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse -> Int

-- | A list of repository names that have had their association with the
--   template removed.
[$sel:disassociatedRepositoryNames:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse -> [Text]

-- | A list of any errors that might have occurred while attempting to
--   remove the association between the template and the repositories.
[$sel:errors:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'] :: BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse -> [BatchDisassociateApprovalRuleTemplateFromRepositoriesError]

-- | Create a value of
--   <a>BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_httpStatus</a>
--   - The response's http status code.
--   
--   
--   <a>$sel:disassociatedRepositoryNames:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_disassociatedRepositoryNames</a>
--   - A list of repository names that have had their association with the
--   template removed.
--   
--   
--   <a>$sel:errors:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_errors</a>
--   - A list of any errors that might have occurred while attempting to
--   remove the association between the template and the repositories.
newBatchDisassociateApprovalRuleTemplateFromRepositoriesResponse :: Int -> BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse

-- | The response's http status code.
batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_httpStatus :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse Int

-- | A list of repository names that have had their association with the
--   template removed.
batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_disassociatedRepositoryNames :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse [Text]

-- | A list of any errors that might have occurred while attempting to
--   remove the association between the template and the repositories.
batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_errors :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse [BatchDisassociateApprovalRuleTemplateFromRepositoriesError]
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance GHC.Show.Show Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance GHC.Read.Read Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse
instance GHC.Show.Show Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse
instance GHC.Read.Read Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.BatchDisassociateApprovalRuleTemplateFromRepositories.BatchDisassociateApprovalRuleTemplateFromRepositories


-- | Returns information about one or more merge conflicts in the attempted
--   merge of two commit specifiers using the squash or three-way merge
--   strategy.
module Amazonka.CodeCommit.BatchDescribeMergeConflicts

-- | <i>See:</i> <a>newBatchDescribeMergeConflicts</a> smart constructor.
data BatchDescribeMergeConflicts
BatchDescribeMergeConflicts' :: Maybe [Text] -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> MergeOptionTypeEnum -> BatchDescribeMergeConflicts

-- | The path of the target files used to describe the conflicts. If not
--   specified, the default is all conflict files.
[$sel:filePaths:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Maybe [Text]

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
[$sel:conflictDetailLevel:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Maybe ConflictDetailLevelTypeEnum

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
[$sel:nextToken:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Maybe Text

-- | The maximum number of files to include in the output.
[$sel:maxConflictFiles:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Maybe Int

-- | The maximum number of merge hunks to include in the output.
[$sel:maxMergeHunks:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Maybe Int

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
[$sel:conflictResolutionStrategy:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Maybe ConflictResolutionStrategyTypeEnum

-- | The name of the repository that contains the merge conflicts you want
--   to review.
[$sel:repositoryName:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:destinationCommitSpecifier:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
[$sel:sourceCommitSpecifier:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> Text

-- | The merge option or strategy you want to use to merge the code.
[$sel:mergeOption:BatchDescribeMergeConflicts'] :: BatchDescribeMergeConflicts -> MergeOptionTypeEnum

-- | Create a value of <a>BatchDescribeMergeConflicts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePaths:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_filePaths</a> - The path of the target
--   files used to describe the conflicts. If not specified, the default is
--   all conflict files.
--   
--   <a>$sel:conflictDetailLevel:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:nextToken:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_nextToken</a> - An enumeration token
--   that, when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:maxConflictFiles:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_maxConflictFiles</a> - The maximum
--   number of files to include in the output.
--   
--   <a>$sel:maxMergeHunks:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_maxMergeHunks</a> - The maximum number
--   of merge hunks to include in the output.
--   
--   <a>$sel:conflictResolutionStrategy:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_conflictResolutionStrategy</a> -
--   Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
--   
--   <a>$sel:repositoryName:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_repositoryName</a> - The name of the
--   repository that contains the merge conflicts you want to review.
--   
--   <a>$sel:destinationCommitSpecifier:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_destinationCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:sourceCommitSpecifier:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_sourceCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:mergeOption:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_mergeOption</a> - The merge option or
--   strategy you want to use to merge the code.
newBatchDescribeMergeConflicts :: Text -> Text -> Text -> MergeOptionTypeEnum -> BatchDescribeMergeConflicts

-- | The path of the target files used to describe the conflicts. If not
--   specified, the default is all conflict files.
batchDescribeMergeConflicts_filePaths :: Lens' BatchDescribeMergeConflicts (Maybe [Text])

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
batchDescribeMergeConflicts_conflictDetailLevel :: Lens' BatchDescribeMergeConflicts (Maybe ConflictDetailLevelTypeEnum)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
batchDescribeMergeConflicts_nextToken :: Lens' BatchDescribeMergeConflicts (Maybe Text)

-- | The maximum number of files to include in the output.
batchDescribeMergeConflicts_maxConflictFiles :: Lens' BatchDescribeMergeConflicts (Maybe Int)

-- | The maximum number of merge hunks to include in the output.
batchDescribeMergeConflicts_maxMergeHunks :: Lens' BatchDescribeMergeConflicts (Maybe Int)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
batchDescribeMergeConflicts_conflictResolutionStrategy :: Lens' BatchDescribeMergeConflicts (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository that contains the merge conflicts you want
--   to review.
batchDescribeMergeConflicts_repositoryName :: Lens' BatchDescribeMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
batchDescribeMergeConflicts_destinationCommitSpecifier :: Lens' BatchDescribeMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
batchDescribeMergeConflicts_sourceCommitSpecifier :: Lens' BatchDescribeMergeConflicts Text

-- | The merge option or strategy you want to use to merge the code.
batchDescribeMergeConflicts_mergeOption :: Lens' BatchDescribeMergeConflicts MergeOptionTypeEnum

-- | <i>See:</i> <a>newBatchDescribeMergeConflictsResponse</a> smart
--   constructor.
data BatchDescribeMergeConflictsResponse
BatchDescribeMergeConflictsResponse' :: Maybe Text -> Maybe Text -> Maybe [BatchDescribeMergeConflictsError] -> Int -> [Conflict] -> Text -> Text -> BatchDescribeMergeConflictsResponse

-- | The commit ID of the merge base.
[$sel:baseCommitId:BatchDescribeMergeConflictsResponse'] :: BatchDescribeMergeConflictsResponse -> Maybe Text

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
[$sel:nextToken:BatchDescribeMergeConflictsResponse'] :: BatchDescribeMergeConflictsResponse -> Maybe Text

-- | A list of any errors returned while describing the merge conflicts for
--   each file.
[$sel:errors:BatchDescribeMergeConflictsResponse'] :: BatchDescribeMergeConflictsResponse -> Maybe [BatchDescribeMergeConflictsError]

-- | The response's http status code.
[$sel:httpStatus:BatchDescribeMergeConflictsResponse'] :: BatchDescribeMergeConflictsResponse -> Int

-- | A list of conflicts for each file, including the conflict metadata and
--   the hunks of the differences between the files.
[$sel:conflicts:BatchDescribeMergeConflictsResponse'] :: BatchDescribeMergeConflictsResponse -> [Conflict]

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
[$sel:destinationCommitId:BatchDescribeMergeConflictsResponse'] :: BatchDescribeMergeConflictsResponse -> Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
[$sel:sourceCommitId:BatchDescribeMergeConflictsResponse'] :: BatchDescribeMergeConflictsResponse -> Text

-- | Create a value of <a>BatchDescribeMergeConflictsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseCommitId:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_baseCommitId</a> - The commit
--   ID of the merge base.
--   
--   <a>$sel:nextToken:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflictsResponse_nextToken</a> - An enumeration
--   token that can be used in a request to return the next batch of the
--   results.
--   
--   <a>$sel:errors:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_errors</a> - A list of any
--   errors returned while describing the merge conflicts for each file.
--   
--   <a>$sel:httpStatus:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:conflicts:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_conflicts</a> - A list of
--   conflicts for each file, including the conflict metadata and the hunks
--   of the differences between the files.
--   
--   <a>$sel:destinationCommitId:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_destinationCommitId</a> - The
--   commit ID of the destination commit specifier that was used in the
--   merge evaluation.
--   
--   <a>$sel:sourceCommitId:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_sourceCommitId</a> - The commit
--   ID of the source commit specifier that was used in the merge
--   evaluation.
newBatchDescribeMergeConflictsResponse :: Int -> Text -> Text -> BatchDescribeMergeConflictsResponse

-- | The commit ID of the merge base.
batchDescribeMergeConflictsResponse_baseCommitId :: Lens' BatchDescribeMergeConflictsResponse (Maybe Text)

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
batchDescribeMergeConflictsResponse_nextToken :: Lens' BatchDescribeMergeConflictsResponse (Maybe Text)

-- | A list of any errors returned while describing the merge conflicts for
--   each file.
batchDescribeMergeConflictsResponse_errors :: Lens' BatchDescribeMergeConflictsResponse (Maybe [BatchDescribeMergeConflictsError])

-- | The response's http status code.
batchDescribeMergeConflictsResponse_httpStatus :: Lens' BatchDescribeMergeConflictsResponse Int

-- | A list of conflicts for each file, including the conflict metadata and
--   the hunks of the differences between the files.
batchDescribeMergeConflictsResponse_conflicts :: Lens' BatchDescribeMergeConflictsResponse [Conflict]

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
batchDescribeMergeConflictsResponse_destinationCommitId :: Lens' BatchDescribeMergeConflictsResponse Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
batchDescribeMergeConflictsResponse_sourceCommitId :: Lens' BatchDescribeMergeConflictsResponse Text
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance GHC.Show.Show Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance GHC.Read.Read Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflictsResponse
instance GHC.Show.Show Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflictsResponse
instance GHC.Read.Read Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflictsResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflictsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflictsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.BatchDescribeMergeConflicts.BatchDescribeMergeConflicts


-- | Creates an association between an approval rule template and one or
--   more specified repositories.
module Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories

-- | <i>See:</i>
--   <a>newBatchAssociateApprovalRuleTemplateWithRepositories</a> smart
--   constructor.
data BatchAssociateApprovalRuleTemplateWithRepositories
BatchAssociateApprovalRuleTemplateWithRepositories' :: Text -> [Text] -> BatchAssociateApprovalRuleTemplateWithRepositories

-- | The name of the template you want to associate with one or more
--   repositories.
[$sel:approvalRuleTemplateName:BatchAssociateApprovalRuleTemplateWithRepositories'] :: BatchAssociateApprovalRuleTemplateWithRepositories -> Text

-- | The names of the repositories you want to associate with the template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
[$sel:repositoryNames:BatchAssociateApprovalRuleTemplateWithRepositories'] :: BatchAssociateApprovalRuleTemplateWithRepositories -> [Text]

-- | Create a value of
--   <a>BatchAssociateApprovalRuleTemplateWithRepositories</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:BatchAssociateApprovalRuleTemplateWithRepositories'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositories_approvalRuleTemplateName</a>
--   - The name of the template you want to associate with one or more
--   repositories.
--   
--   
--   <a>$sel:repositoryNames:BatchAssociateApprovalRuleTemplateWithRepositories'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositories_repositoryNames</a>
--   - The names of the repositories you want to associate with the
--   template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
newBatchAssociateApprovalRuleTemplateWithRepositories :: Text -> BatchAssociateApprovalRuleTemplateWithRepositories

-- | The name of the template you want to associate with one or more
--   repositories.
batchAssociateApprovalRuleTemplateWithRepositories_approvalRuleTemplateName :: Lens' BatchAssociateApprovalRuleTemplateWithRepositories Text

-- | The names of the repositories you want to associate with the template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
batchAssociateApprovalRuleTemplateWithRepositories_repositoryNames :: Lens' BatchAssociateApprovalRuleTemplateWithRepositories [Text]

-- | <i>See:</i>
--   <a>newBatchAssociateApprovalRuleTemplateWithRepositoriesResponse</a>
--   smart constructor.
data BatchAssociateApprovalRuleTemplateWithRepositoriesResponse
BatchAssociateApprovalRuleTemplateWithRepositoriesResponse' :: Int -> [Text] -> [BatchAssociateApprovalRuleTemplateWithRepositoriesError] -> BatchAssociateApprovalRuleTemplateWithRepositoriesResponse

-- | The response's http status code.
[$sel:httpStatus:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesResponse -> Int

-- | A list of names of the repositories that have been associated with the
--   template.
[$sel:associatedRepositoryNames:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesResponse -> [Text]

-- | A list of any errors that might have occurred while attempting to
--   create the association between the template and the repositories.
[$sel:errors:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'] :: BatchAssociateApprovalRuleTemplateWithRepositoriesResponse -> [BatchAssociateApprovalRuleTemplateWithRepositoriesError]

-- | Create a value of
--   <a>BatchAssociateApprovalRuleTemplateWithRepositoriesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesResponse_httpStatus</a>
--   - The response's http status code.
--   
--   
--   <a>$sel:associatedRepositoryNames:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesResponse_associatedRepositoryNames</a>
--   - A list of names of the repositories that have been associated with
--   the template.
--   
--   
--   <a>$sel:errors:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesResponse_errors</a>
--   - A list of any errors that might have occurred while attempting to
--   create the association between the template and the repositories.
newBatchAssociateApprovalRuleTemplateWithRepositoriesResponse :: Int -> BatchAssociateApprovalRuleTemplateWithRepositoriesResponse

-- | The response's http status code.
batchAssociateApprovalRuleTemplateWithRepositoriesResponse_httpStatus :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesResponse Int

-- | A list of names of the repositories that have been associated with the
--   template.
batchAssociateApprovalRuleTemplateWithRepositoriesResponse_associatedRepositoryNames :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesResponse [Text]

-- | A list of any errors that might have occurred while attempting to
--   create the association between the template and the repositories.
batchAssociateApprovalRuleTemplateWithRepositoriesResponse_errors :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesResponse [BatchAssociateApprovalRuleTemplateWithRepositoriesError]
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance GHC.Show.Show Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance GHC.Read.Read Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance GHC.Generics.Generic Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse
instance GHC.Show.Show Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse
instance GHC.Read.Read Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositoriesResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance Control.DeepSeq.NFData Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.BatchAssociateApprovalRuleTemplateWithRepositories.BatchAssociateApprovalRuleTemplateWithRepositories


-- | Creates an association between an approval rule template and a
--   specified repository. Then, the next time a pull request is created in
--   the repository where the destination reference (if specified) matches
--   the destination reference (branch) for the pull request, an approval
--   rule that matches the template conditions is automatically created for
--   that pull request. If no destination references are specified in the
--   template, an approval rule that matches the template contents is
--   created for all pull requests in that repository.
module Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository

-- | <i>See:</i> <a>newAssociateApprovalRuleTemplateWithRepository</a>
--   smart constructor.
data AssociateApprovalRuleTemplateWithRepository
AssociateApprovalRuleTemplateWithRepository' :: Text -> Text -> AssociateApprovalRuleTemplateWithRepository

-- | The name for the approval rule template.
[$sel:approvalRuleTemplateName:AssociateApprovalRuleTemplateWithRepository'] :: AssociateApprovalRuleTemplateWithRepository -> Text

-- | The name of the repository that you want to associate with the
--   template.
[$sel:repositoryName:AssociateApprovalRuleTemplateWithRepository'] :: AssociateApprovalRuleTemplateWithRepository -> Text

-- | Create a value of <a>AssociateApprovalRuleTemplateWithRepository</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:AssociateApprovalRuleTemplateWithRepository'</a>,
--   <a>associateApprovalRuleTemplateWithRepository_approvalRuleTemplateName</a>
--   - The name for the approval rule template.
--   
--   
--   <a>$sel:repositoryName:AssociateApprovalRuleTemplateWithRepository'</a>,
--   <a>associateApprovalRuleTemplateWithRepository_repositoryName</a> -
--   The name of the repository that you want to associate with the
--   template.
newAssociateApprovalRuleTemplateWithRepository :: Text -> Text -> AssociateApprovalRuleTemplateWithRepository

-- | The name for the approval rule template.
associateApprovalRuleTemplateWithRepository_approvalRuleTemplateName :: Lens' AssociateApprovalRuleTemplateWithRepository Text

-- | The name of the repository that you want to associate with the
--   template.
associateApprovalRuleTemplateWithRepository_repositoryName :: Lens' AssociateApprovalRuleTemplateWithRepository Text

-- | <i>See:</i>
--   <a>newAssociateApprovalRuleTemplateWithRepositoryResponse</a> smart
--   constructor.
data AssociateApprovalRuleTemplateWithRepositoryResponse
AssociateApprovalRuleTemplateWithRepositoryResponse' :: AssociateApprovalRuleTemplateWithRepositoryResponse

-- | Create a value of
--   <a>AssociateApprovalRuleTemplateWithRepositoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAssociateApprovalRuleTemplateWithRepositoryResponse :: AssociateApprovalRuleTemplateWithRepositoryResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance GHC.Show.Show Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance GHC.Read.Read Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance GHC.Classes.Eq Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance GHC.Generics.Generic Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepositoryResponse
instance GHC.Show.Show Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepositoryResponse
instance GHC.Read.Read Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepositoryResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepositoryResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepositoryResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance Control.DeepSeq.NFData Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.AssociateApprovalRuleTemplateWithRepository.AssociateApprovalRuleTemplateWithRepository


-- | Removes tags for a resource in AWS CodeCommit. For a list of valid
--   resources in AWS CodeCommit, see <a>CodeCommit Resources and
--   Operations</a> in the <i>AWS CodeCommit User Guide</i>.
module Amazonka.CodeCommit.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   remove tags.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag key for each tag that you want to remove from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to which you want to remove tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag key for each tag that you want to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   remove tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag key for each tag that you want to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.CodeCommit.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.CodeCommit.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.CodeCommit.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.CodeCommit.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.CodeCommit.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.CodeCommit.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UntagResource.UntagResource


-- | Updates the content of an approval rule template. You can change the
--   number of required approvals, the membership of the approval rule, and
--   whether an approval pool is defined.
module Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateContent</a> smart
--   constructor.
data UpdateApprovalRuleTemplateContent
UpdateApprovalRuleTemplateContent' :: Maybe Text -> Text -> Text -> UpdateApprovalRuleTemplateContent

-- | The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
[$sel:existingRuleContentSha256:UpdateApprovalRuleTemplateContent'] :: UpdateApprovalRuleTemplateContent -> Maybe Text

-- | The name of the approval rule template where you want to update the
--   content of the rule.
[$sel:approvalRuleTemplateName:UpdateApprovalRuleTemplateContent'] :: UpdateApprovalRuleTemplateContent -> Text

-- | The content that replaces the existing content of the rule. Content
--   statements must be complete. You cannot provide only the changes.
[$sel:newRuleContent':UpdateApprovalRuleTemplateContent'] :: UpdateApprovalRuleTemplateContent -> Text

-- | Create a value of <a>UpdateApprovalRuleTemplateContent</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:existingRuleContentSha256:UpdateApprovalRuleTemplateContent'</a>,
--   <a>updateApprovalRuleTemplateContent_existingRuleContentSha256</a> -
--   The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
--   
--   
--   <a>$sel:approvalRuleTemplateName:UpdateApprovalRuleTemplateContent'</a>,
--   <a>updateApprovalRuleTemplateContent_approvalRuleTemplateName</a> -
--   The name of the approval rule template where you want to update the
--   content of the rule.
--   
--   <a>$sel:newRuleContent':UpdateApprovalRuleTemplateContent'</a>,
--   <a>updateApprovalRuleTemplateContent_newRuleContent</a> - The content
--   that replaces the existing content of the rule. Content statements
--   must be complete. You cannot provide only the changes.
newUpdateApprovalRuleTemplateContent :: Text -> Text -> UpdateApprovalRuleTemplateContent

-- | The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
updateApprovalRuleTemplateContent_existingRuleContentSha256 :: Lens' UpdateApprovalRuleTemplateContent (Maybe Text)

-- | The name of the approval rule template where you want to update the
--   content of the rule.
updateApprovalRuleTemplateContent_approvalRuleTemplateName :: Lens' UpdateApprovalRuleTemplateContent Text

-- | The content that replaces the existing content of the rule. Content
--   statements must be complete. You cannot provide only the changes.
updateApprovalRuleTemplateContent_newRuleContent :: Lens' UpdateApprovalRuleTemplateContent Text

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateContentResponse</a> smart
--   constructor.
data UpdateApprovalRuleTemplateContentResponse
UpdateApprovalRuleTemplateContentResponse' :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateContentResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateApprovalRuleTemplateContentResponse'] :: UpdateApprovalRuleTemplateContentResponse -> Int
[$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateContentResponse'] :: UpdateApprovalRuleTemplateContentResponse -> ApprovalRuleTemplate

-- | Create a value of <a>UpdateApprovalRuleTemplateContentResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApprovalRuleTemplateContentResponse'</a>,
--   <a>updateApprovalRuleTemplateContentResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateContentResponse'</a>,
--   <a>updateApprovalRuleTemplateContentResponse_approvalRuleTemplate</a>
--   - Undocumented member.
newUpdateApprovalRuleTemplateContentResponse :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateContentResponse

-- | The response's http status code.
updateApprovalRuleTemplateContentResponse_httpStatus :: Lens' UpdateApprovalRuleTemplateContentResponse Int

-- | Undocumented member.
updateApprovalRuleTemplateContentResponse_approvalRuleTemplate :: Lens' UpdateApprovalRuleTemplateContentResponse ApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance GHC.Show.Show Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance GHC.Read.Read Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContentResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContentResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContentResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContentResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContentResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdateApprovalRuleTemplateContent.UpdateApprovalRuleTemplateContent


-- | Updates the description for a specified approval rule template.
module Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateDescription</a> smart
--   constructor.
data UpdateApprovalRuleTemplateDescription
UpdateApprovalRuleTemplateDescription' :: Text -> Text -> UpdateApprovalRuleTemplateDescription

-- | The name of the template for which you want to update the description.
[$sel:approvalRuleTemplateName:UpdateApprovalRuleTemplateDescription'] :: UpdateApprovalRuleTemplateDescription -> Text

-- | The updated description of the approval rule template.
[$sel:approvalRuleTemplateDescription:UpdateApprovalRuleTemplateDescription'] :: UpdateApprovalRuleTemplateDescription -> Text

-- | Create a value of <a>UpdateApprovalRuleTemplateDescription</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:UpdateApprovalRuleTemplateDescription'</a>,
--   <a>updateApprovalRuleTemplateDescription_approvalRuleTemplateName</a>
--   - The name of the template for which you want to update the
--   description.
--   
--   
--   <a>$sel:approvalRuleTemplateDescription:UpdateApprovalRuleTemplateDescription'</a>,
--   <a>updateApprovalRuleTemplateDescription_approvalRuleTemplateDescription</a>
--   - The updated description of the approval rule template.
newUpdateApprovalRuleTemplateDescription :: Text -> Text -> UpdateApprovalRuleTemplateDescription

-- | The name of the template for which you want to update the description.
updateApprovalRuleTemplateDescription_approvalRuleTemplateName :: Lens' UpdateApprovalRuleTemplateDescription Text

-- | The updated description of the approval rule template.
updateApprovalRuleTemplateDescription_approvalRuleTemplateDescription :: Lens' UpdateApprovalRuleTemplateDescription Text

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateDescriptionResponse</a>
--   smart constructor.
data UpdateApprovalRuleTemplateDescriptionResponse
UpdateApprovalRuleTemplateDescriptionResponse' :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateDescriptionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateApprovalRuleTemplateDescriptionResponse'] :: UpdateApprovalRuleTemplateDescriptionResponse -> Int

-- | The structure and content of the updated approval rule template.
[$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateDescriptionResponse'] :: UpdateApprovalRuleTemplateDescriptionResponse -> ApprovalRuleTemplate

-- | Create a value of <a>UpdateApprovalRuleTemplateDescriptionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApprovalRuleTemplateDescriptionResponse'</a>,
--   <a>updateApprovalRuleTemplateDescriptionResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateDescriptionResponse'</a>,
--   <a>updateApprovalRuleTemplateDescriptionResponse_approvalRuleTemplate</a>
--   - The structure and content of the updated approval rule template.
newUpdateApprovalRuleTemplateDescriptionResponse :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateDescriptionResponse

-- | The response's http status code.
updateApprovalRuleTemplateDescriptionResponse_httpStatus :: Lens' UpdateApprovalRuleTemplateDescriptionResponse Int

-- | The structure and content of the updated approval rule template.
updateApprovalRuleTemplateDescriptionResponse_approvalRuleTemplate :: Lens' UpdateApprovalRuleTemplateDescriptionResponse ApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance GHC.Show.Show Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance GHC.Read.Read Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescriptionResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescriptionResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescriptionResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescriptionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescriptionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdateApprovalRuleTemplateDescription.UpdateApprovalRuleTemplateDescription


-- | Updates the name of a specified approval rule template.
module Amazonka.CodeCommit.UpdateApprovalRuleTemplateName

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateName</a> smart
--   constructor.
data UpdateApprovalRuleTemplateName
UpdateApprovalRuleTemplateName' :: Text -> Text -> UpdateApprovalRuleTemplateName

-- | The current name of the approval rule template.
[$sel:oldApprovalRuleTemplateName:UpdateApprovalRuleTemplateName'] :: UpdateApprovalRuleTemplateName -> Text

-- | The new name you want to apply to the approval rule template.
[$sel:newApprovalRuleTemplateName':UpdateApprovalRuleTemplateName'] :: UpdateApprovalRuleTemplateName -> Text

-- | Create a value of <a>UpdateApprovalRuleTemplateName</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:oldApprovalRuleTemplateName:UpdateApprovalRuleTemplateName'</a>,
--   <a>updateApprovalRuleTemplateName_oldApprovalRuleTemplateName</a> -
--   The current name of the approval rule template.
--   
--   
--   <a>$sel:newApprovalRuleTemplateName':UpdateApprovalRuleTemplateName'</a>,
--   <a>updateApprovalRuleTemplateName_newApprovalRuleTemplateName</a> -
--   The new name you want to apply to the approval rule template.
newUpdateApprovalRuleTemplateName :: Text -> Text -> UpdateApprovalRuleTemplateName

-- | The current name of the approval rule template.
updateApprovalRuleTemplateName_oldApprovalRuleTemplateName :: Lens' UpdateApprovalRuleTemplateName Text

-- | The new name you want to apply to the approval rule template.
updateApprovalRuleTemplateName_newApprovalRuleTemplateName :: Lens' UpdateApprovalRuleTemplateName Text

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateNameResponse</a> smart
--   constructor.
data UpdateApprovalRuleTemplateNameResponse
UpdateApprovalRuleTemplateNameResponse' :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateNameResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateApprovalRuleTemplateNameResponse'] :: UpdateApprovalRuleTemplateNameResponse -> Int

-- | The structure and content of the updated approval rule template.
[$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateNameResponse'] :: UpdateApprovalRuleTemplateNameResponse -> ApprovalRuleTemplate

-- | Create a value of <a>UpdateApprovalRuleTemplateNameResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApprovalRuleTemplateNameResponse'</a>,
--   <a>updateApprovalRuleTemplateNameResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateNameResponse'</a>,
--   <a>updateApprovalRuleTemplateNameResponse_approvalRuleTemplate</a> -
--   The structure and content of the updated approval rule template.
newUpdateApprovalRuleTemplateNameResponse :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateNameResponse

-- | The response's http status code.
updateApprovalRuleTemplateNameResponse_httpStatus :: Lens' UpdateApprovalRuleTemplateNameResponse Int

-- | The structure and content of the updated approval rule template.
updateApprovalRuleTemplateNameResponse_approvalRuleTemplate :: Lens' UpdateApprovalRuleTemplateNameResponse ApprovalRuleTemplate
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance GHC.Show.Show Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance GHC.Read.Read Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateNameResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateNameResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateNameResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateNameResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateNameResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdateApprovalRuleTemplateName.UpdateApprovalRuleTemplateName


-- | Replaces the contents of a comment.
module Amazonka.CodeCommit.UpdateComment

-- | <i>See:</i> <a>newUpdateComment</a> smart constructor.
data UpdateComment
UpdateComment' :: Text -> Text -> UpdateComment

-- | The system-generated ID of the comment you want to update. To get this
--   ID, use GetCommentsForComparedCommit or GetCommentsForPullRequest.
[$sel:commentId:UpdateComment'] :: UpdateComment -> Text

-- | The updated content to replace the existing content of the comment.
[$sel:content:UpdateComment'] :: UpdateComment -> Text

-- | Create a value of <a>UpdateComment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commentId:UpdateComment'</a>, <a>updateComment_commentId</a> -
--   The system-generated ID of the comment you want to update. To get this
--   ID, use GetCommentsForComparedCommit or GetCommentsForPullRequest.
--   
--   <a>$sel:content:UpdateComment'</a>, <a>updateComment_content</a> - The
--   updated content to replace the existing content of the comment.
newUpdateComment :: Text -> Text -> UpdateComment

-- | The system-generated ID of the comment you want to update. To get this
--   ID, use GetCommentsForComparedCommit or GetCommentsForPullRequest.
updateComment_commentId :: Lens' UpdateComment Text

-- | The updated content to replace the existing content of the comment.
updateComment_content :: Lens' UpdateComment Text

-- | <i>See:</i> <a>newUpdateCommentResponse</a> smart constructor.
data UpdateCommentResponse
UpdateCommentResponse' :: Maybe Comment -> Int -> UpdateCommentResponse

-- | Information about the updated comment.
[$sel:comment:UpdateCommentResponse'] :: UpdateCommentResponse -> Maybe Comment

-- | The response's http status code.
[$sel:httpStatus:UpdateCommentResponse'] :: UpdateCommentResponse -> Int

-- | Create a value of <a>UpdateCommentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:UpdateCommentResponse'</a>,
--   <a>updateCommentResponse_comment</a> - Information about the updated
--   comment.
--   
--   <a>$sel:httpStatus:UpdateCommentResponse'</a>,
--   <a>updateCommentResponse_httpStatus</a> - The response's http status
--   code.
newUpdateCommentResponse :: Int -> UpdateCommentResponse

-- | Information about the updated comment.
updateCommentResponse_comment :: Lens' UpdateCommentResponse (Maybe Comment)

-- | The response's http status code.
updateCommentResponse_httpStatus :: Lens' UpdateCommentResponse Int
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateComment.UpdateComment
instance GHC.Show.Show Amazonka.CodeCommit.UpdateComment.UpdateComment
instance GHC.Read.Read Amazonka.CodeCommit.UpdateComment.UpdateComment
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateComment.UpdateComment
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateComment.UpdateCommentResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdateComment.UpdateCommentResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdateComment.UpdateCommentResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateComment.UpdateCommentResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdateComment.UpdateComment
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateComment.UpdateCommentResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdateComment.UpdateComment
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateComment.UpdateComment
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdateComment.UpdateComment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdateComment.UpdateComment
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdateComment.UpdateComment
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdateComment.UpdateComment


-- | Sets or changes the default branch name for the specified repository.
--   
--   If you use this operation to change the default branch name to the
--   current default branch name, a success message is returned even though
--   the default branch did not change.
module Amazonka.CodeCommit.UpdateDefaultBranch

-- | Represents the input of an update default branch operation.
--   
--   <i>See:</i> <a>newUpdateDefaultBranch</a> smart constructor.
data UpdateDefaultBranch
UpdateDefaultBranch' :: Text -> Text -> UpdateDefaultBranch

-- | The name of the repository to set or change the default branch for.
[$sel:repositoryName:UpdateDefaultBranch'] :: UpdateDefaultBranch -> Text

-- | The name of the branch to set as the default.
[$sel:defaultBranchName:UpdateDefaultBranch'] :: UpdateDefaultBranch -> Text

-- | Create a value of <a>UpdateDefaultBranch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:UpdateDefaultBranch'</a>,
--   <a>updateDefaultBranch_repositoryName</a> - The name of the repository
--   to set or change the default branch for.
--   
--   <a>$sel:defaultBranchName:UpdateDefaultBranch'</a>,
--   <a>updateDefaultBranch_defaultBranchName</a> - The name of the branch
--   to set as the default.
newUpdateDefaultBranch :: Text -> Text -> UpdateDefaultBranch

-- | The name of the repository to set or change the default branch for.
updateDefaultBranch_repositoryName :: Lens' UpdateDefaultBranch Text

-- | The name of the branch to set as the default.
updateDefaultBranch_defaultBranchName :: Lens' UpdateDefaultBranch Text

-- | <i>See:</i> <a>newUpdateDefaultBranchResponse</a> smart constructor.
data UpdateDefaultBranchResponse
UpdateDefaultBranchResponse' :: UpdateDefaultBranchResponse

-- | Create a value of <a>UpdateDefaultBranchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateDefaultBranchResponse :: UpdateDefaultBranchResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance GHC.Show.Show Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance GHC.Read.Read Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranchResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranchResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranchResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranchResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranchResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdateDefaultBranch.UpdateDefaultBranch


-- | Updates the structure of an approval rule created specifically for a
--   pull request. For example, you can change the number of required
--   approvers and the approval pool for approvers.
module Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent

-- | <i>See:</i> <a>newUpdatePullRequestApprovalRuleContent</a> smart
--   constructor.
data UpdatePullRequestApprovalRuleContent
UpdatePullRequestApprovalRuleContent' :: Maybe Text -> Text -> Text -> Text -> UpdatePullRequestApprovalRuleContent

-- | The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
[$sel:existingRuleContentSha256:UpdatePullRequestApprovalRuleContent'] :: UpdatePullRequestApprovalRuleContent -> Maybe Text

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:UpdatePullRequestApprovalRuleContent'] :: UpdatePullRequestApprovalRuleContent -> Text

-- | The name of the approval rule you want to update.
[$sel:approvalRuleName:UpdatePullRequestApprovalRuleContent'] :: UpdatePullRequestApprovalRuleContent -> Text

-- | The updated content for the approval rule.
--   
--   When you update the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
[$sel:newRuleContent':UpdatePullRequestApprovalRuleContent'] :: UpdatePullRequestApprovalRuleContent -> Text

-- | Create a value of <a>UpdatePullRequestApprovalRuleContent</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:existingRuleContentSha256:UpdatePullRequestApprovalRuleContent'</a>,
--   <a>updatePullRequestApprovalRuleContent_existingRuleContentSha256</a>
--   - The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
--   
--   <a>$sel:pullRequestId:UpdatePullRequestApprovalRuleContent'</a>,
--   <a>updatePullRequestApprovalRuleContent_pullRequestId</a> - The
--   system-generated ID of the pull request.
--   
--   <a>$sel:approvalRuleName:UpdatePullRequestApprovalRuleContent'</a>,
--   <a>updatePullRequestApprovalRuleContent_approvalRuleName</a> - The
--   name of the approval rule you want to update.
--   
--   <a>$sel:newRuleContent':UpdatePullRequestApprovalRuleContent'</a>,
--   <a>updatePullRequestApprovalRuleContent_newRuleContent</a> - The
--   updated content for the approval rule.
--   
--   When you update the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newUpdatePullRequestApprovalRuleContent :: Text -> Text -> Text -> UpdatePullRequestApprovalRuleContent

-- | The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
updatePullRequestApprovalRuleContent_existingRuleContentSha256 :: Lens' UpdatePullRequestApprovalRuleContent (Maybe Text)

-- | The system-generated ID of the pull request.
updatePullRequestApprovalRuleContent_pullRequestId :: Lens' UpdatePullRequestApprovalRuleContent Text

-- | The name of the approval rule you want to update.
updatePullRequestApprovalRuleContent_approvalRuleName :: Lens' UpdatePullRequestApprovalRuleContent Text

-- | The updated content for the approval rule.
--   
--   When you update the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
updatePullRequestApprovalRuleContent_newRuleContent :: Lens' UpdatePullRequestApprovalRuleContent Text

-- | <i>See:</i> <a>newUpdatePullRequestApprovalRuleContentResponse</a>
--   smart constructor.
data UpdatePullRequestApprovalRuleContentResponse
UpdatePullRequestApprovalRuleContentResponse' :: Int -> ApprovalRule -> UpdatePullRequestApprovalRuleContentResponse

-- | The response's http status code.
[$sel:httpStatus:UpdatePullRequestApprovalRuleContentResponse'] :: UpdatePullRequestApprovalRuleContentResponse -> Int

-- | Information about the updated approval rule.
[$sel:approvalRule:UpdatePullRequestApprovalRuleContentResponse'] :: UpdatePullRequestApprovalRuleContentResponse -> ApprovalRule

-- | Create a value of <a>UpdatePullRequestApprovalRuleContentResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePullRequestApprovalRuleContentResponse'</a>,
--   <a>updatePullRequestApprovalRuleContentResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:approvalRule:UpdatePullRequestApprovalRuleContentResponse'</a>,
--   <a>updatePullRequestApprovalRuleContentResponse_approvalRule</a> -
--   Information about the updated approval rule.
newUpdatePullRequestApprovalRuleContentResponse :: Int -> ApprovalRule -> UpdatePullRequestApprovalRuleContentResponse

-- | The response's http status code.
updatePullRequestApprovalRuleContentResponse_httpStatus :: Lens' UpdatePullRequestApprovalRuleContentResponse Int

-- | Information about the updated approval rule.
updatePullRequestApprovalRuleContentResponse_approvalRule :: Lens' UpdatePullRequestApprovalRuleContentResponse ApprovalRule
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContentResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContentResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContentResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContentResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContentResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdatePullRequestApprovalRuleContent.UpdatePullRequestApprovalRuleContent


-- | Updates the state of a user's approval on a pull request. The user is
--   derived from the signed-in account when the request is made.
module Amazonka.CodeCommit.UpdatePullRequestApprovalState

-- | <i>See:</i> <a>newUpdatePullRequestApprovalState</a> smart
--   constructor.
data UpdatePullRequestApprovalState
UpdatePullRequestApprovalState' :: Text -> Text -> ApprovalState -> UpdatePullRequestApprovalState

-- | The system-generated ID of the pull request.
[$sel:pullRequestId:UpdatePullRequestApprovalState'] :: UpdatePullRequestApprovalState -> Text

-- | The system-generated ID of the revision.
[$sel:revisionId:UpdatePullRequestApprovalState'] :: UpdatePullRequestApprovalState -> Text

-- | The approval state to associate with the user on the pull request.
[$sel:approvalState:UpdatePullRequestApprovalState'] :: UpdatePullRequestApprovalState -> ApprovalState

-- | Create a value of <a>UpdatePullRequestApprovalState</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:UpdatePullRequestApprovalState'</a>,
--   <a>updatePullRequestApprovalState_pullRequestId</a> - The
--   system-generated ID of the pull request.
--   
--   <a>$sel:revisionId:UpdatePullRequestApprovalState'</a>,
--   <a>updatePullRequestApprovalState_revisionId</a> - The
--   system-generated ID of the revision.
--   
--   <a>$sel:approvalState:UpdatePullRequestApprovalState'</a>,
--   <a>updatePullRequestApprovalState_approvalState</a> - The approval
--   state to associate with the user on the pull request.
newUpdatePullRequestApprovalState :: Text -> Text -> ApprovalState -> UpdatePullRequestApprovalState

-- | The system-generated ID of the pull request.
updatePullRequestApprovalState_pullRequestId :: Lens' UpdatePullRequestApprovalState Text

-- | The system-generated ID of the revision.
updatePullRequestApprovalState_revisionId :: Lens' UpdatePullRequestApprovalState Text

-- | The approval state to associate with the user on the pull request.
updatePullRequestApprovalState_approvalState :: Lens' UpdatePullRequestApprovalState ApprovalState

-- | <i>See:</i> <a>newUpdatePullRequestApprovalStateResponse</a> smart
--   constructor.
data UpdatePullRequestApprovalStateResponse
UpdatePullRequestApprovalStateResponse' :: UpdatePullRequestApprovalStateResponse

-- | Create a value of <a>UpdatePullRequestApprovalStateResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdatePullRequestApprovalStateResponse :: UpdatePullRequestApprovalStateResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalStateResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalStateResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalStateResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalStateResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalStateResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdatePullRequestApprovalState.UpdatePullRequestApprovalState


-- | Replaces the contents of the description of a pull request.
module Amazonka.CodeCommit.UpdatePullRequestDescription

-- | <i>See:</i> <a>newUpdatePullRequestDescription</a> smart constructor.
data UpdatePullRequestDescription
UpdatePullRequestDescription' :: Text -> Text -> UpdatePullRequestDescription

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:UpdatePullRequestDescription'] :: UpdatePullRequestDescription -> Text

-- | The updated content of the description for the pull request. This
--   content replaces the existing description.
[$sel:description:UpdatePullRequestDescription'] :: UpdatePullRequestDescription -> Text

-- | Create a value of <a>UpdatePullRequestDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:UpdatePullRequestDescription'</a>,
--   <a>updatePullRequestDescription_pullRequestId</a> - The
--   system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
--   
--   <a>$sel:description:UpdatePullRequestDescription'</a>,
--   <a>updatePullRequestDescription_description</a> - The updated content
--   of the description for the pull request. This content replaces the
--   existing description.
newUpdatePullRequestDescription :: Text -> Text -> UpdatePullRequestDescription

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
updatePullRequestDescription_pullRequestId :: Lens' UpdatePullRequestDescription Text

-- | The updated content of the description for the pull request. This
--   content replaces the existing description.
updatePullRequestDescription_description :: Lens' UpdatePullRequestDescription Text

-- | <i>See:</i> <a>newUpdatePullRequestDescriptionResponse</a> smart
--   constructor.
data UpdatePullRequestDescriptionResponse
UpdatePullRequestDescriptionResponse' :: Int -> PullRequest -> UpdatePullRequestDescriptionResponse

-- | The response's http status code.
[$sel:httpStatus:UpdatePullRequestDescriptionResponse'] :: UpdatePullRequestDescriptionResponse -> Int

-- | Information about the updated pull request.
[$sel:pullRequest:UpdatePullRequestDescriptionResponse'] :: UpdatePullRequestDescriptionResponse -> PullRequest

-- | Create a value of <a>UpdatePullRequestDescriptionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePullRequestDescriptionResponse'</a>,
--   <a>updatePullRequestDescriptionResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:pullRequest:UpdatePullRequestDescriptionResponse'</a>,
--   <a>updatePullRequestDescriptionResponse_pullRequest</a> - Information
--   about the updated pull request.
newUpdatePullRequestDescriptionResponse :: Int -> PullRequest -> UpdatePullRequestDescriptionResponse

-- | The response's http status code.
updatePullRequestDescriptionResponse_httpStatus :: Lens' UpdatePullRequestDescriptionResponse Int

-- | Information about the updated pull request.
updatePullRequestDescriptionResponse_pullRequest :: Lens' UpdatePullRequestDescriptionResponse PullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescriptionResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescriptionResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescriptionResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescriptionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescriptionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdatePullRequestDescription.UpdatePullRequestDescription


-- | Updates the status of a pull request.
module Amazonka.CodeCommit.UpdatePullRequestStatus

-- | <i>See:</i> <a>newUpdatePullRequestStatus</a> smart constructor.
data UpdatePullRequestStatus
UpdatePullRequestStatus' :: Text -> PullRequestStatusEnum -> UpdatePullRequestStatus

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:UpdatePullRequestStatus'] :: UpdatePullRequestStatus -> Text

-- | The status of the pull request. The only valid operations are to
--   update the status from <tt>OPEN</tt> to <tt>OPEN</tt>, <tt>OPEN</tt>
--   to <tt>CLOSED</tt> or from <tt>CLOSED</tt> to <tt>CLOSED</tt>.
[$sel:pullRequestStatus:UpdatePullRequestStatus'] :: UpdatePullRequestStatus -> PullRequestStatusEnum

-- | Create a value of <a>UpdatePullRequestStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:UpdatePullRequestStatus'</a>,
--   <a>updatePullRequestStatus_pullRequestId</a> - The system-generated ID
--   of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:pullRequestStatus:UpdatePullRequestStatus'</a>,
--   <a>updatePullRequestStatus_pullRequestStatus</a> - The status of the
--   pull request. The only valid operations are to update the status from
--   <tt>OPEN</tt> to <tt>OPEN</tt>, <tt>OPEN</tt> to <tt>CLOSED</tt> or
--   from <tt>CLOSED</tt> to <tt>CLOSED</tt>.
newUpdatePullRequestStatus :: Text -> PullRequestStatusEnum -> UpdatePullRequestStatus

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
updatePullRequestStatus_pullRequestId :: Lens' UpdatePullRequestStatus Text

-- | The status of the pull request. The only valid operations are to
--   update the status from <tt>OPEN</tt> to <tt>OPEN</tt>, <tt>OPEN</tt>
--   to <tt>CLOSED</tt> or from <tt>CLOSED</tt> to <tt>CLOSED</tt>.
updatePullRequestStatus_pullRequestStatus :: Lens' UpdatePullRequestStatus PullRequestStatusEnum

-- | <i>See:</i> <a>newUpdatePullRequestStatusResponse</a> smart
--   constructor.
data UpdatePullRequestStatusResponse
UpdatePullRequestStatusResponse' :: Int -> PullRequest -> UpdatePullRequestStatusResponse

-- | The response's http status code.
[$sel:httpStatus:UpdatePullRequestStatusResponse'] :: UpdatePullRequestStatusResponse -> Int

-- | Information about the pull request.
[$sel:pullRequest:UpdatePullRequestStatusResponse'] :: UpdatePullRequestStatusResponse -> PullRequest

-- | Create a value of <a>UpdatePullRequestStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePullRequestStatusResponse'</a>,
--   <a>updatePullRequestStatusResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:pullRequest:UpdatePullRequestStatusResponse'</a>,
--   <a>updatePullRequestStatusResponse_pullRequest</a> - Information about
--   the pull request.
newUpdatePullRequestStatusResponse :: Int -> PullRequest -> UpdatePullRequestStatusResponse

-- | The response's http status code.
updatePullRequestStatusResponse_httpStatus :: Lens' UpdatePullRequestStatusResponse Int

-- | Information about the pull request.
updatePullRequestStatusResponse_pullRequest :: Lens' UpdatePullRequestStatusResponse PullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatusResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatusResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatusResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatusResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatusResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdatePullRequestStatus.UpdatePullRequestStatus


-- | Replaces the title of a pull request.
module Amazonka.CodeCommit.UpdatePullRequestTitle

-- | <i>See:</i> <a>newUpdatePullRequestTitle</a> smart constructor.
data UpdatePullRequestTitle
UpdatePullRequestTitle' :: Text -> Text -> UpdatePullRequestTitle

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
[$sel:pullRequestId:UpdatePullRequestTitle'] :: UpdatePullRequestTitle -> Text

-- | The updated title of the pull request. This replaces the existing
--   title.
[$sel:title:UpdatePullRequestTitle'] :: UpdatePullRequestTitle -> Text

-- | Create a value of <a>UpdatePullRequestTitle</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:UpdatePullRequestTitle'</a>,
--   <a>updatePullRequestTitle_pullRequestId</a> - The system-generated ID
--   of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:title:UpdatePullRequestTitle'</a>,
--   <a>updatePullRequestTitle_title</a> - The updated title of the pull
--   request. This replaces the existing title.
newUpdatePullRequestTitle :: Text -> Text -> UpdatePullRequestTitle

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
updatePullRequestTitle_pullRequestId :: Lens' UpdatePullRequestTitle Text

-- | The updated title of the pull request. This replaces the existing
--   title.
updatePullRequestTitle_title :: Lens' UpdatePullRequestTitle Text

-- | <i>See:</i> <a>newUpdatePullRequestTitleResponse</a> smart
--   constructor.
data UpdatePullRequestTitleResponse
UpdatePullRequestTitleResponse' :: Int -> PullRequest -> UpdatePullRequestTitleResponse

-- | The response's http status code.
[$sel:httpStatus:UpdatePullRequestTitleResponse'] :: UpdatePullRequestTitleResponse -> Int

-- | Information about the updated pull request.
[$sel:pullRequest:UpdatePullRequestTitleResponse'] :: UpdatePullRequestTitleResponse -> PullRequest

-- | Create a value of <a>UpdatePullRequestTitleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePullRequestTitleResponse'</a>,
--   <a>updatePullRequestTitleResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:pullRequest:UpdatePullRequestTitleResponse'</a>,
--   <a>updatePullRequestTitleResponse_pullRequest</a> - Information about
--   the updated pull request.
newUpdatePullRequestTitleResponse :: Int -> PullRequest -> UpdatePullRequestTitleResponse

-- | The response's http status code.
updatePullRequestTitleResponse_httpStatus :: Lens' UpdatePullRequestTitleResponse Int

-- | Information about the updated pull request.
updatePullRequestTitleResponse_pullRequest :: Lens' UpdatePullRequestTitleResponse PullRequest
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitleResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitleResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitleResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitleResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitleResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdatePullRequestTitle.UpdatePullRequestTitle


-- | Sets or changes the comment or description for a repository.
--   
--   The description field for a repository accepts all HTML characters and
--   all valid Unicode characters. Applications that do not HTML-encode the
--   description and display it in a webpage can expose users to
--   potentially malicious code. Make sure that you HTML-encode the
--   description field in any application that uses this API to display the
--   repository description on a webpage.
module Amazonka.CodeCommit.UpdateRepositoryDescription

-- | Represents the input of an update repository description operation.
--   
--   <i>See:</i> <a>newUpdateRepositoryDescription</a> smart constructor.
data UpdateRepositoryDescription
UpdateRepositoryDescription' :: Maybe Text -> Text -> UpdateRepositoryDescription

-- | The new comment or description for the specified repository.
--   Repository descriptions are limited to 1,000 characters.
[$sel:repositoryDescription:UpdateRepositoryDescription'] :: UpdateRepositoryDescription -> Maybe Text

-- | The name of the repository to set or change the comment or description
--   for.
[$sel:repositoryName:UpdateRepositoryDescription'] :: UpdateRepositoryDescription -> Text

-- | Create a value of <a>UpdateRepositoryDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryDescription:UpdateRepositoryDescription'</a>,
--   <a>updateRepositoryDescription_repositoryDescription</a> - The new
--   comment or description for the specified repository. Repository
--   descriptions are limited to 1,000 characters.
--   
--   <a>$sel:repositoryName:UpdateRepositoryDescription'</a>,
--   <a>updateRepositoryDescription_repositoryName</a> - The name of the
--   repository to set or change the comment or description for.
newUpdateRepositoryDescription :: Text -> UpdateRepositoryDescription

-- | The new comment or description for the specified repository.
--   Repository descriptions are limited to 1,000 characters.
updateRepositoryDescription_repositoryDescription :: Lens' UpdateRepositoryDescription (Maybe Text)

-- | The name of the repository to set or change the comment or description
--   for.
updateRepositoryDescription_repositoryName :: Lens' UpdateRepositoryDescription Text

-- | <i>See:</i> <a>newUpdateRepositoryDescriptionResponse</a> smart
--   constructor.
data UpdateRepositoryDescriptionResponse
UpdateRepositoryDescriptionResponse' :: UpdateRepositoryDescriptionResponse

-- | Create a value of <a>UpdateRepositoryDescriptionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateRepositoryDescriptionResponse :: UpdateRepositoryDescriptionResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance GHC.Show.Show Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance GHC.Read.Read Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescriptionResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescriptionResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescriptionResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescriptionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescriptionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdateRepositoryDescription.UpdateRepositoryDescription


-- | Renames a repository. The repository name must be unique across the
--   calling AWS account. Repository names are limited to 100 alphanumeric,
--   dash, and underscore characters, and cannot include certain
--   characters. The suffix .git is prohibited. For more information about
--   the limits on repository names, see <a>Limits</a> in the AWS
--   CodeCommit User Guide.
module Amazonka.CodeCommit.UpdateRepositoryName

-- | Represents the input of an update repository description operation.
--   
--   <i>See:</i> <a>newUpdateRepositoryName</a> smart constructor.
data UpdateRepositoryName
UpdateRepositoryName' :: Text -> Text -> UpdateRepositoryName

-- | The current name of the repository.
[$sel:oldName:UpdateRepositoryName'] :: UpdateRepositoryName -> Text

-- | The new name for the repository.
[$sel:newName':UpdateRepositoryName'] :: UpdateRepositoryName -> Text

-- | Create a value of <a>UpdateRepositoryName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oldName:UpdateRepositoryName'</a>,
--   <a>updateRepositoryName_oldName</a> - The current name of the
--   repository.
--   
--   <a>$sel:newName':UpdateRepositoryName'</a>,
--   <a>updateRepositoryName_newName</a> - The new name for the repository.
newUpdateRepositoryName :: Text -> Text -> UpdateRepositoryName

-- | The current name of the repository.
updateRepositoryName_oldName :: Lens' UpdateRepositoryName Text

-- | The new name for the repository.
updateRepositoryName_newName :: Lens' UpdateRepositoryName Text

-- | <i>See:</i> <a>newUpdateRepositoryNameResponse</a> smart constructor.
data UpdateRepositoryNameResponse
UpdateRepositoryNameResponse' :: UpdateRepositoryNameResponse

-- | Create a value of <a>UpdateRepositoryNameResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateRepositoryNameResponse :: UpdateRepositoryNameResponse
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance GHC.Show.Show Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance GHC.Read.Read Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance GHC.Generics.Generic Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryNameResponse
instance GHC.Show.Show Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryNameResponse
instance GHC.Read.Read Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryNameResponse
instance GHC.Classes.Eq Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryNameResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryNameResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance Control.DeepSeq.NFData Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance Amazonka.Data.Path.ToPath Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName
instance Amazonka.Data.Query.ToQuery Amazonka.CodeCommit.UpdateRepositoryName.UpdateRepositoryName


module Amazonka.CodeCommit.Lens

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
mergePullRequestByFastForward_sourceCommitId :: Lens' MergePullRequestByFastForward (Maybe Text)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
mergePullRequestByFastForward_pullRequestId :: Lens' MergePullRequestByFastForward Text

-- | The name of the repository where the pull request was created.
mergePullRequestByFastForward_repositoryName :: Lens' MergePullRequestByFastForward Text

-- | Information about the specified pull request, including the merge.
mergePullRequestByFastForwardResponse_pullRequest :: Lens' MergePullRequestByFastForwardResponse (Maybe PullRequest)

-- | The response's http status code.
mergePullRequestByFastForwardResponse_httpStatus :: Lens' MergePullRequestByFastForwardResponse Int

-- | The current name of the repository.
updateRepositoryName_oldName :: Lens' UpdateRepositoryName Text

-- | The new name for the repository.
updateRepositoryName_newName :: Lens' UpdateRepositoryName Text

-- | The location of the change where you want to post your comment. If no
--   location is provided, the comment is posted as a general comment on
--   the pull request difference between the before commit ID and the after
--   commit ID.
postCommentForPullRequest_location :: Lens' PostCommentForPullRequest (Maybe Location)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
postCommentForPullRequest_clientRequestToken :: Lens' PostCommentForPullRequest (Maybe Text)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
postCommentForPullRequest_pullRequestId :: Lens' PostCommentForPullRequest Text

-- | The name of the repository where you want to post a comment on a pull
--   request.
postCommentForPullRequest_repositoryName :: Lens' PostCommentForPullRequest Text

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was created.
postCommentForPullRequest_beforeCommitId :: Lens' PostCommentForPullRequest Text

-- | The full commit ID of the commit in the source branch that is the
--   current tip of the branch for the pull request when you post the
--   comment.
postCommentForPullRequest_afterCommitId :: Lens' PostCommentForPullRequest Text

-- | The content of your comment on the change.
postCommentForPullRequest_content :: Lens' PostCommentForPullRequest Text

-- | In the directionality of the pull request, the blob ID of the before
--   blob.
postCommentForPullRequestResponse_beforeBlobId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The location of the change where you posted your comment.
postCommentForPullRequestResponse_location :: Lens' PostCommentForPullRequestResponse (Maybe Location)

-- | The full commit ID of the commit in the destination branch where the
--   pull request is merged.
postCommentForPullRequestResponse_afterCommitId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The system-generated ID of the pull request.
postCommentForPullRequestResponse_pullRequestId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | In the directionality of the pull request, the blob ID of the after
--   blob.
postCommentForPullRequestResponse_afterBlobId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The full commit ID of the commit in the source branch used to create
--   the pull request, or in the case of an updated pull request, the full
--   commit ID of the commit used to update the pull request.
postCommentForPullRequestResponse_beforeCommitId :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The name of the repository where you posted a comment on a pull
--   request.
postCommentForPullRequestResponse_repositoryName :: Lens' PostCommentForPullRequestResponse (Maybe Text)

-- | The content of the comment you posted.
postCommentForPullRequestResponse_comment :: Lens' PostCommentForPullRequestResponse (Maybe Comment)

-- | The response's http status code.
postCommentForPullRequestResponse_httpStatus :: Lens' PostCommentForPullRequestResponse Int

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
mergeBranchesBySquash_email :: Lens' MergeBranchesBySquash (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
mergeBranchesBySquash_authorName :: Lens' MergeBranchesBySquash (Maybe Text)

-- | The branch where the merge is applied.
mergeBranchesBySquash_targetBranch :: Lens' MergeBranchesBySquash (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
mergeBranchesBySquash_conflictDetailLevel :: Lens' MergeBranchesBySquash (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message for the merge.
mergeBranchesBySquash_commitMessage :: Lens' MergeBranchesBySquash (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
mergeBranchesBySquash_conflictResolution :: Lens' MergeBranchesBySquash (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
mergeBranchesBySquash_conflictResolutionStrategy :: Lens' MergeBranchesBySquash (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If this is specified
--   as true, a .gitkeep file is created for empty folders. The default is
--   false.
mergeBranchesBySquash_keepEmptyFolders :: Lens' MergeBranchesBySquash (Maybe Bool)

-- | The name of the repository where you want to merge two branches.
mergeBranchesBySquash_repositoryName :: Lens' MergeBranchesBySquash Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesBySquash_sourceCommitSpecifier :: Lens' MergeBranchesBySquash Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesBySquash_destinationCommitSpecifier :: Lens' MergeBranchesBySquash Text

-- | The commit ID of the merge in the destination or target branch.
mergeBranchesBySquashResponse_commitId :: Lens' MergeBranchesBySquashResponse (Maybe Text)

-- | The tree ID of the merge in the destination or target branch.
mergeBranchesBySquashResponse_treeId :: Lens' MergeBranchesBySquashResponse (Maybe Text)

-- | The response's http status code.
mergeBranchesBySquashResponse_httpStatus :: Lens' MergeBranchesBySquashResponse Int

-- | The name of the repository to which the commit was made.
getCommit_repositoryName :: Lens' GetCommit Text

-- | The commit ID. Commit IDs are the full SHA ID of the commit.
getCommit_commitId :: Lens' GetCommit Text

-- | The response's http status code.
getCommitResponse_httpStatus :: Lens' GetCommitResponse Int

-- | A commit data type object that contains information about the
--   specified commit.
getCommitResponse_commit :: Lens' GetCommitResponse Commit

-- | The name of the template you want to associate with one or more
--   repositories.
batchAssociateApprovalRuleTemplateWithRepositories_approvalRuleTemplateName :: Lens' BatchAssociateApprovalRuleTemplateWithRepositories Text

-- | The names of the repositories you want to associate with the template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
batchAssociateApprovalRuleTemplateWithRepositories_repositoryNames :: Lens' BatchAssociateApprovalRuleTemplateWithRepositories [Text]

-- | The response's http status code.
batchAssociateApprovalRuleTemplateWithRepositoriesResponse_httpStatus :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesResponse Int

-- | A list of names of the repositories that have been associated with the
--   template.
batchAssociateApprovalRuleTemplateWithRepositoriesResponse_associatedRepositoryNames :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesResponse [Text]

-- | A list of any errors that might have occurred while attempting to
--   create the association between the template and the repositories.
batchAssociateApprovalRuleTemplateWithRepositoriesResponse_errors :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesResponse [BatchAssociateApprovalRuleTemplateWithRepositoriesError]

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
getCommentReactions_nextToken :: Lens' GetCommentReactions (Maybe Text)

-- | Optional. The Amazon Resource Name (ARN) of the user or identity for
--   which you want to get reaction information.
getCommentReactions_reactionUserArn :: Lens' GetCommentReactions (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is the same as the allowed maximum, 1,000.
getCommentReactions_maxResults :: Lens' GetCommentReactions (Maybe Int)

-- | The ID of the comment for which you want to get reactions information.
getCommentReactions_commentId :: Lens' GetCommentReactions Text

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getCommentReactionsResponse_nextToken :: Lens' GetCommentReactionsResponse (Maybe Text)

-- | The response's http status code.
getCommentReactionsResponse_httpStatus :: Lens' GetCommentReactionsResponse Int

-- | An array of reactions to the specified comment.
getCommentReactionsResponse_reactionsForComment :: Lens' GetCommentReactionsResponse [ReactionForComment]

-- | The name of the approval rule template for which you want to get
--   information.
getApprovalRuleTemplate_approvalRuleTemplateName :: Lens' GetApprovalRuleTemplate Text

-- | The response's http status code.
getApprovalRuleTemplateResponse_httpStatus :: Lens' GetApprovalRuleTemplateResponse Int

-- | The content and structure of the approval rule template.
getApprovalRuleTemplateResponse_approvalRuleTemplate :: Lens' GetApprovalRuleTemplateResponse ApprovalRuleTemplate

-- | The name of the approval rule template to disassociate from a
--   specified repository.
disassociateApprovalRuleTemplateFromRepository_approvalRuleTemplateName :: Lens' DisassociateApprovalRuleTemplateFromRepository Text

-- | The name of the repository you want to disassociate from the template.
disassociateApprovalRuleTemplateFromRepository_repositoryName :: Lens' DisassociateApprovalRuleTemplateFromRepository Text

-- | The name of the branch for which you want to retrieve information.
getBranch_branchName :: Lens' GetBranch (Maybe Text)

-- | The name of the repository that contains the branch for which you want
--   to retrieve information.
getBranch_repositoryName :: Lens' GetBranch (Maybe Text)

-- | The name of the branch.
getBranchResponse_branch :: Lens' GetBranchResponse (Maybe BranchInfo)

-- | The response's http status code.
getBranchResponse_httpStatus :: Lens' GetBranchResponse Int

-- | The file path in which to check differences. Limits the results to
--   this path. Can also be used to specify the changed name of a directory
--   or folder, if it has changed. If not specified, differences are shown
--   for all paths.
getDifferences_afterPath :: Lens' GetDifferences (Maybe Text)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
getDifferences_nextToken :: Lens' GetDifferences (Maybe Text)

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, the full commit ID). Optional. If not
--   specified, all changes before the <tt>afterCommitSpecifier</tt> value
--   are shown. If you do not use <tt>beforeCommitSpecifier</tt> in your
--   request, consider limiting the results with <tt>maxResults</tt>.
getDifferences_beforeCommitSpecifier :: Lens' GetDifferences (Maybe Text)

-- | The file path in which to check for differences. Limits the results to
--   this path. Can also be used to specify the previous name of a
--   directory or folder. If <tt>beforePath</tt> and <tt>afterPath</tt> are
--   not specified, differences are shown for all paths.
getDifferences_beforePath :: Lens' GetDifferences (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
getDifferences_maxResults :: Lens' GetDifferences (Maybe Int)

-- | The name of the repository where you want to get differences.
getDifferences_repositoryName :: Lens' GetDifferences Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit.
getDifferences_afterCommitSpecifier :: Lens' GetDifferences Text

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getDifferencesResponse_nextToken :: Lens' GetDifferencesResponse (Maybe Text)

-- | A data type object that contains information about the differences,
--   including whether the difference is added, modified, or deleted (A, D,
--   M).
getDifferencesResponse_differences :: Lens' GetDifferencesResponse (Maybe [Difference])

-- | The response's http status code.
getDifferencesResponse_httpStatus :: Lens' GetDifferencesResponse Int

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listTagsForResource_nextToken :: Lens' ListTagsForResource (Maybe Text)

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get information about tags, if any.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listTagsForResourceResponse_nextToken :: Lens' ListTagsForResourceResponse (Maybe Text)

-- | A list of tag key and value pairs associated with the specified
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
getPullRequest_pullRequestId :: Lens' GetPullRequest Text

-- | The response's http status code.
getPullRequestResponse_httpStatus :: Lens' GetPullRequestResponse Int

-- | Information about the specified pull request.
getPullRequestResponse_pullRequest :: Lens' GetPullRequestResponse PullRequest

-- | The system-generated ID of the pull request for which you want to
--   override all approval rule requirements. To get this information, use
--   GetPullRequest.
overridePullRequestApprovalRules_pullRequestId :: Lens' OverridePullRequestApprovalRules Text

-- | The system-generated ID of the most recent revision of the pull
--   request. You cannot override approval rules for anything but the most
--   recent revision of a pull request. To get the revision ID, use
--   GetPullRequest.
overridePullRequestApprovalRules_revisionId :: Lens' OverridePullRequestApprovalRules Text

-- | Whether you want to set aside approval rule requirements for the pull
--   request (OVERRIDE) or revoke a previous override and apply approval
--   rule requirements (REVOKE). REVOKE status is not stored.
overridePullRequestApprovalRules_overrideStatus :: Lens' OverridePullRequestApprovalRules OverrideStatus

-- | Optional. The Amazon Resource Name (ARN) of the user who created the
--   pull request. If used, this filters the results to pull requests
--   created by that user.
listPullRequests_authorArn :: Lens' ListPullRequests (Maybe Text)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listPullRequests_nextToken :: Lens' ListPullRequests (Maybe Text)

-- | Optional. The status of the pull request. If used, this refines the
--   results to the pull requests that match the specified status.
listPullRequests_pullRequestStatus :: Lens' ListPullRequests (Maybe PullRequestStatusEnum)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
listPullRequests_maxResults :: Lens' ListPullRequests (Maybe Int)

-- | The name of the repository for which you want to list pull requests.
listPullRequests_repositoryName :: Lens' ListPullRequests Text

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listPullRequestsResponse_nextToken :: Lens' ListPullRequestsResponse (Maybe Text)

-- | The response's http status code.
listPullRequestsResponse_httpStatus :: Lens' ListPullRequestsResponse Int

-- | The system-generated IDs of the pull requests.
listPullRequestsResponse_pullRequestIds :: Lens' ListPullRequestsResponse [Text]

-- | The file modes to update for files in this commit.
createCommit_setFileModes :: Lens' CreateCommit (Maybe [SetFileModeEntry])

-- | The email address of the person who created the commit.
createCommit_email :: Lens' CreateCommit (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
createCommit_authorName :: Lens' CreateCommit (Maybe Text)

-- | The ID of the commit that is the parent of the commit you create. Not
--   required if this is an empty repository.
createCommit_parentCommitId :: Lens' CreateCommit (Maybe Text)

-- | The files to delete in this commit. These files still exist in earlier
--   commits.
createCommit_deleteFiles :: Lens' CreateCommit (Maybe [DeleteFileEntry])

-- | The files to add or update in this commit.
createCommit_putFiles :: Lens' CreateCommit (Maybe [PutFileEntry])

-- | The commit message you want to include in the commit. Commit messages
--   are limited to 256 KB. If no message is specified, a default message
--   is used.
createCommit_commitMessage :: Lens' CreateCommit (Maybe Text)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a ..gitkeep
--   file is created for empty folders. The default is false.
createCommit_keepEmptyFolders :: Lens' CreateCommit (Maybe Bool)

-- | The name of the repository where you create the commit.
createCommit_repositoryName :: Lens' CreateCommit Text

-- | The name of the branch where you create the commit.
createCommit_branchName :: Lens' CreateCommit Text

-- | The full commit ID of the commit that contains your committed file
--   changes.
createCommitResponse_commitId :: Lens' CreateCommitResponse (Maybe Text)

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the commited file changes.
createCommitResponse_treeId :: Lens' CreateCommitResponse (Maybe Text)

-- | The files added as part of the committed file changes.
createCommitResponse_filesAdded :: Lens' CreateCommitResponse (Maybe [FileMetadata])

-- | The files updated as part of the commited file changes.
createCommitResponse_filesUpdated :: Lens' CreateCommitResponse (Maybe [FileMetadata])

-- | The files deleted as part of the committed file changes.
createCommitResponse_filesDeleted :: Lens' CreateCommitResponse (Maybe [FileMetadata])

-- | The response's http status code.
createCommitResponse_httpStatus :: Lens' CreateCommitResponse Int

-- | The system-generated ID of the pull request.
updatePullRequestApprovalState_pullRequestId :: Lens' UpdatePullRequestApprovalState Text

-- | The system-generated ID of the revision.
updatePullRequestApprovalState_revisionId :: Lens' UpdatePullRequestApprovalState Text

-- | The approval state to associate with the user on the pull request.
updatePullRequestApprovalState_approvalState :: Lens' UpdatePullRequestApprovalState ApprovalState

-- | The system-generated ID of the pull request you want to evaluate.
evaluatePullRequestApprovalRules_pullRequestId :: Lens' EvaluatePullRequestApprovalRules Text

-- | The system-generated ID for the pull request revision. To retrieve the
--   most recent revision ID for a pull request, use GetPullRequest.
evaluatePullRequestApprovalRules_revisionId :: Lens' EvaluatePullRequestApprovalRules Text

-- | The response's http status code.
evaluatePullRequestApprovalRulesResponse_httpStatus :: Lens' EvaluatePullRequestApprovalRulesResponse Int

-- | The result of the evaluation, including the names of the rules whose
--   conditions have been met (if any), the names of the rules whose
--   conditions have not been met (if any), whether the pull request is in
--   the approved state, and whether the pull request approval rule has
--   been set aside by an override.
evaluatePullRequestApprovalRulesResponse_evaluation :: Lens' EvaluatePullRequestApprovalRulesResponse Evaluation

-- | The unique, system-generated ID of the comment. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
getComment_commentId :: Lens' GetComment Text

-- | The contents of the comment.
getCommentResponse_comment :: Lens' GetCommentResponse (Maybe Comment)

-- | The response's http status code.
getCommentResponse_httpStatus :: Lens' GetCommentResponse Int

-- | The description of the approval rule template. Consider providing a
--   description that explains what this template does and when it might be
--   appropriate to associate it with repositories.
createApprovalRuleTemplate_approvalRuleTemplateDescription :: Lens' CreateApprovalRuleTemplate (Maybe Text)

-- | The name of the approval rule template. Provide descriptive names,
--   because this name is applied to the approval rules created
--   automatically in associated repositories.
createApprovalRuleTemplate_approvalRuleTemplateName :: Lens' CreateApprovalRuleTemplate Text

-- | The content of the approval rule that is created on pull requests in
--   associated repositories. If you specify one or more destination
--   references (branches), approval rules are created in an associated
--   repository only if their destination references (branches) match those
--   specified in the template.
--   
--   When you create the content of the approval rule template, you can
--   specify approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
createApprovalRuleTemplate_approvalRuleTemplateContent :: Lens' CreateApprovalRuleTemplate Text

-- | The response's http status code.
createApprovalRuleTemplateResponse_httpStatus :: Lens' CreateApprovalRuleTemplateResponse Int

-- | The content and structure of the created approval rule template.
createApprovalRuleTemplateResponse_approvalRuleTemplate :: Lens' CreateApprovalRuleTemplateResponse ApprovalRuleTemplate

-- | The name of the repository that contains the branch to be deleted.
deleteBranch_repositoryName :: Lens' DeleteBranch Text

-- | The name of the branch to delete.
deleteBranch_branchName :: Lens' DeleteBranch Text

-- | Information about the branch deleted by the operation, including the
--   branch name and the commit ID that was the tip of the branch.
deleteBranchResponse_deletedBranch :: Lens' DeleteBranchResponse (Maybe BranchInfo)

-- | The response's http status code.
deleteBranchResponse_httpStatus :: Lens' DeleteBranchResponse Int

-- | The new comment or description for the specified repository.
--   Repository descriptions are limited to 1,000 characters.
updateRepositoryDescription_repositoryDescription :: Lens' UpdateRepositoryDescription (Maybe Text)

-- | The name of the repository to set or change the comment or description
--   for.
updateRepositoryDescription_repositoryName :: Lens' UpdateRepositoryDescription Text

-- | The name of the repository in which you want to create the new branch.
createBranch_repositoryName :: Lens' CreateBranch Text

-- | The name of the new branch to create.
createBranch_branchName :: Lens' CreateBranch Text

-- | The ID of the commit to point the new branch to.
createBranch_commitId :: Lens' CreateBranch Text

-- | A fully qualified reference used to identify a commit that contains
--   the version of the folder's content to return. A fully qualified
--   reference can be a commit ID, branch name, tag, or reference such as
--   HEAD. If no specifier is provided, the folder content is returned as
--   it exists in the HEAD commit.
getFolder_commitSpecifier :: Lens' GetFolder (Maybe Text)

-- | The name of the repository.
getFolder_repositoryName :: Lens' GetFolder Text

-- | The fully qualified path to the folder whose contents are returned,
--   including the folder name. For example, /examples is a fully-qualified
--   path to a folder named examples that was created off of the root
--   directory (/) of a repository.
getFolder_folderPath :: Lens' GetFolder Text

-- | The list of submodules in the specified folder, if any.
getFolderResponse_subModules :: Lens' GetFolderResponse (Maybe [SubModule])

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
getFolderResponse_treeId :: Lens' GetFolderResponse (Maybe Text)

-- | The list of folders that exist under the specified folder, if any.
getFolderResponse_subFolders :: Lens' GetFolderResponse (Maybe [Folder])

-- | The list of symbolic links to other files and folders in the specified
--   folder, if any.
getFolderResponse_symbolicLinks :: Lens' GetFolderResponse (Maybe [SymbolicLink])

-- | The list of files in the specified folder, if any.
getFolderResponse_files :: Lens' GetFolderResponse (Maybe [File])

-- | The response's http status code.
getFolderResponse_httpStatus :: Lens' GetFolderResponse Int

-- | The full commit ID used as a reference for the returned version of the
--   folder content.
getFolderResponse_commitId :: Lens' GetFolderResponse Text

-- | The fully qualified path of the folder whose contents are returned.
getFolderResponse_folderPath :: Lens' GetFolderResponse Text

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
--   
--   The AWS SDKs prepopulate client request tokens. If you are using an
--   AWS SDK, an idempotency token is created for you.
createPullRequest_clientRequestToken :: Lens' CreatePullRequest (Maybe Text)

-- | A description of the pull request.
createPullRequest_description :: Lens' CreatePullRequest (Maybe Text)

-- | The title of the pull request. This title is used to identify the pull
--   request to other users in the repository.
createPullRequest_title :: Lens' CreatePullRequest Text

-- | The targets for the pull request, including the source of the code to
--   be reviewed (the source branch) and the destination where the creator
--   of the pull request intends the code to be merged after the pull
--   request is closed (the destination branch).
createPullRequest_targets :: Lens' CreatePullRequest [Target]

-- | The response's http status code.
createPullRequestResponse_httpStatus :: Lens' CreatePullRequestResponse Int

-- | Information about the newly created pull request.
createPullRequestResponse_pullRequest :: Lens' CreatePullRequestResponse PullRequest

-- | The name of the approval rule template to delete.
deleteApprovalRuleTemplate_approvalRuleTemplateName :: Lens' DeleteApprovalRuleTemplate Text

-- | The response's http status code.
deleteApprovalRuleTemplateResponse_httpStatus :: Lens' DeleteApprovalRuleTemplateResponse Int

-- | The system-generated ID of the deleted approval rule template. If the
--   template has been previously deleted, the only response is a 200 OK.
deleteApprovalRuleTemplateResponse_approvalRuleTemplateId :: Lens' DeleteApprovalRuleTemplateResponse Text

-- | An enumeration token that allows the operation to batch the results.
listBranches_nextToken :: Lens' ListBranches (Maybe Text)

-- | The name of the repository that contains the branches.
listBranches_repositoryName :: Lens' ListBranches Text

-- | The list of branch names.
listBranchesResponse_branches :: Lens' ListBranchesResponse (Maybe [Text])

-- | An enumeration token that returns the batch of the results.
listBranchesResponse_nextToken :: Lens' ListBranchesResponse (Maybe Text)

-- | The response's http status code.
listBranchesResponse_httpStatus :: Lens' ListBranchesResponse Int

-- | The full commit IDs of the commits to get information about.
--   
--   You must supply the full SHA IDs of each commit. You cannot use
--   shortened SHA IDs.
batchGetCommits_commitIds :: Lens' BatchGetCommits [Text]

-- | The name of the repository that contains the commits.
batchGetCommits_repositoryName :: Lens' BatchGetCommits Text

-- | An array of commit data type objects, each of which contains
--   information about a specified commit.
batchGetCommitsResponse_commits :: Lens' BatchGetCommitsResponse (Maybe [Commit])

-- | Returns any commit IDs for which information could not be found. For
--   example, if one of the commit IDs was a shortened SHA ID or that
--   commit was not found in the specified repository, the ID returns an
--   error object with more information.
batchGetCommitsResponse_errors :: Lens' BatchGetCommitsResponse (Maybe [BatchGetCommitsError])

-- | The response's http status code.
batchGetCommitsResponse_httpStatus :: Lens' BatchGetCommitsResponse Int

-- | The ID of the comment to which you want to add or update a reaction.
putCommentReaction_commentId :: Lens' PutCommentReaction Text

-- | The emoji reaction you want to add or update. To remove a reaction,
--   provide a value of blank or null. You can also provide the value of
--   none. For information about emoji reaction values supported in AWS
--   CodeCommit, see the <a>AWS CodeCommit User Guide</a>.
putCommentReaction_reactionValue :: Lens' PutCommentReaction Text

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
updatePullRequestDescription_pullRequestId :: Lens' UpdatePullRequestDescription Text

-- | The updated content of the description for the pull request. This
--   content replaces the existing description.
updatePullRequestDescription_description :: Lens' UpdatePullRequestDescription Text

-- | The response's http status code.
updatePullRequestDescriptionResponse_httpStatus :: Lens' UpdatePullRequestDescriptionResponse Int

-- | Information about the updated pull request.
updatePullRequestDescriptionResponse_pullRequest :: Lens' UpdatePullRequestDescriptionResponse PullRequest

-- | An enumeration token that allows the operation to batch the results of
--   the operation. Batch sizes are 1,000 for list repository operations.
--   When the client sends the token back to AWS CodeCommit, another page
--   of 1,000 records is retrieved.
listRepositories_nextToken :: Lens' ListRepositories (Maybe Text)

-- | The order in which to sort the results of a list repositories
--   operation.
listRepositories_order :: Lens' ListRepositories (Maybe OrderEnum)

-- | The criteria used to sort the results of a list repositories
--   operation.
listRepositories_sortBy :: Lens' ListRepositories (Maybe SortByEnum)

-- | Lists the repositories called by the list repositories operation.
listRepositoriesResponse_repositories :: Lens' ListRepositoriesResponse (Maybe [RepositoryNameIdPair])

-- | An enumeration token that allows the operation to batch the results of
--   the operation. Batch sizes are 1,000 for list repository operations.
--   When the client sends the token back to AWS CodeCommit, another page
--   of 1,000 records is retrieved.
listRepositoriesResponse_nextToken :: Lens' ListRepositoriesResponse (Maybe Text)

-- | The response's http status code.
listRepositoriesResponse_httpStatus :: Lens' ListRepositoriesResponse Int

-- | A comment or description about the new repository.
--   
--   The description field for a repository accepts all HTML characters and
--   all valid Unicode characters. Applications that do not HTML-encode the
--   description and display it in a webpage can expose users to
--   potentially malicious code. Make sure that you HTML-encode the
--   description field in any application that uses this API to display the
--   repository description on a webpage.
createRepository_repositoryDescription :: Lens' CreateRepository (Maybe Text)

-- | One or more tag key-value pairs to use when tagging this repository.
createRepository_tags :: Lens' CreateRepository (Maybe (HashMap Text Text))

-- | The name of the new repository to be created.
--   
--   The repository name must be unique across the calling AWS account.
--   Repository names are limited to 100 alphanumeric, dash, and underscore
--   characters, and cannot include certain characters. For more
--   information about the limits on repository names, see <a>Limits</a> in
--   the <i>AWS CodeCommit User Guide</i>. The suffix .git is prohibited.
createRepository_repositoryName :: Lens' CreateRepository Text

-- | Information about the newly created repository.
createRepositoryResponse_repositoryMetadata :: Lens' CreateRepositoryResponse (Maybe RepositoryMetadata)

-- | The response's http status code.
createRepositoryResponse_httpStatus :: Lens' CreateRepositoryResponse Int

-- | The name of the repository to set or change the default branch for.
updateDefaultBranch_repositoryName :: Lens' UpdateDefaultBranch Text

-- | The name of the branch to set as the default.
updateDefaultBranch_defaultBranchName :: Lens' UpdateDefaultBranch Text

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
getMergeOptions_conflictDetailLevel :: Lens' GetMergeOptions (Maybe ConflictDetailLevelTypeEnum)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
getMergeOptions_conflictResolutionStrategy :: Lens' GetMergeOptions (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository that contains the commits about which you
--   want to get merge options.
getMergeOptions_repositoryName :: Lens' GetMergeOptions Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeOptions_sourceCommitSpecifier :: Lens' GetMergeOptions Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeOptions_destinationCommitSpecifier :: Lens' GetMergeOptions Text

-- | The response's http status code.
getMergeOptionsResponse_httpStatus :: Lens' GetMergeOptionsResponse Int

-- | The merge option or strategy used to merge the code.
getMergeOptionsResponse_mergeOptions :: Lens' GetMergeOptionsResponse [MergeOptionTypeEnum]

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
getMergeOptionsResponse_sourceCommitId :: Lens' GetMergeOptionsResponse Text

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
getMergeOptionsResponse_destinationCommitId :: Lens' GetMergeOptionsResponse Text

-- | The commit ID of the merge base.
getMergeOptionsResponse_baseCommitId :: Lens' GetMergeOptionsResponse Text

-- | The system-generated ID of the pull request for which you want to
--   create the approval rule.
createPullRequestApprovalRule_pullRequestId :: Lens' CreatePullRequestApprovalRule Text

-- | The name for the approval rule.
createPullRequestApprovalRule_approvalRuleName :: Lens' CreatePullRequestApprovalRule Text

-- | The content of the approval rule, including the number of approvals
--   needed and the structure of an approval pool defined for approvals, if
--   any. For more information about approval pools, see the AWS CodeCommit
--   User Guide.
--   
--   When you create the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following would
--   be counted as approvals coming from that user:<ul><li>An IAM user in
--   the account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
createPullRequestApprovalRule_approvalRuleContent :: Lens' CreatePullRequestApprovalRule Text

-- | The response's http status code.
createPullRequestApprovalRuleResponse_httpStatus :: Lens' CreatePullRequestApprovalRuleResponse Int

-- | Information about the created approval rule.
createPullRequestApprovalRuleResponse_approvalRule :: Lens' CreatePullRequestApprovalRuleResponse ApprovalRule

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
postCommentReply_clientRequestToken :: Lens' PostCommentReply (Maybe Text)

-- | The system-generated ID of the comment to which you want to reply. To
--   get this ID, use GetCommentsForComparedCommit or
--   GetCommentsForPullRequest.
postCommentReply_inReplyTo :: Lens' PostCommentReply Text

-- | The contents of your reply to a comment.
postCommentReply_content :: Lens' PostCommentReply Text

-- | Information about the reply to a comment.
postCommentReplyResponse_comment :: Lens' PostCommentReplyResponse (Maybe Comment)

-- | The response's http status code.
postCommentReplyResponse_httpStatus :: Lens' PostCommentReplyResponse Int

-- | The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
updateApprovalRuleTemplateContent_existingRuleContentSha256 :: Lens' UpdateApprovalRuleTemplateContent (Maybe Text)

-- | The name of the approval rule template where you want to update the
--   content of the rule.
updateApprovalRuleTemplateContent_approvalRuleTemplateName :: Lens' UpdateApprovalRuleTemplateContent Text

-- | The content that replaces the existing content of the rule. Content
--   statements must be complete. You cannot provide only the changes.
updateApprovalRuleTemplateContent_newRuleContent :: Lens' UpdateApprovalRuleTemplateContent Text

-- | The response's http status code.
updateApprovalRuleTemplateContentResponse_httpStatus :: Lens' UpdateApprovalRuleTemplateContentResponse Int

-- | Undocumented member.
updateApprovalRuleTemplateContentResponse_approvalRuleTemplate :: Lens' UpdateApprovalRuleTemplateContentResponse ApprovalRuleTemplate

-- | The email address for the person who created the unreferenced commit.
createUnreferencedMergeCommit_email :: Lens' CreateUnreferencedMergeCommit (Maybe Text)

-- | The name of the author who created the unreferenced commit. This
--   information is used as both the author and committer for the commit.
createUnreferencedMergeCommit_authorName :: Lens' CreateUnreferencedMergeCommit (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
createUnreferencedMergeCommit_conflictDetailLevel :: Lens' CreateUnreferencedMergeCommit (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message for the unreferenced commit.
createUnreferencedMergeCommit_commitMessage :: Lens' CreateUnreferencedMergeCommit (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
createUnreferencedMergeCommit_conflictResolution :: Lens' CreateUnreferencedMergeCommit (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
createUnreferencedMergeCommit_conflictResolutionStrategy :: Lens' CreateUnreferencedMergeCommit (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If this is specified
--   as true, a .gitkeep file is created for empty folders. The default is
--   false.
createUnreferencedMergeCommit_keepEmptyFolders :: Lens' CreateUnreferencedMergeCommit (Maybe Bool)

-- | The name of the repository where you want to create the unreferenced
--   merge commit.
createUnreferencedMergeCommit_repositoryName :: Lens' CreateUnreferencedMergeCommit Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
createUnreferencedMergeCommit_sourceCommitSpecifier :: Lens' CreateUnreferencedMergeCommit Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
createUnreferencedMergeCommit_destinationCommitSpecifier :: Lens' CreateUnreferencedMergeCommit Text

-- | The merge option or strategy you want to use to merge the code.
createUnreferencedMergeCommit_mergeOption :: Lens' CreateUnreferencedMergeCommit MergeOptionTypeEnum

-- | The full commit ID of the commit that contains your merge results.
createUnreferencedMergeCommitResponse_commitId :: Lens' CreateUnreferencedMergeCommitResponse (Maybe Text)

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the merge results.
createUnreferencedMergeCommitResponse_treeId :: Lens' CreateUnreferencedMergeCommitResponse (Maybe Text)

-- | The response's http status code.
createUnreferencedMergeCommitResponse_httpStatus :: Lens' CreateUnreferencedMergeCommitResponse Int

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listRepositoriesForApprovalRuleTemplate_nextToken :: Lens' ListRepositoriesForApprovalRuleTemplate (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
listRepositoriesForApprovalRuleTemplate_maxResults :: Lens' ListRepositoriesForApprovalRuleTemplate (Maybe Int)

-- | The name of the approval rule template for which you want to list
--   repositories that are associated with that template.
listRepositoriesForApprovalRuleTemplate_approvalRuleTemplateName :: Lens' ListRepositoriesForApprovalRuleTemplate Text

-- | A list of repository names that are associated with the specified
--   approval rule template.
listRepositoriesForApprovalRuleTemplateResponse_repositoryNames :: Lens' ListRepositoriesForApprovalRuleTemplateResponse (Maybe [Text])

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listRepositoriesForApprovalRuleTemplateResponse_nextToken :: Lens' ListRepositoriesForApprovalRuleTemplateResponse (Maybe Text)

-- | The response's http status code.
listRepositoriesForApprovalRuleTemplateResponse_httpStatus :: Lens' ListRepositoriesForApprovalRuleTemplateResponse Int

-- | The name of the repository to get information about.
getRepository_repositoryName :: Lens' GetRepository Text

-- | Information about the repository.
getRepositoryResponse_repositoryMetadata :: Lens' GetRepositoryResponse (Maybe RepositoryMetadata)

-- | The response's http status code.
getRepositoryResponse_httpStatus :: Lens' GetRepositoryResponse Int

-- | The path of the target files used to describe the conflicts. If not
--   specified, the default is all conflict files.
batchDescribeMergeConflicts_filePaths :: Lens' BatchDescribeMergeConflicts (Maybe [Text])

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
batchDescribeMergeConflicts_conflictDetailLevel :: Lens' BatchDescribeMergeConflicts (Maybe ConflictDetailLevelTypeEnum)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
batchDescribeMergeConflicts_nextToken :: Lens' BatchDescribeMergeConflicts (Maybe Text)

-- | The maximum number of files to include in the output.
batchDescribeMergeConflicts_maxConflictFiles :: Lens' BatchDescribeMergeConflicts (Maybe Int)

-- | The maximum number of merge hunks to include in the output.
batchDescribeMergeConflicts_maxMergeHunks :: Lens' BatchDescribeMergeConflicts (Maybe Int)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
batchDescribeMergeConflicts_conflictResolutionStrategy :: Lens' BatchDescribeMergeConflicts (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository that contains the merge conflicts you want
--   to review.
batchDescribeMergeConflicts_repositoryName :: Lens' BatchDescribeMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
batchDescribeMergeConflicts_destinationCommitSpecifier :: Lens' BatchDescribeMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
batchDescribeMergeConflicts_sourceCommitSpecifier :: Lens' BatchDescribeMergeConflicts Text

-- | The merge option or strategy you want to use to merge the code.
batchDescribeMergeConflicts_mergeOption :: Lens' BatchDescribeMergeConflicts MergeOptionTypeEnum

-- | The commit ID of the merge base.
batchDescribeMergeConflictsResponse_baseCommitId :: Lens' BatchDescribeMergeConflictsResponse (Maybe Text)

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
batchDescribeMergeConflictsResponse_nextToken :: Lens' BatchDescribeMergeConflictsResponse (Maybe Text)

-- | A list of any errors returned while describing the merge conflicts for
--   each file.
batchDescribeMergeConflictsResponse_errors :: Lens' BatchDescribeMergeConflictsResponse (Maybe [BatchDescribeMergeConflictsError])

-- | The response's http status code.
batchDescribeMergeConflictsResponse_httpStatus :: Lens' BatchDescribeMergeConflictsResponse Int

-- | A list of conflicts for each file, including the conflict metadata and
--   the hunks of the differences between the files.
batchDescribeMergeConflictsResponse_conflicts :: Lens' BatchDescribeMergeConflictsResponse [Conflict]

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
batchDescribeMergeConflictsResponse_destinationCommitId :: Lens' BatchDescribeMergeConflictsResponse Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
batchDescribeMergeConflictsResponse_sourceCommitId :: Lens' BatchDescribeMergeConflictsResponse Text

-- | The system-generated ID of the pull request that contains the approval
--   rule you want to delete.
deletePullRequestApprovalRule_pullRequestId :: Lens' DeletePullRequestApprovalRule Text

-- | The name of the approval rule you want to delete.
deletePullRequestApprovalRule_approvalRuleName :: Lens' DeletePullRequestApprovalRule Text

-- | The response's http status code.
deletePullRequestApprovalRuleResponse_httpStatus :: Lens' DeletePullRequestApprovalRuleResponse Int

-- | The ID of the deleted approval rule.
--   
--   If the approval rule was deleted in an earlier API call, the response
--   is 200 OK without content.
deletePullRequestApprovalRuleResponse_approvalRuleId :: Lens' DeletePullRequestApprovalRuleResponse Text

-- | The name of the repository for which the trigger is configured.
getRepositoryTriggers_repositoryName :: Lens' GetRepositoryTriggers Text

-- | The system-generated unique ID for the trigger.
getRepositoryTriggersResponse_configurationId :: Lens' GetRepositoryTriggersResponse (Maybe Text)

-- | The JSON block of configuration information for each trigger.
getRepositoryTriggersResponse_triggers :: Lens' GetRepositoryTriggersResponse (Maybe [RepositoryTrigger])

-- | The response's http status code.
getRepositoryTriggersResponse_httpStatus :: Lens' GetRepositoryTriggersResponse Int

-- | The current name of the approval rule template.
updateApprovalRuleTemplateName_oldApprovalRuleTemplateName :: Lens' UpdateApprovalRuleTemplateName Text

-- | The new name you want to apply to the approval rule template.
updateApprovalRuleTemplateName_newApprovalRuleTemplateName :: Lens' UpdateApprovalRuleTemplateName Text

-- | The response's http status code.
updateApprovalRuleTemplateNameResponse_httpStatus :: Lens' UpdateApprovalRuleTemplateNameResponse Int

-- | The structure and content of the updated approval rule template.
updateApprovalRuleTemplateNameResponse_approvalRuleTemplate :: Lens' UpdateApprovalRuleTemplateNameResponse ApprovalRuleTemplate

-- | An email address for the person adding or updating the file.
putFile_email :: Lens' PutFile (Maybe Text)

-- | The file mode permissions of the blob. Valid file mode permissions are
--   listed here.
putFile_fileMode :: Lens' PutFile (Maybe FileModeTypeEnum)

-- | The full commit ID of the head commit in the branch where you want to
--   add or update the file. If this is an empty repository, no commit ID
--   is required. If this is not an empty repository, a commit ID is
--   required.
--   
--   The commit ID must match the ID of the head commit at the time of the
--   operation. Otherwise, an error occurs, and the file is not added or
--   updated.
putFile_parentCommitId :: Lens' PutFile (Maybe Text)

-- | The name of the person adding or updating the file. Although it is
--   optional, a name makes the commit history for your repository more
--   useful.
putFile_name :: Lens' PutFile (Maybe Text)

-- | A message about why this file was added or updated. Although it is
--   optional, a message makes the commit history for your repository more
--   useful.
putFile_commitMessage :: Lens' PutFile (Maybe Text)

-- | The name of the repository where you want to add or update the file.
putFile_repositoryName :: Lens' PutFile Text

-- | The name of the branch where you want to add or update the file. If
--   this is an empty repository, this branch is created.
putFile_branchName :: Lens' PutFile Text

-- | The content of the file, in binary object format.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
putFile_fileContent :: Lens' PutFile ByteString

-- | The name of the file you want to add or update, including the relative
--   path to the file in the repository.
--   
--   If the path does not currently exist in the repository, the path is
--   created as part of adding the file.
putFile_filePath :: Lens' PutFile Text

-- | The response's http status code.
putFileResponse_httpStatus :: Lens' PutFileResponse Int

-- | The full SHA ID of the commit that contains this file change.
putFileResponse_commitId :: Lens' PutFileResponse Text

-- | The ID of the blob, which is its SHA-1 pointer.
putFileResponse_blobId :: Lens' PutFileResponse Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains this file change.
putFileResponse_treeId :: Lens' PutFileResponse Text

-- | The email address for the commit that deletes the file. If no email
--   address is specified, the email address is left blank.
deleteFile_email :: Lens' DeleteFile (Maybe Text)

-- | The name of the author of the commit that deletes the file. If no name
--   is specified, the user's ARN is used as the author name and committer
--   name.
deleteFile_name :: Lens' DeleteFile (Maybe Text)

-- | The commit message you want to include as part of deleting the file.
--   Commit messages are limited to 256 KB. If no message is specified, a
--   default message is used.
deleteFile_commitMessage :: Lens' DeleteFile (Maybe Text)

-- | If a file is the only object in the folder or directory, specifies
--   whether to delete the folder or directory that contains the file. By
--   default, empty folders are deleted. This includes empty folders that
--   are part of the directory structure. For example, if the path to a
--   file is dir1/dir2/dir3/dir4, and dir2 and dir3 are empty, deleting the
--   last file in dir4 also deletes the empty folders dir4, dir3, and dir2.
deleteFile_keepEmptyFolders :: Lens' DeleteFile (Maybe Bool)

-- | The name of the repository that contains the file to delete.
deleteFile_repositoryName :: Lens' DeleteFile Text

-- | The name of the branch where the commit that deletes the file is made.
deleteFile_branchName :: Lens' DeleteFile Text

-- | The fully qualified path to the file that to be deleted, including the
--   full name and extension of that file. For example, /examples/file.md
--   is a fully qualified path to a file named file.md in a folder named
--   examples.
deleteFile_filePath :: Lens' DeleteFile Text

-- | The ID of the commit that is the tip of the branch where you want to
--   create the commit that deletes the file. This must be the HEAD commit
--   for the branch. The commit that deletes the file is created from this
--   commit ID.
deleteFile_parentCommitId :: Lens' DeleteFile Text

-- | The response's http status code.
deleteFileResponse_httpStatus :: Lens' DeleteFileResponse Int

-- | The full commit ID of the commit that contains the change that deletes
--   the file.
deleteFileResponse_commitId :: Lens' DeleteFileResponse Text

-- | The blob ID removed from the tree as part of deleting the file.
deleteFileResponse_blobId :: Lens' DeleteFileResponse Text

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the delete file change.
deleteFileResponse_treeId :: Lens' DeleteFileResponse Text

-- | The fully qualified path to the file to be deleted, including the full
--   name and extension of that file.
deleteFileResponse_filePath :: Lens' DeleteFileResponse Text

-- | An enumeration token that when provided in a request, returns the next
--   batch of the results.
getCommentsForComparedCommit_nextToken :: Lens' GetCommentsForComparedCommit (Maybe Text)

-- | To establish the directionality of the comparison, the full commit ID
--   of the before commit.
getCommentsForComparedCommit_beforeCommitId :: Lens' GetCommentsForComparedCommit (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 comments, but you can configure up to 500.
getCommentsForComparedCommit_maxResults :: Lens' GetCommentsForComparedCommit (Maybe Int)

-- | The name of the repository where you want to compare commits.
getCommentsForComparedCommit_repositoryName :: Lens' GetCommentsForComparedCommit Text

-- | To establish the directionality of the comparison, the full commit ID
--   of the after commit.
getCommentsForComparedCommit_afterCommitId :: Lens' GetCommentsForComparedCommit Text

-- | A list of comment objects on the compared commit.
getCommentsForComparedCommitResponse_commentsForComparedCommitData :: Lens' GetCommentsForComparedCommitResponse (Maybe [CommentsForComparedCommit])

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getCommentsForComparedCommitResponse_nextToken :: Lens' GetCommentsForComparedCommitResponse (Maybe Text)

-- | The response's http status code.
getCommentsForComparedCommitResponse_httpStatus :: Lens' GetCommentsForComparedCommitResponse Int

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
getMergeCommit_conflictDetailLevel :: Lens' GetMergeCommit (Maybe ConflictDetailLevelTypeEnum)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
getMergeCommit_conflictResolutionStrategy :: Lens' GetMergeCommit (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository that contains the merge commit about which
--   you want to get information.
getMergeCommit_repositoryName :: Lens' GetMergeCommit Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeCommit_sourceCommitSpecifier :: Lens' GetMergeCommit Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeCommit_destinationCommitSpecifier :: Lens' GetMergeCommit Text

-- | The commit ID for the merge commit created when the source branch was
--   merged into the destination branch. If the fast-forward merge strategy
--   was used, there is no merge commit.
getMergeCommitResponse_mergedCommitId :: Lens' GetMergeCommitResponse (Maybe Text)

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
getMergeCommitResponse_destinationCommitId :: Lens' GetMergeCommitResponse (Maybe Text)

-- | The commit ID of the merge base.
getMergeCommitResponse_baseCommitId :: Lens' GetMergeCommitResponse (Maybe Text)

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
getMergeCommitResponse_sourceCommitId :: Lens' GetMergeCommitResponse (Maybe Text)

-- | The response's http status code.
getMergeCommitResponse_httpStatus :: Lens' GetMergeCommitResponse Int

-- | The name of the repository in which to test the triggers.
testRepositoryTriggers_repositoryName :: Lens' TestRepositoryTriggers Text

-- | The list of triggers to test.
testRepositoryTriggers_triggers :: Lens' TestRepositoryTriggers [RepositoryTrigger]

-- | The list of triggers that were not tested. This list provides the
--   names of the triggers that could not be tested, separated by commas.
testRepositoryTriggersResponse_failedExecutions :: Lens' TestRepositoryTriggersResponse (Maybe [RepositoryTriggerExecutionFailure])

-- | The list of triggers that were successfully tested. This list provides
--   the names of the triggers that were successfully tested, separated by
--   commas.
testRepositoryTriggersResponse_successfulExecutions :: Lens' TestRepositoryTriggersResponse (Maybe [Text])

-- | The response's http status code.
testRepositoryTriggersResponse_httpStatus :: Lens' TestRepositoryTriggersResponse Int

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
mergePullRequestBySquash_email :: Lens' MergePullRequestBySquash (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
mergePullRequestBySquash_authorName :: Lens' MergePullRequestBySquash (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
mergePullRequestBySquash_conflictDetailLevel :: Lens' MergePullRequestBySquash (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message to include in the commit information for the merge.
mergePullRequestBySquash_commitMessage :: Lens' MergePullRequestBySquash (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
mergePullRequestBySquash_conflictResolution :: Lens' MergePullRequestBySquash (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
mergePullRequestBySquash_conflictResolutionStrategy :: Lens' MergePullRequestBySquash (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
mergePullRequestBySquash_keepEmptyFolders :: Lens' MergePullRequestBySquash (Maybe Bool)

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
mergePullRequestBySquash_sourceCommitId :: Lens' MergePullRequestBySquash (Maybe Text)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
mergePullRequestBySquash_pullRequestId :: Lens' MergePullRequestBySquash Text

-- | The name of the repository where the pull request was created.
mergePullRequestBySquash_repositoryName :: Lens' MergePullRequestBySquash Text

-- | Undocumented member.
mergePullRequestBySquashResponse_pullRequest :: Lens' MergePullRequestBySquashResponse (Maybe PullRequest)

-- | The response's http status code.
mergePullRequestBySquashResponse_httpStatus :: Lens' MergePullRequestBySquashResponse Int

-- | The system-generated ID of the comment you want to update. To get this
--   ID, use GetCommentsForComparedCommit or GetCommentsForPullRequest.
updateComment_commentId :: Lens' UpdateComment Text

-- | The updated content to replace the existing content of the comment.
updateComment_content :: Lens' UpdateComment Text

-- | Information about the updated comment.
updateCommentResponse_comment :: Lens' UpdateCommentResponse (Maybe Comment)

-- | The response's http status code.
updateCommentResponse_httpStatus :: Lens' UpdateCommentResponse Int

-- | The location of the comparison where you want to comment.
postCommentForComparedCommit_location :: Lens' PostCommentForComparedCommit (Maybe Location)

-- | To establish the directionality of the comparison, the full commit ID
--   of the before commit. Required for commenting on any commit unless
--   that commit is the initial commit.
postCommentForComparedCommit_beforeCommitId :: Lens' PostCommentForComparedCommit (Maybe Text)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
postCommentForComparedCommit_clientRequestToken :: Lens' PostCommentForComparedCommit (Maybe Text)

-- | The name of the repository where you want to post a comment on the
--   comparison between commits.
postCommentForComparedCommit_repositoryName :: Lens' PostCommentForComparedCommit Text

-- | To establish the directionality of the comparison, the full commit ID
--   of the after commit.
postCommentForComparedCommit_afterCommitId :: Lens' PostCommentForComparedCommit Text

-- | The content of the comment you want to make.
postCommentForComparedCommit_content :: Lens' PostCommentForComparedCommit Text

-- | In the directionality you established, the blob ID of the before blob.
postCommentForComparedCommitResponse_beforeBlobId :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | The location of the comment in the comparison between the two commits.
postCommentForComparedCommitResponse_location :: Lens' PostCommentForComparedCommitResponse (Maybe Location)

-- | In the directionality you established, the full commit ID of the after
--   commit.
postCommentForComparedCommitResponse_afterCommitId :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | In the directionality you established, the blob ID of the after blob.
postCommentForComparedCommitResponse_afterBlobId :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | In the directionality you established, the full commit ID of the
--   before commit.
postCommentForComparedCommitResponse_beforeCommitId :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | The name of the repository where you posted a comment on the
--   comparison between commits.
postCommentForComparedCommitResponse_repositoryName :: Lens' PostCommentForComparedCommitResponse (Maybe Text)

-- | The content of the comment you posted.
postCommentForComparedCommitResponse_comment :: Lens' PostCommentForComparedCommitResponse (Maybe Comment)

-- | The response's http status code.
postCommentForComparedCommitResponse_httpStatus :: Lens' PostCommentForComparedCommitResponse Int

-- | The branch where the merge is applied.
mergeBranchesByFastForward_targetBranch :: Lens' MergeBranchesByFastForward (Maybe Text)

-- | The name of the repository where you want to merge two branches.
mergeBranchesByFastForward_repositoryName :: Lens' MergeBranchesByFastForward Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesByFastForward_sourceCommitSpecifier :: Lens' MergeBranchesByFastForward Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesByFastForward_destinationCommitSpecifier :: Lens' MergeBranchesByFastForward Text

-- | The commit ID of the merge in the destination or target branch.
mergeBranchesByFastForwardResponse_commitId :: Lens' MergeBranchesByFastForwardResponse (Maybe Text)

-- | The tree ID of the merge in the destination or target branch.
mergeBranchesByFastForwardResponse_treeId :: Lens' MergeBranchesByFastForwardResponse (Maybe Text)

-- | The response's http status code.
mergeBranchesByFastForwardResponse_httpStatus :: Lens' MergeBranchesByFastForwardResponse Int

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
updatePullRequestTitle_pullRequestId :: Lens' UpdatePullRequestTitle Text

-- | The updated title of the pull request. This replaces the existing
--   title.
updatePullRequestTitle_title :: Lens' UpdatePullRequestTitle Text

-- | The response's http status code.
updatePullRequestTitleResponse_httpStatus :: Lens' UpdatePullRequestTitleResponse Int

-- | Information about the updated pull request.
updatePullRequestTitleResponse_pullRequest :: Lens' UpdatePullRequestTitleResponse PullRequest

-- | The name of the template that you want to disassociate from one or
--   more repositories.
batchDisassociateApprovalRuleTemplateFromRepositories_approvalRuleTemplateName :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositories Text

-- | The repository names that you want to disassociate from the approval
--   rule template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
batchDisassociateApprovalRuleTemplateFromRepositories_repositoryNames :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositories [Text]

-- | The response's http status code.
batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_httpStatus :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse Int

-- | A list of repository names that have had their association with the
--   template removed.
batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_disassociatedRepositoryNames :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse [Text]

-- | A list of any errors that might have occurred while attempting to
--   remove the association between the template and the repositories.
batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_errors :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse [BatchDisassociateApprovalRuleTemplateFromRepositoriesError]

-- | The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
updatePullRequestApprovalRuleContent_existingRuleContentSha256 :: Lens' UpdatePullRequestApprovalRuleContent (Maybe Text)

-- | The system-generated ID of the pull request.
updatePullRequestApprovalRuleContent_pullRequestId :: Lens' UpdatePullRequestApprovalRuleContent Text

-- | The name of the approval rule you want to update.
updatePullRequestApprovalRuleContent_approvalRuleName :: Lens' UpdatePullRequestApprovalRuleContent Text

-- | The updated content for the approval rule.
--   
--   When you update the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
updatePullRequestApprovalRuleContent_newRuleContent :: Lens' UpdatePullRequestApprovalRuleContent Text

-- | The response's http status code.
updatePullRequestApprovalRuleContentResponse_httpStatus :: Lens' UpdatePullRequestApprovalRuleContentResponse Int

-- | Information about the updated approval rule.
updatePullRequestApprovalRuleContentResponse_approvalRule :: Lens' UpdatePullRequestApprovalRuleContentResponse ApprovalRule

-- | The name of the repository that contains the blob.
getBlob_repositoryName :: Lens' GetBlob Text

-- | The ID of the blob, which is its SHA-1 pointer.
getBlob_blobId :: Lens' GetBlob Text

-- | The response's http status code.
getBlobResponse_httpStatus :: Lens' GetBlobResponse Int

-- | The content of the blob, usually a file.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
getBlobResponse_content :: Lens' GetBlobResponse ByteString

-- | The name for the approval rule template.
associateApprovalRuleTemplateWithRepository_approvalRuleTemplateName :: Lens' AssociateApprovalRuleTemplateWithRepository Text

-- | The name of the repository that you want to associate with the
--   template.
associateApprovalRuleTemplateWithRepository_repositoryName :: Lens' AssociateApprovalRuleTemplateWithRepository Text

-- | The name of the repository where you want to create or update the
--   trigger.
putRepositoryTriggers_repositoryName :: Lens' PutRepositoryTriggers Text

-- | The JSON block of configuration information for each trigger.
putRepositoryTriggers_triggers :: Lens' PutRepositoryTriggers [RepositoryTrigger]

-- | The system-generated unique ID for the create or update operation.
putRepositoryTriggersResponse_configurationId :: Lens' PutRepositoryTriggersResponse (Maybe Text)

-- | The response's http status code.
putRepositoryTriggersResponse_httpStatus :: Lens' PutRepositoryTriggersResponse Int

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listApprovalRuleTemplates_nextToken :: Lens' ListApprovalRuleTemplates (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
listApprovalRuleTemplates_maxResults :: Lens' ListApprovalRuleTemplates (Maybe Int)

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listApprovalRuleTemplatesResponse_nextToken :: Lens' ListApprovalRuleTemplatesResponse (Maybe Text)

-- | The names of all the approval rule templates found in the AWS Region
--   for your AWS account.
listApprovalRuleTemplatesResponse_approvalRuleTemplateNames :: Lens' ListApprovalRuleTemplatesResponse (Maybe [Text])

-- | The response's http status code.
listApprovalRuleTemplatesResponse_httpStatus :: Lens' ListApprovalRuleTemplatesResponse Int

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
describeMergeConflicts_conflictDetailLevel :: Lens' DescribeMergeConflicts (Maybe ConflictDetailLevelTypeEnum)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
describeMergeConflicts_nextToken :: Lens' DescribeMergeConflicts (Maybe Text)

-- | The maximum number of merge hunks to include in the output.
describeMergeConflicts_maxMergeHunks :: Lens' DescribeMergeConflicts (Maybe Int)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
describeMergeConflicts_conflictResolutionStrategy :: Lens' DescribeMergeConflicts (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository where you want to get information about a
--   merge conflict.
describeMergeConflicts_repositoryName :: Lens' DescribeMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
describeMergeConflicts_destinationCommitSpecifier :: Lens' DescribeMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
describeMergeConflicts_sourceCommitSpecifier :: Lens' DescribeMergeConflicts Text

-- | The merge option or strategy you want to use to merge the code.
describeMergeConflicts_mergeOption :: Lens' DescribeMergeConflicts MergeOptionTypeEnum

-- | The path of the target files used to describe the conflicts.
describeMergeConflicts_filePath :: Lens' DescribeMergeConflicts Text

-- | The commit ID of the merge base.
describeMergeConflictsResponse_baseCommitId :: Lens' DescribeMergeConflictsResponse (Maybe Text)

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
describeMergeConflictsResponse_nextToken :: Lens' DescribeMergeConflictsResponse (Maybe Text)

-- | The response's http status code.
describeMergeConflictsResponse_httpStatus :: Lens' DescribeMergeConflictsResponse Int

-- | Contains metadata about the conflicts found in the merge.
describeMergeConflictsResponse_conflictMetadata :: Lens' DescribeMergeConflictsResponse ConflictMetadata

-- | A list of merge hunks of the differences between the files or lines.
describeMergeConflictsResponse_mergeHunks :: Lens' DescribeMergeConflictsResponse [MergeHunk]

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
describeMergeConflictsResponse_destinationCommitId :: Lens' DescribeMergeConflictsResponse Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
describeMergeConflictsResponse_sourceCommitId :: Lens' DescribeMergeConflictsResponse Text

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The key-value pair to use when tagging this repository.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
mergeBranchesByThreeWay_email :: Lens' MergeBranchesByThreeWay (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
mergeBranchesByThreeWay_authorName :: Lens' MergeBranchesByThreeWay (Maybe Text)

-- | The branch where the merge is applied.
mergeBranchesByThreeWay_targetBranch :: Lens' MergeBranchesByThreeWay (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
mergeBranchesByThreeWay_conflictDetailLevel :: Lens' MergeBranchesByThreeWay (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message to include in the commit information for the merge.
mergeBranchesByThreeWay_commitMessage :: Lens' MergeBranchesByThreeWay (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
mergeBranchesByThreeWay_conflictResolution :: Lens' MergeBranchesByThreeWay (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
mergeBranchesByThreeWay_conflictResolutionStrategy :: Lens' MergeBranchesByThreeWay (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
mergeBranchesByThreeWay_keepEmptyFolders :: Lens' MergeBranchesByThreeWay (Maybe Bool)

-- | The name of the repository where you want to merge two branches.
mergeBranchesByThreeWay_repositoryName :: Lens' MergeBranchesByThreeWay Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesByThreeWay_sourceCommitSpecifier :: Lens' MergeBranchesByThreeWay Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
mergeBranchesByThreeWay_destinationCommitSpecifier :: Lens' MergeBranchesByThreeWay Text

-- | The commit ID of the merge in the destination or target branch.
mergeBranchesByThreeWayResponse_commitId :: Lens' MergeBranchesByThreeWayResponse (Maybe Text)

-- | The tree ID of the merge in the destination or target branch.
mergeBranchesByThreeWayResponse_treeId :: Lens' MergeBranchesByThreeWayResponse (Maybe Text)

-- | The response's http status code.
mergeBranchesByThreeWayResponse_httpStatus :: Lens' MergeBranchesByThreeWayResponse Int

-- | The fully quaified reference that identifies the commit that contains
--   the file. For example, you can specify a full commit ID, a tag, a
--   branch name, or a reference such as refs/heads/master. If none is
--   provided, the head commit is used.
getFile_commitSpecifier :: Lens' GetFile (Maybe Text)

-- | The name of the repository that contains the file.
getFile_repositoryName :: Lens' GetFile Text

-- | The fully qualified path to the file, including the full name and
--   extension of the file. For example, /examples/file.md is the fully
--   qualified path to a file named file.md in a folder named examples.
getFile_filePath :: Lens' GetFile Text

-- | The response's http status code.
getFileResponse_httpStatus :: Lens' GetFileResponse Int

-- | The full commit ID of the commit that contains the content returned by
--   GetFile.
getFileResponse_commitId :: Lens' GetFileResponse Text

-- | The blob ID of the object that represents the file content.
getFileResponse_blobId :: Lens' GetFileResponse Text

-- | The fully qualified path to the specified file. Returns the name and
--   extension of the file.
getFileResponse_filePath :: Lens' GetFileResponse Text

-- | The extrapolated file mode permissions of the blob. Valid values
--   include strings such as EXECUTABLE and not numeric values.
--   
--   The file mode permissions returned by this API are not the standard
--   file mode permission values, such as 100644, but rather extrapolated
--   values. See the supported return values.
getFileResponse_fileMode :: Lens' GetFileResponse FileModeTypeEnum

-- | The size of the contents of the file, in bytes.
getFileResponse_fileSize :: Lens' GetFileResponse Integer

-- | The base-64 encoded binary data object that represents the content of
--   the file.-- -- <i>Note:</i> This <tt>Lens</tt> automatically encodes
--   and decodes Base64 data. -- The underlying isomorphism will encode to
--   Base64 representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
getFileResponse_fileContent :: Lens' GetFileResponse ByteString

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   remove tags.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag key for each tag that you want to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
getMergeConflicts_conflictDetailLevel :: Lens' GetMergeConflicts (Maybe ConflictDetailLevelTypeEnum)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
getMergeConflicts_nextToken :: Lens' GetMergeConflicts (Maybe Text)

-- | The maximum number of files to include in the output.
getMergeConflicts_maxConflictFiles :: Lens' GetMergeConflicts (Maybe Int)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
getMergeConflicts_conflictResolutionStrategy :: Lens' GetMergeConflicts (Maybe ConflictResolutionStrategyTypeEnum)

-- | The name of the repository where the pull request was created.
getMergeConflicts_repositoryName :: Lens' GetMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeConflicts_destinationCommitSpecifier :: Lens' GetMergeConflicts Text

-- | The branch, tag, HEAD, or other fully qualified reference used to
--   identify a commit (for example, a branch name or a full commit ID).
getMergeConflicts_sourceCommitSpecifier :: Lens' GetMergeConflicts Text

-- | The merge option or strategy you want to use to merge the code.
getMergeConflicts_mergeOption :: Lens' GetMergeConflicts MergeOptionTypeEnum

-- | The commit ID of the merge base.
getMergeConflictsResponse_baseCommitId :: Lens' GetMergeConflictsResponse (Maybe Text)

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getMergeConflictsResponse_nextToken :: Lens' GetMergeConflictsResponse (Maybe Text)

-- | The response's http status code.
getMergeConflictsResponse_httpStatus :: Lens' GetMergeConflictsResponse Int

-- | A Boolean value that indicates whether the code is mergeable by the
--   specified merge option.
getMergeConflictsResponse_mergeable :: Lens' GetMergeConflictsResponse Bool

-- | The commit ID of the destination commit specifier that was used in the
--   merge evaluation.
getMergeConflictsResponse_destinationCommitId :: Lens' GetMergeConflictsResponse Text

-- | The commit ID of the source commit specifier that was used in the
--   merge evaluation.
getMergeConflictsResponse_sourceCommitId :: Lens' GetMergeConflictsResponse Text

-- | A list of metadata for any conflicting files. If the specified merge
--   strategy is FAST_FORWARD_MERGE, this list is always empty.
getMergeConflictsResponse_conflictMetadataList :: Lens' GetMergeConflictsResponse [ConflictMetadata]

-- | The name of the repository to delete.
deleteRepository_repositoryName :: Lens' DeleteRepository Text

-- | The ID of the repository that was deleted.
deleteRepositoryResponse_repositoryId :: Lens' DeleteRepositoryResponse (Maybe Text)

-- | The response's http status code.
deleteRepositoryResponse_httpStatus :: Lens' DeleteRepositoryResponse Int

-- | The unique, system-generated ID of the comment. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
deleteCommentContent_commentId :: Lens' DeleteCommentContent Text

-- | Information about the comment you just deleted.
deleteCommentContentResponse_comment :: Lens' DeleteCommentContentResponse (Maybe Comment)

-- | The response's http status code.
deleteCommentContentResponse_httpStatus :: Lens' DeleteCommentContentResponse Int

-- | The email address of the person merging the branches. This information
--   is used in the commit information for the merge.
mergePullRequestByThreeWay_email :: Lens' MergePullRequestByThreeWay (Maybe Text)

-- | The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
mergePullRequestByThreeWay_authorName :: Lens' MergePullRequestByThreeWay (Maybe Text)

-- | The level of conflict detail to use. If unspecified, the default
--   FILE_LEVEL is used, which returns a not-mergeable result if the same
--   file has differences in both branches. If LINE_LEVEL is specified, a
--   conflict is considered not mergeable if the same file in both branches
--   has differences on the same line.
mergePullRequestByThreeWay_conflictDetailLevel :: Lens' MergePullRequestByThreeWay (Maybe ConflictDetailLevelTypeEnum)

-- | The commit message to include in the commit information for the merge.
mergePullRequestByThreeWay_commitMessage :: Lens' MergePullRequestByThreeWay (Maybe Text)

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
mergePullRequestByThreeWay_conflictResolution :: Lens' MergePullRequestByThreeWay (Maybe ConflictResolution)

-- | Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
mergePullRequestByThreeWay_conflictResolutionStrategy :: Lens' MergePullRequestByThreeWay (Maybe ConflictResolutionStrategyTypeEnum)

-- | If the commit contains deletions, whether to keep a folder or folder
--   structure if the changes leave the folders empty. If true, a .gitkeep
--   file is created for empty folders. The default is false.
mergePullRequestByThreeWay_keepEmptyFolders :: Lens' MergePullRequestByThreeWay (Maybe Bool)

-- | The full commit ID of the original or updated commit in the pull
--   request source branch. Pass this value if you want an exception thrown
--   if the current commit ID of the tip of the source branch does not
--   match this commit ID.
mergePullRequestByThreeWay_sourceCommitId :: Lens' MergePullRequestByThreeWay (Maybe Text)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
mergePullRequestByThreeWay_pullRequestId :: Lens' MergePullRequestByThreeWay Text

-- | The name of the repository where the pull request was created.
mergePullRequestByThreeWay_repositoryName :: Lens' MergePullRequestByThreeWay Text

-- | Undocumented member.
mergePullRequestByThreeWayResponse_pullRequest :: Lens' MergePullRequestByThreeWayResponse (Maybe PullRequest)

-- | The response's http status code.
mergePullRequestByThreeWayResponse_httpStatus :: Lens' MergePullRequestByThreeWayResponse Int

-- | Optional. The pull request event type about which you want to return
--   information.
describePullRequestEvents_pullRequestEventType :: Lens' DescribePullRequestEvents (Maybe PullRequestEventType)

-- | The Amazon Resource Name (ARN) of the user whose actions resulted in
--   the event. Examples include updating the pull request with more
--   commits or changing the status of a pull request.
describePullRequestEvents_actorArn :: Lens' DescribePullRequestEvents (Maybe Text)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
describePullRequestEvents_nextToken :: Lens' DescribePullRequestEvents (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 events, which is also the maximum number
--   of events that can be returned in a result.
describePullRequestEvents_maxResults :: Lens' DescribePullRequestEvents (Maybe Int)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
describePullRequestEvents_pullRequestId :: Lens' DescribePullRequestEvents Text

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
describePullRequestEventsResponse_nextToken :: Lens' DescribePullRequestEventsResponse (Maybe Text)

-- | The response's http status code.
describePullRequestEventsResponse_httpStatus :: Lens' DescribePullRequestEventsResponse Int

-- | Information about the pull request events.
describePullRequestEventsResponse_pullRequestEvents :: Lens' DescribePullRequestEventsResponse [PullRequestEvent]

-- | The names of the repositories to get information about.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
batchGetRepositories_repositoryNames :: Lens' BatchGetRepositories [Text]

-- | A list of repositories returned by the batch get repositories
--   operation.
batchGetRepositoriesResponse_repositories :: Lens' BatchGetRepositoriesResponse (Maybe [RepositoryMetadata])

-- | Returns a list of repository names for which information could not be
--   found.
batchGetRepositoriesResponse_repositoriesNotFound :: Lens' BatchGetRepositoriesResponse (Maybe [Text])

-- | The response's http status code.
batchGetRepositoriesResponse_httpStatus :: Lens' BatchGetRepositoriesResponse Int

-- | The name of the template for which you want to update the description.
updateApprovalRuleTemplateDescription_approvalRuleTemplateName :: Lens' UpdateApprovalRuleTemplateDescription Text

-- | The updated description of the approval rule template.
updateApprovalRuleTemplateDescription_approvalRuleTemplateDescription :: Lens' UpdateApprovalRuleTemplateDescription Text

-- | The response's http status code.
updateApprovalRuleTemplateDescriptionResponse_httpStatus :: Lens' UpdateApprovalRuleTemplateDescriptionResponse Int

-- | The structure and content of the updated approval rule template.
updateApprovalRuleTemplateDescriptionResponse_approvalRuleTemplate :: Lens' UpdateApprovalRuleTemplateDescriptionResponse ApprovalRuleTemplate

-- | The ID of the pull request for which you want to get information about
--   whether approval rules have been set aside (overridden).
getPullRequestOverrideState_pullRequestId :: Lens' GetPullRequestOverrideState Text

-- | The system-generated ID of the revision for the pull request. To
--   retrieve the most recent revision ID, use GetPullRequest.
getPullRequestOverrideState_revisionId :: Lens' GetPullRequestOverrideState Text

-- | A Boolean value that indicates whether a pull request has had its
--   rules set aside (TRUE) or whether all approval rules still apply
--   (FALSE).
getPullRequestOverrideStateResponse_overridden :: Lens' GetPullRequestOverrideStateResponse (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the user or identity that overrode
--   the rules and their requirements for the pull request.
getPullRequestOverrideStateResponse_overrider :: Lens' GetPullRequestOverrideStateResponse (Maybe Text)

-- | The response's http status code.
getPullRequestOverrideStateResponse_httpStatus :: Lens' GetPullRequestOverrideStateResponse Int

-- | The system-generated ID for the pull request.
getPullRequestApprovalStates_pullRequestId :: Lens' GetPullRequestApprovalStates Text

-- | The system-generated ID for the pull request revision.
getPullRequestApprovalStates_revisionId :: Lens' GetPullRequestApprovalStates Text

-- | Information about users who have approved the pull request.
getPullRequestApprovalStatesResponse_approvals :: Lens' GetPullRequestApprovalStatesResponse (Maybe [Approval])

-- | The response's http status code.
getPullRequestApprovalStatesResponse_httpStatus :: Lens' GetPullRequestApprovalStatesResponse Int

-- | The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the comment was made.
getCommentsForPullRequest_afterCommitId :: Lens' GetCommentsForPullRequest (Maybe Text)

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
getCommentsForPullRequest_nextToken :: Lens' GetCommentsForPullRequest (Maybe Text)

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was created.
getCommentsForPullRequest_beforeCommitId :: Lens' GetCommentsForPullRequest (Maybe Text)

-- | The name of the repository that contains the pull request.
getCommentsForPullRequest_repositoryName :: Lens' GetCommentsForPullRequest (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results. The default is 100 comments. You can return up to 500
--   comments with a single request.
getCommentsForPullRequest_maxResults :: Lens' GetCommentsForPullRequest (Maybe Int)

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
getCommentsForPullRequest_pullRequestId :: Lens' GetCommentsForPullRequest Text

-- | An array of comment objects on the pull request.
getCommentsForPullRequestResponse_commentsForPullRequestData :: Lens' GetCommentsForPullRequestResponse (Maybe [CommentsForPullRequest])

-- | An enumeration token that can be used in a request to return the next
--   batch of the results.
getCommentsForPullRequestResponse_nextToken :: Lens' GetCommentsForPullRequestResponse (Maybe Text)

-- | The response's http status code.
getCommentsForPullRequestResponse_httpStatus :: Lens' GetCommentsForPullRequestResponse Int

-- | The system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
updatePullRequestStatus_pullRequestId :: Lens' UpdatePullRequestStatus Text

-- | The status of the pull request. The only valid operations are to
--   update the status from <tt>OPEN</tt> to <tt>OPEN</tt>, <tt>OPEN</tt>
--   to <tt>CLOSED</tt> or from <tt>CLOSED</tt> to <tt>CLOSED</tt>.
updatePullRequestStatus_pullRequestStatus :: Lens' UpdatePullRequestStatus PullRequestStatusEnum

-- | The response's http status code.
updatePullRequestStatusResponse_httpStatus :: Lens' UpdatePullRequestStatusResponse Int

-- | Information about the pull request.
updatePullRequestStatusResponse_pullRequest :: Lens' UpdatePullRequestStatusResponse PullRequest

-- | An enumeration token that, when provided in a request, returns the
--   next batch of the results.
listAssociatedApprovalRuleTemplatesForRepository_nextToken :: Lens' ListAssociatedApprovalRuleTemplatesForRepository (Maybe Text)

-- | A non-zero, non-negative integer used to limit the number of returned
--   results.
listAssociatedApprovalRuleTemplatesForRepository_maxResults :: Lens' ListAssociatedApprovalRuleTemplatesForRepository (Maybe Int)

-- | The name of the repository for which you want to list all associated
--   approval rule templates.
listAssociatedApprovalRuleTemplatesForRepository_repositoryName :: Lens' ListAssociatedApprovalRuleTemplatesForRepository Text

-- | An enumeration token that allows the operation to batch the next
--   results of the operation.
listAssociatedApprovalRuleTemplatesForRepositoryResponse_nextToken :: Lens' ListAssociatedApprovalRuleTemplatesForRepositoryResponse (Maybe Text)

-- | The names of all approval rule templates associated with the
--   repository.
listAssociatedApprovalRuleTemplatesForRepositoryResponse_approvalRuleTemplateNames :: Lens' ListAssociatedApprovalRuleTemplatesForRepositoryResponse (Maybe [Text])

-- | The response's http status code.
listAssociatedApprovalRuleTemplatesForRepositoryResponse_httpStatus :: Lens' ListAssociatedApprovalRuleTemplatesForRepositoryResponse Int

-- | The state of the approval, APPROVE or REVOKE. REVOKE states are not
--   stored.
approval_approvalState :: Lens' Approval (Maybe ApprovalState)

-- | The Amazon Resource Name (ARN) of the user.
approval_userArn :: Lens' Approval (Maybe Text)

-- | The SHA-256 hash signature for the content of the approval rule.
approvalRule_ruleContentSha256 :: Lens' ApprovalRule (Maybe Text)

-- | The date the approval rule was most recently changed, in timestamp
--   format.
approvalRule_lastModifiedDate :: Lens' ApprovalRule (Maybe UTCTime)

-- | The name of the approval rule.
approvalRule_approvalRuleName :: Lens' ApprovalRule (Maybe Text)

-- | The system-generated ID of the approval rule.
approvalRule_approvalRuleId :: Lens' ApprovalRule (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule.
approvalRule_lastModifiedUser :: Lens' ApprovalRule (Maybe Text)

-- | The approval rule template used to create the rule.
approvalRule_originApprovalRuleTemplate :: Lens' ApprovalRule (Maybe OriginApprovalRuleTemplate)

-- | The date the approval rule was created, in timestamp format.
approvalRule_creationDate :: Lens' ApprovalRule (Maybe UTCTime)

-- | The content of the approval rule.
approvalRule_approvalRuleContent :: Lens' ApprovalRule (Maybe Text)

-- | The name of the approval rule.
approvalRuleEventMetadata_approvalRuleName :: Lens' ApprovalRuleEventMetadata (Maybe Text)

-- | The system-generated ID of the approval rule.
approvalRuleEventMetadata_approvalRuleId :: Lens' ApprovalRuleEventMetadata (Maybe Text)

-- | The content of the approval rule.
approvalRuleEventMetadata_approvalRuleContent :: Lens' ApprovalRuleEventMetadata (Maybe Text)

-- | The status of the override event.
approvalRuleOverriddenEventMetadata_overrideStatus :: Lens' ApprovalRuleOverriddenEventMetadata (Maybe OverrideStatus)

-- | The revision ID of the pull request when the override event occurred.
approvalRuleOverriddenEventMetadata_revisionId :: Lens' ApprovalRuleOverriddenEventMetadata (Maybe Text)

-- | The SHA-256 hash signature for the content of the approval rule
--   template.
approvalRuleTemplate_ruleContentSha256 :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The system-generated ID of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateId :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The date the approval rule template was most recently changed, in
--   timestamp format.
approvalRuleTemplate_lastModifiedDate :: Lens' ApprovalRuleTemplate (Maybe UTCTime)

-- | The description of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateDescription :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The content of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateContent :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who made the most recent
--   changes to the approval rule template.
approvalRuleTemplate_lastModifiedUser :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The date the approval rule template was created, in timestamp format.
approvalRuleTemplate_creationDate :: Lens' ApprovalRuleTemplate (Maybe UTCTime)

-- | The name of the approval rule template.
approvalRuleTemplate_approvalRuleTemplateName :: Lens' ApprovalRuleTemplate (Maybe Text)

-- | The approval status for the pull request.
approvalStateChangedEventMetadata_approvalStatus :: Lens' ApprovalStateChangedEventMetadata (Maybe ApprovalState)

-- | The revision ID of the pull request when the approval state changed.
approvalStateChangedEventMetadata_revisionId :: Lens' ApprovalStateChangedEventMetadata (Maybe Text)

-- | An error code that specifies whether the repository name was not valid
--   or not found.
batchAssociateApprovalRuleTemplateWithRepositoriesError_errorCode :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)

-- | The name of the repository where the association was not made.
batchAssociateApprovalRuleTemplateWithRepositoriesError_repositoryName :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)

-- | An error message that provides details about why the repository name
--   was not found or not valid.
batchAssociateApprovalRuleTemplateWithRepositoriesError_errorMessage :: Lens' BatchAssociateApprovalRuleTemplateWithRepositoriesError (Maybe Text)

-- | The path to the file.
batchDescribeMergeConflictsError_filePath :: Lens' BatchDescribeMergeConflictsError Text

-- | The name of the exception.
batchDescribeMergeConflictsError_exceptionName :: Lens' BatchDescribeMergeConflictsError Text

-- | The message provided by the exception.
batchDescribeMergeConflictsError_message :: Lens' BatchDescribeMergeConflictsError Text

-- | An error code that specifies whether the repository name was not valid
--   or not found.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorCode :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)

-- | The name of the repository where the association with the template was
--   not able to be removed.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_repositoryName :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)

-- | An error message that provides details about why the repository name
--   was either not found or not valid.
batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorMessage :: Lens' BatchDisassociateApprovalRuleTemplateFromRepositoriesError (Maybe Text)

-- | A commit ID that either could not be found or was not in a valid
--   format.
batchGetCommitsError_commitId :: Lens' BatchGetCommitsError (Maybe Text)

-- | An error code that specifies whether the commit ID was not valid or
--   not found.
batchGetCommitsError_errorCode :: Lens' BatchGetCommitsError (Maybe Text)

-- | An error message that provides detail about why the commit ID either
--   was not found or was not valid.
batchGetCommitsError_errorMessage :: Lens' BatchGetCommitsError (Maybe Text)

-- | The path to the blob and associated file name, if any.
blobMetadata_path :: Lens' BlobMetadata (Maybe Text)

-- | The file mode permissions of the blob. File mode permission codes
--   include:
--   
--   <ul>
--   <li><tt>100644</tt> indicates read/write</li>
--   <li><tt>100755</tt> indicates read/write/execute</li>
--   <li><tt>160000</tt> indicates a submodule</li>
--   <li><tt>120000</tt> indicates a symlink</li>
--   </ul>
blobMetadata_mode :: Lens' BlobMetadata (Maybe Text)

-- | The full ID of the blob.
blobMetadata_blobId :: Lens' BlobMetadata (Maybe Text)

-- | The ID of the last commit made to the branch.
branchInfo_commitId :: Lens' BranchInfo (Maybe Text)

-- | The name of the branch.
branchInfo_branchName :: Lens' BranchInfo (Maybe Text)

-- | The date and time the comment was most recently modified, in timestamp
--   format.
comment_lastModifiedDate :: Lens' Comment (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the person who posted the comment.
comment_authorArn :: Lens' Comment (Maybe Text)

-- | The content of the comment.
comment_content :: Lens' Comment (Maybe Text)

-- | The emoji reactions to a comment, if any, submitted by the user whose
--   credentials are associated with the call to the API.
comment_callerReactions :: Lens' Comment (Maybe [Text])

-- | The date and time the comment was created, in timestamp format.
comment_creationDate :: Lens' Comment (Maybe UTCTime)

-- | A Boolean value indicating whether the comment has been deleted.
comment_deleted :: Lens' Comment (Maybe Bool)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
comment_clientRequestToken :: Lens' Comment (Maybe Text)

-- | The system-generated comment ID.
comment_commentId :: Lens' Comment (Maybe Text)

-- | The ID of the comment for which this comment is a reply, if any.
comment_inReplyTo :: Lens' Comment (Maybe Text)

-- | A string to integer map that represents the number of individual users
--   who have responded to a comment with the specified reactions.
comment_reactionCounts :: Lens' Comment (Maybe (HashMap Text Int))

-- | The full blob ID of the commit used to establish the before of the
--   comparison.
commentsForComparedCommit_beforeBlobId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | Location information about the comment on the comparison, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE or AFTER.
commentsForComparedCommit_location :: Lens' CommentsForComparedCommit (Maybe Location)

-- | The full commit ID of the commit used to establish the after of the
--   comparison.
commentsForComparedCommit_afterCommitId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The full blob ID of the commit used to establish the after of the
--   comparison.
commentsForComparedCommit_afterBlobId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The full commit ID of the commit used to establish the before of the
--   comparison.
commentsForComparedCommit_beforeCommitId :: Lens' CommentsForComparedCommit (Maybe Text)

-- | The name of the repository that contains the compared commits.
commentsForComparedCommit_repositoryName :: Lens' CommentsForComparedCommit (Maybe Text)

-- | An array of comment objects. Each comment object contains information
--   about a comment on the comparison between commits.
commentsForComparedCommit_comments :: Lens' CommentsForComparedCommit (Maybe [Comment])

-- | The full blob ID of the file on which you want to comment on the
--   destination commit.
commentsForPullRequest_beforeBlobId :: Lens' CommentsForPullRequest (Maybe Text)

-- | Location information about the comment on the pull request, including
--   the file name, line number, and whether the version of the file where
--   the comment was made is BEFORE (destination branch) or AFTER (source
--   branch).
commentsForPullRequest_location :: Lens' CommentsForPullRequest (Maybe Location)

-- | The full commit ID of the commit that was the tip of the source branch
--   at the time the comment was made.
commentsForPullRequest_afterCommitId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The system-generated ID of the pull request.
commentsForPullRequest_pullRequestId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The full blob ID of the file on which you want to comment on the
--   source commit.
commentsForPullRequest_afterBlobId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The full commit ID of the commit that was the tip of the destination
--   branch when the pull request was created. This commit is superceded by
--   the after commit in the source branch when and if you merge the source
--   branch into the destination branch.
commentsForPullRequest_beforeCommitId :: Lens' CommentsForPullRequest (Maybe Text)

-- | The name of the repository that contains the pull request.
commentsForPullRequest_repositoryName :: Lens' CommentsForPullRequest (Maybe Text)

-- | An array of comment objects. Each comment object contains information
--   about a comment on the pull request.
commentsForPullRequest_comments :: Lens' CommentsForPullRequest (Maybe [Comment])

-- | The full SHA ID of the specified commit.
commit_commitId :: Lens' Commit (Maybe Text)

-- | Information about the person who committed the specified commit, also
--   known as the committer. Information includes the date in timestamp
--   format with GMT offset, the name of the committer, and the email
--   address for the committer, as configured in Git.
--   
--   For more information about the difference between an author and a
--   committer in Git, see <a>Viewing the Commit History</a> in Pro Git by
--   Scott Chacon and Ben Straub.
commit_committer :: Lens' Commit (Maybe UserInfo)

-- | Tree information for the specified commit.
commit_treeId :: Lens' Commit (Maybe Text)

-- | Any other data associated with the specified commit.
commit_additionalData :: Lens' Commit (Maybe Text)

-- | A list of parent commits for the specified commit. Each parent commit
--   ID is the full commit ID.
commit_parents :: Lens' Commit (Maybe [Text])

-- | Information about the author of the specified commit. Information
--   includes the date in timestamp format with GMT offset, the name of the
--   author, and the email address for the author, as configured in Git.
commit_author :: Lens' Commit (Maybe UserInfo)

-- | The commit message associated with the specified commit.
commit_message :: Lens' Commit (Maybe Text)

-- | A list of hunks that contain the differences between files or lines
--   causing the conflict.
conflict_mergeHunks :: Lens' Conflict (Maybe [MergeHunk])

-- | Metadata about a conflict in a merge operation.
conflict_conflictMetadata :: Lens' Conflict (Maybe ConflictMetadata)

-- | The number of conflicts, including both hunk conflicts and metadata
--   conflicts.
conflictMetadata_numberOfConflicts :: Lens' ConflictMetadata (Maybe Int)

-- | A boolean value indicating whether there are conflicts in the content
--   of a file.
conflictMetadata_contentConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | The file sizes of the file in the source, destination, and base of the
--   merge.
conflictMetadata_fileSizes :: Lens' ConflictMetadata (Maybe FileSizes)

-- | The path of the file that contains conflicts.
conflictMetadata_filePath :: Lens' ConflictMetadata (Maybe Text)

-- | A boolean value (true or false) indicating whether the file is binary
--   or textual in the source, destination, and base of the merge.
conflictMetadata_isBinaryFile :: Lens' ConflictMetadata (Maybe IsBinaryFile)

-- | A boolean value indicating whether there are conflicts in the file
--   mode of a file.
conflictMetadata_fileModeConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | A boolean value (true or false) indicating whether there are conflicts
--   between the branches in the object type of a file, folder, or
--   submodule.
conflictMetadata_objectTypeConflict :: Lens' ConflictMetadata (Maybe Bool)

-- | Whether an add, modify, or delete operation caused the conflict
--   between the source and destination of the merge.
conflictMetadata_mergeOperations :: Lens' ConflictMetadata (Maybe MergeOperations)

-- | Information about any object type conflicts in a merge operation.
conflictMetadata_objectTypes :: Lens' ConflictMetadata (Maybe ObjectTypes)

-- | The file modes of the file in the source, destination, and base of the
--   merge.
conflictMetadata_fileModes :: Lens' ConflictMetadata (Maybe FileModes)

-- | File modes that are set as part of the merge conflict resolution.
conflictResolution_setFileModes :: Lens' ConflictResolution (Maybe [SetFileModeEntry])

-- | Files to be deleted as part of the merge conflict resolution.
conflictResolution_deleteFiles :: Lens' ConflictResolution (Maybe [DeleteFileEntry])

-- | Files to have content replaced as part of the merge conflict
--   resolution.
conflictResolution_replaceContents :: Lens' ConflictResolution (Maybe [ReplaceContentEntry])

-- | The full path of the file to be deleted, including the name of the
--   file.
deleteFileEntry_filePath :: Lens' DeleteFileEntry Text

-- | Information about an <tt>afterBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
difference_afterBlob :: Lens' Difference (Maybe BlobMetadata)

-- | Information about a <tt>beforeBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
difference_beforeBlob :: Lens' Difference (Maybe BlobMetadata)

-- | Whether the change type of the difference is an addition (A), deletion
--   (D), or modification (M).
difference_changeType :: Lens' Difference (Maybe ChangeTypeEnum)

-- | The names of the approval rules that have had their conditions met.
evaluation_approvalRulesSatisfied :: Lens' Evaluation (Maybe [Text])

-- | The names of the approval rules that have not had their conditions
--   met.
evaluation_approvalRulesNotSatisfied :: Lens' Evaluation (Maybe [Text])

-- | Whether the state of the pull request is approved.
evaluation_approved :: Lens' Evaluation (Maybe Bool)

-- | Whether the approval rule requirements for the pull request have been
--   overridden and no longer need to be met.
evaluation_overridden :: Lens' Evaluation (Maybe Bool)

-- | The fully qualified path to the file in the repository.
file_absolutePath :: Lens' File (Maybe Text)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
file_fileMode :: Lens' File (Maybe FileModeTypeEnum)

-- | The blob ID that contains the file information.
file_blobId :: Lens' File (Maybe Text)

-- | The relative path of the file from the folder where the query
--   originated.
file_relativePath :: Lens' File (Maybe Text)

-- | The full path to the file to be added or updated, including the name
--   of the file.
fileMetadata_absolutePath :: Lens' FileMetadata (Maybe Text)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
fileMetadata_fileMode :: Lens' FileMetadata (Maybe FileModeTypeEnum)

-- | The blob ID that contains the file information.
fileMetadata_blobId :: Lens' FileMetadata (Maybe Text)

-- | The file mode of a file in the destination of a merge or pull request.
fileModes_destination :: Lens' FileModes (Maybe FileModeTypeEnum)

-- | The file mode of a file in the base of a merge or pull request.
fileModes_base :: Lens' FileModes (Maybe FileModeTypeEnum)

-- | The file mode of a file in the source of a merge or pull request.
fileModes_source :: Lens' FileModes (Maybe FileModeTypeEnum)

-- | The size of a file in the destination of a merge or pull request.
fileSizes_destination :: Lens' FileSizes (Maybe Integer)

-- | The size of a file in the base of a merge or pull request.
fileSizes_base :: Lens' FileSizes (Maybe Integer)

-- | The size of a file in the source of a merge or pull request.
fileSizes_source :: Lens' FileSizes (Maybe Integer)

-- | The fully qualified path of the folder in the repository.
folder_absolutePath :: Lens' Folder (Maybe Text)

-- | The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
folder_treeId :: Lens' Folder (Maybe Text)

-- | The relative path of the specified folder from the folder where the
--   query originated.
folder_relativePath :: Lens' Folder (Maybe Text)

-- | The binary or non-binary status of a file in the destination of a
--   merge or pull request.
isBinaryFile_destination :: Lens' IsBinaryFile (Maybe Bool)

-- | The binary or non-binary status of a file in the base of a merge or
--   pull request.
isBinaryFile_base :: Lens' IsBinaryFile (Maybe Bool)

-- | The binary or non-binary status of file in the source of a merge or
--   pull request.
isBinaryFile_source :: Lens' IsBinaryFile (Maybe Bool)

-- | In a comparison of commits or a pull request, whether the change is in
--   the before or after of that comparison.
location_relativeFileVersion :: Lens' Location (Maybe RelativeFileVersionEnum)

-- | The name of the file being compared, including its extension and
--   subdirectory, if any.
location_filePath :: Lens' Location (Maybe Text)

-- | The position of a change in a compared file, in line number format.
location_filePosition :: Lens' Location (Maybe Integer)

-- | Information about the merge hunk in the destination of a merge or pull
--   request.
mergeHunk_destination :: Lens' MergeHunk (Maybe MergeHunkDetail)

-- | Information about the merge hunk in the base of a merge or pull
--   request.
mergeHunk_base :: Lens' MergeHunk (Maybe MergeHunkDetail)

-- | A Boolean value indicating whether a combination of hunks contains a
--   conflict. Conflicts occur when the same file or the same lines in a
--   file were modified in both the source and destination of a merge or
--   pull request. Valid values include true, false, and null. True when
--   the hunk represents a conflict and one or more files contains a line
--   conflict. File mode conflicts in a merge do not set this to true.
mergeHunk_isConflict :: Lens' MergeHunk (Maybe Bool)

-- | Information about the merge hunk in the source of a merge or pull
--   request.
mergeHunk_source :: Lens' MergeHunk (Maybe MergeHunkDetail)

-- | The start position of the hunk in the merge result.
mergeHunkDetail_startLine :: Lens' MergeHunkDetail (Maybe Int)

-- | The end position of the hunk in the merge result.
mergeHunkDetail_endLine :: Lens' MergeHunkDetail (Maybe Int)

-- | The base-64 encoded content of the hunk merged region that might
--   contain a conflict.
mergeHunkDetail_hunkContent :: Lens' MergeHunkDetail (Maybe Text)

-- | The Amazon Resource Name (ARN) of the user who merged the branches.
mergeMetadata_mergedBy :: Lens' MergeMetadata (Maybe Text)

-- | The merge strategy used in the merge.
mergeMetadata_mergeOption :: Lens' MergeMetadata (Maybe MergeOptionTypeEnum)

-- | A Boolean value indicating whether the merge has been made.
mergeMetadata_isMerged :: Lens' MergeMetadata (Maybe Bool)

-- | The commit ID for the merge commit, if any.
mergeMetadata_mergeCommitId :: Lens' MergeMetadata (Maybe Text)

-- | The operation on a file in the destination of a merge or pull request.
mergeOperations_destination :: Lens' MergeOperations (Maybe ChangeTypeEnum)

-- | The operation (add, modify, or delete) on a file in the source of a
--   merge or pull request.
mergeOperations_source :: Lens' MergeOperations (Maybe ChangeTypeEnum)

-- | The type of the object in the destination branch.
objectTypes_destination :: Lens' ObjectTypes (Maybe ObjectTypeEnum)

-- | The type of the object in the base commit of the merge.
objectTypes_base :: Lens' ObjectTypes (Maybe ObjectTypeEnum)

-- | The type of the object in the source branch.
objectTypes_source :: Lens' ObjectTypes (Maybe ObjectTypeEnum)

-- | The ID of the template that created the approval rule.
originApprovalRuleTemplate_approvalRuleTemplateId :: Lens' OriginApprovalRuleTemplate (Maybe Text)

-- | The name of the template that created the approval rule.
originApprovalRuleTemplate_approvalRuleTemplateName :: Lens' OriginApprovalRuleTemplate (Maybe Text)

-- | The approval rules applied to the pull request.
pullRequest_approvalRules :: Lens' PullRequest (Maybe [ApprovalRule])

-- | The Amazon Resource Name (ARN) of the user who created the pull
--   request.
pullRequest_authorArn :: Lens' PullRequest (Maybe Text)

-- | The system-generated ID of the pull request.
pullRequest_pullRequestId :: Lens' PullRequest (Maybe Text)

-- | The date and time the pull request was originally created, in
--   timestamp format.
pullRequest_creationDate :: Lens' PullRequest (Maybe UTCTime)

-- | The status of the pull request. Pull request status can only change
--   from <tt>OPEN</tt> to <tt>CLOSED</tt>.
pullRequest_pullRequestStatus :: Lens' PullRequest (Maybe PullRequestStatusEnum)

-- | The user-defined title of the pull request. This title is displayed in
--   the list of pull requests to other repository users.
pullRequest_title :: Lens' PullRequest (Maybe Text)

-- | A unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
pullRequest_clientRequestToken :: Lens' PullRequest (Maybe Text)

-- | The day and time of the last user or system activity on the pull
--   request, in timestamp format.
pullRequest_lastActivityDate :: Lens' PullRequest (Maybe UTCTime)

-- | The system-generated revision ID for the pull request.
pullRequest_revisionId :: Lens' PullRequest (Maybe Text)

-- | The targets of the pull request, including the source branch and
--   destination branch for the pull request.
pullRequest_pullRequestTargets :: Lens' PullRequest (Maybe [PullRequestTarget])

-- | The user-defined description of the pull request. This description can
--   be used to clarify what should be reviewed and other details of the
--   request.
pullRequest_description :: Lens' PullRequest (Maybe Text)

-- | The commit ID of the tip of the branch specified as the destination
--   branch when the pull request was created.
pullRequestCreatedEventMetadata_destinationCommitId :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestCreatedEventMetadata_mergeBase :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The name of the repository where the pull request was created.
pullRequestCreatedEventMetadata_repositoryName :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | The commit ID on the source branch used when the pull request was
--   created.
pullRequestCreatedEventMetadata_sourceCommitId :: Lens' PullRequestCreatedEventMetadata (Maybe Text)

-- | Information about the change in mergability state for the pull request
--   event.
pullRequestEvent_pullRequestMergedStateChangedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestMergedStateChangedEventMetadata)

-- | Information about the source and destination branches for the pull
--   request.
pullRequestEvent_pullRequestCreatedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestCreatedEventMetadata)

-- | Information about a pull request event.
pullRequestEvent_approvalRuleEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalRuleEventMetadata)

-- | The type of the pull request event (for example, a status change event
--   (PULL_REQUEST_STATUS_CHANGED) or update event
--   (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
pullRequestEvent_pullRequestEventType :: Lens' PullRequestEvent (Maybe PullRequestEventType)

-- | Information about the change in status for the pull request event.
pullRequestEvent_pullRequestStatusChangedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestStatusChangedEventMetadata)

-- | The Amazon Resource Name (ARN) of the user whose actions resulted in
--   the event. Examples include updating the pull request with more
--   commits or changing the status of a pull request.
pullRequestEvent_actorArn :: Lens' PullRequestEvent (Maybe Text)

-- | The system-generated ID of the pull request.
pullRequestEvent_pullRequestId :: Lens' PullRequestEvent (Maybe Text)

-- | The day and time of the pull request event, in timestamp format.
pullRequestEvent_eventDate :: Lens' PullRequestEvent (Maybe UTCTime)

-- | Information about an approval state change for a pull request.
pullRequestEvent_approvalStateChangedEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalStateChangedEventMetadata)

-- | Information about the updated source branch for the pull request
--   event.
pullRequestEvent_pullRequestSourceReferenceUpdatedEventMetadata :: Lens' PullRequestEvent (Maybe PullRequestSourceReferenceUpdatedEventMetadata)

-- | Information about an approval rule override event for a pull request.
pullRequestEvent_approvalRuleOverriddenEventMetadata :: Lens' PullRequestEvent (Maybe ApprovalRuleOverriddenEventMetadata)

-- | The name of the branch that the pull request is merged into.
pullRequestMergedStateChangedEventMetadata_destinationReference :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe Text)

-- | Information about the merge state change event.
pullRequestMergedStateChangedEventMetadata_mergeMetadata :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe MergeMetadata)

-- | The name of the repository where the pull request was created.
pullRequestMergedStateChangedEventMetadata_repositoryName :: Lens' PullRequestMergedStateChangedEventMetadata (Maybe Text)

-- | The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_afterCommitId :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_beforeCommitId :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestSourceReferenceUpdatedEventMetadata_mergeBase :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The name of the repository where the pull request was updated.
pullRequestSourceReferenceUpdatedEventMetadata_repositoryName :: Lens' PullRequestSourceReferenceUpdatedEventMetadata (Maybe Text)

-- | The changed status of the pull request.
pullRequestStatusChangedEventMetadata_pullRequestStatus :: Lens' PullRequestStatusChangedEventMetadata (Maybe PullRequestStatusEnum)

-- | The full commit ID of the tip of the source branch used to create the
--   pull request. If the pull request branch is updated by a push while
--   the pull request is open, the commit ID changes to reflect the new tip
--   of the branch.
pullRequestTarget_sourceCommit :: Lens' PullRequestTarget (Maybe Text)

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
pullRequestTarget_destinationReference :: Lens' PullRequestTarget (Maybe Text)

-- | Returns metadata about the state of the merge, including whether the
--   merge has been made.
pullRequestTarget_mergeMetadata :: Lens' PullRequestTarget (Maybe MergeMetadata)

-- | The commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
pullRequestTarget_mergeBase :: Lens' PullRequestTarget (Maybe Text)

-- | The full commit ID that is the tip of the destination branch. This is
--   the commit where the pull request was or will be merged.
pullRequestTarget_destinationCommit :: Lens' PullRequestTarget (Maybe Text)

-- | The name of the repository that contains the pull request source and
--   destination branches.
pullRequestTarget_repositoryName :: Lens' PullRequestTarget (Maybe Text)

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
pullRequestTarget_sourceReference :: Lens' PullRequestTarget (Maybe Text)

-- | The content of the file, if a source file is not specified.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
putFileEntry_fileContent :: Lens' PutFileEntry (Maybe ByteString)

-- | The extrapolated file mode permissions for the file. Valid values
--   include EXECUTABLE and NORMAL.
putFileEntry_fileMode :: Lens' PutFileEntry (Maybe FileModeTypeEnum)

-- | The name and full path of the file that contains the changes you want
--   to make as part of the commit, if you are not providing the file
--   content directly.
putFileEntry_sourceFile :: Lens' PutFileEntry (Maybe SourceFileSpecifier)

-- | The full path to the file in the repository, including the name of the
--   file.
putFileEntry_filePath :: Lens' PutFileEntry Text

-- | The Amazon Resource Names (ARNs) of users who have provided reactions
--   to the comment.
reactionForComment_reactionUsers :: Lens' ReactionForComment (Maybe [Text])

-- | A numerical count of users who reacted with the specified emoji whose
--   identities have been subsequently deleted from IAM. While these IAM
--   users or roles no longer exist, the reactions might still appear in
--   total reaction counts.
reactionForComment_reactionsFromDeletedUsersCount :: Lens' ReactionForComment (Maybe Int)

-- | The reaction for a specified comment.
reactionForComment_reaction :: Lens' ReactionForComment (Maybe ReactionValueFormats)

-- | The Emoji Version 1.0 graphic of the reaction. These graphics are
--   interpreted slightly differently on different operating systems.
reactionValueFormats_emoji :: Lens' ReactionValueFormats (Maybe Text)

-- | The emoji short code for the reaction. Short codes are interpreted
--   slightly differently on different operating systems.
reactionValueFormats_shortCode :: Lens' ReactionValueFormats (Maybe Text)

-- | The Unicode codepoint for the reaction.
reactionValueFormats_unicode :: Lens' ReactionValueFormats (Maybe Text)

-- | The file mode to apply during conflict resoltion.
replaceContentEntry_fileMode :: Lens' ReplaceContentEntry (Maybe FileModeTypeEnum)

-- | The base-64 encoded content to use when the replacement type is
--   USE_NEW_CONTENT.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
replaceContentEntry_content :: Lens' ReplaceContentEntry (Maybe ByteString)

-- | The path of the conflicting file.
replaceContentEntry_filePath :: Lens' ReplaceContentEntry Text

-- | The replacement type to use when determining how to resolve the
--   conflict.
replaceContentEntry_replacementType :: Lens' ReplaceContentEntry ReplacementTypeEnum

-- | A comment or description about the repository.
repositoryMetadata_repositoryDescription :: Lens' RepositoryMetadata (Maybe Text)

-- | The date and time the repository was last modified, in timestamp
--   format.
repositoryMetadata_lastModifiedDate :: Lens' RepositoryMetadata (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the repository.
repositoryMetadata_arn :: Lens' RepositoryMetadata (Maybe Text)

-- | The URL to use for cloning the repository over HTTPS.
repositoryMetadata_cloneUrlHttp :: Lens' RepositoryMetadata (Maybe Text)

-- | The ID of the AWS account associated with the repository.
repositoryMetadata_accountId :: Lens' RepositoryMetadata (Maybe Text)

-- | The repository's default branch name.
repositoryMetadata_defaultBranch :: Lens' RepositoryMetadata (Maybe Text)

-- | The ID of the repository.
repositoryMetadata_repositoryId :: Lens' RepositoryMetadata (Maybe Text)

-- | The repository's name.
repositoryMetadata_repositoryName :: Lens' RepositoryMetadata (Maybe Text)

-- | The date and time the repository was created, in timestamp format.
repositoryMetadata_creationDate :: Lens' RepositoryMetadata (Maybe UTCTime)

-- | The URL to use for cloning the repository over SSH.
repositoryMetadata_cloneUrlSsh :: Lens' RepositoryMetadata (Maybe Text)

-- | The ID associated with the repository.
repositoryNameIdPair_repositoryId :: Lens' RepositoryNameIdPair (Maybe Text)

-- | The name associated with the repository.
repositoryNameIdPair_repositoryName :: Lens' RepositoryNameIdPair (Maybe Text)

-- | The branches to be included in the trigger configuration. If you
--   specify an empty array, the trigger applies to all branches.
--   
--   Although no content is required in the array, you must include the
--   array itself.
repositoryTrigger_branches :: Lens' RepositoryTrigger (Maybe [Text])

-- | Any custom data associated with the trigger to be included in the
--   information sent to the target of the trigger.
repositoryTrigger_customData :: Lens' RepositoryTrigger (Maybe Text)

-- | The name of the trigger.
repositoryTrigger_name :: Lens' RepositoryTrigger Text

-- | The ARN of the resource that is the target for a trigger (for example,
--   the ARN of a topic in Amazon SNS).
repositoryTrigger_destinationArn :: Lens' RepositoryTrigger Text

-- | The repository events that cause the trigger to run actions in another
--   service, such as sending a notification through Amazon SNS.
--   
--   The valid value "all" cannot be used with any other values.
repositoryTrigger_events :: Lens' RepositoryTrigger [RepositoryTriggerEventEnum]

-- | Message information about the trigger that did not run.
repositoryTriggerExecutionFailure_failureMessage :: Lens' RepositoryTriggerExecutionFailure (Maybe Text)

-- | The name of the trigger that did not run.
repositoryTriggerExecutionFailure_trigger :: Lens' RepositoryTriggerExecutionFailure (Maybe Text)

-- | The full path to the file, including the name of the file.
setFileModeEntry_filePath :: Lens' SetFileModeEntry Text

-- | The file mode for the file.
setFileModeEntry_fileMode :: Lens' SetFileModeEntry FileModeTypeEnum

-- | Whether to remove the source file from the parent commit.
sourceFileSpecifier_isMove :: Lens' SourceFileSpecifier (Maybe Bool)

-- | The full path to the file, including the name of the file.
sourceFileSpecifier_filePath :: Lens' SourceFileSpecifier Text

-- | The commit ID that contains the reference to the submodule.
subModule_commitId :: Lens' SubModule (Maybe Text)

-- | The fully qualified path to the folder that contains the reference to
--   the submodule.
subModule_absolutePath :: Lens' SubModule (Maybe Text)

-- | The relative path of the submodule from the folder where the query
--   originated.
subModule_relativePath :: Lens' SubModule (Maybe Text)

-- | The fully qualified path to the folder that contains the symbolic
--   link.
symbolicLink_absolutePath :: Lens' SymbolicLink (Maybe Text)

-- | The file mode permissions of the blob that cotains information about
--   the symbolic link.
symbolicLink_fileMode :: Lens' SymbolicLink (Maybe FileModeTypeEnum)

-- | The blob ID that contains the information about the symbolic link.
symbolicLink_blobId :: Lens' SymbolicLink (Maybe Text)

-- | The relative path of the symbolic link from the folder where the query
--   originated.
symbolicLink_relativePath :: Lens' SymbolicLink (Maybe Text)

-- | The branch of the repository where the pull request changes are
--   merged. Also known as the destination branch.
target_destinationReference :: Lens' Target (Maybe Text)

-- | The name of the repository that contains the pull request.
target_repositoryName :: Lens' Target Text

-- | The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
target_sourceReference :: Lens' Target Text

-- | The email address associated with the user who made the commit, if
--   any.
userInfo_email :: Lens' UserInfo (Maybe Text)

-- | The date when the specified commit was commited, in timestamp format
--   with GMT offset.
userInfo_date :: Lens' UserInfo (Maybe Text)

-- | The name of the user who made the specified commit.
userInfo_name :: Lens' UserInfo (Maybe Text)


module Amazonka.CodeCommit.Waiters


-- | Derived from API version <tt>2015-04-13</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS CodeCommit
--   
--   This is the <i>AWS CodeCommit API Reference</i>. This reference
--   provides descriptions of the operations and data types for AWS
--   CodeCommit API along with usage examples.
--   
--   You can use the AWS CodeCommit API to work with the following objects:
--   
--   Repositories, by calling the following:
--   
--   <ul>
--   <li>BatchGetRepositories, which returns information about one or more
--   repositories associated with your AWS account.</li>
--   <li>CreateRepository, which creates an AWS CodeCommit repository.</li>
--   <li>DeleteRepository, which deletes an AWS CodeCommit repository.</li>
--   <li>GetRepository, which returns information about a specified
--   repository.</li>
--   <li>ListRepositories, which lists all AWS CodeCommit repositories
--   associated with your AWS account.</li>
--   <li>UpdateRepositoryDescription, which sets or updates the description
--   of the repository.</li>
--   <li>UpdateRepositoryName, which changes the name of the repository. If
--   you change the name of a repository, no other users of that repository
--   can access it until you send them the new HTTPS or SSH URL to
--   use.</li>
--   </ul>
--   
--   Branches, by calling the following:
--   
--   <ul>
--   <li>CreateBranch, which creates a branch in a specified
--   repository.</li>
--   <li>DeleteBranch, which deletes the specified branch in a repository
--   unless it is the default branch.</li>
--   <li>GetBranch, which returns information about a specified
--   branch.</li>
--   <li>ListBranches, which lists all branches for a specified
--   repository.</li>
--   <li>UpdateDefaultBranch, which changes the default branch for a
--   repository.</li>
--   </ul>
--   
--   Files, by calling the following:
--   
--   <ul>
--   <li>DeleteFile, which deletes the content of a specified file from a
--   specified branch.</li>
--   <li>GetBlob, which returns the base-64 encoded content of an
--   individual Git blob object in a repository.</li>
--   <li>GetFile, which returns the base-64 encoded content of a specified
--   file.</li>
--   <li>GetFolder, which returns the contents of a specified folder or
--   directory.</li>
--   <li>PutFile, which adds or modifies a single file in a specified
--   repository and branch.</li>
--   </ul>
--   
--   Commits, by calling the following:
--   
--   <ul>
--   <li>BatchGetCommits, which returns information about one or more
--   commits in a repository.</li>
--   <li>CreateCommit, which creates a commit for changes to a
--   repository.</li>
--   <li>GetCommit, which returns information about a commit, including
--   commit messages and author and committer information.</li>
--   <li>GetDifferences, which returns information about the differences in
--   a valid commit specifier (such as a branch, tag, HEAD, commit ID, or
--   other fully qualified reference).</li>
--   </ul>
--   
--   Merges, by calling the following:
--   
--   <ul>
--   <li>BatchDescribeMergeConflicts, which returns information about
--   conflicts in a merge between commits in a repository.</li>
--   <li>CreateUnreferencedMergeCommit, which creates an unreferenced
--   commit between two branches or commits for the purpose of comparing
--   them and identifying any potential conflicts.</li>
--   <li>DescribeMergeConflicts, which returns information about merge
--   conflicts between the base, source, and destination versions of a file
--   in a potential merge.</li>
--   <li>GetMergeCommit, which returns information about the merge between
--   a source and destination commit.</li>
--   <li>GetMergeConflicts, which returns information about merge conflicts
--   between the source and destination branch in a pull request.</li>
--   <li>GetMergeOptions, which returns information about the available
--   merge options between two branches or commit specifiers.</li>
--   <li>MergeBranchesByFastForward, which merges two branches using the
--   fast-forward merge option.</li>
--   <li>MergeBranchesBySquash, which merges two branches using the squash
--   merge option.</li>
--   <li>MergeBranchesByThreeWay, which merges two branches using the
--   three-way merge option.</li>
--   </ul>
--   
--   Pull requests, by calling the following:
--   
--   <ul>
--   <li>CreatePullRequest, which creates a pull request in a specified
--   repository.</li>
--   <li>CreatePullRequestApprovalRule, which creates an approval rule for
--   a specified pull request.</li>
--   <li>DeletePullRequestApprovalRule, which deletes an approval rule for
--   a specified pull request.</li>
--   <li>DescribePullRequestEvents, which returns information about one or
--   more pull request events.</li>
--   <li>EvaluatePullRequestApprovalRules, which evaluates whether a pull
--   request has met all the conditions specified in its associated
--   approval rules.</li>
--   <li>GetCommentsForPullRequest, which returns information about
--   comments on a specified pull request.</li>
--   <li>GetPullRequest, which returns information about a specified pull
--   request.</li>
--   <li>GetPullRequestApprovalStates, which returns information about the
--   approval states for a specified pull request.</li>
--   <li>GetPullRequestOverrideState, which returns information about
--   whether approval rules have been set aside (overriden) for a pull
--   request, and if so, the Amazon Resource Name (ARN) of the user or
--   identity that overrode the rules and their requirements for the pull
--   request.</li>
--   <li>ListPullRequests, which lists all pull requests for a
--   repository.</li>
--   <li>MergePullRequestByFastForward, which merges the source destination
--   branch of a pull request into the specified destination branch for
--   that pull request using the fast-forward merge option.</li>
--   <li>MergePullRequestBySquash, which merges the source destination
--   branch of a pull request into the specified destination branch for
--   that pull request using the squash merge option.</li>
--   <li>MergePullRequestByThreeWay. which merges the source destination
--   branch of a pull request into the specified destination branch for
--   that pull request using the three-way merge option.</li>
--   <li>OverridePullRequestApprovalRules, which sets aside all approval
--   rule requirements for a pull request.</li>
--   <li>PostCommentForPullRequest, which posts a comment to a pull request
--   at the specified line, file, or request.</li>
--   <li>UpdatePullRequestApprovalRuleContent, which updates the structure
--   of an approval rule for a pull request.</li>
--   <li>UpdatePullRequestApprovalState, which updates the state of an
--   approval on a pull request.</li>
--   <li>UpdatePullRequestDescription, which updates the description of a
--   pull request.</li>
--   <li>UpdatePullRequestStatus, which updates the status of a pull
--   request.</li>
--   <li>UpdatePullRequestTitle, which updates the title of a pull
--   request.</li>
--   </ul>
--   
--   Approval rule templates, by calling the following:
--   
--   <ul>
--   <li>AssociateApprovalRuleTemplateWithRepository, which associates a
--   template with a specified repository. After the template is associated
--   with a repository, AWS CodeCommit creates approval rules that match
--   the template conditions on every pull request created in the specified
--   repository.</li>
--   <li>BatchAssociateApprovalRuleTemplateWithRepositories, which
--   associates a template with one or more specified repositories. After
--   the template is associated with a repository, AWS CodeCommit creates
--   approval rules that match the template conditions on every pull
--   request created in the specified repositories.</li>
--   <li>BatchDisassociateApprovalRuleTemplateFromRepositories, which
--   removes the association between a template and specified repositories
--   so that approval rules based on the template are not automatically
--   created when pull requests are created in those repositories.</li>
--   <li>CreateApprovalRuleTemplate, which creates a template for approval
--   rules that can then be associated with one or more repositories in
--   your AWS account.</li>
--   <li>DeleteApprovalRuleTemplate, which deletes the specified template.
--   It does not remove approval rules on pull requests already created
--   with the template.</li>
--   <li>DisassociateApprovalRuleTemplateFromRepository, which removes the
--   association between a template and a repository so that approval rules
--   based on the template are not automatically created when pull requests
--   are created in the specified repository.</li>
--   <li>GetApprovalRuleTemplate, which returns information about an
--   approval rule template.</li>
--   <li>ListApprovalRuleTemplates, which lists all approval rule templates
--   in the AWS Region in your AWS account.</li>
--   <li>ListAssociatedApprovalRuleTemplatesForRepository, which lists all
--   approval rule templates that are associated with a specified
--   repository.</li>
--   <li>ListRepositoriesForApprovalRuleTemplate, which lists all
--   repositories associated with the specified approval rule
--   template.</li>
--   <li>UpdateApprovalRuleTemplateDescription, which updates the
--   description of an approval rule template.</li>
--   <li>UpdateApprovalRuleTemplateName, which updates the name of an
--   approval rule template.</li>
--   <li>UpdateApprovalRuleTemplateContent, which updates the content of an
--   approval rule template.</li>
--   </ul>
--   
--   Comments in a repository, by calling the following:
--   
--   <ul>
--   <li>DeleteCommentContent, which deletes the content of a comment on a
--   commit in a repository.</li>
--   <li>GetComment, which returns information about a comment on a
--   commit.</li>
--   <li>GetCommentReactions, which returns information about emoji
--   reactions to comments.</li>
--   <li>GetCommentsForComparedCommit, which returns information about
--   comments on the comparison between two commit specifiers in a
--   repository.</li>
--   <li>PostCommentForComparedCommit, which creates a comment on the
--   comparison between two commit specifiers in a repository.</li>
--   <li>PostCommentReply, which creates a reply to a comment.</li>
--   <li>PutCommentReaction, which creates or updates an emoji reaction to
--   a comment.</li>
--   <li>UpdateComment, which updates the content of a comment on a commit
--   in a repository.</li>
--   </ul>
--   
--   Tags used to tag resources in AWS CodeCommit (not Git tags), by
--   calling the following:
--   
--   <ul>
--   <li>ListTagsForResource, which gets information about AWS tags for a
--   specified Amazon Resource Name (ARN) in AWS CodeCommit.</li>
--   <li>TagResource, which adds or updates tags for a resource in AWS
--   CodeCommit.</li>
--   <li>UntagResource, which removes tags for a resource in AWS
--   CodeCommit.</li>
--   </ul>
--   
--   Triggers, by calling the following:
--   
--   <ul>
--   <li>GetRepositoryTriggers, which returns information about triggers
--   configured for a repository.</li>
--   <li>PutRepositoryTriggers, which replaces all triggers for a
--   repository and can be used to create or delete triggers.</li>
--   <li>TestRepositoryTriggers, which tests the functionality of a
--   repository trigger by sending data to the trigger target.</li>
--   </ul>
--   
--   For information about how to use AWS CodeCommit, see the <a>AWS
--   CodeCommit User Guide</a>.
module Amazonka.CodeCommit

-- | API version <tt>2015-04-13</tt> of the Amazon CodeCommit SDK
--   configuration.
defaultService :: Service

-- | The value of the reaction is not valid. For more information, see the
--   <a>AWS CodeCommit User Guide</a>.
_InvalidReactionValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The AWS Region for the trigger target does not match the AWS Region
--   for the repository. Triggers must be created in the same Region as the
--   target for the trigger.
_InvalidRepositoryTriggerRegionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified continuation token is not valid.
_InvalidContinuationTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request cannot be merged automatically into the destination
--   branch. You must manually merge the branches and resolve any
--   conflicts.
_ManualMergeRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An array of target objects is required. It cannot be empty or null.
_TargetsRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified tag is not valid. Key names cannot be prefixed with
--   aws:.
_InvalidSystemTagUsageException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because no files have been specified as
--   added, updated, or changed (PutFile or DeleteFile) for the commit.
_FileEntryRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | No encryption key was found.
_EncryptionKeyNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The divergence between the tips of the provided commit specifiers is
--   too great to determine whether there might be any merge conflicts.
--   Locally compare the specifiers using <tt>git diff</tt> or a diff tool.
_TipsDivergenceExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more branch names specified for the trigger is not valid.
_InvalidRepositoryTriggerBranchNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request status cannot be updated because it is already
--   closed.
_PullRequestAlreadyClosedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The custom data provided for the trigger is not valid.
_InvalidRepositoryTriggerCustomDataException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A file cannot be added to the repository because the specified path
--   name has the same name as a file that already exists in this
--   repository. Either provide a different name for the file, or specify a
--   different path for the file.
_DirectoryNameConflictsWithFileNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified reference does not exist. You must provide a full commit
--   ID.
_ReferenceDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An approval rule with that name already exists. Approval rule names
--   must be unique within the scope of a pull request.
_ApprovalRuleNameAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon Resource Name (ARN) does not exist in the AWS
--   account.
_ActorDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A pull request ID is required, but none was provided.
_PullRequestIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request has already had its approval rules set to override.
_OverrideAlreadySetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The SHA-256 hash signature for the rule content is not valid.
_InvalidRuleContentSha256Exception :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified email address either contains one or more characters
--   that are not allowed, or it exceeds the maximum number of characters
--   allowed for an email address.
_InvalidEmailException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit message is too long. Provide a shorter string.
_CommitMessageLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified blob does not exist.
_BlobIdDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of allowed repository names was exceeded.
--   Currently, this number is 100.
_MaximumRepositoryNamesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A list of tag keys is required. The list cannot be empty or null.
_TagKeysListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because one or more files specified in
--   the commit reference both a file and a folder.
_PutFileEntryConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified folder does not exist. Either the folder name is not
--   correct, or you did not enter the full path to the folder.
_FolderDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified repository description is not valid.
_InvalidRepositoryDescriptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified repository name already exists.
_RepositoryNameExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A reference name is required, but none was provided.
_ReferenceNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of triggers allowed for the repository was exceeded.
_MaximumRepositoryTriggersExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified approval rule does not exist.
_ApprovalRuleDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified reference name is not valid.
_InvalidBranchNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A branch name is required, but was not specified.
_BranchNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A merge option or stategy is required, and none was provided.
_MergeOptionRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The location of the file is not valid. Make sure that you include the
--   file name and extension.
_InvalidFileLocationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The before commit ID and the after commit ID are the same, which is
--   not valid. The before commit ID and the after commit ID must be
--   different commit IDs.
_BeforeCommitIdAndAfterCommitIdAreSameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The list of triggers for the repository is required, but was not
--   specified.
_RepositoryTriggersListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client request token is not valid. Either the token is not in a
--   valid format, or the token has been used in a previous request and
--   cannot be reused.
_IdempotencyParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The encryption key is not available.
_EncryptionKeyUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Either the enum is not in a valid format, or the specified file
--   version enum is not valid in respect to the current file version.
_InvalidRelativeFileVersionEnumException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) for the trigger is not valid for the
--   specified destination. The most common reason for this error is that
--   the ARN does not meet the requirements for the service type.
_InvalidRepositoryTriggerDestinationArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of reactions has been exceeded. Reactions are limited to
--   one reaction per user for each individual comment ID.
_ReactionLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A blob ID is required, but was not specified.
_BlobIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one repository name object is required, but was not
--   specified.
_RepositoryNamesRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A replacement type is required.
_ReplacementTypeRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) is not valid. Make sure that you have
--   provided the full ARN for the user who initiated the change for the
--   pull request, and then try again.
_InvalidActorArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The comment ID is not in a valid format. Make sure that you have
--   provided the full comment ID.
_InvalidCommentIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because a specified file path points to a
--   submodule. Verify that the destination files have valid file paths
--   that do not point to a submodule.
_FilePathConflictsWithSubmodulePathException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request description is not valid. Descriptions cannot be more
--   than 1,000 characters.
_InvalidDescriptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An approval rule name is required, but was not specified.
_ApprovalRuleNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified blob is not valid.
_InvalidBlobIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request ID could not be found. Make sure that you have
--   specified the correct repository name and pull request ID, and then
--   try again.
_PullRequestDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because no changes will be made to the
--   repository as a result of this commit. A commit must contain at least
--   one change.
_NoChangeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified sort order is not valid.
_InvalidOrderException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The name for the approval rule is not valid.
_InvalidApprovalRuleNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified branch does not exist.
_BranchDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified branch is the default branch for the repository, and
--   cannot be deleted. To delete this branch, you must first set another
--   branch as the default branch.
_DefaultBranchCannotBeDeletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because at least one of the overall
--   changes in the commit results in a folder whose contents exceed the
--   limit of 6 MB. Either reduce the number and size of your changes, or
--   split the changes across multiple folders.
_FolderContentSizeLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified deletion parameter is not valid.
_InvalidDeletionParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) of the user or identity is not valid.
_InvalidReactionUserArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The map of tags is not valid.
_InvalidTagsMapException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified path is not valid.
_InvalidPathException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The folderPath for a location cannot be null.
_PathRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified target branch is not valid.
_InvalidTargetBranchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A name for the trigger is required, but was not specified.
_RepositoryTriggerNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified file mode permission is not valid. For a list of valid
--   file mode permissions, see PutFile.
_InvalidFileModeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of approval rule templates has been exceeded for
--   this AWS Region.
_NumberOfRuleTemplatesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because no file mode has been specified.
--   A file mode is required to update mode permissions for a file.
_FileModeRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request status is not valid. The only valid values are
--   <tt>OPEN</tt> and <tt>CLOSED</tt>.
_InvalidPullRequestStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content for the approval rule template is empty. You must provide
--   some content for an approval rule template. The content cannot be
--   null.
_ApprovalRuleTemplateContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An approval state is required, but was not specified.
_ApprovalStateRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The merge cannot be completed because the target branch has been
--   modified. Another user might have modified the target branch while the
--   merge was in progress. Wait a few minutes, and then try again.
_ConcurrentReferenceUpdateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A parent commit ID is required. To view the full commit ID of a branch
--   in a repository, use GetBranch or a Git command (for example, git pull
--   or git log).
_ParentCommitIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The source commit specifier is not valid. You must provide a valid
--   branch name, tag, or full commit ID.
_InvalidSourceCommitSpecifierException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified repository does not exist.
_RepositoryDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content for the approval rule is not valid.
_InvalidApprovalRuleContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of branches for the trigger was exceeded.
_MaximumBranchesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The title of the pull request is not valid. Pull request titles cannot
--   exceed 100 characters in length.
_InvalidTitleException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The comment is too large. Comments are limited to 1,000 characters.
_CommentContentSizeLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request cannot be merged because one or more approval rules
--   applied to the pull request have conditions that have not been met.
_PullRequestApprovalRulesNotSatisfiedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The parent commit ID is not valid. The commit ID cannot be empty, and
--   must match the head commit ID for the branch of the repository where
--   you want to add or update a file.
_InvalidParentCommitIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request event type is not valid.
_InvalidPullRequestEventTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The file cannot be added because it is empty. Empty files cannot be
--   added to the repository with this API.
_FileContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The source branch and destination branch for the pull request are the
--   same. You must specify different branches for the source and
--   destination.
_SourceAndDestinationAreSameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | USE_NEW_CONTENT was specified, but no replacement content has been
--   provided.
_ReplacementContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because one of the changes specifies
--   copying or moving a .gitkeep file.
_RestrictedSourceFileException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified path does not exist.
_PathDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value for the resource ARN is not valid. For more information
--   about resources in AWS CodeCommit, see <a>CodeCommit Resources and
--   Operations</a> in the AWS CodeCommit User Guide.
_InvalidResourceArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of tags for an AWS CodeCommit resource has been
--   exceeded.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An encryption integrity check failed.
_EncryptionIntegrityChecksFailedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because one or more changes in this
--   commit duplicate actions in the same file path. For example, you
--   cannot make the same delete request to the same file in the same file
--   path twice, or make a delete request and a move request to the same
--   file as part of the same commit.
_SamePathRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because no source files or file content
--   have been specified for the commit.
_SourceFileOrContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified value for the number of merge hunks to return is not
--   valid.
_InvalidMaxMergeHunksException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval rule cannot be modified for the pull request because it
--   was created by an approval rule template and applied to the pull
--   request automatically.
_CannotModifyApprovalRuleFromTemplateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Automerge was specified for resolving the conflict, but the
--   replacement type is not valid or content is missing.
_InvalidReplacementContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The file could not be added because the provided parent commit ID is
--   not the current tip of the specified branch. To view the full commit
--   ID of the current head of the branch, use GetBranch.
_ParentCommitIdOutdatedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one event for the trigger is required, but was not specified.
_RepositoryTriggerEventsListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The comment is empty. You must provide some content for a comment. The
--   content cannot be null.
_CommentContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A reaction value is required.
_ReactionValueRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The targets for the pull request is not valid or not in a valid
--   format. Targets are a list of target objects. Each target object must
--   contain the full values for the repository name, source branch, and
--   destination branch for a pull request.
_InvalidTargetsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An encryption key could not be accessed.
_EncryptionKeyAccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Cannot create the branch with the specified name because the commit
--   conflicts with an existing branch with the same name. Branch names
--   must be unique.
_BranchNameExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified commit is not valid.
_InvalidCommitException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A pull request target is required. It cannot be empty or null. A pull
--   request target must contain the full values for the repository name,
--   source branch, and destination branch for the pull request.
_TargetRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified conflict detail level is not valid.
_InvalidConflictDetailLevelException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The destination commit specifier is not valid. You must provide a
--   valid branch name, tag, or full commit ID.
_InvalidDestinationCommitSpecifierException :: AsError a => Getting (First ServiceError) a ServiceError

-- | No comment exists with the provided ID. Verify that you have used the
--   correct ID, and then try again.
_CommentDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified reference is not a supported type.
_ReferenceTypeNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A file cannot be added to the repository because the specified file
--   name has the same name as a directory in this repository. Either
--   provide another name for the file, or add the file in a directory that
--   does not match the file name.
_FileNameConflictsWithDirectoryNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The user name is not valid because it has exceeded the character limit
--   for author names.
_NameLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified sort by value is not valid.
_InvalidSortByException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The encryption key is disabled.
_EncryptionKeyDisabledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A commit was not specified.
_CommitRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot create the pull request because the repository has too many
--   open pull requests. The maximum number of open pull requests for a
--   repository is 1,000. Close one or more open pull requests, and then
--   try again.
_MaximumOpenPullRequestsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot create an approval rule template with that name because a
--   template with that name already exists in this AWS Region for your AWS
--   account. Approval rule template names must be unique.
_ApprovalRuleTemplateNameAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The target for the pull request is not valid. A target must contain
--   the full values for the repository name, source branch, and
--   destination branch for the pull request.
_InvalidTargetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request ID is not valid. Make sure that you have provided the
--   full ID and that the pull request is in the specified repository, and
--   then try again.
_InvalidPullRequestIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot modify or delete this comment. Only comment authors can
--   modify or delete their comments.
_CommentNotCreatedByCallerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The pull request status update is not valid. The only valid update is
--   from <tt>OPEN</tt> to <tt>CLOSED</tt>.
_InvalidPullRequestStatusUpdateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified reference name format is not valid. Reference names must
--   conform to the Git references format (for example, refs/heads/master).
--   For more information, see <a>Git Internals - Git References</a> or
--   consult your Git documentation.
_InvalidReferenceNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of approval rule templates for a repository has
--   been exceeded. You cannot associate more than 25 approval rule
--   templates with a repository.
_MaximumRuleTemplatesAssociatedWithRepositoryException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The file was not added or updated because the content of the file is
--   exactly the same as the content of that file in the repository and
--   branch that you specified.
_SameFileContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval rule template is associated with one or more
--   repositories. You cannot delete a template that is associated with a
--   repository. Remove all associations, and then try again.
_ApprovalRuleTemplateInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of approvals required for the approval rule exceeds the
--   maximum number allowed.
_MaximumNumberOfApprovalsExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A commit ID was not specified.
_CommitIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified file does not exist. Verify that you have used the
--   correct file name, full path, and extension.
_FileDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified commit ID is not valid.
_InvalidCommitIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The list of tags is not valid.
_InvalidTagKeysListException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The commit cannot be created because both a source file and file
--   content have been specified for the same file. You cannot provide
--   both. Either specify a source file or provide the file content
--   directly.
_FileContentAndSourceFileSpecifiedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tip of the source branch in the destination repository does not
--   match the tip of the source branch specified in your request. The pull
--   request might have been updated. Make sure that you have the latest
--   changes.
_TipOfSourceReferenceIsDifferentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A destination ARN for the target service for the trigger is required,
--   but was not specified.
_RepositoryTriggerDestinationArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified conflict resolution strategy is not valid.
_InvalidConflictResolutionStrategyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The client request token is not valid.
_InvalidClientRequestTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | More than one conflict resolution entries exists for the conflict. A
--   conflict can have only one conflict resolution entry.
_MultipleConflictResolutionEntriesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified commit does not exist or no commit was specified, and
--   the specified repository has no default branch.
_CommitDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one branch name is required, but was not specified in the
--   trigger configuration.
_RepositoryTriggerBranchNameListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A client request token is required. A client request token is an
--   unique, client-generated idempotency token that, when provided in a
--   request, ensures the request cannot be repeated with a changed
--   parameter. If a request is received with the same parameters and a
--   token is included, the request returns information about the initial
--   request that used that token.
_ClientRequestTokenRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified approval rule template does not exist. Verify that the
--   name is correct and that you are signed in to the AWS Region where the
--   template was created, and then try again.
_ApprovalRuleTemplateDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The tag policy is not valid.
_TagPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified merge option is not valid for this operation. Not all
--   merge strategies are supported for all operations.
_InvalidMergeOptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval rule cannot be deleted from the pull request because it
--   was created by an approval rule template and applied to the pull
--   request automatically.
_CannotDeleteApprovalRuleFromTemplateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The comment ID is missing or null. A comment ID is required.
_CommentIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified number of maximum results is not valid.
_InvalidMaxResultsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified file exceeds the file size limit for AWS CodeCommit. For
--   more information about limits in AWS CodeCommit, see <a>AWS CodeCommit
--   User Guide</a>.
_FileTooLargeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An approval rule template name is required, but was not specified.
_ApprovalRuleTemplateNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of specified files to change as part of this commit exceeds
--   the maximum number of files that can be changed in a single commit.
--   Consider using a Git client for these changes.
_MaximumFileEntriesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified commit ID does not exist.
_CommitIdDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Automerge was specified for resolving the conflict, but the specified
--   replacement type is not valid.
_InvalidReplacementTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The revision ID is not valid. Use GetPullRequest to determine the
--   value.
_InvalidRevisionIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The revision ID provided in the request does not match the current
--   revision ID. Use GetPullRequest to retrieve the current revision ID.
_RevisionNotCurrentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The name of the approval rule template is not valid. Template names
--   must be between 1 and 100 valid characters in length. For more
--   information about limits in AWS CodeCommit, see <a>AWS CodeCommit User
--   Guide</a>.
_InvalidApprovalRuleTemplateNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval cannot be applied because the user approving the pull
--   request matches the user who created the pull request. You cannot
--   approve a pull request that you created.
_PullRequestCannotBeApprovedByAuthorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You cannot include more than one repository in a pull request. Make
--   sure you have specified only one repository name in your request, and
--   then try again.
_MultipleRepositoriesInPullRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A revision ID is required, but was not provided.
_RevisionIdRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The file cannot be added because it is too large. The maximum file
--   size is 6 MB, and the combined file content change size is 7 MB.
--   Consider making these changes using a Git client.
_FileContentSizeLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The name of the trigger is not valid.
_InvalidRepositoryTriggerNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A repository name is required, but was not specified.
_RepositoryNameRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A repository resource limit was exceeded.
_RepositoryLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A map of tags is required.
_TagsMapRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more events specified for the trigger is not valid. Check to
--   make sure that all events specified match the requirements for allowed
--   events.
_InvalidRepositoryTriggerEventsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The approval rule cannot be added. The pull request has the maximum
--   number of approval rules associated with it.
_NumberOfRulesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified branch name is not valid because it is a tag name. Enter
--   the name of a branch in the repository. For a list of valid branch
--   names, use ListBranches.
_BranchNameIsTagNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A specified repository name is not valid.
--   
--   This exception occurs only when a specified repository name is not
--   valid. Other exceptions occur when a required repository parameter is
--   missing, or when a specified repository does not exist.
_InvalidRepositoryNameException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A list of commit IDs is required, but was either not specified or the
--   list was empty.
_CommitIdsListRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of allowed commit IDs in a batch request is 100.
--   Verify that your batch requests contains no more than 100 commit IDs,
--   and then try again.
_CommitIdsLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Resource Name (ARN) is not valid. Make sure that you have
--   provided the full ARN for the author of the pull request, and then try
--   again.
_InvalidAuthorArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of items to compare between the source or destination
--   branches and the merge base has exceeded the maximum allowed.
_MaximumItemsToCompareExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An override status is required, but no value was provided. Valid
--   values include OVERRIDE and REVOKE.
_OverrideStatusRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content for the approval rule is empty. You must provide some
--   content for an approval rule. The content cannot be null.
_ApprovalRuleContentRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of allowed conflict resolution entries was exceeded.
_MaximumConflictResolutionEntriesExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A pull request status is required, but none was provided.
_PullRequestStatusRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified conflict resolution list is not valid.
_InvalidConflictResolutionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The content of the approval rule template is not valid.
_InvalidApprovalRuleTemplateContentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The state for the approval is not valid. Valid values include APPROVE
--   and REVOKE.
_InvalidApprovalStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The repository does not contain any pull requests with that pull
--   request ID. Use GetPullRequest to verify the correct repository name
--   for the pull request ID.
_RepositoryNotAssociatedWithPullRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of files to load exceeds the allowed limit.
_MaximumFileContentToLoadExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A pull request title is required. It cannot be empty or null.
_TitleRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The override status is not valid. Valid statuses are OVERRIDE and
--   REVOKE.
_InvalidOverrideStatusException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The position is not valid. Make sure that the line number exists in
--   the version of the file you want to comment on.
_InvalidFilePositionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This comment has already been deleted. You cannot edit or delete a
--   deleted comment.
_CommentDeletedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The parent commit ID is not valid because it does not exist. The
--   specified parent commit ID does not exist in the specified branch of
--   the repository.
_ParentCommitDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The description for the approval rule template is not valid because it
--   exceeds the maximum characters allowed for a description. For more
--   information about limits in AWS CodeCommit, see <a>AWS CodeCommit User
--   Guide</a>.
_InvalidApprovalRuleTemplateDescriptionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A valid Amazon Resource Name (ARN) for an AWS CodeCommit resource is
--   required. For a list of valid resources in AWS CodeCommit, see
--   <a>CodeCommit Resources and Operations</a> in the AWS CodeCommit User
--   Guide.
_ResourceArnRequiredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified value for the number of conflict files to return is not
--   valid.
_InvalidMaxConflictFilesException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified Amazon Resource Name (ARN) does not exist in the AWS
--   account.
_AuthorDoesNotExistException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newMergePullRequestByFastForward</a> smart constructor.
data MergePullRequestByFastForward
MergePullRequestByFastForward' :: Maybe Text -> Text -> Text -> MergePullRequestByFastForward

-- | Create a value of <a>MergePullRequestByFastForward</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCommitId:MergePullRequestByFastForward'</a>,
--   <a>mergePullRequestByFastForward_sourceCommitId</a> - The full commit
--   ID of the original or updated commit in the pull request source
--   branch. Pass this value if you want an exception thrown if the current
--   commit ID of the tip of the source branch does not match this commit
--   ID.
--   
--   <a>$sel:pullRequestId:MergePullRequestByFastForward'</a>,
--   <a>mergePullRequestByFastForward_pullRequestId</a> - The
--   system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
--   
--   <a>$sel:repositoryName:MergePullRequestByFastForward'</a>,
--   <a>mergePullRequestByFastForward_repositoryName</a> - The name of the
--   repository where the pull request was created.
newMergePullRequestByFastForward :: Text -> Text -> MergePullRequestByFastForward

-- | <i>See:</i> <a>newMergePullRequestByFastForwardResponse</a> smart
--   constructor.
data MergePullRequestByFastForwardResponse
MergePullRequestByFastForwardResponse' :: Maybe PullRequest -> Int -> MergePullRequestByFastForwardResponse

-- | Create a value of <a>MergePullRequestByFastForwardResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequest:MergePullRequestByFastForwardResponse'</a>,
--   <a>mergePullRequestByFastForwardResponse_pullRequest</a> - Information
--   about the specified pull request, including the merge.
--   
--   <a>$sel:httpStatus:MergePullRequestByFastForwardResponse'</a>,
--   <a>mergePullRequestByFastForwardResponse_httpStatus</a> - The
--   response's http status code.
newMergePullRequestByFastForwardResponse :: Int -> MergePullRequestByFastForwardResponse

-- | Represents the input of an update repository description operation.
--   
--   <i>See:</i> <a>newUpdateRepositoryName</a> smart constructor.
data UpdateRepositoryName
UpdateRepositoryName' :: Text -> Text -> UpdateRepositoryName

-- | Create a value of <a>UpdateRepositoryName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oldName:UpdateRepositoryName'</a>,
--   <a>updateRepositoryName_oldName</a> - The current name of the
--   repository.
--   
--   <a>$sel:newName':UpdateRepositoryName'</a>,
--   <a>updateRepositoryName_newName</a> - The new name for the repository.
newUpdateRepositoryName :: Text -> Text -> UpdateRepositoryName

-- | <i>See:</i> <a>newUpdateRepositoryNameResponse</a> smart constructor.
data UpdateRepositoryNameResponse
UpdateRepositoryNameResponse' :: UpdateRepositoryNameResponse

-- | Create a value of <a>UpdateRepositoryNameResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateRepositoryNameResponse :: UpdateRepositoryNameResponse

-- | <i>See:</i> <a>newPostCommentForPullRequest</a> smart constructor.
data PostCommentForPullRequest
PostCommentForPullRequest' :: Maybe Location -> Maybe Text -> Text -> Text -> Text -> Text -> Text -> PostCommentForPullRequest

-- | Create a value of <a>PostCommentForPullRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_location</a> - The location of the change
--   where you want to post your comment. If no location is provided, the
--   comment is posted as a general comment on the pull request difference
--   between the before commit ID and the after commit ID.
--   
--   <a>$sel:clientRequestToken:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_clientRequestToken</a> - A unique,
--   client-generated idempotency token that, when provided in a request,
--   ensures the request cannot be repeated with a changed parameter. If a
--   request is received with the same parameters and a token is included,
--   the request returns information about the initial request that used
--   that token.
--   
--   <a>$sel:pullRequestId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:repositoryName:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_repositoryName</a> - The name of the
--   repository where you want to post a comment on a pull request.
--   
--   <a>$sel:beforeCommitId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_beforeCommitId</a> - The full commit ID
--   of the commit in the destination branch that was the tip of the branch
--   at the time the pull request was created.
--   
--   <a>$sel:afterCommitId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_afterCommitId</a> - The full commit ID of
--   the commit in the source branch that is the current tip of the branch
--   for the pull request when you post the comment.
--   
--   <a>$sel:content:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequest_content</a> - The content of your comment
--   on the change.
newPostCommentForPullRequest :: Text -> Text -> Text -> Text -> Text -> PostCommentForPullRequest

-- | <i>See:</i> <a>newPostCommentForPullRequestResponse</a> smart
--   constructor.
data PostCommentForPullRequestResponse
PostCommentForPullRequestResponse' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Comment -> Int -> PostCommentForPullRequestResponse

-- | Create a value of <a>PostCommentForPullRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:PostCommentForPullRequestResponse'</a>,
--   <a>postCommentForPullRequestResponse_beforeBlobId</a> - In the
--   directionality of the pull request, the blob ID of the before blob.
--   
--   <a>$sel:location:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_location</a> - The location of
--   the change where you posted your comment.
--   
--   <a>$sel:afterCommitId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_afterCommitId</a> - The full
--   commit ID of the commit in the destination branch where the pull
--   request is merged.
--   
--   <a>$sel:pullRequestId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_pullRequestId</a> - The
--   system-generated ID of the pull request.
--   
--   <a>$sel:afterBlobId:PostCommentForPullRequestResponse'</a>,
--   <a>postCommentForPullRequestResponse_afterBlobId</a> - In the
--   directionality of the pull request, the blob ID of the after blob.
--   
--   <a>$sel:beforeCommitId:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_beforeCommitId</a> - The full
--   commit ID of the commit in the source branch used to create the pull
--   request, or in the case of an updated pull request, the full commit ID
--   of the commit used to update the pull request.
--   
--   <a>$sel:repositoryName:PostCommentForPullRequest'</a>,
--   <a>postCommentForPullRequestResponse_repositoryName</a> - The name of
--   the repository where you posted a comment on a pull request.
--   
--   <a>$sel:comment:PostCommentForPullRequestResponse'</a>,
--   <a>postCommentForPullRequestResponse_comment</a> - The content of the
--   comment you posted.
--   
--   <a>$sel:httpStatus:PostCommentForPullRequestResponse'</a>,
--   <a>postCommentForPullRequestResponse_httpStatus</a> - The response's
--   http status code.
newPostCommentForPullRequestResponse :: Int -> PostCommentForPullRequestResponse

-- | <i>See:</i> <a>newMergeBranchesBySquash</a> smart constructor.
data MergeBranchesBySquash
MergeBranchesBySquash' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Text -> Text -> Text -> MergeBranchesBySquash

-- | Create a value of <a>MergeBranchesBySquash</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_email</a> - The email address of the person
--   merging the branches. This information is used in the commit
--   information for the merge.
--   
--   <a>$sel:authorName:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_authorName</a> - The name of the author who
--   created the commit. This information is used as both the author and
--   committer for the commit.
--   
--   <a>$sel:targetBranch:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_targetBranch</a> - The branch where the merge
--   is applied.
--   
--   <a>$sel:conflictDetailLevel:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_commitMessage</a> - The commit message for
--   the merge.
--   
--   <a>$sel:conflictResolution:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_conflictResolution</a> - If AUTOMERGE is the
--   conflict resolution strategy, a list of inputs to use when resolving
--   conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_conflictResolutionStrategy</a> - Specifies
--   which branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:keepEmptyFolders:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_keepEmptyFolders</a> - If the commit contains
--   deletions, whether to keep a folder or folder structure if the changes
--   leave the folders empty. If this is specified as true, a .gitkeep file
--   is created for empty folders. The default is false.
--   
--   <a>$sel:repositoryName:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_repositoryName</a> - The name of the
--   repository where you want to merge two branches.
--   
--   <a>$sel:sourceCommitSpecifier:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_sourceCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:MergeBranchesBySquash'</a>,
--   <a>mergeBranchesBySquash_destinationCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
newMergeBranchesBySquash :: Text -> Text -> Text -> MergeBranchesBySquash

-- | <i>See:</i> <a>newMergeBranchesBySquashResponse</a> smart constructor.
data MergeBranchesBySquashResponse
MergeBranchesBySquashResponse' :: Maybe Text -> Maybe Text -> Int -> MergeBranchesBySquashResponse

-- | Create a value of <a>MergeBranchesBySquashResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:MergeBranchesBySquashResponse'</a>,
--   <a>mergeBranchesBySquashResponse_commitId</a> - The commit ID of the
--   merge in the destination or target branch.
--   
--   <a>$sel:treeId:MergeBranchesBySquashResponse'</a>,
--   <a>mergeBranchesBySquashResponse_treeId</a> - The tree ID of the merge
--   in the destination or target branch.
--   
--   <a>$sel:httpStatus:MergeBranchesBySquashResponse'</a>,
--   <a>mergeBranchesBySquashResponse_httpStatus</a> - The response's http
--   status code.
newMergeBranchesBySquashResponse :: Int -> MergeBranchesBySquashResponse

-- | Represents the input of a get commit operation.
--   
--   <i>See:</i> <a>newGetCommit</a> smart constructor.
data GetCommit
GetCommit' :: Text -> Text -> GetCommit

-- | Create a value of <a>GetCommit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:GetCommit'</a>, <a>getCommit_repositoryName</a>
--   - The name of the repository to which the commit was made.
--   
--   <a>$sel:commitId:GetCommit'</a>, <a>getCommit_commitId</a> - The
--   commit ID. Commit IDs are the full SHA ID of the commit.
newGetCommit :: Text -> Text -> GetCommit

-- | Represents the output of a get commit operation.
--   
--   <i>See:</i> <a>newGetCommitResponse</a> smart constructor.
data GetCommitResponse
GetCommitResponse' :: Int -> Commit -> GetCommitResponse

-- | Create a value of <a>GetCommitResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetCommitResponse'</a>,
--   <a>getCommitResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:commit:GetCommitResponse'</a>, <a>getCommitResponse_commit</a>
--   - A commit data type object that contains information about the
--   specified commit.
newGetCommitResponse :: Int -> Commit -> GetCommitResponse

-- | <i>See:</i>
--   <a>newBatchAssociateApprovalRuleTemplateWithRepositories</a> smart
--   constructor.
data BatchAssociateApprovalRuleTemplateWithRepositories
BatchAssociateApprovalRuleTemplateWithRepositories' :: Text -> [Text] -> BatchAssociateApprovalRuleTemplateWithRepositories

-- | Create a value of
--   <a>BatchAssociateApprovalRuleTemplateWithRepositories</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:BatchAssociateApprovalRuleTemplateWithRepositories'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositories_approvalRuleTemplateName</a>
--   - The name of the template you want to associate with one or more
--   repositories.
--   
--   
--   <a>$sel:repositoryNames:BatchAssociateApprovalRuleTemplateWithRepositories'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositories_repositoryNames</a>
--   - The names of the repositories you want to associate with the
--   template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
newBatchAssociateApprovalRuleTemplateWithRepositories :: Text -> BatchAssociateApprovalRuleTemplateWithRepositories

-- | <i>See:</i>
--   <a>newBatchAssociateApprovalRuleTemplateWithRepositoriesResponse</a>
--   smart constructor.
data BatchAssociateApprovalRuleTemplateWithRepositoriesResponse
BatchAssociateApprovalRuleTemplateWithRepositoriesResponse' :: Int -> [Text] -> [BatchAssociateApprovalRuleTemplateWithRepositoriesError] -> BatchAssociateApprovalRuleTemplateWithRepositoriesResponse

-- | Create a value of
--   <a>BatchAssociateApprovalRuleTemplateWithRepositoriesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesResponse_httpStatus</a>
--   - The response's http status code.
--   
--   
--   <a>$sel:associatedRepositoryNames:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesResponse_associatedRepositoryNames</a>
--   - A list of names of the repositories that have been associated with
--   the template.
--   
--   
--   <a>$sel:errors:BatchAssociateApprovalRuleTemplateWithRepositoriesResponse'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesResponse_errors</a>
--   - A list of any errors that might have occurred while attempting to
--   create the association between the template and the repositories.
newBatchAssociateApprovalRuleTemplateWithRepositoriesResponse :: Int -> BatchAssociateApprovalRuleTemplateWithRepositoriesResponse

-- | <i>See:</i> <a>newGetCommentReactions</a> smart constructor.
data GetCommentReactions
GetCommentReactions' :: Maybe Text -> Maybe Text -> Maybe Int -> Text -> GetCommentReactions

-- | Create a value of <a>GetCommentReactions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCommentReactions'</a>,
--   <a>getCommentReactions_nextToken</a> - An enumeration token that, when
--   provided in a request, returns the next batch of the results.
--   
--   <a>$sel:reactionUserArn:GetCommentReactions'</a>,
--   <a>getCommentReactions_reactionUserArn</a> - Optional. The Amazon
--   Resource Name (ARN) of the user or identity for which you want to get
--   reaction information.
--   
--   <a>$sel:maxResults:GetCommentReactions'</a>,
--   <a>getCommentReactions_maxResults</a> - A non-zero, non-negative
--   integer used to limit the number of returned results. The default is
--   the same as the allowed maximum, 1,000.
--   
--   <a>$sel:commentId:GetCommentReactions'</a>,
--   <a>getCommentReactions_commentId</a> - The ID of the comment for which
--   you want to get reactions information.
newGetCommentReactions :: Text -> GetCommentReactions

-- | <i>See:</i> <a>newGetCommentReactionsResponse</a> smart constructor.
data GetCommentReactionsResponse
GetCommentReactionsResponse' :: Maybe Text -> Int -> [ReactionForComment] -> GetCommentReactionsResponse

-- | Create a value of <a>GetCommentReactionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCommentReactions'</a>,
--   <a>getCommentReactionsResponse_nextToken</a> - An enumeration token
--   that can be used in a request to return the next batch of the results.
--   
--   <a>$sel:httpStatus:GetCommentReactionsResponse'</a>,
--   <a>getCommentReactionsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:reactionsForComment:GetCommentReactionsResponse'</a>,
--   <a>getCommentReactionsResponse_reactionsForComment</a> - An array of
--   reactions to the specified comment.
newGetCommentReactionsResponse :: Int -> GetCommentReactionsResponse

-- | <i>See:</i> <a>newGetApprovalRuleTemplate</a> smart constructor.
data GetApprovalRuleTemplate
GetApprovalRuleTemplate' :: Text -> GetApprovalRuleTemplate

-- | Create a value of <a>GetApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleTemplateName:GetApprovalRuleTemplate'</a>,
--   <a>getApprovalRuleTemplate_approvalRuleTemplateName</a> - The name of
--   the approval rule template for which you want to get information.
newGetApprovalRuleTemplate :: Text -> GetApprovalRuleTemplate

-- | <i>See:</i> <a>newGetApprovalRuleTemplateResponse</a> smart
--   constructor.
data GetApprovalRuleTemplateResponse
GetApprovalRuleTemplateResponse' :: Int -> ApprovalRuleTemplate -> GetApprovalRuleTemplateResponse

-- | Create a value of <a>GetApprovalRuleTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetApprovalRuleTemplateResponse'</a>,
--   <a>getApprovalRuleTemplateResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:approvalRuleTemplate:GetApprovalRuleTemplateResponse'</a>,
--   <a>getApprovalRuleTemplateResponse_approvalRuleTemplate</a> - The
--   content and structure of the approval rule template.
newGetApprovalRuleTemplateResponse :: Int -> ApprovalRuleTemplate -> GetApprovalRuleTemplateResponse

-- | <i>See:</i> <a>newDisassociateApprovalRuleTemplateFromRepository</a>
--   smart constructor.
data DisassociateApprovalRuleTemplateFromRepository
DisassociateApprovalRuleTemplateFromRepository' :: Text -> Text -> DisassociateApprovalRuleTemplateFromRepository

-- | Create a value of
--   <a>DisassociateApprovalRuleTemplateFromRepository</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:DisassociateApprovalRuleTemplateFromRepository'</a>,
--   <a>disassociateApprovalRuleTemplateFromRepository_approvalRuleTemplateName</a>
--   - The name of the approval rule template to disassociate from a
--   specified repository.
--   
--   
--   <a>$sel:repositoryName:DisassociateApprovalRuleTemplateFromRepository'</a>,
--   <a>disassociateApprovalRuleTemplateFromRepository_repositoryName</a> -
--   The name of the repository you want to disassociate from the template.
newDisassociateApprovalRuleTemplateFromRepository :: Text -> Text -> DisassociateApprovalRuleTemplateFromRepository

-- | <i>See:</i>
--   <a>newDisassociateApprovalRuleTemplateFromRepositoryResponse</a> smart
--   constructor.
data DisassociateApprovalRuleTemplateFromRepositoryResponse
DisassociateApprovalRuleTemplateFromRepositoryResponse' :: DisassociateApprovalRuleTemplateFromRepositoryResponse

-- | Create a value of
--   <a>DisassociateApprovalRuleTemplateFromRepositoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDisassociateApprovalRuleTemplateFromRepositoryResponse :: DisassociateApprovalRuleTemplateFromRepositoryResponse

-- | Represents the input of a get branch operation.
--   
--   <i>See:</i> <a>newGetBranch</a> smart constructor.
data GetBranch
GetBranch' :: Maybe Text -> Maybe Text -> GetBranch

-- | Create a value of <a>GetBranch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branchName:GetBranch'</a>, <a>getBranch_branchName</a> - The
--   name of the branch for which you want to retrieve information.
--   
--   <a>$sel:repositoryName:GetBranch'</a>, <a>getBranch_repositoryName</a>
--   - The name of the repository that contains the branch for which you
--   want to retrieve information.
newGetBranch :: GetBranch

-- | Represents the output of a get branch operation.
--   
--   <i>See:</i> <a>newGetBranchResponse</a> smart constructor.
data GetBranchResponse
GetBranchResponse' :: Maybe BranchInfo -> Int -> GetBranchResponse

-- | Create a value of <a>GetBranchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branch:GetBranchResponse'</a>, <a>getBranchResponse_branch</a>
--   - The name of the branch.
--   
--   <a>$sel:httpStatus:GetBranchResponse'</a>,
--   <a>getBranchResponse_httpStatus</a> - The response's http status code.
newGetBranchResponse :: Int -> GetBranchResponse

-- | <i>See:</i> <a>newGetDifferences</a> smart constructor.
data GetDifferences
GetDifferences' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Text -> Text -> GetDifferences

-- | Create a value of <a>GetDifferences</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:afterPath:GetDifferences'</a>, <a>getDifferences_afterPath</a>
--   - The file path in which to check differences. Limits the results to
--   this path. Can also be used to specify the changed name of a directory
--   or folder, if it has changed. If not specified, differences are shown
--   for all paths.
--   
--   <a>$sel:nextToken:GetDifferences'</a>, <a>getDifferences_nextToken</a>
--   - An enumeration token that, when provided in a request, returns the
--   next batch of the results.
--   
--   <a>$sel:beforeCommitSpecifier:GetDifferences'</a>,
--   <a>getDifferences_beforeCommitSpecifier</a> - The branch, tag, HEAD,
--   or other fully qualified reference used to identify a commit (for
--   example, the full commit ID). Optional. If not specified, all changes
--   before the <tt>afterCommitSpecifier</tt> value are shown. If you do
--   not use <tt>beforeCommitSpecifier</tt> in your request, consider
--   limiting the results with <tt>maxResults</tt>.
--   
--   <a>$sel:beforePath:GetDifferences'</a>,
--   <a>getDifferences_beforePath</a> - The file path in which to check for
--   differences. Limits the results to this path. Can also be used to
--   specify the previous name of a directory or folder. If
--   <tt>beforePath</tt> and <tt>afterPath</tt> are not specified,
--   differences are shown for all paths.
--   
--   <a>$sel:maxResults:GetDifferences'</a>,
--   <a>getDifferences_maxResults</a> - A non-zero, non-negative integer
--   used to limit the number of returned results.
--   
--   <a>$sel:repositoryName:GetDifferences'</a>,
--   <a>getDifferences_repositoryName</a> - The name of the repository
--   where you want to get differences.
--   
--   <a>$sel:afterCommitSpecifier:GetDifferences'</a>,
--   <a>getDifferences_afterCommitSpecifier</a> - The branch, tag, HEAD, or
--   other fully qualified reference used to identify a commit.
newGetDifferences :: Text -> Text -> GetDifferences

-- | <i>See:</i> <a>newGetDifferencesResponse</a> smart constructor.
data GetDifferencesResponse
GetDifferencesResponse' :: Maybe Text -> Maybe [Difference] -> Int -> GetDifferencesResponse

-- | Create a value of <a>GetDifferencesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDifferences'</a>,
--   <a>getDifferencesResponse_nextToken</a> - An enumeration token that
--   can be used in a request to return the next batch of the results.
--   
--   <a>$sel:differences:GetDifferencesResponse'</a>,
--   <a>getDifferencesResponse_differences</a> - A data type object that
--   contains information about the differences, including whether the
--   difference is added, modified, or deleted (A, D, M).
--   
--   <a>$sel:httpStatus:GetDifferencesResponse'</a>,
--   <a>getDifferencesResponse_httpStatus</a> - The response's http status
--   code.
newGetDifferencesResponse :: Int -> GetDifferencesResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Maybe Text -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResource_nextToken</a> - An enumeration token that, when
--   provided in a request, returns the next batch of the results.
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource for which you want to get information about
--   tags, if any.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTagsForResource'</a>,
--   <a>listTagsForResourceResponse_nextToken</a> - An enumeration token
--   that allows the operation to batch the next results of the operation.
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tag key and value
--   pairs associated with the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newGetPullRequest</a> smart constructor.
data GetPullRequest
GetPullRequest' :: Text -> GetPullRequest

-- | Create a value of <a>GetPullRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:GetPullRequest'</a>,
--   <a>getPullRequest_pullRequestId</a> - The system-generated ID of the
--   pull request. To get this ID, use ListPullRequests.
newGetPullRequest :: Text -> GetPullRequest

-- | <i>See:</i> <a>newGetPullRequestResponse</a> smart constructor.
data GetPullRequestResponse
GetPullRequestResponse' :: Int -> PullRequest -> GetPullRequestResponse

-- | Create a value of <a>GetPullRequestResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetPullRequestResponse'</a>,
--   <a>getPullRequestResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:pullRequest:GetPullRequestResponse'</a>,
--   <a>getPullRequestResponse_pullRequest</a> - Information about the
--   specified pull request.
newGetPullRequestResponse :: Int -> PullRequest -> GetPullRequestResponse

-- | <i>See:</i> <a>newOverridePullRequestApprovalRules</a> smart
--   constructor.
data OverridePullRequestApprovalRules
OverridePullRequestApprovalRules' :: Text -> Text -> OverrideStatus -> OverridePullRequestApprovalRules

-- | Create a value of <a>OverridePullRequestApprovalRules</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:OverridePullRequestApprovalRules'</a>,
--   <a>overridePullRequestApprovalRules_pullRequestId</a> - The
--   system-generated ID of the pull request for which you want to override
--   all approval rule requirements. To get this information, use
--   GetPullRequest.
--   
--   <a>$sel:revisionId:OverridePullRequestApprovalRules'</a>,
--   <a>overridePullRequestApprovalRules_revisionId</a> - The
--   system-generated ID of the most recent revision of the pull request.
--   You cannot override approval rules for anything but the most recent
--   revision of a pull request. To get the revision ID, use
--   GetPullRequest.
--   
--   <a>$sel:overrideStatus:OverridePullRequestApprovalRules'</a>,
--   <a>overridePullRequestApprovalRules_overrideStatus</a> - Whether you
--   want to set aside approval rule requirements for the pull request
--   (OVERRIDE) or revoke a previous override and apply approval rule
--   requirements (REVOKE). REVOKE status is not stored.
newOverridePullRequestApprovalRules :: Text -> Text -> OverrideStatus -> OverridePullRequestApprovalRules

-- | <i>See:</i> <a>newOverridePullRequestApprovalRulesResponse</a> smart
--   constructor.
data OverridePullRequestApprovalRulesResponse
OverridePullRequestApprovalRulesResponse' :: OverridePullRequestApprovalRulesResponse

-- | Create a value of <a>OverridePullRequestApprovalRulesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newOverridePullRequestApprovalRulesResponse :: OverridePullRequestApprovalRulesResponse

-- | <i>See:</i> <a>newListPullRequests</a> smart constructor.
data ListPullRequests
ListPullRequests' :: Maybe Text -> Maybe Text -> Maybe PullRequestStatusEnum -> Maybe Int -> Text -> ListPullRequests

-- | Create a value of <a>ListPullRequests</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorArn:ListPullRequests'</a>,
--   <a>listPullRequests_authorArn</a> - Optional. The Amazon Resource Name
--   (ARN) of the user who created the pull request. If used, this filters
--   the results to pull requests created by that user.
--   
--   <a>$sel:nextToken:ListPullRequests'</a>,
--   <a>listPullRequests_nextToken</a> - An enumeration token that, when
--   provided in a request, returns the next batch of the results.
--   
--   <a>$sel:pullRequestStatus:ListPullRequests'</a>,
--   <a>listPullRequests_pullRequestStatus</a> - Optional. The status of
--   the pull request. If used, this refines the results to the pull
--   requests that match the specified status.
--   
--   <a>$sel:maxResults:ListPullRequests'</a>,
--   <a>listPullRequests_maxResults</a> - A non-zero, non-negative integer
--   used to limit the number of returned results.
--   
--   <a>$sel:repositoryName:ListPullRequests'</a>,
--   <a>listPullRequests_repositoryName</a> - The name of the repository
--   for which you want to list pull requests.
newListPullRequests :: Text -> ListPullRequests

-- | <i>See:</i> <a>newListPullRequestsResponse</a> smart constructor.
data ListPullRequestsResponse
ListPullRequestsResponse' :: Maybe Text -> Int -> [Text] -> ListPullRequestsResponse

-- | Create a value of <a>ListPullRequestsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPullRequests'</a>,
--   <a>listPullRequestsResponse_nextToken</a> - An enumeration token that
--   allows the operation to batch the next results of the operation.
--   
--   <a>$sel:httpStatus:ListPullRequestsResponse'</a>,
--   <a>listPullRequestsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:pullRequestIds:ListPullRequestsResponse'</a>,
--   <a>listPullRequestsResponse_pullRequestIds</a> - The system-generated
--   IDs of the pull requests.
newListPullRequestsResponse :: Int -> ListPullRequestsResponse

-- | <i>See:</i> <a>newCreateCommit</a> smart constructor.
data CreateCommit
CreateCommit' :: Maybe [SetFileModeEntry] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [DeleteFileEntry] -> Maybe [PutFileEntry] -> Maybe Text -> Maybe Bool -> Text -> Text -> CreateCommit

-- | Create a value of <a>CreateCommit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:setFileModes:CreateCommit'</a>,
--   <a>createCommit_setFileModes</a> - The file modes to update for files
--   in this commit.
--   
--   <a>$sel:email:CreateCommit'</a>, <a>createCommit_email</a> - The email
--   address of the person who created the commit.
--   
--   <a>$sel:authorName:CreateCommit'</a>, <a>createCommit_authorName</a> -
--   The name of the author who created the commit. This information is
--   used as both the author and committer for the commit.
--   
--   <a>$sel:parentCommitId:CreateCommit'</a>,
--   <a>createCommit_parentCommitId</a> - The ID of the commit that is the
--   parent of the commit you create. Not required if this is an empty
--   repository.
--   
--   <a>$sel:deleteFiles:CreateCommit'</a>, <a>createCommit_deleteFiles</a>
--   - The files to delete in this commit. These files still exist in
--   earlier commits.
--   
--   <a>$sel:putFiles:CreateCommit'</a>, <a>createCommit_putFiles</a> - The
--   files to add or update in this commit.
--   
--   <a>$sel:commitMessage:CreateCommit'</a>,
--   <a>createCommit_commitMessage</a> - The commit message you want to
--   include in the commit. Commit messages are limited to 256 KB. If no
--   message is specified, a default message is used.
--   
--   <a>$sel:keepEmptyFolders:CreateCommit'</a>,
--   <a>createCommit_keepEmptyFolders</a> - If the commit contains
--   deletions, whether to keep a folder or folder structure if the changes
--   leave the folders empty. If true, a ..gitkeep file is created for
--   empty folders. The default is false.
--   
--   <a>$sel:repositoryName:CreateCommit'</a>,
--   <a>createCommit_repositoryName</a> - The name of the repository where
--   you create the commit.
--   
--   <a>$sel:branchName:CreateCommit'</a>, <a>createCommit_branchName</a> -
--   The name of the branch where you create the commit.
newCreateCommit :: Text -> Text -> CreateCommit

-- | <i>See:</i> <a>newCreateCommitResponse</a> smart constructor.
data CreateCommitResponse
CreateCommitResponse' :: Maybe Text -> Maybe Text -> Maybe [FileMetadata] -> Maybe [FileMetadata] -> Maybe [FileMetadata] -> Int -> CreateCommitResponse

-- | Create a value of <a>CreateCommitResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:CreateCommitResponse'</a>,
--   <a>createCommitResponse_commitId</a> - The full commit ID of the
--   commit that contains your committed file changes.
--   
--   <a>$sel:treeId:CreateCommitResponse'</a>,
--   <a>createCommitResponse_treeId</a> - The full SHA-1 pointer of the
--   tree information for the commit that contains the commited file
--   changes.
--   
--   <a>$sel:filesAdded:CreateCommitResponse'</a>,
--   <a>createCommitResponse_filesAdded</a> - The files added as part of
--   the committed file changes.
--   
--   <a>$sel:filesUpdated:CreateCommitResponse'</a>,
--   <a>createCommitResponse_filesUpdated</a> - The files updated as part
--   of the commited file changes.
--   
--   <a>$sel:filesDeleted:CreateCommitResponse'</a>,
--   <a>createCommitResponse_filesDeleted</a> - The files deleted as part
--   of the committed file changes.
--   
--   <a>$sel:httpStatus:CreateCommitResponse'</a>,
--   <a>createCommitResponse_httpStatus</a> - The response's http status
--   code.
newCreateCommitResponse :: Int -> CreateCommitResponse

-- | <i>See:</i> <a>newUpdatePullRequestApprovalState</a> smart
--   constructor.
data UpdatePullRequestApprovalState
UpdatePullRequestApprovalState' :: Text -> Text -> ApprovalState -> UpdatePullRequestApprovalState

-- | Create a value of <a>UpdatePullRequestApprovalState</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:UpdatePullRequestApprovalState'</a>,
--   <a>updatePullRequestApprovalState_pullRequestId</a> - The
--   system-generated ID of the pull request.
--   
--   <a>$sel:revisionId:UpdatePullRequestApprovalState'</a>,
--   <a>updatePullRequestApprovalState_revisionId</a> - The
--   system-generated ID of the revision.
--   
--   <a>$sel:approvalState:UpdatePullRequestApprovalState'</a>,
--   <a>updatePullRequestApprovalState_approvalState</a> - The approval
--   state to associate with the user on the pull request.
newUpdatePullRequestApprovalState :: Text -> Text -> ApprovalState -> UpdatePullRequestApprovalState

-- | <i>See:</i> <a>newUpdatePullRequestApprovalStateResponse</a> smart
--   constructor.
data UpdatePullRequestApprovalStateResponse
UpdatePullRequestApprovalStateResponse' :: UpdatePullRequestApprovalStateResponse

-- | Create a value of <a>UpdatePullRequestApprovalStateResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdatePullRequestApprovalStateResponse :: UpdatePullRequestApprovalStateResponse

-- | <i>See:</i> <a>newEvaluatePullRequestApprovalRules</a> smart
--   constructor.
data EvaluatePullRequestApprovalRules
EvaluatePullRequestApprovalRules' :: Text -> Text -> EvaluatePullRequestApprovalRules

-- | Create a value of <a>EvaluatePullRequestApprovalRules</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:EvaluatePullRequestApprovalRules'</a>,
--   <a>evaluatePullRequestApprovalRules_pullRequestId</a> - The
--   system-generated ID of the pull request you want to evaluate.
--   
--   <a>$sel:revisionId:EvaluatePullRequestApprovalRules'</a>,
--   <a>evaluatePullRequestApprovalRules_revisionId</a> - The
--   system-generated ID for the pull request revision. To retrieve the
--   most recent revision ID for a pull request, use GetPullRequest.
newEvaluatePullRequestApprovalRules :: Text -> Text -> EvaluatePullRequestApprovalRules

-- | <i>See:</i> <a>newEvaluatePullRequestApprovalRulesResponse</a> smart
--   constructor.
data EvaluatePullRequestApprovalRulesResponse
EvaluatePullRequestApprovalRulesResponse' :: Int -> Evaluation -> EvaluatePullRequestApprovalRulesResponse

-- | Create a value of <a>EvaluatePullRequestApprovalRulesResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EvaluatePullRequestApprovalRulesResponse'</a>,
--   <a>evaluatePullRequestApprovalRulesResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:evaluation:EvaluatePullRequestApprovalRulesResponse'</a>,
--   <a>evaluatePullRequestApprovalRulesResponse_evaluation</a> - The
--   result of the evaluation, including the names of the rules whose
--   conditions have been met (if any), the names of the rules whose
--   conditions have not been met (if any), whether the pull request is in
--   the approved state, and whether the pull request approval rule has
--   been set aside by an override.
newEvaluatePullRequestApprovalRulesResponse :: Int -> Evaluation -> EvaluatePullRequestApprovalRulesResponse

-- | <i>See:</i> <a>newGetComment</a> smart constructor.
data GetComment
GetComment' :: Text -> GetComment

-- | Create a value of <a>GetComment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commentId:GetComment'</a>, <a>getComment_commentId</a> - The
--   unique, system-generated ID of the comment. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
newGetComment :: Text -> GetComment

-- | <i>See:</i> <a>newGetCommentResponse</a> smart constructor.
data GetCommentResponse
GetCommentResponse' :: Maybe Comment -> Int -> GetCommentResponse

-- | Create a value of <a>GetCommentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:GetCommentResponse'</a>,
--   <a>getCommentResponse_comment</a> - The contents of the comment.
--   
--   <a>$sel:httpStatus:GetCommentResponse'</a>,
--   <a>getCommentResponse_httpStatus</a> - The response's http status
--   code.
newGetCommentResponse :: Int -> GetCommentResponse

-- | <i>See:</i> <a>newCreateApprovalRuleTemplate</a> smart constructor.
data CreateApprovalRuleTemplate
CreateApprovalRuleTemplate' :: Maybe Text -> Text -> Text -> CreateApprovalRuleTemplate

-- | Create a value of <a>CreateApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateDescription:CreateApprovalRuleTemplate'</a>,
--   <a>createApprovalRuleTemplate_approvalRuleTemplateDescription</a> -
--   The description of the approval rule template. Consider providing a
--   description that explains what this template does and when it might be
--   appropriate to associate it with repositories.
--   
--   <a>$sel:approvalRuleTemplateName:CreateApprovalRuleTemplate'</a>,
--   <a>createApprovalRuleTemplate_approvalRuleTemplateName</a> - The name
--   of the approval rule template. Provide descriptive names, because this
--   name is applied to the approval rules created automatically in
--   associated repositories.
--   
--   <a>$sel:approvalRuleTemplateContent:CreateApprovalRuleTemplate'</a>,
--   <a>createApprovalRuleTemplate_approvalRuleTemplateContent</a> - The
--   content of the approval rule that is created on pull requests in
--   associated repositories. If you specify one or more destination
--   references (branches), approval rules are created in an associated
--   repository only if their destination references (branches) match those
--   specified in the template.
--   
--   When you create the content of the approval rule template, you can
--   specify approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newCreateApprovalRuleTemplate :: Text -> Text -> CreateApprovalRuleTemplate

-- | <i>See:</i> <a>newCreateApprovalRuleTemplateResponse</a> smart
--   constructor.
data CreateApprovalRuleTemplateResponse
CreateApprovalRuleTemplateResponse' :: Int -> ApprovalRuleTemplate -> CreateApprovalRuleTemplateResponse

-- | Create a value of <a>CreateApprovalRuleTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateApprovalRuleTemplateResponse'</a>,
--   <a>createApprovalRuleTemplateResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:approvalRuleTemplate:CreateApprovalRuleTemplateResponse'</a>,
--   <a>createApprovalRuleTemplateResponse_approvalRuleTemplate</a> - The
--   content and structure of the created approval rule template.
newCreateApprovalRuleTemplateResponse :: Int -> ApprovalRuleTemplate -> CreateApprovalRuleTemplateResponse

-- | Represents the input of a delete branch operation.
--   
--   <i>See:</i> <a>newDeleteBranch</a> smart constructor.
data DeleteBranch
DeleteBranch' :: Text -> Text -> DeleteBranch

-- | Create a value of <a>DeleteBranch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:DeleteBranch'</a>,
--   <a>deleteBranch_repositoryName</a> - The name of the repository that
--   contains the branch to be deleted.
--   
--   <a>$sel:branchName:DeleteBranch'</a>, <a>deleteBranch_branchName</a> -
--   The name of the branch to delete.
newDeleteBranch :: Text -> Text -> DeleteBranch

-- | Represents the output of a delete branch operation.
--   
--   <i>See:</i> <a>newDeleteBranchResponse</a> smart constructor.
data DeleteBranchResponse
DeleteBranchResponse' :: Maybe BranchInfo -> Int -> DeleteBranchResponse

-- | Create a value of <a>DeleteBranchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deletedBranch:DeleteBranchResponse'</a>,
--   <a>deleteBranchResponse_deletedBranch</a> - Information about the
--   branch deleted by the operation, including the branch name and the
--   commit ID that was the tip of the branch.
--   
--   <a>$sel:httpStatus:DeleteBranchResponse'</a>,
--   <a>deleteBranchResponse_httpStatus</a> - The response's http status
--   code.
newDeleteBranchResponse :: Int -> DeleteBranchResponse

-- | Represents the input of an update repository description operation.
--   
--   <i>See:</i> <a>newUpdateRepositoryDescription</a> smart constructor.
data UpdateRepositoryDescription
UpdateRepositoryDescription' :: Maybe Text -> Text -> UpdateRepositoryDescription

-- | Create a value of <a>UpdateRepositoryDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryDescription:UpdateRepositoryDescription'</a>,
--   <a>updateRepositoryDescription_repositoryDescription</a> - The new
--   comment or description for the specified repository. Repository
--   descriptions are limited to 1,000 characters.
--   
--   <a>$sel:repositoryName:UpdateRepositoryDescription'</a>,
--   <a>updateRepositoryDescription_repositoryName</a> - The name of the
--   repository to set or change the comment or description for.
newUpdateRepositoryDescription :: Text -> UpdateRepositoryDescription

-- | <i>See:</i> <a>newUpdateRepositoryDescriptionResponse</a> smart
--   constructor.
data UpdateRepositoryDescriptionResponse
UpdateRepositoryDescriptionResponse' :: UpdateRepositoryDescriptionResponse

-- | Create a value of <a>UpdateRepositoryDescriptionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateRepositoryDescriptionResponse :: UpdateRepositoryDescriptionResponse

-- | Represents the input of a create branch operation.
--   
--   <i>See:</i> <a>newCreateBranch</a> smart constructor.
data CreateBranch
CreateBranch' :: Text -> Text -> Text -> CreateBranch

-- | Create a value of <a>CreateBranch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:CreateBranch'</a>,
--   <a>createBranch_repositoryName</a> - The name of the repository in
--   which you want to create the new branch.
--   
--   <a>$sel:branchName:CreateBranch'</a>, <a>createBranch_branchName</a> -
--   The name of the new branch to create.
--   
--   <a>$sel:commitId:CreateBranch'</a>, <a>createBranch_commitId</a> - The
--   ID of the commit to point the new branch to.
newCreateBranch :: Text -> Text -> Text -> CreateBranch

-- | <i>See:</i> <a>newCreateBranchResponse</a> smart constructor.
data CreateBranchResponse
CreateBranchResponse' :: CreateBranchResponse

-- | Create a value of <a>CreateBranchResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newCreateBranchResponse :: CreateBranchResponse

-- | <i>See:</i> <a>newGetFolder</a> smart constructor.
data GetFolder
GetFolder' :: Maybe Text -> Text -> Text -> GetFolder

-- | Create a value of <a>GetFolder</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitSpecifier:GetFolder'</a>,
--   <a>getFolder_commitSpecifier</a> - A fully qualified reference used to
--   identify a commit that contains the version of the folder's content to
--   return. A fully qualified reference can be a commit ID, branch name,
--   tag, or reference such as HEAD. If no specifier is provided, the
--   folder content is returned as it exists in the HEAD commit.
--   
--   <a>$sel:repositoryName:GetFolder'</a>, <a>getFolder_repositoryName</a>
--   - The name of the repository.
--   
--   <a>$sel:folderPath:GetFolder'</a>, <a>getFolder_folderPath</a> - The
--   fully qualified path to the folder whose contents are returned,
--   including the folder name. For example, /examples is a fully-qualified
--   path to a folder named examples that was created off of the root
--   directory (/) of a repository.
newGetFolder :: Text -> Text -> GetFolder

-- | <i>See:</i> <a>newGetFolderResponse</a> smart constructor.
data GetFolderResponse
GetFolderResponse' :: Maybe [SubModule] -> Maybe Text -> Maybe [Folder] -> Maybe [SymbolicLink] -> Maybe [File] -> Int -> Text -> Text -> GetFolderResponse

-- | Create a value of <a>GetFolderResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subModules:GetFolderResponse'</a>,
--   <a>getFolderResponse_subModules</a> - The list of submodules in the
--   specified folder, if any.
--   
--   <a>$sel:treeId:GetFolderResponse'</a>, <a>getFolderResponse_treeId</a>
--   - The full SHA-1 pointer of the tree information for the commit that
--   contains the folder.
--   
--   <a>$sel:subFolders:GetFolderResponse'</a>,
--   <a>getFolderResponse_subFolders</a> - The list of folders that exist
--   under the specified folder, if any.
--   
--   <a>$sel:symbolicLinks:GetFolderResponse'</a>,
--   <a>getFolderResponse_symbolicLinks</a> - The list of symbolic links to
--   other files and folders in the specified folder, if any.
--   
--   <a>$sel:files:GetFolderResponse'</a>, <a>getFolderResponse_files</a> -
--   The list of files in the specified folder, if any.
--   
--   <a>$sel:httpStatus:GetFolderResponse'</a>,
--   <a>getFolderResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:commitId:GetFolderResponse'</a>,
--   <a>getFolderResponse_commitId</a> - The full commit ID used as a
--   reference for the returned version of the folder content.
--   
--   <a>$sel:folderPath:GetFolder'</a>, <a>getFolderResponse_folderPath</a>
--   - The fully qualified path of the folder whose contents are returned.
newGetFolderResponse :: Int -> Text -> Text -> GetFolderResponse

-- | <i>See:</i> <a>newCreatePullRequest</a> smart constructor.
data CreatePullRequest
CreatePullRequest' :: Maybe Text -> Maybe Text -> Text -> [Target] -> CreatePullRequest

-- | Create a value of <a>CreatePullRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:CreatePullRequest'</a>,
--   <a>createPullRequest_clientRequestToken</a> - A unique,
--   client-generated idempotency token that, when provided in a request,
--   ensures the request cannot be repeated with a changed parameter. If a
--   request is received with the same parameters and a token is included,
--   the request returns information about the initial request that used
--   that token.
--   
--   The AWS SDKs prepopulate client request tokens. If you are using an
--   AWS SDK, an idempotency token is created for you.
--   
--   <a>$sel:description:CreatePullRequest'</a>,
--   <a>createPullRequest_description</a> - A description of the pull
--   request.
--   
--   <a>$sel:title:CreatePullRequest'</a>, <a>createPullRequest_title</a> -
--   The title of the pull request. This title is used to identify the pull
--   request to other users in the repository.
--   
--   <a>$sel:targets:CreatePullRequest'</a>,
--   <a>createPullRequest_targets</a> - The targets for the pull request,
--   including the source of the code to be reviewed (the source branch)
--   and the destination where the creator of the pull request intends the
--   code to be merged after the pull request is closed (the destination
--   branch).
newCreatePullRequest :: Text -> CreatePullRequest

-- | <i>See:</i> <a>newCreatePullRequestResponse</a> smart constructor.
data CreatePullRequestResponse
CreatePullRequestResponse' :: Int -> PullRequest -> CreatePullRequestResponse

-- | Create a value of <a>CreatePullRequestResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePullRequestResponse'</a>,
--   <a>createPullRequestResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:pullRequest:CreatePullRequestResponse'</a>,
--   <a>createPullRequestResponse_pullRequest</a> - Information about the
--   newly created pull request.
newCreatePullRequestResponse :: Int -> PullRequest -> CreatePullRequestResponse

-- | <i>See:</i> <a>newDeleteApprovalRuleTemplate</a> smart constructor.
data DeleteApprovalRuleTemplate
DeleteApprovalRuleTemplate' :: Text -> DeleteApprovalRuleTemplate

-- | Create a value of <a>DeleteApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleTemplateName:DeleteApprovalRuleTemplate'</a>,
--   <a>deleteApprovalRuleTemplate_approvalRuleTemplateName</a> - The name
--   of the approval rule template to delete.
newDeleteApprovalRuleTemplate :: Text -> DeleteApprovalRuleTemplate

-- | <i>See:</i> <a>newDeleteApprovalRuleTemplateResponse</a> smart
--   constructor.
data DeleteApprovalRuleTemplateResponse
DeleteApprovalRuleTemplateResponse' :: Int -> Text -> DeleteApprovalRuleTemplateResponse

-- | Create a value of <a>DeleteApprovalRuleTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApprovalRuleTemplateResponse'</a>,
--   <a>deleteApprovalRuleTemplateResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:approvalRuleTemplateId:DeleteApprovalRuleTemplateResponse'</a>,
--   <a>deleteApprovalRuleTemplateResponse_approvalRuleTemplateId</a> - The
--   system-generated ID of the deleted approval rule template. If the
--   template has been previously deleted, the only response is a 200 OK.
newDeleteApprovalRuleTemplateResponse :: Int -> Text -> DeleteApprovalRuleTemplateResponse

-- | Represents the input of a list branches operation.
--   
--   <i>See:</i> <a>newListBranches</a> smart constructor.
data ListBranches
ListBranches' :: Maybe Text -> Text -> ListBranches

-- | Create a value of <a>ListBranches</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBranches'</a>, <a>listBranches_nextToken</a> -
--   An enumeration token that allows the operation to batch the results.
--   
--   <a>$sel:repositoryName:ListBranches'</a>,
--   <a>listBranches_repositoryName</a> - The name of the repository that
--   contains the branches.
newListBranches :: Text -> ListBranches

-- | Represents the output of a list branches operation.
--   
--   <i>See:</i> <a>newListBranchesResponse</a> smart constructor.
data ListBranchesResponse
ListBranchesResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListBranchesResponse

-- | Create a value of <a>ListBranchesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branches:ListBranchesResponse'</a>,
--   <a>listBranchesResponse_branches</a> - The list of branch names.
--   
--   <a>$sel:nextToken:ListBranches'</a>,
--   <a>listBranchesResponse_nextToken</a> - An enumeration token that
--   returns the batch of the results.
--   
--   <a>$sel:httpStatus:ListBranchesResponse'</a>,
--   <a>listBranchesResponse_httpStatus</a> - The response's http status
--   code.
newListBranchesResponse :: Int -> ListBranchesResponse

-- | <i>See:</i> <a>newBatchGetCommits</a> smart constructor.
data BatchGetCommits
BatchGetCommits' :: [Text] -> Text -> BatchGetCommits

-- | Create a value of <a>BatchGetCommits</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitIds:BatchGetCommits'</a>,
--   <a>batchGetCommits_commitIds</a> - The full commit IDs of the commits
--   to get information about.
--   
--   You must supply the full SHA IDs of each commit. You cannot use
--   shortened SHA IDs.
--   
--   <a>$sel:repositoryName:BatchGetCommits'</a>,
--   <a>batchGetCommits_repositoryName</a> - The name of the repository
--   that contains the commits.
newBatchGetCommits :: Text -> BatchGetCommits

-- | <i>See:</i> <a>newBatchGetCommitsResponse</a> smart constructor.
data BatchGetCommitsResponse
BatchGetCommitsResponse' :: Maybe [Commit] -> Maybe [BatchGetCommitsError] -> Int -> BatchGetCommitsResponse

-- | Create a value of <a>BatchGetCommitsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commits:BatchGetCommitsResponse'</a>,
--   <a>batchGetCommitsResponse_commits</a> - An array of commit data type
--   objects, each of which contains information about a specified commit.
--   
--   <a>$sel:errors:BatchGetCommitsResponse'</a>,
--   <a>batchGetCommitsResponse_errors</a> - Returns any commit IDs for
--   which information could not be found. For example, if one of the
--   commit IDs was a shortened SHA ID or that commit was not found in the
--   specified repository, the ID returns an error object with more
--   information.
--   
--   <a>$sel:httpStatus:BatchGetCommitsResponse'</a>,
--   <a>batchGetCommitsResponse_httpStatus</a> - The response's http status
--   code.
newBatchGetCommitsResponse :: Int -> BatchGetCommitsResponse

-- | <i>See:</i> <a>newPutCommentReaction</a> smart constructor.
data PutCommentReaction
PutCommentReaction' :: Text -> Text -> PutCommentReaction

-- | Create a value of <a>PutCommentReaction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commentId:PutCommentReaction'</a>,
--   <a>putCommentReaction_commentId</a> - The ID of the comment to which
--   you want to add or update a reaction.
--   
--   <a>$sel:reactionValue:PutCommentReaction'</a>,
--   <a>putCommentReaction_reactionValue</a> - The emoji reaction you want
--   to add or update. To remove a reaction, provide a value of blank or
--   null. You can also provide the value of none. For information about
--   emoji reaction values supported in AWS CodeCommit, see the <a>AWS
--   CodeCommit User Guide</a>.
newPutCommentReaction :: Text -> Text -> PutCommentReaction

-- | <i>See:</i> <a>newPutCommentReactionResponse</a> smart constructor.
data PutCommentReactionResponse
PutCommentReactionResponse' :: PutCommentReactionResponse

-- | Create a value of <a>PutCommentReactionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutCommentReactionResponse :: PutCommentReactionResponse

-- | <i>See:</i> <a>newUpdatePullRequestDescription</a> smart constructor.
data UpdatePullRequestDescription
UpdatePullRequestDescription' :: Text -> Text -> UpdatePullRequestDescription

-- | Create a value of <a>UpdatePullRequestDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:UpdatePullRequestDescription'</a>,
--   <a>updatePullRequestDescription_pullRequestId</a> - The
--   system-generated ID of the pull request. To get this ID, use
--   ListPullRequests.
--   
--   <a>$sel:description:UpdatePullRequestDescription'</a>,
--   <a>updatePullRequestDescription_description</a> - The updated content
--   of the description for the pull request. This content replaces the
--   existing description.
newUpdatePullRequestDescription :: Text -> Text -> UpdatePullRequestDescription

-- | <i>See:</i> <a>newUpdatePullRequestDescriptionResponse</a> smart
--   constructor.
data UpdatePullRequestDescriptionResponse
UpdatePullRequestDescriptionResponse' :: Int -> PullRequest -> UpdatePullRequestDescriptionResponse

-- | Create a value of <a>UpdatePullRequestDescriptionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePullRequestDescriptionResponse'</a>,
--   <a>updatePullRequestDescriptionResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:pullRequest:UpdatePullRequestDescriptionResponse'</a>,
--   <a>updatePullRequestDescriptionResponse_pullRequest</a> - Information
--   about the updated pull request.
newUpdatePullRequestDescriptionResponse :: Int -> PullRequest -> UpdatePullRequestDescriptionResponse

-- | Represents the input of a list repositories operation.
--   
--   <i>See:</i> <a>newListRepositories</a> smart constructor.
data ListRepositories
ListRepositories' :: Maybe Text -> Maybe OrderEnum -> Maybe SortByEnum -> ListRepositories

-- | Create a value of <a>ListRepositories</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRepositories'</a>,
--   <a>listRepositories_nextToken</a> - An enumeration token that allows
--   the operation to batch the results of the operation. Batch sizes are
--   1,000 for list repository operations. When the client sends the token
--   back to AWS CodeCommit, another page of 1,000 records is retrieved.
--   
--   <a>$sel:order:ListRepositories'</a>, <a>listRepositories_order</a> -
--   The order in which to sort the results of a list repositories
--   operation.
--   
--   <a>$sel:sortBy:ListRepositories'</a>, <a>listRepositories_sortBy</a> -
--   The criteria used to sort the results of a list repositories
--   operation.
newListRepositories :: ListRepositories

-- | Represents the output of a list repositories operation.
--   
--   <i>See:</i> <a>newListRepositoriesResponse</a> smart constructor.
data ListRepositoriesResponse
ListRepositoriesResponse' :: Maybe [RepositoryNameIdPair] -> Maybe Text -> Int -> ListRepositoriesResponse

-- | Create a value of <a>ListRepositoriesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositories:ListRepositoriesResponse'</a>,
--   <a>listRepositoriesResponse_repositories</a> - Lists the repositories
--   called by the list repositories operation.
--   
--   <a>$sel:nextToken:ListRepositories'</a>,
--   <a>listRepositoriesResponse_nextToken</a> - An enumeration token that
--   allows the operation to batch the results of the operation. Batch
--   sizes are 1,000 for list repository operations. When the client sends
--   the token back to AWS CodeCommit, another page of 1,000 records is
--   retrieved.
--   
--   <a>$sel:httpStatus:ListRepositoriesResponse'</a>,
--   <a>listRepositoriesResponse_httpStatus</a> - The response's http
--   status code.
newListRepositoriesResponse :: Int -> ListRepositoriesResponse

-- | Represents the input of a create repository operation.
--   
--   <i>See:</i> <a>newCreateRepository</a> smart constructor.
data CreateRepository
CreateRepository' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> CreateRepository

-- | Create a value of <a>CreateRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryDescription:CreateRepository'</a>,
--   <a>createRepository_repositoryDescription</a> - A comment or
--   description about the new repository.
--   
--   The description field for a repository accepts all HTML characters and
--   all valid Unicode characters. Applications that do not HTML-encode the
--   description and display it in a webpage can expose users to
--   potentially malicious code. Make sure that you HTML-encode the
--   description field in any application that uses this API to display the
--   repository description on a webpage.
--   
--   <a>$sel:tags:CreateRepository'</a>, <a>createRepository_tags</a> - One
--   or more tag key-value pairs to use when tagging this repository.
--   
--   <a>$sel:repositoryName:CreateRepository'</a>,
--   <a>createRepository_repositoryName</a> - The name of the new
--   repository to be created.
--   
--   The repository name must be unique across the calling AWS account.
--   Repository names are limited to 100 alphanumeric, dash, and underscore
--   characters, and cannot include certain characters. For more
--   information about the limits on repository names, see <a>Limits</a> in
--   the <i>AWS CodeCommit User Guide</i>. The suffix .git is prohibited.
newCreateRepository :: Text -> CreateRepository

-- | Represents the output of a create repository operation.
--   
--   <i>See:</i> <a>newCreateRepositoryResponse</a> smart constructor.
data CreateRepositoryResponse
CreateRepositoryResponse' :: Maybe RepositoryMetadata -> Int -> CreateRepositoryResponse

-- | Create a value of <a>CreateRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryMetadata:CreateRepositoryResponse'</a>,
--   <a>createRepositoryResponse_repositoryMetadata</a> - Information about
--   the newly created repository.
--   
--   <a>$sel:httpStatus:CreateRepositoryResponse'</a>,
--   <a>createRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newCreateRepositoryResponse :: Int -> CreateRepositoryResponse

-- | Represents the input of an update default branch operation.
--   
--   <i>See:</i> <a>newUpdateDefaultBranch</a> smart constructor.
data UpdateDefaultBranch
UpdateDefaultBranch' :: Text -> Text -> UpdateDefaultBranch

-- | Create a value of <a>UpdateDefaultBranch</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:UpdateDefaultBranch'</a>,
--   <a>updateDefaultBranch_repositoryName</a> - The name of the repository
--   to set or change the default branch for.
--   
--   <a>$sel:defaultBranchName:UpdateDefaultBranch'</a>,
--   <a>updateDefaultBranch_defaultBranchName</a> - The name of the branch
--   to set as the default.
newUpdateDefaultBranch :: Text -> Text -> UpdateDefaultBranch

-- | <i>See:</i> <a>newUpdateDefaultBranchResponse</a> smart constructor.
data UpdateDefaultBranchResponse
UpdateDefaultBranchResponse' :: UpdateDefaultBranchResponse

-- | Create a value of <a>UpdateDefaultBranchResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateDefaultBranchResponse :: UpdateDefaultBranchResponse

-- | <i>See:</i> <a>newGetMergeOptions</a> smart constructor.
data GetMergeOptions
GetMergeOptions' :: Maybe ConflictDetailLevelTypeEnum -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> GetMergeOptions

-- | Create a value of <a>GetMergeOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conflictDetailLevel:GetMergeOptions'</a>,
--   <a>getMergeOptions_conflictDetailLevel</a> - The level of conflict
--   detail to use. If unspecified, the default FILE_LEVEL is used, which
--   returns a not-mergeable result if the same file has differences in
--   both branches. If LINE_LEVEL is specified, a conflict is considered
--   not mergeable if the same file in both branches has differences on the
--   same line.
--   
--   <a>$sel:conflictResolutionStrategy:GetMergeOptions'</a>,
--   <a>getMergeOptions_conflictResolutionStrategy</a> - Specifies which
--   branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:repositoryName:GetMergeOptions'</a>,
--   <a>getMergeOptions_repositoryName</a> - The name of the repository
--   that contains the commits about which you want to get merge options.
--   
--   <a>$sel:sourceCommitSpecifier:GetMergeOptions'</a>,
--   <a>getMergeOptions_sourceCommitSpecifier</a> - The branch, tag, HEAD,
--   or other fully qualified reference used to identify a commit (for
--   example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:GetMergeOptions'</a>,
--   <a>getMergeOptions_destinationCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
newGetMergeOptions :: Text -> Text -> Text -> GetMergeOptions

-- | <i>See:</i> <a>newGetMergeOptionsResponse</a> smart constructor.
data GetMergeOptionsResponse
GetMergeOptionsResponse' :: Int -> [MergeOptionTypeEnum] -> Text -> Text -> Text -> GetMergeOptionsResponse

-- | Create a value of <a>GetMergeOptionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:mergeOptions:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_mergeOptions</a> - The merge option or
--   strategy used to merge the code.
--   
--   <a>$sel:sourceCommitId:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_sourceCommitId</a> - The commit ID of the
--   source commit specifier that was used in the merge evaluation.
--   
--   <a>$sel:destinationCommitId:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_destinationCommitId</a> - The commit ID of
--   the destination commit specifier that was used in the merge
--   evaluation.
--   
--   <a>$sel:baseCommitId:GetMergeOptionsResponse'</a>,
--   <a>getMergeOptionsResponse_baseCommitId</a> - The commit ID of the
--   merge base.
newGetMergeOptionsResponse :: Int -> Text -> Text -> Text -> GetMergeOptionsResponse

-- | <i>See:</i> <a>newCreatePullRequestApprovalRule</a> smart constructor.
data CreatePullRequestApprovalRule
CreatePullRequestApprovalRule' :: Text -> Text -> Text -> CreatePullRequestApprovalRule

-- | Create a value of <a>CreatePullRequestApprovalRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:CreatePullRequestApprovalRule'</a>,
--   <a>createPullRequestApprovalRule_pullRequestId</a> - The
--   system-generated ID of the pull request for which you want to create
--   the approval rule.
--   
--   <a>$sel:approvalRuleName:CreatePullRequestApprovalRule'</a>,
--   <a>createPullRequestApprovalRule_approvalRuleName</a> - The name for
--   the approval rule.
--   
--   <a>$sel:approvalRuleContent:CreatePullRequestApprovalRule'</a>,
--   <a>createPullRequestApprovalRule_approvalRuleContent</a> - The content
--   of the approval rule, including the number of approvals needed and the
--   structure of an approval pool defined for approvals, if any. For more
--   information about approval pools, see the AWS CodeCommit User Guide.
--   
--   When you create the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following would
--   be counted as approvals coming from that user:<ul><li>An IAM user in
--   the account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newCreatePullRequestApprovalRule :: Text -> Text -> Text -> CreatePullRequestApprovalRule

-- | <i>See:</i> <a>newCreatePullRequestApprovalRuleResponse</a> smart
--   constructor.
data CreatePullRequestApprovalRuleResponse
CreatePullRequestApprovalRuleResponse' :: Int -> ApprovalRule -> CreatePullRequestApprovalRuleResponse

-- | Create a value of <a>CreatePullRequestApprovalRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreatePullRequestApprovalRuleResponse'</a>,
--   <a>createPullRequestApprovalRuleResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:approvalRule:CreatePullRequestApprovalRuleResponse'</a>,
--   <a>createPullRequestApprovalRuleResponse_approvalRule</a> -
--   Information about the created approval rule.
newCreatePullRequestApprovalRuleResponse :: Int -> ApprovalRule -> CreatePullRequestApprovalRuleResponse

-- | <i>See:</i> <a>newPostCommentReply</a> smart constructor.
data PostCommentReply
PostCommentReply' :: Maybe Text -> Text -> Text -> PostCommentReply

-- | Create a value of <a>PostCommentReply</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:PostCommentReply'</a>,
--   <a>postCommentReply_clientRequestToken</a> - A unique,
--   client-generated idempotency token that, when provided in a request,
--   ensures the request cannot be repeated with a changed parameter. If a
--   request is received with the same parameters and a token is included,
--   the request returns information about the initial request that used
--   that token.
--   
--   <a>$sel:inReplyTo:PostCommentReply'</a>,
--   <a>postCommentReply_inReplyTo</a> - The system-generated ID of the
--   comment to which you want to reply. To get this ID, use
--   GetCommentsForComparedCommit or GetCommentsForPullRequest.
--   
--   <a>$sel:content:PostCommentReply'</a>, <a>postCommentReply_content</a>
--   - The contents of your reply to a comment.
newPostCommentReply :: Text -> Text -> PostCommentReply

-- | <i>See:</i> <a>newPostCommentReplyResponse</a> smart constructor.
data PostCommentReplyResponse
PostCommentReplyResponse' :: Maybe Comment -> Int -> PostCommentReplyResponse

-- | Create a value of <a>PostCommentReplyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:PostCommentReplyResponse'</a>,
--   <a>postCommentReplyResponse_comment</a> - Information about the reply
--   to a comment.
--   
--   <a>$sel:httpStatus:PostCommentReplyResponse'</a>,
--   <a>postCommentReplyResponse_httpStatus</a> - The response's http
--   status code.
newPostCommentReplyResponse :: Int -> PostCommentReplyResponse

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateContent</a> smart
--   constructor.
data UpdateApprovalRuleTemplateContent
UpdateApprovalRuleTemplateContent' :: Maybe Text -> Text -> Text -> UpdateApprovalRuleTemplateContent

-- | Create a value of <a>UpdateApprovalRuleTemplateContent</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:existingRuleContentSha256:UpdateApprovalRuleTemplateContent'</a>,
--   <a>updateApprovalRuleTemplateContent_existingRuleContentSha256</a> -
--   The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
--   
--   
--   <a>$sel:approvalRuleTemplateName:UpdateApprovalRuleTemplateContent'</a>,
--   <a>updateApprovalRuleTemplateContent_approvalRuleTemplateName</a> -
--   The name of the approval rule template where you want to update the
--   content of the rule.
--   
--   <a>$sel:newRuleContent':UpdateApprovalRuleTemplateContent'</a>,
--   <a>updateApprovalRuleTemplateContent_newRuleContent</a> - The content
--   that replaces the existing content of the rule. Content statements
--   must be complete. You cannot provide only the changes.
newUpdateApprovalRuleTemplateContent :: Text -> Text -> UpdateApprovalRuleTemplateContent

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateContentResponse</a> smart
--   constructor.
data UpdateApprovalRuleTemplateContentResponse
UpdateApprovalRuleTemplateContentResponse' :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateContentResponse

-- | Create a value of <a>UpdateApprovalRuleTemplateContentResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApprovalRuleTemplateContentResponse'</a>,
--   <a>updateApprovalRuleTemplateContentResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateContentResponse'</a>,
--   <a>updateApprovalRuleTemplateContentResponse_approvalRuleTemplate</a>
--   - Undocumented member.
newUpdateApprovalRuleTemplateContentResponse :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateContentResponse

-- | <i>See:</i> <a>newCreateUnreferencedMergeCommit</a> smart constructor.
data CreateUnreferencedMergeCommit
CreateUnreferencedMergeCommit' :: Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Text -> Text -> Text -> MergeOptionTypeEnum -> CreateUnreferencedMergeCommit

-- | Create a value of <a>CreateUnreferencedMergeCommit</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_email</a> - The email address for the
--   person who created the unreferenced commit.
--   
--   <a>$sel:authorName:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_authorName</a> - The name of the
--   author who created the unreferenced commit. This information is used
--   as both the author and committer for the commit.
--   
--   <a>$sel:conflictDetailLevel:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_conflictDetailLevel</a> - The level
--   of conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_commitMessage</a> - The commit
--   message for the unreferenced commit.
--   
--   <a>$sel:conflictResolution:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_conflictResolution</a> - If AUTOMERGE
--   is the conflict resolution strategy, a list of inputs to use when
--   resolving conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_conflictResolutionStrategy</a> -
--   Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
--   
--   <a>$sel:keepEmptyFolders:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_keepEmptyFolders</a> - If the commit
--   contains deletions, whether to keep a folder or folder structure if
--   the changes leave the folders empty. If this is specified as true, a
--   .gitkeep file is created for empty folders. The default is false.
--   
--   <a>$sel:repositoryName:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_repositoryName</a> - The name of the
--   repository where you want to create the unreferenced merge commit.
--   
--   <a>$sel:sourceCommitSpecifier:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_sourceCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_destinationCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:mergeOption:CreateUnreferencedMergeCommit'</a>,
--   <a>createUnreferencedMergeCommit_mergeOption</a> - The merge option or
--   strategy you want to use to merge the code.
newCreateUnreferencedMergeCommit :: Text -> Text -> Text -> MergeOptionTypeEnum -> CreateUnreferencedMergeCommit

-- | <i>See:</i> <a>newCreateUnreferencedMergeCommitResponse</a> smart
--   constructor.
data CreateUnreferencedMergeCommitResponse
CreateUnreferencedMergeCommitResponse' :: Maybe Text -> Maybe Text -> Int -> CreateUnreferencedMergeCommitResponse

-- | Create a value of <a>CreateUnreferencedMergeCommitResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:CreateUnreferencedMergeCommitResponse'</a>,
--   <a>createUnreferencedMergeCommitResponse_commitId</a> - The full
--   commit ID of the commit that contains your merge results.
--   
--   <a>$sel:treeId:CreateUnreferencedMergeCommitResponse'</a>,
--   <a>createUnreferencedMergeCommitResponse_treeId</a> - The full SHA-1
--   pointer of the tree information for the commit that contains the merge
--   results.
--   
--   <a>$sel:httpStatus:CreateUnreferencedMergeCommitResponse'</a>,
--   <a>createUnreferencedMergeCommitResponse_httpStatus</a> - The
--   response's http status code.
newCreateUnreferencedMergeCommitResponse :: Int -> CreateUnreferencedMergeCommitResponse

-- | <i>See:</i> <a>newListRepositoriesForApprovalRuleTemplate</a> smart
--   constructor.
data ListRepositoriesForApprovalRuleTemplate
ListRepositoriesForApprovalRuleTemplate' :: Maybe Text -> Maybe Int -> Text -> ListRepositoriesForApprovalRuleTemplate

-- | Create a value of <a>ListRepositoriesForApprovalRuleTemplate</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListRepositoriesForApprovalRuleTemplate'</a>,
--   <a>listRepositoriesForApprovalRuleTemplate_nextToken</a> - An
--   enumeration token that, when provided in a request, returns the next
--   batch of the results.
--   
--   <a>$sel:maxResults:ListRepositoriesForApprovalRuleTemplate'</a>,
--   <a>listRepositoriesForApprovalRuleTemplate_maxResults</a> - A
--   non-zero, non-negative integer used to limit the number of returned
--   results.
--   
--   
--   <a>$sel:approvalRuleTemplateName:ListRepositoriesForApprovalRuleTemplate'</a>,
--   <a>listRepositoriesForApprovalRuleTemplate_approvalRuleTemplateName</a>
--   - The name of the approval rule template for which you want to list
--   repositories that are associated with that template.
newListRepositoriesForApprovalRuleTemplate :: Text -> ListRepositoriesForApprovalRuleTemplate

-- | <i>See:</i> <a>newListRepositoriesForApprovalRuleTemplateResponse</a>
--   smart constructor.
data ListRepositoriesForApprovalRuleTemplateResponse
ListRepositoriesForApprovalRuleTemplateResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListRepositoriesForApprovalRuleTemplateResponse

-- | Create a value of
--   <a>ListRepositoriesForApprovalRuleTemplateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:repositoryNames:ListRepositoriesForApprovalRuleTemplateResponse'</a>,
--   <a>listRepositoriesForApprovalRuleTemplateResponse_repositoryNames</a>
--   - A list of repository names that are associated with the specified
--   approval rule template.
--   
--   <a>$sel:nextToken:ListRepositoriesForApprovalRuleTemplate'</a>,
--   <a>listRepositoriesForApprovalRuleTemplateResponse_nextToken</a> - An
--   enumeration token that allows the operation to batch the next results
--   of the operation.
--   
--   
--   <a>$sel:httpStatus:ListRepositoriesForApprovalRuleTemplateResponse'</a>,
--   <a>listRepositoriesForApprovalRuleTemplateResponse_httpStatus</a> -
--   The response's http status code.
newListRepositoriesForApprovalRuleTemplateResponse :: Int -> ListRepositoriesForApprovalRuleTemplateResponse

-- | Represents the input of a get repository operation.
--   
--   <i>See:</i> <a>newGetRepository</a> smart constructor.
data GetRepository
GetRepository' :: Text -> GetRepository

-- | Create a value of <a>GetRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:GetRepository'</a>,
--   <a>getRepository_repositoryName</a> - The name of the repository to
--   get information about.
newGetRepository :: Text -> GetRepository

-- | Represents the output of a get repository operation.
--   
--   <i>See:</i> <a>newGetRepositoryResponse</a> smart constructor.
data GetRepositoryResponse
GetRepositoryResponse' :: Maybe RepositoryMetadata -> Int -> GetRepositoryResponse

-- | Create a value of <a>GetRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryMetadata:GetRepositoryResponse'</a>,
--   <a>getRepositoryResponse_repositoryMetadata</a> - Information about
--   the repository.
--   
--   <a>$sel:httpStatus:GetRepositoryResponse'</a>,
--   <a>getRepositoryResponse_httpStatus</a> - The response's http status
--   code.
newGetRepositoryResponse :: Int -> GetRepositoryResponse

-- | <i>See:</i> <a>newBatchDescribeMergeConflicts</a> smart constructor.
data BatchDescribeMergeConflicts
BatchDescribeMergeConflicts' :: Maybe [Text] -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe Int -> Maybe Int -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> MergeOptionTypeEnum -> BatchDescribeMergeConflicts

-- | Create a value of <a>BatchDescribeMergeConflicts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePaths:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_filePaths</a> - The path of the target
--   files used to describe the conflicts. If not specified, the default is
--   all conflict files.
--   
--   <a>$sel:conflictDetailLevel:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:nextToken:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_nextToken</a> - An enumeration token
--   that, when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:maxConflictFiles:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_maxConflictFiles</a> - The maximum
--   number of files to include in the output.
--   
--   <a>$sel:maxMergeHunks:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_maxMergeHunks</a> - The maximum number
--   of merge hunks to include in the output.
--   
--   <a>$sel:conflictResolutionStrategy:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_conflictResolutionStrategy</a> -
--   Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
--   
--   <a>$sel:repositoryName:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_repositoryName</a> - The name of the
--   repository that contains the merge conflicts you want to review.
--   
--   <a>$sel:destinationCommitSpecifier:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_destinationCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:sourceCommitSpecifier:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_sourceCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:mergeOption:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflicts_mergeOption</a> - The merge option or
--   strategy you want to use to merge the code.
newBatchDescribeMergeConflicts :: Text -> Text -> Text -> MergeOptionTypeEnum -> BatchDescribeMergeConflicts

-- | <i>See:</i> <a>newBatchDescribeMergeConflictsResponse</a> smart
--   constructor.
data BatchDescribeMergeConflictsResponse
BatchDescribeMergeConflictsResponse' :: Maybe Text -> Maybe Text -> Maybe [BatchDescribeMergeConflictsError] -> Int -> [Conflict] -> Text -> Text -> BatchDescribeMergeConflictsResponse

-- | Create a value of <a>BatchDescribeMergeConflictsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseCommitId:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_baseCommitId</a> - The commit
--   ID of the merge base.
--   
--   <a>$sel:nextToken:BatchDescribeMergeConflicts'</a>,
--   <a>batchDescribeMergeConflictsResponse_nextToken</a> - An enumeration
--   token that can be used in a request to return the next batch of the
--   results.
--   
--   <a>$sel:errors:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_errors</a> - A list of any
--   errors returned while describing the merge conflicts for each file.
--   
--   <a>$sel:httpStatus:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:conflicts:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_conflicts</a> - A list of
--   conflicts for each file, including the conflict metadata and the hunks
--   of the differences between the files.
--   
--   <a>$sel:destinationCommitId:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_destinationCommitId</a> - The
--   commit ID of the destination commit specifier that was used in the
--   merge evaluation.
--   
--   <a>$sel:sourceCommitId:BatchDescribeMergeConflictsResponse'</a>,
--   <a>batchDescribeMergeConflictsResponse_sourceCommitId</a> - The commit
--   ID of the source commit specifier that was used in the merge
--   evaluation.
newBatchDescribeMergeConflictsResponse :: Int -> Text -> Text -> BatchDescribeMergeConflictsResponse

-- | <i>See:</i> <a>newDeletePullRequestApprovalRule</a> smart constructor.
data DeletePullRequestApprovalRule
DeletePullRequestApprovalRule' :: Text -> Text -> DeletePullRequestApprovalRule

-- | Create a value of <a>DeletePullRequestApprovalRule</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:DeletePullRequestApprovalRule'</a>,
--   <a>deletePullRequestApprovalRule_pullRequestId</a> - The
--   system-generated ID of the pull request that contains the approval
--   rule you want to delete.
--   
--   <a>$sel:approvalRuleName:DeletePullRequestApprovalRule'</a>,
--   <a>deletePullRequestApprovalRule_approvalRuleName</a> - The name of
--   the approval rule you want to delete.
newDeletePullRequestApprovalRule :: Text -> Text -> DeletePullRequestApprovalRule

-- | <i>See:</i> <a>newDeletePullRequestApprovalRuleResponse</a> smart
--   constructor.
data DeletePullRequestApprovalRuleResponse
DeletePullRequestApprovalRuleResponse' :: Int -> Text -> DeletePullRequestApprovalRuleResponse

-- | Create a value of <a>DeletePullRequestApprovalRuleResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeletePullRequestApprovalRuleResponse'</a>,
--   <a>deletePullRequestApprovalRuleResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:approvalRuleId:DeletePullRequestApprovalRuleResponse'</a>,
--   <a>deletePullRequestApprovalRuleResponse_approvalRuleId</a> - The ID
--   of the deleted approval rule.
--   
--   If the approval rule was deleted in an earlier API call, the response
--   is 200 OK without content.
newDeletePullRequestApprovalRuleResponse :: Int -> Text -> DeletePullRequestApprovalRuleResponse

-- | Represents the input of a get repository triggers operation.
--   
--   <i>See:</i> <a>newGetRepositoryTriggers</a> smart constructor.
data GetRepositoryTriggers
GetRepositoryTriggers' :: Text -> GetRepositoryTriggers

-- | Create a value of <a>GetRepositoryTriggers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:GetRepositoryTriggers'</a>,
--   <a>getRepositoryTriggers_repositoryName</a> - The name of the
--   repository for which the trigger is configured.
newGetRepositoryTriggers :: Text -> GetRepositoryTriggers

-- | Represents the output of a get repository triggers operation.
--   
--   <i>See:</i> <a>newGetRepositoryTriggersResponse</a> smart constructor.
data GetRepositoryTriggersResponse
GetRepositoryTriggersResponse' :: Maybe Text -> Maybe [RepositoryTrigger] -> Int -> GetRepositoryTriggersResponse

-- | Create a value of <a>GetRepositoryTriggersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationId:GetRepositoryTriggersResponse'</a>,
--   <a>getRepositoryTriggersResponse_configurationId</a> - The
--   system-generated unique ID for the trigger.
--   
--   <a>$sel:triggers:GetRepositoryTriggersResponse'</a>,
--   <a>getRepositoryTriggersResponse_triggers</a> - The JSON block of
--   configuration information for each trigger.
--   
--   <a>$sel:httpStatus:GetRepositoryTriggersResponse'</a>,
--   <a>getRepositoryTriggersResponse_httpStatus</a> - The response's http
--   status code.
newGetRepositoryTriggersResponse :: Int -> GetRepositoryTriggersResponse

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateName</a> smart
--   constructor.
data UpdateApprovalRuleTemplateName
UpdateApprovalRuleTemplateName' :: Text -> Text -> UpdateApprovalRuleTemplateName

-- | Create a value of <a>UpdateApprovalRuleTemplateName</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:oldApprovalRuleTemplateName:UpdateApprovalRuleTemplateName'</a>,
--   <a>updateApprovalRuleTemplateName_oldApprovalRuleTemplateName</a> -
--   The current name of the approval rule template.
--   
--   
--   <a>$sel:newApprovalRuleTemplateName':UpdateApprovalRuleTemplateName'</a>,
--   <a>updateApprovalRuleTemplateName_newApprovalRuleTemplateName</a> -
--   The new name you want to apply to the approval rule template.
newUpdateApprovalRuleTemplateName :: Text -> Text -> UpdateApprovalRuleTemplateName

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateNameResponse</a> smart
--   constructor.
data UpdateApprovalRuleTemplateNameResponse
UpdateApprovalRuleTemplateNameResponse' :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateNameResponse

-- | Create a value of <a>UpdateApprovalRuleTemplateNameResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApprovalRuleTemplateNameResponse'</a>,
--   <a>updateApprovalRuleTemplateNameResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateNameResponse'</a>,
--   <a>updateApprovalRuleTemplateNameResponse_approvalRuleTemplate</a> -
--   The structure and content of the updated approval rule template.
newUpdateApprovalRuleTemplateNameResponse :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateNameResponse

-- | <i>See:</i> <a>newPutFile</a> smart constructor.
data PutFile
PutFile' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Base64 -> Text -> PutFile

-- | Create a value of <a>PutFile</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:PutFile'</a>, <a>putFile_email</a> - An email address
--   for the person adding or updating the file.
--   
--   <a>$sel:fileMode:PutFile'</a>, <a>putFile_fileMode</a> - The file mode
--   permissions of the blob. Valid file mode permissions are listed here.
--   
--   <a>$sel:parentCommitId:PutFile'</a>, <a>putFile_parentCommitId</a> -
--   The full commit ID of the head commit in the branch where you want to
--   add or update the file. If this is an empty repository, no commit ID
--   is required. If this is not an empty repository, a commit ID is
--   required.
--   
--   The commit ID must match the ID of the head commit at the time of the
--   operation. Otherwise, an error occurs, and the file is not added or
--   updated.
--   
--   <a>$sel:name:PutFile'</a>, <a>putFile_name</a> - The name of the
--   person adding or updating the file. Although it is optional, a name
--   makes the commit history for your repository more useful.
--   
--   <a>$sel:commitMessage:PutFile'</a>, <a>putFile_commitMessage</a> - A
--   message about why this file was added or updated. Although it is
--   optional, a message makes the commit history for your repository more
--   useful.
--   
--   <a>$sel:repositoryName:PutFile'</a>, <a>putFile_repositoryName</a> -
--   The name of the repository where you want to add or update the file.
--   
--   <a>$sel:branchName:PutFile'</a>, <a>putFile_branchName</a> - The name
--   of the branch where you want to add or update the file. If this is an
--   empty repository, this branch is created.
--   
--   <a>$sel:fileContent:PutFile'</a>, <a>putFile_fileContent</a> - The
--   content of the file, in binary object format.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:filePath:PutFile'</a>, <a>putFile_filePath</a> - The name of
--   the file you want to add or update, including the relative path to the
--   file in the repository.
--   
--   If the path does not currently exist in the repository, the path is
--   created as part of adding the file.
newPutFile :: Text -> Text -> ByteString -> Text -> PutFile

-- | <i>See:</i> <a>newPutFileResponse</a> smart constructor.
data PutFileResponse
PutFileResponse' :: Int -> Text -> Text -> Text -> PutFileResponse

-- | Create a value of <a>PutFileResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutFileResponse'</a>,
--   <a>putFileResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:commitId:PutFileResponse'</a>, <a>putFileResponse_commitId</a>
--   - The full SHA ID of the commit that contains this file change.
--   
--   <a>$sel:blobId:PutFileResponse'</a>, <a>putFileResponse_blobId</a> -
--   The ID of the blob, which is its SHA-1 pointer.
--   
--   <a>$sel:treeId:PutFileResponse'</a>, <a>putFileResponse_treeId</a> -
--   The full SHA-1 pointer of the tree information for the commit that
--   contains this file change.
newPutFileResponse :: Int -> Text -> Text -> Text -> PutFileResponse

-- | <i>See:</i> <a>newDeleteFile</a> smart constructor.
data DeleteFile
DeleteFile' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> Text -> Text -> DeleteFile

-- | Create a value of <a>DeleteFile</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:DeleteFile'</a>, <a>deleteFile_email</a> - The email
--   address for the commit that deletes the file. If no email address is
--   specified, the email address is left blank.
--   
--   <a>$sel:name:DeleteFile'</a>, <a>deleteFile_name</a> - The name of the
--   author of the commit that deletes the file. If no name is specified,
--   the user's ARN is used as the author name and committer name.
--   
--   <a>$sel:commitMessage:DeleteFile'</a>, <a>deleteFile_commitMessage</a>
--   - The commit message you want to include as part of deleting the file.
--   Commit messages are limited to 256 KB. If no message is specified, a
--   default message is used.
--   
--   <a>$sel:keepEmptyFolders:DeleteFile'</a>,
--   <a>deleteFile_keepEmptyFolders</a> - If a file is the only object in
--   the folder or directory, specifies whether to delete the folder or
--   directory that contains the file. By default, empty folders are
--   deleted. This includes empty folders that are part of the directory
--   structure. For example, if the path to a file is dir1/dir2/dir3/dir4,
--   and dir2 and dir3 are empty, deleting the last file in dir4 also
--   deletes the empty folders dir4, dir3, and dir2.
--   
--   <a>$sel:repositoryName:DeleteFile'</a>,
--   <a>deleteFile_repositoryName</a> - The name of the repository that
--   contains the file to delete.
--   
--   <a>$sel:branchName:DeleteFile'</a>, <a>deleteFile_branchName</a> - The
--   name of the branch where the commit that deletes the file is made.
--   
--   <a>$sel:filePath:DeleteFile'</a>, <a>deleteFile_filePath</a> - The
--   fully qualified path to the file that to be deleted, including the
--   full name and extension of that file. For example, /examples/file.md
--   is a fully qualified path to a file named file.md in a folder named
--   examples.
--   
--   <a>$sel:parentCommitId:DeleteFile'</a>,
--   <a>deleteFile_parentCommitId</a> - The ID of the commit that is the
--   tip of the branch where you want to create the commit that deletes the
--   file. This must be the HEAD commit for the branch. The commit that
--   deletes the file is created from this commit ID.
newDeleteFile :: Text -> Text -> Text -> Text -> DeleteFile

-- | <i>See:</i> <a>newDeleteFileResponse</a> smart constructor.
data DeleteFileResponse
DeleteFileResponse' :: Int -> Text -> Text -> Text -> Text -> DeleteFileResponse

-- | Create a value of <a>DeleteFileResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteFileResponse'</a>,
--   <a>deleteFileResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:commitId:DeleteFileResponse'</a>,
--   <a>deleteFileResponse_commitId</a> - The full commit ID of the commit
--   that contains the change that deletes the file.
--   
--   <a>$sel:blobId:DeleteFileResponse'</a>,
--   <a>deleteFileResponse_blobId</a> - The blob ID removed from the tree
--   as part of deleting the file.
--   
--   <a>$sel:treeId:DeleteFileResponse'</a>,
--   <a>deleteFileResponse_treeId</a> - The full SHA-1 pointer of the tree
--   information for the commit that contains the delete file change.
--   
--   <a>$sel:filePath:DeleteFile'</a>, <a>deleteFileResponse_filePath</a> -
--   The fully qualified path to the file to be deleted, including the full
--   name and extension of that file.
newDeleteFileResponse :: Int -> Text -> Text -> Text -> Text -> DeleteFileResponse

-- | <i>See:</i> <a>newGetCommentsForComparedCommit</a> smart constructor.
data GetCommentsForComparedCommit
GetCommentsForComparedCommit' :: Maybe Text -> Maybe Text -> Maybe Int -> Text -> Text -> GetCommentsForComparedCommit

-- | Create a value of <a>GetCommentsForComparedCommit</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_nextToken</a> - An enumeration token
--   that when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:beforeCommitId:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_beforeCommitId</a> - To establish the
--   directionality of the comparison, the full commit ID of the before
--   commit.
--   
--   <a>$sel:maxResults:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_maxResults</a> - A non-zero,
--   non-negative integer used to limit the number of returned results. The
--   default is 100 comments, but you can configure up to 500.
--   
--   <a>$sel:repositoryName:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_repositoryName</a> - The name of the
--   repository where you want to compare commits.
--   
--   <a>$sel:afterCommitId:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommit_afterCommitId</a> - To establish the
--   directionality of the comparison, the full commit ID of the after
--   commit.
newGetCommentsForComparedCommit :: Text -> Text -> GetCommentsForComparedCommit

-- | <i>See:</i> <a>newGetCommentsForComparedCommitResponse</a> smart
--   constructor.
data GetCommentsForComparedCommitResponse
GetCommentsForComparedCommitResponse' :: Maybe [CommentsForComparedCommit] -> Maybe Text -> Int -> GetCommentsForComparedCommitResponse

-- | Create a value of <a>GetCommentsForComparedCommitResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:commentsForComparedCommitData:GetCommentsForComparedCommitResponse'</a>,
--   <a>getCommentsForComparedCommitResponse_commentsForComparedCommitData</a>
--   - A list of comment objects on the compared commit.
--   
--   <a>$sel:nextToken:GetCommentsForComparedCommit'</a>,
--   <a>getCommentsForComparedCommitResponse_nextToken</a> - An enumeration
--   token that can be used in a request to return the next batch of the
--   results.
--   
--   <a>$sel:httpStatus:GetCommentsForComparedCommitResponse'</a>,
--   <a>getCommentsForComparedCommitResponse_httpStatus</a> - The
--   response's http status code.
newGetCommentsForComparedCommitResponse :: Int -> GetCommentsForComparedCommitResponse

-- | <i>See:</i> <a>newGetMergeCommit</a> smart constructor.
data GetMergeCommit
GetMergeCommit' :: Maybe ConflictDetailLevelTypeEnum -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> GetMergeCommit

-- | Create a value of <a>GetMergeCommit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conflictDetailLevel:GetMergeCommit'</a>,
--   <a>getMergeCommit_conflictDetailLevel</a> - The level of conflict
--   detail to use. If unspecified, the default FILE_LEVEL is used, which
--   returns a not-mergeable result if the same file has differences in
--   both branches. If LINE_LEVEL is specified, a conflict is considered
--   not mergeable if the same file in both branches has differences on the
--   same line.
--   
--   <a>$sel:conflictResolutionStrategy:GetMergeCommit'</a>,
--   <a>getMergeCommit_conflictResolutionStrategy</a> - Specifies which
--   branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:repositoryName:GetMergeCommit'</a>,
--   <a>getMergeCommit_repositoryName</a> - The name of the repository that
--   contains the merge commit about which you want to get information.
--   
--   <a>$sel:sourceCommitSpecifier:GetMergeCommit'</a>,
--   <a>getMergeCommit_sourceCommitSpecifier</a> - The branch, tag, HEAD,
--   or other fully qualified reference used to identify a commit (for
--   example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:GetMergeCommit'</a>,
--   <a>getMergeCommit_destinationCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
newGetMergeCommit :: Text -> Text -> Text -> GetMergeCommit

-- | <i>See:</i> <a>newGetMergeCommitResponse</a> smart constructor.
data GetMergeCommitResponse
GetMergeCommitResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetMergeCommitResponse

-- | Create a value of <a>GetMergeCommitResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mergedCommitId:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_mergedCommitId</a> - The commit ID for the
--   merge commit created when the source branch was merged into the
--   destination branch. If the fast-forward merge strategy was used, there
--   is no merge commit.
--   
--   <a>$sel:destinationCommitId:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_destinationCommitId</a> - The commit ID of
--   the destination commit specifier that was used in the merge
--   evaluation.
--   
--   <a>$sel:baseCommitId:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_baseCommitId</a> - The commit ID of the
--   merge base.
--   
--   <a>$sel:sourceCommitId:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_sourceCommitId</a> - The commit ID of the
--   source commit specifier that was used in the merge evaluation.
--   
--   <a>$sel:httpStatus:GetMergeCommitResponse'</a>,
--   <a>getMergeCommitResponse_httpStatus</a> - The response's http status
--   code.
newGetMergeCommitResponse :: Int -> GetMergeCommitResponse

-- | Represents the input of a test repository triggers operation.
--   
--   <i>See:</i> <a>newTestRepositoryTriggers</a> smart constructor.
data TestRepositoryTriggers
TestRepositoryTriggers' :: Text -> [RepositoryTrigger] -> TestRepositoryTriggers

-- | Create a value of <a>TestRepositoryTriggers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:TestRepositoryTriggers'</a>,
--   <a>testRepositoryTriggers_repositoryName</a> - The name of the
--   repository in which to test the triggers.
--   
--   <a>$sel:triggers:TestRepositoryTriggers'</a>,
--   <a>testRepositoryTriggers_triggers</a> - The list of triggers to test.
newTestRepositoryTriggers :: Text -> TestRepositoryTriggers

-- | Represents the output of a test repository triggers operation.
--   
--   <i>See:</i> <a>newTestRepositoryTriggersResponse</a> smart
--   constructor.
data TestRepositoryTriggersResponse
TestRepositoryTriggersResponse' :: Maybe [RepositoryTriggerExecutionFailure] -> Maybe [Text] -> Int -> TestRepositoryTriggersResponse

-- | Create a value of <a>TestRepositoryTriggersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failedExecutions:TestRepositoryTriggersResponse'</a>,
--   <a>testRepositoryTriggersResponse_failedExecutions</a> - The list of
--   triggers that were not tested. This list provides the names of the
--   triggers that could not be tested, separated by commas.
--   
--   <a>$sel:successfulExecutions:TestRepositoryTriggersResponse'</a>,
--   <a>testRepositoryTriggersResponse_successfulExecutions</a> - The list
--   of triggers that were successfully tested. This list provides the
--   names of the triggers that were successfully tested, separated by
--   commas.
--   
--   <a>$sel:httpStatus:TestRepositoryTriggersResponse'</a>,
--   <a>testRepositoryTriggersResponse_httpStatus</a> - The response's http
--   status code.
newTestRepositoryTriggersResponse :: Int -> TestRepositoryTriggersResponse

-- | <i>See:</i> <a>newMergePullRequestBySquash</a> smart constructor.
data MergePullRequestBySquash
MergePullRequestBySquash' :: Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Maybe Text -> Text -> Text -> MergePullRequestBySquash

-- | Create a value of <a>MergePullRequestBySquash</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_email</a> - The email address of the
--   person merging the branches. This information is used in the commit
--   information for the merge.
--   
--   <a>$sel:authorName:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_authorName</a> - The name of the author
--   who created the commit. This information is used as both the author
--   and committer for the commit.
--   
--   <a>$sel:conflictDetailLevel:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_commitMessage</a> - The commit message to
--   include in the commit information for the merge.
--   
--   <a>$sel:conflictResolution:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_conflictResolution</a> - If AUTOMERGE is
--   the conflict resolution strategy, a list of inputs to use when
--   resolving conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_conflictResolutionStrategy</a> - Specifies
--   which branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:keepEmptyFolders:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_keepEmptyFolders</a> - If the commit
--   contains deletions, whether to keep a folder or folder structure if
--   the changes leave the folders empty. If true, a .gitkeep file is
--   created for empty folders. The default is false.
--   
--   <a>$sel:sourceCommitId:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_sourceCommitId</a> - The full commit ID of
--   the original or updated commit in the pull request source branch. Pass
--   this value if you want an exception thrown if the current commit ID of
--   the tip of the source branch does not match this commit ID.
--   
--   <a>$sel:pullRequestId:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:repositoryName:MergePullRequestBySquash'</a>,
--   <a>mergePullRequestBySquash_repositoryName</a> - The name of the
--   repository where the pull request was created.
newMergePullRequestBySquash :: Text -> Text -> MergePullRequestBySquash

-- | <i>See:</i> <a>newMergePullRequestBySquashResponse</a> smart
--   constructor.
data MergePullRequestBySquashResponse
MergePullRequestBySquashResponse' :: Maybe PullRequest -> Int -> MergePullRequestBySquashResponse

-- | Create a value of <a>MergePullRequestBySquashResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequest:MergePullRequestBySquashResponse'</a>,
--   <a>mergePullRequestBySquashResponse_pullRequest</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:MergePullRequestBySquashResponse'</a>,
--   <a>mergePullRequestBySquashResponse_httpStatus</a> - The response's
--   http status code.
newMergePullRequestBySquashResponse :: Int -> MergePullRequestBySquashResponse

-- | <i>See:</i> <a>newUpdateComment</a> smart constructor.
data UpdateComment
UpdateComment' :: Text -> Text -> UpdateComment

-- | Create a value of <a>UpdateComment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commentId:UpdateComment'</a>, <a>updateComment_commentId</a> -
--   The system-generated ID of the comment you want to update. To get this
--   ID, use GetCommentsForComparedCommit or GetCommentsForPullRequest.
--   
--   <a>$sel:content:UpdateComment'</a>, <a>updateComment_content</a> - The
--   updated content to replace the existing content of the comment.
newUpdateComment :: Text -> Text -> UpdateComment

-- | <i>See:</i> <a>newUpdateCommentResponse</a> smart constructor.
data UpdateCommentResponse
UpdateCommentResponse' :: Maybe Comment -> Int -> UpdateCommentResponse

-- | Create a value of <a>UpdateCommentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:UpdateCommentResponse'</a>,
--   <a>updateCommentResponse_comment</a> - Information about the updated
--   comment.
--   
--   <a>$sel:httpStatus:UpdateCommentResponse'</a>,
--   <a>updateCommentResponse_httpStatus</a> - The response's http status
--   code.
newUpdateCommentResponse :: Int -> UpdateCommentResponse

-- | <i>See:</i> <a>newPostCommentForComparedCommit</a> smart constructor.
data PostCommentForComparedCommit
PostCommentForComparedCommit' :: Maybe Location -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> PostCommentForComparedCommit

-- | Create a value of <a>PostCommentForComparedCommit</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:location:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_location</a> - The location of the
--   comparison where you want to comment.
--   
--   <a>$sel:beforeCommitId:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_beforeCommitId</a> - To establish the
--   directionality of the comparison, the full commit ID of the before
--   commit. Required for commenting on any commit unless that commit is
--   the initial commit.
--   
--   <a>$sel:clientRequestToken:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_clientRequestToken</a> - A unique,
--   client-generated idempotency token that, when provided in a request,
--   ensures the request cannot be repeated with a changed parameter. If a
--   request is received with the same parameters and a token is included,
--   the request returns information about the initial request that used
--   that token.
--   
--   <a>$sel:repositoryName:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_repositoryName</a> - The name of the
--   repository where you want to post a comment on the comparison between
--   commits.
--   
--   <a>$sel:afterCommitId:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_afterCommitId</a> - To establish the
--   directionality of the comparison, the full commit ID of the after
--   commit.
--   
--   <a>$sel:content:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommit_content</a> - The content of the
--   comment you want to make.
newPostCommentForComparedCommit :: Text -> Text -> Text -> PostCommentForComparedCommit

-- | <i>See:</i> <a>newPostCommentForComparedCommitResponse</a> smart
--   constructor.
data PostCommentForComparedCommitResponse
PostCommentForComparedCommitResponse' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Comment -> Int -> PostCommentForComparedCommitResponse

-- | Create a value of <a>PostCommentForComparedCommitResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:PostCommentForComparedCommitResponse'</a>,
--   <a>postCommentForComparedCommitResponse_beforeBlobId</a> - In the
--   directionality you established, the blob ID of the before blob.
--   
--   <a>$sel:location:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommitResponse_location</a> - The location of
--   the comment in the comparison between the two commits.
--   
--   <a>$sel:afterCommitId:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommitResponse_afterCommitId</a> - In the
--   directionality you established, the full commit ID of the after
--   commit.
--   
--   <a>$sel:afterBlobId:PostCommentForComparedCommitResponse'</a>,
--   <a>postCommentForComparedCommitResponse_afterBlobId</a> - In the
--   directionality you established, the blob ID of the after blob.
--   
--   <a>$sel:beforeCommitId:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommitResponse_beforeCommitId</a> - In the
--   directionality you established, the full commit ID of the before
--   commit.
--   
--   <a>$sel:repositoryName:PostCommentForComparedCommit'</a>,
--   <a>postCommentForComparedCommitResponse_repositoryName</a> - The name
--   of the repository where you posted a comment on the comparison between
--   commits.
--   
--   <a>$sel:comment:PostCommentForComparedCommitResponse'</a>,
--   <a>postCommentForComparedCommitResponse_comment</a> - The content of
--   the comment you posted.
--   
--   <a>$sel:httpStatus:PostCommentForComparedCommitResponse'</a>,
--   <a>postCommentForComparedCommitResponse_httpStatus</a> - The
--   response's http status code.
newPostCommentForComparedCommitResponse :: Int -> PostCommentForComparedCommitResponse

-- | <i>See:</i> <a>newMergeBranchesByFastForward</a> smart constructor.
data MergeBranchesByFastForward
MergeBranchesByFastForward' :: Maybe Text -> Text -> Text -> Text -> MergeBranchesByFastForward

-- | Create a value of <a>MergeBranchesByFastForward</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetBranch:MergeBranchesByFastForward'</a>,
--   <a>mergeBranchesByFastForward_targetBranch</a> - The branch where the
--   merge is applied.
--   
--   <a>$sel:repositoryName:MergeBranchesByFastForward'</a>,
--   <a>mergeBranchesByFastForward_repositoryName</a> - The name of the
--   repository where you want to merge two branches.
--   
--   <a>$sel:sourceCommitSpecifier:MergeBranchesByFastForward'</a>,
--   <a>mergeBranchesByFastForward_sourceCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:MergeBranchesByFastForward'</a>,
--   <a>mergeBranchesByFastForward_destinationCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
newMergeBranchesByFastForward :: Text -> Text -> Text -> MergeBranchesByFastForward

-- | <i>See:</i> <a>newMergeBranchesByFastForwardResponse</a> smart
--   constructor.
data MergeBranchesByFastForwardResponse
MergeBranchesByFastForwardResponse' :: Maybe Text -> Maybe Text -> Int -> MergeBranchesByFastForwardResponse

-- | Create a value of <a>MergeBranchesByFastForwardResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:MergeBranchesByFastForwardResponse'</a>,
--   <a>mergeBranchesByFastForwardResponse_commitId</a> - The commit ID of
--   the merge in the destination or target branch.
--   
--   <a>$sel:treeId:MergeBranchesByFastForwardResponse'</a>,
--   <a>mergeBranchesByFastForwardResponse_treeId</a> - The tree ID of the
--   merge in the destination or target branch.
--   
--   <a>$sel:httpStatus:MergeBranchesByFastForwardResponse'</a>,
--   <a>mergeBranchesByFastForwardResponse_httpStatus</a> - The response's
--   http status code.
newMergeBranchesByFastForwardResponse :: Int -> MergeBranchesByFastForwardResponse

-- | <i>See:</i> <a>newUpdatePullRequestTitle</a> smart constructor.
data UpdatePullRequestTitle
UpdatePullRequestTitle' :: Text -> Text -> UpdatePullRequestTitle

-- | Create a value of <a>UpdatePullRequestTitle</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:UpdatePullRequestTitle'</a>,
--   <a>updatePullRequestTitle_pullRequestId</a> - The system-generated ID
--   of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:title:UpdatePullRequestTitle'</a>,
--   <a>updatePullRequestTitle_title</a> - The updated title of the pull
--   request. This replaces the existing title.
newUpdatePullRequestTitle :: Text -> Text -> UpdatePullRequestTitle

-- | <i>See:</i> <a>newUpdatePullRequestTitleResponse</a> smart
--   constructor.
data UpdatePullRequestTitleResponse
UpdatePullRequestTitleResponse' :: Int -> PullRequest -> UpdatePullRequestTitleResponse

-- | Create a value of <a>UpdatePullRequestTitleResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePullRequestTitleResponse'</a>,
--   <a>updatePullRequestTitleResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:pullRequest:UpdatePullRequestTitleResponse'</a>,
--   <a>updatePullRequestTitleResponse_pullRequest</a> - Information about
--   the updated pull request.
newUpdatePullRequestTitleResponse :: Int -> PullRequest -> UpdatePullRequestTitleResponse

-- | <i>See:</i>
--   <a>newBatchDisassociateApprovalRuleTemplateFromRepositories</a> smart
--   constructor.
data BatchDisassociateApprovalRuleTemplateFromRepositories
BatchDisassociateApprovalRuleTemplateFromRepositories' :: Text -> [Text] -> BatchDisassociateApprovalRuleTemplateFromRepositories

-- | Create a value of
--   <a>BatchDisassociateApprovalRuleTemplateFromRepositories</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:BatchDisassociateApprovalRuleTemplateFromRepositories'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositories_approvalRuleTemplateName</a>
--   - The name of the template that you want to disassociate from one or
--   more repositories.
--   
--   
--   <a>$sel:repositoryNames:BatchDisassociateApprovalRuleTemplateFromRepositories'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositories_repositoryNames</a>
--   - The repository names that you want to disassociate from the approval
--   rule template.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
newBatchDisassociateApprovalRuleTemplateFromRepositories :: Text -> BatchDisassociateApprovalRuleTemplateFromRepositories

-- | <i>See:</i>
--   <a>newBatchDisassociateApprovalRuleTemplateFromRepositoriesResponse</a>
--   smart constructor.
data BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse
BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse' :: Int -> [Text] -> [BatchDisassociateApprovalRuleTemplateFromRepositoriesError] -> BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse

-- | Create a value of
--   <a>BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_httpStatus</a>
--   - The response's http status code.
--   
--   
--   <a>$sel:disassociatedRepositoryNames:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_disassociatedRepositoryNames</a>
--   - A list of repository names that have had their association with the
--   template removed.
--   
--   
--   <a>$sel:errors:BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesResponse_errors</a>
--   - A list of any errors that might have occurred while attempting to
--   remove the association between the template and the repositories.
newBatchDisassociateApprovalRuleTemplateFromRepositoriesResponse :: Int -> BatchDisassociateApprovalRuleTemplateFromRepositoriesResponse

-- | <i>See:</i> <a>newUpdatePullRequestApprovalRuleContent</a> smart
--   constructor.
data UpdatePullRequestApprovalRuleContent
UpdatePullRequestApprovalRuleContent' :: Maybe Text -> Text -> Text -> Text -> UpdatePullRequestApprovalRuleContent

-- | Create a value of <a>UpdatePullRequestApprovalRuleContent</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:existingRuleContentSha256:UpdatePullRequestApprovalRuleContent'</a>,
--   <a>updatePullRequestApprovalRuleContent_existingRuleContentSha256</a>
--   - The SHA-256 hash signature for the content of the approval rule. You
--   can retrieve this information by using GetPullRequest.
--   
--   <a>$sel:pullRequestId:UpdatePullRequestApprovalRuleContent'</a>,
--   <a>updatePullRequestApprovalRuleContent_pullRequestId</a> - The
--   system-generated ID of the pull request.
--   
--   <a>$sel:approvalRuleName:UpdatePullRequestApprovalRuleContent'</a>,
--   <a>updatePullRequestApprovalRuleContent_approvalRuleName</a> - The
--   name of the approval rule you want to update.
--   
--   <a>$sel:newRuleContent':UpdatePullRequestApprovalRuleContent'</a>,
--   <a>updatePullRequestApprovalRuleContent_newRuleContent</a> - The
--   updated content for the approval rule.
--   
--   When you update the content of the approval rule, you can specify
--   approvers in an approval pool in one of two ways:
--   
--   <ul>
--   <li><b>CodeCommitApprovers</b>: This option only requires an AWS
--   account and a resource. It can be used for both IAM users and
--   federated access users whose name matches the provided resource name.
--   This is a very powerful option that offers a great deal of
--   flexibility. For example, if you specify the AWS account
--   <i>123456789012</i> and <i>Mary_Major</i>, all of the following are
--   counted as approvals coming from that user:<ul><li>An IAM user in the
--   account
--   (arn:aws:iam::<i>123456789012</i>:user/<i>Mary_Major</i>)</li><li>A
--   federated user identified in IAM as Mary_Major
--   (arn:aws:sts::<i>123456789012</i>:federated-user/<i>Mary_Major</i>)</li></ul>This
--   option does not recognize an active session of someone assuming the
--   role of CodeCommitReview with a role session name of <i>Mary_Major</i>
--   (arn:aws:sts::<i>123456789012</i>:assumed-role/CodeCommitReview/<i>Mary_Major</i>)
--   unless you include a wildcard (*Mary_Major).</li>
--   <li><b>Fully qualified ARN</b>: This option allows you to specify the
--   fully qualified Amazon Resource Name (ARN) of the IAM user or
--   role.</li>
--   </ul>
--   
--   For more information about IAM ARNs, wildcards, and formats, see
--   <a>IAM Identifiers</a> in the <i>IAM User Guide</i>.
newUpdatePullRequestApprovalRuleContent :: Text -> Text -> Text -> UpdatePullRequestApprovalRuleContent

-- | <i>See:</i> <a>newUpdatePullRequestApprovalRuleContentResponse</a>
--   smart constructor.
data UpdatePullRequestApprovalRuleContentResponse
UpdatePullRequestApprovalRuleContentResponse' :: Int -> ApprovalRule -> UpdatePullRequestApprovalRuleContentResponse

-- | Create a value of <a>UpdatePullRequestApprovalRuleContentResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePullRequestApprovalRuleContentResponse'</a>,
--   <a>updatePullRequestApprovalRuleContentResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:approvalRule:UpdatePullRequestApprovalRuleContentResponse'</a>,
--   <a>updatePullRequestApprovalRuleContentResponse_approvalRule</a> -
--   Information about the updated approval rule.
newUpdatePullRequestApprovalRuleContentResponse :: Int -> ApprovalRule -> UpdatePullRequestApprovalRuleContentResponse

-- | Represents the input of a get blob operation.
--   
--   <i>See:</i> <a>newGetBlob</a> smart constructor.
data GetBlob
GetBlob' :: Text -> Text -> GetBlob

-- | Create a value of <a>GetBlob</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:GetBlob'</a>, <a>getBlob_repositoryName</a> -
--   The name of the repository that contains the blob.
--   
--   <a>$sel:blobId:GetBlob'</a>, <a>getBlob_blobId</a> - The ID of the
--   blob, which is its SHA-1 pointer.
newGetBlob :: Text -> Text -> GetBlob

-- | Represents the output of a get blob operation.
--   
--   <i>See:</i> <a>newGetBlobResponse</a> smart constructor.
data GetBlobResponse
GetBlobResponse' :: Int -> Base64 -> GetBlobResponse

-- | Create a value of <a>GetBlobResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetBlobResponse'</a>,
--   <a>getBlobResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:content:GetBlobResponse'</a>, <a>getBlobResponse_content</a> -
--   The content of the blob, usually a file.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newGetBlobResponse :: Int -> ByteString -> GetBlobResponse

-- | <i>See:</i> <a>newAssociateApprovalRuleTemplateWithRepository</a>
--   smart constructor.
data AssociateApprovalRuleTemplateWithRepository
AssociateApprovalRuleTemplateWithRepository' :: Text -> Text -> AssociateApprovalRuleTemplateWithRepository

-- | Create a value of <a>AssociateApprovalRuleTemplateWithRepository</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:AssociateApprovalRuleTemplateWithRepository'</a>,
--   <a>associateApprovalRuleTemplateWithRepository_approvalRuleTemplateName</a>
--   - The name for the approval rule template.
--   
--   
--   <a>$sel:repositoryName:AssociateApprovalRuleTemplateWithRepository'</a>,
--   <a>associateApprovalRuleTemplateWithRepository_repositoryName</a> -
--   The name of the repository that you want to associate with the
--   template.
newAssociateApprovalRuleTemplateWithRepository :: Text -> Text -> AssociateApprovalRuleTemplateWithRepository

-- | <i>See:</i>
--   <a>newAssociateApprovalRuleTemplateWithRepositoryResponse</a> smart
--   constructor.
data AssociateApprovalRuleTemplateWithRepositoryResponse
AssociateApprovalRuleTemplateWithRepositoryResponse' :: AssociateApprovalRuleTemplateWithRepositoryResponse

-- | Create a value of
--   <a>AssociateApprovalRuleTemplateWithRepositoryResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newAssociateApprovalRuleTemplateWithRepositoryResponse :: AssociateApprovalRuleTemplateWithRepositoryResponse

-- | Represents the input of a put repository triggers operation.
--   
--   <i>See:</i> <a>newPutRepositoryTriggers</a> smart constructor.
data PutRepositoryTriggers
PutRepositoryTriggers' :: Text -> [RepositoryTrigger] -> PutRepositoryTriggers

-- | Create a value of <a>PutRepositoryTriggers</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:PutRepositoryTriggers'</a>,
--   <a>putRepositoryTriggers_repositoryName</a> - The name of the
--   repository where you want to create or update the trigger.
--   
--   <a>$sel:triggers:PutRepositoryTriggers'</a>,
--   <a>putRepositoryTriggers_triggers</a> - The JSON block of
--   configuration information for each trigger.
newPutRepositoryTriggers :: Text -> PutRepositoryTriggers

-- | Represents the output of a put repository triggers operation.
--   
--   <i>See:</i> <a>newPutRepositoryTriggersResponse</a> smart constructor.
data PutRepositoryTriggersResponse
PutRepositoryTriggersResponse' :: Maybe Text -> Int -> PutRepositoryTriggersResponse

-- | Create a value of <a>PutRepositoryTriggersResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:configurationId:PutRepositoryTriggersResponse'</a>,
--   <a>putRepositoryTriggersResponse_configurationId</a> - The
--   system-generated unique ID for the create or update operation.
--   
--   <a>$sel:httpStatus:PutRepositoryTriggersResponse'</a>,
--   <a>putRepositoryTriggersResponse_httpStatus</a> - The response's http
--   status code.
newPutRepositoryTriggersResponse :: Int -> PutRepositoryTriggersResponse

-- | <i>See:</i> <a>newListApprovalRuleTemplates</a> smart constructor.
data ListApprovalRuleTemplates
ListApprovalRuleTemplates' :: Maybe Text -> Maybe Int -> ListApprovalRuleTemplates

-- | Create a value of <a>ListApprovalRuleTemplates</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApprovalRuleTemplates'</a>,
--   <a>listApprovalRuleTemplates_nextToken</a> - An enumeration token
--   that, when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:maxResults:ListApprovalRuleTemplates'</a>,
--   <a>listApprovalRuleTemplates_maxResults</a> - A non-zero, non-negative
--   integer used to limit the number of returned results.
newListApprovalRuleTemplates :: ListApprovalRuleTemplates

-- | <i>See:</i> <a>newListApprovalRuleTemplatesResponse</a> smart
--   constructor.
data ListApprovalRuleTemplatesResponse
ListApprovalRuleTemplatesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListApprovalRuleTemplatesResponse

-- | Create a value of <a>ListApprovalRuleTemplatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListApprovalRuleTemplates'</a>,
--   <a>listApprovalRuleTemplatesResponse_nextToken</a> - An enumeration
--   token that allows the operation to batch the next results of the
--   operation.
--   
--   
--   <a>$sel:approvalRuleTemplateNames:ListApprovalRuleTemplatesResponse'</a>,
--   <a>listApprovalRuleTemplatesResponse_approvalRuleTemplateNames</a> -
--   The names of all the approval rule templates found in the AWS Region
--   for your AWS account.
--   
--   <a>$sel:httpStatus:ListApprovalRuleTemplatesResponse'</a>,
--   <a>listApprovalRuleTemplatesResponse_httpStatus</a> - The response's
--   http status code.
newListApprovalRuleTemplatesResponse :: Int -> ListApprovalRuleTemplatesResponse

-- | <i>See:</i> <a>newDescribeMergeConflicts</a> smart constructor.
data DescribeMergeConflicts
DescribeMergeConflicts' :: Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe Int -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> MergeOptionTypeEnum -> Text -> DescribeMergeConflicts

-- | Create a value of <a>DescribeMergeConflicts</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conflictDetailLevel:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:nextToken:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_nextToken</a> - An enumeration token that,
--   when provided in a request, returns the next batch of the results.
--   
--   <a>$sel:maxMergeHunks:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_maxMergeHunks</a> - The maximum number of
--   merge hunks to include in the output.
--   
--   <a>$sel:conflictResolutionStrategy:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_conflictResolutionStrategy</a> - Specifies
--   which branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:repositoryName:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_repositoryName</a> - The name of the
--   repository where you want to get information about a merge conflict.
--   
--   <a>$sel:destinationCommitSpecifier:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_destinationCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:sourceCommitSpecifier:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_sourceCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
--   
--   <a>$sel:mergeOption:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_mergeOption</a> - The merge option or
--   strategy you want to use to merge the code.
--   
--   <a>$sel:filePath:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflicts_filePath</a> - The path of the target files
--   used to describe the conflicts.
newDescribeMergeConflicts :: Text -> Text -> Text -> MergeOptionTypeEnum -> Text -> DescribeMergeConflicts

-- | <i>See:</i> <a>newDescribeMergeConflictsResponse</a> smart
--   constructor.
data DescribeMergeConflictsResponse
DescribeMergeConflictsResponse' :: Maybe Text -> Maybe Text -> Int -> ConflictMetadata -> [MergeHunk] -> Text -> Text -> DescribeMergeConflictsResponse

-- | Create a value of <a>DescribeMergeConflictsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseCommitId:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_baseCommitId</a> - The commit ID of
--   the merge base.
--   
--   <a>$sel:nextToken:DescribeMergeConflicts'</a>,
--   <a>describeMergeConflictsResponse_nextToken</a> - An enumeration token
--   that can be used in a request to return the next batch of the results.
--   
--   <a>$sel:httpStatus:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:conflictMetadata:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_conflictMetadata</a> - Contains
--   metadata about the conflicts found in the merge.
--   
--   <a>$sel:mergeHunks:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_mergeHunks</a> - A list of merge
--   hunks of the differences between the files or lines.
--   
--   <a>$sel:destinationCommitId:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_destinationCommitId</a> - The commit
--   ID of the destination commit specifier that was used in the merge
--   evaluation.
--   
--   <a>$sel:sourceCommitId:DescribeMergeConflictsResponse'</a>,
--   <a>describeMergeConflictsResponse_sourceCommitId</a> - The commit ID
--   of the source commit specifier that was used in the merge evaluation.
newDescribeMergeConflictsResponse :: Int -> ConflictMetadata -> Text -> Text -> DescribeMergeConflictsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The key-value
--   pair to use when tagging this repository.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newMergeBranchesByThreeWay</a> smart constructor.
data MergeBranchesByThreeWay
MergeBranchesByThreeWay' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Text -> Text -> Text -> MergeBranchesByThreeWay

-- | Create a value of <a>MergeBranchesByThreeWay</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_email</a> - The email address of the person
--   merging the branches. This information is used in the commit
--   information for the merge.
--   
--   <a>$sel:authorName:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_authorName</a> - The name of the author who
--   created the commit. This information is used as both the author and
--   committer for the commit.
--   
--   <a>$sel:targetBranch:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_targetBranch</a> - The branch where the
--   merge is applied.
--   
--   <a>$sel:conflictDetailLevel:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_commitMessage</a> - The commit message to
--   include in the commit information for the merge.
--   
--   <a>$sel:conflictResolution:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_conflictResolution</a> - If AUTOMERGE is
--   the conflict resolution strategy, a list of inputs to use when
--   resolving conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_conflictResolutionStrategy</a> - Specifies
--   which branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:keepEmptyFolders:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_keepEmptyFolders</a> - If the commit
--   contains deletions, whether to keep a folder or folder structure if
--   the changes leave the folders empty. If true, a .gitkeep file is
--   created for empty folders. The default is false.
--   
--   <a>$sel:repositoryName:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_repositoryName</a> - The name of the
--   repository where you want to merge two branches.
--   
--   <a>$sel:sourceCommitSpecifier:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_sourceCommitSpecifier</a> - The branch,
--   tag, HEAD, or other fully qualified reference used to identify a
--   commit (for example, a branch name or a full commit ID).
--   
--   <a>$sel:destinationCommitSpecifier:MergeBranchesByThreeWay'</a>,
--   <a>mergeBranchesByThreeWay_destinationCommitSpecifier</a> - The
--   branch, tag, HEAD, or other fully qualified reference used to identify
--   a commit (for example, a branch name or a full commit ID).
newMergeBranchesByThreeWay :: Text -> Text -> Text -> MergeBranchesByThreeWay

-- | <i>See:</i> <a>newMergeBranchesByThreeWayResponse</a> smart
--   constructor.
data MergeBranchesByThreeWayResponse
MergeBranchesByThreeWayResponse' :: Maybe Text -> Maybe Text -> Int -> MergeBranchesByThreeWayResponse

-- | Create a value of <a>MergeBranchesByThreeWayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:MergeBranchesByThreeWayResponse'</a>,
--   <a>mergeBranchesByThreeWayResponse_commitId</a> - The commit ID of the
--   merge in the destination or target branch.
--   
--   <a>$sel:treeId:MergeBranchesByThreeWayResponse'</a>,
--   <a>mergeBranchesByThreeWayResponse_treeId</a> - The tree ID of the
--   merge in the destination or target branch.
--   
--   <a>$sel:httpStatus:MergeBranchesByThreeWayResponse'</a>,
--   <a>mergeBranchesByThreeWayResponse_httpStatus</a> - The response's
--   http status code.
newMergeBranchesByThreeWayResponse :: Int -> MergeBranchesByThreeWayResponse

-- | <i>See:</i> <a>newGetFile</a> smart constructor.
data GetFile
GetFile' :: Maybe Text -> Text -> Text -> GetFile

-- | Create a value of <a>GetFile</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitSpecifier:GetFile'</a>, <a>getFile_commitSpecifier</a> -
--   The fully quaified reference that identifies the commit that contains
--   the file. For example, you can specify a full commit ID, a tag, a
--   branch name, or a reference such as refs/heads/master. If none is
--   provided, the head commit is used.
--   
--   <a>$sel:repositoryName:GetFile'</a>, <a>getFile_repositoryName</a> -
--   The name of the repository that contains the file.
--   
--   <a>$sel:filePath:GetFile'</a>, <a>getFile_filePath</a> - The fully
--   qualified path to the file, including the full name and extension of
--   the file. For example, /examples/file.md is the fully qualified path
--   to a file named file.md in a folder named examples.
newGetFile :: Text -> Text -> GetFile

-- | <i>See:</i> <a>newGetFileResponse</a> smart constructor.
data GetFileResponse
GetFileResponse' :: Int -> Text -> Text -> Text -> FileModeTypeEnum -> Integer -> Base64 -> GetFileResponse

-- | Create a value of <a>GetFileResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetFileResponse'</a>,
--   <a>getFileResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:commitId:GetFileResponse'</a>, <a>getFileResponse_commitId</a>
--   - The full commit ID of the commit that contains the content returned
--   by GetFile.
--   
--   <a>$sel:blobId:GetFileResponse'</a>, <a>getFileResponse_blobId</a> -
--   The blob ID of the object that represents the file content.
--   
--   <a>$sel:filePath:GetFile'</a>, <a>getFileResponse_filePath</a> - The
--   fully qualified path to the specified file. Returns the name and
--   extension of the file.
--   
--   <a>$sel:fileMode:GetFileResponse'</a>, <a>getFileResponse_fileMode</a>
--   - The extrapolated file mode permissions of the blob. Valid values
--   include strings such as EXECUTABLE and not numeric values.
--   
--   The file mode permissions returned by this API are not the standard
--   file mode permission values, such as 100644, but rather extrapolated
--   values. See the supported return values.
--   
--   <a>$sel:fileSize:GetFileResponse'</a>, <a>getFileResponse_fileSize</a>
--   - The size of the contents of the file, in bytes.
--   
--   <a>$sel:fileContent:GetFileResponse'</a>,
--   <a>getFileResponse_fileContent</a> - The base-64 encoded binary data
--   object that represents the content of the file.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newGetFileResponse :: Int -> Text -> Text -> Text -> FileModeTypeEnum -> Integer -> ByteString -> GetFileResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to which you want to remove tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag key for each tag that you want to remove from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newGetMergeConflicts</a> smart constructor.
data GetMergeConflicts
GetMergeConflicts' :: Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe Int -> Maybe ConflictResolutionStrategyTypeEnum -> Text -> Text -> Text -> MergeOptionTypeEnum -> GetMergeConflicts

-- | Create a value of <a>GetMergeConflicts</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:conflictDetailLevel:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_conflictDetailLevel</a> - The level of conflict
--   detail to use. If unspecified, the default FILE_LEVEL is used, which
--   returns a not-mergeable result if the same file has differences in
--   both branches. If LINE_LEVEL is specified, a conflict is considered
--   not mergeable if the same file in both branches has differences on the
--   same line.
--   
--   <a>$sel:nextToken:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_nextToken</a> - An enumeration token that, when
--   provided in a request, returns the next batch of the results.
--   
--   <a>$sel:maxConflictFiles:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_maxConflictFiles</a> - The maximum number of
--   files to include in the output.
--   
--   <a>$sel:conflictResolutionStrategy:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_conflictResolutionStrategy</a> - Specifies which
--   branch to use when resolving conflicts, or whether to attempt
--   automatically merging two versions of a file. The default is NONE,
--   which requires any conflicts to be resolved manually before the merge
--   operation is successful.
--   
--   <a>$sel:repositoryName:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_repositoryName</a> - The name of the repository
--   where the pull request was created.
--   
--   <a>$sel:destinationCommitSpecifier:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_destinationCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
--   
--   <a>$sel:sourceCommitSpecifier:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_sourceCommitSpecifier</a> - The branch, tag,
--   HEAD, or other fully qualified reference used to identify a commit
--   (for example, a branch name or a full commit ID).
--   
--   <a>$sel:mergeOption:GetMergeConflicts'</a>,
--   <a>getMergeConflicts_mergeOption</a> - The merge option or strategy
--   you want to use to merge the code.
newGetMergeConflicts :: Text -> Text -> Text -> MergeOptionTypeEnum -> GetMergeConflicts

-- | <i>See:</i> <a>newGetMergeConflictsResponse</a> smart constructor.
data GetMergeConflictsResponse
GetMergeConflictsResponse' :: Maybe Text -> Maybe Text -> Int -> Bool -> Text -> Text -> [ConflictMetadata] -> GetMergeConflictsResponse

-- | Create a value of <a>GetMergeConflictsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:baseCommitId:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_baseCommitId</a> - The commit ID of the
--   merge base.
--   
--   <a>$sel:nextToken:GetMergeConflicts'</a>,
--   <a>getMergeConflictsResponse_nextToken</a> - An enumeration token that
--   can be used in a request to return the next batch of the results.
--   
--   <a>$sel:httpStatus:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:mergeable:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_mergeable</a> - A Boolean value that
--   indicates whether the code is mergeable by the specified merge option.
--   
--   <a>$sel:destinationCommitId:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_destinationCommitId</a> - The commit ID
--   of the destination commit specifier that was used in the merge
--   evaluation.
--   
--   <a>$sel:sourceCommitId:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_sourceCommitId</a> - The commit ID of the
--   source commit specifier that was used in the merge evaluation.
--   
--   <a>$sel:conflictMetadataList:GetMergeConflictsResponse'</a>,
--   <a>getMergeConflictsResponse_conflictMetadataList</a> - A list of
--   metadata for any conflicting files. If the specified merge strategy is
--   FAST_FORWARD_MERGE, this list is always empty.
newGetMergeConflictsResponse :: Int -> Bool -> Text -> Text -> GetMergeConflictsResponse

-- | Represents the input of a delete repository operation.
--   
--   <i>See:</i> <a>newDeleteRepository</a> smart constructor.
data DeleteRepository
DeleteRepository' :: Text -> DeleteRepository

-- | Create a value of <a>DeleteRepository</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryName:DeleteRepository'</a>,
--   <a>deleteRepository_repositoryName</a> - The name of the repository to
--   delete.
newDeleteRepository :: Text -> DeleteRepository

-- | Represents the output of a delete repository operation.
--   
--   <i>See:</i> <a>newDeleteRepositoryResponse</a> smart constructor.
data DeleteRepositoryResponse
DeleteRepositoryResponse' :: Maybe Text -> Int -> DeleteRepositoryResponse

-- | Create a value of <a>DeleteRepositoryResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryId:DeleteRepositoryResponse'</a>,
--   <a>deleteRepositoryResponse_repositoryId</a> - The ID of the
--   repository that was deleted.
--   
--   <a>$sel:httpStatus:DeleteRepositoryResponse'</a>,
--   <a>deleteRepositoryResponse_httpStatus</a> - The response's http
--   status code.
newDeleteRepositoryResponse :: Int -> DeleteRepositoryResponse

-- | <i>See:</i> <a>newDeleteCommentContent</a> smart constructor.
data DeleteCommentContent
DeleteCommentContent' :: Text -> DeleteCommentContent

-- | Create a value of <a>DeleteCommentContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commentId:DeleteCommentContent'</a>,
--   <a>deleteCommentContent_commentId</a> - The unique, system-generated
--   ID of the comment. To get this ID, use GetCommentsForComparedCommit or
--   GetCommentsForPullRequest.
newDeleteCommentContent :: Text -> DeleteCommentContent

-- | <i>See:</i> <a>newDeleteCommentContentResponse</a> smart constructor.
data DeleteCommentContentResponse
DeleteCommentContentResponse' :: Maybe Comment -> Int -> DeleteCommentContentResponse

-- | Create a value of <a>DeleteCommentContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:DeleteCommentContentResponse'</a>,
--   <a>deleteCommentContentResponse_comment</a> - Information about the
--   comment you just deleted.
--   
--   <a>$sel:httpStatus:DeleteCommentContentResponse'</a>,
--   <a>deleteCommentContentResponse_httpStatus</a> - The response's http
--   status code.
newDeleteCommentContentResponse :: Int -> DeleteCommentContentResponse

-- | <i>See:</i> <a>newMergePullRequestByThreeWay</a> smart constructor.
data MergePullRequestByThreeWay
MergePullRequestByThreeWay' :: Maybe Text -> Maybe Text -> Maybe ConflictDetailLevelTypeEnum -> Maybe Text -> Maybe ConflictResolution -> Maybe ConflictResolutionStrategyTypeEnum -> Maybe Bool -> Maybe Text -> Text -> Text -> MergePullRequestByThreeWay

-- | Create a value of <a>MergePullRequestByThreeWay</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_email</a> - The email address of the
--   person merging the branches. This information is used in the commit
--   information for the merge.
--   
--   <a>$sel:authorName:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_authorName</a> - The name of the author
--   who created the commit. This information is used as both the author
--   and committer for the commit.
--   
--   <a>$sel:conflictDetailLevel:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_conflictDetailLevel</a> - The level of
--   conflict detail to use. If unspecified, the default FILE_LEVEL is
--   used, which returns a not-mergeable result if the same file has
--   differences in both branches. If LINE_LEVEL is specified, a conflict
--   is considered not mergeable if the same file in both branches has
--   differences on the same line.
--   
--   <a>$sel:commitMessage:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_commitMessage</a> - The commit message
--   to include in the commit information for the merge.
--   
--   <a>$sel:conflictResolution:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_conflictResolution</a> - If AUTOMERGE is
--   the conflict resolution strategy, a list of inputs to use when
--   resolving conflicts during a merge.
--   
--   <a>$sel:conflictResolutionStrategy:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_conflictResolutionStrategy</a> -
--   Specifies which branch to use when resolving conflicts, or whether to
--   attempt automatically merging two versions of a file. The default is
--   NONE, which requires any conflicts to be resolved manually before the
--   merge operation is successful.
--   
--   <a>$sel:keepEmptyFolders:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_keepEmptyFolders</a> - If the commit
--   contains deletions, whether to keep a folder or folder structure if
--   the changes leave the folders empty. If true, a .gitkeep file is
--   created for empty folders. The default is false.
--   
--   <a>$sel:sourceCommitId:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_sourceCommitId</a> - The full commit ID
--   of the original or updated commit in the pull request source branch.
--   Pass this value if you want an exception thrown if the current commit
--   ID of the tip of the source branch does not match this commit ID.
--   
--   <a>$sel:pullRequestId:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:repositoryName:MergePullRequestByThreeWay'</a>,
--   <a>mergePullRequestByThreeWay_repositoryName</a> - The name of the
--   repository where the pull request was created.
newMergePullRequestByThreeWay :: Text -> Text -> MergePullRequestByThreeWay

-- | <i>See:</i> <a>newMergePullRequestByThreeWayResponse</a> smart
--   constructor.
data MergePullRequestByThreeWayResponse
MergePullRequestByThreeWayResponse' :: Maybe PullRequest -> Int -> MergePullRequestByThreeWayResponse

-- | Create a value of <a>MergePullRequestByThreeWayResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequest:MergePullRequestByThreeWayResponse'</a>,
--   <a>mergePullRequestByThreeWayResponse_pullRequest</a> - Undocumented
--   member.
--   
--   <a>$sel:httpStatus:MergePullRequestByThreeWayResponse'</a>,
--   <a>mergePullRequestByThreeWayResponse_httpStatus</a> - The response's
--   http status code.
newMergePullRequestByThreeWayResponse :: Int -> MergePullRequestByThreeWayResponse

-- | <i>See:</i> <a>newDescribePullRequestEvents</a> smart constructor.
data DescribePullRequestEvents
DescribePullRequestEvents' :: Maybe PullRequestEventType -> Maybe Text -> Maybe Text -> Maybe Int -> Text -> DescribePullRequestEvents

-- | Create a value of <a>DescribePullRequestEvents</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestEventType:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_pullRequestEventType</a> - Optional. The
--   pull request event type about which you want to return information.
--   
--   <a>$sel:actorArn:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_actorArn</a> - The Amazon Resource Name
--   (ARN) of the user whose actions resulted in the event. Examples
--   include updating the pull request with more commits or changing the
--   status of a pull request.
--   
--   <a>$sel:nextToken:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_nextToken</a> - An enumeration token
--   that, when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:maxResults:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_maxResults</a> - A non-zero, non-negative
--   integer used to limit the number of returned results. The default is
--   100 events, which is also the maximum number of events that can be
--   returned in a result.
--   
--   <a>$sel:pullRequestId:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEvents_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
newDescribePullRequestEvents :: Text -> DescribePullRequestEvents

-- | <i>See:</i> <a>newDescribePullRequestEventsResponse</a> smart
--   constructor.
data DescribePullRequestEventsResponse
DescribePullRequestEventsResponse' :: Maybe Text -> Int -> [PullRequestEvent] -> DescribePullRequestEventsResponse

-- | Create a value of <a>DescribePullRequestEventsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribePullRequestEvents'</a>,
--   <a>describePullRequestEventsResponse_nextToken</a> - An enumeration
--   token that can be used in a request to return the next batch of the
--   results.
--   
--   <a>$sel:httpStatus:DescribePullRequestEventsResponse'</a>,
--   <a>describePullRequestEventsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:pullRequestEvents:DescribePullRequestEventsResponse'</a>,
--   <a>describePullRequestEventsResponse_pullRequestEvents</a> -
--   Information about the pull request events.
newDescribePullRequestEventsResponse :: Int -> DescribePullRequestEventsResponse

-- | Represents the input of a batch get repositories operation.
--   
--   <i>See:</i> <a>newBatchGetRepositories</a> smart constructor.
data BatchGetRepositories
BatchGetRepositories' :: [Text] -> BatchGetRepositories

-- | Create a value of <a>BatchGetRepositories</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryNames:BatchGetRepositories'</a>,
--   <a>batchGetRepositories_repositoryNames</a> - The names of the
--   repositories to get information about.
--   
--   The length constraint limit is for each string in the array. The array
--   itself can be empty.
newBatchGetRepositories :: BatchGetRepositories

-- | Represents the output of a batch get repositories operation.
--   
--   <i>See:</i> <a>newBatchGetRepositoriesResponse</a> smart constructor.
data BatchGetRepositoriesResponse
BatchGetRepositoriesResponse' :: Maybe [RepositoryMetadata] -> Maybe [Text] -> Int -> BatchGetRepositoriesResponse

-- | Create a value of <a>BatchGetRepositoriesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositories:BatchGetRepositoriesResponse'</a>,
--   <a>batchGetRepositoriesResponse_repositories</a> - A list of
--   repositories returned by the batch get repositories operation.
--   
--   <a>$sel:repositoriesNotFound:BatchGetRepositoriesResponse'</a>,
--   <a>batchGetRepositoriesResponse_repositoriesNotFound</a> - Returns a
--   list of repository names for which information could not be found.
--   
--   <a>$sel:httpStatus:BatchGetRepositoriesResponse'</a>,
--   <a>batchGetRepositoriesResponse_httpStatus</a> - The response's http
--   status code.
newBatchGetRepositoriesResponse :: Int -> BatchGetRepositoriesResponse

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateDescription</a> smart
--   constructor.
data UpdateApprovalRuleTemplateDescription
UpdateApprovalRuleTemplateDescription' :: Text -> Text -> UpdateApprovalRuleTemplateDescription

-- | Create a value of <a>UpdateApprovalRuleTemplateDescription</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:approvalRuleTemplateName:UpdateApprovalRuleTemplateDescription'</a>,
--   <a>updateApprovalRuleTemplateDescription_approvalRuleTemplateName</a>
--   - The name of the template for which you want to update the
--   description.
--   
--   
--   <a>$sel:approvalRuleTemplateDescription:UpdateApprovalRuleTemplateDescription'</a>,
--   <a>updateApprovalRuleTemplateDescription_approvalRuleTemplateDescription</a>
--   - The updated description of the approval rule template.
newUpdateApprovalRuleTemplateDescription :: Text -> Text -> UpdateApprovalRuleTemplateDescription

-- | <i>See:</i> <a>newUpdateApprovalRuleTemplateDescriptionResponse</a>
--   smart constructor.
data UpdateApprovalRuleTemplateDescriptionResponse
UpdateApprovalRuleTemplateDescriptionResponse' :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateDescriptionResponse

-- | Create a value of <a>UpdateApprovalRuleTemplateDescriptionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApprovalRuleTemplateDescriptionResponse'</a>,
--   <a>updateApprovalRuleTemplateDescriptionResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:approvalRuleTemplate:UpdateApprovalRuleTemplateDescriptionResponse'</a>,
--   <a>updateApprovalRuleTemplateDescriptionResponse_approvalRuleTemplate</a>
--   - The structure and content of the updated approval rule template.
newUpdateApprovalRuleTemplateDescriptionResponse :: Int -> ApprovalRuleTemplate -> UpdateApprovalRuleTemplateDescriptionResponse

-- | <i>See:</i> <a>newGetPullRequestOverrideState</a> smart constructor.
data GetPullRequestOverrideState
GetPullRequestOverrideState' :: Text -> Text -> GetPullRequestOverrideState

-- | Create a value of <a>GetPullRequestOverrideState</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:GetPullRequestOverrideState'</a>,
--   <a>getPullRequestOverrideState_pullRequestId</a> - The ID of the pull
--   request for which you want to get information about whether approval
--   rules have been set aside (overridden).
--   
--   <a>$sel:revisionId:GetPullRequestOverrideState'</a>,
--   <a>getPullRequestOverrideState_revisionId</a> - The system-generated
--   ID of the revision for the pull request. To retrieve the most recent
--   revision ID, use GetPullRequest.
newGetPullRequestOverrideState :: Text -> Text -> GetPullRequestOverrideState

-- | <i>See:</i> <a>newGetPullRequestOverrideStateResponse</a> smart
--   constructor.
data GetPullRequestOverrideStateResponse
GetPullRequestOverrideStateResponse' :: Maybe Bool -> Maybe Text -> Int -> GetPullRequestOverrideStateResponse

-- | Create a value of <a>GetPullRequestOverrideStateResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overridden:GetPullRequestOverrideStateResponse'</a>,
--   <a>getPullRequestOverrideStateResponse_overridden</a> - A Boolean
--   value that indicates whether a pull request has had its rules set
--   aside (TRUE) or whether all approval rules still apply (FALSE).
--   
--   <a>$sel:overrider:GetPullRequestOverrideStateResponse'</a>,
--   <a>getPullRequestOverrideStateResponse_overrider</a> - The Amazon
--   Resource Name (ARN) of the user or identity that overrode the rules
--   and their requirements for the pull request.
--   
--   <a>$sel:httpStatus:GetPullRequestOverrideStateResponse'</a>,
--   <a>getPullRequestOverrideStateResponse_httpStatus</a> - The response's
--   http status code.
newGetPullRequestOverrideStateResponse :: Int -> GetPullRequestOverrideStateResponse

-- | <i>See:</i> <a>newGetPullRequestApprovalStates</a> smart constructor.
data GetPullRequestApprovalStates
GetPullRequestApprovalStates' :: Text -> Text -> GetPullRequestApprovalStates

-- | Create a value of <a>GetPullRequestApprovalStates</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:GetPullRequestApprovalStates'</a>,
--   <a>getPullRequestApprovalStates_pullRequestId</a> - The
--   system-generated ID for the pull request.
--   
--   <a>$sel:revisionId:GetPullRequestApprovalStates'</a>,
--   <a>getPullRequestApprovalStates_revisionId</a> - The system-generated
--   ID for the pull request revision.
newGetPullRequestApprovalStates :: Text -> Text -> GetPullRequestApprovalStates

-- | <i>See:</i> <a>newGetPullRequestApprovalStatesResponse</a> smart
--   constructor.
data GetPullRequestApprovalStatesResponse
GetPullRequestApprovalStatesResponse' :: Maybe [Approval] -> Int -> GetPullRequestApprovalStatesResponse

-- | Create a value of <a>GetPullRequestApprovalStatesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvals:GetPullRequestApprovalStatesResponse'</a>,
--   <a>getPullRequestApprovalStatesResponse_approvals</a> - Information
--   about users who have approved the pull request.
--   
--   <a>$sel:httpStatus:GetPullRequestApprovalStatesResponse'</a>,
--   <a>getPullRequestApprovalStatesResponse_httpStatus</a> - The
--   response's http status code.
newGetPullRequestApprovalStatesResponse :: Int -> GetPullRequestApprovalStatesResponse

-- | <i>See:</i> <a>newGetCommentsForPullRequest</a> smart constructor.
data GetCommentsForPullRequest
GetCommentsForPullRequest' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Int -> Text -> GetCommentsForPullRequest

-- | Create a value of <a>GetCommentsForPullRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:afterCommitId:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_afterCommitId</a> - The full commit ID of
--   the commit in the source branch that was the tip of the branch at the
--   time the comment was made.
--   
--   <a>$sel:nextToken:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_nextToken</a> - An enumeration token
--   that, when provided in a request, returns the next batch of the
--   results.
--   
--   <a>$sel:beforeCommitId:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_beforeCommitId</a> - The full commit ID
--   of the commit in the destination branch that was the tip of the branch
--   at the time the pull request was created.
--   
--   <a>$sel:repositoryName:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_repositoryName</a> - The name of the
--   repository that contains the pull request.
--   
--   <a>$sel:maxResults:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_maxResults</a> - A non-zero, non-negative
--   integer used to limit the number of returned results. The default is
--   100 comments. You can return up to 500 comments with a single request.
--   
--   <a>$sel:pullRequestId:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequest_pullRequestId</a> - The system-generated
--   ID of the pull request. To get this ID, use ListPullRequests.
newGetCommentsForPullRequest :: Text -> GetCommentsForPullRequest

-- | <i>See:</i> <a>newGetCommentsForPullRequestResponse</a> smart
--   constructor.
data GetCommentsForPullRequestResponse
GetCommentsForPullRequestResponse' :: Maybe [CommentsForPullRequest] -> Maybe Text -> Int -> GetCommentsForPullRequestResponse

-- | Create a value of <a>GetCommentsForPullRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:commentsForPullRequestData:GetCommentsForPullRequestResponse'</a>,
--   <a>getCommentsForPullRequestResponse_commentsForPullRequestData</a> -
--   An array of comment objects on the pull request.
--   
--   <a>$sel:nextToken:GetCommentsForPullRequest'</a>,
--   <a>getCommentsForPullRequestResponse_nextToken</a> - An enumeration
--   token that can be used in a request to return the next batch of the
--   results.
--   
--   <a>$sel:httpStatus:GetCommentsForPullRequestResponse'</a>,
--   <a>getCommentsForPullRequestResponse_httpStatus</a> - The response's
--   http status code.
newGetCommentsForPullRequestResponse :: Int -> GetCommentsForPullRequestResponse

-- | <i>See:</i> <a>newUpdatePullRequestStatus</a> smart constructor.
data UpdatePullRequestStatus
UpdatePullRequestStatus' :: Text -> PullRequestStatusEnum -> UpdatePullRequestStatus

-- | Create a value of <a>UpdatePullRequestStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestId:UpdatePullRequestStatus'</a>,
--   <a>updatePullRequestStatus_pullRequestId</a> - The system-generated ID
--   of the pull request. To get this ID, use ListPullRequests.
--   
--   <a>$sel:pullRequestStatus:UpdatePullRequestStatus'</a>,
--   <a>updatePullRequestStatus_pullRequestStatus</a> - The status of the
--   pull request. The only valid operations are to update the status from
--   <tt>OPEN</tt> to <tt>OPEN</tt>, <tt>OPEN</tt> to <tt>CLOSED</tt> or
--   from <tt>CLOSED</tt> to <tt>CLOSED</tt>.
newUpdatePullRequestStatus :: Text -> PullRequestStatusEnum -> UpdatePullRequestStatus

-- | <i>See:</i> <a>newUpdatePullRequestStatusResponse</a> smart
--   constructor.
data UpdatePullRequestStatusResponse
UpdatePullRequestStatusResponse' :: Int -> PullRequest -> UpdatePullRequestStatusResponse

-- | Create a value of <a>UpdatePullRequestStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdatePullRequestStatusResponse'</a>,
--   <a>updatePullRequestStatusResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:pullRequest:UpdatePullRequestStatusResponse'</a>,
--   <a>updatePullRequestStatusResponse_pullRequest</a> - Information about
--   the pull request.
newUpdatePullRequestStatusResponse :: Int -> PullRequest -> UpdatePullRequestStatusResponse

-- | <i>See:</i> <a>newListAssociatedApprovalRuleTemplatesForRepository</a>
--   smart constructor.
data ListAssociatedApprovalRuleTemplatesForRepository
ListAssociatedApprovalRuleTemplatesForRepository' :: Maybe Text -> Maybe Int -> Text -> ListAssociatedApprovalRuleTemplatesForRepository

-- | Create a value of
--   <a>ListAssociatedApprovalRuleTemplatesForRepository</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nextToken:ListAssociatedApprovalRuleTemplatesForRepository'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepository_nextToken</a> - An
--   enumeration token that, when provided in a request, returns the next
--   batch of the results.
--   
--   
--   <a>$sel:maxResults:ListAssociatedApprovalRuleTemplatesForRepository'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepository_maxResults</a> - A
--   non-zero, non-negative integer used to limit the number of returned
--   results.
--   
--   
--   <a>$sel:repositoryName:ListAssociatedApprovalRuleTemplatesForRepository'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepository_repositoryName</a>
--   - The name of the repository for which you want to list all associated
--   approval rule templates.
newListAssociatedApprovalRuleTemplatesForRepository :: Text -> ListAssociatedApprovalRuleTemplatesForRepository

-- | <i>See:</i>
--   <a>newListAssociatedApprovalRuleTemplatesForRepositoryResponse</a>
--   smart constructor.
data ListAssociatedApprovalRuleTemplatesForRepositoryResponse
ListAssociatedApprovalRuleTemplatesForRepositoryResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListAssociatedApprovalRuleTemplatesForRepositoryResponse

-- | Create a value of
--   <a>ListAssociatedApprovalRuleTemplatesForRepositoryResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:nextToken:ListAssociatedApprovalRuleTemplatesForRepository'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepositoryResponse_nextToken</a>
--   - An enumeration token that allows the operation to batch the next
--   results of the operation.
--   
--   
--   <a>$sel:approvalRuleTemplateNames:ListAssociatedApprovalRuleTemplatesForRepositoryResponse'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepositoryResponse_approvalRuleTemplateNames</a>
--   - The names of all approval rule templates associated with the
--   repository.
--   
--   
--   <a>$sel:httpStatus:ListAssociatedApprovalRuleTemplatesForRepositoryResponse'</a>,
--   <a>listAssociatedApprovalRuleTemplatesForRepositoryResponse_httpStatus</a>
--   - The response's http status code.
newListAssociatedApprovalRuleTemplatesForRepositoryResponse :: Int -> ListAssociatedApprovalRuleTemplatesForRepositoryResponse
newtype ApprovalState
ApprovalState' :: Text -> ApprovalState
[fromApprovalState] :: ApprovalState -> Text
pattern ApprovalState_APPROVE :: ApprovalState
pattern ApprovalState_REVOKE :: ApprovalState
newtype ChangeTypeEnum
ChangeTypeEnum' :: Text -> ChangeTypeEnum
[fromChangeTypeEnum] :: ChangeTypeEnum -> Text
pattern ChangeTypeEnum_A :: ChangeTypeEnum
pattern ChangeTypeEnum_D :: ChangeTypeEnum
pattern ChangeTypeEnum_M :: ChangeTypeEnum
newtype ConflictDetailLevelTypeEnum
ConflictDetailLevelTypeEnum' :: Text -> ConflictDetailLevelTypeEnum
[fromConflictDetailLevelTypeEnum] :: ConflictDetailLevelTypeEnum -> Text
pattern ConflictDetailLevelTypeEnum_FILE_LEVEL :: ConflictDetailLevelTypeEnum
pattern ConflictDetailLevelTypeEnum_LINE_LEVEL :: ConflictDetailLevelTypeEnum
newtype ConflictResolutionStrategyTypeEnum
ConflictResolutionStrategyTypeEnum' :: Text -> ConflictResolutionStrategyTypeEnum
[fromConflictResolutionStrategyTypeEnum] :: ConflictResolutionStrategyTypeEnum -> Text
pattern ConflictResolutionStrategyTypeEnum_ACCEPT_DESTINATION :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_ACCEPT_SOURCE :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_AUTOMERGE :: ConflictResolutionStrategyTypeEnum
pattern ConflictResolutionStrategyTypeEnum_NONE :: ConflictResolutionStrategyTypeEnum
newtype FileModeTypeEnum
FileModeTypeEnum' :: Text -> FileModeTypeEnum
[fromFileModeTypeEnum] :: FileModeTypeEnum -> Text
pattern FileModeTypeEnum_EXECUTABLE :: FileModeTypeEnum
pattern FileModeTypeEnum_NORMAL :: FileModeTypeEnum
pattern FileModeTypeEnum_SYMLINK :: FileModeTypeEnum
newtype MergeOptionTypeEnum
MergeOptionTypeEnum' :: Text -> MergeOptionTypeEnum
[fromMergeOptionTypeEnum] :: MergeOptionTypeEnum -> Text
pattern MergeOptionTypeEnum_FAST_FORWARD_MERGE :: MergeOptionTypeEnum
pattern MergeOptionTypeEnum_SQUASH_MERGE :: MergeOptionTypeEnum
pattern MergeOptionTypeEnum_THREE_WAY_MERGE :: MergeOptionTypeEnum
newtype ObjectTypeEnum
ObjectTypeEnum' :: Text -> ObjectTypeEnum
[fromObjectTypeEnum] :: ObjectTypeEnum -> Text
pattern ObjectTypeEnum_DIRECTORY :: ObjectTypeEnum
pattern ObjectTypeEnum_FILE :: ObjectTypeEnum
pattern ObjectTypeEnum_GIT_LINK :: ObjectTypeEnum
pattern ObjectTypeEnum_SYMBOLIC_LINK :: ObjectTypeEnum
newtype OrderEnum
OrderEnum' :: Text -> OrderEnum
[fromOrderEnum] :: OrderEnum -> Text
pattern OrderEnum_Ascending :: OrderEnum
pattern OrderEnum_Descending :: OrderEnum
newtype OverrideStatus
OverrideStatus' :: Text -> OverrideStatus
[fromOverrideStatus] :: OverrideStatus -> Text
pattern OverrideStatus_OVERRIDE :: OverrideStatus
pattern OverrideStatus_REVOKE :: OverrideStatus
newtype PullRequestEventType
PullRequestEventType' :: Text -> PullRequestEventType
[fromPullRequestEventType] :: PullRequestEventType -> Text
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_CREATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_DELETED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_OVERRIDDEN :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_RULE_UPDATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_APPROVAL_STATE_CHANGED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_CREATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_MERGE_STATE_CHANGED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_SOURCE_REFERENCE_UPDATED :: PullRequestEventType
pattern PullRequestEventType_PULL_REQUEST_STATUS_CHANGED :: PullRequestEventType
newtype PullRequestStatusEnum
PullRequestStatusEnum' :: Text -> PullRequestStatusEnum
[fromPullRequestStatusEnum] :: PullRequestStatusEnum -> Text
pattern PullRequestStatusEnum_CLOSED :: PullRequestStatusEnum
pattern PullRequestStatusEnum_OPEN :: PullRequestStatusEnum
newtype RelativeFileVersionEnum
RelativeFileVersionEnum' :: Text -> RelativeFileVersionEnum
[fromRelativeFileVersionEnum] :: RelativeFileVersionEnum -> Text
pattern RelativeFileVersionEnum_AFTER :: RelativeFileVersionEnum
pattern RelativeFileVersionEnum_BEFORE :: RelativeFileVersionEnum
newtype ReplacementTypeEnum
ReplacementTypeEnum' :: Text -> ReplacementTypeEnum
[fromReplacementTypeEnum] :: ReplacementTypeEnum -> Text
pattern ReplacementTypeEnum_KEEP_BASE :: ReplacementTypeEnum
pattern ReplacementTypeEnum_KEEP_DESTINATION :: ReplacementTypeEnum
pattern ReplacementTypeEnum_KEEP_SOURCE :: ReplacementTypeEnum
pattern ReplacementTypeEnum_USE_NEW_CONTENT :: ReplacementTypeEnum
newtype RepositoryTriggerEventEnum
RepositoryTriggerEventEnum' :: Text -> RepositoryTriggerEventEnum
[fromRepositoryTriggerEventEnum] :: RepositoryTriggerEventEnum -> Text
pattern RepositoryTriggerEventEnum_All :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_CreateReference :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_DeleteReference :: RepositoryTriggerEventEnum
pattern RepositoryTriggerEventEnum_UpdateReference :: RepositoryTriggerEventEnum
newtype SortByEnum
SortByEnum' :: Text -> SortByEnum
[fromSortByEnum] :: SortByEnum -> Text
pattern SortByEnum_LastModifiedDate :: SortByEnum
pattern SortByEnum_RepositoryName :: SortByEnum

-- | Returns information about a specific approval on a pull request.
--   
--   <i>See:</i> <a>newApproval</a> smart constructor.
data Approval
Approval' :: Maybe ApprovalState -> Maybe Text -> Approval

-- | Create a value of <a>Approval</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalState:Approval'</a>, <a>approval_approvalState</a> -
--   The state of the approval, APPROVE or REVOKE. REVOKE states are not
--   stored.
--   
--   <a>$sel:userArn:Approval'</a>, <a>approval_userArn</a> - The Amazon
--   Resource Name (ARN) of the user.
newApproval :: Approval

-- | Returns information about an approval rule.
--   
--   <i>See:</i> <a>newApprovalRule</a> smart constructor.
data ApprovalRule
ApprovalRule' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe OriginApprovalRuleTemplate -> Maybe POSIX -> Maybe Text -> ApprovalRule

-- | Create a value of <a>ApprovalRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleContentSha256:ApprovalRule'</a>,
--   <a>approvalRule_ruleContentSha256</a> - The SHA-256 hash signature for
--   the content of the approval rule.
--   
--   <a>$sel:lastModifiedDate:ApprovalRule'</a>,
--   <a>approvalRule_lastModifiedDate</a> - The date the approval rule was
--   most recently changed, in timestamp format.
--   
--   <a>$sel:approvalRuleName:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleName</a> - The name of the approval rule.
--   
--   <a>$sel:approvalRuleId:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleId</a> - The system-generated ID of the
--   approval rule.
--   
--   <a>$sel:lastModifiedUser:ApprovalRule'</a>,
--   <a>approvalRule_lastModifiedUser</a> - The Amazon Resource Name (ARN)
--   of the user who made the most recent changes to the approval rule.
--   
--   <a>$sel:originApprovalRuleTemplate:ApprovalRule'</a>,
--   <a>approvalRule_originApprovalRuleTemplate</a> - The approval rule
--   template used to create the rule.
--   
--   <a>$sel:creationDate:ApprovalRule'</a>,
--   <a>approvalRule_creationDate</a> - The date the approval rule was
--   created, in timestamp format.
--   
--   <a>$sel:approvalRuleContent:ApprovalRule'</a>,
--   <a>approvalRule_approvalRuleContent</a> - The content of the approval
--   rule.
newApprovalRule :: ApprovalRule

-- | Returns information about an event for an approval rule.
--   
--   <i>See:</i> <a>newApprovalRuleEventMetadata</a> smart constructor.
data ApprovalRuleEventMetadata
ApprovalRuleEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> ApprovalRuleEventMetadata

-- | Create a value of <a>ApprovalRuleEventMetadata</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleName:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleName</a> - The name of the
--   approval rule.
--   
--   <a>$sel:approvalRuleId:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleId</a> - The system-generated
--   ID of the approval rule.
--   
--   <a>$sel:approvalRuleContent:ApprovalRuleEventMetadata'</a>,
--   <a>approvalRuleEventMetadata_approvalRuleContent</a> - The content of
--   the approval rule.
newApprovalRuleEventMetadata :: ApprovalRuleEventMetadata

-- | Returns information about an override event for approval rules for a
--   pull request.
--   
--   <i>See:</i> <a>newApprovalRuleOverriddenEventMetadata</a> smart
--   constructor.
data ApprovalRuleOverriddenEventMetadata
ApprovalRuleOverriddenEventMetadata' :: Maybe OverrideStatus -> Maybe Text -> ApprovalRuleOverriddenEventMetadata

-- | Create a value of <a>ApprovalRuleOverriddenEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overrideStatus:ApprovalRuleOverriddenEventMetadata'</a>,
--   <a>approvalRuleOverriddenEventMetadata_overrideStatus</a> - The status
--   of the override event.
--   
--   <a>$sel:revisionId:ApprovalRuleOverriddenEventMetadata'</a>,
--   <a>approvalRuleOverriddenEventMetadata_revisionId</a> - The revision
--   ID of the pull request when the override event occurred.
newApprovalRuleOverriddenEventMetadata :: ApprovalRuleOverriddenEventMetadata

-- | Returns information about an approval rule template.
--   
--   <i>See:</i> <a>newApprovalRuleTemplate</a> smart constructor.
data ApprovalRuleTemplate
ApprovalRuleTemplate' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ApprovalRuleTemplate

-- | Create a value of <a>ApprovalRuleTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleContentSha256:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_ruleContentSha256</a> - The SHA-256 hash
--   signature for the content of the approval rule template.
--   
--   <a>$sel:approvalRuleTemplateId:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateId</a> - The
--   system-generated ID of the approval rule template.
--   
--   <a>$sel:lastModifiedDate:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_lastModifiedDate</a> - The date the approval
--   rule template was most recently changed, in timestamp format.
--   
--   <a>$sel:approvalRuleTemplateDescription:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateDescription</a> - The
--   description of the approval rule template.
--   
--   <a>$sel:approvalRuleTemplateContent:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateContent</a> - The content
--   of the approval rule template.
--   
--   <a>$sel:lastModifiedUser:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_lastModifiedUser</a> - The Amazon Resource
--   Name (ARN) of the user who made the most recent changes to the
--   approval rule template.
--   
--   <a>$sel:creationDate:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_creationDate</a> - The date the approval rule
--   template was created, in timestamp format.
--   
--   <a>$sel:approvalRuleTemplateName:ApprovalRuleTemplate'</a>,
--   <a>approvalRuleTemplate_approvalRuleTemplateName</a> - The name of the
--   approval rule template.
newApprovalRuleTemplate :: ApprovalRuleTemplate

-- | Returns information about a change in the approval state for a pull
--   request.
--   
--   <i>See:</i> <a>newApprovalStateChangedEventMetadata</a> smart
--   constructor.
data ApprovalStateChangedEventMetadata
ApprovalStateChangedEventMetadata' :: Maybe ApprovalState -> Maybe Text -> ApprovalStateChangedEventMetadata

-- | Create a value of <a>ApprovalStateChangedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalStatus:ApprovalStateChangedEventMetadata'</a>,
--   <a>approvalStateChangedEventMetadata_approvalStatus</a> - The approval
--   status for the pull request.
--   
--   <a>$sel:revisionId:ApprovalStateChangedEventMetadata'</a>,
--   <a>approvalStateChangedEventMetadata_revisionId</a> - The revision ID
--   of the pull request when the approval state changed.
newApprovalStateChangedEventMetadata :: ApprovalStateChangedEventMetadata

-- | Returns information about errors in a
--   BatchAssociateApprovalRuleTemplateWithRepositories operation.
--   
--   <i>See:</i>
--   <a>newBatchAssociateApprovalRuleTemplateWithRepositoriesError</a>
--   smart constructor.
data BatchAssociateApprovalRuleTemplateWithRepositoriesError
BatchAssociateApprovalRuleTemplateWithRepositoriesError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchAssociateApprovalRuleTemplateWithRepositoriesError

-- | Create a value of
--   <a>BatchAssociateApprovalRuleTemplateWithRepositoriesError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:errorCode:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_errorCode</a>
--   - An error code that specifies whether the repository name was not
--   valid or not found.
--   
--   
--   <a>$sel:repositoryName:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_repositoryName</a>
--   - The name of the repository where the association was not made.
--   
--   
--   <a>$sel:errorMessage:BatchAssociateApprovalRuleTemplateWithRepositoriesError'</a>,
--   <a>batchAssociateApprovalRuleTemplateWithRepositoriesError_errorMessage</a>
--   - An error message that provides details about why the repository name
--   was not found or not valid.
newBatchAssociateApprovalRuleTemplateWithRepositoriesError :: BatchAssociateApprovalRuleTemplateWithRepositoriesError

-- | Returns information about errors in a BatchDescribeMergeConflicts
--   operation.
--   
--   <i>See:</i> <a>newBatchDescribeMergeConflictsError</a> smart
--   constructor.
data BatchDescribeMergeConflictsError
BatchDescribeMergeConflictsError' :: Text -> Text -> Text -> BatchDescribeMergeConflictsError

-- | Create a value of <a>BatchDescribeMergeConflictsError</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_filePath</a> - The path to the
--   file.
--   
--   <a>$sel:exceptionName:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_exceptionName</a> - The name of
--   the exception.
--   
--   <a>$sel:message:BatchDescribeMergeConflictsError'</a>,
--   <a>batchDescribeMergeConflictsError_message</a> - The message provided
--   by the exception.
newBatchDescribeMergeConflictsError :: Text -> Text -> Text -> BatchDescribeMergeConflictsError

-- | Returns information about errors in a
--   BatchDisassociateApprovalRuleTemplateFromRepositories operation.
--   
--   <i>See:</i>
--   <a>newBatchDisassociateApprovalRuleTemplateFromRepositoriesError</a>
--   smart constructor.
data BatchDisassociateApprovalRuleTemplateFromRepositoriesError
BatchDisassociateApprovalRuleTemplateFromRepositoriesError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchDisassociateApprovalRuleTemplateFromRepositoriesError

-- | Create a value of
--   <a>BatchDisassociateApprovalRuleTemplateFromRepositoriesError</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:errorCode:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorCode</a>
--   - An error code that specifies whether the repository name was not
--   valid or not found.
--   
--   
--   <a>$sel:repositoryName:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_repositoryName</a>
--   - The name of the repository where the association with the template
--   was not able to be removed.
--   
--   
--   <a>$sel:errorMessage:BatchDisassociateApprovalRuleTemplateFromRepositoriesError'</a>,
--   <a>batchDisassociateApprovalRuleTemplateFromRepositoriesError_errorMessage</a>
--   - An error message that provides details about why the repository name
--   was either not found or not valid.
newBatchDisassociateApprovalRuleTemplateFromRepositoriesError :: BatchDisassociateApprovalRuleTemplateFromRepositoriesError

-- | Returns information about errors in a BatchGetCommits operation.
--   
--   <i>See:</i> <a>newBatchGetCommitsError</a> smart constructor.
data BatchGetCommitsError
BatchGetCommitsError' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchGetCommitsError

-- | Create a value of <a>BatchGetCommitsError</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_commitId</a> - A commit ID that either could
--   not be found or was not in a valid format.
--   
--   <a>$sel:errorCode:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_errorCode</a> - An error code that specifies
--   whether the commit ID was not valid or not found.
--   
--   <a>$sel:errorMessage:BatchGetCommitsError'</a>,
--   <a>batchGetCommitsError_errorMessage</a> - An error message that
--   provides detail about why the commit ID either was not found or was
--   not valid.
newBatchGetCommitsError :: BatchGetCommitsError

-- | Returns information about a specific Git blob object.
--   
--   <i>See:</i> <a>newBlobMetadata</a> smart constructor.
data BlobMetadata
BlobMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> BlobMetadata

-- | Create a value of <a>BlobMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:path:BlobMetadata'</a>, <a>blobMetadata_path</a> - The path to
--   the blob and associated file name, if any.
--   
--   <a>$sel:mode:BlobMetadata'</a>, <a>blobMetadata_mode</a> - The file
--   mode permissions of the blob. File mode permission codes include:
--   
--   <ul>
--   <li><tt>100644</tt> indicates read/write</li>
--   <li><tt>100755</tt> indicates read/write/execute</li>
--   <li><tt>160000</tt> indicates a submodule</li>
--   <li><tt>120000</tt> indicates a symlink</li>
--   </ul>
--   
--   <a>$sel:blobId:BlobMetadata'</a>, <a>blobMetadata_blobId</a> - The
--   full ID of the blob.
newBlobMetadata :: BlobMetadata

-- | Returns information about a branch.
--   
--   <i>See:</i> <a>newBranchInfo</a> smart constructor.
data BranchInfo
BranchInfo' :: Maybe Text -> Maybe Text -> BranchInfo

-- | Create a value of <a>BranchInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:BranchInfo'</a>, <a>branchInfo_commitId</a> - The ID
--   of the last commit made to the branch.
--   
--   <a>$sel:branchName:BranchInfo'</a>, <a>branchInfo_branchName</a> - The
--   name of the branch.
newBranchInfo :: BranchInfo

-- | Returns information about a specific comment.
--   
--   <i>See:</i> <a>newComment</a> smart constructor.
data Comment
Comment' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Int) -> Comment

-- | Create a value of <a>Comment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:Comment'</a>, <a>comment_lastModifiedDate</a>
--   - The date and time the comment was most recently modified, in
--   timestamp format.
--   
--   <a>$sel:authorArn:Comment'</a>, <a>comment_authorArn</a> - The Amazon
--   Resource Name (ARN) of the person who posted the comment.
--   
--   <a>$sel:content:Comment'</a>, <a>comment_content</a> - The content of
--   the comment.
--   
--   <a>$sel:callerReactions:Comment'</a>, <a>comment_callerReactions</a> -
--   The emoji reactions to a comment, if any, submitted by the user whose
--   credentials are associated with the call to the API.
--   
--   <a>$sel:creationDate:Comment'</a>, <a>comment_creationDate</a> - The
--   date and time the comment was created, in timestamp format.
--   
--   <a>$sel:deleted:Comment'</a>, <a>comment_deleted</a> - A Boolean value
--   indicating whether the comment has been deleted.
--   
--   <a>$sel:clientRequestToken:Comment'</a>,
--   <a>comment_clientRequestToken</a> - A unique, client-generated
--   idempotency token that, when provided in a request, ensures the
--   request cannot be repeated with a changed parameter. If a request is
--   received with the same parameters and a token is included, the request
--   returns information about the initial request that used that token.
--   
--   <a>$sel:commentId:Comment'</a>, <a>comment_commentId</a> - The
--   system-generated comment ID.
--   
--   <a>$sel:inReplyTo:Comment'</a>, <a>comment_inReplyTo</a> - The ID of
--   the comment for which this comment is a reply, if any.
--   
--   <a>$sel:reactionCounts:Comment'</a>, <a>comment_reactionCounts</a> - A
--   string to integer map that represents the number of individual users
--   who have responded to a comment with the specified reactions.
newComment :: Comment

-- | Returns information about comments on the comparison between two
--   commits.
--   
--   <i>See:</i> <a>newCommentsForComparedCommit</a> smart constructor.
data CommentsForComparedCommit
CommentsForComparedCommit' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Comment] -> CommentsForComparedCommit

-- | Create a value of <a>CommentsForComparedCommit</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_beforeBlobId</a> - The full blob ID of
--   the commit used to establish the before of the comparison.
--   
--   <a>$sel:location:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_location</a> - Location information about
--   the comment on the comparison, including the file name, line number,
--   and whether the version of the file where the comment was made is
--   BEFORE or AFTER.
--   
--   <a>$sel:afterCommitId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_afterCommitId</a> - The full commit ID of
--   the commit used to establish the after of the comparison.
--   
--   <a>$sel:afterBlobId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_afterBlobId</a> - The full blob ID of the
--   commit used to establish the after of the comparison.
--   
--   <a>$sel:beforeCommitId:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_beforeCommitId</a> - The full commit ID
--   of the commit used to establish the before of the comparison.
--   
--   <a>$sel:repositoryName:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_repositoryName</a> - The name of the
--   repository that contains the compared commits.
--   
--   <a>$sel:comments:CommentsForComparedCommit'</a>,
--   <a>commentsForComparedCommit_comments</a> - An array of comment
--   objects. Each comment object contains information about a comment on
--   the comparison between commits.
newCommentsForComparedCommit :: CommentsForComparedCommit

-- | Returns information about comments on a pull request.
--   
--   <i>See:</i> <a>newCommentsForPullRequest</a> smart constructor.
data CommentsForPullRequest
CommentsForPullRequest' :: Maybe Text -> Maybe Location -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Comment] -> CommentsForPullRequest

-- | Create a value of <a>CommentsForPullRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:beforeBlobId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_beforeBlobId</a> - The full blob ID of the
--   file on which you want to comment on the destination commit.
--   
--   <a>$sel:location:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_location</a> - Location information about
--   the comment on the pull request, including the file name, line number,
--   and whether the version of the file where the comment was made is
--   BEFORE (destination branch) or AFTER (source branch).
--   
--   <a>$sel:afterCommitId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_afterCommitId</a> - The full commit ID of
--   the commit that was the tip of the source branch at the time the
--   comment was made.
--   
--   <a>$sel:pullRequestId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_pullRequestId</a> - The system-generated ID
--   of the pull request.
--   
--   <a>$sel:afterBlobId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_afterBlobId</a> - The full blob ID of the
--   file on which you want to comment on the source commit.
--   
--   <a>$sel:beforeCommitId:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_beforeCommitId</a> - The full commit ID of
--   the commit that was the tip of the destination branch when the pull
--   request was created. This commit is superceded by the after commit in
--   the source branch when and if you merge the source branch into the
--   destination branch.
--   
--   <a>$sel:repositoryName:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_repositoryName</a> - The name of the
--   repository that contains the pull request.
--   
--   <a>$sel:comments:CommentsForPullRequest'</a>,
--   <a>commentsForPullRequest_comments</a> - An array of comment objects.
--   Each comment object contains information about a comment on the pull
--   request.
newCommentsForPullRequest :: CommentsForPullRequest

-- | Returns information about a specific commit.
--   
--   <i>See:</i> <a>newCommit</a> smart constructor.
data Commit
Commit' :: Maybe Text -> Maybe UserInfo -> Maybe Text -> Maybe Text -> Maybe [Text] -> Maybe UserInfo -> Maybe Text -> Commit

-- | Create a value of <a>Commit</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:Commit'</a>, <a>commit_commitId</a> - The full SHA ID
--   of the specified commit.
--   
--   <a>$sel:committer:Commit'</a>, <a>commit_committer</a> - Information
--   about the person who committed the specified commit, also known as the
--   committer. Information includes the date in timestamp format with GMT
--   offset, the name of the committer, and the email address for the
--   committer, as configured in Git.
--   
--   For more information about the difference between an author and a
--   committer in Git, see <a>Viewing the Commit History</a> in Pro Git by
--   Scott Chacon and Ben Straub.
--   
--   <a>$sel:treeId:Commit'</a>, <a>commit_treeId</a> - Tree information
--   for the specified commit.
--   
--   <a>$sel:additionalData:Commit'</a>, <a>commit_additionalData</a> - Any
--   other data associated with the specified commit.
--   
--   <a>$sel:parents:Commit'</a>, <a>commit_parents</a> - A list of parent
--   commits for the specified commit. Each parent commit ID is the full
--   commit ID.
--   
--   <a>$sel:author:Commit'</a>, <a>commit_author</a> - Information about
--   the author of the specified commit. Information includes the date in
--   timestamp format with GMT offset, the name of the author, and the
--   email address for the author, as configured in Git.
--   
--   <a>$sel:message:Commit'</a>, <a>commit_message</a> - The commit
--   message associated with the specified commit.
newCommit :: Commit

-- | Information about conflicts in a merge operation.
--   
--   <i>See:</i> <a>newConflict</a> smart constructor.
data Conflict
Conflict' :: Maybe [MergeHunk] -> Maybe ConflictMetadata -> Conflict

-- | Create a value of <a>Conflict</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mergeHunks:Conflict'</a>, <a>conflict_mergeHunks</a> - A list
--   of hunks that contain the differences between files or lines causing
--   the conflict.
--   
--   <a>$sel:conflictMetadata:Conflict'</a>,
--   <a>conflict_conflictMetadata</a> - Metadata about a conflict in a
--   merge operation.
newConflict :: Conflict

-- | Information about the metadata for a conflict in a merge operation.
--   
--   <i>See:</i> <a>newConflictMetadata</a> smart constructor.
data ConflictMetadata
ConflictMetadata' :: Maybe Int -> Maybe Bool -> Maybe FileSizes -> Maybe Text -> Maybe IsBinaryFile -> Maybe Bool -> Maybe Bool -> Maybe MergeOperations -> Maybe ObjectTypes -> Maybe FileModes -> ConflictMetadata

-- | Create a value of <a>ConflictMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:numberOfConflicts:ConflictMetadata'</a>,
--   <a>conflictMetadata_numberOfConflicts</a> - The number of conflicts,
--   including both hunk conflicts and metadata conflicts.
--   
--   <a>$sel:contentConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_contentConflict</a> - A boolean value indicating
--   whether there are conflicts in the content of a file.
--   
--   <a>$sel:fileSizes:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileSizes</a> - The file sizes of the file in the
--   source, destination, and base of the merge.
--   
--   <a>$sel:filePath:ConflictMetadata'</a>,
--   <a>conflictMetadata_filePath</a> - The path of the file that contains
--   conflicts.
--   
--   <a>$sel:isBinaryFile:ConflictMetadata'</a>,
--   <a>conflictMetadata_isBinaryFile</a> - A boolean value (true or false)
--   indicating whether the file is binary or textual in the source,
--   destination, and base of the merge.
--   
--   <a>$sel:fileModeConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileModeConflict</a> - A boolean value indicating
--   whether there are conflicts in the file mode of a file.
--   
--   <a>$sel:objectTypeConflict:ConflictMetadata'</a>,
--   <a>conflictMetadata_objectTypeConflict</a> - A boolean value (true or
--   false) indicating whether there are conflicts between the branches in
--   the object type of a file, folder, or submodule.
--   
--   <a>$sel:mergeOperations:ConflictMetadata'</a>,
--   <a>conflictMetadata_mergeOperations</a> - Whether an add, modify, or
--   delete operation caused the conflict between the source and
--   destination of the merge.
--   
--   <a>$sel:objectTypes:ConflictMetadata'</a>,
--   <a>conflictMetadata_objectTypes</a> - Information about any object
--   type conflicts in a merge operation.
--   
--   <a>$sel:fileModes:ConflictMetadata'</a>,
--   <a>conflictMetadata_fileModes</a> - The file modes of the file in the
--   source, destination, and base of the merge.
newConflictMetadata :: ConflictMetadata

-- | If AUTOMERGE is the conflict resolution strategy, a list of inputs to
--   use when resolving conflicts during a merge.
--   
--   <i>See:</i> <a>newConflictResolution</a> smart constructor.
data ConflictResolution
ConflictResolution' :: Maybe [SetFileModeEntry] -> Maybe [DeleteFileEntry] -> Maybe [ReplaceContentEntry] -> ConflictResolution

-- | Create a value of <a>ConflictResolution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:setFileModes:ConflictResolution'</a>,
--   <a>conflictResolution_setFileModes</a> - File modes that are set as
--   part of the merge conflict resolution.
--   
--   <a>$sel:deleteFiles:ConflictResolution'</a>,
--   <a>conflictResolution_deleteFiles</a> - Files to be deleted as part of
--   the merge conflict resolution.
--   
--   <a>$sel:replaceContents:ConflictResolution'</a>,
--   <a>conflictResolution_replaceContents</a> - Files to have content
--   replaced as part of the merge conflict resolution.
newConflictResolution :: ConflictResolution

-- | A file that is deleted as part of a commit.
--   
--   <i>See:</i> <a>newDeleteFileEntry</a> smart constructor.
data DeleteFileEntry
DeleteFileEntry' :: Text -> DeleteFileEntry

-- | Create a value of <a>DeleteFileEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:DeleteFileEntry'</a>, <a>deleteFileEntry_filePath</a>
--   - The full path of the file to be deleted, including the name of the
--   file.
newDeleteFileEntry :: Text -> DeleteFileEntry

-- | Returns information about a set of differences for a commit specifier.
--   
--   <i>See:</i> <a>newDifference</a> smart constructor.
data Difference
Difference' :: Maybe BlobMetadata -> Maybe BlobMetadata -> Maybe ChangeTypeEnum -> Difference

-- | Create a value of <a>Difference</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:afterBlob:Difference'</a>, <a>difference_afterBlob</a> -
--   Information about an <tt>afterBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
--   
--   <a>$sel:beforeBlob:Difference'</a>, <a>difference_beforeBlob</a> -
--   Information about a <tt>beforeBlob</tt> data type object, including
--   the ID, the file mode permission code, and the path.
--   
--   <a>$sel:changeType:Difference'</a>, <a>difference_changeType</a> -
--   Whether the change type of the difference is an addition (A), deletion
--   (D), or modification (M).
newDifference :: Difference

-- | Returns information about the approval rules applied to a pull request
--   and whether conditions have been met.
--   
--   <i>See:</i> <a>newEvaluation</a> smart constructor.
data Evaluation
Evaluation' :: Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Maybe Bool -> Evaluation

-- | Create a value of <a>Evaluation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRulesSatisfied:Evaluation'</a>,
--   <a>evaluation_approvalRulesSatisfied</a> - The names of the approval
--   rules that have had their conditions met.
--   
--   <a>$sel:approvalRulesNotSatisfied:Evaluation'</a>,
--   <a>evaluation_approvalRulesNotSatisfied</a> - The names of the
--   approval rules that have not had their conditions met.
--   
--   <a>$sel:approved:Evaluation'</a>, <a>evaluation_approved</a> - Whether
--   the state of the pull request is approved.
--   
--   <a>$sel:overridden:Evaluation'</a>, <a>evaluation_overridden</a> -
--   Whether the approval rule requirements for the pull request have been
--   overridden and no longer need to be met.
newEvaluation :: Evaluation

-- | Returns information about a file in a repository.
--   
--   <i>See:</i> <a>newFile</a> smart constructor.
data File
File' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> Maybe Text -> File

-- | Create a value of <a>File</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:File'</a>, <a>file_absolutePath</a> - The fully
--   qualified path to the file in the repository.
--   
--   <a>$sel:fileMode:File'</a>, <a>file_fileMode</a> - The extrapolated
--   file mode permissions for the file. Valid values include EXECUTABLE
--   and NORMAL.
--   
--   <a>$sel:blobId:File'</a>, <a>file_blobId</a> - The blob ID that
--   contains the file information.
--   
--   <a>$sel:relativePath:File'</a>, <a>file_relativePath</a> - The
--   relative path of the file from the folder where the query originated.
newFile :: File

-- | A file to be added, updated, or deleted as part of a commit.
--   
--   <i>See:</i> <a>newFileMetadata</a> smart constructor.
data FileMetadata
FileMetadata' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> FileMetadata

-- | Create a value of <a>FileMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:FileMetadata'</a>,
--   <a>fileMetadata_absolutePath</a> - The full path to the file to be
--   added or updated, including the name of the file.
--   
--   <a>$sel:fileMode:FileMetadata'</a>, <a>fileMetadata_fileMode</a> - The
--   extrapolated file mode permissions for the file. Valid values include
--   EXECUTABLE and NORMAL.
--   
--   <a>$sel:blobId:FileMetadata'</a>, <a>fileMetadata_blobId</a> - The
--   blob ID that contains the file information.
newFileMetadata :: FileMetadata

-- | Information about file modes in a merge or pull request.
--   
--   <i>See:</i> <a>newFileModes</a> smart constructor.
data FileModes
FileModes' :: Maybe FileModeTypeEnum -> Maybe FileModeTypeEnum -> Maybe FileModeTypeEnum -> FileModes

-- | Create a value of <a>FileModes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:FileModes'</a>, <a>fileModes_destination</a> - The
--   file mode of a file in the destination of a merge or pull request.
--   
--   <a>$sel:base:FileModes'</a>, <a>fileModes_base</a> - The file mode of
--   a file in the base of a merge or pull request.
--   
--   <a>$sel:source:FileModes'</a>, <a>fileModes_source</a> - The file mode
--   of a file in the source of a merge or pull request.
newFileModes :: FileModes

-- | Information about the size of files in a merge or pull request.
--   
--   <i>See:</i> <a>newFileSizes</a> smart constructor.
data FileSizes
FileSizes' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> FileSizes

-- | Create a value of <a>FileSizes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:FileSizes'</a>, <a>fileSizes_destination</a> - The
--   size of a file in the destination of a merge or pull request.
--   
--   <a>$sel:base:FileSizes'</a>, <a>fileSizes_base</a> - The size of a
--   file in the base of a merge or pull request.
--   
--   <a>$sel:source:FileSizes'</a>, <a>fileSizes_source</a> - The size of a
--   file in the source of a merge or pull request.
newFileSizes :: FileSizes

-- | Returns information about a folder in a repository.
--   
--   <i>See:</i> <a>newFolder</a> smart constructor.
data Folder
Folder' :: Maybe Text -> Maybe Text -> Maybe Text -> Folder

-- | Create a value of <a>Folder</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:Folder'</a>, <a>folder_absolutePath</a> - The
--   fully qualified path of the folder in the repository.
--   
--   <a>$sel:treeId:Folder'</a>, <a>folder_treeId</a> - The full SHA-1
--   pointer of the tree information for the commit that contains the
--   folder.
--   
--   <a>$sel:relativePath:Folder'</a>, <a>folder_relativePath</a> - The
--   relative path of the specified folder from the folder where the query
--   originated.
newFolder :: Folder

-- | Information about whether a file is binary or textual in a merge or
--   pull request operation.
--   
--   <i>See:</i> <a>newIsBinaryFile</a> smart constructor.
data IsBinaryFile
IsBinaryFile' :: Maybe Bool -> Maybe Bool -> Maybe Bool -> IsBinaryFile

-- | Create a value of <a>IsBinaryFile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:IsBinaryFile'</a>, <a>isBinaryFile_destination</a>
--   - The binary or non-binary status of a file in the destination of a
--   merge or pull request.
--   
--   <a>$sel:base:IsBinaryFile'</a>, <a>isBinaryFile_base</a> - The binary
--   or non-binary status of a file in the base of a merge or pull request.
--   
--   <a>$sel:source:IsBinaryFile'</a>, <a>isBinaryFile_source</a> - The
--   binary or non-binary status of file in the source of a merge or pull
--   request.
newIsBinaryFile :: IsBinaryFile

-- | Returns information about the location of a change or comment in the
--   comparison between two commits or a pull request.
--   
--   <i>See:</i> <a>newLocation</a> smart constructor.
data Location
Location' :: Maybe RelativeFileVersionEnum -> Maybe Text -> Maybe Integer -> Location

-- | Create a value of <a>Location</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:relativeFileVersion:Location'</a>,
--   <a>location_relativeFileVersion</a> - In a comparison of commits or a
--   pull request, whether the change is in the before or after of that
--   comparison.
--   
--   <a>$sel:filePath:Location'</a>, <a>location_filePath</a> - The name of
--   the file being compared, including its extension and subdirectory, if
--   any.
--   
--   <a>$sel:filePosition:Location'</a>, <a>location_filePosition</a> - The
--   position of a change in a compared file, in line number format.
newLocation :: Location

-- | Information about merge hunks in a merge or pull request operation.
--   
--   <i>See:</i> <a>newMergeHunk</a> smart constructor.
data MergeHunk
MergeHunk' :: Maybe MergeHunkDetail -> Maybe MergeHunkDetail -> Maybe Bool -> Maybe MergeHunkDetail -> MergeHunk

-- | Create a value of <a>MergeHunk</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:MergeHunk'</a>, <a>mergeHunk_destination</a> -
--   Information about the merge hunk in the destination of a merge or pull
--   request.
--   
--   <a>$sel:base:MergeHunk'</a>, <a>mergeHunk_base</a> - Information about
--   the merge hunk in the base of a merge or pull request.
--   
--   <a>$sel:isConflict:MergeHunk'</a>, <a>mergeHunk_isConflict</a> - A
--   Boolean value indicating whether a combination of hunks contains a
--   conflict. Conflicts occur when the same file or the same lines in a
--   file were modified in both the source and destination of a merge or
--   pull request. Valid values include true, false, and null. True when
--   the hunk represents a conflict and one or more files contains a line
--   conflict. File mode conflicts in a merge do not set this to true.
--   
--   <a>$sel:source:MergeHunk'</a>, <a>mergeHunk_source</a> - Information
--   about the merge hunk in the source of a merge or pull request.
newMergeHunk :: MergeHunk

-- | Information about the details of a merge hunk that contains a conflict
--   in a merge or pull request operation.
--   
--   <i>See:</i> <a>newMergeHunkDetail</a> smart constructor.
data MergeHunkDetail
MergeHunkDetail' :: Maybe Int -> Maybe Int -> Maybe Text -> MergeHunkDetail

-- | Create a value of <a>MergeHunkDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startLine:MergeHunkDetail'</a>,
--   <a>mergeHunkDetail_startLine</a> - The start position of the hunk in
--   the merge result.
--   
--   <a>$sel:endLine:MergeHunkDetail'</a>, <a>mergeHunkDetail_endLine</a> -
--   The end position of the hunk in the merge result.
--   
--   <a>$sel:hunkContent:MergeHunkDetail'</a>,
--   <a>mergeHunkDetail_hunkContent</a> - The base-64 encoded content of
--   the hunk merged region that might contain a conflict.
newMergeHunkDetail :: MergeHunkDetail

-- | Returns information about a merge or potential merge between a source
--   reference and a destination reference in a pull request.
--   
--   <i>See:</i> <a>newMergeMetadata</a> smart constructor.
data MergeMetadata
MergeMetadata' :: Maybe Text -> Maybe MergeOptionTypeEnum -> Maybe Bool -> Maybe Text -> MergeMetadata

-- | Create a value of <a>MergeMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mergedBy:MergeMetadata'</a>, <a>mergeMetadata_mergedBy</a> -
--   The Amazon Resource Name (ARN) of the user who merged the branches.
--   
--   <a>$sel:mergeOption:MergeMetadata'</a>,
--   <a>mergeMetadata_mergeOption</a> - The merge strategy used in the
--   merge.
--   
--   <a>$sel:isMerged:MergeMetadata'</a>, <a>mergeMetadata_isMerged</a> - A
--   Boolean value indicating whether the merge has been made.
--   
--   <a>$sel:mergeCommitId:MergeMetadata'</a>,
--   <a>mergeMetadata_mergeCommitId</a> - The commit ID for the merge
--   commit, if any.
newMergeMetadata :: MergeMetadata

-- | Information about the file operation conflicts in a merge operation.
--   
--   <i>See:</i> <a>newMergeOperations</a> smart constructor.
data MergeOperations
MergeOperations' :: Maybe ChangeTypeEnum -> Maybe ChangeTypeEnum -> MergeOperations

-- | Create a value of <a>MergeOperations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:MergeOperations'</a>,
--   <a>mergeOperations_destination</a> - The operation on a file in the
--   destination of a merge or pull request.
--   
--   <a>$sel:source:MergeOperations'</a>, <a>mergeOperations_source</a> -
--   The operation (add, modify, or delete) on a file in the source of a
--   merge or pull request.
newMergeOperations :: MergeOperations

-- | Information about the type of an object in a merge operation.
--   
--   <i>See:</i> <a>newObjectTypes</a> smart constructor.
data ObjectTypes
ObjectTypes' :: Maybe ObjectTypeEnum -> Maybe ObjectTypeEnum -> Maybe ObjectTypeEnum -> ObjectTypes

-- | Create a value of <a>ObjectTypes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:ObjectTypes'</a>, <a>objectTypes_destination</a> -
--   The type of the object in the destination branch.
--   
--   <a>$sel:base:ObjectTypes'</a>, <a>objectTypes_base</a> - The type of
--   the object in the base commit of the merge.
--   
--   <a>$sel:source:ObjectTypes'</a>, <a>objectTypes_source</a> - The type
--   of the object in the source branch.
newObjectTypes :: ObjectTypes

-- | Returns information about the template that created the approval rule
--   for a pull request.
--   
--   <i>See:</i> <a>newOriginApprovalRuleTemplate</a> smart constructor.
data OriginApprovalRuleTemplate
OriginApprovalRuleTemplate' :: Maybe Text -> Maybe Text -> OriginApprovalRuleTemplate

-- | Create a value of <a>OriginApprovalRuleTemplate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRuleTemplateId:OriginApprovalRuleTemplate'</a>,
--   <a>originApprovalRuleTemplate_approvalRuleTemplateId</a> - The ID of
--   the template that created the approval rule.
--   
--   <a>$sel:approvalRuleTemplateName:OriginApprovalRuleTemplate'</a>,
--   <a>originApprovalRuleTemplate_approvalRuleTemplateName</a> - The name
--   of the template that created the approval rule.
newOriginApprovalRuleTemplate :: OriginApprovalRuleTemplate

-- | Returns information about a pull request.
--   
--   <i>See:</i> <a>newPullRequest</a> smart constructor.
data PullRequest
PullRequest' :: Maybe [ApprovalRule] -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe PullRequestStatusEnum -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe [PullRequestTarget] -> Maybe Text -> PullRequest

-- | Create a value of <a>PullRequest</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:approvalRules:PullRequest'</a>,
--   <a>pullRequest_approvalRules</a> - The approval rules applied to the
--   pull request.
--   
--   <a>$sel:authorArn:PullRequest'</a>, <a>pullRequest_authorArn</a> - The
--   Amazon Resource Name (ARN) of the user who created the pull request.
--   
--   <a>$sel:pullRequestId:PullRequest'</a>,
--   <a>pullRequest_pullRequestId</a> - The system-generated ID of the pull
--   request.
--   
--   <a>$sel:creationDate:PullRequest'</a>, <a>pullRequest_creationDate</a>
--   - The date and time the pull request was originally created, in
--   timestamp format.
--   
--   <a>$sel:pullRequestStatus:PullRequest'</a>,
--   <a>pullRequest_pullRequestStatus</a> - The status of the pull request.
--   Pull request status can only change from <tt>OPEN</tt> to
--   <tt>CLOSED</tt>.
--   
--   <a>$sel:title:PullRequest'</a>, <a>pullRequest_title</a> - The
--   user-defined title of the pull request. This title is displayed in the
--   list of pull requests to other repository users.
--   
--   <a>$sel:clientRequestToken:PullRequest'</a>,
--   <a>pullRequest_clientRequestToken</a> - A unique, client-generated
--   idempotency token that, when provided in a request, ensures the
--   request cannot be repeated with a changed parameter. If a request is
--   received with the same parameters and a token is included, the request
--   returns information about the initial request that used that token.
--   
--   <a>$sel:lastActivityDate:PullRequest'</a>,
--   <a>pullRequest_lastActivityDate</a> - The day and time of the last
--   user or system activity on the pull request, in timestamp format.
--   
--   <a>$sel:revisionId:PullRequest'</a>, <a>pullRequest_revisionId</a> -
--   The system-generated revision ID for the pull request.
--   
--   <a>$sel:pullRequestTargets:PullRequest'</a>,
--   <a>pullRequest_pullRequestTargets</a> - The targets of the pull
--   request, including the source branch and destination branch for the
--   pull request.
--   
--   <a>$sel:description:PullRequest'</a>, <a>pullRequest_description</a> -
--   The user-defined description of the pull request. This description can
--   be used to clarify what should be reviewed and other details of the
--   request.
newPullRequest :: PullRequest

-- | Metadata about the pull request that is used when comparing the pull
--   request source with its destination.
--   
--   <i>See:</i> <a>newPullRequestCreatedEventMetadata</a> smart
--   constructor.
data PullRequestCreatedEventMetadata
PullRequestCreatedEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestCreatedEventMetadata

-- | Create a value of <a>PullRequestCreatedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationCommitId:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_destinationCommitId</a> - The
--   commit ID of the tip of the branch specified as the destination branch
--   when the pull request was created.
--   
--   <a>$sel:mergeBase:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_mergeBase</a> - The commit ID of
--   the most recent commit that the source branch and the destination
--   branch have in common.
--   
--   <a>$sel:repositoryName:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_repositoryName</a> - The name of
--   the repository where the pull request was created.
--   
--   <a>$sel:sourceCommitId:PullRequestCreatedEventMetadata'</a>,
--   <a>pullRequestCreatedEventMetadata_sourceCommitId</a> - The commit ID
--   on the source branch used when the pull request was created.
newPullRequestCreatedEventMetadata :: PullRequestCreatedEventMetadata

-- | Returns information about a pull request event.
--   
--   <i>See:</i> <a>newPullRequestEvent</a> smart constructor.
data PullRequestEvent
PullRequestEvent' :: Maybe PullRequestMergedStateChangedEventMetadata -> Maybe PullRequestCreatedEventMetadata -> Maybe ApprovalRuleEventMetadata -> Maybe PullRequestEventType -> Maybe PullRequestStatusChangedEventMetadata -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe ApprovalStateChangedEventMetadata -> Maybe PullRequestSourceReferenceUpdatedEventMetadata -> Maybe ApprovalRuleOverriddenEventMetadata -> PullRequestEvent

-- | Create a value of <a>PullRequestEvent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:pullRequestMergedStateChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestMergedStateChangedEventMetadata</a> -
--   Information about the change in mergability state for the pull request
--   event.
--   
--   <a>$sel:pullRequestCreatedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestCreatedEventMetadata</a> - Information
--   about the source and destination branches for the pull request.
--   
--   <a>$sel:approvalRuleEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalRuleEventMetadata</a> - Information about
--   a pull request event.
--   
--   <a>$sel:pullRequestEventType:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestEventType</a> - The type of the pull
--   request event (for example, a status change event
--   (PULL_REQUEST_STATUS_CHANGED) or update event
--   (PULL_REQUEST_SOURCE_REFERENCE_UPDATED)).
--   
--   <a>$sel:pullRequestStatusChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestStatusChangedEventMetadata</a> -
--   Information about the change in status for the pull request event.
--   
--   <a>$sel:actorArn:PullRequestEvent'</a>,
--   <a>pullRequestEvent_actorArn</a> - The Amazon Resource Name (ARN) of
--   the user whose actions resulted in the event. Examples include
--   updating the pull request with more commits or changing the status of
--   a pull request.
--   
--   <a>$sel:pullRequestId:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestId</a> - The system-generated ID of the
--   pull request.
--   
--   <a>$sel:eventDate:PullRequestEvent'</a>,
--   <a>pullRequestEvent_eventDate</a> - The day and time of the pull
--   request event, in timestamp format.
--   
--   <a>$sel:approvalStateChangedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalStateChangedEventMetadata</a> -
--   Information about an approval state change for a pull request.
--   
--   
--   <a>$sel:pullRequestSourceReferenceUpdatedEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_pullRequestSourceReferenceUpdatedEventMetadata</a>
--   - Information about the updated source branch for the pull request
--   event.
--   
--   <a>$sel:approvalRuleOverriddenEventMetadata:PullRequestEvent'</a>,
--   <a>pullRequestEvent_approvalRuleOverriddenEventMetadata</a> -
--   Information about an approval rule override event for a pull request.
newPullRequestEvent :: PullRequestEvent

-- | Returns information about the change in the merge state for a pull
--   request event.
--   
--   <i>See:</i> <a>newPullRequestMergedStateChangedEventMetadata</a> smart
--   constructor.
data PullRequestMergedStateChangedEventMetadata
PullRequestMergedStateChangedEventMetadata' :: Maybe Text -> Maybe MergeMetadata -> Maybe Text -> PullRequestMergedStateChangedEventMetadata

-- | Create a value of <a>PullRequestMergedStateChangedEventMetadata</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:destinationReference:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_destinationReference</a>
--   - The name of the branch that the pull request is merged into.
--   
--   <a>$sel:mergeMetadata:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_mergeMetadata</a> -
--   Information about the merge state change event.
--   
--   
--   <a>$sel:repositoryName:PullRequestMergedStateChangedEventMetadata'</a>,
--   <a>pullRequestMergedStateChangedEventMetadata_repositoryName</a> - The
--   name of the repository where the pull request was created.
newPullRequestMergedStateChangedEventMetadata :: PullRequestMergedStateChangedEventMetadata

-- | Information about an update to the source branch of a pull request.
--   
--   <i>See:</i> <a>newPullRequestSourceReferenceUpdatedEventMetadata</a>
--   smart constructor.
data PullRequestSourceReferenceUpdatedEventMetadata
PullRequestSourceReferenceUpdatedEventMetadata' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestSourceReferenceUpdatedEventMetadata

-- | Create a value of
--   <a>PullRequestSourceReferenceUpdatedEventMetadata</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:afterCommitId:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_afterCommitId</a> -
--   The full commit ID of the commit in the source branch that was the tip
--   of the branch at the time the pull request was updated.
--   
--   
--   <a>$sel:beforeCommitId:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_beforeCommitId</a> -
--   The full commit ID of the commit in the destination branch that was
--   the tip of the branch at the time the pull request was updated.
--   
--   <a>$sel:mergeBase:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_mergeBase</a> - The
--   commit ID of the most recent commit that the source branch and the
--   destination branch have in common.
--   
--   
--   <a>$sel:repositoryName:PullRequestSourceReferenceUpdatedEventMetadata'</a>,
--   <a>pullRequestSourceReferenceUpdatedEventMetadata_repositoryName</a> -
--   The name of the repository where the pull request was updated.
newPullRequestSourceReferenceUpdatedEventMetadata :: PullRequestSourceReferenceUpdatedEventMetadata

-- | Information about a change to the status of a pull request.
--   
--   <i>See:</i> <a>newPullRequestStatusChangedEventMetadata</a> smart
--   constructor.
data PullRequestStatusChangedEventMetadata
PullRequestStatusChangedEventMetadata' :: Maybe PullRequestStatusEnum -> PullRequestStatusChangedEventMetadata

-- | Create a value of <a>PullRequestStatusChangedEventMetadata</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pullRequestStatus:PullRequestStatusChangedEventMetadata'</a>,
--   <a>pullRequestStatusChangedEventMetadata_pullRequestStatus</a> - The
--   changed status of the pull request.
newPullRequestStatusChangedEventMetadata :: PullRequestStatusChangedEventMetadata

-- | Returns information about a pull request target.
--   
--   <i>See:</i> <a>newPullRequestTarget</a> smart constructor.
data PullRequestTarget
PullRequestTarget' :: Maybe Text -> Maybe Text -> Maybe MergeMetadata -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> PullRequestTarget

-- | Create a value of <a>PullRequestTarget</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceCommit:PullRequestTarget'</a>,
--   <a>pullRequestTarget_sourceCommit</a> - The full commit ID of the tip
--   of the source branch used to create the pull request. If the pull
--   request branch is updated by a push while the pull request is open,
--   the commit ID changes to reflect the new tip of the branch.
--   
--   <a>$sel:destinationReference:PullRequestTarget'</a>,
--   <a>pullRequestTarget_destinationReference</a> - The branch of the
--   repository where the pull request changes are merged. Also known as
--   the destination branch.
--   
--   <a>$sel:mergeMetadata:PullRequestTarget'</a>,
--   <a>pullRequestTarget_mergeMetadata</a> - Returns metadata about the
--   state of the merge, including whether the merge has been made.
--   
--   <a>$sel:mergeBase:PullRequestTarget'</a>,
--   <a>pullRequestTarget_mergeBase</a> - The commit ID of the most recent
--   commit that the source branch and the destination branch have in
--   common.
--   
--   <a>$sel:destinationCommit:PullRequestTarget'</a>,
--   <a>pullRequestTarget_destinationCommit</a> - The full commit ID that
--   is the tip of the destination branch. This is the commit where the
--   pull request was or will be merged.
--   
--   <a>$sel:repositoryName:PullRequestTarget'</a>,
--   <a>pullRequestTarget_repositoryName</a> - The name of the repository
--   that contains the pull request source and destination branches.
--   
--   <a>$sel:sourceReference:PullRequestTarget'</a>,
--   <a>pullRequestTarget_sourceReference</a> - The branch of the
--   repository that contains the changes for the pull request. Also known
--   as the source branch.
newPullRequestTarget :: PullRequestTarget

-- | Information about a file added or updated as part of a commit.
--   
--   <i>See:</i> <a>newPutFileEntry</a> smart constructor.
data PutFileEntry
PutFileEntry' :: Maybe Base64 -> Maybe FileModeTypeEnum -> Maybe SourceFileSpecifier -> Text -> PutFileEntry

-- | Create a value of <a>PutFileEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileContent:PutFileEntry'</a>, <a>putFileEntry_fileContent</a>
--   - The content of the file, if a source file is not specified.-- --
--   <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:fileMode:PutFileEntry'</a>, <a>putFileEntry_fileMode</a> - The
--   extrapolated file mode permissions for the file. Valid values include
--   EXECUTABLE and NORMAL.
--   
--   <a>$sel:sourceFile:PutFileEntry'</a>, <a>putFileEntry_sourceFile</a> -
--   The name and full path of the file that contains the changes you want
--   to make as part of the commit, if you are not providing the file
--   content directly.
--   
--   <a>$sel:filePath:PutFileEntry'</a>, <a>putFileEntry_filePath</a> - The
--   full path to the file in the repository, including the name of the
--   file.
newPutFileEntry :: Text -> PutFileEntry

-- | Information about the reaction values provided by users on a comment.
--   
--   <i>See:</i> <a>newReactionForComment</a> smart constructor.
data ReactionForComment
ReactionForComment' :: Maybe [Text] -> Maybe Int -> Maybe ReactionValueFormats -> ReactionForComment

-- | Create a value of <a>ReactionForComment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reactionUsers:ReactionForComment'</a>,
--   <a>reactionForComment_reactionUsers</a> - The Amazon Resource Names
--   (ARNs) of users who have provided reactions to the comment.
--   
--   <a>$sel:reactionsFromDeletedUsersCount:ReactionForComment'</a>,
--   <a>reactionForComment_reactionsFromDeletedUsersCount</a> - A numerical
--   count of users who reacted with the specified emoji whose identities
--   have been subsequently deleted from IAM. While these IAM users or
--   roles no longer exist, the reactions might still appear in total
--   reaction counts.
--   
--   <a>$sel:reaction:ReactionForComment'</a>,
--   <a>reactionForComment_reaction</a> - The reaction for a specified
--   comment.
newReactionForComment :: ReactionForComment

-- | Information about the values for reactions to a comment. AWS
--   CodeCommit supports a limited set of reactions.
--   
--   <i>See:</i> <a>newReactionValueFormats</a> smart constructor.
data ReactionValueFormats
ReactionValueFormats' :: Maybe Text -> Maybe Text -> Maybe Text -> ReactionValueFormats

-- | Create a value of <a>ReactionValueFormats</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:emoji:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_emoji</a> - The Emoji Version 1.0 graphic of
--   the reaction. These graphics are interpreted slightly differently on
--   different operating systems.
--   
--   <a>$sel:shortCode:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_shortCode</a> - The emoji short code for the
--   reaction. Short codes are interpreted slightly differently on
--   different operating systems.
--   
--   <a>$sel:unicode:ReactionValueFormats'</a>,
--   <a>reactionValueFormats_unicode</a> - The Unicode codepoint for the
--   reaction.
newReactionValueFormats :: ReactionValueFormats

-- | Information about a replacement content entry in the conflict of a
--   merge or pull request operation.
--   
--   <i>See:</i> <a>newReplaceContentEntry</a> smart constructor.
data ReplaceContentEntry
ReplaceContentEntry' :: Maybe FileModeTypeEnum -> Maybe Base64 -> Text -> ReplacementTypeEnum -> ReplaceContentEntry

-- | Create a value of <a>ReplaceContentEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileMode:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_fileMode</a> - The file mode to apply during
--   conflict resoltion.
--   
--   <a>$sel:content:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_content</a> - The base-64 encoded content to
--   use when the replacement type is USE_NEW_CONTENT.-- -- <i>Note:</i>
--   This <tt>Lens</tt> automatically encodes and decodes Base64 data. --
--   The underlying isomorphism will encode to Base64 representation during
--   -- serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:filePath:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_filePath</a> - The path of the conflicting
--   file.
--   
--   <a>$sel:replacementType:ReplaceContentEntry'</a>,
--   <a>replaceContentEntry_replacementType</a> - The replacement type to
--   use when determining how to resolve the conflict.
newReplaceContentEntry :: Text -> ReplacementTypeEnum -> ReplaceContentEntry

-- | Information about a repository.
--   
--   <i>See:</i> <a>newRepositoryMetadata</a> smart constructor.
data RepositoryMetadata
RepositoryMetadata' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> RepositoryMetadata

-- | Create a value of <a>RepositoryMetadata</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryDescription:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryDescription</a> - A comment or
--   description about the repository.
--   
--   <a>$sel:lastModifiedDate:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_lastModifiedDate</a> - The date and time the
--   repository was last modified, in timestamp format.
--   
--   <a>$sel:arn:RepositoryMetadata'</a>, <a>repositoryMetadata_arn</a> -
--   The Amazon Resource Name (ARN) of the repository.
--   
--   <a>$sel:cloneUrlHttp:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_cloneUrlHttp</a> - The URL to use for cloning
--   the repository over HTTPS.
--   
--   <a>$sel:accountId:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_accountId</a> - The ID of the AWS account
--   associated with the repository.
--   
--   <a>$sel:defaultBranch:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_defaultBranch</a> - The repository's default
--   branch name.
--   
--   <a>$sel:repositoryId:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryId</a> - The ID of the repository.
--   
--   <a>$sel:repositoryName:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_repositoryName</a> - The repository's name.
--   
--   <a>$sel:creationDate:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_creationDate</a> - The date and time the
--   repository was created, in timestamp format.
--   
--   <a>$sel:cloneUrlSsh:RepositoryMetadata'</a>,
--   <a>repositoryMetadata_cloneUrlSsh</a> - The URL to use for cloning the
--   repository over SSH.
newRepositoryMetadata :: RepositoryMetadata

-- | Information about a repository name and ID.
--   
--   <i>See:</i> <a>newRepositoryNameIdPair</a> smart constructor.
data RepositoryNameIdPair
RepositoryNameIdPair' :: Maybe Text -> Maybe Text -> RepositoryNameIdPair

-- | Create a value of <a>RepositoryNameIdPair</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryId:RepositoryNameIdPair'</a>,
--   <a>repositoryNameIdPair_repositoryId</a> - The ID associated with the
--   repository.
--   
--   <a>$sel:repositoryName:RepositoryNameIdPair'</a>,
--   <a>repositoryNameIdPair_repositoryName</a> - The name associated with
--   the repository.
newRepositoryNameIdPair :: RepositoryNameIdPair

-- | Information about a trigger for a repository.
--   
--   <i>See:</i> <a>newRepositoryTrigger</a> smart constructor.
data RepositoryTrigger
RepositoryTrigger' :: Maybe [Text] -> Maybe Text -> Text -> Text -> [RepositoryTriggerEventEnum] -> RepositoryTrigger

-- | Create a value of <a>RepositoryTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:branches:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_branches</a> - The branches to be included in the
--   trigger configuration. If you specify an empty array, the trigger
--   applies to all branches.
--   
--   Although no content is required in the array, you must include the
--   array itself.
--   
--   <a>$sel:customData:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_customData</a> - Any custom data associated with
--   the trigger to be included in the information sent to the target of
--   the trigger.
--   
--   <a>$sel:name:RepositoryTrigger'</a>, <a>repositoryTrigger_name</a> -
--   The name of the trigger.
--   
--   <a>$sel:destinationArn:RepositoryTrigger'</a>,
--   <a>repositoryTrigger_destinationArn</a> - The ARN of the resource that
--   is the target for a trigger (for example, the ARN of a topic in Amazon
--   SNS).
--   
--   <a>$sel:events:RepositoryTrigger'</a>, <a>repositoryTrigger_events</a>
--   - The repository events that cause the trigger to run actions in
--   another service, such as sending a notification through Amazon SNS.
--   
--   The valid value "all" cannot be used with any other values.
newRepositoryTrigger :: Text -> Text -> RepositoryTrigger

-- | A trigger failed to run.
--   
--   <i>See:</i> <a>newRepositoryTriggerExecutionFailure</a> smart
--   constructor.
data RepositoryTriggerExecutionFailure
RepositoryTriggerExecutionFailure' :: Maybe Text -> Maybe Text -> RepositoryTriggerExecutionFailure

-- | Create a value of <a>RepositoryTriggerExecutionFailure</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureMessage:RepositoryTriggerExecutionFailure'</a>,
--   <a>repositoryTriggerExecutionFailure_failureMessage</a> - Message
--   information about the trigger that did not run.
--   
--   <a>$sel:trigger:RepositoryTriggerExecutionFailure'</a>,
--   <a>repositoryTriggerExecutionFailure_trigger</a> - The name of the
--   trigger that did not run.
newRepositoryTriggerExecutionFailure :: RepositoryTriggerExecutionFailure

-- | Information about the file mode changes.
--   
--   <i>See:</i> <a>newSetFileModeEntry</a> smart constructor.
data SetFileModeEntry
SetFileModeEntry' :: Text -> FileModeTypeEnum -> SetFileModeEntry

-- | Create a value of <a>SetFileModeEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filePath:SetFileModeEntry'</a>,
--   <a>setFileModeEntry_filePath</a> - The full path to the file,
--   including the name of the file.
--   
--   <a>$sel:fileMode:SetFileModeEntry'</a>,
--   <a>setFileModeEntry_fileMode</a> - The file mode for the file.
newSetFileModeEntry :: Text -> FileModeTypeEnum -> SetFileModeEntry

-- | Information about a source file that is part of changes made in a
--   commit.
--   
--   <i>See:</i> <a>newSourceFileSpecifier</a> smart constructor.
data SourceFileSpecifier
SourceFileSpecifier' :: Maybe Bool -> Text -> SourceFileSpecifier

-- | Create a value of <a>SourceFileSpecifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:isMove:SourceFileSpecifier'</a>,
--   <a>sourceFileSpecifier_isMove</a> - Whether to remove the source file
--   from the parent commit.
--   
--   <a>$sel:filePath:SourceFileSpecifier'</a>,
--   <a>sourceFileSpecifier_filePath</a> - The full path to the file,
--   including the name of the file.
newSourceFileSpecifier :: Text -> SourceFileSpecifier

-- | Returns information about a submodule reference in a repository
--   folder.
--   
--   <i>See:</i> <a>newSubModule</a> smart constructor.
data SubModule
SubModule' :: Maybe Text -> Maybe Text -> Maybe Text -> SubModule

-- | Create a value of <a>SubModule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:commitId:SubModule'</a>, <a>subModule_commitId</a> - The
--   commit ID that contains the reference to the submodule.
--   
--   <a>$sel:absolutePath:SubModule'</a>, <a>subModule_absolutePath</a> -
--   The fully qualified path to the folder that contains the reference to
--   the submodule.
--   
--   <a>$sel:relativePath:SubModule'</a>, <a>subModule_relativePath</a> -
--   The relative path of the submodule from the folder where the query
--   originated.
newSubModule :: SubModule

-- | Returns information about a symbolic link in a repository folder.
--   
--   <i>See:</i> <a>newSymbolicLink</a> smart constructor.
data SymbolicLink
SymbolicLink' :: Maybe Text -> Maybe FileModeTypeEnum -> Maybe Text -> Maybe Text -> SymbolicLink

-- | Create a value of <a>SymbolicLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:absolutePath:SymbolicLink'</a>,
--   <a>symbolicLink_absolutePath</a> - The fully qualified path to the
--   folder that contains the symbolic link.
--   
--   <a>$sel:fileMode:SymbolicLink'</a>, <a>symbolicLink_fileMode</a> - The
--   file mode permissions of the blob that cotains information about the
--   symbolic link.
--   
--   <a>$sel:blobId:SymbolicLink'</a>, <a>symbolicLink_blobId</a> - The
--   blob ID that contains the information about the symbolic link.
--   
--   <a>$sel:relativePath:SymbolicLink'</a>,
--   <a>symbolicLink_relativePath</a> - The relative path of the symbolic
--   link from the folder where the query originated.
newSymbolicLink :: SymbolicLink

-- | Returns information about a target for a pull request.
--   
--   <i>See:</i> <a>newTarget</a> smart constructor.
data Target
Target' :: Maybe Text -> Text -> Text -> Target

-- | Create a value of <a>Target</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destinationReference:Target'</a>,
--   <a>target_destinationReference</a> - The branch of the repository
--   where the pull request changes are merged. Also known as the
--   destination branch.
--   
--   <a>$sel:repositoryName:Target'</a>, <a>target_repositoryName</a> - The
--   name of the repository that contains the pull request.
--   
--   <a>$sel:sourceReference:Target'</a>, <a>target_sourceReference</a> -
--   The branch of the repository that contains the changes for the pull
--   request. Also known as the source branch.
newTarget :: Text -> Text -> Target

-- | Information about the user who made a specified commit.
--   
--   <i>See:</i> <a>newUserInfo</a> smart constructor.
data UserInfo
UserInfo' :: Maybe Text -> Maybe Text -> Maybe Text -> UserInfo

-- | Create a value of <a>UserInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:email:UserInfo'</a>, <a>userInfo_email</a> - The email address
--   associated with the user who made the commit, if any.
--   
--   <a>$sel:date:UserInfo'</a>, <a>userInfo_date</a> - The date when the
--   specified commit was commited, in timestamp format with GMT offset.
--   
--   <a>$sel:name:UserInfo'</a>, <a>userInfo_name</a> - The name of the
--   user who made the specified commit.
newUserInfo :: UserInfo
